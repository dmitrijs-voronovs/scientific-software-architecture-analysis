id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://github.com/root-project/root/tree/v6-32-06/.ci/get_solved_issues-github-actions.py:142,Deployability,release,release,142,"#! /usr/bin/env python; #; # Harvest the solved issues for a certain tag and print them out in a format; # which is ready to be pasted in the release notes.; #; # Copyright (c) 2024 Rene Brun and Fons Rademakers; # Author: Enrico Guiraud, Axel Naumann, Danilo Piparo",MatchSource.CODE_COMMENT,.ci/get_solved_issues-github-actions.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.ci/get_solved_issues-github-actions.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:174,Integrability,wrap,wrapper,174,"""""""This mainly functions as a shell script, but python is used for its; superior control flow. An important requirement of the CI is easily; reproducible builds, therefore a wrapper is made for running shell; commands so that they are also logged. The log is printed when build fails/succeeds and needs to perfectly; reproduce the build when pasted into a shell. Therefore all file system; modifying code not executed from shell needs a shell equivalent; explicitly appended to the shell log.; e.g. `os.chdir(x)` requires `cd x` to be appended to the shell log """"""",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:240,Testability,log,logged,240,"""""""This mainly functions as a shell script, but python is used for its; superior control flow. An important requirement of the CI is easily; reproducible builds, therefore a wrapper is made for running shell; commands so that they are also logged. The log is printed when build fails/succeeds and needs to perfectly; reproduce the build when pasted into a shell. Therefore all file system; modifying code not executed from shell needs a shell equivalent; explicitly appended to the shell log.; e.g. `os.chdir(x)` requires `cd x` to be appended to the shell log """"""",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:252,Testability,log,log,252,"""""""This mainly functions as a shell script, but python is used for its; superior control flow. An important requirement of the CI is easily; reproducible builds, therefore a wrapper is made for running shell; commands so that they are also logged. The log is printed when build fails/succeeds and needs to perfectly; reproduce the build when pasted into a shell. Therefore all file system; modifying code not executed from shell needs a shell equivalent; explicitly appended to the shell log.; e.g. `os.chdir(x)` requires `cd x` to be appended to the shell log """"""",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:488,Testability,log,log,488,"""""""This mainly functions as a shell script, but python is used for its; superior control flow. An important requirement of the CI is easily; reproducible builds, therefore a wrapper is made for running shell; commands so that they are also logged. The log is printed when build fails/succeeds and needs to perfectly; reproduce the build when pasted into a shell. Therefore all file system; modifying code not executed from shell needs a shell equivalent; explicitly appended to the shell log.; e.g. `os.chdir(x)` requires `cd x` to be appended to the shell log """"""",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:557,Testability,log,log,557,"""""""This mainly functions as a shell script, but python is used for its; superior control flow. An important requirement of the CI is easily; reproducible builds, therefore a wrapper is made for running shell; commands so that they are also logged. The log is printed when build fails/succeeds and needs to perfectly; reproduce the build when pasted into a shell. Therefore all file system; modifying code not executed from shell needs a shell equivalent; explicitly appended to the shell log.; e.g. `os.chdir(x)` requires `cd x` to be appended to the shell log """"""",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:11,Availability,down,downloads,11,"# Used for downloads",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:52,Modifiability,config,config,52,"# Load CMake options from .github/workflows/root-ci-config/buildconfig/[platform].txt",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:2,Performance,Load,Load,2,"# Load CMake options from .github/workflows/root-ci-config/buildconfig/[platform].txt",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:6,Security,hash,hash,6,"# The hash of the build option string is used to find existing artifacts; # with matching build options on s3 storage.",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:7,Testability,test,testing,7,"# Make testing of CI in forks not impact artifacts",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:113,Deployability,patch,patches,113,"# Build artifacts should only be uploaded for full builds, and only for; # ""official"" branches (master, v?-??-??-patches), i.e. not for pull_request; # We also want to upload any successful build, even if it fails testing; # later on.",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:214,Testability,test,testing,214,"# Build artifacts should only be uploaded for full builds, and only for; # ""official"" branches (master, v?-??-??-patches), i.e. not for pull_request; # We also want to upload any successful build, even if it fails testing; # later on.",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:59,Safety,safe,safe,59,"# runners should never have root permissions but be on the safe side",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:107,Deployability,release,release,107,"""""""; which cmake; cmake --version; which c++ || true; c++ --version || true; uname -a || true; cat /etc/os-release || true; sw_vers || true; uptime || true; df || true; """"""",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:47,Availability,failure,failures,47,"""""""; Just return the exit code in case of test failures instead of `die()`-ing; report test; failures in main().; """"""",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:93,Availability,failure,failures,93,"""""""; Just return the exit code in case of test failures instead of `die()`-ing; report test; failures in main().; """"""",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:42,Testability,test,test,42,"""""""; Just return the exit code in case of test failures instead of `die()`-ing; report test; failures in main().; """"""",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:87,Testability,test,test,87,"""""""; Just return the exit code in case of test failures instead of `die()`-ing; report test; failures in main().; """"""",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:21,Modifiability,config,config,21,"# Print CMake cached config",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:14,Performance,cache,cached,14,"# Print CMake cached config",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:40,Testability,log,log,40,"""""""; get_stdout_subprocess; execute and log a command.; capture the stdout, strip white space and return it; die in case of failed execution unless the error_message is empty.; """"""",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:66,Deployability,patch,patches,66,"# `current_head` is a well-known branch, e.g. master, or v6-28-00-patches. Use the matching branch; # upstream as the fork repository may be out-of-sync",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:8,Availability,error,error,8,"# Empty error means, ignore errors.",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:28,Availability,error,errors,28,"# Empty error means, ignore errors.",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_root.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_utils.py:10,Integrability,message,message,10,"""""""prints message using select graphic rendition, defaults to bold text; https://en.wikipedia.org/wiki/ANSI_escape_code#SGR_(Select_Graphic_Rendition)_parameters""""""",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_utils.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_utils.py:52,Testability,log,log,52,"""""""Runs <command> in shell and appends <command> to log""""""",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_utils.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_utils.py:68,Testability,log,log,68,"""""""Runs <command> in shell, capture output and appends <command> to log""""""",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_utils.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_utils.py:138,Testability,log,log,138,"# Since we are capturing the result and using it in other command later,; # we don't need it for the reproducing steps.; # So no call to: log.add(command)",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_utils.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_utils.py:3,Performance,Load,Loads,3,"""""""Loads cmake options from a file to a dictionary""""""",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_utils.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_utils.py:17,Security,hash,hash,17,"""""""Calculate the hash of the options string. If ""march=native"" is in the; list of options, make the preprocessor defines resulting from it part of; the hash.; """"""",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_utils.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_utils.py:152,Security,hash,hash,152,"""""""Calculate the hash of the options string. If ""march=native"" is in the; list of options, make the preprocessor defines resulting from it part of; the hash.; """"""",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_utils.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_utils.py:3,Availability,Down,Downloads,3,"""""""Downloads latest build artifact starting with <prefix>,; and returns the file path to the downloaded file and shell_log.""""""",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_utils.py
https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_utils.py:93,Availability,down,downloaded,93,"""""""Downloads latest build artifact starting with <prefix>,; and returns the file path to the downloaded file and shell_log.""""""",MatchSource.CODE_COMMENT,.github/workflows/root-ci-config/build_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/ComputationGraphGenerator.py:451,Safety,avoid,avoid,451,"""""""; The Snapshot operation can be made lazy by supplying an RSnapshotOptions; object with the 'fLazy' data member set to 'True'. Furthermore, the current; range id needs to be appended to the input file name so that the output data; from different tasks can be distinguished. Note:; Since the file name from the original operation needs to be changed, this; function makes a deep copy of it and returns the modified copy. This is; needed in order to avoid that a task may receive as input an operation that; was previously modified by another task. In that case, the file name would; contain the range id from the other task, thus leading to create a wrong; file name in this function.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/ComputationGraphGenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/ComputationGraphGenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/ComputationGraphGenerator.py:55,Performance,perform,performed,55,"""""""; Retrieves the concrete RDataFrame operation to be performed by; querying the 'parent_rdf_node'. Forces lazyness on any operation, so; they can be all chained before triggering the actual computation. Returns; both the call to the RDataFrame operation and the operation itself, which; are then needed when creating the list of result promises to return from; the mapper task.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/ComputationGraphGenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/ComputationGraphGenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/ComputationGraphGenerator.py:250,Deployability,release,released,250,"""""""; Trigger the computation graph. The list of actions to be performed is retrieved by calling; generate_computation_graph. Afterwards, the C++ RDF computation graph is; triggered through the `ROOT::Internal::RDF::TriggerRun` function with; the GIL released. Args:; graph: A representation of the computation graph. starting_node: The node where the generation of the; computation graph is started. Either an actual RDataFrame or the; result of a Range operation (in case of empty data source). range_id: The id of the current range. Needed to assign a; file name to a partial Snapshot if it was requested. Returns:; list: A list of objects that can be either used as or converted into; mergeable values.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/ComputationGraphGenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/ComputationGraphGenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/ComputationGraphGenerator.py:62,Performance,perform,performed,62,"""""""; Trigger the computation graph. The list of actions to be performed is retrieved by calling; generate_computation_graph. Afterwards, the C++ RDF computation graph is; triggered through the `ROOT::Internal::RDF::TriggerRun` function with; the GIL released. Args:; graph: A representation of the computation graph. starting_node: The node where the generation of the; computation graph is started. Either an actual RDataFrame or the; result of a Range operation (in case of empty data source). range_id: The id of the current range. Needed to assign a; file name to a partial Snapshot if it was requested. Returns:; list: A list of objects that can be either used as or converted into; mergeable values.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/ComputationGraphGenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/ComputationGraphGenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/ComputationGraphGenerator.py:11,Performance,cache,cache,11,"# Fill the cache with the future results",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/ComputationGraphGenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/ComputationGraphGenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/DataFrame.py:5,Integrability,Interface,Interface,5,"""""""; Interface to an RDataFrame that can run its computation graph distributedly.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/DataFrame.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/DataFrame.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:585,Availability,down,down,585,"# It is important to have a double-ended queue because we need to; # traverse the nodes in different ways w.r.t. their insertion order.; # While pruning the graph, we need to check leaf nodes before their; # parents, so if a child is pruned then it also decrements the counter; # of children of its parent. Thus, we need a bottom-up traversal.; # While executing the graph in a task, we need to create the RDF nodes; # in the order the user requested them, e.g. starting from the; # RDataFrame itself, then calling its direct children, their children; # and so on. Thus, we need a top-down traversal.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:41,Performance,queue,queue,41,"# It is important to have a double-ended queue because we need to; # traverse the nodes in different ways w.r.t. their insertion order.; # While pruning the graph, we need to check leaf nodes before their; # parents, so if a child is pruned then it also decrements the counter; # of children of its parent. Thus, we need a bottom-up traversal.; # While executing the graph in a task, we need to create the RDF nodes; # in the order the user requested them, e.g. starting from the; # RDataFrame itself, then calling its direct children, their children; # and so on. Thus, we need a top-down traversal.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:184,Deployability,update,updated,184,"# Internal attribute to keep track of the number of partitions. We also; # check whether it was specified by the user when creating the dataframe.; # If so, this attribute will not be updated when triggering.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:40,Security,expose,expose,40,"# Internal RDataFrame object, useful to expose information such as; # column names.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:114,Safety,avoid,avoiding,114,"""""""; Remove the reference to the local RDataFrame object as soon as this; object is garbage collected. This helps avoiding conflicts between; the garbage collector, the cppyy memory regulator and the C++ object; destructor.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:52,Deployability,update,updated,52,"""""""; The number of partitions for this dataframe is updated only if the user; did not initially specify one when creating the dataframe.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:115,Energy Efficiency,schedul,scheduler,115,"""""""; Generates a dictionary holding information about all nodes in the graph.; It is then given to the distributed scheduler.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:562,Energy Efficiency,reduce,reduced,562,"""""""; Executes an RDataFrame computation graph on a distributed backend. The needed ingredients are:. - A collection of logical ranges in which the dataset is split. Each; range is going to be assigned to a distributed task.; - A representation of the computation graph that the task needs to; execute.; - A way to generate an RDataFrame instance starting from the logical; range of the task.; - Optionally, some setup code to be run at the beginning of each task. These are used as inputs to a generic mapper function. Results from the; various mappers are then reduced and the final results are retrieved in; the local session. These are properly handled to perform extra checks,; depending on the data source. Finally, the local user-facing nodes are; filled with the values that were computed distributedly so that they; can be accessed in the application like with local RDataFrame.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:682,Integrability,depend,depending,682,"""""""; Executes an RDataFrame computation graph on a distributed backend. The needed ingredients are:. - A collection of logical ranges in which the dataset is split. Each; range is going to be assigned to a distributed task.; - A representation of the computation graph that the task needs to; execute.; - A way to generate an RDataFrame instance starting from the logical; range of the task.; - Optionally, some setup code to be run at the beginning of each task. These are used as inputs to a generic mapper function. Results from the; various mappers are then reduced and the final results are retrieved in; the local session. These are properly handled to perform extra checks,; depending on the data source. Finally, the local user-facing nodes are; filled with the values that were computed distributedly so that they; can be accessed in the application like with local RDataFrame.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:659,Performance,perform,perform,659,"""""""; Executes an RDataFrame computation graph on a distributed backend. The needed ingredients are:. - A collection of logical ranges in which the dataset is split. Each; range is going to be assigned to a distributed task.; - A representation of the computation graph that the task needs to; execute.; - A way to generate an RDataFrame instance starting from the logical; range of the task.; - Optionally, some setup code to be run at the beginning of each task. These are used as inputs to a generic mapper function. Results from the; various mappers are then reduced and the final results are retrieved in; the local session. These are properly handled to perform extra checks,; depending on the data source. Finally, the local user-facing nodes are; filled with the values that were computed distributedly so that they; can be accessed in the application like with local RDataFrame.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:831,Security,access,accessed,831,"""""""; Executes an RDataFrame computation graph on a distributed backend. The needed ingredients are:. - A collection of logical ranges in which the dataset is split. Each; range is going to be assigned to a distributed task.; - A representation of the computation graph that the task needs to; execute.; - A way to generate an RDataFrame instance starting from the logical; range of the task.; - Optionally, some setup code to be run at the beginning of each task. These are used as inputs to a generic mapper function. Results from the; various mappers are then reduced and the final results are retrieved in; the local session. These are properly handled to perform extra checks,; depending on the data source. Finally, the local user-facing nodes are; filled with the values that were computed distributedly so that they; can be accessed in the application like with local RDataFrame.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:119,Testability,log,logical,119,"""""""; Executes an RDataFrame computation graph on a distributed backend. The needed ingredients are:. - A collection of logical ranges in which the dataset is split. Each; range is going to be assigned to a distributed task.; - A representation of the computation graph that the task needs to; execute.; - A way to generate an RDataFrame instance starting from the logical; range of the task.; - Optionally, some setup code to be run at the beginning of each task. These are used as inputs to a generic mapper function. Results from the; various mappers are then reduced and the final results are retrieved in; the local session. These are properly handled to perform extra checks,; depending on the data source. Finally, the local user-facing nodes are; filled with the values that were computed distributedly so that they; can be accessed in the application like with local RDataFrame.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:364,Testability,log,logical,364,"""""""; Executes an RDataFrame computation graph on a distributed backend. The needed ingredients are:. - A collection of logical ranges in which the dataset is split. Each; range is going to be assigned to a distributed task.; - A representation of the computation graph that the task needs to; execute.; - A way to generate an RDataFrame instance starting from the logical; range of the task.; - Optionally, some setup code to be run at the beginning of each task. These are used as inputs to a generic mapper function. Results from the; various mappers are then reduced and the final results are retrieved in; the local session. These are properly handled to perform extra checks,; depending on the data source. Finally, the local user-facing nodes are; filled with the values that were computed distributedly so that they; can be accessed in the application like with local RDataFrame.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:255,Availability,avail,available,255,"# Updates the number of partitions for this dataframe if the user did; # not specify one initially. This is done each time the computations are; # triggered, in case the user changed the resource configuration; # between runs (e.g. changing the number of available cores).",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:2,Deployability,Update,Updates,2,"# Updates the number of partitions for this dataframe if the user did; # not specify one initially. This is done each time the computations are; # triggered, in case the user changed the resource configuration; # between runs (e.g. changing the number of available cores).",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:196,Deployability,configurat,configuration,196,"# Updates the number of partitions for this dataframe if the user did; # not specify one initially. This is done each time the computations are; # triggered, in case the user changed the resource configuration; # between runs (e.g. changing the number of available cores).",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:196,Modifiability,config,configuration,196,"# Updates the number of partitions for this dataframe if the user did; # not specify one initially. This is done each time the computations are; # triggered, in case the user changed the resource configuration; # between runs (e.g. changing the number of available cores).",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:51,Performance,cache,caches,51,"# Cleanup the current execution artifacts from the caches on the workers",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:2,Performance,Perform,Perform,2,"# Perform any extra checks that may be needed according to the; # type of the head node",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:87,Integrability,depend,depending,87,"""""""; A factory for different kinds of head nodes of the RDataFrame computation; graph, depending on the arguments to the RDataFrame constructor. Parses the; arguments and compares them against the possible RDataFrame constructors.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:113,Availability,robust,robust,113,"# TODO: This shouldn't be triggered if entries == 1. The current minimum; # amount of partitions is 2. We need a robust reducer that smartly; # becomes no-op if npartitions == 1 to avoid this.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:120,Energy Efficiency,reduce,reducer,120,"# TODO: This shouldn't be triggered if entries == 1. The current minimum; # amount of partitions is 2. We need a robust reducer that smartly; # becomes no-op if npartitions == 1 to avoid this.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:181,Safety,avoid,avoid,181,"# TODO: This shouldn't be triggered if entries == 1. The current minimum; # amount of partitions is 2. We need a robust reducer that smartly; # becomes no-op if npartitions == 1 to avoid this.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:208,Integrability,Depend,Depending,208,"# Compute clusters and entries of the first tree in the dataset.; # This will call once TFile::Open, but we pay this cost to get an estimate; # on whether the number of requested partitions is reasonable.; # Depending on the cluster setup, this may still be quite costly, so; # we decide to pay the price only if the user explicitly requested; # warning logging.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:354,Testability,log,logging,354,"# Compute clusters and entries of the first tree in the dataset.; # This will call once TFile::Open, but we pay this cost to get an estimate; # on whether the number of requested partitions is reasonable.; # Depending on the cluster setup, this may still be quite costly, so; # we decide to pay the price only if the user explicitly requested; # warning logging.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:117,Performance,cache,cache,117,"""""""; Adds info about friend trees to the input chain. Also aligns the; starting and ending entry of the friend chain cache to those of the; main chain.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:11,Performance,cache,cache,11,"# Fill the cache with the new RDataFrame",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:2,Deployability,Update,Update,2,"# Update it to the range of entries for this task",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:208,Integrability,Depend,Depending,208,"# Compute clusters and entries of the first tree in the dataset.; # This will call once TFile::Open, but we pay this cost to get an estimate; # on whether the number of requested partitions is reasonable.; # Depending on the cluster setup, this may still be quite costly, so; # we decide to pay the price only if the user explicitly requested; # warning logging.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:354,Testability,log,logging,354,"# Compute clusters and entries of the first tree in the dataset.; # This will call once TFile::Open, but we pay this cost to get an estimate; # on whether the number of requested partitions is reasonable.; # Depending on the cluster setup, this may still be quite costly, so; # we decide to pay the price only if the user explicitly requested; # warning logging.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:117,Performance,cache,cache,117,"""""""; Adds info about friend trees to the input chain. Also aligns the; starting and ending entry of the friend chain cache to those of the; main chain.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:11,Performance,cache,cache,11,"# Fill the cache with the new RDataFrame",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:2,Deployability,Update,Update,2,"# Update it to the range of entries for this task",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:213,Integrability,Inject,Inject,213,"# """"""Build the ranges for this dataset.""""""; # For the moment, we explicitly pass only one ""subname"", since there is; # only one name possible for the whole RNTuple; # TODO: implement action cloning for RNTuple; # Inject a sentinel flag in the execution identifier to specify this; # RDataFrame instance is going to process RNTuple data and the computation; # graph needs to be recreated at every task",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:213,Security,Inject,Inject,213,"# """"""Build the ranges for this dataset.""""""; # For the moment, we explicitly pass only one ""subname"", since there is; # only one name possible for the whole RNTuple; # TODO: implement action cloning for RNTuple; # Inject a sentinel flag in the execution identifier to specify this; # RDataFrame instance is going to process RNTuple data and the computation; # graph needs to be recreated at every task",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py:102,Deployability,update,updated,102,"""""""; Enables real-time data representation for the given drawable objects.; The objects are drawn and updated every time a partial result returns from distributed execution. Args:; drawable_callback_dict (dict): A dictionary where keys are drawable objects ; and values are optional corresponding callback functions. . global_callback (function): An optional global callback function that ; is applied to all drawable objects. Raises:; ValueError: If a passed drawable object is not valid.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py:71,Security,validat,validated,71,"# Key: node_id of the drawable object's proxied_node; # Value: List of validated callback functions for the drawable object",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py:5,Integrability,Wrap,Wrapper,5,"""""""; Wrapper function to facilitate calling LiveVisualize with a list or a tuple of drawable objects. Args:; drawables (list | tuple): Drawable objects to visualize.; 		; callback (function): An optional callback function to be applied to the drawable objects. Notes:; This function constructs a dictionary of drawable objects and their associated callback functions,; and then calls the main LiveVisualize function with the constructed dictionary.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py:17,Security,validat,validate,17,"""""""; Process and validate a callback function. Args:		; callback: The callback function to be validated. Returns:; validated_callback: The validated callback function, or None if not valid.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py:94,Security,validat,validated,94,"""""""; Process and validate a callback function. Args:		; callback: The callback function to be validated. Returns:; validated_callback: The validated callback function, or None if not valid.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py:139,Security,validat,validated,139,"""""""; Process and validate a callback function. Args:		; callback: The callback function to be validated. Returns:; validated_callback: The validated callback function, or None if not valid.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py:49,Safety,safe,safe,49,"""""""; Checks if the provided callback function is safe for live visualization, ; (does not contain blocked actions). Args:; callback (function): The callback function to check. Returns:; bool: True if the callback function is safe, ; False otherwise.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py:225,Safety,safe,safe,225,"""""""; Checks if the provided callback function is safe for live visualization, ; (does not contain blocked actions). Args:; callback (function): The callback function to check. Returns:; bool: True if the callback function is safe, ; False otherwise.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Node.py:2,Safety,Avoid,Avoid,2,"# Avoid circular imports",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Node.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Node.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Node.py:1156,Integrability,wrap,wraps,1156,"""""""; A Class that represents a node in RDataFrame operations graph. A Node; houses an operation and has references to children nodes. Attributes:; get_head: A function returning the head node in the graph. node_id: The id of this node, given sequentially in the order of; creation with respect to the head node of the graph. operation: The operation that this node represents. `None` if the node; is the head node. parent: A reference to the parent node of this node. `None` if the node; is the head node. nchildren: A counter of how many children this node has. _new_op_name (str): The name of the new incoming operation of the next; child, which is the last child node among the current node's; children. value: The computed value after executing the operation in the current; node for a particular DistRDF graph. This is permanently :obj:`None`; for transformation nodes and the action nodes get a; :obj:`ROOT.RResultPtr` after event-loop execution. has_user_references (bool): A flag to check whether the node has; direct user references, that is if it is assigned to a variable.; Default value is :obj:`True`, turns to :obj:`False` if the proxy; that wraps the node gets garbage collected by Python. rdf_node: A reference to the result of calling a function of the; RDataFrame API with the current operation. This is practically a; node of the true computation graph, which is being executed in some; distributed task. It is a transient attribute. On the client, it; is always None. The value is computed and stored only during a task; on a worker.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Node.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Node.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Node.py:1074,Modifiability,variab,variable,1074,"""""""; A Class that represents a node in RDataFrame operations graph. A Node; houses an operation and has references to children nodes. Attributes:; get_head: A function returning the head node in the graph. node_id: The id of this node, given sequentially in the order of; creation with respect to the head node of the graph. operation: The operation that this node represents. `None` if the node; is the head node. parent: A reference to the parent node of this node. `None` if the node; is the head node. nchildren: A counter of how many children this node has. _new_op_name (str): The name of the new incoming operation of the next; child, which is the last child node among the current node's; children. value: The computed value after executing the operation in the current; node for a particular DistRDF graph. This is permanently :obj:`None`; for transformation nodes and the action nodes get a; :obj:`ROOT.RResultPtr` after event-loop execution. has_user_references (bool): A flag to check whether the node has; direct user references, that is if it is assigned to a variable.; Default value is :obj:`True`, turns to :obj:`False` if the proxy; that wraps the node gets garbage collected by Python. rdf_node: A reference to the result of calling a function of the; RDataFrame API with the current operation. This is practically a; node of the true computation graph, which is being executed in some; distributed task. It is a transient attribute. On the client, it; is always None. The value is computed and stored only during a task; on a worker.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Node.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Node.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Node.py:132,Integrability,wrap,wrapped,132,"# ***** Condition 1 *****; # If the node does not have children, it might be prunable.; # ***** Condition 2 *****; # If the node is wrapped by a proxy which is not directly; # assigned to a variable, then it will be flagged for pruning; # ***** Condition 3 *****; # If the current node's value was already computed, it should; # get pruned. Only action nodes may possess a value attribute; # which is not None",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Node.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Node.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Node.py:190,Modifiability,variab,variable,190,"# ***** Condition 1 *****; # If the node does not have children, it might be prunable.; # ***** Condition 2 *****; # If the node is wrapped by a proxy which is not directly; # assigned to a variable, then it will be flagged for pruning; # ***** Condition 3 *****; # If the current node's value was already computed, it should; # get pruned. Only action nodes may possess a value attribute; # which is not None",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Node.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Node.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Operation.py:193,Safety,safe,safely,193,"# The histogram model can be passed as the keyword argument 'model'. All; # Histo*D specializations have the same name for this argument. If it is; # present, we know the execution can proceed safely.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Operation.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Operation.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py:199,Modifiability,variab,variable,199,"""""""; Factory function, decorated with `contextlib.contextmanager` to make it; work in a `with` context manager. It creates a `ROOT.TDirectory.TContext`; that will store the current `ROOT.gDirectory` variable. At the end of the; context, the C++ destructor of the `TContext` object will be explicitly; called, thanks to the `__destruct__` dunder method implemented in PyROOT.; This will restore the `gDirectory` variable to its initial value, allowing; changing it in the context manager without permanent effects.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py:411,Modifiability,variab,variable,411,"""""""; Factory function, decorated with `contextlib.contextmanager` to make it; work in a `with` context manager. It creates a `ROOT.TDirectory.TContext`; that will store the current `ROOT.gDirectory` variable. At the end of the; context, the C++ destructor of the `TContext` object will be explicitly; called, thanks to the `__destruct__` dunder method implemented in PyROOT.; This will restore the `gDirectory` variable to its initial value, allowing; changing it in the context manager without permanent effects.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py:85,Modifiability,variab,variable,85,"""""""; Abstract class for proxies objects. These objects help to keep track of; nodes' variable assignment. That is, when a node is no longer assigned; to a variable by the user, the role of the proxy is to show that. This is; done via changing the value of the :obj:`has_user_references` of the; proxied node from :obj:`True` to :obj:`False`.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py:155,Modifiability,variab,variable,155,"""""""; Abstract class for proxies objects. These objects help to keep track of; nodes' variable assignment. That is, when a node is no longer assigned; to a variable by the user, the role of the proxy is to show that. This is; done via changing the value of the :obj:`has_user_references` of the; proxied node from :obj:`True` to :obj:`False`.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py:112,Integrability,wrap,wrap,112,"""""""; Creates a new `Proxy` object for a given node. Args:; proxied_node: The node that the current Proxy should wrap.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py:117,Integrability,wrap,wrapped,117,"""""""; This function is called right before the current Proxy gets deleted by; Python. Its purpose is to show that the wrapped node has no more; user references, which is one of the conditions for the node to be; pruned from the computational graph.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py:255,Availability,error,error,255,"""""""; Equivalent of 'GetKeys' of the RResultMap. Unlike its C++ counterpart,; at the moment we cannot retrieve the list of variation names for a; certain action without triggering the distributed computation graph. For; this reason, the function raises an error if the keys are accessed; before computations have been triggered. In the future the behaviour; should be aligned with the C++ counterpart.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py:277,Security,access,accessed,277,"""""""; Equivalent of 'GetKeys' of the RResultMap. Unlike its C++ counterpart,; at the moment we cannot retrieve the list of variation names for a; certain action without triggering the distributed computation graph. For; this reason, the function raises an error if the keys are accessed; before computations have been triggered. In the future the behaviour; should be aligned with the C++ counterpart.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py:125,Energy Efficiency,charge,charge,125,"""""""; A proxy object to an non-action node. It implements acces to attributes; and methods of the proxied node. It is also in charge of the creation of; a new operation node in the graph. The aim is to mimic the functionality of; ROOT::RDF::RNode to provide the same API usage.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py:202,Security,access,access,202,"""""""; Intercepts calls to attributes and methods of the proxied node and; returns the appropriate object(s). Args:; attr (str): The name of the attribute or method of the proxied; node the user wants to access.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/PythonMergeables.py:137,Modifiability,extend,extends,137,"""""""; When calling Snapshot on a distributed worker, a list with the path to; the snapshotted file on the worker is stored. This function extends the; list of the current object with the elements from the list of the other; object.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/PythonMergeables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/PythonMergeables.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/PythonMergeables.py:371,Integrability,depend,depending,371,"""""""; With local RDataFrame, Snapshot returns another RDataFrame object that; can be used to continue the application. The equivalent in the; distributed scenario is to create a distributed RDataFrame. This is done by constructing a TChain with the name and the list of; paths stored in this object. The chain is then passed to the; `make_dataframe` function that changes depending on the backend. For example, if the original RDataFrame that triggered the distributed; computation was created via a Spark backend, then this function will; return another distributed RDataFrame build from a Spark backend; instance. And so on for all other DistRDF backends.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/PythonMergeables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/PythonMergeables.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py:61,Integrability,Depend,Depending,61,"""""""; A logical range of entries in which a dataset is split. Depending on the; input data source, this can have different attributes. Attributes:. exec_id: An identifier for the current execution. id: A sequential counter to identify this range.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Ranges.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py:7,Testability,log,logical,7,"""""""; A logical range of entries in which a dataset is split. Depending on the; input data source, this can have different attributes. Attributes:. exec_id: An identifier for the current execution. id: A sequential counter to identify this range.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Ranges.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py:250,Safety,sanity check,sanity check,250,"""""""; Entries corresponding to each tree assigned to a certain task, plus the; actual number of entries that task will be processing. This information will; be aggregated along with the main mergeable results in distributed; execution. It serves as a sanity check that exactly the total amount of; entries in the dataset is processed in the application.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Ranges.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py:115,Usability,simpl,simply,115,"# Compute which files are to be considered for the various tasks; # The indexes of starting files in each task are simply the list of files; # from above, except for the last value which corresponds to the end of the; # last file. Also, they are inclusive.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Ranges.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py:43,Integrability,depend,depend,43,"# The indexes of ending files in each task depend on what is the percentage; # considered for that file. Also, they are exclusive. When the percentage is; # zero, i.e. we are at a file boundary, we want to consider the whole; # (previous) file, we just take the file index (shifting the list by one).; # When the percentage is above zero, we increase the index (shifted by one); # by one to be able to consider also the current file.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Ranges.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py:276,Testability,log,logic,276,"# Find the corresponding clusters for the above values.; # The startcluster index is inclusive. bisect_left returns the index; # corresponding to the correct starting cluster only if startentry is; # exactly at the cluster boundary. The endcluster index is exclusive.; # This logic relies on the specific representation of the list of; # clusters that includes the initial entry (0) as well as the last; # cluster boundary.; # Examples:; # cluster 1: [10, 20]; # cluster 2: [20, 30]; # startentry = 10, endentry = 13 --> startcluster = 1, endcluster = 2; # startentry = 13, endentry = 16 --> startcluster = 2, endcluster = 2; # startentry = 16, endentry = 19 --> startcluster = 2, endcluster = 2; # startentry = 19, endentry = 22 --> startcluster = 2, endcluster = 3",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Ranges.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py:2,Safety,Avoid,Avoid,2,"# Avoid creating tasks that will do nothing",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Ranges.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py:226,Usability,usab,usable,226,"# This is an empty task. This can happen:; # - If all trees assigned to this task are empty.; # - If the computed starting cluster is equal to the ending cluster.; # These would effectively lead to creating a TChain with zero usable; # entries.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Ranges.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/_graph_cache.py:127,Security,hash,hashable,127,"""""""; A unique identifier for the current execution of the computation graph of; a particular RDataFrame instance. The class is hashable so it can be used; as a key in dictionaries. Attributes:. rdf_uuid: An identifier for the specific RDataFrame instance.; graph_uuid: An identifier for the computation graph sent to the workers for; the current execution.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/_graph_cache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/_graph_cache.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py:244,Integrability,inject,inject,244,"""""""; Set a function that will be executed as a first step on every backend before; any other operation. This method also executes the function on the current; user environment so changes are visible on the running session. This allows users to inject and execute custom code on the worker; environment without being part of the RDataFrame computational graph. Args:; fun (function): Function to be executed. *args (list): Variable length argument list used to execute the; function. **kwargs (dict): Keyword arguments used to execute the function.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py:422,Modifiability,Variab,Variable,422,"""""""; Set a function that will be executed as a first step on every backend before; any other operation. This method also executes the function on the current; user environment so changes are visible on the running session. This allows users to inject and execute custom code on the worker; environment without being part of the RDataFrame computational graph. Args:; fun (function): Function to be executed. *args (list): Variable length argument list used to execute the; function. **kwargs (dict): Keyword arguments used to execute the function.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py:244,Security,inject,inject,244,"""""""; Set a function that will be executed as a first step on every backend before; any other operation. This method also executes the function on the current; user environment so changes are visible on the running session. This allows users to inject and execute custom code on the worker; environment without being part of the RDataFrame computational graph. Args:; fun (function): Function to be executed. *args (list): Variable length argument list used to execute the; function. **kwargs (dict): Keyword arguments used to execute the function.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py:161,Performance,concurren,concurrently,161,"""""""; Trigger the execution of multiple RDataFrame computation graphs on a certain; distributed backend. If the backend doesn't support multiple job; submissions concurrently, the distributed computation graphs will be; executed sequentially. Args:; proxies(list): List of action proxies that should be triggered. Only; actions belonging to different RDataFrame graphs will be; triggered to avoid useless calls. Return:; (int): The number of unique computation graphs executed by this call. Example:. @code{.py}; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; RunGraphs = ROOT.RDF.Experimental.Distributed.RunGraphs. # Create 3 different dataframes and book an histogram on each one; histoproxies = [; RDataFrame(100); .Define(""x"", ""rdfentry_""); .Histo1D((""name"", ""title"", 10, 0, 100), ""x""); for _ in range(4); ]. # Execute the 3 computation graphs; n_graphs_run = RunGraphs(histoproxies); # Retrieve all the histograms in one go; histos = [histoproxy.GetValue() for histoproxy in histoproxies]; @endcode. """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py:390,Safety,avoid,avoid,390,"""""""; Trigger the execution of multiple RDataFrame computation graphs on a certain; distributed backend. If the backend doesn't support multiple job; submissions concurrently, the distributed computation graphs will be; executed sequentially. Args:; proxies(list): List of action proxies that should be triggered. Only; actions belonging to different RDataFrame graphs will be; triggered to avoid useless calls. Return:; (int): The number of unique computation graphs executed by this call. Example:. @code{.py}; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; RunGraphs = ROOT.RDF.Experimental.Distributed.RunGraphs. # Create 3 different dataframes and book an histogram on each one; histoproxies = [; RDataFrame(100); .Define(""x"", ""rdfentry_""); .Histo1D((""name"", ""title"", 10, 0, 100), ""x""); for _ in range(4); ]. # Execute the 3 computation graphs; n_graphs_run = RunGraphs(histoproxies); # Retrieve all the histograms in one go; histos = [histoproxy.GetValue() for histoproxy in histoproxies]; @endcode. """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py:32,Integrability,depend,dependencies,32,"# Import here to avoid circular dependencies in main module",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py:17,Safety,avoid,avoid,17,"# Import here to avoid circular dependencies in main module",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py:32,Performance,concurren,concurrently,32,"# Submit all computation graphs concurrently from multiple Python threads.; # The submission is not computationally intensive",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py:2,Integrability,Inject,Inject,2,"# Inject top-level functions",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py:2,Security,Inject,Inject,2,"# Inject top-level functions",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py:5,Performance,Perform,Perform,5,"""""""; Perform initial setup steps common to every mapper function.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Base.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py:179,Deployability,release,release,179,"# Enable thread safety for the whole mapper function. We need to do; # this since two tasks could be invoking the C++ interpreter; # simultaneously, given that this function will release the GIL; # before calling into C++ to run the event loop. Dask multi-threaded; # or even multi-process workers could trigger such a scenario.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Base.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py:250,Performance,multi-thread,multi-threaded,250,"# Enable thread safety for the whole mapper function. We need to do; # this since two tasks could be invoking the C++ interpreter; # simultaneously, given that this function will release the GIL; # before calling into C++ to run the event loop. Dask multi-threaded; # or even multi-process workers could trigger such a scenario.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Base.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py:16,Safety,safe,safety,16,"# Enable thread safety for the whole mapper function. We need to do; # this since two tasks could be invoking the C++ interpreter; # simultaneously, given that this function will release the GIL; # before calling into C++ to run the event loop. Dask multi-threaded; # or even multi-process workers could trigger such a scenario.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Base.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py:45,Testability,log,logical,45,"""""""; Maps the computation graph to the input logical range of entries.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Base.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py:2,Integrability,Wrap,Wrap,2,"# Wrap code that may be calling into C++ in a try-except block in order; # to better propagate exceptions.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Base.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py:140,Deployability,update,updated,140,"""""""; Merges two given iterables of values that were returned by two mapper; function executions. Returns the first argument with its values updated from; the second.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Base.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py:82,Security,access,access,82,"# Merge dictionaries of trees and their entries. Different tasks; # might have to access the same tree, so we must not count its; # entries more than once.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Base.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py:2,Integrability,Wrap,Wrap,2,"# Wrap code that may be calling into C++ in a try-except block in order; # to better propagate exceptions.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Base.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py:316,Modifiability,Variab,Variable,316,"""""""; Convert the initialization function and its arguments into a callable; without arguments. This callable is saved on the backend parent class.; Therefore, changes on the runtime backend do not require users to set; the initialization function again. Args:; fun (function): Function to be executed. *args (list): Variable length argument list used to execute the; function. **kwargs (dict): Keyword arguments used to execute the function.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Base.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py:43,Energy Efficiency,reduce,reduce,43,"""""""; Subclasses must define how to run map-reduce functions on a given; backend.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Base.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py:71,Integrability,depend,depending,71,"""""""; Return a default number of partitions to split the dataframe in,; depending on the backend.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Base.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py:5,Modifiability,Extend,Extends,5,"""""""; Extends the list of paths in which ROOT looks for headers and; libraries. Every header directory is added to the internal include; path of ROOT so the interpreter can find them. Even if the same path; is added twice, ROOT keeps a collection of unique paths. Find more at; `TInterpreter<https://root.cern.ch/doc/master/classTInterpreter.html>`_. Args:; include_path (str): the path to the directory containing files; needed for the analysis.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py:142,Availability,error,error,142,"# Get return value for loading the shared library.; # On succesful load the value will be 0.; # If the library does not exist or there was an error; # while loading, the value will be -1",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py:23,Performance,load,loading,23,"# Get return value for loading the shared library.; # On succesful load the value will be 0.; # If the library does not exist or there was an error; # while loading, the value will be -1",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py:67,Performance,load,load,67,"# Get return value for loading the shared library.; # On succesful load the value will be 0.; # If the library does not exist or there was an error; # while loading, the value will be -1",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py:157,Performance,load,loading,157,"# Get return value for loading the shared library.; # On succesful load the value will be 0.; # If the library does not exist or there was an error; # while loading, the value will be -1",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py:10,Performance,perform,performing,10,"""""""; When performing a distributed Snapshot we return an object holding the name; of the dataset and the path to the partial snapshot. We can directly return; the object, no extra work needed.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py:242,Security,access,access,242,"""""""; Connects the final value after distributed computation to the corresponding; DistRDF node.; In this overload, the node stores the reference to the mergeable variations; directly. It is then responsibility of the ResultMapProxy object to access; the specific varied object asked by the user, calling the right method of; the RMergeableVariations class.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/__init__.py:20,Integrability,inject,inject,20,"# A dummy module to inject in the parent module",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/__init__.py:20,Security,inject,inject,20,"# A dummy module to inject in the parent module",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py:58,Energy Efficiency,schedul,scheduler,58,"""""""; Retrieve the total number of cores known to the Dask scheduler through the; client connection.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py:2,Integrability,Wrap,Wrapping,2,"# Wrapping in a try-block in case any of the dictionaries do not have the; # needed keys",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py:54,Availability,avail,available,54,"# In some cases the Dask scheduler doesn't know about available workers; # at creation time. Most notably, when using batch systems like HTCondor; # through dask-jobqueue, creating the cluster object doesn't actually; # start the workers. The scheduler will know about available workers in; # the cluster only after cluster.scale has been called and the resource; # manager has granted the requested jobs. So at this point, we can only; # rely on the information that was passed by the user as a specification; # of the cluster object. This comes in the form:; # {'WORKER-NAME-1': {'cls': <class 'dask.WORKERCLASS'>,; # 'options': {'CORES_OR_NTHREADS': N, ...}},; # 'WORKER-NAME-2': {'cls': <class 'dask.WORKERCLASS'>,; # 'options': {'CORES_OR_NTHREADS': N, ...}}}; # This concept can vary between different types of clusters, but in the; # cluster types defined in dask-jobqueue the keys of the dictionary above; # refer to the name of a job submission, which can then involve multiple; # cores of a node.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py:269,Availability,avail,available,269,"# In some cases the Dask scheduler doesn't know about available workers; # at creation time. Most notably, when using batch systems like HTCondor; # through dask-jobqueue, creating the cluster object doesn't actually; # start the workers. The scheduler will know about available workers in; # the cluster only after cluster.scale has been called and the resource; # manager has granted the requested jobs. So at this point, we can only; # rely on the information that was passed by the user as a specification; # of the cluster object. This comes in the form:; # {'WORKER-NAME-1': {'cls': <class 'dask.WORKERCLASS'>,; # 'options': {'CORES_OR_NTHREADS': N, ...}},; # 'WORKER-NAME-2': {'cls': <class 'dask.WORKERCLASS'>,; # 'options': {'CORES_OR_NTHREADS': N, ...}}}; # This concept can vary between different types of clusters, but in the; # cluster types defined in dask-jobqueue the keys of the dictionary above; # refer to the name of a job submission, which can then involve multiple; # cores of a node.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py:25,Energy Efficiency,schedul,scheduler,25,"# In some cases the Dask scheduler doesn't know about available workers; # at creation time. Most notably, when using batch systems like HTCondor; # through dask-jobqueue, creating the cluster object doesn't actually; # start the workers. The scheduler will know about available workers in; # the cluster only after cluster.scale has been called and the resource; # manager has granted the requested jobs. So at this point, we can only; # rely on the information that was passed by the user as a specification; # of the cluster object. This comes in the form:; # {'WORKER-NAME-1': {'cls': <class 'dask.WORKERCLASS'>,; # 'options': {'CORES_OR_NTHREADS': N, ...}},; # 'WORKER-NAME-2': {'cls': <class 'dask.WORKERCLASS'>,; # 'options': {'CORES_OR_NTHREADS': N, ...}}}; # This concept can vary between different types of clusters, but in the; # cluster types defined in dask-jobqueue the keys of the dictionary above; # refer to the name of a job submission, which can then involve multiple; # cores of a node.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py:243,Energy Efficiency,schedul,scheduler,243,"# In some cases the Dask scheduler doesn't know about available workers; # at creation time. Most notably, when using batch systems like HTCondor; # through dask-jobqueue, creating the cluster object doesn't actually; # start the workers. The scheduler will know about available workers in; # the cluster only after cluster.scale has been called and the resource; # manager has granted the requested jobs. So at this point, we can only; # rely on the information that was passed by the user as a specification; # of the cluster object. This comes in the form:; # {'WORKER-NAME-1': {'cls': <class 'dask.WORKERCLASS'>,; # 'options': {'CORES_OR_NTHREADS': N, ...}},; # 'WORKER-NAME-2': {'cls': <class 'dask.WORKERCLASS'>,; # 'options': {'CORES_OR_NTHREADS': N, ...}}}; # This concept can vary between different types of clusters, but in the; # cluster types defined in dask-jobqueue the keys of the dictionary above; # refer to the name of a job submission, which can then involve multiple; # cores of a node.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py:127,Integrability,depend,dependency,127,"# It may happen that the user is connected to a batch system. We try; # to import the 'dask_jobqueue' module lazily to avoid a dependency.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py:119,Safety,avoid,avoid,119,"# It may happen that the user is connected to a batch system. We try; # to import the 'dask_jobqueue' module lazily to avoid a dependency.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py:18,Energy Efficiency,reduce,reduce,18,"""""""; Performs map-reduce using Dask framework. Args:; ranges (list): A list of ranges to be processed.; mapper (function): A function that runs the computational graph; and returns a list of values. reducer (function): A function that merges two lists that were; returned by the mapper. Returns:; list: A list representing the values of action nodes returned; after computation (Map-Reduce).; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py:199,Energy Efficiency,reduce,reducer,199,"""""""; Performs map-reduce using Dask framework. Args:; ranges (list): A list of ranges to be processed.; mapper (function): A function that runs the computational graph; and returns a list of values. reducer (function): A function that merges two lists that were; returned by the mapper. Returns:; list: A list representing the values of action nodes returned; after computation (Map-Reduce).; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py:383,Energy Efficiency,Reduce,Reduce,383,"""""""; Performs map-reduce using Dask framework. Args:; ranges (list): A list of ranges to be processed.; mapper (function): A function that runs the computational graph; and returns a list of values. reducer (function): A function that merges two lists that were; returned by the mapper. Returns:; list: A list representing the values of action nodes returned; after computation (Map-Reduce).; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py:5,Performance,Perform,Performs,5,"""""""; Performs map-reduce using Dask framework. Args:; ranges (list): A list of ranges to be processed.; mapper (function): A function that runs the computational graph; and returns a list of values. reducer (function): A function that merges two lists that were; returned by the mapper. Returns:; list: A list representing the values of action nodes returned; after computation (Map-Reduce).; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py:110,Availability,avail,available,110,"""""""; Performs real-time map-reduce using Dask framework, retrieving the partial results ; as soon as they are available, allowing real-time data representation. Args:; ranges (list): A list of ranges to be processed. mapper (function): A function that runs the computational graph; and returns a list of values. reducer (function): A function that merges two lists that were; returned by the mapper. drawables_info_dict (dict): A dictionary where keys are plot object IDs ; and values are tuples containing optional callback functions, ; index of the plot object, and operation name. Returns:; merged_results (TaskResult): The merged result of the computation.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py:28,Energy Efficiency,reduce,reduce,28,"""""""; Performs real-time map-reduce using Dask framework, retrieving the partial results ; as soon as they are available, allowing real-time data representation. Args:; ranges (list): A list of ranges to be processed. mapper (function): A function that runs the computational graph; and returns a list of values. reducer (function): A function that merges two lists that were; returned by the mapper. drawables_info_dict (dict): A dictionary where keys are plot object IDs ; and values are tuples containing optional callback functions, ; index of the plot object, and operation name. Returns:; merged_results (TaskResult): The merged result of the computation.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py:312,Energy Efficiency,reduce,reducer,312,"""""""; Performs real-time map-reduce using Dask framework, retrieving the partial results ; as soon as they are available, allowing real-time data representation. Args:; ranges (list): A list of ranges to be processed. mapper (function): A function that runs the computational graph; and returns a list of values. reducer (function): A function that merges two lists that were; returned by the mapper. drawables_info_dict (dict): A dictionary where keys are plot object IDs ; and values are tuples containing optional callback functions, ; index of the plot object, and operation name. Returns:; merged_results (TaskResult): The merged result of the computation.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py:5,Performance,Perform,Performs,5,"""""""; Performs real-time map-reduce using Dask framework, retrieving the partial results ; as soon as they are available, allowing real-time data representation. Args:; ranges (list): A list of ranges to be processed. mapper (function): A function that runs the computational graph; and returns a list of values. reducer (function): A function that merges two lists that were; returned by the mapper. drawables_info_dict (dict): A dictionary where keys are plot object IDs ; and values are tuples containing optional callback functions, ; index of the plot object, and operation name. Returns:; merged_results (TaskResult): The merged result of the computation.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py:323,Energy Efficiency,reduce,reducer,323,"""""""; Process partial results and display plots on the provided canvas. Args:; canvas: The TCanvas object for displaying plots.; 			; drawables_info_dict (dict): A dictionary where keys are plot object IDs ; and values are tuples containing optional callback functions, ; index of the plot object, and operation name.; 			; reducer (function): A function for reducing partial results.; 			; future_tasks: Dask future tasks representing partial results. Returns:; merged_results (TaskResult): The merged result of the computation.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py:77,Performance,cache,cache,77,"""""""; Remove the computation graph identified by the input argument from the; cache.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:230,Deployability,configurat,configuration,230,"""""""; Creates an instance of the Spark backend class. Args:; config (dict, optional): The config options for Spark backend.; The default value is an empty Python dictionary :obj:`{}`.; :obj:`config` should be a dictionary of Spark configuration; options and their values with :obj:'npartitions' as the only; allowed extra parameter. Example::. config = {; 'npartitions':20,; 'spark.master':'myMasterURL',; 'spark.executor.instances':10,; 'spark.app.name':'mySparkAppName'; }. Note:; If a SparkContext is already set in the current environment, the; Spark configuration parameters from :obj:'config' will be ignored; and the already existing SparkContext would be used. """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:554,Deployability,configurat,configuration,554,"""""""; Creates an instance of the Spark backend class. Args:; config (dict, optional): The config options for Spark backend.; The default value is an empty Python dictionary :obj:`{}`.; :obj:`config` should be a dictionary of Spark configuration; options and their values with :obj:'npartitions' as the only; allowed extra parameter. Example::. config = {; 'npartitions':20,; 'spark.master':'myMasterURL',; 'spark.executor.instances':10,; 'spark.app.name':'mySparkAppName'; }. Note:; If a SparkContext is already set in the current environment, the; Spark configuration parameters from :obj:'config' will be ignored; and the already existing SparkContext would be used. """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:60,Modifiability,config,config,60,"""""""; Creates an instance of the Spark backend class. Args:; config (dict, optional): The config options for Spark backend.; The default value is an empty Python dictionary :obj:`{}`.; :obj:`config` should be a dictionary of Spark configuration; options and their values with :obj:'npartitions' as the only; allowed extra parameter. Example::. config = {; 'npartitions':20,; 'spark.master':'myMasterURL',; 'spark.executor.instances':10,; 'spark.app.name':'mySparkAppName'; }. Note:; If a SparkContext is already set in the current environment, the; Spark configuration parameters from :obj:'config' will be ignored; and the already existing SparkContext would be used. """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:89,Modifiability,config,config,89,"""""""; Creates an instance of the Spark backend class. Args:; config (dict, optional): The config options for Spark backend.; The default value is an empty Python dictionary :obj:`{}`.; :obj:`config` should be a dictionary of Spark configuration; options and their values with :obj:'npartitions' as the only; allowed extra parameter. Example::. config = {; 'npartitions':20,; 'spark.master':'myMasterURL',; 'spark.executor.instances':10,; 'spark.app.name':'mySparkAppName'; }. Note:; If a SparkContext is already set in the current environment, the; Spark configuration parameters from :obj:'config' will be ignored; and the already existing SparkContext would be used. """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:190,Modifiability,config,config,190,"""""""; Creates an instance of the Spark backend class. Args:; config (dict, optional): The config options for Spark backend.; The default value is an empty Python dictionary :obj:`{}`.; :obj:`config` should be a dictionary of Spark configuration; options and their values with :obj:'npartitions' as the only; allowed extra parameter. Example::. config = {; 'npartitions':20,; 'spark.master':'myMasterURL',; 'spark.executor.instances':10,; 'spark.app.name':'mySparkAppName'; }. Note:; If a SparkContext is already set in the current environment, the; Spark configuration parameters from :obj:'config' will be ignored; and the already existing SparkContext would be used. """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:230,Modifiability,config,configuration,230,"""""""; Creates an instance of the Spark backend class. Args:; config (dict, optional): The config options for Spark backend.; The default value is an empty Python dictionary :obj:`{}`.; :obj:`config` should be a dictionary of Spark configuration; options and their values with :obj:'npartitions' as the only; allowed extra parameter. Example::. config = {; 'npartitions':20,; 'spark.master':'myMasterURL',; 'spark.executor.instances':10,; 'spark.app.name':'mySparkAppName'; }. Note:; If a SparkContext is already set in the current environment, the; Spark configuration parameters from :obj:'config' will be ignored; and the already existing SparkContext would be used. """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:343,Modifiability,config,config,343,"""""""; Creates an instance of the Spark backend class. Args:; config (dict, optional): The config options for Spark backend.; The default value is an empty Python dictionary :obj:`{}`.; :obj:`config` should be a dictionary of Spark configuration; options and their values with :obj:'npartitions' as the only; allowed extra parameter. Example::. config = {; 'npartitions':20,; 'spark.master':'myMasterURL',; 'spark.executor.instances':10,; 'spark.app.name':'mySparkAppName'; }. Note:; If a SparkContext is already set in the current environment, the; Spark configuration parameters from :obj:'config' will be ignored; and the already existing SparkContext would be used. """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:554,Modifiability,config,configuration,554,"""""""; Creates an instance of the Spark backend class. Args:; config (dict, optional): The config options for Spark backend.; The default value is an empty Python dictionary :obj:`{}`.; :obj:`config` should be a dictionary of Spark configuration; options and their values with :obj:'npartitions' as the only; allowed extra parameter. Example::. config = {; 'npartitions':20,; 'spark.master':'myMasterURL',; 'spark.executor.instances':10,; 'spark.app.name':'mySparkAppName'; }. Note:; If a SparkContext is already set in the current environment, the; Spark configuration parameters from :obj:'config' will be ignored; and the already existing SparkContext would be used. """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:590,Modifiability,config,config,590,"""""""; Creates an instance of the Spark backend class. Args:; config (dict, optional): The config options for Spark backend.; The default value is an empty Python dictionary :obj:`{}`.; :obj:`config` should be a dictionary of Spark configuration; options and their values with :obj:'npartitions' as the only; allowed extra parameter. Example::. config = {; 'npartitions':20,; 'spark.master':'myMasterURL',; 'spark.executor.instances':10,; 'spark.app.name':'mySparkAppName'; }. Note:; If a SparkContext is already set in the current environment, the; Spark configuration parameters from :obj:'config' will be ignored; and the already existing SparkContext would be used. """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:77,Availability,avail,available,77,"""""""; The SparkContext.defaultParallelism property roughly translates to the; available amount of logical cores on the cluster. Some examples:; - spark.master = local[n]: returns n.; - spark.executor.instances = m and spark.executor.cores = n: returns `n*m`.; By default, the minimum number this returns is 2 if the context; doesn't know any better. For example, if dynamic allocation is enabled.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:97,Testability,log,logical,97,"""""""; The SparkContext.defaultParallelism property roughly translates to the; available amount of logical cores on the cluster. Some examples:; - spark.master = local[n]: returns n.; - spark.executor.instances = m and spark.executor.cores = n: returns `n*m`.; By default, the minimum number this returns is 2 if the context; doesn't know any better. For example, if dynamic allocation is enabled.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:18,Energy Efficiency,reduce,reduce,18,"""""""; Performs map-reduce using Spark framework. Args:; mapper (function): A function that runs the computational graph; and returns a list of values. reducer (function): A function that merges two lists that were; returned by the mapper. Returns:; list: A list representing the values of action nodes returned; after computation (Map-Reduce).; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:150,Energy Efficiency,reduce,reducer,150,"""""""; Performs map-reduce using Spark framework. Args:; mapper (function): A function that runs the computational graph; and returns a list of values. reducer (function): A function that merges two lists that were; returned by the mapper. Returns:; list: A list representing the values of action nodes returned; after computation (Map-Reduce).; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:334,Energy Efficiency,Reduce,Reduce,334,"""""""; Performs map-reduce using Spark framework. Args:; mapper (function): A function that runs the computational graph; and returns a list of values. reducer (function): A function that merges two lists that were; returned by the mapper. Returns:; list: A list representing the values of action nodes returned; after computation (Map-Reduce).; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:5,Performance,Perform,Performs,5,"""""""; Performs map-reduce using Spark framework. Args:; mapper (function): A function that runs the computational graph; and returns a list of values. reducer (function): A function that merges two lists that were; returned by the mapper. Returns:; list: A list representing the values of action nodes returned; after computation (Map-Reduce).; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:236,Availability,error,errors,236,"# These need to be passed as variables and not as class attributes; # otherwise the `spark_mapper` function would be referencing this; # this instance of the Spark backend along with the referenced; # SparkContext. This would cause the errors described in SPARK-5063.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:29,Modifiability,variab,variables,29,"# These need to be passed as variables and not as class attributes; # otherwise the `spark_mapper` function would be referencing this; # this instance of the Spark backend along with the referenced; # SparkContext. This would cause the errors described in SPARK-5063.",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:6,Energy Efficiency,Reduce,Reduce,6,"# Map-Reduce using Spark",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py:162,Energy Efficiency,reduce,reduce,162,"""""""; Informs the user that the live visualization feature is not supported for the Spark backend ; and refers to ProcessAndMerge to proceed with the standard map-reduce workflow.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Spark/Backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:49,Testability,test,test,49,"""""""Create dummy head node instance needed in the test""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:34,Testability,test,tests,34,"# Pass None as `npartitions`. The tests will modify this member; # according to needs",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:15,Testability,mock,mocking,15,"""""""A Class for mocking RDF CPP object.""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:15,Testability,mock,mock,15,"""""""; Creates a mock instance. Each mock method adds an unique number to; the `ord_list` so we can check the order in which they were called.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:35,Testability,mock,mock,35,"""""""; Creates a mock instance. Each mock method adds an unique number to; the `ord_list` so we can check the order in which they were called.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:3,Testability,Mock,Mock,3,"""""""Mock Define method""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:3,Testability,Mock,Mock,3,"""""""Mock Filter method""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:3,Testability,Mock,Mock,3,"""""""Mock Count method""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:12,Testability,test,test,12,"""""""A simple test case to check the working of mapper.""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:5,Usability,simpl,simple,5,"""""""A simple test case to check the working of mapper.""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:4,Testability,mock,mock,4,"# A mock RDF object",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:8,Safety,avoid,avoid,8,"# noqa: avoid PEP8 F841; # Generate and execute the mapper",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:7,Testability,test,test,7,"""""""; A test case to check that the mapper works even in the case of; pruning.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:4,Testability,mock,mock,4,"# A mock RDF object",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:8,Safety,avoid,avoid,8,"# noqa: avoid PEP8 F841; # Until here the graph would be:; # [1, 2, 2, 3, 3, 2]; # Reason for pruning (change of reference)",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:8,Safety,avoid,avoid,8,"# noqa: avoid PEP8 F841; # After the change of reference, it becomes; # [1, 2, 2, 3, 2, 2]; # that is, the Filter is appended at the end of the list, it is fine; # because it holds a reference to the ID of the father.; # Generate and execute the mapper",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:5,Testability,Test,Test,5,"""""""; Test case to check that transformation nodes with no children and; no user references get pruned. """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:4,Testability,mock,mock,4,"# A mock RDF object",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:8,Safety,avoid,avoid,8,"# noqa: avoid PEP8 F841",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:8,Safety,avoid,avoid,8,"# noqa: avoid PEP8 F841",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:8,Safety,avoid,avoid,8,"# noqa: avoid PEP8 F841; # Transformation pruning, n5 was earlier a transformation node",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:8,Safety,avoid,avoid,8,"# noqa: avoid PEP8 F841; # Generate and execute the mapper",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:5,Testability,Test,Test,5,"""""""; Test case to check that nodes in a DistRDF graph with no user references; and no children get pruned recursively.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:4,Testability,mock,mock,4,"# A mock RDF object",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:8,Safety,avoid,avoid,8,"# noqa: avoid PEP8 F841",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:8,Safety,avoid,avoid,8,"# noqa: avoid PEP8 F841",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:8,Safety,avoid,avoid,8,"# noqa: avoid PEP8 F841; # Remove user references from n4, n3, n2",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:8,Safety,avoid,avoid,8,"# noqa: avoid PEP8 F841; # Generate and execute the mapper",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:5,Testability,Test,Test,5,"""""""; Test case to check that parent nodes with no user references don't; get pruned.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:4,Testability,mock,mock,4,"# A mock RDF object",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:8,Safety,avoid,avoid,8,"# noqa: avoid PEP8 F841",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:8,Safety,avoid,avoid,8,"# noqa: avoid PEP8 F841",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:8,Safety,avoid,avoid,8,"# noqa: avoid PEP8 F841; # Remove references from n2 (which shouldn't affect the graph)",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:5,Testability,Test,Test,5,"""""""; Test case to check that computed values in action nodes get; pruned.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:4,Testability,mock,mock,4,"# A mock RDF object",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:8,Safety,avoid,avoid,8,"# noqa: avoid PEP8 F841",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:5,Testability,Test,Test,5,"""""""; Test case to check that node pruning does not occur if every node either; has children or some user references. """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:4,Testability,mock,mock,4,"# A mock RDF object",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:8,Safety,avoid,avoid,8,"# noqa: avoid PEP8 F841",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:8,Safety,avoid,avoid,8,"# noqa: avoid PEP8 F841",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:8,Safety,avoid,avoid,8,"# noqa: avoid PEP8 F841; # Generate and execute the mapper",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:4,Testability,mock,mock,4,"# A mock RDF object",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py:12,Testability,mock,mock,12,"# Reset the mock list of nodes so old nodes are not kept",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_callable_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_callable_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_friendinfo.py:49,Testability,test,test,49,"""""""Create dummy head node instance needed in the test""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_friendinfo.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_friendinfo.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_friendinfo.py:34,Testability,test,tests,34,"# Pass None as `npartitions`. The tests will modify this member; # according to needs",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_friendinfo.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_friendinfo.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_friendinfo.py:8,Testability,test,test,8,"""""""Unit test for the FriendInfo class""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_friendinfo.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_friendinfo.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_headnode.py:49,Testability,test,test,49,"""""""Create dummy head node instance needed in the test""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_headnode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_headnode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_headnode.py:34,Testability,test,tests,34,"# Pass None as `npartitions`. The tests will modify this member; # according to needs",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_headnode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_headnode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_headnode.py:173,Testability,test,testing,173,"# See https://github.com/root-project/root/issues/7541 and; # https://bugs.llvm.org/show_bug.cgi?id=49692 :; # llvm JIT fails to catch exceptions on M1, so we disable their testing",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_headnode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_headnode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_headnode.py:5,Testability,Assert,Asserts,5,"""""""; Asserts the arguments from 2 given; arguments lists. Specifically for the cases :; * [str, list or vector or str]; * [str, list or vector or str, list or vector]. """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_headnode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_headnode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_headnode.py:173,Testability,test,testing,173,"# See https://github.com/root-project/root/issues/7541 and; # https://bugs.llvm.org/show_bug.cgi?id=49692 :; # llvm JIT fails to catch exceptions on M1, so we disable their testing",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_headnode.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_headnode.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_init.py:3,Testability,Test,Test,3,"""""""Test status after importing DistRDF""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_init.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_init.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_init.py:3,Testability,Test,Test,3,"""""""Test that importing DistRDF does not implicitly import ROOT.""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_init.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_init.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_node.py:49,Testability,test,test,49,"""""""Create dummy head node instance needed in the test""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_node.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_node.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_node.py:34,Testability,test,tests,34,"# Pass None as `npartitions`. The tests will modify this member; # according to needs",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_node.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_node.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_node.py:17,Testability,test,test,17,"""""""; A series of test cases to check that all new operations are created properly; inside a new node.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_node.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_node.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_node.py:8,Safety,avoid,avoid,8,"# noqa: avoid PEP8 F841",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_node.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_node.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_node.py:17,Testability,test,test,17,"""""""; A series of test cases to check that right objects are returned for a node; (Proxy.ResultPtrProxy, Proxy.NodeProxy or Node).; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_node.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_node.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_node.py:5,Testability,Test,Test,5,"""""""; Test cases to check the response of the Node class for various dunder; method calls. """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_node.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_node.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_node.py:5,Testability,Test,Test,5,"""""""; Test cases to check the working of other dunder methods on; Node class. """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_node.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_node.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_node.py:42,Availability,error,error,42,"# Regular dunder method must not throw an error",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_node.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_node.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_operation.py:5,Testability,Test,Test,5,"""""""; Test that Histo*D operations work only when the histogram model is passed.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_operation.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_operation.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py:49,Testability,test,test,49,"""""""Create dummy head node instance needed in the test""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py:34,Testability,test,tests,34,"# Pass None as `npartitions`. The tests will modify this member; # according to needs",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py:3,Testability,Test,Tests,3,"""""""Tests that right types are returned""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py:58,Integrability,wrap,wraps,58,"""""""; NodeProxy object is of type `DistRDF.NodeProxy` and; wraps a node object.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py:68,Integrability,wrap,wraps,68,"""""""; ResultPtrProxy object is of type `DistRDF.ResultPtrProxy` and; wraps a node object.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py:3,Testability,Test,Test,3,"""""""Test Proxy class methods.""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py:5,Testability,mock,mock,5,"""""""A mock action node result class.""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py:5,Testability,test,test,5,"""""""A test method to check function call on the Temp class.""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py:4,Usability,simpl,simple,4,"# A simple operation to check",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py:20,Testability,test,test,20,"""""""Dummy backend to test the _get_friend_info method in Dist class.""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py:8,Safety,avoid,avoid,8,"# noqa: avoid PEP8 F841",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py:5,Testability,Test,Test,5,"""""""; Test backend to verify the working of 'GetValue' instance method; in Proxy.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py:5,Testability,Test,Test,5,"""""""; Test implementation of the execute method; for 'TestBackend'. This records the head; node of the input DistRDF graph from the; generator object.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py:53,Testability,Test,TestBackend,53,"""""""; Test implementation of the execute method; for 'TestBackend'. This records the head; node of the input DistRDF graph from the; generator object.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py:5,Testability,Test,Test,5,"""""""; Test case to check the working of 'GetValue'; method in Proxy when the current action node; already houses a value.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py:37,Availability,avail,available,37,"""""""; Check newly defined columns are available also locally.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_proxy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_ranges.py:5,Testability,Test,Test,5,"""""""; Test cases with ranges when there is an empty data source.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_ranges.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_ranges.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_ranges.py:5,Testability,Test,Test,5,"""""""; Test cases with ranges when the data source is a TTree.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_ranges.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_ranges.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_ranges.py:41,Testability,test,tests,41,"""""""; Create some files to be used in the tests. Each file has 100 entries and; 10 clusters.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_ranges.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_ranges.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_ranges.py:19,Testability,test,test,19,"# Same as previous test",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/test_ranges.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_ranges.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_dist.py:52,Integrability,depend,depend,52,"""""""; The result of distributed execution should not depend on the number of; partitions assigned to the dataframe.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_dist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_dist.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_dist.py:20,Testability,test,test,20,"""""""Dummy backend to test the _build_ranges method in Dist class.""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_dist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_dist.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_dist.py:61,Integrability,depend,depend,61,"""""""; Tests that counting the entries in the dataset does not depend on the; number of partitions. This could have happened if we used TEntryList; to restrict processing on a certain range of entries of the TChain in a; distributed task, but the changes in; https://github.com/root-project/root/commit/77bd5aa82e9544811e0d5fce197ab87c739c2e23; were not implemented yet.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_dist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_dist.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_dist.py:5,Testability,Test,Tests,5,"""""""; Tests that counting the entries in the dataset does not depend on the; number of partitions. This could have happened if we used TEntryList; to restrict processing on a certain range of entries of the TChain in a; distributed task, but the changes in; https://github.com/root-project/root/commit/77bd5aa82e9544811e0d5fce197ab87c739c2e23; were not implemented yet.; """"""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_dist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_dist.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py:50,Testability,test,tests,50,"""""""This implementation is needed for the Snapshot tests.""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_graph_caching.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py:13,Performance,cache,caches,13,"""""""Clear the caches in between tests.""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_graph_caching.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py:31,Testability,test,tests,31,"""""""Clear the caches in between tests.""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_graph_caching.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py:3,Usability,Clear,Clear,3,"""""""Clear the caches in between tests.""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_graph_caching.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py:7,Performance,cache,cache,7,"""""""The cache is used to count entries with an empty source.""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_graph_caching.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py:21,Performance,cache,cache,21,"# Start from a fresh cache at each subtest iteration",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_graph_caching.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py:30,Performance,cache,cached,30,"# There should be exactly one cached RDF and set of actions",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_graph_caching.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py:7,Performance,cache,cache,7,"""""""The cache is used to count entries of a TTree.""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_graph_caching.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py:21,Performance,cache,cache,21,"# Start from a fresh cache at each subtest iteration",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_graph_caching.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py:30,Performance,cache,cached,30,"# There should be exactly one cached RDF and set of actions",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_graph_caching.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py:7,Performance,cache,cache,7,"""""""The cache is used to count entries of a TChain.""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_graph_caching.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py:21,Performance,cache,cache,21,"# Start from a fresh cache at each subtest iteration",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_graph_caching.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py:30,Performance,cache,cached,30,"# There should be exactly one cached RDF and set of actions",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_graph_caching.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py:7,Performance,cache,cache,7,"""""""The cache is used to Snapshot data.""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_graph_caching.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py:21,Performance,cache,cache,21,"# Start from a fresh cache at each subtest iteration",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_graph_caching.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py:30,Performance,cache,cached,30,"# There should be exactly one cached RDF and set of actions",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_graph_caching.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py:38,Usability,usab,usable,38,"# The snapshotted dataframe should be usable",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_graph_caching.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py:7,Performance,cache,caches,7,"""""""The caches are used with multiple executions.""""""",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_graph_caching.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py
https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py:21,Performance,cache,cache,21,"# Start from a fresh cache at each subtest iteration",MatchSource.CODE_COMMENT,bindings/experimental/distrdf/test/backend/test_graph_caching.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_graph_caching.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py:8,Integrability,wrap,wrapper,8,"# Jit a wrapper for the ttabcom",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py:21,Integrability,interface,interfaces,21,"'''; Completer which interfaces to the TTabCom of ROOT. It is activated; (deactivated) upon the load(unload) of the load of the extension. >>> comp = CppCompleter(); >>> comp.activate(); >>> for suggestion in comp._completeImpl(""TTreeF""):; ... print(suggestion); TTreeFormula; TTreeFormulaManager; TTreeFriendLeafIter; >>> garbage = ROOT.gInterpreter.ProcessLine(""TH1F* h""); >>> for suggestion in comp._completeImpl(""h->GetA""):; ... print(suggestion); h->GetArray; h->GetAsymmetry; h->GetAt; h->GetAxisColor; >>> garbage = ROOT.gInterpreter.ProcessLine(""TH1F aa""); >>> for suggestion in comp._completeImpl(""aa.Add(""):; ... print(suggestion.replace(""\\t"","" "")); <BLANKLINE>; Bool_t Add(TF1* h1, Double_t c1 = 1, Option_t* option = """"); Bool_t Add(const TH1* h, const TH1* h2, Double_t c1 = 1, Double_t c2 = 1) // *MENU*; Bool_t Add(const TH1* h1, Double_t c1 = 1); >>> for suggestion in comp._completeImpl(""TROOT::Is""):; ... print(suggestion); TROOT::IsA; TROOT::IsBatch; TROOT::IsBuilt; TROOT::IsDestructed; TROOT::IsEqual; TROOT::IsEscaped; TROOT::IsExecutingMacro; TROOT::IsFolder; TROOT::IsInterrupted; TROOT::IsLineProcessing; TROOT::IsModified; TROOT::IsOnHeap; TROOT::IsProofServ; TROOT::IsRootFile; TROOT::IsSortable; TROOT::IsWebDisplay; TROOT::IsWebDisplayBatch; TROOT::IsWritable; TROOT::IsZombie; >>> comp.deactivate(); >>> for suggestion in comp._completeImpl(""TG""):; ... print(suggestion); '''",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py:96,Performance,load,load,96,"'''; Completer which interfaces to the TTabCom of ROOT. It is activated; (deactivated) upon the load(unload) of the load of the extension. >>> comp = CppCompleter(); >>> comp.activate(); >>> for suggestion in comp._completeImpl(""TTreeF""):; ... print(suggestion); TTreeFormula; TTreeFormulaManager; TTreeFriendLeafIter; >>> garbage = ROOT.gInterpreter.ProcessLine(""TH1F* h""); >>> for suggestion in comp._completeImpl(""h->GetA""):; ... print(suggestion); h->GetArray; h->GetAsymmetry; h->GetAt; h->GetAxisColor; >>> garbage = ROOT.gInterpreter.ProcessLine(""TH1F aa""); >>> for suggestion in comp._completeImpl(""aa.Add(""):; ... print(suggestion.replace(""\\t"","" "")); <BLANKLINE>; Bool_t Add(TF1* h1, Double_t c1 = 1, Option_t* option = """"); Bool_t Add(const TH1* h, const TH1* h2, Double_t c1 = 1, Double_t c2 = 1) // *MENU*; Bool_t Add(const TH1* h1, Double_t c1 = 1); >>> for suggestion in comp._completeImpl(""TROOT::Is""):; ... print(suggestion); TROOT::IsA; TROOT::IsBatch; TROOT::IsBuilt; TROOT::IsDestructed; TROOT::IsEqual; TROOT::IsEscaped; TROOT::IsExecutingMacro; TROOT::IsFolder; TROOT::IsInterrupted; TROOT::IsLineProcessing; TROOT::IsModified; TROOT::IsOnHeap; TROOT::IsProofServ; TROOT::IsRootFile; TROOT::IsSortable; TROOT::IsWebDisplay; TROOT::IsWebDisplayBatch; TROOT::IsWritable; TROOT::IsZombie; >>> comp.deactivate(); >>> for suggestion in comp._completeImpl(""TG""):; ... print(suggestion); '''",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py:116,Performance,load,load,116,"'''; Completer which interfaces to the TTabCom of ROOT. It is activated; (deactivated) upon the load(unload) of the load of the extension. >>> comp = CppCompleter(); >>> comp.activate(); >>> for suggestion in comp._completeImpl(""TTreeF""):; ... print(suggestion); TTreeFormula; TTreeFormulaManager; TTreeFriendLeafIter; >>> garbage = ROOT.gInterpreter.ProcessLine(""TH1F* h""); >>> for suggestion in comp._completeImpl(""h->GetA""):; ... print(suggestion); h->GetArray; h->GetAsymmetry; h->GetAt; h->GetAxisColor; >>> garbage = ROOT.gInterpreter.ProcessLine(""TH1F aa""); >>> for suggestion in comp._completeImpl(""aa.Add(""):; ... print(suggestion.replace(""\\t"","" "")); <BLANKLINE>; Bool_t Add(TF1* h1, Double_t c1 = 1, Option_t* option = """"); Bool_t Add(const TH1* h, const TH1* h2, Double_t c1 = 1, Double_t c2 = 1) // *MENU*; Bool_t Add(const TH1* h1, Double_t c1 = 1); >>> for suggestion in comp._completeImpl(""TROOT::Is""):; ... print(suggestion); TROOT::IsA; TROOT::IsBatch; TROOT::IsBuilt; TROOT::IsDestructed; TROOT::IsEqual; TROOT::IsEscaped; TROOT::IsExecutingMacro; TROOT::IsFolder; TROOT::IsInterrupted; TROOT::IsLineProcessing; TROOT::IsModified; TROOT::IsOnHeap; TROOT::IsProofServ; TROOT::IsRootFile; TROOT::IsSortable; TROOT::IsWebDisplay; TROOT::IsWebDisplayBatch; TROOT::IsWritable; TROOT::IsZombie; >>> comp.deactivate(); >>> for suggestion in comp._completeImpl(""TG""):; ... print(suggestion); '''",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py:10,Modifiability,variab,variable,10,"# Prepend variable name to suggestions. Do not prepend if the; # suggestion already contains the variable name, this can happen if; # e.g. there is only one valid completion",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py:97,Modifiability,variab,variable,97,"# Prepend variable name to suggestions. Do not prepend if the; # suggestion already contains the variable name, this can happen if; # e.g. there is only one valid completion",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py:48,Security,access,accessor,48,"'''; Autocomplete interfacing to TTabCom. If an accessor of a scope is; present in the line, the suggestions are prepended with the line.; That's how completers work. For example:; myGraph.Set<tab> will return ""myGraph.Set+suggestion in the list of; suggestions.; '''",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:46,Deployability,update,update,46,"# Keep display handle for canvases to be able update them",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:134,Modifiability,config,configured,134,"""""""; Jupyter.CodeCell.options_default.highlight_modes['magic_{cppMIME}'] = {{'reg':[/^%%cpp/]}};; console.log(""JupyROOT - %%cpp magic configured"");; """"""",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:106,Testability,log,log,106,"""""""; Jupyter.CodeCell.options_default.highlight_modes['magic_{cppMIME}'] = {{'reg':[/^%%cpp/]}};; console.log(""JupyROOT - %%cpp magic configured"");; """"""",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:1507,Availability,error,error,1507,""""""". <div id=""{jsDivId}"" style=""width: {jsCanvasWidth}px; height: {jsCanvasHeight}px; position: relative"">; </div>. <script>. function display_{jsDivId}(Core) {{; let obj = Core.parse({jsonContent});; Core.settings.HandleKeys = false;; Core.draw(""{jsDivId}"", obj, ""{jsDrawOptions}"");; }}. function script_load_{jsDivId}(src, on_error) {{; let script = document.createElement('script');; script.src = src;; script.onload = function() {{ display_{jsDivId}(JSROOT); }};; script.onerror = function() {{ script.remove(); on_error(); }};; document.head.appendChild(script);; }}. if (typeof requirejs !== 'undefined') {{. // We are in jupyter notebooks, use require.js which should be configured already; requirejs.config({{; paths: {{ 'JSRootCore' : [ 'build/jsroot', 'https://root.cern/js/7.7.4/build/jsroot', 'https://jsroot.gsi.de/7.7.4/build/jsroot' ] }}; }})(['JSRootCore'], function(Core) {{; display_{jsDivId}(Core);; }});. }} else if (typeof JSROOT !== 'undefined') {{. // JSROOT already loaded, just use it; display_{jsDivId}(JSROOT);. }} else {{. // We are in jupyterlab without require.js, directly loading jsroot; // Jupyterlab might be installed in a different base_url so we need to know it.; try {{; var base_url = JSON.parse(document.getElementById('jupyter-config-data').innerHTML).baseUrl;; }} catch(_) {{; var base_url = '/';; }}. // Try loading a local version of requirejs and fallback to cdn if not possible.; script_load_{jsDivId}(base_url + 'static/build/jsroot.js', function(){{; console.error('Fail to load JSROOT locally, please check your jupyter_notebook_config.py file');; script_load_{jsDivId}('https://root.cern/js/7.7.4/build/jsroot.js', function(){{; document.getElementById(""{jsDivId}"").innerHTML = ""Failed to load JSROOT"";; }});; }});; }}. </script>; """"""",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:1143,Deployability,install,installed,1143,""""""". <div id=""{jsDivId}"" style=""width: {jsCanvasWidth}px; height: {jsCanvasHeight}px; position: relative"">; </div>. <script>. function display_{jsDivId}(Core) {{; let obj = Core.parse({jsonContent});; Core.settings.HandleKeys = false;; Core.draw(""{jsDivId}"", obj, ""{jsDrawOptions}"");; }}. function script_load_{jsDivId}(src, on_error) {{; let script = document.createElement('script');; script.src = src;; script.onload = function() {{ display_{jsDivId}(JSROOT); }};; script.onerror = function() {{ script.remove(); on_error(); }};; document.head.appendChild(script);; }}. if (typeof requirejs !== 'undefined') {{. // We are in jupyter notebooks, use require.js which should be configured already; requirejs.config({{; paths: {{ 'JSRootCore' : [ 'build/jsroot', 'https://root.cern/js/7.7.4/build/jsroot', 'https://jsroot.gsi.de/7.7.4/build/jsroot' ] }}; }})(['JSRootCore'], function(Core) {{; display_{jsDivId}(Core);; }});. }} else if (typeof JSROOT !== 'undefined') {{. // JSROOT already loaded, just use it; display_{jsDivId}(JSROOT);. }} else {{. // We are in jupyterlab without require.js, directly loading jsroot; // Jupyterlab might be installed in a different base_url so we need to know it.; try {{; var base_url = JSON.parse(document.getElementById('jupyter-config-data').innerHTML).baseUrl;; }} catch(_) {{; var base_url = '/';; }}. // Try loading a local version of requirejs and fallback to cdn if not possible.; script_load_{jsDivId}(base_url + 'static/build/jsroot.js', function(){{; console.error('Fail to load JSROOT locally, please check your jupyter_notebook_config.py file');; script_load_{jsDivId}('https://root.cern/js/7.7.4/build/jsroot.js', function(){{; document.getElementById(""{jsDivId}"").innerHTML = ""Failed to load JSROOT"";; }});; }});; }}. </script>; """"""",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:678,Modifiability,config,configured,678,""""""". <div id=""{jsDivId}"" style=""width: {jsCanvasWidth}px; height: {jsCanvasHeight}px; position: relative"">; </div>. <script>. function display_{jsDivId}(Core) {{; let obj = Core.parse({jsonContent});; Core.settings.HandleKeys = false;; Core.draw(""{jsDivId}"", obj, ""{jsDrawOptions}"");; }}. function script_load_{jsDivId}(src, on_error) {{; let script = document.createElement('script');; script.src = src;; script.onload = function() {{ display_{jsDivId}(JSROOT); }};; script.onerror = function() {{ script.remove(); on_error(); }};; document.head.appendChild(script);; }}. if (typeof requirejs !== 'undefined') {{. // We are in jupyter notebooks, use require.js which should be configured already; requirejs.config({{; paths: {{ 'JSRootCore' : [ 'build/jsroot', 'https://root.cern/js/7.7.4/build/jsroot', 'https://jsroot.gsi.de/7.7.4/build/jsroot' ] }}; }})(['JSRootCore'], function(Core) {{; display_{jsDivId}(Core);; }});. }} else if (typeof JSROOT !== 'undefined') {{. // JSROOT already loaded, just use it; display_{jsDivId}(JSROOT);. }} else {{. // We are in jupyterlab without require.js, directly loading jsroot; // Jupyterlab might be installed in a different base_url so we need to know it.; try {{; var base_url = JSON.parse(document.getElementById('jupyter-config-data').innerHTML).baseUrl;; }} catch(_) {{; var base_url = '/';; }}. // Try loading a local version of requirejs and fallback to cdn if not possible.; script_load_{jsDivId}(base_url + 'static/build/jsroot.js', function(){{; console.error('Fail to load JSROOT locally, please check your jupyter_notebook_config.py file');; script_load_{jsDivId}('https://root.cern/js/7.7.4/build/jsroot.js', function(){{; document.getElementById(""{jsDivId}"").innerHTML = ""Failed to load JSROOT"";; }});; }});; }}. </script>; """"""",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:708,Modifiability,config,config,708,""""""". <div id=""{jsDivId}"" style=""width: {jsCanvasWidth}px; height: {jsCanvasHeight}px; position: relative"">; </div>. <script>. function display_{jsDivId}(Core) {{; let obj = Core.parse({jsonContent});; Core.settings.HandleKeys = false;; Core.draw(""{jsDivId}"", obj, ""{jsDrawOptions}"");; }}. function script_load_{jsDivId}(src, on_error) {{; let script = document.createElement('script');; script.src = src;; script.onload = function() {{ display_{jsDivId}(JSROOT); }};; script.onerror = function() {{ script.remove(); on_error(); }};; document.head.appendChild(script);; }}. if (typeof requirejs !== 'undefined') {{. // We are in jupyter notebooks, use require.js which should be configured already; requirejs.config({{; paths: {{ 'JSRootCore' : [ 'build/jsroot', 'https://root.cern/js/7.7.4/build/jsroot', 'https://jsroot.gsi.de/7.7.4/build/jsroot' ] }}; }})(['JSRootCore'], function(Core) {{; display_{jsDivId}(Core);; }});. }} else if (typeof JSROOT !== 'undefined') {{. // JSROOT already loaded, just use it; display_{jsDivId}(JSROOT);. }} else {{. // We are in jupyterlab without require.js, directly loading jsroot; // Jupyterlab might be installed in a different base_url so we need to know it.; try {{; var base_url = JSON.parse(document.getElementById('jupyter-config-data').innerHTML).baseUrl;; }} catch(_) {{; var base_url = '/';; }}. // Try loading a local version of requirejs and fallback to cdn if not possible.; script_load_{jsDivId}(base_url + 'static/build/jsroot.js', function(){{; console.error('Fail to load JSROOT locally, please check your jupyter_notebook_config.py file');; script_load_{jsDivId}('https://root.cern/js/7.7.4/build/jsroot.js', function(){{; document.getElementById(""{jsDivId}"").innerHTML = ""Failed to load JSROOT"";; }});; }});; }}. </script>; """"""",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:1268,Modifiability,config,config-data,1268,""""""". <div id=""{jsDivId}"" style=""width: {jsCanvasWidth}px; height: {jsCanvasHeight}px; position: relative"">; </div>. <script>. function display_{jsDivId}(Core) {{; let obj = Core.parse({jsonContent});; Core.settings.HandleKeys = false;; Core.draw(""{jsDivId}"", obj, ""{jsDrawOptions}"");; }}. function script_load_{jsDivId}(src, on_error) {{; let script = document.createElement('script');; script.src = src;; script.onload = function() {{ display_{jsDivId}(JSROOT); }};; script.onerror = function() {{ script.remove(); on_error(); }};; document.head.appendChild(script);; }}. if (typeof requirejs !== 'undefined') {{. // We are in jupyter notebooks, use require.js which should be configured already; requirejs.config({{; paths: {{ 'JSRootCore' : [ 'build/jsroot', 'https://root.cern/js/7.7.4/build/jsroot', 'https://jsroot.gsi.de/7.7.4/build/jsroot' ] }}; }})(['JSRootCore'], function(Core) {{; display_{jsDivId}(Core);; }});. }} else if (typeof JSROOT !== 'undefined') {{. // JSROOT already loaded, just use it; display_{jsDivId}(JSROOT);. }} else {{. // We are in jupyterlab without require.js, directly loading jsroot; // Jupyterlab might be installed in a different base_url so we need to know it.; try {{; var base_url = JSON.parse(document.getElementById('jupyter-config-data').innerHTML).baseUrl;; }} catch(_) {{; var base_url = '/';; }}. // Try loading a local version of requirejs and fallback to cdn if not possible.; script_load_{jsDivId}(base_url + 'static/build/jsroot.js', function(){{; console.error('Fail to load JSROOT locally, please check your jupyter_notebook_config.py file');; script_load_{jsDivId}('https://root.cern/js/7.7.4/build/jsroot.js', function(){{; document.getElementById(""{jsDivId}"").innerHTML = ""Failed to load JSROOT"";; }});; }});; }}. </script>; """"""",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:990,Performance,load,loaded,990,""""""". <div id=""{jsDivId}"" style=""width: {jsCanvasWidth}px; height: {jsCanvasHeight}px; position: relative"">; </div>. <script>. function display_{jsDivId}(Core) {{; let obj = Core.parse({jsonContent});; Core.settings.HandleKeys = false;; Core.draw(""{jsDivId}"", obj, ""{jsDrawOptions}"");; }}. function script_load_{jsDivId}(src, on_error) {{; let script = document.createElement('script');; script.src = src;; script.onload = function() {{ display_{jsDivId}(JSROOT); }};; script.onerror = function() {{ script.remove(); on_error(); }};; document.head.appendChild(script);; }}. if (typeof requirejs !== 'undefined') {{. // We are in jupyter notebooks, use require.js which should be configured already; requirejs.config({{; paths: {{ 'JSRootCore' : [ 'build/jsroot', 'https://root.cern/js/7.7.4/build/jsroot', 'https://jsroot.gsi.de/7.7.4/build/jsroot' ] }}; }})(['JSRootCore'], function(Core) {{; display_{jsDivId}(Core);; }});. }} else if (typeof JSROOT !== 'undefined') {{. // JSROOT already loaded, just use it; display_{jsDivId}(JSROOT);. }} else {{. // We are in jupyterlab without require.js, directly loading jsroot; // Jupyterlab might be installed in a different base_url so we need to know it.; try {{; var base_url = JSON.parse(document.getElementById('jupyter-config-data').innerHTML).baseUrl;; }} catch(_) {{; var base_url = '/';; }}. // Try loading a local version of requirejs and fallback to cdn if not possible.; script_load_{jsDivId}(base_url + 'static/build/jsroot.js', function(){{; console.error('Fail to load JSROOT locally, please check your jupyter_notebook_config.py file');; script_load_{jsDivId}('https://root.cern/js/7.7.4/build/jsroot.js', function(){{; document.getElementById(""{jsDivId}"").innerHTML = ""Failed to load JSROOT"";; }});; }});; }}. </script>; """"""",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:1104,Performance,load,loading,1104,""""""". <div id=""{jsDivId}"" style=""width: {jsCanvasWidth}px; height: {jsCanvasHeight}px; position: relative"">; </div>. <script>. function display_{jsDivId}(Core) {{; let obj = Core.parse({jsonContent});; Core.settings.HandleKeys = false;; Core.draw(""{jsDivId}"", obj, ""{jsDrawOptions}"");; }}. function script_load_{jsDivId}(src, on_error) {{; let script = document.createElement('script');; script.src = src;; script.onload = function() {{ display_{jsDivId}(JSROOT); }};; script.onerror = function() {{ script.remove(); on_error(); }};; document.head.appendChild(script);; }}. if (typeof requirejs !== 'undefined') {{. // We are in jupyter notebooks, use require.js which should be configured already; requirejs.config({{; paths: {{ 'JSRootCore' : [ 'build/jsroot', 'https://root.cern/js/7.7.4/build/jsroot', 'https://jsroot.gsi.de/7.7.4/build/jsroot' ] }}; }})(['JSRootCore'], function(Core) {{; display_{jsDivId}(Core);; }});. }} else if (typeof JSROOT !== 'undefined') {{. // JSROOT already loaded, just use it; display_{jsDivId}(JSROOT);. }} else {{. // We are in jupyterlab without require.js, directly loading jsroot; // Jupyterlab might be installed in a different base_url so we need to know it.; try {{; var base_url = JSON.parse(document.getElementById('jupyter-config-data').innerHTML).baseUrl;; }} catch(_) {{; var base_url = '/';; }}. // Try loading a local version of requirejs and fallback to cdn if not possible.; script_load_{jsDivId}(base_url + 'static/build/jsroot.js', function(){{; console.error('Fail to load JSROOT locally, please check your jupyter_notebook_config.py file');; script_load_{jsDivId}('https://root.cern/js/7.7.4/build/jsroot.js', function(){{; document.getElementById(""{jsDivId}"").innerHTML = ""Failed to load JSROOT"";; }});; }});; }}. </script>; """"""",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:1351,Performance,load,loading,1351,""""""". <div id=""{jsDivId}"" style=""width: {jsCanvasWidth}px; height: {jsCanvasHeight}px; position: relative"">; </div>. <script>. function display_{jsDivId}(Core) {{; let obj = Core.parse({jsonContent});; Core.settings.HandleKeys = false;; Core.draw(""{jsDivId}"", obj, ""{jsDrawOptions}"");; }}. function script_load_{jsDivId}(src, on_error) {{; let script = document.createElement('script');; script.src = src;; script.onload = function() {{ display_{jsDivId}(JSROOT); }};; script.onerror = function() {{ script.remove(); on_error(); }};; document.head.appendChild(script);; }}. if (typeof requirejs !== 'undefined') {{. // We are in jupyter notebooks, use require.js which should be configured already; requirejs.config({{; paths: {{ 'JSRootCore' : [ 'build/jsroot', 'https://root.cern/js/7.7.4/build/jsroot', 'https://jsroot.gsi.de/7.7.4/build/jsroot' ] }}; }})(['JSRootCore'], function(Core) {{; display_{jsDivId}(Core);; }});. }} else if (typeof JSROOT !== 'undefined') {{. // JSROOT already loaded, just use it; display_{jsDivId}(JSROOT);. }} else {{. // We are in jupyterlab without require.js, directly loading jsroot; // Jupyterlab might be installed in a different base_url so we need to know it.; try {{; var base_url = JSON.parse(document.getElementById('jupyter-config-data').innerHTML).baseUrl;; }} catch(_) {{; var base_url = '/';; }}. // Try loading a local version of requirejs and fallback to cdn if not possible.; script_load_{jsDivId}(base_url + 'static/build/jsroot.js', function(){{; console.error('Fail to load JSROOT locally, please check your jupyter_notebook_config.py file');; script_load_{jsDivId}('https://root.cern/js/7.7.4/build/jsroot.js', function(){{; document.getElementById(""{jsDivId}"").innerHTML = ""Failed to load JSROOT"";; }});; }});; }}. </script>; """"""",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:1522,Performance,load,load,1522,""""""". <div id=""{jsDivId}"" style=""width: {jsCanvasWidth}px; height: {jsCanvasHeight}px; position: relative"">; </div>. <script>. function display_{jsDivId}(Core) {{; let obj = Core.parse({jsonContent});; Core.settings.HandleKeys = false;; Core.draw(""{jsDivId}"", obj, ""{jsDrawOptions}"");; }}. function script_load_{jsDivId}(src, on_error) {{; let script = document.createElement('script');; script.src = src;; script.onload = function() {{ display_{jsDivId}(JSROOT); }};; script.onerror = function() {{ script.remove(); on_error(); }};; document.head.appendChild(script);; }}. if (typeof requirejs !== 'undefined') {{. // We are in jupyter notebooks, use require.js which should be configured already; requirejs.config({{; paths: {{ 'JSRootCore' : [ 'build/jsroot', 'https://root.cern/js/7.7.4/build/jsroot', 'https://jsroot.gsi.de/7.7.4/build/jsroot' ] }}; }})(['JSRootCore'], function(Core) {{; display_{jsDivId}(Core);; }});. }} else if (typeof JSROOT !== 'undefined') {{. // JSROOT already loaded, just use it; display_{jsDivId}(JSROOT);. }} else {{. // We are in jupyterlab without require.js, directly loading jsroot; // Jupyterlab might be installed in a different base_url so we need to know it.; try {{; var base_url = JSON.parse(document.getElementById('jupyter-config-data').innerHTML).baseUrl;; }} catch(_) {{; var base_url = '/';; }}. // Try loading a local version of requirejs and fallback to cdn if not possible.; script_load_{jsDivId}(base_url + 'static/build/jsroot.js', function(){{; console.error('Fail to load JSROOT locally, please check your jupyter_notebook_config.py file');; script_load_{jsDivId}('https://root.cern/js/7.7.4/build/jsroot.js', function(){{; document.getElementById(""{jsDivId}"").innerHTML = ""Failed to load JSROOT"";; }});; }});; }}. </script>; """"""",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:1739,Performance,load,load,1739,""""""". <div id=""{jsDivId}"" style=""width: {jsCanvasWidth}px; height: {jsCanvasHeight}px; position: relative"">; </div>. <script>. function display_{jsDivId}(Core) {{; let obj = Core.parse({jsonContent});; Core.settings.HandleKeys = false;; Core.draw(""{jsDivId}"", obj, ""{jsDrawOptions}"");; }}. function script_load_{jsDivId}(src, on_error) {{; let script = document.createElement('script');; script.src = src;; script.onload = function() {{ display_{jsDivId}(JSROOT); }};; script.onerror = function() {{ script.remove(); on_error(); }};; document.head.appendChild(script);; }}. if (typeof requirejs !== 'undefined') {{. // We are in jupyter notebooks, use require.js which should be configured already; requirejs.config({{; paths: {{ 'JSRootCore' : [ 'build/jsroot', 'https://root.cern/js/7.7.4/build/jsroot', 'https://jsroot.gsi.de/7.7.4/build/jsroot' ] }}; }})(['JSRootCore'], function(Core) {{; display_{jsDivId}(Core);; }});. }} else if (typeof JSROOT !== 'undefined') {{. // JSROOT already loaded, just use it; display_{jsDivId}(JSROOT);. }} else {{. // We are in jupyterlab without require.js, directly loading jsroot; // Jupyterlab might be installed in a different base_url so we need to know it.; try {{; var base_url = JSON.parse(document.getElementById('jupyter-config-data').innerHTML).baseUrl;; }} catch(_) {{; var base_url = '/';; }}. // Try loading a local version of requirejs and fallback to cdn if not possible.; script_load_{jsDivId}(base_url + 'static/build/jsroot.js', function(){{; console.error('Fail to load JSROOT locally, please check your jupyter_notebook_config.py file');; script_load_{jsDivId}('https://root.cern/js/7.7.4/build/jsroot.js', function(){{; document.getElementById(""{jsDivId}"").innerHTML = ""Failed to load JSROOT"";; }});; }});; }}. </script>; """"""",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:65,Testability,Test,Test,65,"'''; >>> s=""// hello""; >>> commentRemover(s); ''; >>> s=""int /** Test **/ main() {return 0;}""; >>> commentRemover(s); 'int main() {return 0;}'; '''",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:117,Availability,error,error,117,"'''FIXME!; This function is a workaround. On osx, it is impossible to link against; libzmq.so, among the others. The error is known and is; ""ld: can't link with bundle (MH_BUNDLE) only dylibs (MH_DYLIB)""; We cannot at the moment force Aclic to change the linker command in order; to exclude these libraries, so we launch a second root session to compile; the library, which we then load.; '''",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:382,Performance,load,load,382,"'''FIXME!; This function is a workaround. On osx, it is impossible to link against; libzmq.so, among the others. The error is known and is; ""ld: can't link with bundle (MH_BUNDLE) only dylibs (MH_DYLIB)""; We cannot at the moment force Aclic to change the linker command in order; to exclude these libraries, so we launch a second root session to compile; the library, which we then load.; '''",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py:35,Deployability,update,update,35,"# all other objects do not support update and can be ignored",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/helpers/utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/html/cpphighlighter.py:5,Safety,Detect,Detects,5,"""""""; Detects and tags code cells that use the C++ language.; """"""",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/html/cpphighlighter.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/html/cpphighlighter.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/kernel/utils.py:12,Performance,load,load,12,'''Class to load JupyROOT Magics''',MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/kernel/utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/kernel/utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/kernel/magics/cppmagic.py:45,Availability,error,error,45,"#NOTE:actually JupyROOT is not capturing the error on %%cpp -d if the function is wrong",MatchSource.CODE_COMMENT,bindings/jupyroot/python/JupyROOT/kernel/magics/cppmagic.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/kernel/magics/cppmagic.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/setup.py:31,Usability,guid,guides,31,"# https://packaging.python.org/guides/single-sourcing-package-version/",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/setup.py:7,Deployability,install,install,7,"# base install",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/setup.py:62,Availability,avail,available,62,"# force build of the .pch underneath the cppyy package if not available yet",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/setup.py:112,Deployability,install,installed,112,"# TODO: numba_extensions will load all extensions even if the package; # itself is not otherwise imported, just installed; in the case of cppyy,; # that is currently too heavy (and breaks on conda); #entry_points={; # 'numba_extensions': [; # 'init = cppyy.numba_ext:_init_extension',; # ],; #},",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/setup.py:30,Performance,load,load,30,"# TODO: numba_extensions will load all extensions even if the package; # itself is not otherwise imported, just installed; in the case of cppyy,; # that is currently too heavy (and breaks on conda); #entry_points={; # 'numba_extensions': [; # 'init = cppyy.numba_ext:_init_extension',; # ],; #},",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:34,Testability,benchmark,benchmark,34,"""""""; def test_{0}_free_empty_call(benchmark):; benchmark({1}.empty_call); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:47,Testability,benchmark,benchmark,47,"""""""; def test_{0}_free_empty_call(benchmark):; benchmark({1}.empty_call); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:34,Testability,benchmark,benchmark,34,"""""""; def test_{0}_inst_empty_call(benchmark):; inst = {1}.EmptyCall(); benchmark(call_instance_empty, inst); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:71,Testability,benchmark,benchmark,71,"""""""; def test_{0}_inst_empty_call(benchmark):; inst = {1}.EmptyCall(); benchmark(call_instance_empty, inst); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:35,Testability,benchmark,benchmark,35,"""""""; def test_{0}_free_take_an_int(benchmark):; benchmark({1}.take_an_int, 1); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:48,Testability,benchmark,benchmark,48,"""""""; def test_{0}_free_take_an_int(benchmark):; benchmark({1}.take_an_int, 1); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:37,Testability,benchmark,benchmark,37,"""""""; def test_{0}_free_take_a_double(benchmark):; benchmark({1}.take_a_double, 1.); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:50,Testability,benchmark,benchmark,50,"""""""; def test_{0}_free_take_a_double(benchmark):; benchmark({1}.take_a_double, 1.); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:37,Testability,benchmark,benchmark,37,"""""""; def test_{0}_free_take_a_struct(benchmark):; benchmark({1}.take_a_struct, {1}.Value()); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:50,Testability,benchmark,benchmark,50,"""""""; def test_{0}_free_take_a_struct(benchmark):; benchmark({1}.take_a_struct, {1}.Value()); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:35,Testability,benchmark,benchmark,35,"""""""; def test_{0}_inst_take_an_int(benchmark):; inst = {1}.TakeAValue(); benchmark(call_instance_take_an_int, inst, 1); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:73,Testability,benchmark,benchmark,73,"""""""; def test_{0}_inst_take_an_int(benchmark):; inst = {1}.TakeAValue(); benchmark(call_instance_take_an_int, inst, 1); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:37,Testability,benchmark,benchmark,37,"""""""; def test_{0}_inst_take_a_double(benchmark):; inst = {1}.TakeAValue(); benchmark(call_instance_take_a_double, inst, 1.); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:75,Testability,benchmark,benchmark,75,"""""""; def test_{0}_inst_take_a_double(benchmark):; inst = {1}.TakeAValue(); benchmark(call_instance_take_a_double, inst, 1.); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:37,Testability,benchmark,benchmark,37,"""""""; def test_{0}_inst_take_a_struct(benchmark):; inst = {1}.TakeAValue(); benchmark(call_instance_take_a_struct, inst, {1}.Value()); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:75,Testability,benchmark,benchmark,75,"""""""; def test_{0}_inst_take_a_struct(benchmark):; inst = {1}.TakeAValue(); benchmark(call_instance_take_a_struct, inst, {1}.Value()); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:32,Testability,benchmark,benchmark,32,"""""""; def test_{0}_inst_pass_int(benchmark):; inst = {1}.TakeAValue(); benchmark(call_instance_pass_int, inst, 1); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:70,Testability,benchmark,benchmark,70,"""""""; def test_{0}_inst_pass_int(benchmark):; inst = {1}.TakeAValue(); benchmark(call_instance_pass_int, inst, 1); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:31,Testability,benchmark,benchmark,31,"""""""; def test_{0}_free_do_work(benchmark):; benchmark({1}.do_work, 1.); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:44,Testability,benchmark,benchmark,44,"""""""; def test_{0}_free_do_work(benchmark):; benchmark({1}.do_work, 1.); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:31,Testability,benchmark,benchmark,31,"""""""; def test_{0}_inst_do_work(benchmark):; inst = {1}.DoWork(); benchmark(call_instance_do_work, inst); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:65,Testability,benchmark,benchmark,65,"""""""; def test_{0}_inst_do_work(benchmark):; inst = {1}.DoWork(); benchmark(call_instance_do_work, inst); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:32,Testability,benchmark,benchmark,32,"""""""; def test_{0}_inst_overload(benchmark):; inst = {1}.OverloadedCall(); benchmark(call_instance_overload, inst); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py:74,Testability,benchmark,benchmark,74,"""""""; def test_{0}_inst_overload(benchmark):; inst = {1}.OverloadedCall(); benchmark(call_instance_overload, inst); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_functioncalls.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_runvector.py:29,Testability,benchmark,benchmark,29,"""""""; def test_{0}_stl_vector(benchmark):; benchmark(sum, {1}.global_vector); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_runvector.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_runvector.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_runvector.py:42,Testability,benchmark,benchmark,42,"""""""; def test_{0}_stl_vector(benchmark):; benchmark(sum, {1}.global_vector); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/bench/bench_runvector.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/bench/bench_runvector.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:56,Deployability,configurat,configuration,56,"# -*- coding: utf-8 -*-; #; # cppyy documentation build configuration file, created by; # sphinx-quickstart on Wed Jul 12 14:35:45 2017.; #; # This file is execfile()d with the current directory set to its; # containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:258,Deployability,configurat,configuration,258,"# -*- coding: utf-8 -*-; #; # cppyy documentation build configuration file, created by; # sphinx-quickstart on Wed Jul 12 14:35:45 2017.; #; # This file is execfile()d with the current directory set to its; # containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:332,Deployability,configurat,configuration,332,"# -*- coding: utf-8 -*-; #; # cppyy documentation build configuration file, created by; # sphinx-quickstart on Wed Jul 12 14:35:45 2017.; #; # This file is execfile()d with the current directory set to its; # containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:56,Modifiability,config,configuration,56,"# -*- coding: utf-8 -*-; #; # cppyy documentation build configuration file, created by; # sphinx-quickstart on Wed Jul 12 14:35:45 2017.; #; # This file is execfile()d with the current directory set to its; # containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:258,Modifiability,config,configuration,258,"# -*- coding: utf-8 -*-; #; # cppyy documentation build configuration file, created by; # sphinx-quickstart on Wed Jul 12 14:35:45 2017.; #; # This file is execfile()d with the current directory set to its; # containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:332,Modifiability,config,configuration,332,"# -*- coding: utf-8 -*-; #; # cppyy documentation build configuration file, created by; # sphinx-quickstart on Wed Jul 12 14:35:45 2017.; #; # This file is execfile()d with the current directory set to its; # containing dir.; #; # Note that not all possible configuration values are present in this; # autogenerated file.; #; # All configuration values have a default; values that are commented out; # serve to show the default.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:297,Deployability,configurat,configuration,297,"# If extensions (or modules to document with autodoc) are in another directory,; # add these directories to sys.path here. If the directory is relative to the; # documentation root, use os.path.abspath to make it absolute, like shown here.; #sys.path.insert(0, os.path.abspath('.')); # -- General configuration ------------------------------------------------; # If your documentation needs a minimal Sphinx version, state it here.; #needs_sphinx = '1.0'; # Add any Sphinx extension module names here, as strings. They can be; # extensions coming with Sphinx (named 'sphinx.ext.*') or your custom; # ones.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:297,Modifiability,config,configuration,297,"# If extensions (or modules to document with autodoc) are in another directory,; # add these directories to sys.path here. If the directory is relative to the; # documentation root, use os.path.abspath to make it absolute, like shown here.; #sys.path.insert(0, os.path.abspath('.')); # -- General configuration ------------------------------------------------; # If your documentation needs a minimal Sphinx version, state it here.; #needs_sphinx = '1.0'; # Add any Sphinx extension module names here, as strings. They can be; # extensions coming with Sphinx (named 'sphinx.ext.*') or your custom; # ones.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:97,Deployability,release,release,97,"# The version info for the project you're documenting, acts as replacement for; # |version| and |release|, also used in various other places throughout the; # built documents.; #; # The short X.Y version.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:122,Integrability,message,message,122,"# A list of ignored prefixes for module index sorting.; #modindex_common_prefix = []; # If true, keep warnings as ""system message"" paragraphs in the built documents.; #keep_warnings = False; # If true, `todo` and `todoList` produce output, else they produce nothing.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:112,Availability,avail,available,112,"# Theme options are theme-specific and customize the look and feel of a theme; # further. For a list of options available for each theme, see the; # documentation.; #html_theme_options = {}; # Add any paths that contain custom themes here, relative to this directory.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:85,Deployability,release,release,85,"# The name for this set of Sphinx documents. If None, it defaults to; # ""<project> v<release> documentation"".; #html_title = None; # A shorter title for the navigation bar. Default is the same as html_title.; #html_short_title = None; # The name of an image file (relative to this directory) to place at the top; # of the sidebar.; #html_logo = None; # The name of an image file (within the static path) to use as favicon of the; # docs. This file should be a Windows icon file (.ico) being 16x16 or 32x32; # pixels large.; #html_favicon = None; # Add any paths that contain custom static files (such as style sheets) here,; # relative to this directory. They are copied after the builtin static files,; # so a file named ""default.css"" will overwrite the builtin ""default.css"".",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:233,Deployability,update,updated,233,"# Add any extra paths that contain custom files (such as robots.txt or; # .htaccess) here, relative to this directory. These files are copied; # directly to the root of the documentation.; #html_extra_path = []; # If not '', a 'Last updated on:' timestamp is inserted at every page bottom,; # using the given strftime format.; #html_last_updated_fmt = '%b %d, %Y'; # If true, SmartyPants will be used to convert quotes and dashes to; # typographically correct entities.; #html_use_smartypants = True; # Custom sidebar templates, maps document names to template names.; #html_sidebars = {}; # Additional templates that should be rendered to pages, maps page names to; # template names.; #html_additional_pages = {}; # If false, no module index is generated.; #html_domain_indices = True; # If false, no index is generated.; #html_use_index = True; # If true, the index is split into individual pages for each letter.; #html_split_index = False; # If true, links to the reST sources are added to the pages.; #html_show_sourcelink = True; # If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.; #html_show_sphinx = True; # If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.; #html_show_copyright = True; # If true, an OpenSearch description file will be output, and all pages will; # contain a <link> tag referring to it. The value of this option must be the; # base URL from which the finished HTML is served.; #html_use_opensearch = ''; # This is the file name suffix for HTML files (e.g. "".xhtml"").; #html_file_suffix = None; # Language to be used for generating the HTML full-text search index.; # Sphinx supports the following languages:; # 'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'; # 'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'; #html_search_language = 'en'; # A dictionary with options for the search language support, empty by default.; # Now only 'ja' uses this config value; #html_search_options = {'type': 'default'}; # The name of a j",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:2033,Deployability,configurat,configuration,2033,"'', a 'Last updated on:' timestamp is inserted at every page bottom,; # using the given strftime format.; #html_last_updated_fmt = '%b %d, %Y'; # If true, SmartyPants will be used to convert quotes and dashes to; # typographically correct entities.; #html_use_smartypants = True; # Custom sidebar templates, maps document names to template names.; #html_sidebars = {}; # Additional templates that should be rendered to pages, maps page names to; # template names.; #html_additional_pages = {}; # If false, no module index is generated.; #html_domain_indices = True; # If false, no index is generated.; #html_use_index = True; # If true, the index is split into individual pages for each letter.; #html_split_index = False; # If true, links to the reST sources are added to the pages.; #html_show_sourcelink = True; # If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.; #html_show_sphinx = True; # If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.; #html_show_copyright = True; # If true, an OpenSearch description file will be output, and all pages will; # contain a <link> tag referring to it. The value of this option must be the; # base URL from which the finished HTML is served.; #html_use_opensearch = ''; # This is the file name suffix for HTML files (e.g. "".xhtml"").; #html_file_suffix = None; # Language to be used for generating the HTML full-text search index.; # Sphinx supports the following languages:; # 'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'; # 'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'; #html_search_language = 'en'; # A dictionary with options for the search language support, empty by default.; # Now only 'ja' uses this config value; #html_search_options = {'type': 'default'}; # The name of a javascript file (relative to the configuration directory) that; # implements a search results scorer. If empty, the default will be used.; #html_search_scorer = 'scorer.js'; # Output file base name for HTML help builder.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:1926,Modifiability,config,config,1926,"'', a 'Last updated on:' timestamp is inserted at every page bottom,; # using the given strftime format.; #html_last_updated_fmt = '%b %d, %Y'; # If true, SmartyPants will be used to convert quotes and dashes to; # typographically correct entities.; #html_use_smartypants = True; # Custom sidebar templates, maps document names to template names.; #html_sidebars = {}; # Additional templates that should be rendered to pages, maps page names to; # template names.; #html_additional_pages = {}; # If false, no module index is generated.; #html_domain_indices = True; # If false, no index is generated.; #html_use_index = True; # If true, the index is split into individual pages for each letter.; #html_split_index = False; # If true, links to the reST sources are added to the pages.; #html_show_sourcelink = True; # If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.; #html_show_sphinx = True; # If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.; #html_show_copyright = True; # If true, an OpenSearch description file will be output, and all pages will; # contain a <link> tag referring to it. The value of this option must be the; # base URL from which the finished HTML is served.; #html_use_opensearch = ''; # This is the file name suffix for HTML files (e.g. "".xhtml"").; #html_file_suffix = None; # Language to be used for generating the HTML full-text search index.; # Sphinx supports the following languages:; # 'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'; # 'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'; #html_search_language = 'en'; # A dictionary with options for the search language support, empty by default.; # Now only 'ja' uses this config value; #html_search_options = {'type': 'default'}; # The name of a javascript file (relative to the configuration directory) that; # implements a search results scorer. If empty, the default will be used.; #html_search_scorer = 'scorer.js'; # Output file base name for HTML help builder.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:2033,Modifiability,config,configuration,2033,"'', a 'Last updated on:' timestamp is inserted at every page bottom,; # using the given strftime format.; #html_last_updated_fmt = '%b %d, %Y'; # If true, SmartyPants will be used to convert quotes and dashes to; # typographically correct entities.; #html_use_smartypants = True; # Custom sidebar templates, maps document names to template names.; #html_sidebars = {}; # Additional templates that should be rendered to pages, maps page names to; # template names.; #html_additional_pages = {}; # If false, no module index is generated.; #html_domain_indices = True; # If false, no index is generated.; #html_use_index = True; # If true, the index is split into individual pages for each letter.; #html_split_index = False; # If true, links to the reST sources are added to the pages.; #html_show_sourcelink = True; # If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.; #html_show_sphinx = True; # If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.; #html_show_copyright = True; # If true, an OpenSearch description file will be output, and all pages will; # contain a <link> tag referring to it. The value of this option must be the; # base URL from which the finished HTML is served.; #html_use_opensearch = ''; # This is the file name suffix for HTML files (e.g. "".xhtml"").; #html_file_suffix = None; # Language to be used for generating the HTML full-text search index.; # Sphinx supports the following languages:; # 'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'; # 'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'; #html_search_language = 'en'; # A dictionary with options for the search language support, empty by default.; # Now only 'ja' uses this config value; #html_search_options = {'type': 'default'}; # The name of a javascript file (relative to the configuration directory) that; # implements a search results scorer. If empty, the default will be used.; #html_search_scorer = 'scorer.js'; # Output file base name for HTML help builder.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:165,Performance,optimiz,optimized,165,"# The basename for the epub file. It defaults to the project name.; #epub_basename = project; # The HTML theme for the epub output. Since the default themes are not optimized; # for small screen space, using the same theme for HTML and epub output is; # usually not wise. This defaults to 'epub', a theme designed to save visual; # space.; #epub_theme = 'epub'; # The language of the text. It defaults to the language option; # or 'en' if the language is not set.; #epub_language = ''; # The scheme of the identifier. Typical schemes are ISBN or URL.; #epub_scheme = ''; # The unique identifier of the text. This can be a ISBN number; # or the project homepage.; #epub_identifier = ''; # A unique identification for the text.; #epub_uid = ''; # A tuple containing the cover image and cover page html template filenames.; #epub_cover = (); # A sequence of (type, uri, title) tuples for the guide element of content.opf.; #epub_guide = (); # HTML files that should be inserted before the pages created by sphinx.; # The format is a list of tuples containing the path and title.; #epub_pre_files = []; # HTML files shat should be inserted after the pages created by sphinx.; # The format is a list of tuples containing the path and title.; #epub_post_files = []; # A list of files that should not be packed into the epub file.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:889,Usability,guid,guide,889,"# The basename for the epub file. It defaults to the project name.; #epub_basename = project; # The HTML theme for the epub output. Since the default themes are not optimized; # for small screen space, using the same theme for HTML and epub output is; # usually not wise. This defaults to 'epub', a theme designed to save visual; # space.; #epub_theme = 'epub'; # The language of the text. It defaults to the language option; # or 'en' if the language is not set.; #epub_language = ''; # The scheme of the identifier. Typical schemes are ISBN or URL.; #epub_scheme = ''; # The unique identifier of the text. This can be a ISBN number; # or the project homepage.; #epub_identifier = ''; # A unique identification for the text.; #epub_uid = ''; # A tuple containing the cover image and cover page html template filenames.; #epub_cover = (); # A sequence of (type, uri, title) tuples for the guide element of content.opf.; #epub_guide = (); # HTML files that should be inserted before the pages created by sphinx.; # The format is a list of tuples containing the path and title.; #epub_pre_files = []; # HTML files shat should be inserted after the pages created by sphinx.; # The format is a list of tuples containing the path and title.; #epub_post_files = []; # A list of files that should not be packed into the epub file.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/installer/cppyy_monkey_patch.py:9,Deployability,patch,patch,9,"# monkey patch to be able to select a specific backend based on PyPy's version,; # which is not possible in the pyproject.toml file as there is currently no; # marker for it (this may change, after which this file can be removed)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/installer/cppyy_monkey_patch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/installer/cppyy_monkey_patch.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/installer/cppyy_monkey_patch.py:37,Deployability,install,installation,37,"# the following ensures proper build/installation order, after which the normal; # install through setup.py picks up their wheels from the cache (TODO: note the; # duplication here with setup.py; find a better way)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/installer/cppyy_monkey_patch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/installer/cppyy_monkey_patch.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/installer/cppyy_monkey_patch.py:83,Deployability,install,install,83,"# the following ensures proper build/installation order, after which the normal; # install through setup.py picks up their wheels from the cache (TODO: note the; # duplication here with setup.py; find a better way)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/installer/cppyy_monkey_patch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/installer/cppyy_monkey_patch.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/installer/cppyy_monkey_patch.py:139,Performance,cache,cache,139,"# the following ensures proper build/installation order, after which the normal; # install through setup.py picks up their wheels from the cache (TODO: note the; # duplication here with setup.py; find a better way)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/installer/cppyy_monkey_patch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/installer/cppyy_monkey_patch.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py:15,Security,access,access,15,"# special case access to unboxing/boxing APIs",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py:96,Safety,detect,detect,96,"# If the user explicitly passes an argument using numba CPointer, the regex match is used; # to detect the pass by reference since the dispatcher always returns typeref[val*]",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py:19,Safety,redund,redundancy,19,"#TODO : Remove the redundancy of __overload__ matching and use this function to only obtain the address given the matched overload",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py:111,Usability,simpl,simply,111,"# the function pointer of this overload can not be exactly typed, but; # only the storage size is relevant, so simply use a void*",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py:142,Performance,load,loads,142,"# TODO: the following relies on the fact that numba will first lower the; # field access, then immediately lower the call; and that the `val` loads; # the struct representing the C++ object. Neither need be stable.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py:82,Security,access,access,82,"# TODO: the following relies on the fact that numba will first lower the; # field access, then immediately lower the call; and that the `val` loads; # the struct representing the C++ object. Neither need be stable.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py:174,Modifiability,flexible,flexible,174,"# TODO : Should the address have to be passed here and stored in meminfo; # value: representation inside function body. Maybe stored in stack.; # The representation here are flexible.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py:121,Usability,simpl,simply,121,"# The struct model relies on data being a POD, but for C++ objects, there; # can be hidden data (e.g. vtable, thunks, or simply private members), and; # the alignment of Cling and Numba also need not be the same. Therefore, the; # struct is split in a series of byte members to get the total size right; # and to allow addressing at the correct offsets.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py:21,Security,access,accessed,21,"# proxies are always accessed by pointer, which are not composites",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py:185,Modifiability,flexible,flexible,185,"# data: representation used when storing into containers (e.g. arrays).; # TODO ...; # value: representation inside function body. Maybe stored in stack.; # The representation here are flexible.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py:203,Performance,load,loading,203,"# the C++ object, b/c through a proxy, is always accessed by pointer; it is represented; # as a pointer to POD to allow indexing by Numba for data member type checking, but the; # address offsetting for loading data member values is independent (see get(), below),; # so the exact layout need not match a POD; # TODO: this doesn't work for real PODs, b/c those are unpacked into their elements and; # passed through registers",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py:49,Security,access,accessed,49,"# the C++ object, b/c through a proxy, is always accessed by pointer; it is represented; # as a pointer to POD to allow indexing by Numba for data member type checking, but the; # address offsetting for loading data member values is independent (see get(), below),; # so the exact layout need not match a POD; # TODO: this doesn't work for real PODs, b/c those are unpacked into their elements and; # passed through registers",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py:66,Security,access,access,66,"# return: representation used for return argument.; # TODO ...; # access to public data members",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py:29,Integrability,wrap,wrapping,29,"# C++ object to Python proxy wrapping for returns from Numba trace",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py:17,Integrability,depend,dependency,17,"# first load the dependency libraries of the backend, then pull in the; # libcppyy extension module",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py:8,Performance,load,load,8,"# first load the dependency libraries of the backend, then pull in the; # libcppyy extension module",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py:13,Security,expose,expose,13,"# explicitly expose APIs from libcppyy",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py:83,Usability,simpl,simply,83,"# TODO: this reliese on CPPOverload cooking up a func_code object, which atm; # is simply not implemented for p3 :/; # convince inspect that cppyy method proxies are possible drop-ins for python; # methods and classes for pydoc",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py:49,Availability,avail,available,49,"# special case pythonization (builtin_map is not available from the C-API)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_pypy_cppyy.py:17,Integrability,depend,dependency,17,"# first load the dependency libraries of the backend, then; # pull in the built-in low-level cppyy",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/_pypy_cppyy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_pypy_cppyy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_pypy_cppyy.py:8,Performance,load,load,8,"# first load the dependency libraries of the backend, then; # pull in the built-in low-level cppyy",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/_pypy_cppyy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_pypy_cppyy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_pypy_cppyy.py:104,Availability,avail,available,104,"# some older versions can be fixed up through a compatibility; # module on the python side; load it, if available",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/_pypy_cppyy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_pypy_cppyy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_pypy_cppyy.py:92,Performance,load,load,92,"# some older versions can be fixed up through a compatibility; # module on the python side; load it, if available",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/_pypy_cppyy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_pypy_cppyy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_pythonization.py:33,Integrability,interface,interfaces,33,"# prevent auto-casting (e.g. for interfaces)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/_pythonization.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_pythonization.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_pythonization.py:12,Energy Efficiency,reduce,reduce,12,"# mapper to reduce template expression trees",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/_pythonization.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_pythonization.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_pythonization.py:3,Energy Efficiency,Reduce,Reduce,3,"""""""Reduce <reducable> to <reduced> type on returns from function calls.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/_pythonization.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_pythonization.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_pythonization.py:26,Energy Efficiency,reduce,reduced,26,"""""""Reduce <reducable> to <reduced> type on returns from function calls.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/_pythonization.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_pythonization.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_stdcpp_fix.py:97,Performance,load,loading,97,"# It may be that the interpreter (wether python or pypy-c) was not linked; # with C++; force its loading before doing anything else (note that not; # linking with C++ spells trouble anyway for any C++ libraries ...)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/_stdcpp_fix.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_stdcpp_fix.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_typemap.py:107,Energy Efficiency,charge,charge,107,"# from six.py ---; # Copyright (c) 2010-2017 Benjamin Peterson; #; # Permission is hereby granted, free of charge, to any person obtaining a copy; # of this software and associated documentation files (the ""Software""), to deal; # in the Software without restriction, including without limitation the rights; # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; # copies of the Software, and to permit persons to whom the Software is; # furnished to do so, subject to the following conditions:; #; # The above copyright notice and this permission notice shall be included in all; # copies or substantial portions of the Software.; #; # THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; # IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; # FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; # AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; # OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE; # SOFTWARE.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/_typemap.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_typemap.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_typemap.py:1001,Integrability,CONTRACT,CONTRACT,1001,"# from six.py ---; # Copyright (c) 2010-2017 Benjamin Peterson; #; # Permission is hereby granted, free of charge, to any person obtaining a copy; # of this software and associated documentation files (the ""Software""), to deal; # in the Software without restriction, including without limitation the rights; # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; # copies of the Software, and to permit persons to whom the Software is; # furnished to do so, subject to the following conditions:; #; # The above copyright notice and this permission notice shall be included in all; # copies or substantial portions of the Software.; #; # THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; # IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; # FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; # AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; # OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE; # SOFTWARE.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/_typemap.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_typemap.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:2,Performance,load,load,2,"# load and jit a header file",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:2,Performance,load,load,2,"# load and jit a C header file",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:2,Performance,load,load,2,"# load a shared library",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:22,Modifiability,inherit,inheritance,22,"# helper for multiple inheritance",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:132,Performance,perform,performant,132,"# pythonization of tuple; TODO: placed here for convenience, but a custom case; # for tuples on each platform can be made much more performant ...",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:57,Usability,simpl,simpler,57,"# pythonization of std::string; placed here because it's simpler to write the; # custom ""npos"" object (to allow easy result checking of find/rfind) in Python",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:5,Integrability,interface,interface,5,"#--- interface to Cling ------------------------------------------------------",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:14,Performance,load,load,14,"""""""Explicitly load a shared library.""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:12,Availability,error,error,12,"# raises on error",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:3,Performance,Load,Load,3,"""""""Load (and JIT) header file <header> into Cling.""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:3,Performance,Load,Load,3,"""""""Load (and JIT) header file <header> into Cling.""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:35,Availability,avail,available,35,"""""""Add a path to the include paths available to Cling.""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:42,Availability,avail,available,42,"""""""Add a path to the library search paths available to Cling.""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:6,Security,access,access,6,"# add access to Python C-API headers",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:6,Security,access,access,6,"# add access to extra headers for dispatcher (CPyCppyy only (?))",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:36,Modifiability,inherit,inheritance,36,"""""""Resolve metaclasses for multiple inheritance.""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy_compat/__init__.py:8,Performance,load,load,8,"# first load and move the builtin cppyy module",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy_compat/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy_compat/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy_compat/__init__.py:17,Performance,load,load,17,"# now locate and load the pip cppyy module",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/python/cppyy_compat/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy_compat/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx:7,Testability,test,testing,7,"// for testing of default arguments",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx:16,Modifiability,inherit,inheritance,16,"// for esoteric inheritance testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx:28,Testability,test,testing,28,"// for esoteric inheritance testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx:17,Testability,test,testing,17,"// for namespace testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx:16,Testability,test,testing,16,"// for template testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx:24,Testability,test,testing,24,"// for math conversions testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx:27,Security,access,access,27,"// a couple of globals for access testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx:34,Testability,test,testing,34,"// a couple of globals for access testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx:30,Testability,test,testing,30,"// for life-line and identity testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx:24,Modifiability,inherit,inheritance,24,"// for testing multiple inheritance",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx:7,Testability,test,testing,7,"// for testing multiple inheritance",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx:7,Testability,test,testing,7,"// for testing calls to overloaded new",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx:37,Energy Efficiency,allocate,allocated,37,"// no ++s_instances, as no memory is allocated",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx:18,Testability,test,testing,18,"// overload order testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx:22,Testability,test,testing,22,"// exception handling testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx:24,Testability,test,testing,24,"// for using directives testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:7,Testability,test,testing,7,"// for testing of default arguments",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:14,Modifiability,inherit,inheritance,14,"// for simple inheritance testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:26,Testability,test,testing,26,"// for simple inheritance testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:7,Usability,simpl,simple,7,"// for simple inheritance testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:16,Modifiability,inherit,inheritance,16,"// for esoteric inheritance testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:28,Testability,test,testing,28,"// for esoteric inheritance testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:17,Testability,test,testing,17,"// for namespace testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:16,Testability,test,testing,16,"// for template testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:6,Testability,test,test,6,"// to test abstract class handling",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:25,Testability,test,testing,25,"// for assignment by-ref testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:24,Testability,test,testing,24,"// for math conversions testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:27,Security,access,access,27,"// a couple of globals for access testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:34,Testability,test,testing,34,"// a couple of globals for access testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:30,Testability,test,testing,30,"// for life-line and identity testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:25,Testability,test,testing,25,"// for data member reuse testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:7,Testability,test,testing,7,"// for testing passing of void*'s",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:24,Modifiability,inherit,inheritance,24,"// for testing multiple inheritance",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:7,Testability,test,testing,7,"// for testing multiple inheritance",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:7,Testability,test,testing,7,"// for testing calls to overloaded new",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:17,Testability,test,testing,17,"// more template testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:18,Testability,test,testing,18,"// overload order testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:22,Testability,test,testing,22,"// exception handling testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:21,Testability,test,testing,21,"// using declaration testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:22,Testability,test,testing,22,"// typedef resolution testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h:24,Testability,test,testing,24,"// for using directives testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp2.cxx:17,Testability,test,testing,17,"// for namespace testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp2.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp2.h:17,Testability,test,testing,17,"// for namespace testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/advancedcpp2.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/advancedcpp2.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/assert_interactive.py:19,Availability,avail,available,19,"# full lazy lookup available",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/assert_interactive.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/assert_interactive.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/cpp11features.cxx:32,Testability,test,testing,32,"// for std::shared/unique_ptr<> testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/cpp11features.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/cpp11features.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/cpp11features.cxx:21,Testability,test,testing,21,"// for std::function testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/cpp11features.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/cpp11features.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/cpp11features.h:32,Testability,test,testing,32,"// for std::shared/unique_ptr<> testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/cpp11features.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/cpp11features.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/cpp11features.h:23,Testability,test,testing,23,"// for std::function<> testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/cpp11features.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/cpp11features.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/cpp11features.h:12,Security,hash,hash,12,"// for std::hash<> testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/cpp11features.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/cpp11features.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/cpp11features.h:19,Testability,test,testing,19,"// for std::hash<> testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/cpp11features.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/cpp11features.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/crossinheritance.cxx:24,Testability,test,testing,24,"// for protected member testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/crossinheritance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/crossinheritance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/crossinheritance.h:24,Testability,test,testing,24,"// for protected member testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/crossinheritance.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/crossinheritance.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/crossinheritance.h:3,Security,Access,AccessProtected,3,"// AccessProtected",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/crossinheritance.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/crossinheritance.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/datatypes.cxx:11,Modifiability,variab,variables,11,"//= global variables/pointers ===============================================",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/datatypes.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/datatypes.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/datatypes.cxx:11,Security,access,accessors,11,"//= global accessors ========================================================",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/datatypes.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/datatypes.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/datatypes.cxx:14,Testability,test,testing,14,"//= aggregate testing ======================================================",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/datatypes.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/datatypes.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/datatypes.h:23,Testability,test,testing,23,"// special case: const testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/datatypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/datatypes.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/datatypes.h:11,Modifiability,variab,variables,11,"//= global variables/pointers ===============================================",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/datatypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/datatypes.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/datatypes.h:11,Security,access,accessors,11,"//= global accessors ========================================================",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/datatypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/datatypes.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/datatypes.h:14,Testability,test,testing,14,"//= aggregate testing ======================================================",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/datatypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/datatypes.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/fragile.cxx:35,Testability,test,testing,35,/* empty; only used for doc-string testing */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/fragile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/fragile.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/fragile.cxx:27,Testability,test,testing,27,"// for signal -> exception testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/fragile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/fragile.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/fragile.cxx:17,Testability,test,testing,17,"// for duplicate testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/fragile.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/fragile.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/fragile.h:27,Testability,test,testing,27,"// for signal -> exception testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/fragile.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/fragile.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/fragile.h:17,Testability,test,testing,17,"// for duplicate testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/fragile.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/fragile.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/operators.cxx:7,Testability,test,testing,7,"// for testing the case of virtual operator==",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/operators.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/operators.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/operators.cxx:16,Testability,test,tests,16,"// for indexing tests",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/operators.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/operators.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/operators.h:7,Testability,test,testing,7,"// for testing user-defined implicit casts",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/operators.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/operators.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/operators.h:39,Testability,test,tests,39,"// YetAnotherMatrix class for indexing tests",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/operators.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/operators.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/stltypes.cxx:16,Testability,test,testing,16,"//- helpers for testing array",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/stltypes.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/stltypes.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/stltypes.cxx:22,Testability,test,testing,22,"// helpers for string testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/stltypes.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/stltypes.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/stltypes.cxx:27,Testability,test,testing,27,"// helpers for string_view testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/stltypes.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/stltypes.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/stltypes.cxx:61,Testability,test,testing,61,"// __cplusplus > 201402L; // helper for exception base class testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/stltypes.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/stltypes.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/stltypes.h:36,Testability,test,tests,36,"// enum for vector of enums setitem tests",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/stltypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/stltypes.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/stltypes.h:31,Integrability,interface,interface,31,"//- class that has an STL-like interface",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/stltypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/stltypes.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/stltypes.h:16,Testability,test,testing,16,"//- helpers for testing array",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/stltypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/stltypes.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/stltypes.h:46,Testability,test,testing,46,"// namespace ArrayTest; // helpers for string testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/stltypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/stltypes.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/stltypes.h:27,Testability,test,testing,27,"// helpers for string_view testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/stltypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/stltypes.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/stltypes.h:35,Testability,test,testing,35,"// helper for exception base class testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/stltypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/stltypes.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/stltypes.h:3,Availability,Error,ErrorNamespace,3,"// ErrorNamespace",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/stltypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/stltypes.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/templates.cxx:86,Availability,avail,available,86,"// namespace T_WithRValue; // The following is hidden from the Cling interpreter, but available to the; // linker; it allows for testing whether a function return is picked up from; // the compiled instantation or from the interpreter.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/templates.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/templates.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/templates.cxx:129,Testability,test,testing,129,"// namespace T_WithRValue; // The following is hidden from the Cling interpreter, but available to the; // linker; it allows for testing whether a function return is picked up from; // the compiled instantation or from the interpreter.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/templates.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/templates.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_aclassloader.py:3,Testability,Test,Test,3,"""""""Test whether a class can be found through .rootmap.""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_aclassloader.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_aclassloader.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Testability,Test,Test,3,"""""""Test usage of default arguments""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:27,Modifiability,inherit,inheritance,27,"""""""Test binding of a basic inheritance structure""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Testability,Test,Test,3,"""""""Test binding of a basic inheritance structure""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:8,Security,access,access,8,"""""""Test access to namespaces and inner classes""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Testability,Test,Test,3,"""""""Test access to namespaces and inner classes""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Testability,Test,Test,3,"""""""Test whether namespaces can be shared across dictionaries.""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Testability,Test,Test,3,"""""""Test bindings of templated types""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Testability,Test,Test,3,"""""""Test non-instatiatability of abstract classes""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:46,Modifiability,inherit,inheritence,46,"""""""Test data member access when using virtual inheritence""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:20,Security,access,access,20,"""""""Test data member access when using virtual inheritence""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Testability,Test,Test,3,"""""""Test data member access when using virtual inheritence""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:45,Modifiability,inherit,inheritance,45,"""""""Test reference passing when using virtual inheritance""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Testability,Test,Test,3,"""""""Test reference passing when using virtual inheritance""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Testability,Test,Test,3,"""""""Test passing of variants of void pointer arguments""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Testability,Test,Test,3,"""""""Test passing around of opaque pointers""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:1,Testability,assert,assert,1,"#assert o == cppyy.bind_object(cobj, some_concrete_class); #assert o == cppyy.bind_object(cobj, type(o)); #assert o == cppyy.bind_object(cobj, o.__class__); #assert o == cppyy.bind_object(cobj, ""some_concrete_class"")",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:60,Testability,assert,assert,60,"#assert o == cppyy.bind_object(cobj, some_concrete_class); #assert o == cppyy.bind_object(cobj, type(o)); #assert o == cppyy.bind_object(cobj, o.__class__); #assert o == cppyy.bind_object(cobj, ""some_concrete_class"")",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:107,Testability,assert,assert,107,"#assert o == cppyy.bind_object(cobj, some_concrete_class); #assert o == cppyy.bind_object(cobj, type(o)); #assert o == cppyy.bind_object(cobj, o.__class__); #assert o == cppyy.bind_object(cobj, ""some_concrete_class"")",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:158,Testability,assert,assert,158,"#assert o == cppyy.bind_object(cobj, some_concrete_class); #assert o == cppyy.bind_object(cobj, type(o)); #assert o == cppyy.bind_object(cobj, o.__class__); #assert o == cppyy.bind_object(cobj, ""some_concrete_class"")",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Testability,Test,Test,3,"""""""Test object identity""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:41,Modifiability,inherit,inheritance,41,"""""""Test calling of methods from multiple inheritance""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Testability,Test,Test,3,"""""""Test calling of methods from multiple inheritance""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:51,Availability,down,downcast,51,"""""""Test that a pointer to base return does an auto-downcast""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Testability,Test,Test,3,"""""""Test that a pointer to base return does an auto-downcast""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:13,Availability,down,downcast,13,"""""""Test auto-downcast in adverse inheritance situation""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:33,Modifiability,inherit,inheritance,33,"""""""Test auto-downcast in adverse inheritance situation""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Testability,Test,Test,3,"""""""Test auto-downcast in adverse inheritance situation""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Testability,Test,Test,3,"""""""Test template instantiation with a std::vector<float>""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:21,Usability,simpl,simply,21,"# the following will simply fail if there is a naming problem (e.g.; # std::, allocator<int>, etc., etc.); note the parsing required ...",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Testability,Test,Test,3,"""""""Test template global function lookup and calls""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Testability,Test,Test,3,"""""""Test assignment to an instance returned by reference""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Testability,Test,Test,3,"""""""Test operator int/long/double incl. typedef""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Testability,Test,Test,3,"""""""Test return type against proper overload w/ const and covariance""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Security,Access,Access,3,"""""""Access global_variables_and_pointers""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Security,Access,Accessibility,3,"""""""Accessibility of using declarations""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:7,Performance,cache,cached,7,"# only cached for global functions and in principle should; # not be needed anymore ...",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:58,Availability,error,error,58,"# print through base class (used to fail with compilation error)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Testability,Test,Test,3,"""""""Test using directive in namespaces""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Testability,Test,Test,3,"""""""Test that typedefs are not shadowed""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:138,Testability,assert,assert,138,"# TODO: currently only classes are checked; typedefs of builtin types are; # mapped through the type mapper and as such can be anything; #assert ns.A.Val != ns.B.Val; #assert type(ns.A.Val(1)) == int; #assert type(ns.B.Val(1)) == float",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:168,Testability,assert,assert,168,"# TODO: currently only classes are checked; typedefs of builtin types are; # mapped through the type mapper and as such can be anything; #assert ns.A.Val != ns.B.Val; #assert type(ns.A.Val(1)) == int; #assert type(ns.B.Val(1)) == float",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:202,Testability,assert,assert,202,"# TODO: currently only classes are checked; typedefs of builtin types are; # mapped through the type mapper and as such can be anything; #assert ns.A.Val != ns.B.Val; #assert type(ns.A.Val(1)) == int; #assert type(ns.B.Val(1)) == float",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py:3,Security,Access,Access,3,"""""""Access to extern ""C"" declared functions in namespaces""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_advancedcpp.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_api.py:3,Security,Access,Access,3,"""""""Access to the python interpreter""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_api.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_api.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_boost.py:3,Availability,Avail,Availability,3,"""""""Availability of boost::any""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_boost.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_boost.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_boost.py:2,Testability,test,test,2,"# test both by-ref and by rvalue",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_boost.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_boost.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_boost.py:16,Testability,assert,assert,16,"# move forced; #assert len(extract) == 0 # not guaranteed by the standard; # TODO: we hit boost::any_cast<int>(boost::any* operand) instead; # of the reference version which raises",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_boost.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_boost.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_concurrent.py:25,Safety,timeout,timeout,25,"# join the thread with a timeout after 0.1s",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_concurrent.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_concurrent.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_conversions.py:3,Testability,Test,Test,3,"""""""Test implicit conversions of std::vector""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_conversions.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_conversions.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_conversions.py:10,Availability,error,error,10,"""""""Verify error handling""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_conversions.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_conversions.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_conversions.py:3,Testability,Test,Test,3,"""""""Test operator bool() and null pointer behavior""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_conversions.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_conversions.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py:13,Security,access,access,13,"""""""Usage and access of std::shared/unique_ptr<>""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py:3,Testability,Test,Test,3,"""""""Test shared/unique pointer memory ownership""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py:69,Testability,assert,assert,69,"# TODO: why does the following fail, but succeed for shared_ptr??; # assert move_unique_ptr(std.move(dd)) == 100",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py:2,Testability,test,test,2,"# test existence",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py:2,Testability,assert,assert,2,"# assert not hasattr(cppyy.gbl, 'nullptr')",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py:19,Testability,test,tested,19,"# further usage is tested in datatypes.py:test15_nullptr_passing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py:88,Testability,test,testing,88,"# order of moving and normal functions are reversed in 1, 2, for; # overload resolution testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py:42,Availability,error,error,42,"# following used to fail with compilation error",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py:15,Security,hash,hash,15,"""""""Use of std::hash""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py:5,Testability,test,test,5,"# to test effect of caching",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py:34,Modifiability,inherit,inherited,34,"# Test whether this attribute was inherited",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py:2,Testability,Test,Test,2,"# Test whether this attribute was inherited",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_cpp11features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:3,Testability,Test,Test,3,"""""""Test ability to override a simple function""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:30,Usability,simpl,simple,30,"""""""Test ability to override a simple function""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:3,Testability,Test,Test,3,"""""""Test constructor usage for derived classes""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:3,Testability,Test,Test,3,"""""""Test ability to override a simple function with an abstract base""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:30,Usability,simpl,simple,30,"""""""Test ability to override a simple function with an abstract base""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:13,Integrability,message,message,13,"# clarifying message",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:3,Testability,Test,Test,3,"""""""Test ability to override functions that take arguments""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:3,Testability,Test,Test,3,"""""""Test ability to override overloaded functions""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:10,Availability,error,errors,10,"""""""Python errors should propagate through wrapper""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:42,Integrability,wrap,wrapper,42,"""""""Python errors should propagate through wrapper""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:138,Usability,clear,clear,138,"""""""\; namespace CrossInheritance {; std::string call_base1(Base1* b) {; try {; b->sum_value(-7);; } catch (CPyCppyy::PyException& e) {; e.clear();; return e.what();; }; return """";; } }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:14,Availability,error,errors,14,"""""""Conversion errors should be Python exceptions""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:3,Testability,Test,Test,3,"""""""Test countable base counting""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:2,Testability,test,test,2,"# test counter",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:31,Security,access,access,31,"""""""Derived classes should have access to protected members""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:42,Security,access,access,42,"""""""Python derived class of C++ class with access controlled cctor""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:3,Testability,Test,Test,3,"""""""Test a deep Python hierarchy with pure virtual functions""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:131,Integrability,message,message,131,"""""""namespace abstract_classes {; class Base {; public:; virtual ~Base() {}; virtual std::string whoami() = 0;; virtual std::string message() = 0;; };. std::string whois(Base& obj) { return obj.whoami(); }; std::string saywot(Base& obj) { return obj.message(); } }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:249,Integrability,message,message,249,"""""""namespace abstract_classes {; class Base {; public:; virtual ~Base() {}; virtual std::string whoami() = 0;; virtual std::string message() = 0;; };. std::string whois(Base& obj) { return obj.whoami(); }; std::string saywot(Base& obj) { return obj.message(); } }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:27,Modifiability,inherit,inheritance,27,"""""""Hierarchy with multiple inheritance on the C++ side""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:18,Modifiability,inherit,inheritance,18,"""""""Basic multiple inheritance""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:12,Modifiability,inherit,inheritance,12,"""""""Multiple inheritance with constructors""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:12,Modifiability,inherit,inheritance,12,"""""""Multiple inheritance with defaults""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:3,Modifiability,Inherit,Inheriting,3,"""""""Inheriting from a non-copyable base class""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:32,Availability,error,error,32,"# used to fail with compilation error",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:32,Availability,error,error,32,"# used to fail with compilation error",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:32,Availability,error,error,32,"# used to fail with compilation error",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:14,Testability,test,test,14,"""""""Regression test: default ctor did not get added""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:268,Usability,Simpl,Simple,268,"""""""namespace no_default_ctor {; struct NoDefCtor1 {; NoDefCtor1(int) {}; virtual ~NoDefCtor1() {}; };. struct NoDefCtor2 {; NoDefCtor2() = delete;; virtual ~NoDefCtor2() {}; };. class NoDefCtor3 {; NoDefCtor3() = default;; public:; virtual ~NoDefCtor3() {}; };. class Simple {}; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:3,Modifiability,Inherit,Inherit,3,"""""""Inherit from base with non-standard offset""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:8,Modifiability,inherit,inheritance,8,"""""""Deep inheritance hierarchy""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:14,Modifiability,inherit,inheritance,14,"""""""Deep multi-inheritance hierarchy""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:3,Modifiability,Inherit,Inheritance,3,"""""""Inheritance with access and overload complications""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:20,Security,access,access,20,"""""""Inheritance with access and overload complications""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:16,Security,Access,AccessAndOverload,16,"""""""\; namespace AccessAndOverload {; class Base {; public:; virtual ~Base() {}. protected:; virtual int call1(int i) { return i; }; virtual int call1(int i, int j) { return i+j; }. virtual void call2(int) { return; }; virtual void call2(int, int) { return; }. int call3(int i) { return i; }. private:; int call3(int i, int j) { return i+j; }; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:77,Usability,simpl,simply,77,"# introduce the actual component type; would have been a header,; # but this simply has to match what is in crossinheritance.cxx",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:14,Availability,down,down-cast,14,"# causes auto down-cast",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:1,Testability,assert,assert,1,"#assert type(cmp2) != PyComponentWithValue; # rebind cmp2 to the python type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:8,Security,access,access,8,"""""""Read access to instance public data and verify values""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:10,Security,access,access,10,"# can not access an instance member on the class",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:14,Security,access,access,14,"""""""Test write access to instance public data and verify values""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:3,Testability,Test,Test,3,"""""""Test write access to instance public data and verify values""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:3,Testability,Test,Test,3,"""""""Test passing of array arguments""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:2,Testability,test,test,2,"# test arrays in mixed order, to give overload resolution a workout",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:13,Security,access,access,13,"""""""Test read access to class public data and verify values""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:3,Testability,Test,Test,3,"""""""Test read access to class public data and verify values""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:14,Security,access,access,14,"""""""Test write access to class public data and verify values""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:3,Testability,Test,Test,3,"""""""Test write access to class public data and verify values""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:3,Testability,Test,Test,3,"""""""Test the ranges of integer types""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:3,Testability,Test,Test,3,"""""""Test conversions between builtin types""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:8,Security,access,access,8,"""""""Test access to a global builtin type""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:3,Testability,Test,Test,3,"""""""Test access to a global builtin type""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:8,Security,access,access,8,"""""""Test access to global objects by value""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:3,Testability,Test,Test,3,"""""""Test access to global objects by value""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:8,Security,access,access,8,"""""""Test access of global objects through a pointer""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:3,Testability,Test,Test,3,"""""""Test access of global objects through a pointer""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:8,Security,access,access,8,"""""""Test access to enums""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:3,Testability,Test,Test,3,"""""""Test access to enums""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:24,Security,access,accessible,24,"# test that the enum is accessible as a type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:2,Testability,test,test,2,"# test that the enum is accessible as a type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:12,Security,access,accessible,12,"# test type accessible",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:2,Testability,test,test,2,"# test type accessible",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:39,Testability,Test,Test,39,"""""""\; namespace TrueEnumTypes {; class Test {; enum nums { ZERO = 0, ONE = 1 };; enum dir : char { left = 'l', right = 'r' };; enum rank : long { FIRST = 1, SECOND };; enum vraioufaux : bool { faux = false, vrai = true };; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:8,Security,access,accessibility,8,"""""""Enum accessibility and scopes""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:3,Testability,Test,Test,3,"""""""Test passing/returning of a const char*""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:3,Testability,Test,Test,3,"""""""Test copy constructor""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:8,Security,access,access,8,"""""""Test access to and return of PODs""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:3,Testability,Test,Test,3,"""""""Test access to and return of PODs""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:3,Testability,Test,Test,3,"""""""Test setting and returning of a POD through arguments""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:3,Testability,Test,Test,3,"""""""Test that privacy settings are respected""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:194,Energy Efficiency,schedul,schedule,194,"# the following works as a side-effect of a workaround for vector calls and; # it is probably preferable to have it working, so leave the discrepancy for; # now: python's aggressive end-of-life schedule will catch up soon enough",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:3,Testability,Test,Test,3,"""""""Test object validity checking""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:3,Testability,Test,Test,3,"""""""Test usage of buffer sizing""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:3,Testability,Test,Test,3,"""""""Test usage of void* data""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:156,Integrability,interface,interface,156,"# The following create a unique type for fixed-size C arrays: ctypes.c_char_Array_9; # and neither inherits from a non-sized type nor implements the buffer interface.; # As such, it can't be handled. TODO?; #pbuf = ctypes.create_string_buffer(len(buf), buf); #assert f(pbuf, len(buf)) == total",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:99,Modifiability,inherit,inherits,99,"# The following create a unique type for fixed-size C arrays: ctypes.c_char_Array_9; # and neither inherits from a non-sized type nor implements the buffer interface.; # As such, it can't be handled. TODO?; #pbuf = ctypes.create_string_buffer(len(buf), buf); #assert f(pbuf, len(buf)) == total",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:260,Testability,assert,assert,260,"# The following create a unique type for fixed-size C arrays: ctypes.c_char_Array_9; # and neither inherits from a non-sized type nor implements the buffer interface.; # As such, it can't be handled. TODO?; #pbuf = ctypes.create_string_buffer(len(buf), buf); #assert f(pbuf, len(buf)) == total",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:6,Performance,cache,cached,6,"# b/c cached",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:2,Availability,error,error,2,"# error testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:8,Testability,test,testing,8,"# error testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:2,Availability,error,error,2,"# error testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:8,Testability,test,testing,8,"# error testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:63,Modifiability,layers,layers,63,"""""""; template<class T, int nlayers>; struct MultiDimTest {; T* layers[nlayers];. MultiDimTest(int width, int height) {; for (int i=0; i<nlayers; ++i) {; layers[i] = new T[width*height];; for (int j=0; j<width*height; ++j); layers[i][j] = j*2;; }; }; ~MultiDimTest() { for (int i=0; i<nlayers; ++i) delete[] layers[i]; }; };; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:153,Modifiability,layers,layers,153,"""""""; template<class T, int nlayers>; struct MultiDimTest {; T* layers[nlayers];. MultiDimTest(int width, int height) {; for (int i=0; i<nlayers; ++i) {; layers[i] = new T[width*height];; for (int j=0; j<width*height; ++j); layers[i][j] = j*2;; }; }; ~MultiDimTest() { for (int i=0; i<nlayers; ++i) delete[] layers[i]; }; };; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:223,Modifiability,layers,layers,223,"""""""; template<class T, int nlayers>; struct MultiDimTest {; T* layers[nlayers];. MultiDimTest(int width, int height) {; for (int i=0; i<nlayers; ++i) {; layers[i] = new T[width*height];; for (int j=0; j<width*height; ++j); layers[i][j] = j*2;; }; }; ~MultiDimTest() { for (int i=0; i<nlayers; ++i) delete[] layers[i]; }; };; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:307,Modifiability,layers,layers,307,"""""""; template<class T, int nlayers>; struct MultiDimTest {; T* layers[nlayers];. MultiDimTest(int width, int height) {; for (int i=0; i<nlayers; ++i) {; layers[i] = new T[width*height];; for (int j=0; j<width*height; ++j); layers[i][j] = j*2;; }; }; ~MultiDimTest() { for (int i=0; i<nlayers; ++i) delete[] layers[i]; }; };; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:3,Usability,Usab,Usability,3,"""""""Usability of pointer to array""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:14,Security,access,access,14,"""""""Read/write access to objects through pointers""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:48,Availability,error,errors,48,"""""""More aggregate testings (used to fail/report errors)""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:18,Testability,test,testings,18,"""""""More aggregate testings (used to fail/report errors)""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:109,Modifiability,config,configurable,109,"# TODO: this is b/c unsigned char is considered a ""byte"" type by default;; # it's meaning should probably be configurable?",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:3,Testability,Test,Test,3,"""""""Test mapping of bool type typedefs""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:51,Modifiability,variab,variables,51,"""""""Access to int8_t/uint8_t arrays that are global variables""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:3,Security,Access,Access,3,"""""""Access to int8_t/uint8_t arrays that are global variables""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py:25,Testability,test,test,25,"# touch __version__ as a test",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py:18,Modifiability,inherit,inheritance,18,"""""""Multiple cross-inheritance""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py:23,Deployability,release,release,23,"# pythonize the animal release function to take ownership on return",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py:17,Testability,test,test,17,"""""""Implement and test a pythonizor""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py:12,Performance,cache,cached,12,"# make sure cached values are actually looked up",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py:22,Availability,error,error,22,"# TODO: the following error message is rather confusing :(",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py:28,Integrability,message,message,28,"# TODO: the following error message is rather confusing :(",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py:10,Availability,avail,available,10,"""""""Reduce available overloads to 1""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py:3,Energy Efficiency,Reduce,Reduce,3,"""""""Reduce available overloads to 1""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py:14,Security,access,access,14,"""""""Example of access to array of void ptrs""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py:3,Testability,Test,Test,3,"""""""Test code posted in the LLVM blog posting""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py:16,Testability,test,tests,16,"# The series of tests below mostly exists already in other places, but these; # were used as examples for the CaaS' cppyy presentation and are preserved here.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py:9,Modifiability,inherit,inheritance,9,"""""""Cross-inheritance example""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py:37,Modifiability,inherit,inheritance,37,"""""""Template instantiation with cross-inheritance example""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_eigen.py:89,Testability,assert,assert,89,"# TODO: this calls a conversion to int ...; #m.resize(cppyy.gbl.Eigen.NoChange_t(), 3); #assert m.rows() == 2; #assert m.cols() == 3",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_eigen.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_eigen.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_eigen.py:112,Testability,assert,assert,112,"# TODO: this calls a conversion to int ...; #m.resize(cppyy.gbl.Eigen.NoChange_t(), 3); #assert m.rows() == 2; #assert m.cols() == 3",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_eigen.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_eigen.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:8,Availability,failure,failure,8,"""""""Test failure to load dictionary""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:19,Performance,load,load,19,"""""""Test failure to load dictionary""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:3,Testability,Test,Test,3,"""""""Test failure to load dictionary""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:14,Security,access,access,14,"""""""Test (non-)access to missing classes""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:3,Testability,Test,Test,3,"""""""Test (non-)access to missing classes""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:3,Testability,Test,Test,3,"""""""Test reporting when providing wrong arguments""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:3,Testability,Test,Test,3,"""""""Test arguments that are yet unsupported""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:11,Security,access,access,11,"# allowing access to e.m_pp_no_such is debatable, but it allows a typed address; # to be passed back into C++, which may be useful ...",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:20,Availability,error,error,20,"""""""Test addressof() error reporting""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:3,Testability,Test,Test,3,"""""""Test addressof() error reporting""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:3,Testability,Test,Test,3,"""""""Test that using an incorrect self argument raises""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:3,Testability,Test,Test,3,"""""""Test that an unnamed enum does not cause infinite recursion""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:3,Testability,Test,Test,3,"""""""Test that an unhandled scoped data member does not cause infinite recursion""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:3,Security,Access,Access,3,"""""""Access to global vars with an operator bool() returning False""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:148,Integrability,message,messages,148,"# TODO: pypy-c does not indicate which argument failed to convert, CPython does; # likewise there are still minor differences in descriptiveness of messages",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:22,Availability,avail,available,22,"#assert ""no converter available for 'fragile::no_such_class*'"" in str(e)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:1,Testability,assert,assert,1,"#assert ""no converter available for 'fragile::no_such_class*'"" in str(e)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:1,Testability,assert,assert,1,"#assert ""char or small int type expected"" in str(e)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:1,Testability,assert,assert,1,"#assert ""int/long conversion expects an integer object"" in str(e)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:3,Testability,Test,Test,3,"""""""Test __dir__ method""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:122,Testability,assert,assert,122,"# namespace; # TODO: think this through ... probably want this, but interferes with; # the (new) policy of lazy lookups; #assert 'fglobal' in members # function",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:2,Modifiability,variab,variable,2,"# variable; # GetAllCppNames() behaves differently from python dir() but providing the full; # set, which is then filtered in dir(); check both",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:3,Testability,Test,Test,3,"""""""Test ability to import from namespace (or fail with ImportError)""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:26,Performance,load,loaded,26,"# TODO: namespaces aren't loaded (and thus not added to sys.modules); # with just the from ... import statement; actual use is needed",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:31,Testability,test,test,31,"# according to warnings, can't test ""import *"" ...",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:2,Testability,test,test,2,"# test writability of __module__",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:30,Modifiability,inherit,inherit,30,"# classes in namespace should inherit",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:54,Availability,avail,available,54,"""""""Test proper handling when a hierarchy is not fully available""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:3,Testability,Test,Test,3,"""""""Test proper handling when a hierarchy is not fully available""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:3,Testability,Test,Test,3,"""""""Test a redefinition of enum in a derived class""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:34,Performance,cache,cached,34,"# get fresh (should not have been cached while incomplete)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:3,Testability,Test,Test,3,"""""""Test the usage of 'from cppyy.interactive import *'""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:3,Testability,Test,Test,3,"""""""Test usage of __overload__""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:10,Modifiability,Variab,Variable,10,"""""""struct Variable {; Variable(double lb, double ub, double value, bool binary, bool integer, const std::string& name) {}; Variable(int) {}; };""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:22,Modifiability,Variab,Variable,22,"""""""struct Variable {; Variable(double lb, double ub, double value, bool binary, bool integer, const std::string& name) {}; Variable(int) {}; };""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:123,Modifiability,Variab,Variable,123,"""""""struct Variable {; Variable(double lb, double ub, double value, bool binary, bool integer, const std::string& name) {}; Variable(int) {}; };""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:9,Availability,error,error,9,"""""""Check error behavior of failing C++ code""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:15,Security,access,access,15,"""""""Interactive access to the Cling global scope""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:28,Modifiability,variab,variable,28,"""""""Setting of global gDebug variable""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:9,Availability,avail,availability,9,"""""""Check availability of ASAN with gcc""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:9,Availability,error,error,9,"""""""Check error reporting of cppyy.cppdef""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:9,Availability,error,error,9,"# mix of error and warning",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:8,Security,access,access,8,"""""""Test access to C++ pre-processor macro's""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:3,Testability,Test,Test,3,"""""""Test access to C++ pre-processor macro's""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:19,Safety,abort,abortive,19,"""""""Conversion from abortive signals to Python exceptions""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:11,Availability,recover,recover,11,"# can only recover once from each error on Windows, which is functionally; # enough, but precludes further testing here (change: now drop all, see above,; # as on some MSVC builds, no signals are caught ??)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:34,Availability,error,error,34,"# can only recover once from each error on Windows, which is functionally; # enough, but precludes further testing here (change: now drop all, see above,; # as on some MSVC builds, no signals are caught ??)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:11,Safety,recover,recover,11,"# can only recover once from each error on Windows, which is functionally; # enough, but precludes further testing here (change: now drop all, see above,; # as on some MSVC builds, no signals are caught ??)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:107,Testability,test,testing,107,"# can only recover once from each error on Windows, which is functionally; # enough, but precludes further testing here (change: now drop all, see above,; # as on some MSVC builds, no signals are caught ??)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:2,Integrability,inject,inject,2,"# inject a vector in the global namespace",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:2,Security,inject,inject,2,"# inject a vector in the global namespace",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:3,Testability,Test,Test,3,"""""""Test some functions that previously crashed""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:3,Testability,Test,Test,3,"""""""Test compatibility of span under C++2a compilers that support it""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_leakcheck.py:8,Testability,test,test,8,"""""""Leak test of free functions""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_leakcheck.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_leakcheck.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_leakcheck.py:8,Testability,test,test,8,"""""""Leak test of static methods""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_leakcheck.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_leakcheck.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_leakcheck.py:8,Testability,test,test,8,"""""""Leak test of methods""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_leakcheck.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_leakcheck.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_leakcheck.py:8,Testability,test,test,8,"""""""Leak test for functions with default arguments""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_leakcheck.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_leakcheck.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_leakcheck.py:8,Testability,test,test,8,"""""""Leak test of aggregate creation""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_leakcheck.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_leakcheck.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py:115,Testability,test,tests,115,"### pass by ptr/ptr with allocation (ptr/ptr is ambiguous in it's task, so many; # types are allowed to pass; this tests allocation into the pointer)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py:3,Testability,Test,Test,3,"""""""Test passing of numpy bool array""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py:3,Testability,Test,Test,3,"""""""Test passting of const char*[]""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py:3,Testability,Test,Test,3,"""""""Test passting of const char**&""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py:3,Testability,Test,Test,3,"""""""Test usage of __array__ from numpy""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py:3,Security,Access,Access,3,"""""""Access and use of 2D data members""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py:3,Security,Access,Access,3,"""""""Access and use of 3D data members""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py:2,Modifiability,variab,variable,2,"# variable assignment",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_numba.py:3,Security,Access,Access,3,"""""""Access to box/unbox methods""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_numba.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_numba.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_numba.py:69,Security,access,access,69,"""""""Numba-JITing of a free function taking a proxy argument for field access""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_numba.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_numba.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_numba.py:70,Security,access,access,70,"""""""Numba-JITing of a free function taking a proxy argument for method access""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_numba.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_numba.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_numba.py:133,Modifiability,variab,variables,133,"""""""Numba-JITing of a increment method belonging to a class, and also swaps the pointers and reflects the change on the python ctypes variables""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_numba.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_numba.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_numba.py:33,Performance,perform,performs,33,"""""""Numba-JITing of a method that performs scalar addition to a std::vector initialised through pointers """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_numba.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_numba.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_numba.py:61,Safety,avoid,avoid,61,"# We use b to run square_vec where the values must be < 4 to avoid exceeding longs max value",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_numba.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_numba.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_numba.py:283,Performance,Cache,Cache,283,"""""""; namespace RefTest {; class DotVector{; private:; std::vector<long>* a;; std::vector<long>* b;. public:; long g = 0;; long *res = &g;; DotVector(std::vector<long>* i, std::vector<long>* j) : a(i), b(j) {}. long self_dot_product() {; long result = 0;; size_t size = a->size(); // Cache the vector size; const long* data_a = a->data();; const long* data_b = b->data();. for (size_t i = 0; i < size; ++i) {; result += data_a[i] * data_b[i];; }; return result;; }. long dot_product(const std::vector<long>& vec1, const std::vector<long>& vec2) {; long result = 0;; for (size_t i = 0; i < vec1.size(); ++i) {; result += vec1[i] * vec2[i];; }; return result;; }; };; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_numba.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_numba.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_operators.py:3,Testability,Test,Test,3,"""""""Test overloading of math operators""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_operators.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_operators.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_operators.py:3,Testability,Test,Test,3,"""""""Test overloading of unary math operators""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_operators.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_operators.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_operators.py:3,Testability,Test,Test,3,"""""""Test overloading of comparison operators""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_operators.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_operators.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_operators.py:3,Testability,Test,Test,3,"""""""Test implementation of operator bool""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_operators.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_operators.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_operators.py:3,Testability,Test,Test,3,"""""""Test converter operators of exact types""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_operators.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_operators.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_operators.py:3,Testability,Test,Test,3,"""""""Test converter operators of approximate types""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_operators.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_operators.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_operators.py:3,Testability,Test,Test,3,"""""""Test use of virtual bool operator==""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_operators.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_operators.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_operators.py:100,Modifiability,inherit,inheritance,100,"# the following is a wee bit interesting due to python resolution; # rules on the one hand, and C++ inheritance on the other: python; # will never select the derived comparison b/c the call will fail; # to pass a base through a const derived&",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_operators.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_operators.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_operators.py:30,Testability,test,test,30,"# Note: calls are repeated to test caching, if any",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_operators.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_operators.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_operators.py:1,Testability,assert,assert,1,"#assert (~n).i == ~42",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_operators.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_operators.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:3,Testability,Test,Test,3,"""""""Test functions overloaded on different C++ clases""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:3,Testability,Test,Test,3,"""""""Test explicitly resolved function overloads""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:9,Testability,assert,assert,9,"# TODO: #assert c_overload.__dispatch__('get_int', 'b_overload*')(c, b_overload()) == 13",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:3,Testability,Test,Test,3,"""""""Test functions overloaded on void* and non-existing classes""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:3,Testability,Test,Test,3,"""""""Test that unknown* is preferred over unknown&""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:3,Testability,Test,Test,3,"""""""Test functions overloaded on different arrays""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:3,Testability,Test,Test,3,"""""""Test overloads on int/doubles""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:3,Energy Efficiency,Adapt,Adapted,3,"""""""Adapted test for array overloading""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:3,Modifiability,Adapt,Adapted,3,"""""""Adapted test for array overloading""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:11,Testability,test,test,11,"""""""Adapted test for array overloading""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:43,Modifiability,Config,ConfigFileNotFoundError,43,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:122,Modifiability,Config,ConfigFileNotFoundError,122,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:304,Modifiability,config,configfilename,304,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:329,Modifiability,Config,ConfigFileNotFoundError,329,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:353,Modifiability,config,configfilename,353,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:493,Modifiability,config,configfilename,493,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:518,Modifiability,Config,ConfigFileNotFoundError,518,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:542,Modifiability,config,configfilename,542,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:622,Modifiability,config,configfilename,622,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:647,Modifiability,Config,ConfigFileNotFoundError,647,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:671,Modifiability,config,configfilename,671,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:713,Modifiability,config,configfilename,713,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:738,Modifiability,Config,ConfigFileNotFoundError,738,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:762,Modifiability,config,configfilename,762,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:866,Modifiability,config,configfilename,866,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:891,Modifiability,Config,ConfigFileNotFoundError,891,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:915,Modifiability,config,configfilename,915,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:964,Modifiability,config,configfilename,964,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:989,Modifiability,Config,ConfigFileNotFoundError,989,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:1013,Modifiability,config,configfilename,1013,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:1093,Modifiability,config,configfilename,1093,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:1118,Modifiability,Config,ConfigFileNotFoundError,1118,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:1142,Modifiability,config,configfilename,1142,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:1184,Modifiability,config,configfilename,1184,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:1209,Modifiability,Config,ConfigFileNotFoundError,1209,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:1233,Modifiability,config,configfilename,1233,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:1509,Modifiability,config,configfilename,1509,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:1534,Modifiability,Config,ConfigFileNotFoundError,1534,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:1558,Modifiability,config,configfilename,1558,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:1607,Modifiability,config,configfilename,1607,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:1632,Modifiability,Config,ConfigFileNotFoundError,1632,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:1656,Modifiability,config,configfilename,1656,"""""""\; namespace ExceptionTypeTest {. class ConfigFileNotFoundError : public std::exception {; std::string fMsg;; public:; ConfigFileNotFoundError(const std::string& msg) : fMsg(msg) {}; const char* what() const throw() { return fMsg.c_str(); }; };. class MyClass1 {; public:; MyClass1(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass1(const MyClass1& other) {}; };. class MyClass1a {; public:; MyClass1a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2 {; public:; MyClass2(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass2(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass2a {; public:; MyClass2a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; };. class MyClass3 {; public:; MyClass3(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; MyClass3(const MyClass3& other) = delete;; MyClass3(const MyClass3&& other) = delete;; };. class MyClass4 {; public:; MyClass4(int) {}; MyClass4(const MyClass3& other) {}; };. class MyClass4a {; public:; MyClass4a() {}; void initialize(const std::string& configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(const char* configfilename) {; throw ConfigFileNotFoundError{configfilename};; }; void initialize(int) {}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:77,Availability,error,error,77,"# single C++ exception during overload selection: assumes this is a logic; # error and prioritizes the C++ exception",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:68,Testability,log,logic,68,"# single C++ exception during overload selection: assumes this is a logic; # error and prioritizes the C++ exception",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py:61,Availability,error,errors,61,"# multiple C++ exceptions are considered argument conversion errors and; # only result in the same exception type if they are all the same",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_overloads.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_overloads.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py:16,Performance,load,loading,16,"""""""Test whether loading a dictionary twice results in the same object""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py:3,Testability,Test,Test,3,"""""""Test whether loading a dictionary twice results in the same object""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py:3,Testability,Test,Test,3,"""""""Test the lookup of a class, and its caching""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py:3,Testability,Test,Test,3,"""""""Test calling of static methods""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py:3,Testability,Test,Test,3,"""""""Test object and method calls""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py:2,Performance,cache,cached,2,"# cached lookup",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py:3,Testability,Test,Test,3,"""""""Test proper C++ destruction by the garbage collector""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py:3,Testability,Test,Test,3,"""""""Test propagation of default function arguments""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py:32,Testability,stub,stub,32,"# NOTE: when called through the stub, default args are fine",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py:3,Testability,Test,Test,3,"""""""Test functions overloaded on arguments""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py:8,Security,access,access,8,"""""""Test access and use of typedefs""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py:3,Testability,Test,Test,3,"""""""Test access and use of typedefs""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py:3,Testability,Test,Test,3,"""""""Test recognition of '_' as part of a valid class name""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py:3,Testability,Test,Test,3,"""""""Test (un)bound method calls""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py:8,Deployability,install,installing,8,"""""""Test installing and calling global C++ function as python method""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py:3,Testability,Test,Test,3,"""""""Test installing and calling global C++ function as python method""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py:3,Testability,Test,Test,3,"""""""Test addition of user-defined pythonizations""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py:23,Availability,error,error,23,"""""""Test pythonizations error reporting""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py:3,Testability,Test,Test,3,"""""""Test pythonizations error reporting""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py:3,Testability,Test,Test,3,"""""""Test overwritability of globals""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonify.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonify.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonization.py:3,Testability,Test,Test,3,"""""""Test basic semantics of the pythonization API""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonization.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonization.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonization.py:59,Availability,avail,available,59,"# global pythonizors are still run even if namespaced ones available",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonization.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonization.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonization.py:25,Modifiability,variab,variable,25,"# there's eg. one global variable",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonization.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonization.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonization.py:22,Testability,test,test,22,"# skip the IndexErorr test: pythonization for __getitem__[index] < size(); # can not be applied strict enough (instead of an index, this could be an; # associative container, with 'index' a key, not a counter; #raises(IndexError, d.__getitem__, 1)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonization.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonization.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonization.py:10,Testability,test,test,10,"## actual test run",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_pythonization.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonization.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:42,Modifiability,inherit,inherit,42,"# TODO: it's deeply silly that namespaces inherit from CPPInstance (in CPyCppyy)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_regression.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:3,Testability,Test,Test,3,"""""""Test usability of AVX by default.""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_regression.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:8,Usability,usab,usability,8,"""""""Test usability of AVX by default.""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_regression.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:12,Availability,error,error,12,"# attribute error if compilation failed",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_regression.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:11,Deployability,release,released,11,"""""""GIL was released by accident for by-value returns""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_regression.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:797,Availability,error,error,797,"""""""; template <typename Enum>; struct my_iter_enum {; struct iterator {; using value_type = Enum;; using difference_type = ptrdiff_t;; using reference = const Enum&;; using pointer = const Enum*;; using iterator_category = std::input_iterator_tag;. iterator(Enum value) : cur(value) {}. reference operator*() { return cur; }; pointer operator->() { return &cur; }; bool operator==(const iterator& other) { return cur == other.cur; }; bool operator!=(const iterator& other) { return !(*this == other); }; iterator& operator++() { if (cur != Enum::Unknown) cur = static_cast<Enum>(static_cast<std::underlying_type_t<Enum>>(cur) + 1); return *this; }; iterator operator++(int) { iterator other = *this; ++(*this); return other; }. private:; Enum cur;; int TODO_why_is_this_placeholder_needed; // JIT error? Too aggressive optimization?; };. iterator begin() {; return iterator(Enum::Black);; }. iterator end() {; return iterator(Enum::Unknown);; }; };. enum class MyColorEnum : char {; Black = 1,; Blue,; Red,; Yellow,; Unknown; };""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_regression.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:819,Performance,optimiz,optimization,819,"""""""; template <typename Enum>; struct my_iter_enum {; struct iterator {; using value_type = Enum;; using difference_type = ptrdiff_t;; using reference = const Enum&;; using pointer = const Enum*;; using iterator_category = std::input_iterator_tag;. iterator(Enum value) : cur(value) {}. reference operator*() { return cur; }; pointer operator->() { return &cur; }; bool operator==(const iterator& other) { return cur == other.cur; }; bool operator!=(const iterator& other) { return !(*this == other); }; iterator& operator++() { if (cur != Enum::Unknown) cur = static_cast<Enum>(static_cast<std::underlying_type_t<Enum>>(cur) + 1); return *this; }; iterator operator++(int) { iterator other = *this; ++(*this); return other; }. private:; Enum cur;; int TODO_why_is_this_placeholder_needed; // JIT error? Too aggressive optimization?; };. iterator begin() {; return iterator(Enum::Black);; }. iterator end() {; return iterator(Enum::Unknown);; }; };. enum class MyColorEnum : char {; Black = 1,; Blue,; Red,; Yellow,; Unknown; };""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_regression.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:3,Security,Hash,Hashing,3,"""""""Hashing of std::string""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_regression.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:2,Security,hash,hashes,2,"# hashes of std::string larger than 2**31 would fail; run a couple of; # strings to check although it may still succeed by accident (and never; # was an issue on p3 anyway)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_regression.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:3,Modifiability,Extend,Extend,3,"""""""Extend a life line to references into a vector if needed""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_regression.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:24,Modifiability,variab,variable,24,"""""""Support C-style enum variable declarations""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_regression.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:122,Availability,error,error,122,"""""""\; namespace ExceptionByValue {; class Countable : std::exception {; public:; static int s_count;; Countable() : fMsg(""error"") { ++s_count; }; Countable(const Countable&) { ++s_count; }; Countable& operator=(const Countable&) { return *this; }; ~Countable() { --s_count; }; const char* what() const throw() override { return fMsg.c_str(); }; private:; std::string fMsg;; };. int Countable::s_count = 0;. Countable create_one() { return Countable{}; }; int count() { return Countable::s_count; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_regression.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:3,Availability,Failure,Failure,3,"""""""Failure due to typo""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_regression.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:59,Testability,Test,Test,59,"""""""\; #include <limits>; namespace UInt64_Typo {; uint64_t Test(uint64_t v) { return v; }; template <typename T> struct Struct { Struct(T t) : fT(t) {}; T fT; };; template <typename T> Struct<T> TTest(T t) { return Struct<T>{t}; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_regression.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:41,Testability,test,test,41,"""""""\; namespace ArrayOfPointers {; void* test(int *arr[8], bool is_int=true) { return is_int ? (void*)arr : nullptr; }; void* test(uint8_t *arr[8], bool is_int=false) { return is_int ? nullptr : (void*)arr; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_regression.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:126,Testability,test,test,126,"""""""\; namespace ArrayOfPointers {; void* test(int *arr[8], bool is_int=true) { return is_int ? (void*)arr : nullptr; }; void* test(uint8_t *arr[8], bool is_int=false) { return is_int ? nullptr : (void*)arr; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_regression.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:3,Security,Access,Access,3,"""""""Access to fixed-size char16 arrays as data members""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_regression.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py:2,Security,Validat,Validate,2,"# Validate the intended behavior for different argument types:; # const ref : caller keeps ownership; # const ptr : caller keeps ownership; # ref : caller keeps ownership; # ptr : caller passed ownership to callee; # The actual type doesn't matter",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_regression.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_regression.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:22,Testability,test,test,22,"# after CPython's Lib/test/seq_tests.py",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:27,Integrability,protocol,protocol,27,"""""""Sequence using iterator protocol""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:27,Integrability,protocol,protocol,27,"""""""Sequence using iterator protocol defined with a generator""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test propagation of exceptions""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test immediate stop""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test multiple tiers of iterators""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:112,Testability,assert,assert,112,"# the following does not work for type-checked containers; #s = ""this is also a sequence""; #vv = type2test(s); #assert len(vv) == len(s); # Create from various iteratables; # as above, can not put strings in type-checked containers; #for s in (""123"", """", range(1000), ('do', 1.2), range(2000,2200,5)):",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:25,Testability,assert,assert,25,"# as above, no strings; #assert type2test(c for c in ""123"") == type2test(""123"")",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:30,Testability,assert,assert,30,"# Issue #23757 (in CPython); #assert type2test(LyingTuple((2,))) == type2test((1,)); #assert type2test(LyingList([2])) == type2test([1])",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:86,Testability,assert,assert,86,"# Issue #23757 (in CPython); #assert type2test(LyingTuple((2,))) == type2test((1,)); #assert type2test(LyingList([2])) == type2test([1])",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:20,Testability,test,tests,20,"""""""Detailed slicing tests from CPython""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:2,Modifiability,Extend,Extended,2,"# Extended slices",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:2,Testability,Test,Test,2,"# Test extreme cases with long ints",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:61,Availability,error,error,61,"# the following two fail b/c PySlice_GetIndices succeeds w/o error, while; # returning an overflown value (list object uses different internal APIs); #assert a[ -pow(2,128): 3 ] == type2test([0,1,2]); #assert a[ 3: pow(2,145) ] == type2test([3,4])",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:151,Testability,assert,assert,151,"# the following two fail b/c PySlice_GetIndices succeeds w/o error, while; # returning an overflown value (list object uses different internal APIs); #assert a[ -pow(2,128): 3 ] == type2test([0,1,2]); #assert a[ 3: pow(2,145) ] == type2test([3,4])",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:202,Testability,assert,assert,202,"# the following two fail b/c PySlice_GetIndices succeeds w/o error, while; # returning an overflown value (list object uses different internal APIs); #assert a[ -pow(2,128): 3 ] == type2test([0,1,2]); #assert a[ 3: pow(2,145) ] == type2test([3,4])",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:8,Security,access,access,8,"""""""Test access to std::vector<int>/std::vector<double>""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test access to std::vector<int>/std::vector<double>""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:8,Security,access,access,8,"""""""Test access to an std::vector<just_a_class>""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test access to an std::vector<just_a_class>""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test behavior of empty std::vector<int>""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test iteration over an std::vector<int>""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test usage of += of iterable on push_back-able container""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test python-style indexing to an std::vector<int>""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Usability,Usab,Usability,3,"""""""Usability of std::vector<bool> which can be a specialization""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Usability,Usab,Usability,3,"""""""Usability of std::vector<> of some enums""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:14,Availability,error,error,14,"# TODO: nicer error handling for the following (current: template compilation failure trying; # to assign a pair with <double, string> to <double, double>); # ll2 = ll[:]; # ll2[2] = ll[2][:]; # ll2[2][1] = 'a'; # v = a.vector_pair(ll2)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:78,Availability,failure,failure,78,"# TODO: nicer error handling for the following (current: template compilation failure trying; # to assign a pair with <double, string> to <double, double>); # ll2 = ll[:]; # ll2[2] = ll[2][:]; # ll2[2][1] = 'a'; # v = a.vector_pair(ll2)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:12,Testability,test,test,12,"""""""Advanced test of vector slicing""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:13,Testability,test,test,13,"# additional test from CPython's test suite",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:33,Testability,test,test,33,"# additional test from CPython's test suite",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test usage of __array__ from numpy""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:64,Testability,test,test,64,"""""""\; namespace VectorConstCharStar {; std::vector<const char*> test = {""hello""};; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:13,Modifiability,polymorphi,polymorphic,13,"""""""Vector of polymorphic types should auto-cast""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:16,Modifiability,Polymorphi,Polymorphic,16,"""""""\; namespace Polymorphic {; class vertex {; public:; virtual ~vertex() {}; };. class Mvertex : public vertex {};. class vCont {; public:; virtual ~vCont() { for (auto& v: verts) delete v; }; std::vector<vertex*> verts { new vertex(), new Mvertex() };; const std::vector<vertex*>& vertices() { return verts; }; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test mapping of python strings and std::[w]string""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:8,Security,access,access,8,"""""""Test access to std::string object data members""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test access to std::string object data members""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test that strings with NULL do not get truncated""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Security,Access,Access,3,"""""""Access to global arrays of strings""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:42,Testability,test,tests,42,"# -- method replace (from Python's string tests); # Operations on the empty string",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:8,Security,access,access,8,"""""""Test access to a list<int>""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test access to a list<int>""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test behavior of empty list<int>""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:8,Security,access,access,8,"""""""Test access to a map<int,int>""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test access to a map<int,int>""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:8,Security,access,access,8,"""""""Test access to a map<std::string,int>""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test access to a map<std::string,int>""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test behavior of empty map<int,int>""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test assignability of maps with unsigned value types""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test overloading of operator[] in STL like class""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test std::map initializion from Python dict""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test iterator comparison with operator== reflected""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:21,Integrability,protocol,protocol,21,"""""""Test the iterator protocol mapping for an STL like class""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test the iterator protocol mapping for an STL like class""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:2,Testability,test,test,2,"# test assignment",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Security,Access,Access,3,"""""""Access to set iterators and their comparisons""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test std::set initializion from Python set""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:13,Testability,test,test,13,"# not a true test, but this'll take a noticable amount of time (>1min) if; # there is a regression somehow",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:21,Security,access,access,21,"""""""Create tuples and access their elements""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:2,Testability,assert,assert,2,"# assert t1 != t3 # fails to link (?!)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:40,Usability,Simpl,Simple,40,"""""""\; namespace TupleLifeLine {; struct Simple {; Simple() : fInt(42) {}; Simple(const Simple&) = default;; Simple& operator=(const Simple&) = default;; ~Simple() { fInt = -1; }; int fInt;; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:50,Usability,Simpl,Simple,50,"""""""\; namespace TupleLifeLine {; struct Simple {; Simple() : fInt(42) {}; Simple(const Simple&) = default;; Simple& operator=(const Simple&) = default;; ~Simple() { fInt = -1; }; int fInt;; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:74,Usability,Simpl,Simple,74,"""""""\; namespace TupleLifeLine {; struct Simple {; Simple() : fInt(42) {}; Simple(const Simple&) = default;; Simple& operator=(const Simple&) = default;; ~Simple() { fInt = -1; }; int fInt;; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:87,Usability,Simpl,Simple,87,"""""""\; namespace TupleLifeLine {; struct Simple {; Simple() : fInt(42) {}; Simple(const Simple&) = default;; Simple& operator=(const Simple&) = default;; ~Simple() { fInt = -1; }; int fInt;; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:108,Usability,Simpl,Simple,108,"""""""\; namespace TupleLifeLine {; struct Simple {; Simple() : fInt(42) {}; Simple(const Simple&) = default;; Simple& operator=(const Simple&) = default;; ~Simple() { fInt = -1; }; int fInt;; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:132,Usability,Simpl,Simple,132,"""""""\; namespace TupleLifeLine {; struct Simple {; Simple() : fInt(42) {}; Simple(const Simple&) = default;; Simple& operator=(const Simple&) = default;; ~Simple() { fInt = -1; }; int fInt;; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:154,Usability,Simpl,Simple,154,"""""""\; namespace TupleLifeLine {; struct Simple {; Simple() : fInt(42) {}; Simple(const Simple&) = default;; Simple& operator=(const Simple&) = default;; ~Simple() { fInt = -1; }; int fInt;; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:3,Testability,Test,Test,3,"""""""Test behavior of std::exception derived classes""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:62,Testability,test,testing,62,"""""""Memory handling of C++ c// helper for exception base class testing""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_streams.py:8,Availability,avail,availability,8,"""""""Test availability of std::ostream""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_streams.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_streams.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_streams.py:3,Testability,Test,Test,3,"""""""Test availability of std::ostream""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_streams.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_streams.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_streams.py:8,Security,access,access,8,"""""""Test access to std::cout""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_streams.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_streams.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_streams.py:3,Testability,Test,Test,3,"""""""Test access to std::cout""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_streams.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_streams.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_streams.py:86,Testability,TEST,TEST,86,"""""""\; namespace stringstream_base {; void pass_through_base(std::ostream& o) {; o << ""TEST STRING"";; } }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_streams.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_streams.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:32,Testability,test,tests,32,"# implicit (called before other tests to check caching)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:66,Performance,load,loaded,66,"# TODO: the following only works if something else has already; # loaded the headers associated with this template",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:2,Testability,test,test,2,"# test forced creation of subsequent overloads",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:13,Testability,test,testing,13,"""""""Attribute testing through SFINAE""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:2,Performance,load,load,2,"# load",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:2,Performance,load,load,2,"# load",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:2,Testability,assert,assert,2,"# assert b1.ref_value == 42",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:2,Testability,assert,assert,2,"# assert b2.ref_value == 42",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:3,Testability,Test,Test,3,"""""""Test that templated operator() translates to __call__""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:3,Testability,Test,Test,3,"""""""Test that base class methods are not considered when hidden""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:3,Testability,Test,Test,3,"""""""Test templated constructors""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:28,Availability,avail,available,28,"""""""Access to templates made available with 'using'""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:3,Security,Access,Access,3,"""""""Access to templates made available with 'using'""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:3,Security,Access,Access,3,"""""""Access to base class templated methods through 'using'""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:1,Testability,assert,assert,1,"#assert type(d.get1['double'](5)) == float; #assert d.get1['double'](5) == 10.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:45,Testability,assert,assert,45,"#assert type(d.get1['double'](5)) == float; #assert d.get1['double'](5) == 10.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:20,Testability,test,testing,20,"# bit of regression testing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:28,Availability,mask,mask,28,"# check that void* does not mask template instantiations",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:28,Availability,mask,mask,28,"# check that void* does not mask template instantiations",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:36,Availability,mask,mask,36,"# check that unknown classes do not mask template instantiations",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:10,Security,access,access,10,"# <- this access used to fail",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:50,Performance,cache,caches,50,"# different templates used to prevent memoization caches resolving calls",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:33,Modifiability,inherit,inheritance,33,"""""""Mix of (non-)templated across inheritance""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:16,Testability,Test,TestSomeLut,16,"""""""\; namespace TestSomeLut {; template<class T, uint8_t X, uint8_t Y>; struct Lut {; Lut() { }; constexpr size_t size() const noexcept { return (1<<X)+1; }. std::array<T, 3> data1;; std::array<T, X> data2;; std::array<T, 2*X> data3;; std::array<T, 16385> data4;; std::array<T, (1UL<<(std::size_t)3)+1UL> data5;; std::array<T, ((1<<3)+1)> data6;; std::array<T, ((1<<X)+1)> data7;; static int constexpr array_size = X<<2;; std::array<T, array_size> data8;; };. template<class T, uint8_t X, uint8_t Y, uint32_t asize=((1<<X)+1)>; struct Lut2 {; Lut2() { }; constexpr size_t size() const noexcept { return (1<<X)+1; }. std::array<T, asize> data;; }; }. std::array<int, (1UL<<(std::size_t)3)+1UL> gLutData5;; std::array<int, ((1<<3)+1)> gLutData6;; static int constexpr array_size = 14<<2;; std::array<int, array_size> gLutData8;; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:34,Testability,Test,Test,34,"""""""; namespace UsingPtr {; struct Test {};; using testptr = Test*;. template<typename T>; bool testfun(T const& x) { return !(bool)x; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:50,Testability,test,testptr,50,"""""""; namespace UsingPtr {; struct Test {};; using testptr = Test*;. template<typename T>; bool testfun(T const& x) { return !(bool)x; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:60,Testability,Test,Test,60,"""""""; namespace UsingPtr {; struct Test {};; using testptr = Test*;. template<typename T>; bool testfun(T const& x) { return !(bool)x; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:95,Testability,test,testfun,95,"""""""; namespace UsingPtr {; struct Test {};; using testptr = Test*;. template<typename T>; bool testfun(T const& x) { return !(bool)x; }; }""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:85,Testability,Test,Test,85,"# TODO: raises TypeError; the problem is that the type is resolved; # from UsingPtr::Test*const& to UsingPtr::Test*& (ie. `const` is lost); # assert ns.testfun[""UsingPtr::testptr""](cppyy.nullptr)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:110,Testability,Test,Test,110,"# TODO: raises TypeError; the problem is that the type is resolved; # from UsingPtr::Test*const& to UsingPtr::Test*& (ie. `const` is lost); # assert ns.testfun[""UsingPtr::testptr""](cppyy.nullptr)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:142,Testability,assert,assert,142,"# TODO: raises TypeError; the problem is that the type is resolved; # from UsingPtr::Test*const& to UsingPtr::Test*& (ie. `const` is lost); # assert ns.testfun[""UsingPtr::testptr""](cppyy.nullptr)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:152,Testability,test,testfun,152,"# TODO: raises TypeError; the problem is that the type is resolved; # from UsingPtr::Test*const& to UsingPtr::Test*& (ie. `const` is lost); # assert ns.testfun[""UsingPtr::testptr""](cppyy.nullptr)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:171,Testability,test,testptr,171,"# TODO: raises TypeError; the problem is that the type is resolved; # from UsingPtr::Test*const& to UsingPtr::Test*& (ie. `const` is lost); # assert ns.testfun[""UsingPtr::testptr""](cppyy.nullptr)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:3,Testability,Test,Test,3,"""""""Test presence and validity of using typedefs""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:3,Testability,Test,Test,3,"""""""Test that mapped types can be used as builtin""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:3,Testability,Test,Test,3,"""""""Test that mapped types can be used as template arguments""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:17,Energy Efficiency,reduce,reducer,17,"""""""Usage of type reducer""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py:17,Energy Efficiency,reduce,reducer,17,"""""""Usage of type reducer with extern template""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy/test/test_templates.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_templates.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py:67,Deployability,install,install,67,"# do not copy wchar.h & friends b/c the pch should be generated at install time,; # so preventing conflict",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py:9,Testability,test,testing,9,"# remove testing, examples, and notebook",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py:187,Availability,alive,alive,187,"""""""//#include ""TSocket.h""; enum ESockOptions {; kSendBuffer, // size of send buffer; kRecvBuffer, // size of receive buffer; kOobInline, // OOB message inline; kKeepAlive, // keep socket alive; kReuseAddr, // allow reuse of local portion of address 5-tuple; kNoDelay, // send without delay; kNoBlock, // non-blocking I/O; kProcessGroup, // socket process group (used for SIGURG and SIGIO); kAtMark, // are we at out-of-band mark (read only); kBytesToRead // get number of bytes to read, FIONREAD (read only); };. enum ESendRecvOptions {; kDefault, // default option (= 0); kOob, // send or receive out-of-band data; kPeek, // peek at incoming message (receive only); kDontBlock // send/recv as much data as possible without blocking; };; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py:144,Integrability,message,message,144,"""""""//#include ""TSocket.h""; enum ESockOptions {; kSendBuffer, // size of send buffer; kRecvBuffer, // size of receive buffer; kOobInline, // OOB message inline; kKeepAlive, // keep socket alive; kReuseAddr, // allow reuse of local portion of address 5-tuple; kNoDelay, // send without delay; kNoBlock, // non-blocking I/O; kProcessGroup, // socket process group (used for SIGURG and SIGIO); kAtMark, // are we at out-of-band mark (read only); kBytesToRead // get number of bytes to read, FIONREAD (read only); };. enum ESendRecvOptions {; kDefault, // default option (= 0); kOob, // send or receive out-of-band data; kPeek, // peek at incoming message (receive only); kDontBlock // send/recv as much data as possible without blocking; };; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py:643,Integrability,message,message,643,"""""""//#include ""TSocket.h""; enum ESockOptions {; kSendBuffer, // size of send buffer; kRecvBuffer, // size of receive buffer; kOobInline, // OOB message inline; kKeepAlive, // keep socket alive; kReuseAddr, // allow reuse of local portion of address 5-tuple; kNoDelay, // send without delay; kNoBlock, // non-blocking I/O; kProcessGroup, // socket process group (used for SIGURG and SIGIO); kAtMark, // are we at out-of-band mark (read only); kBytesToRead // get number of bytes to read, FIONREAD (read only); };. enum ESendRecvOptions {; kDefault, // default option (= 0); kOob, // send or receive out-of-band data; kPeek, // peek at incoming message (receive only); kDontBlock // send/recv as much data as possible without blocking; };; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py:19,Testability,test,test,19,"# debugging: run a test build",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py:12,Deployability,patch,patches,12,"#; ## apply patches (in order); #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py:26,Deployability,patch,patch,26,"#; ## manylinux1 specific patch, as there a different, older, compiler is used; #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py:14,Integrability,depend,dependent,14,"#; # platform-dependent helpers; #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py:15,Deployability,install,installation,15,"""""""cppyy-cling installation.""""""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py:8,Performance,optimiz,optimization,8,"# extra optimization flags for Cling",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py:23,Availability,avail,available,23,"# default to using all available cores (x2 if hyperthreading enabled)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py:35,Deployability,install,installed,35,"# depending on goal, copy over pre-installed tree",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py:2,Integrability,depend,depending,2,"# depending on goal, copy over pre-installed tree",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py:7,Deployability,install,install,7,"# base install",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py:9,Deployability,install,install,9,"# custom install of backend",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py:15,Deployability,install,install,15,"# use $MAKE to install if it is defined",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py:37,Modifiability,portab,portable,37,"# remove allDict.cxx.pch as it's not portable (rebuild on first run, see cppyy)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py:107,Usability,simpl,simply,107,"# this is a universal, but platform-specific package; a combination; # that wheel does not recognize, thus simply fool it",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py:14,Modifiability,variab,variables,14,"#; # Classes, variables etc.; #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py:5,Performance,Load,Load,5,"#; # Load the library.; #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py:5,Performance,Load,Load,5,"#; # Load any customisations.; #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py:45,Safety,risk,risk,45,"#; # Deleting the modules after use runs the risk of GC running on; # stuff we are using, such as ctypes.c_int.; #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py:30,Integrability,rout,routines,30,"#; # Valid customisations are routines named ""c13n_<something>"".; #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py:5,Integrability,Wrap,Wrap,5,"""""""; Wrap setuptools.setup for some bindings. :param pkg: Name of the bindings.; :param setup_py: Base __init__.py file of the bindings.; :param cmake_shared_library_prefix:; ${cmake_shared_library_prefix}; :param cmake_shared_library_suffix:; ${cmake_shared_library_suffix}; :param extra_pythons: Semicolon-separated list of customisation code.; :param pkg_version: The version of the bindings.; :param author: The name of the library author.; :param author_email: The email address of the library author.; :param url: The home page for the library.; :param license: The license.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py:406,Availability,avail,available,406,"""""""Bindings for {}.; These bindings are based on https://cppyy.readthedocs.io/en/latest/, and can be; used as per the documentation provided via the cppyy.cgl namespace. The environment; variable LD_LIBRARY_PATH must contain the path of the {}.rootmap file. Use; ""import cppyy; from cppyy.gbl import <some-C++-entity>"". Alternatively, use ""import {}"". This convenience wrapper supports ""discovery"" of the; available C++ entities using, for example Python 3's command line completion support.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py:369,Integrability,wrap,wrapper,369,"""""""Bindings for {}.; These bindings are based on https://cppyy.readthedocs.io/en/latest/, and can be; used as per the documentation provided via the cppyy.cgl namespace. The environment; variable LD_LIBRARY_PATH must contain the path of the {}.rootmap file. Use; ""import cppyy; from cppyy.gbl import <some-C++-entity>"". Alternatively, use ""import {}"". This convenience wrapper supports ""discovery"" of the; available C++ entities using, for example Python 3's command line completion support.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py:187,Modifiability,variab,variable,187,"""""""Bindings for {}.; These bindings are based on https://cppyy.readthedocs.io/en/latest/, and can be; used as per the documentation provided via the cppyy.cgl namespace. The environment; variable LD_LIBRARY_PATH must contain the path of the {}.rootmap file. Use; ""import cppyy; from cppyy.gbl import <some-C++-entity>"". Alternatively, use ""import {}"". This convenience wrapper supports ""discovery"" of the; available C++ entities using, for example Python 3's command line completion support.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py:60,Usability,guid,guidance,60,"#; # Implement a pkgutil-style namespace package as per the guidance on; # https://packaging.python.org/guides/packaging-namespace-packages.; #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py:104,Usability,guid,guides,104,"#; # Implement a pkgutil-style namespace package as per the guidance on; # https://packaging.python.org/guides/packaging-namespace-packages.; #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py:47,Availability,reliab,reliably,47,"#; # Custom clean.; # TODO: There is no way to reliably clean the ""dist"" directory.; #; #; # Base clean.; #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py:152,Usability,simpl,simply,152,"#; # This is a universal (Python2/Python3), but platform-specific (has; # compiled parts) package; a combination that wheel does not recognize,; # thus simply fool it.; #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/loader.py:18,Performance,load,loader,18,""""""" cppyy_backend loader; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/loader.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/loader.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/loader.py:2,Performance,load,load,2,"# load libcppyy_backend",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/loader.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/loader.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/loader.py:9,Performance,load,load,9,"# normal load, allowing for user overrides of LD_LIBRARY_PATH",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/loader.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/loader.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/loader.py:18,Integrability,depend,dependencies,18,"# failed ... load dependencies explicitly",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/loader.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/loader.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/loader.py:13,Performance,load,load,13,"# failed ... load dependencies explicitly",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/loader.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/loader.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/loader.py:2,Testability,test,test,2,"# test whether the pch is older than the include directory",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/loader.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/loader.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cling_config.py:30,Modifiability,config,config,30,"# happens on Windows b/c root-config is a bash script; the; # following covers the most important options until that; # gets fixed upstream",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cling_config.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cling_config.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py:21,Testability,log,logic,21,"#; # All Qt-specific logic is driven from these identifiers. Setting them to; # nonsense values would effectively disable all Qt-specific logic.; #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py:138,Testability,log,logic,138,"#; # All Qt-specific logic is driven from these identifiers. Setting them to; # nonsense values would effectively disable all Qt-specific logic.; #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py:115,Security,access,access,115,"""""""; Centralise all processing of the source.; Ideally, we'd use Clang for everything, but on occasion, we'll need access; to the source, without pre-processing.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py:5,Integrability,Depend,Depending,5,"#; # Depending on the type of the SIP entry, replace the Clang; # version of the value with the actual version.; #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py:112,Safety,avoid,avoid,112,"#; # We expect to be run over hundreds of files. Any parsing issues are likely to be very repetitive.; # So, to avoid bothering the user, we suppress duplicates.; #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py:41,Security,access,access,41,"""""""; The parser does not seem to provide access to the complete text of a parameter.; This makes it hard to find any default values, so we:. 1. Run the lexer from ""here"" to the end of the file, bailing out when we see the "",""; or a "")"" marking the end.; 2. Watch for the assignment.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py:113,Usability,simpl,simply,113,"#; # Get the text after the ""="". Macro expansion can make relying on tokens fraught...and; # member.get_tokens() simply does not always return anything.; #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py:194,Availability,error,error,194,"#; # Happens e.g. if the template is a dependent type; instead, try to parse; # its definition (brittle, but the original code just had '1' as a guess,; # which is even worse ...).; #; # logger.error(_(""Unexpected template_arg_count={} for {}"").format(tmp, typedef.type.get_typedef_name()))",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py:39,Integrability,depend,dependent,39,"#; # Happens e.g. if the template is a dependent type; instead, try to parse; # its definition (brittle, but the original code just had '1' as a guess,; # which is even worse ...).; #; # logger.error(_(""Unexpected template_arg_count={} for {}"").format(tmp, typedef.type.get_typedef_name()))",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py:187,Testability,log,logger,187,"#; # Happens e.g. if the template is a dependent type; instead, try to parse; # its definition (brittle, but the original code just had '1' as a guess,; # which is even worse ...).; #; # logger.error(_(""Unexpected template_arg_count={} for {}"").format(tmp, typedef.type.get_typedef_name()))",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py:66,Modifiability,variab,variable,66,"""""""; Generate the translation for a type. :param tag: ""typedef"", ""variable"" etc.; :param parent: The typed object.; :param level: Recursion level controls indentation.; :return: Info().; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py:5,Performance,Load,Load,5,"#; # Load the given libclang.; #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/pkg_templates/initializor.py:14,Modifiability,variab,variables,14,"#; # Classes, variables etc.; #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/pkg_templates/initializor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/pkg_templates/initializor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/pkg_templates/initializor.py:5,Performance,Load,Load,5,"#; # Load the library.; #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/pkg_templates/initializor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/pkg_templates/initializor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/pkg_templates/initializor.py:5,Performance,Load,Load,5,"#; # Load pythonizations; #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/pkg_templates/initializor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/pkg_templates/initializor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.h:7,Usability,Simpl,Simple,7,/**; * Simple specialisation.; */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.h:7,Usability,Simpl,Simply,7,/**; * Simply templated function.; */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.h:12,Usability,simpl,simply,12,/**; * Less-simply templated function.; */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.py:21,Testability,test,tests,21,"""""""; Pytest/nosetest tests.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.py:5,Testability,Test,Test,5,"""""""; Test cppyy_generator.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.py:41,Testability,test,test,41,'''This method is run once before _each_ test method is executed''',MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.py:40,Testability,test,test,40,'''This method is run once after _each_ test method is executed''',MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/tests/test_cppyy_backend.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py:14,Integrability,depend,dependent,14,"#; # platform-dependent helpers; #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py:35,Deployability,install,installed,35,"# depending on goal, copy over pre-installed tree",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py:2,Integrability,depend,depending,2,"# depending on goal, copy over pre-installed tree",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py:7,Deployability,install,install,7,"# base install",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py:9,Deployability,install,install,9,"# custom install of backend",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py:107,Usability,simpl,simply,107,"# this is a universal, but platform-specific package; a combination; # that wheel does not recognize, thus simply fool it",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py:88,Deployability,install,installed,88,"# pip does not resolve dependencies before building binaries, so unless; # packages are installed one-by-one, on old install is used or the build; # will simply fail hard. The following is not completely quiet, but at; # least a lot less conspicuous.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py:117,Deployability,install,install,117,"# pip does not resolve dependencies before building binaries, so unless; # packages are installed one-by-one, on old install is used or the build; # will simply fail hard. The following is not completely quiet, but at; # least a lot less conspicuous.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py:23,Integrability,depend,dependencies,23,"# pip does not resolve dependencies before building binaries, so unless; # packages are installed one-by-one, on old install is used or the build; # will simply fail hard. The following is not completely quiet, but at; # least a lot less conspicuous.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py:154,Usability,simpl,simply,154,"# pip does not resolve dependencies before building binaries, so unless; # packages are installed one-by-one, on old install is used or the build; # will simply fail hard. The following is not completely quiet, but at; # least a lot less conspicuous.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/capi.h:22,Security,access,access,22,/* direct interpreter access ---------------------------------------------- */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/capi.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/capi.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/capi.h:79,Availability,down,down-cast,79,"/* calculate offsets between declared and actual type, up-cast: direction > 0; down-cast: direction < 0 */",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/capi.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/capi.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:3,Deployability,configurat,configuration,3,"// configuration",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:3,Modifiability,config,configuration,3,"// configuration",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:3,Usability,simpl,simple,3,"// simple placeholders for ones that don't exist",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:3,Performance,load,load,3,"// load frequently used headers",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:52,Integrability,wrap,wrappers,52,"// start off with a reasonable size placeholder for wrappers",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:22,Security,access,access,22,"// direct interpreter access -------------------------------------------------",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:78,Performance,cache,cache,78,"// Fully resolve the given name to the final type name.; // try memoized type cache, in case seen before",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:3,Energy Efficiency,reduce,reduce,3,"// reduce [N] to []",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:14,Performance,cache,cache,14,"// First, try cache",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:39,Performance,load,loading,39,"// use TClass directly, to enable auto-loading; class may be stubbed (eg. for; // function returns) or forward declared, leading to a non-null TClass that is; // otherwise invalid/unusable",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:61,Testability,stub,stubbed,61,"// use TClass directly, to enable auto-loading; class may be stubbed (eg. for; // function returns) or forward declared, leading to a non-null TClass that is; // otherwise invalid/unusable",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:3,Performance,load,load,3,/* load */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:228,Availability,avail,available,228,"// Cling does not provide a consistent ImageBase address for calculating relative addresses; // as used in Windows 64b RTTI. So, check for our own RTTI extension instead. If that fails,; // see whether the unmangled raw_name is available (e.g. if this is an MSVC compiled rather; // than JITed class) and pass on if it is.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:3,Security,access,access,3,"// access the extra data item which is an absolute pointer to the RTTI",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:39,Availability,avail,available,39,"// do not fall through if no RTTI info available",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:156,Security,access,accessible,156,"// if the raw name is the empty string (no guarantees that this is so as truly, the; // address is corrupt, but it is common to be empty), then there is no accessible RTTI; // and getting the unmangled name will crash ...",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:9,Safety,risk,risk,9,"// can't risk passing to ROOT/meta as it may do RTTI",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:56,Availability,avail,available,56,"// verify whether the dictionary of this class is fully available",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:24,Availability,error,error,24,"// TODO: propagate this error to caller w/o use of Python C-API; /*; PyErr_Format(PyExc_RuntimeError, ""could not resolve %s::%s(%s)"",; const_cast<TClassRef&>(klass).GetClassName(),; wrap.fName, callString.c_str()); */",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182,Integrability,wrap,wrap,182,"// TODO: propagate this error to caller w/o use of Python C-API; /*; PyErr_Format(PyExc_RuntimeError, ""could not resolve %s::%s(%s)"",; const_cast<TClassRef&>(klass).GetClassName(),; wrap.fName, callString.c_str()); */",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:62,Availability,error,errors,62,"// generate the wrapper and JIT it; ignore wrapper generation errors (will simply; // result in a nullptr that is reported upstream if necessary; often, however,; // there is a different overload available that will do)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:196,Availability,avail,available,196,"// generate the wrapper and JIT it; ignore wrapper generation errors (will simply; // result in a nullptr that is reported upstream if necessary; often, however,; // there is a different overload available that will do)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:16,Integrability,wrap,wrapper,16,"// generate the wrapper and JIT it; ignore wrapper generation errors (will simply; // result in a nullptr that is reported upstream if necessary; often, however,; // there is a different overload available that will do)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:43,Integrability,wrap,wrapper,43,"// generate the wrapper and JIT it; ignore wrapper generation errors (will simply; // result in a nullptr that is reported upstream if necessary; often, however,; // there is a different overload available that will do)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:75,Usability,simpl,simply,75,"// generate the wrapper and JIT it; ignore wrapper generation errors (will simply; // result in a nullptr that is reported upstream if necessary; often, however,; // there is a different overload available that will do)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:28,Availability,error,error,28,"// happens with compilation error",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:19,Availability,error,error,19,/* TODO ... report error */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:93,Security,expose,exposes,93,"// TODO: the following attempts are all brittle and leak transactions, but; // each properly exposes the symbol so subsequent lookups will succeed",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:3,Testability,Test,Test,3,"// Test if this scope represents a namespace.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:3,Testability,Test,Test,3,"// Test if this type may not be instantiated.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:3,Testability,Test,Test,3,"// Test if this type is an aggregate type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:3,Testability,Test,Test,3,"// Test if this type has a default constructor or is a ""plain old data"" type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:7,Availability,down,down,7,"// Cut down to the outer-most scope from <name>, taking proper care of templates.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:13,Modifiability,extend,extend,13,"// found the extend of the scope ... done",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:7,Availability,down,down,7,"// Cut down to the outer-most scope from <name>, drop templates",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:80,Performance,load,loaded,80,"// TEnv contains rootmap entries and user-side rootmap files may be already; // loaded on startup. Thus, filter on file name rather than load time.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:137,Performance,load,load,137,"// TEnv contains rootmap entries and user-side rootmap files may be already; // loaded on startup. Thus, filter on file name rather than load time.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:228,Modifiability,inherit,inheritance,228,"////////////////////////////////////////////////////////////////////////////////; /// \fn Cppyy::TCppIndex_t GetLongestInheritancePath(TClass *klass); /// \brief Retrieve number of base classes in the longest branch of the; /// inheritance tree of the input class.; /// \param[in] klass The class to start the retrieval process from.; ///; /// This is a helper function for Cppyy::GetNumBasesLongestBranch.; /// Given an inheritance tree, the function assigns weight 1 to each class that; /// has at least one base. Starting from the input class, the function is; /// called recursively on all the bases. For each base the return value is one; /// (the weight of the base itself) plus the maximum value retrieved for their; /// bases in turn. For example, given the following inheritance tree:; ///; /// ~~~{.cpp}; /// class A {}; class B: public A {};; /// class X {}; class Y: public X {}; class Z: public Y {};; /// class C: public B, Z {};; /// ~~~; ///; /// calling this function on an instance of `C` will return 3, the steps; /// required to go from C to X.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:421,Modifiability,inherit,inheritance,421,"////////////////////////////////////////////////////////////////////////////////; /// \fn Cppyy::TCppIndex_t GetLongestInheritancePath(TClass *klass); /// \brief Retrieve number of base classes in the longest branch of the; /// inheritance tree of the input class.; /// \param[in] klass The class to start the retrieval process from.; ///; /// This is a helper function for Cppyy::GetNumBasesLongestBranch.; /// Given an inheritance tree, the function assigns weight 1 to each class that; /// has at least one base. Starting from the input class, the function is; /// called recursively on all the bases. For each base the return value is one; /// (the weight of the base itself) plus the maximum value retrieved for their; /// bases in turn. For example, given the following inheritance tree:; ///; /// ~~~{.cpp}; /// class A {}; class B: public A {};; /// class X {}; class Y: public X {}; class Z: public Y {};; /// class C: public B, Z {};; /// ~~~; ///; /// calling this function on an instance of `C` will return 3, the steps; /// required to go from C to X.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:776,Modifiability,inherit,inheritance,776,"////////////////////////////////////////////////////////////////////////////////; /// \fn Cppyy::TCppIndex_t GetLongestInheritancePath(TClass *klass); /// \brief Retrieve number of base classes in the longest branch of the; /// inheritance tree of the input class.; /// \param[in] klass The class to start the retrieval process from.; ///; /// This is a helper function for Cppyy::GetNumBasesLongestBranch.; /// Given an inheritance tree, the function assigns weight 1 to each class that; /// has at least one base. Starting from the input class, the function is; /// called recursively on all the bases. For each base the return value is one; /// (the weight of the base itself) plus the maximum value retrieved for their; /// bases in turn. For example, given the following inheritance tree:; ///; /// ~~~{.cpp}; /// class A {}; class B: public A {};; /// class X {}; class Y: public X {}; class Z: public Y {};; /// class C: public B, Z {};; /// ~~~; ///; /// calling this function on an instance of `C` will return 3, the steps; /// required to go from C to X.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:237,Modifiability,inherit,inheritance,237,"////////////////////////////////////////////////////////////////////////////////; /// \fn Cppyy::TCppIndex_t Cppyy::GetNumBasesLongestBranch(TCppType_t klass); /// \brief Retrieve number of base classes in the longest branch of the; /// inheritance tree.; /// \param[in] klass The class to start the retrieval process from.; ///; /// The function converts the input class to a `TClass *` and calls; /// GetLongestInheritancePath.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2,Energy Efficiency,reduce,reduced,2,/*reduced*/,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:150,Deployability,patch,patches,150,"// This function is deliberately left empty, because it is not used in; // PyROOT, and synchronizing it with cppyy-backend upstream would require; // patches to ROOT meta.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:87,Integrability,synchroniz,synchronizing,87,"// This function is deliberately left empty, because it is not used in; // PyROOT, and synchronizing it with cppyy-backend upstream would require; // patches to ROOT meta.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:79,Availability,down,down-cast,79,"// calculate offsets between declared and actual type, up-cast: direction > 0; down-cast: direction < 0",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:78,Availability,error,error,78,"// gInterpreter requirement; // would like to warn, but can't quite determine error from intentional; // hiding by developers, so only cover the case where we really should have; // had a class info, but apparently don't:",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:9,Availability,error,error,9,"// Cling error, treat silently",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:29,Availability,error,error,29,"// TODO: signal some type of error (or should that be upstream?",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:3,Availability,failure,failure,3,"// failure ...",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:3,Availability,failure,failure,3,"// failure ...",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:3,Availability,failure,failure,3,"// failure ...",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:816,Performance,cache,cached,816,"// There is currently no clean way of extracting a templated method out of ROOT/meta; // for a variety of reasons, none of them fundamental. The game played below is to; // first get any pre-existing functions already managed by ROOT/meta, but if that fails,; // to do an explicit lookup that ignores the prototype (i.e. the full name should be; // enough), and finally to ignore the template arguments part of the name as this fails; // in cling if there are default parameters.; // It would be possible to get the prototype from the created functions and use that to; // do a new lookup, after which ROOT/meta will manage the function. However, neither; // TFunction::GetPrototype() nor TFunction::GetSignature() is of the proper form, so; // we'll/ manage the new TFunctions instead and will assume that they are cached on the; // calling side to prevent multiple creations.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:132,Security,access,access,132,"// try base classes to cover a common 'using' case (TODO: this is stupid and misses; // out on base classes; fix that with improved access to Cling)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:3,Availability,failure,failure,3,"// failure ...",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:3,Availability,failure,failure,3,"// failure ...",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:31,Modifiability,variab,variable,31,"// CLING WORKAROUND: make sure variable is loaded",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:43,Performance,load,loaded,43,"// CLING WORKAROUND: make sure variable is loaded",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:7,Performance,load,loaded,7,"// now loaded!",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:205,Modifiability,variab,variable,205,"// CLING WORKAROUND: the following causes templates to be instantiated first within the proper; // scope, making the lookup succeed and preventing spurious duplicate instantiations later. Also,; // if the variable is not yet loaded, pull it in through gInterpreter.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:225,Performance,load,loaded,225,"// CLING WORKAROUND: the following causes templates to be instantiated first within the proper; // scope, making the lookup succeed and preventing spurious duplicate instantiations later. Also,; // if the variable is not yet loaded, pull it in through gInterpreter.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:48,Performance,cache,caches,48,"// yes, CINT (GetOffset() is both wrong; // and caches that wrong result!",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:3,Performance,load,load,3,/* load */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:3,Performance,load,load,3,/* load */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:22,Performance,load,loaded,22,"// some enums are not loaded as they are not considered part of; // the global scope, but of the enum scope; get them w/o checking",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:3,Performance,load,load,3,/* load */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:55,Integrability,wrap,wrap,55,"// lambdas use a compiler internal closure type, so we wrap; // them, then return the wrapper's type; // TODO: this current leaks the std::function; also, if possible,; // should instantiate through TClass rather then ProcessLine",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:86,Integrability,wrap,wrapper,86,"// lambdas use a compiler internal closure type, so we wrap; // them, then return the wrapper's type; // TODO: this current leaks the std::function; also, if possible,; // should instantiate through TClass rather then ProcessLine",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:68,Modifiability,variab,variables,68,"// TODO: currently, ROOT/meta does not properly distinguish between variables of enum; // type, and values of enums. The latter are supposed to be const. This code relies on; // odd features (bugs?) to figure out the difference, but this should really be fixed; // upstream and/or deserves a new API.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:38,Modifiability,variab,variables,38,"// make use of an oddity: enum global variables do not have their kIsStatic bit; // set, whereas enum global values do",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:14,Integrability,wrap,wrappers,14,"//- C-linkage wrappers -------------------------------------------------------",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:22,Security,access,access,22,/* direct interpreter access ---------------------------------------------- */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:23,Integrability,interface,interface,23,"// for calls through C interface, require extra space for reporting exceptions",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:79,Availability,down,down-cast,79,"/* calculate offsets between declared and actual type, up-cast: direction > 0; down-cast: direction < 0 */",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:11,Performance,load,loaded,11,/* already loaded */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:17,Integrability,wrap,wrappers,17,"// end C-linkage wrappers",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.h:49,Modifiability,config,config,49,"// ifdef __cplusplus; // TODO: pick up from llvm-config --cxxflags",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.h:43,Availability,avail,available,43,"// Wrapper callback: except this to become available from Cling directly",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.h:3,Integrability,Wrap,Wrapper,3,"// Wrapper callback: except this to become available from Cling directly",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/cpp_cppyy.h:22,Security,access,access,22,"// direct interpreter access -------------------------------------------------",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/cpp_cppyy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/cpp_cppyy.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/cpp_cppyy.h:12,Security,access,access,12,"// for fast access; // memory management ---------------------------------------------------------",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/cpp_cppyy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/cpp_cppyy.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/cpp_cppyy.h:79,Availability,down,down-cast,79,"// calculate offsets between declared and actual type, up-cast: direction > 0; down-cast: direction < 0",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/cpp_cppyy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/cpp_cppyy.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/precommondefs.h:264,Availability,avail,available,264,"/* All functions and global variables declared anywhere should use; one of the following attributes:. RPY_EXPORTED: the symbol is exported out of libpypy-c.so. RPY_EXTERN: the symbol is not exported out of libpypy-c.so, but; otherwise works like 'extern' by being available to; other C sources. static: as usual, this means the symbol is local to this C file. Don't use _RPY_HIDDEN directly. For tests involving building a custom; .so, translator/tool/cbuild.py overrides RPY_EXTERN so that it becomes; equal to RPY_EXPORTED. Any function or global variable declared with no attribute at all is; a bug; please report or fix it.; */",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/precommondefs.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/precommondefs.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/precommondefs.h:28,Modifiability,variab,variables,28,"/* All functions and global variables declared anywhere should use; one of the following attributes:. RPY_EXPORTED: the symbol is exported out of libpypy-c.so. RPY_EXTERN: the symbol is not exported out of libpypy-c.so, but; otherwise works like 'extern' by being available to; other C sources. static: as usual, this means the symbol is local to this C file. Don't use _RPY_HIDDEN directly. For tests involving building a custom; .so, translator/tool/cbuild.py overrides RPY_EXTERN so that it becomes; equal to RPY_EXPORTED. Any function or global variable declared with no attribute at all is; a bug; please report or fix it.; */",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/precommondefs.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/precommondefs.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/precommondefs.h:549,Modifiability,variab,variable,549,"/* All functions and global variables declared anywhere should use; one of the following attributes:. RPY_EXPORTED: the symbol is exported out of libpypy-c.so. RPY_EXTERN: the symbol is not exported out of libpypy-c.so, but; otherwise works like 'extern' by being available to; other C sources. static: as usual, this means the symbol is local to this C file. Don't use _RPY_HIDDEN directly. For tests involving building a custom; .so, translator/tool/cbuild.py overrides RPY_EXTERN so that it becomes; equal to RPY_EXPORTED. Any function or global variable declared with no attribute at all is; a bug; please report or fix it.; */",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/precommondefs.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/precommondefs.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/precommondefs.h:396,Testability,test,tests,396,"/* All functions and global variables declared anywhere should use; one of the following attributes:. RPY_EXPORTED: the symbol is exported out of libpypy-c.so. RPY_EXTERN: the symbol is not exported out of libpypy-c.so, but; otherwise works like 'extern' by being available to; other C sources. static: as usual, this means the symbol is local to this C file. Don't use _RPY_HIDDEN directly. For tests involving building a custom; .so, translator/tool/cbuild.py overrides RPY_EXTERN so that it becomes; equal to RPY_EXPORTED. Any function or global variable declared with no attribute at all is; a bug; please report or fix it.; */",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/precommondefs.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/precommondefs.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/setup.py:14,Integrability,depend,dependent,14,"#; # platform-dependent helpers; #",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/setup.py:46,Deployability,install,install,46,"# happens during egg_info and other non-build/install commands",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/setup.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/setup.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/API.h:7,Security,Access,Access,7,"//; // Access to the python interpreter and API onto CPyCppyy.; //; // Python",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/API.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/API.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/API.h:55,Security,expose,exposed,55,"// CPYCPPYY_PARAMETER; // CallContext is not currently exposed",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/API.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/API.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/API.h:34,Security,expose,exposed,34,"// Dimensions class not currently exposed",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/API.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/API.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/API.h:8,Security,access,access,8,"//- C++ access to cppyy objects ---------------------------------------------; // C++ Instance (python object proxy) to void* conversion",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/API.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/API.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/API.h:29,Safety,safe,safety,29,"// helper to verify expected safety of moving an instance into C++",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/API.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/API.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/API.h:125,Availability,avail,available,125,"//- access to the python interpreter ----------------------------------------; // import a python module, making its classes available to Cling",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/API.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/API.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/API.h:4,Security,access,access,4,"//- access to the python interpreter ----------------------------------------; // import a python module, making its classes available to Cling",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/API.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/API.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/DispatchPtr.h:199,Modifiability,inherit,inheriting,199,"//////////////////////////////////////////////////////////////////////////////; // //; // DispatchPtr //; // //; // Smart pointer for reference management and C++ instance tracking when //; // cross-inheriting. The carried pointer is always expected to be derived //; // from CPPInstance, and the DispatchPtr to be embedded in the C++ instance //; // derived dispatcher to which it points (ownership is two-way; life-times //; // are equal). The C++ dispatcher then uses the DispatchPtr to call Python //; // functions for virtual methods. //; // //; //////////////////////////////////////////////////////////////////////////////; // Bindings",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/DispatchPtr.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/DispatchPtr.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/DispatchPtr.h:139,Availability,avail,available,139,"// Default constructor: only ever created from C++, as by definition, creation; // from the Python side makes the relevant Python instance available. Calls to; // the default ctor happen eg. in STL containers. It is expected that the; // pointer to the Python object is filled in later, eg. through assign().",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/DispatchPtr.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/DispatchPtr.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/DispatchPtr.h:3,Security,access,access,3,"// access to underlying object: cast and dereferencing",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/DispatchPtr.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/DispatchPtr.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h:773,Availability,error,error,773,"//////////////////////////////////////////////////////////////////////////////; // //; // PyException //; // //; // Purpose: A C++ exception class for throwing python exceptions //; // through C++ code. //; // Created: Apr, 2004, Scott Snyder, from the version in D0's python_util. //; // //; // The situation is: //; // - We're calling C++ code from python. //; // - The C++ code can call back to python. //; // - What to do then if the python callback throws an exception? //; // //; // We need to get the control flow back to where CPyCppyy calls C++. //; // To do that we throw a TPyException. //; // We can then catch this exception when we do the C++ call. //; // //; // Note that we don't need to save any state in the exception -- it's //; // already in the python error info variables. //; // (??? Actually, if the program is multithreaded, this is dangerous //; // if the code has released and reacquired the lock along the call chain. //; // Punt on this for now, though.) //; // //; //////////////////////////////////////////////////////////////////////////////; // Standard",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h:891,Deployability,release,released,891,"//////////////////////////////////////////////////////////////////////////////; // //; // PyException //; // //; // Purpose: A C++ exception class for throwing python exceptions //; // through C++ code. //; // Created: Apr, 2004, Scott Snyder, from the version in D0's python_util. //; // //; // The situation is: //; // - We're calling C++ code from python. //; // - The C++ code can call back to python. //; // - What to do then if the python callback throws an exception? //; // //; // We need to get the control flow back to where CPyCppyy calls C++. //; // To do that we throw a TPyException. //; // We can then catch this exception when we do the C++ call. //; // //; // Note that we don't need to save any state in the exception -- it's //; // already in the python error info variables. //; // (??? Actually, if the program is multithreaded, this is dangerous //; // if the code has released and reacquired the lock along the call chain. //; // Punt on this for now, though.) //; // //; //////////////////////////////////////////////////////////////////////////////; // Standard",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h:784,Modifiability,variab,variables,784,"//////////////////////////////////////////////////////////////////////////////; // //; // PyException //; // //; // Purpose: A C++ exception class for throwing python exceptions //; // through C++ code. //; // Created: Apr, 2004, Scott Snyder, from the version in D0's python_util. //; // //; // The situation is: //; // - We're calling C++ code from python. //; // - The C++ code can call back to python. //; // - What to do then if the python callback throws an exception? //; // //; // We need to get the control flow back to where CPyCppyy calls C++. //; // To do that we throw a TPyException. //; // We can then catch this exception when we do the C++ call. //; // //; // Note that we don't need to save any state in the exception -- it's //; // already in the python error info variables. //; // (??? Actually, if the program is multithreaded, this is dangerous //; // if the code has released and reacquired the lock along the call chain. //; // Punt on this for now, though.) //; // //; //////////////////////////////////////////////////////////////////////////////; // Standard",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h:16,Availability,error,error,16,"// clear Python error, to allow full error handling C++ side",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h:37,Availability,error,error,37,"// clear Python error, to allow full error handling C++ side",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h:3,Usability,clear,clear,3,"// clear Python error, to allow full error handling C++ side",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/PyException.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/Reflex.h:7,Security,Access,Access,7,"//; // Access to the C++ reflection information; //",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/Reflex.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/include/CPyCppyy/Reflex.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:429,Modifiability,inherit,inheritance,429,"//______________________________________________________________________________; // CPyCppyy API: Interpreter and Proxy Access; // ==========================================; //; // Access to cppyy Python objects from Cling and C++: allows conversion for; // instances and type checking for scopes, instances, etc.; // Adds a few convenience functions to call Python from Cling and expose Python; // classes to Cling for use in inheritance etc.; //- data ---------------------------------------------------------------------",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:121,Security,Access,Access,121,"//______________________________________________________________________________; // CPyCppyy API: Interpreter and Proxy Access; // ==========================================; //; // Access to cppyy Python objects from Cling and C++: allows conversion for; // instances and type checking for scopes, instances, etc.; // Adds a few convenience functions to call Python from Cling and expose Python; // classes to Cling for use in inheritance etc.; //- data ---------------------------------------------------------------------",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:183,Security,Access,Access,183,"//______________________________________________________________________________; // CPyCppyy API: Interpreter and Proxy Access; // ==========================================; //; // Access to cppyy Python objects from Cling and C++: allows conversion for; // instances and type checking for scopes, instances, etc.; // Adds a few convenience functions to call Python from Cling and expose Python; // classes to Cling for use in inheritance etc.; //- data ---------------------------------------------------------------------",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:383,Security,expose,expose,383,"//______________________________________________________________________________; // CPyCppyy API: Interpreter and Proxy Access; // ==========================================; //; // Access to cppyy Python objects from Cling and C++: allows conversion for; // instances and type checking for scopes, instances, etc.; // Adds a few convenience functions to call Python from Cling and expose Python; // classes to Cling for use in inheritance etc.; //- data ---------------------------------------------------------------------",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:67,Performance,load,load,67,"// Private initialization method: setup the python interpreter and load the; // cppyy module.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:9,Performance,load,loading,9,"// force loading of the cppyy module",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:153,Availability,alive,alive,153,"// The gMainDict is borrowed, i.e. we are not calling Py_INCREF(gMainDict).; // Like this, we avoid unexpectedly affecting how long __main__ is kept; // alive. The gMainDict is only used in Exec(), ExecScript(), and Eval(),; // which should not be called after __main__ is garbage collected anyway.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:94,Safety,avoid,avoid,94,"// The gMainDict is borrowed, i.e. we are not calling Py_INCREF(gMainDict).; // Like this, we avoid unexpectedly affecting how long __main__ is kept; // alive. The gMainDict is only used in Exec(), ExecScript(), and Eval(),; // which should not be called after __main__ is garbage collected anyway.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:30,Security,access,access,30,"// unnamed namespace; //- C++ access to cppyy objects ---------------------------------------------",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:69,Availability,error,errors,69,"// perform cast (the call will check TClass and addr, and set python errors)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:3,Performance,perform,perform,3,"// perform cast (the call will check TClass and addr, and set python errors)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:3,Testability,Test,Test,3,"// Test if the given object is of a CPPScope derived type.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:3,Testability,Test,Test,3,"// Test if the given object is of a CPPScope type.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:3,Testability,Test,Test,3,"// Test if the given pyobject is of CPPInstance derived type.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:25,Modifiability,inherit,inheritance,25,"// detailed walk through inheritance hierarchy",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:3,Testability,Test,Test,3,"// Test if the given pyobject is of CPPInstance type.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:265,Integrability,protocol,protocol,265,"// Extends on PySequence_Check() to determine whether an object can be iterated; // over (technically, all objects can b/c of C++ pointer arithmetic, hence this; // check isn't 100% accurate, but neither is PySequence_Check()).; // Note: simply having the iterator protocol does not constitute a sequence, bc; // PySequence_GetItem() would fail.; // default to PySequence_Check() if called with a non-C++ object",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:3,Modifiability,Extend,Extends,3,"// Extends on PySequence_Check() to determine whether an object can be iterated; // over (technically, all objects can b/c of C++ pointer arithmetic, hence this; // check isn't 100% accurate, but neither is PySequence_Check()).; // Note: simply having the iterator protocol does not constitute a sequence, bc; // PySequence_GetItem() would fail.; // default to PySequence_Check() if called with a non-C++ object",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:238,Usability,simpl,simply,238,"// Extends on PySequence_Check() to determine whether an object can be iterated; // over (technically, all objects can b/c of C++ pointer arithmetic, hence this; // check isn't 100% accurate, but neither is PySequence_Check()).; // Note: simply having the iterator protocol does not constitute a sequence, bc; // PySequence_GetItem() would fail.; // default to PySequence_Check() if called with a non-C++ object",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:39,Safety,safe,safely,39,"// Test whether the given instance can safely return to C++",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:3,Testability,Test,Test,3,"// Test whether the given instance can safely return to C++",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:55,Testability,test,test,55,"// simply don't know; // the instance fails the lively test if it owns the C++ object while having a; // reference count of 1 (meaning: it could delete the C++ instance any moment)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:3,Usability,simpl,simply,3,"// simply don't know; // the instance fails the lively test if it owns the C++ object while having a; // reference count of 1 (meaning: it could delete the C++ instance any moment)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:3,Testability,Test,Test,3,"// Test if the given pyobject is of CPPOverload derived type.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:25,Modifiability,inherit,inheritance,25,"// detailed walk through inheritance hierarchy",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:3,Testability,Test,Test,3,"// Test if the given pyobject is of CPPOverload type.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:4,Security,access,access,4,"//- access to the python interpreter ----------------------------------------",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:115,Testability,test,test,115,"// Execute a python stand-alone script, with argv CLI arguments.; //; // example of use:; // CPyCppyy::ExecScript(""test.py"", {""1"", ""2"", ""3""});",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:492,Availability,avail,available,492,"// This is a common code block for Python 3. We prefer using objects to; // automatize memory management and not introduce even more preprocessor; // branching for deletion at the end of the method.; //; // FUTURE IMPROVEMENT ONCE OLD PYTHON VERSIONS ARE NOT SUPPORTED BY CPPYY:; // Right now we use C++ objects to automatize memory management. One could use; // RAAI and the Python memory allocation API (PEP 445) once some old Python; // version is deprecated in CPPYY. That new feature is available since version; // 3.4 and the preprocessor branching to also support that would be so; // complicated to make the code unreadable.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:39,Usability,simpl,simple,39,"// Before version 3.8, the code is one simple line",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:54,Deployability,Configurat,Configuration,54,"// Here we comply to ""PEP 587 – Python Initialization Configuration"" to avoid; // deprecation warnings at compile time.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:54,Modifiability,Config,Configuration,54,"// Here we comply to ""PEP 587 – Python Initialization Configuration"" to avoid; // deprecation warnings at compile time.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:72,Safety,avoid,avoid,72,"// Here we comply to ""PEP 587 – Python Initialization Configuration"" to avoid; // deprecation warnings at compile time.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:12,Availability,error,error,12,"// test for error",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:3,Testability,test,test,3,"// test for error",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx:10,Availability,error,errors,10,"// report errors as appropriate; return void",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/API.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/API.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h:41,Availability,avail,available,41,"// indicate that implicit converters are available",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h:8,Integrability,wrap,wrapped,8,"// call wrapped method directly, no inheritance",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h:36,Modifiability,inherit,inheritance,36,"// call wrapped method directly, no inheritance",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h:20,Deployability,release,release,20,"// if method should release the GIL",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h:10,Safety,safe,safety,10,"// signal safety",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:250,Modifiability,variab,variable,250,"// p3 has at least 2 ref-counts, as contrary to p2, it will create a descriptor; // copy for the method holding self in the case of __init__; but there can also; // be a reference held by the frame object, which is indistinguishable from a; // local variable reference, so the cut-off has to remain 2.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:42,Modifiability,extend,extended,42,"// get any pointer type to initialize the extended dictionary type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:19,Performance,load,loading,19,"// general case of loading a C array pointer (void* + type code) as function argument",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:13,Availability,error,error,13,"// empty, as error already set",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:17,Availability,avail,available,17,"// if address is available, and it wasn't set by this converter, assume a byte-wise copy;; // otherwise assume a pointer copy (this relies on the converter to be used for properties,; // or for argument passing, but not both at the same time; this is currently the case)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:27,Security,access,access,27,"// assume this is a buffer access if the size is known; otherwise assume string",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3,Integrability,depend,depending,3,"// depending on memory policy, some objects are no longer owned when passed to C++",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:30,Performance,perform,perform,30,"// ok if buffer exists (can't perform any useful size checks)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3,Integrability,depend,depending,3,"// depending on memory policy, some objects are no longer owned when passed to C++",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:27,Availability,error,error,27,"// leaves prior conversion error for report",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:18,Usability,simpl,simple,18,"// common case of simple object assignment",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3,Integrability,depend,depending,3,"// depending on memory policy, some objects need releasing when passed into functions",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3,Integrability,depend,depending,3,"// depending on memory policy, some objects need releasing when passed into functions",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:115,Availability,down,down-casted,115,"// This should not need a cast (ie. BindCppObjectNoCast), but performing the cast; // here means callbacks receive down-casted object when passed by-ptr, which is; // needed for object identity. The latter case is assumed to be more common than; // conversion of (global) objects.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:62,Performance,perform,performing,62,"// This should not need a cast (ie. BindCppObjectNoCast), but performing the cast; // here means callbacks receive down-casted object when passed by-ptr, which is; // needed for object identity. The latter case is assumed to be more common than; // conversion of (global) objects.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3,Integrability,depend,depending,3,"// depending on memory policy, some objects need releasing when passed into functions",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3,Integrability,depend,depending,3,"// depending on memory policy, some objects need releasing when passed into functions",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:84,Integrability,interface,interface,84,"// buffer objects are allowed under ""user knows best"" (this includes the buffer; // interface to ctypes.c_void_p, which results in a void**)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:30,Performance,perform,perform,30,"// ok if buffer exists (can't perform any useful size checks)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:6,Safety,detect,detect,6,"// to detect deletions",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:152,Integrability,wrap,wrapper,152,"// Convert a bound C++ function pointer or callable python object to a C-style; // function pointer. The former is direct, the latter involves a JIT-ed wrapper.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:41,Integrability,wrap,wrapper,41,"// generic python callable: create a C++ wrapper function",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:19,Integrability,wrap,wrapper,19,"// re-use existing wrapper if possible",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:37,Integrability,wrap,wrapper,37,"// check for a pre-existing, unused, wrapper if not found",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:10,Integrability,wrap,wrapper,10,"// create wrapper if no re-use possible",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3,Integrability,wrap,wrapper,3,"// wrapper name",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:9,Integrability,wrap,wrapper,9,"// build wrapper function code",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:17,Integrability,wrap,wrapper,17,"// cache the new wrapper",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3,Performance,cache,cache,3,"// cache the new wrapper",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:31,Integrability,wrap,wrapper,31,"// now pass the pointer to the wrapper function (may be null)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:17,Integrability,wrap,wrapper,17,"// else create a wrapper function",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:16,Integrability,wrap,wrapper,16,"// retrieve the wrapper pointer and capture it in a temporary std::function,; // then try normal conversion a second time",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3,Integrability,depend,depending,3,"// depending on memory policy, some objects need releasing when passed into functions",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:34,Security,expose,exposed,34,"// for the case where we have an 'exposed' smart pointer:",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:483,Safety,safe,safest,483,"// The automatic conversion of ordinary obejcts to smart pointers is disabled; // for PyROOT because it can cause trouble with overload resolution. If a; // function has overloads for both ordinary objects and smart pointers, then; // the implicit conversion to smart pointers can result in the smart pointer; // overload being hit, even though there would be an overload for the regular; // object. Since PyROOT didn't have this feature before 6.32 anyway, disabling; // it was the safest option.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:14,Availability,error,errors,14,"// Remove any errors set by GetBuffer(); note that if the argument was an array; // that failed to extract because of a type mismatch, the following will perform; // a (rather inefficient) copy. No warning is issued b/c e.g. numpy doesn't do; // so either.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:154,Performance,perform,perform,154,"// Remove any errors set by GetBuffer(); note that if the argument was an array; // that failed to extract because of a type mismatch, the following will perform; // a (rather inefficient) copy. No warning is issued b/c e.g. numpy doesn't do; // so either.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:14,Modifiability,refactor,refactor,14,"//- helper to refactor some code from CreateConverter ------------------------",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3,Usability,simpl,simple,3,"// simple array; set or resize as necessary",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:39,Availability,avail,available,39,"// fixed array, dims will have size if available",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:21,Availability,avail,available,21,"// converter factory available, use it to create converter",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3,Performance,load,load,3,"// load all converter factories in the global map 'gConvFactories'",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx:30,Availability,robust,robust,30,"// TODO: The following is not robust and should be revisited e.g. by making CPPOverloads; // that have only CPPClassMethods be true Python classmethods? Note that the original; // implementation wasn't 100% correct either (e.g. static size() mapped to len()).; //; // As-is, if no suitable `self` is given (normal case), but the type of the first argument; // matches the enclosing scope of the class method and it isn't needed for the call, then; // assume that the method was (incorrectly) bound and so drop that instance from args.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPClassMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx:78,Usability,usab,usable,78,"// important: 0, not Py_None; // fetch self, verify, and put the arguments in usable order",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx:90,Energy Efficiency,allocate,allocate,90,"// no Py_INCREF as no ownership; // perform the call, nullptr 'this' makes the other side allocate the memory",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx:36,Performance,perform,perform,36,"// no Py_INCREF as no ownership; // perform the call, nullptr 'this' makes the other side allocate the memory",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx:44,Availability,error,error,44,"// should be set, otherwise write a generic error msg",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx:585,Energy Efficiency,efficient,efficient,585,"// By convention, initialization parameters of multiple base classes are grouped; // by target base class. Here, we disambiguate and put in ""sentinel"" parameters; // that allow the dispatcher to propagate them.; // Three options supported:; // 0. empty args: default constructor call; // 1. fNumBases tuples, each handed to individual constructors; // 2. less than fNumBases, assuming (void) for the missing base constructors; // 3. normal arguments, going to the first base only; // TODO: this way of forwarding is expensive as the loop is external to this call;; // it would be more efficient to have the argument handling happen beforehand",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx:48,Usability,usab,usable,48,"// fetch self, verify, and put the arguments in usable order (if self is not handled; // first, arguments can not be reordered with sentinels in place)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx:36,Usability,simpl,simply,36,"// to re-use the argument handling, simply change the argument array into a tuple (the; // benefits of not allocating the tuple are relatively minor in this case)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx:37,Deployability,update,updated,37,"// copy out self as it may have been updated",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.h:31,Modifiability,inherit,inheritance,31,"// specialization for multiple inheritance disambiguation",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPConstructor.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:3,Performance,cache,cache,3,"// cache lookup for low level views",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:34,Security,access,accesses,34,"// non-initialized or public data accesses through class (e.g. by help())",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:9,Availability,error,error,9,/* Cling error */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:47,Performance,cache,cache,47,"// low level views are expensive to create, so cache them on the object instead",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:170,Modifiability,variab,variables,170,"// deletion removes the proxy, with the idea that a fresh lookup can be made,; // to support Cling's shadowing of declarations (TODO: the use case here is; // redeclared variables, for which fDescription is indeed th ename; it might; // fail for enums).",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:10,Performance,cache,cached,10,"// remove cached low level view, if any (will be restored upon reaeding)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:9,Availability,error,error,9,/* Cling error */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:16,Availability,error,error,16,"// set a python error, if not already done",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:3,Availability,failure,failure,3,"// failure ...",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:9,Security,expose,exposed,9,"// never exposed so no GC necessary",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:30,Security,access,access,30,"//= CPyCppyy datamember proxy access to internals ============================",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:116,Availability,recover,recovered,116,"// TODO: data members should have a unique identifier, just like methods,; // so that reflection information can be recovered post-initialization",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:116,Safety,recover,recovered,116,"// TODO: data members should have a unique identifier, just like methods,; // so that reflection information can be recovered post-initialization",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPEnum.cxx:225,Performance,load,loaded,225,"// Both GetCTypesType and GetCTypesPtrType, rely on the ctypes module itself; // caching the types (thus also making them unique), so no ref-count is needed.; // Further, by keeping a ref-count on the module, it won't be off-loaded until; // the 2nd cleanup cycle.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPEnum.cxx:32,Usability,simpl,simply,32,"// presumably not a class enum; simply pretend int",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPEnum.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPEnum.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPEnum.h:128,Integrability,depend,dependent,128,"// CPPEnum does not carry any additional C-side data for now, but can be of; // several types, based on the declared or compile-dependent types chosen.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPEnum.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPEnum.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPExcInstance.cxx:21,Usability,clear,clear,21,"// Garbage collector clear of held python member objects.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPExcInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPExcInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPFunction.cxx:145,Deployability,update,updated,145,"// special case, if this method was inserted as a constructor, then if no self was; // provided, it will be the first argument and may have been updated",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPFunction.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPFunction.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPFunction.h:3,Integrability,Wrap,Wrapper,3,"// Wrapper for global free/static C++ functions",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPFunction.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPFunction.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPFunction.h:3,Integrability,Wrap,Wrapper,3,"// Wrapper for global binary operators that swap arguments",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPFunction.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPFunction.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:583,Testability,stub,stubs,583,"//______________________________________________________________________________; // Python-side proxy objects; // =========================; //; // C++ objects are represented in Python by CPPInstances, which encapsulate; // them using either a pointer (normal), pointer-to-pointer (kIsReference set),; // or as an owned value (kIsValue set). Objects held as reference are never; // owned, otherwise the object is owned if kIsOwner is set.; //; // In addition to encapsulation, CPPInstance offers rudimentary comparison; // operators (based on pointer value and class comparisons); stubs (with lazy; // lookups) for numeric operators; and a representation that prints the C++; // pointer values, rather than the PyObject* ones as is the default.; //; // Smart pointers have the underlying type as the Python type, but store the; // pointer to the smart pointer. They carry a pointer to the Python-sode smart; // class for dereferencing to get to the actual instance pointer.; //- private helpers ----------------------------------------------------------",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:109,Modifiability,inherit,inheritance,109,"// Several specific use cases require extra data in a CPPInstance, but can not; // be a new type. E.g. cross-inheritance derived types are by definition added; // a posterio, and caching of datamembers is up to the datamember, not the; // instance type. To not have normal use of CPPInstance take extra memory, this; // extended data can slot in place of fObject for those use cases.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:320,Modifiability,extend,extended,320,"// Several specific use cases require extra data in a CPPInstance, but can not; // be a new type. E.g. cross-inheritance derived types are by definition added; // a posterio, and caching of datamembers is up to the datamember, not the; // instance type. To not have normal use of CPPInstance take extra memory, this; // extended data can slot in place of fObject for those use cases.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:3,Availability,error,error,3,"// error already set, but need to return nullptr",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:11,Availability,error,error,11,"// presume error already set",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:57,Modifiability,extend,extended,57,"// Return the cache for expensive data objects (and make extended as necessary)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:14,Performance,cache,cache,14,"// Return the cache for expensive data objects (and make extended as necessary)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:166,Deployability,install,installed,166,"// If the object is valid, then the normal Python behavior is to allow __len__; // to determine truth. However, that function is defined in typeobject.c and only; // installed if tp_as_number exists w/o the nb_nonzero/nb_bool slot filled in, so; // it can not be called directly. Instead, since we're only ever dealing with; // CPPInstance derived objects, ignore length from sequence or mapping and call; // the __len__ method, if any, directly.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:8,Security,access,access,8,"// User access to force deletion of the object. Needed in case of a true; // garbage collector (like in PyPy), to allow the user control over when; // the C++ destructor is called. This method requires that the C++ object; // is owned (no-op otherwise).",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:277,Safety,unsafe,unsafe,277,"// In C, it is common to represent an array of structs as a pointer to the first; // object in the array. If the caller indexes a pointer to an object that does not; // define indexing, then highly likely such C-style indexing is the goal. Just; // like C, this is potentially unsafe, so caveat emptor.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:145,Usability,simpl,simple,145,"// this is debatable, and probably should not care, but the use case is pretty; // circumscribed anyway, so might as well keep the functionality simple",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:85,Safety,safe,safely,85,"// Garbage collector clear of held python member objects; this is a good time; // to safely remove this object from the memory regulator.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:21,Usability,clear,clear,21,"// Garbage collector clear of held python member objects; this is a good time; // to safely remove this object from the memory regulator.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:3,Availability,down,down-cast,3,/* down-cast */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:10,Availability,error,errors,10,/* report errors */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:29,Availability,avail,available,29,"// use C++-side operators if available",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:102,Performance,perform,perform,102,"// default behavior: type + held pointer value defines identity; if both are; // CPPInstance objects, perform an additional autocast if need be",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:134,Security,hash,hash,134,"// Cannot use PyLong_AsSize_t here, as it cuts of at PY_SSIZE_T_MAX, which is; // only half of the max of std::size_t returned by the hash.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:25,Security,hash,hash,25,"// Try to locate an std::hash for this type and use that if it exists",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:66,Performance,perform,performance,66,"// if not valid, simply reset the hash function so as to not kill performance",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:34,Security,hash,hash,34,"// if not valid, simply reset the hash function so as to not kill performance",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:17,Usability,simpl,simply,17,"// if not valid, simply reset the hash function so as to not kill performance",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:49,Availability,Avail,Available,49,"// There are three possible options here:; // 1. Available operator<< to convert through an ostringstream; // 2. Cling's pretty printing; // 3. Generic printing as done in op_repr; //; // Additionally, there may be a mapped __str__ from the C++ type defining `operator char*`; // or `operator const char*`. Results are memoized for performance reasons.; // 0. Protect against trying to print a typed nullptr object through an insertion operator",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:332,Performance,perform,performance,332,"// There are three possible options here:; // 1. Available operator<< to convert through an ostringstream; // 2. Cling's pretty printing; // 3. Generic printing as done in op_repr; //; // Additionally, there may be a mapped __str__ from the C++ type defining `operator char*`; // or `operator const char*`. Results are memoized for performance reasons.; // 0. Protect against trying to print a typed nullptr object through an insertion operator",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:6,Availability,Avail,Available,6,"// 1. Available operator<< to convert through an ostringstream",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:38,Deployability,install,install,38,"// normal lookup failed; attempt lazy install of global operator<<(ostream&, type&)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:60,Performance,perform,performance,60,"// 2. Cling's pretty printing (not done through backend for performance reasons)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:10,Availability,avail,available,10,"// if not available/specialized, don't try again",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:25,Testability,stub,stubs,25,"//= CPyCppyy type number stubs to allow dynamic overrides =====================",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:59,Availability,avail,available,59,/* placeholder to lazily install and forward to 'ometh' if available */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:25,Deployability,install,install,25,/* placeholder to lazily install and forward to 'ometh' if available */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:63,Availability,avail,available,63,/* placeholder to lazily install and forward do '(l/r)meth' if available */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:25,Deployability,install,install,25,/* placeholder to lazily install and forward do '(l/r)meth' if available */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx:25,Deployability,install,install,25,/* placeholder to lazily install unary operators */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.h:3,Security,access,access,3,"// access to C++ pointer and type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.h:15,Performance,cache,cache,15,"// data member cache",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.h:9,Modifiability,inherit,inheritance,9,"// cross-inheritance dispatch",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.h:101,Modifiability,inherit,inherit,101,"// Short-circuit the type check by checking tp_new which all generated subclasses; // of CPPInstance inherit.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:57,Performance,cache,caches,57,"// fScope and fMethod handled separately; // do not copy caches",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:3,Availability,error,error,3,"// error already set",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:62,Performance,cache,cache,62,"// TODO: factor this code with the same in ProxyWrappers (and cache it there to be able to; // look up based on TCppType_t):",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:110,Availability,error,error,110,"// TODO: covers the PyException throw case, which does not seem to work on Windows, so; // instead leaves the error be",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:22,Performance,cache,cache,22,"// setup the dispatch cache",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:3,Deployability,install,install,3,"// install executor conform to the return type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:20,Availability,error,errors,20,"// helper to report errors in a consistent format (derefs msg)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:894,Modifiability,extend,extend,894,"// To help with overload selection, methods are given a priority based on the; // affinity of Python and C++ types. Priority only matters for methods that have; // an equal number of arguments and types that are possible substitutes (the; // normal selection mechanisms would simply distinguish them otherwise).; // The following types are ordered, in favor (variants implicit):; //; // bool >> long >> int >> short; // double >> long double >> float; // const char* >> char; //; // Further, all integer types are preferred over floating point b/c int to float; // is allowed implicitly, float to int is not.; //; // Special cases that are disliked include void* and unknown/incomplete types.; // Also, moves are preferred over references. std::initializer_list is not a nice; // conversion candidate either, but needs to be higher priority to mix well with; // implicit conversions.; // TODO: extend this to favour classes that are not bases.; // TODO: profile this method (it's expensive, but should be called too often)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:276,Usability,simpl,simply,276,"// To help with overload selection, methods are given a priority based on the; // affinity of Python and C++ types. Priority only matters for methods that have; // an equal number of arguments and types that are possible substitutes (the; // normal selection mechanisms would simply distinguish them otherwise).; // The following types are ordered, in favor (variants implicit):; //; // bool >> long >> int >> short; // double >> long double >> float; // const char* >> char; //; // Further, all integer types are preferred over floating point b/c int to float; // is allowed implicitly, float to int is not.; //; // Special cases that are disliked include void* and unknown/incomplete types.; // Also, moves are preferred over references. std::initializer_list is not a nice; // conversion candidate either, but needs to be higher priority to mix well with; // implicit conversions.; // TODO: extend this to favour classes that are not bases.; // TODO: profile this method (it's expensive, but should be called too often)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:37,Availability,avail,available,37,"// class is known, but no dictionary available, 2 more cases: * and &",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:11,Performance,cache,cache,11,"// done if cache is already setup",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:47,Availability,error,error,47,"// no INCREF yet for simple cleanup in case of error",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:21,Usability,simpl,simple,21,"// no INCREF yet for simple cleanup in case of error",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:54,Deployability,update,update,54,"// otherwise, check for a suitable 'self' in args and update accordingly",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:58,Availability,down,down,58,"// demand CPyCppyy object, and an argument that may match down the road",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:16,Availability,error,error,16,"// no self, set error and lament",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:12,Integrability,interface,interface,12,"// call the interface method",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:43,Safety,abort,abort,43,"// bypasses try block (i.e. segfaults will abort)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:23,Performance,perform,performance,23,"// at the cost of ~10% performance, don't abort the interpreter on any signal",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:42,Safety,abort,abort,42,"// at the cost of ~10% performance, don't abort the interpreter on any signal",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:235,Availability,error,error,235,"// TODO: the following is dreadfully slow and dead-locks on Apache: revisit; // raising exceptions through callbacks by using magic returns; // if (result && Utility::PyErr_Occurred_WithGIL()) {; // // can happen in the case of a CINT error: trigger exception processing; // Py_DECREF(result);; // result = 0;; // } else if (!result && PyErr_Occurred())",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:48,Usability,usab,usable,48,"// fetch self, verify, and put the arguments in usable order",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.h:3,Performance,cache,cached,3,"// cached value that doubles as initialized flag (uninitialized if -1)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOperator.cxx:212,Testability,stub,stubs,212,"// some operators can be a mix of global and class overloads; this method will; // first try class overloads (the existence of this method means that such were; // defined) and if failed, fall back on the global stubs; // TODO: the fact that this is a method and not an overload means that the global; // ones are tried for each method that fails during the overload resolution",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOperator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOperator.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:66,Safety,safe,safe,66,"// from CPython's instancemethod: Free list for method objects to safe malloc/free overhead; // The fSelf field is used to chain the elements.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:119,Deployability,integrat,integrated,119,"// TODO: only used in pythonizations to add Python-side overloads to existing; // C++ overloads, but may be better off integrated with Pythonize.cxx callbacks",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:119,Integrability,integrat,integrated,119,"// TODO: only used in pythonizations to add Python-side overloads to existing; // C++ overloads, but may be better off integrated with Pythonize.cxx callbacks",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:13,Testability,test,test,13,"// helper to test whether a method is used in a pseudo-function modus",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:34,Usability,simpl,simple,34,"// reset self if needed, allowing simple re-use",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:31,Testability,log,logic,31,"// helper to factor out return logic of mp_call / mp_vectorcall",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:3,Usability,simpl,simple,3,"// simple case",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:46,Integrability,interface,interface,46,"// Stub only, to fill out the python function interface.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:3,Testability,Stub,Stub,3,"// Stub only, to fill out the python function interface.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:16,Modifiability,variab,variable,16,"// To declare a variable as unused only when compiling for Python 3.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:3,Usability,simpl,simple,3,"// simple case",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:48,Security,hash,hashing,48,"// fall through: python is dynamic, and so, the hashing isn't infallible",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:12,Deployability,update,update,12,"// success: update the dispatch map for subsequent calls",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:123,Availability,ping,ping,123,"// debatable: apparently there are two methods that map onto the same sighash; // and preferring the latest may result in ""ping pong.""",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:19,Availability,error,errors,19,"// clear collected errors",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:3,Usability,clear,clear,3,"// clear collected errors",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:8,Availability,failure,failure,8,"// else failure ..",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:15,Availability,error,errors,15,"// first stage errors should be the more informative",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:11,Availability,error,error,11,"// collect error message/trace (automatically clears exception, too)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:17,Integrability,message,message,17,"// collect error message/trace (automatically clears exception, too)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:46,Usability,clear,clears,46,"// collect error message/trace (automatically clears exception, too)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:34,Availability,error,error,34,"// this should not happen; set an error to prevent core dump and report",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:30,Availability,error,errors,30,"// retrieve, store, and clear errors",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:24,Usability,clear,clear,24,"// retrieve, store, and clear errors",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:49,Availability,avail,available,49,"// only move forward if implicit conversions are available",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:11,Availability,error,error,11,/* default error */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:10,Availability,failure,failure,10,"// report failure",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:90,Modifiability,evolve,evolved,90,"// Descriptor; create and return a new, possibly bound, method proxy. This method; // has evolved with versions of python as follows:; //; // Python version | Action; // <- py2.7 | bound methods need to be first-class objects, so create a new; // | method object if self is not nullptr or Py_None; // py3.0-py3.7 | bound methods are no longer a language requirement, but; // | still supported: for convenience, retain old behavior; // py3.8 <= | vector calls no longer call the descriptor, so when it is; // | called, the method is likely stored, so should be new object",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:125,Availability,down,downstream,125,"// vector calls don't get here, unless a method is looked up on an instance, for; // e.g. class methods (C++ static); notify downstream to expect a 'self'",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:174,Safety,safe,safer,174,"// reset flags of the new method, as there is a self (which may or may not have; // come in through direct call syntax, but that's now impossible to know, so this; // is the safer choice)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:3,Security,Hash,Hash,3,"// Hash of method proxy object for insertion into dictionaries; with actual; // method (fMethodInfo) shared, its address is best suited.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:21,Usability,clear,clear,21,"// Garbage collector clear of held python member objects.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:26,Security,access,access,26,"//= CPyCppyy method proxy access to internals ================================",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:41,Usability,clear,clear,41,"// TODO: something like PyMethod_Fini to clear up the free_list",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.h:13,Security,hash,hashes,13,"// signature hashes are also used by TemplateProxy",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.h:11,Security,hash,hash,11,"// Build a hash from the types of the given python function arguments.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.h:9,Security,hash,hashing,9,"// TODO: hashing in the ref-count is for moves; resolve this together with the; // improved overloads for implicit conversions",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:3,Performance,cache,cache,3,"// cache the template on its clean name",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:18,Performance,cache,caches,18,"// so that caller caches the method on full name",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:76,Usability,simpl,simply,76,"// now peel scopes one by one, pulling in the python naming (which will; // simply recurse if not overridden in python)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:36,Usability,simpl,simply,36,"// lookup through python failed, so simply cook up a '::' -> '.' replacement",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:306,Performance,cache,caches,306,"// Called when CPPScope acts as a metaclass; since type_new always resets; // tp_alloc, and since it does not call tp_init on types, the metaclass is; // being fixed up here, and the class is initialized here as well.; // fixup of metaclass (left permanent, and in principle only called once b/c; // cppyy caches python classes)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:38,Modifiability,extend,extend,38,"// creation of the python-side class; extend the size if this is a smart ptr",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:172,Modifiability,inherit,inherits,172,"// coming here from cppyy or from sub-classing in python; take the; // C++ type from the meta class to make sure that the latter category; // has fCppType properly set (it inherits the meta class, but has an; // otherwise unknown (or wrong) C++ type)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:24,Availability,robust,robust,24,"// the following is not robust, but by design, C++ classes get their; // dictionaries filled after creation (chicken & egg problem as they; // can return themselves in methods), whereas a derived Python class; // with method overrides will have a non-empty dictionary (even if it; // has no methods, it will at least have a module name)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:169,Modifiability,inherit,inheritance,169,"// the direct base can be useful for some templates, such as shared_ptrs,; // so make it accessible (the __cpp_cross__ data member also signals that; // this is a cross-inheritance class)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:89,Security,access,accessible,89,"// the direct base can be useful for some templates, such as shared_ptrs,; // so make it accessible (the __cpp_cross__ data member also signals that; // this is a cross-inheritance class)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:79,Usability,simpl,simply,79,"// if the user messed with the metaclass, then we may not have a C++ type,; // simply return here before more damage gets done",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:36,Availability,failure,failure,36,"// more elaborate search in case of failure (eg. for inner classes on demand)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:85,Availability,avail,available,85,"// namespaces may have seen updates in their list of global functions, which; // are available as ""methods"" even though they're not really that",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:28,Deployability,update,updates,28,"// namespaces may have seen updates in their list of global functions, which; // are available as ""methods"" even though they're not really that",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:61,Safety,risk,risk,61,"// Note: can't re-use Utility::AddClass here, as there's the risk of; // a recursive call. Simply add method directly, as we're guaranteed; // that it doesn't exist yet.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:91,Usability,Simpl,Simply,91,"// Note: can't re-use Utility::AddClass here, as there's the risk of; // a recursive call. Simply add method directly, as we're guaranteed; // that it doesn't exist yet.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:23,Availability,error,error,23,"// for completeness in error reporting",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:23,Availability,error,error,23,"// for completeness in error reporting",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:3,Performance,cache,cache,3,"// cache the result",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:76,Performance,cache,cache,76,"// try all outstanding using namespaces in turn to find the attribute (will cache; // locally later; TODO: doing so may cause pathological cases)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:29,Availability,error,error,29,"// not found: prepare a full error report",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:11,Availability,error,error,11,/* default error */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:298,Availability,down,down,298,"// Global data and static data in namespaces is found lazily, thus if the first; // use is setting of the global data by the user, it will not be reflected on; // the C++ side, b/c there is no descriptor yet. This triggers the creation for; // for such data as necessary. The many checks to narrow down the specific case; // are needed to prevent unnecessary lookups and recursion.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:44,Availability,avail,available,44,"// Collect a list of everything (currently) available in the namespace.; // The backend can filter by returning empty strings. Special care is; // taken for functions, which need not be unique (overloading).",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.h:52,Integrability,interface,interface,52,"// In p2.2, PyHeapTypeObject is not yet part of the interface",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.h:98,Modifiability,inherit,inherit,98,"// Short-circuit the type check by checking tp_new which all generated subclasses; // of CPPScope inherit.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Cppyy.h:22,Security,access,access,22,"// direct interpreter access -------------------------------------------------",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Cppyy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Cppyy.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Cppyy.h:12,Security,access,access,12,"// for fast access; // memory management ---------------------------------------------------------",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Cppyy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Cppyy.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Cppyy.h:79,Availability,down,down-cast,79,"// calculate offsets between declared and actual type, up-cast: direction > 0; down-cast: direction < 0",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Cppyy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Cppyy.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:34,Integrability,interface,interface,34,"// Disable warning C4275: non dll-interface class",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:44,Integrability,interface,interface,44,"// Disable warning C4251: needs to have dll-interface to be used by clients",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:3,Safety,Avoid,Avoid,3,"// Avoid that pyconfig.h decides using a #pragma what library python library to use; //#define MS_NO_COREDLL 1",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:3,Performance,Cache,Cached,3,/* Cached hash code of me_key. */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:10,Security,hash,hash,10,/* Cached hash code of me_key. */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:9,Modifiability,refactor,refactor,9,"// TODO: refactor with Converters.cxx",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:7,Safety,risk,risk,7,"// big risk that this lookup will result in a resize, so force it here; // to be able to reset the lookup function; of course, this is nowhere; // near fool-proof, but should cover interactive usage ...",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:34,Deployability,install,install,34,"// Modify the given dictionary to install the lookup function that also; // tries the global C++ namespace before failing. Called on a module's dictionary,; // this allows for lazy lookups. This works fine for p3.2 and earlier, but should; // not be used beyond interactive code for p3.3 and later b/c resizing causes the; // lookup function to revert to the default (lookdict_unicode_nodummy).",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:147,Usability,simpl,simply,147,"// As of py3.11, there is no longer a lookup function pointer in the dict object; // to replace. Since this feature is not widely advertised, it's simply dropped",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:3,Safety,avoid,avoid,3,"// avoid warning about unused parameter",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:21,Security,access,access,21,"// special cases for access to the CPyCppyy API",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:3,Availability,error,error,3,"// error message if not already set",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:9,Integrability,message,message,9,"// error message if not already set",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:9,Modifiability,refactor,refactor,9,"// TODO: refactor code below with converters code",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:121,Deployability,update,update,121,"// if this instance's class has a relation to the requested one, calculate the; // offset, erase if from any caches, and update the pointer and type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:109,Performance,cache,caches,109,"// if this instance's class has a relation to the requested one, calculate the; // offset, erase if from any caches, and update the pointer and type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:3,Availability,down,down-cast,3,"// down-cast",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:85,Performance,perform,perform,85,"// rebinding to a Python-side class, create a fresh instance first to be able to; // perform a lookup of the original dispatch object and if found, return original",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:14,Energy Efficiency,reduce,reducer,14,"// Add a type reducer to map type2 to type2 on function returns.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:52,Performance,load,load,52,"// Initialization of extension module libcppyy.; // load commonly used python strings",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:3,Integrability,inject,inject,3,"// inject meta type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:3,Security,inject,inject,3,"// inject meta type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:3,Integrability,inject,inject,3,"// inject object proxy type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:3,Security,inject,inject,3,"// inject object proxy type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:3,Integrability,inject,inject,3,"// inject exception object proxy type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:3,Security,inject,inject,3,"// inject exception object proxy type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:3,Integrability,inject,inject,3,"// inject method proxy type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:3,Security,inject,inject,3,"// inject method proxy type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:3,Integrability,inject,inject,3,"// inject template proxy type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:3,Security,inject,inject,3,"// inject template proxy type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:3,Integrability,inject,inject,3,"// inject property proxy type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:3,Security,inject,inject,3,"// inject property proxy type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:3,Integrability,inject,inject,3,"// inject custom data types",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:3,Security,inject,inject,3,"// inject custom data types",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:3,Integrability,inject,inject,3,"// inject identifiable nullptr and default",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:3,Security,inject,inject,3,"// inject identifiable nullptr and default",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:20,Integrability,inject,injected,20,"// gbl namespace is injected in cppyy.py; // create the memory regulator",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:20,Security,inject,injected,20,"// gbl namespace is injected in cppyy.py; // create the memory regulator",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx:118,Testability,assert,asserts,118,"// As of Python 3.12, we can't use the PyMethod_GET_FUNCTION and; // PyMethod_GET_SELF macros anymore, as the contain asserts that check if the; // Python type is actually PyMethod_Type. If the Python type is; // CustomInstanceMethod_Type, we need our own macros. Technically they do they; // same, because the actual C++ type of the PyObject is PyMethodObject anyway.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx:163,Usability,undo,undo,163,"// The mapping from a method to a function involves reshuffling of self back; // into the list of arguments. However, the pythonized methods will then have; // to undo that shuffling, which is inefficient. This method is the same as; // the one for the instancemethod object, except for the shuffling.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx:19,Availability,error,error,19,"// will set proper error msg",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx:236,Performance,perform,performance,236,"// The CPPInstance::kNoMemReg by-passes the memory regulator; the assumption here is; // that objects in vectors are simple and thus do not need to maintain object identity; // (or at least not during the loop anyway). This gains 2x in performance.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx:117,Usability,simpl,simple,117,"// The CPPInstance::kNoMemReg by-passes the memory regulator; the assumption here is; // that objects in vectors are simple and thus do not need to maintain object identity; // (or at least not during the loop anyway). This gains 2x in performance.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.h:73,Performance,perform,performance,73,"/** Custom ""builtins,"" detectable by type, for pass by ref and improved; performance.; */",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.h:23,Safety,detect,detectable,23,"/** Custom ""builtins,"" detectable by type, for pass by ref and improved; performance.; */",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.h:29,Performance,perform,performance,29,"//- custom iterator for high performance std::vector iteration ---------------",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx:3,Integrability,inject,inject,3,"// inject implementation for an overridden method",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx:3,Security,inject,inject,3,"// inject implementation for an overridden method",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx:32,Safety,predict,predictable,32,"// build out the signature with predictable formal names",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx:3,Performance,perform,perform,3,"// perform actual method call",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx:24,Modifiability,inherit,inheritance,24,"// Recursively walk the inheritance tree to find the overloads of the named method",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx:22,Availability,error,error,22,"// collect all bases, error checking the hierarchy along the way",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx:43,Modifiability,inherit,inheritance,43,"// TODO: check deep hierarchy for multiple inheritance",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx:23,Modifiability,extend,extended,23,"// once classes can be extended, should consider re-use; for now, since derived; // python classes can differ in what they override, simply use different shims",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx:133,Usability,simpl,simply,133,"// once classes can be extended, should consider re-use; for now, since derived; // python classes can differ in what they override, simply use different shims",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx:3,Safety,safe,safe,3,"// safe, as destructor always returns void",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx:41,Security,access,access,41,"// protected methods and data need their access changed in the C++ trampoline and then; // exposed on the Python side; so, collect their names as we go along",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx:91,Security,expose,exposed,91,"// protected methods and data need their access changed in the C++ trampoline and then; // exposed on the Python side; so, collect their names as we go along",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx:3,Usability,simpl,simple,3,"// simple case: methods from current class (collect constructors along the way)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx:34,Security,expose,expose,34,"// if the method is protected, we expose it through re-declaration and forwarding (using; // does not work here b/c there may be private overloads)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx:41,Modifiability,inherit,inheritance,41,"// support for templated ctors in single inheritance (TODO: also multi possible?)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx:110,Modifiability,inherit,inheriting,110,"// constructors: build up from the argument types of the base class, for use by the Python; // derived class (inheriting with/ ""using"" does not work b/c base class constructors may; // have been deleted),",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx:41,Modifiability,inherit,inheritance,41,"// support for templated ctors in single inheritance (TODO: also multi possible?)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx:14,Security,access,accessor,14,"// provide an accessor to re-initialize after round-tripping from C++ (internal)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx:153,Performance,cache,cache,153,"// at this point, the dispatcher only lives in C++, as opposed to regular classes; // that are part of the hierarchy in Python, so create it, which will cache it for; // later use by e.g. the MemoryRegulator",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx:199,Modifiability,inherit,inheritance,199,"// finally, to expose protected members, copy them over from the C++ dispatcher base; // to the Python dictionary (the C++ dispatcher's Python proxy is not a base of the; // Python class to keep the inheritance tree intact)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx:15,Security,expose,expose,15,"// finally, to expose protected members, copy them over from the C++ dispatcher base; // to the Python dictionary (the C++ dispatcher's Python proxy is not a base of the; // Python class to keep the inheritance tree intact)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/DispatchPtr.cxx:261,Security,access,access,261,"// if we're holding a hard reference, or holding weak reference while being part; // of a dispatcher intermediate, then this delete is from the C++ side, and Python; // is ""notified"" by nulling out the reference and an exception will be raised on; // continued access",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/DispatchPtr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/DispatchPtr.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/DispatchPtr.cxx:51,Availability,alive,alive,51,"// C++ maintains the hardref, keeping the PyObject alive w/o outstanding ref",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/DispatchPtr.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/DispatchPtr.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:17,Integrability,wrap,wrapper,17,/* can happen if wrapper compilation fails */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:16,Energy Efficiency,allocate,allocates,16,"// Cppyy::CallO allocates and constructs a string, so it must be properly destroyed",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:32,Availability,error,error,32,"// callee may have set a python error itself",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:3,Usability,simpl,simple,3,"// simple array types",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:20,Availability,avail,available,20,"// executor factory available, use it to create executor",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:3,Performance,load,load,3,"// load all executor factories in the global map 'gExecFactories'",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx:279,Integrability,interface,interface,279,"//= memoryview-like object ===================================================; // This is largely setup just like Python builtin memory view objects, with; // the exceptions that there is no need of a ""base"" object (it views on C++; // memory, not a Python object with a buffer interface), it uses the CPyCppyy; // converters, and typed results and assignments are supported. Code reused; // under PSF License Version 2.; //- helpers ------------------------------------------------------------------",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx:169,Testability,log,logical,169,"//- Copy memoryview buffers =================================================; // The functions in this section take a source and a destination buffer; // with the same logical structure: format, itemsize, ndim and shape; // are identical, with ndim > 0.; // Check for the presence of suboffsets in the first dimension.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx:37,Testability,test,tests,37,"// Assumptions: ndim >= 1. The macro tests for a corner case that should; // perhaps be explicitly forbidden in the PEP.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx:18,Testability,log,logical,18,"// Check that the logical structure of the destination and source buffers; // is identical.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx:3,Availability,error,error,3,"// error already set by lookup_dimension",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx:17,Availability,error,error,17,"// if there's an error, it was already set by lookup_dimension",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx:40,Usability,simpl,simpler,40,"// TODO: handle slicing. This should be simpler than the memoryview; // case as there is no Python object holding the buffer.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx:3,Usability,Simpl,Simplified,3,"// Simplified from memoryobject, as we're always dealing with C arrays.; // start with full copy",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx:13,Integrability,protocol,protocol,13,"//= iterator protocol =======================================================",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx:115,Integrability,depend,depending,115,"// Construct a numpy array from the lowlevelview (w/o copy if possible); this; // uses the Python methods to avoid depending on numpy directly; // Expect as most a dtype from the arguments;",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx:109,Safety,avoid,avoid,109,"// Construct a numpy array from the lowlevelview (w/o copy if possible); this; // uses the Python methods to avoid depending on numpy directly; // Expect as most a dtype from the arguments;",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx:3,Usability,simpl,simple,3,"// simple 1-dim array of the declared type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/LowLevelViews.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx:25,Availability,mask,masking,25,"//= pseudo-None type for masking out objects on the python side ===============",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx:53,Performance,cache,cache,53,"// setup NoneType for referencing and create weakref cache",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.h:59,Availability,failure,failure,59,"// new reference to python object matching cppobj, or 0 on failure",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:9,Security,access,access,9,"// allow access at the instance level",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:9,Security,access,access,9,"// allow access at the class level (always add after setting instance level)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:3,Performance,load,load,3,"// load all public methods and data members",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:49,Integrability,wrap,wrappers,49,"// do not expose non-public methods as the Cling wrappers as those won't compile",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:10,Security,expose,expose,10,"// do not expose non-public methods as the Cling wrappers as those won't compile",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:101,Performance,cache,cache,101,"// template proxy was already created in sync_templates call above, so; // add only here, not to the cache of collected methods",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:124,Usability,simpl,simply,124,"// the number of arguments isn't known until instantiation and as far as C++ is concerned, all; // same-named operators are simply overloads; so will pre-emptively add both names if with and; // without arguments differ, letting the normal overload mechanism resolve on call",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:33,Modifiability,variab,variable,33,"// two options: this is a static variable, or it is the enum value, the latter; // already exists, so check for it and move on if set",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:31,Availability,avail,available,31,"// means this base with not be available Python-side",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:3,Energy Efficiency,allocate,allocate,3,"// allocate a tuple for the base classes, special case for first base",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:3,Performance,cache,cache,3,"// cache the result",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:3,Performance,cache,cache,3,"// cache the result for future lookups and return",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:3,Availability,error,error,3,"// error has been set in CreateScopeProxy",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:22,Security,expose,expose,22,"// simply restore and expose as the actual smart pointer class",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:3,Usability,simpl,simply,3,"// simply restore and expose as the actual smart pointer class",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:26,Integrability,wrap,wrap,26,"// successful completion; wrap exception options to make them raiseable, normal return otherwise",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:3,Availability,down,downcast,3,"// downcast to real class for object returns, unless pinned; // TODO: should the memory regulator for klass be searched first, so that if; // successful, no down-casting is attempted?; // TODO: optimize for final classes",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:157,Availability,down,down-casting,157,"// downcast to real class for object returns, unless pinned; // TODO: should the memory regulator for klass be searched first, so that if; // successful, no down-casting is attempted?; // TODO: optimize for final classes",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:194,Performance,optimiz,optimize,194,"// downcast to real class for object returns, unless pinned; // TODO: should the memory regulator for klass be searched first, so that if; // successful, no down-casting is attempted?; // TODO: optimize for final classes",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:3,Availability,down,down-cast,3,/* down-cast */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:10,Availability,error,errors,10,/* report errors */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/PyException.cxx:16,Availability,error,error,16,"// clear Python error, to allow full error handling C++ side",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/PyException.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/PyException.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/PyException.cxx:37,Availability,error,error,37,"// clear Python error, to allow full error handling C++ side",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/PyException.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/PyException.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/PyException.cxx:3,Usability,clear,clear,3,"// clear Python error, to allow full error handling C++ side",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/PyException.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/PyException.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/PyStrings.cxx:9,Performance,cache,cache,9,"// Build cache of commonly used python strings (the cache is python intern, so; // all strings are shared python-wide, not just in cppyy).",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/PyStrings.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/PyStrings.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/PyStrings.cxx:52,Performance,cache,cache,52,"// Build cache of commonly used python strings (the cache is python intern, so; // all strings are shared python-wide, not just in cppyy).",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/PyStrings.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/PyStrings.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/PyStrings.cxx:14,Performance,cache,cached,14,"// Remove all cached python strings.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/PyStrings.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/PyStrings.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/PyStrings.h:27,Performance,perform,performance,27,"// python strings kept for performance reasons",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/PyStrings.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/PyStrings.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:34,Availability,avail,available,34,"// Follow operator*() if present (available in python as __deref__), so that; // smart pointers behave as expected.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:35,Availability,avail,available,35,"// Follow operator->() if present (available in python as __follow__), so that; // smart pointers behave as expected.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:251,Integrability,interface,interface,251,"// do not accept string to fill std::vector<char>; // TODO: this only tests for new-style buffers, which is too strict, but a; // generic check for Py_TYPE(fi)->tp_as_buffer is too loose (note that the; // main use case is numpy, which offers the new interface)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:70,Testability,test,tests,70,"// do not accept string to fill std::vector<char>; // TODO: this only tests for new-style buffers, which is too strict, but a; // generic check for Py_TYPE(fi)->tp_as_buffer is too loose (note that the; // main use case is numpy, which offers the new interface)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:3,Availability,error,error,3,"// error already set",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:165,Availability,error,error-prone,165,"// Specialized vector constructor to allow construction from containers; allowing; // such construction from initializer_list instead would possible, but can be; // error-prone. This use case is common enough for std::vector to implement it; // directly, except for arrays (which can be passed wholesale) and strings (which; // won't convert properly as they'll be seen as buffers)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:39,Usability,simpl,simply,39,"// The given argument wasn't iterable: simply forward to regular constructor",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:146,Availability,down,downcasts,146,"// look for a special case of pointer to a class type (which is a builtin, but it; // is more useful to treat it polymorphically by allowing auto-downcasts)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:113,Modifiability,polymorphi,polymorphically,113,"// look for a special case of pointer to a class type (which is a builtin, but it; // is more useful to treat it polymorphically by allowing auto-downcasts)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:67,Integrability,depend,depends,67,"// std::vector<bool> is a special-case in C++, and its return type depends on; // the compiler: treat it special here as well",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:67,Integrability,depend,depends,67,"// std::vector<bool> is a special-case in C++, and its return type depends on; // the compiler: treat it special here as well",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:39,Usability,simpl,simply,39,"// The given argument wasn't iterable: simply forward to regular constructor",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:39,Usability,simpl,simply,39,"// The given argument wasn't iterable: simply forward to regular constructor",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:60,Availability,avail,available,60,"// builtin pointer iteration: can only succeed if a size is available",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:23,Performance,cache,cache,23,"// use the data member cache to store extra state on the iterator object,; // without it being visible on the Python side",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:50,Availability,alive,alive,50,"// make sure the iterated over collection remains alive for the duration",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:4,Safety,safe,safe,4,"//- safe indexing for STL-like vector w/o iterator dictionaries ---------------; /* replaced by indexiterobject iteration, but may still have some future use ...; PyObject* CheckedGetItem(PyObject* self, PyObject* obj); {; // Implement a generic python __getitem__ for STL-like classes that are missing the; // reflection info for their iterators. This is then used for iteration by means of; // consecutive indices, it such index is of integer type.; Py_ssize_t size = PySequence_Size(self);; Py_ssize_t idx = PyInt_AsSsize_t(obj);; if ((size == (Py_ssize_t)-1 || idx == (Py_ssize_t)-1) && PyErr_Occurred()) {; // argument conversion problem: let method itself resolve anew and report; PyErr_Clear();; return PyObject_CallMethodOneArg(self, PyStrings::gGetNoCheck, obj);; }. bool inbounds = false;; if (idx < 0) idx += size;; if (0 <= idx && 0 <= size && idx < size); inbounds = true;. if (inbounds); return PyObject_CallMethodOneArg(self, PyStrings::gGetNoCheck, obj);; else; PyErr_SetString( PyExc_IndexError, ""index out of range"" );. return nullptr;; }*/; //- pair as sequence to allow tuple unpacking --------------------------------",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:4,Usability,simpl,simplistic,4,"//- simplistic len() functions -----------------------------------------------",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:132,Availability,failure,failure,132,"// both str and std::string have method ""find"" and ""rfin""; try the C++ version first; // and fall back on the Python one in case of failure",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:23,Security,hash,hash,23,"// std::string objects hash to the same values as Python strings to allow; // matches in dictionaries etc.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:19,Integrability,protocol,protocol,19,"// Python iterator protocol __next__ for STL forward iterators.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:83,Deployability,update,updated,83,"// prefer preinc, but allow post-inc; in both cases, it is ""self"" that has; // the updated state to dereference",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:20,Availability,error,error,20,"// TODO: detail the error handling",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:217,Usability,simpl,simpler,217,"//- method name based pythonization ------------------------------------------; // for smart pointer style classes that are otherwise not known as such; would; // prefer operator-> as that returns a pointer (which is simpler since it never; // has to deal with ref-assignment), but operator* plays better with STL iters; // and algorithms",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:3,Deployability,install,install,3,"// install iterator protocol a la STL",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:20,Integrability,protocol,protocol,20,"// install iterator protocol a la STL",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:145,Integrability,protocol,protocol,145,"// still okay if this is some pointer type of builtin persuasion (general class; // won't work: the return type needs to understand the iterator protocol)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:323,Integrability,protocol,protocol,323,"// Python will iterate over __getitem__ using integers, but C++ operator[] will never raise; // a StopIteration. A checked getitem (raising IndexError if beyond size()) works in some; // cases but would mess up if operator[] is meant to implement an associative container. So,; // this has to be implemented as an iterator protocol.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:129,Availability,avail,available,129,"// operator==/!= are used in op_richcompare of CPPInstance, which subsequently allows; // comparisons to None; if no operator is available, a hook is installed for lazy; // lookups in the global and/or class namespace",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:150,Deployability,install,installed,150,"// operator==/!= are used in op_richcompare of CPPInstance, which subsequently allows; // comparisons to None; if no operator is available, a hook is installed for lazy; // lookups in the global and/or class namespace",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:29,Integrability,protocol,protocol,29,"// vector-optimized iterator protocol",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:10,Performance,optimiz,optimized,10,"// vector-optimized iterator protocol",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:3,Performance,optimiz,optimized,3,"// optimized __iadd__",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:15,Security,access,access,15,"// direct user access; there are two calls here:; // - explicit pythonization: won't fall through to the base classes and is preferred if present; // - normal pythonization: only called if explicit isn't present, falls through to base classes",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:20,Performance,cache,cache,20,"// Instantiate (and cache) templated methods, return method if any",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:66,Performance,cache,cached,66,"// overload stops here; // A successful instantiation needs to be cached to pre-empt future instantiations. There; // are two names involved, the original asked (which may be partial) and the received.; //; // Caching scheme: if the match is exact, simply add the overload to the pre-existing; // one, or create a new overload for later lookups. If the match is not exact, do the; // same, but also create an alias. Only add exact matches to the set of known template; // instantiations, to prevent piling on from different partial instantiations.; //; // TODO: this caches the lookup method before the call, meaning that failing overloads; // can add already existing overloads to the set of methods.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:567,Performance,cache,caches,567,"// overload stops here; // A successful instantiation needs to be cached to pre-empt future instantiations. There; // are two names involved, the original asked (which may be partial) and the received.; //; // Caching scheme: if the match is exact, simply add the overload to the pre-existing; // one, or create a new overload for later lookups. If the match is not exact, do the; // same, but also create an alias. Only add exact matches to the set of known template; // instantiations, to prevent piling on from different partial instantiations.; //; // TODO: this caches the lookup method before the call, meaning that failing overloads; // can add already existing overloads to the set of methods.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:249,Usability,simpl,simply,249,"// overload stops here; // A successful instantiation needs to be cached to pre-empt future instantiations. There; // are two names involved, the original asked (which may be partial) and the received.; //; // Caching scheme: if the match is exact, simply add the overload to the pre-existing; // one, or create a new overload for later lookups. If the match is not exact, do the; // same, but also create an alias. Only add exact matches to the set of known template; // instantiations, to prevent piling on from different partial instantiations.; //; // TODO: this caches the lookup method before the call, meaning that failing overloads; // can add already existing overloads to the set of methods.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:72,Availability,failure,failure,72,"// lookup on existing name in case this was an overload, not a caching, failure",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:20,Usability,simpl,simply,20,"// Case 1/2: method simply did not exist before",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:21,Usability,clear,clear,21,"// Garbage collector clear of held python member objects.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:28,Availability,error,errors,28,"// container for collecting errors",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:7,Performance,cache,cached,7,"// not cached or failed call; try instantiation",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:11,Availability,error,error,11,/* default error */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:3,Availability,error,error,3,"// error reporting is fraud, given the numerous steps taken, but more details seems better",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:11,Availability,error,error,11,/* default error */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:96,Performance,cache,cache,96,"// Explicit template member lookup/instantiation; works by re-bounding. This method can; // not cache overloads as instantiations need not be unique for the argument types due; // to template specializations.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TPyArg.cxx:93,Integrability,wrap,wrapper,93,"//______________________________________________________________________________; // Generic wrapper for arguments; // =============================; //; // Transport class for bringing C++ values and objects from Cling to Python. It; // provides, from the selected constructor, the proper conversion to a PyObject.; // In principle, there should be no need to use this class directly: it relies; // on implicit conversions.; //- constructor dispatcher ---------------------------------------------------",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TPyArg.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TPyArg.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TPyArg.cxx:34,Availability,down,down,34,"// calls actual dtor if ref-count down to 0",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TPyArg.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TPyArg.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx:42,Availability,avail,available,42,"// Class generator to make python classes available to Cling; // called if all other class generators failed, attempt to build from python class",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx:9,Modifiability,refactor,refactor,9,"// TODO: refactor the code below with the class method code",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx:24,Modifiability,variab,variables,24,"// figure out number of variables required",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx:11,Modifiability,variab,variables,11,"// add the variables",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx:47,Performance,load,load,47,"// create class in namespace, if it exists (no load, silent)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx:26,Availability,avail,available,26,"// the class is no longer available?!",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx:64,Modifiability,variab,variables,64,"// skip all other python special funcs; // figure out number of variables required",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx:26,Modifiability,variab,variables,26,"// then add the remaining variables",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TPyClassGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TupleOfInstances.cxx:40,Performance,cache,cached,40,"// debatable, but since the iterator is cached, this",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TupleOfInstances.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TupleOfInstances.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TupleOfInstances.cxx:43,Security,access,access,43,"// Subscripting the iterator allows direct access through indexing on arrays; // that do not have a defined length. This way, the return from accessing such; // an array as a data member can both be used in a loop and directly.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TupleOfInstances.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TupleOfInstances.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TupleOfInstances.cxx:142,Security,access,accessing,142,"// Subscripting the iterator allows direct access through indexing on arrays; // that do not have a defined length. This way, the return from accessing such; // an array as a data member can both be used in a loop and directly.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TupleOfInstances.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TupleOfInstances.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TupleOfInstances.cxx:88,Deployability,update,updates,88,"// Note: objects are bound as pointers, yet since the pointer value stays in; // place, updates propagate just as if they were bound by-reference",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TupleOfInstances.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TupleOfInstances.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TypeManip.cxx:101,Modifiability,variab,variable,101,"// make sure not to erase 'const' as part of the name: if it is; // connected, before or after, to a variable name, then keep it",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TypeManip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TypeManip.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TypeManip.cxx:9,Availability,down,down,9,"// Break down the compound of a fully qualified type name.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TypeManip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TypeManip.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TypeManip.cxx:34,Modifiability,variab,variable,34,"// Change characters illegal in a variable name into '_' to form a legal name.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TypeManip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TypeManip.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TypeManip.cxx:13,Modifiability,extend,extend,13,"// found the extend of the scope ... done",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TypeManip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TypeManip.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TypeManip.cxx:13,Modifiability,extend,extend,13,"// found the extend of the scope ... done",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/TypeManip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TypeManip.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:18,Integrability,depend,depends,18,"// __s/getitem__, depends on return type",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:12,Integrability,depend,depends,12,"// __add__, depends on # of args (see __pos__)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:87,Availability,error,errors,87,"// last ditch attempt, works for things like int values; since this is a; // source of errors otherwise, it is limited to specific types and not; // generally used (str(obj) can print anything ...)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:48,Performance,perform,performance,48,"// some common numeric types (separated out for performance: checking for; // __cpp_name__ and/or __name__ is rather expensive)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:52,Integrability,wrap,wrappers,52,"// Generate function setup to be used in callbacks (wrappers and overrides).",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:49,Availability,error,error,49,"// Generate code for return value conversion and error handling.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:75,Availability,down,down,75,"// If the return type is a CPPInstance, owned by Python, and the ref-count down; // to 1, the return will hold a dangling pointer, so set it to nullptr instead.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:10,Availability,error,error,10,"// assume error set when converter failed; // TODO: On Windows, throwing a C++ exception here makes the code hang; leave; // the error be which allows at least one layer of propagation",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:129,Availability,error,error,129,"// assume error set when converter failed; // TODO: On Windows, throwing a C++ exception here makes the code hang; leave; // the error be which allows at least one layer of propagation",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:3,Performance,cache,cache,3,"// cache the new maker (TODO: does it make sense to use weakrefs?)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:20,Integrability,interface,interface,20,"// new-style buffer interface",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:56,Integrability,interface,interface,56,"// attempt to retrieve pointer through old-style buffer interface",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:30,Availability,error,error,30,"// not compatible; // clarify error message",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:36,Integrability,message,message,36,"// not compatible; // clarify error message",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:58,Availability,down,downstream,58,"// check first if none, to prevent spurious deserializing downstream",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:20,Testability,stub,stubbed,20,"// no unary, but is stubbed",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:197,Availability,error,errors,197,"// Re-acquire the GIL before calling PyErr_Occurred() in case it has been; // released; note that the p2.2 code assumes that there are no callbacks in; // C++ to python (or at least none returning errors).",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:78,Deployability,release,released,78,"// Re-acquire the GIL before calling PyErr_Occurred() in case it has been; // released; note that the p2.2 code assumes that there are no callbacks in; // C++ to python (or at least none returning errors).",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:28,Availability,error,error,28,"// Fetch the current python error, if any, and store it for future use.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:55,Availability,error,error,55,"// Use the collected exceptions to build up a detailed error log.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:61,Testability,log,log,61,"// Use the collected exceptions to build up a detailed error log.",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:20,Availability,error,error,20,"// report only this error; the idea here is that all other errors come from; // the bindings (e.g. argument conversion errors), while the exception from; // C++ means that it originated from an otherwise successful call; // bind the original C++ object, rather than constructing from topmsg, as it; // is expected to have informative state",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:59,Availability,error,errors,59,"// report only this error; the idea here is that all other errors come from; // the bindings (e.g. argument conversion errors), while the exception from; // C++ means that it originated from an otherwise successful call; // bind the original C++ object, rather than constructing from topmsg, as it; // is expected to have informative state",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:119,Availability,error,errors,119,"// report only this error; the idea here is that all other errors come from; // the bindings (e.g. argument conversion errors), while the exception from; // C++ means that it originated from an otherwise successful call; // bind the original C++ object, rather than constructing from topmsg, as it; // is expected to have informative state",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx:18,Availability,error,errors,18,"// cleanup stored errors and done with topmsg (whether used or not)",MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.h:3,Usability,clear,clears,3,/* clears */,MatchSource.CODE_COMMENT,bindings/pyroot/cppyy/CPyCppyy/src/Utility.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Utility.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py:36,Modifiability,Config,Configures,36,"""""""; Application class for PyROOT.; Configures the interactive usage of ROOT from Python.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_application.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py:2,Deployability,Integrat,Integrate,2,"# Integrate IPython >= 5 with ROOT's event loop; # Check for new GUI events until there is some user input to process",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_application.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py:2,Integrability,Integrat,Integrate,2,"# Integrate IPython >= 5 with ROOT's event loop; # Check for new GUI events until there is some user input to process",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_application.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py:207,Deployability,update,update,207,"# sys.displayhook is called on the result of evaluating an expression entered; # in an interactive Python session.; # Therefore, this function will call EndOfLineAction after each interactive; # command (to update display etc.)",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_application.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py:3,Modifiability,Config,Configure,3,"""""""Configure ROOT graphics to be used interactively""""""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_application.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py:15,Availability,down,down,15,"# Used to shut down the thread safely at teardown time",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_application.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py:31,Safety,safe,safely,31,"# Used to shut down the thread safely at teardown time",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_application.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:13,Modifiability,config,configuring,13,"""""""Class for configuring PyROOT""""""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:66,Integrability,wrap,wrapper,66,"""""""Internal class to manage lookups of gROOT in the facade.; This wrapper calls _finalSetup on the facade when it; receives a lookup, unless the lookup is for SetBatch.; This allows to evaluate the command line parameters; before checking if batch mode is on in _finalSetup; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:85,Integrability,inject,injected,85,"""""""; Create the ROOT.RDF.Experimental.Distributed python module. This module will be injected into the ROOT.RDF namespace. Arguments:; parent: The ROOT.RDF namespace. Needed to define __package__. Returns:; types.ModuleType: The ROOT.RDF.Experimental.Distributed submodule.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:85,Security,inject,injected,85,"""""""; Create the ROOT.RDF.Experimental.Distributed python module. This module will be injected into the ROOT.RDF namespace. Arguments:; parent: The ROOT.RDF namespace. Needed to define __package__. Returns:; types.ModuleType: The ROOT.RDF.Experimental.Distributed submodule.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:2,Integrability,Inject,Inject,2,"# Inject gROOT global",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:2,Security,Inject,Inject,2,"# Inject gROOT global",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:2,Security,Expose,Expose,2,"# Expose some functionality from CPyCppyy extension module",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:13,Deployability,configurat,configuration,13,"# Initialize configuration",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:13,Modifiability,config,configuration,13,"# Initialize configuration",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:263,Performance,cache,caches,263,"# Try:; # - in the global namespace; # - in the ROOT namespace; # - in gROOT (ROOT lists such as list of files,; # memory mapped files, functions, geometries ecc.); # The first two attempts allow to lookup; # e.g. ROOT.ROOT.Math as ROOT.Math; # Note that hasattr caches the lookup for getattr",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:62,Integrability,wrap,wrapper,62,"# Prevent this method from being re-entered through the gROOT wrapper",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:13,Testability,log,logon,13,"# Run custom logon file (must be after creation of ROOT globals)",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:33,Testability,log,logon,33,"# -n disables the reading of the logon file, just like with root",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:77,Performance,load,load,77,"# If the .py version of rootlogon exists, the .C is ignored (the user can; # load the .C from the .py, if so desired).; # System logon, user logon, and local logon (skip Rint.Logon)",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:129,Testability,log,logon,129,"# If the .py version of rootlogon exists, the .C is ignored (the user can; # load the .C from the .py, if so desired).; # System logon, user logon, and local logon (skip Rint.Logon)",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:141,Testability,log,logon,141,"# If the .py version of rootlogon exists, the .C is ignored (the user can; # load the .C from the .py, if so desired).; # System logon, user logon, and local logon (skip Rint.Logon)",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:158,Testability,log,logon,158,"# If the .py version of rootlogon exists, the .C is ignored (the user can; # load the .C from the .py, if so desired).; # System logon, user logon, and local logon (skip Rint.Logon)",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:175,Testability,Log,Logon,175,"# If the .py version of rootlogon exists, the .C is ignored (the user can; # load the .C from the .py, if so desired).; # System logon, user logon, and local logon (skip Rint.Logon)",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:644,Performance,load,loads,644,"""""""; Reduction function of the ROOT facade to customize the (pickle); serialization step. Defines the ingredients needed for a correct serialization of the; facade, that is a function that imports a Python module and the name of; that module, which corresponds to this facade's __name__ attribute. This; method helps serialization tools like `cloudpickle`, especially used in; distributed environments, that always need to include information about; the ROOT module in the serialization step. For example, the following; snippet would not work without this method::. import ROOT; import cloudpickle. def foo():; return ROOT.TH1F(). cloudpickle.loads(cloudpickle.dumps(foo)). In particular, it would raise::. TypeError: cannot pickle 'ROOTFacade' object; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:2,Integrability,Inject,Inject,2,"# Inject version as __version__ property in ROOT module",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:2,Security,Inject,Inject,2,"# Inject version as __version__ property in ROOT module",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:64,Availability,avail,available,64,"# Inject Experimental.Distributed package into namespace RDF if available",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:2,Integrability,Inject,Inject,2,"# Inject Experimental.Distributed package into namespace RDF if available",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:2,Security,Inject,Inject,2,"# Inject Experimental.Distributed package into namespace RDF if available",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_facade.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:192,Integrability,wrap,wrapper,192,"'''; Decorator for making Python callables accessible in C++ by just-in-time compilation; with numba and cling. The decorator takes the given Python callable and just-in-time compiles (jits); wrapper functions with the given C++ types for input and return types. Eventually,; the Python callable is accessible in the Numba namespace in C++. The implementation first jits with numba the Python callable. We support fundamental types and; ROOT::VecOps::RVecs thereof. Note that you can get the jitted Python callable by the attribute; numba_func. The C++ types are converted to the respective numba types and RVecs are accessible; in Python by numpy arrays. After jitting the actual Python callable, we jit another Python wrapper,; which converts the Python signature to a C-friendly signature. The wrapper code is accessible by; the attribute __py_wrapper__. Next, the Python wrapper is given to cling to jit a C++ wrapper function,; making the original Python callable accessible in C++. The wrapper code in C++ is accessible by; the attribute __cpp_wrapper__. Note that the callable is fully compiled without side-effects. The numba jitting uses the nopython; option which does not allow interaction with the Python interpreter. This means that you can use; the resulting function also safely in multi-threaded environments.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:720,Integrability,wrap,wrapper,720,"'''; Decorator for making Python callables accessible in C++ by just-in-time compilation; with numba and cling. The decorator takes the given Python callable and just-in-time compiles (jits); wrapper functions with the given C++ types for input and return types. Eventually,; the Python callable is accessible in the Numba namespace in C++. The implementation first jits with numba the Python callable. We support fundamental types and; ROOT::VecOps::RVecs thereof. Note that you can get the jitted Python callable by the attribute; numba_func. The C++ types are converted to the respective numba types and RVecs are accessible; in Python by numpy arrays. After jitting the actual Python callable, we jit another Python wrapper,; which converts the Python signature to a C-friendly signature. The wrapper code is accessible by; the attribute __py_wrapper__. Next, the Python wrapper is given to cling to jit a C++ wrapper function,; making the original Python callable accessible in C++. The wrapper code in C++ is accessible by; the attribute __cpp_wrapper__. Note that the callable is fully compiled without side-effects. The numba jitting uses the nopython; option which does not allow interaction with the Python interpreter. This means that you can use; the resulting function also safely in multi-threaded environments.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:797,Integrability,wrap,wrapper,797,"'''; Decorator for making Python callables accessible in C++ by just-in-time compilation; with numba and cling. The decorator takes the given Python callable and just-in-time compiles (jits); wrapper functions with the given C++ types for input and return types. Eventually,; the Python callable is accessible in the Numba namespace in C++. The implementation first jits with numba the Python callable. We support fundamental types and; ROOT::VecOps::RVecs thereof. Note that you can get the jitted Python callable by the attribute; numba_func. The C++ types are converted to the respective numba types and RVecs are accessible; in Python by numpy arrays. After jitting the actual Python callable, we jit another Python wrapper,; which converts the Python signature to a C-friendly signature. The wrapper code is accessible by; the attribute __py_wrapper__. Next, the Python wrapper is given to cling to jit a C++ wrapper function,; making the original Python callable accessible in C++. The wrapper code in C++ is accessible by; the attribute __cpp_wrapper__. Note that the callable is fully compiled without side-effects. The numba jitting uses the nopython; option which does not allow interaction with the Python interpreter. This means that you can use; the resulting function also safely in multi-threaded environments.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:875,Integrability,wrap,wrapper,875,"'''; Decorator for making Python callables accessible in C++ by just-in-time compilation; with numba and cling. The decorator takes the given Python callable and just-in-time compiles (jits); wrapper functions with the given C++ types for input and return types. Eventually,; the Python callable is accessible in the Numba namespace in C++. The implementation first jits with numba the Python callable. We support fundamental types and; ROOT::VecOps::RVecs thereof. Note that you can get the jitted Python callable by the attribute; numba_func. The C++ types are converted to the respective numba types and RVecs are accessible; in Python by numpy arrays. After jitting the actual Python callable, we jit another Python wrapper,; which converts the Python signature to a C-friendly signature. The wrapper code is accessible by; the attribute __py_wrapper__. Next, the Python wrapper is given to cling to jit a C++ wrapper function,; making the original Python callable accessible in C++. The wrapper code in C++ is accessible by; the attribute __cpp_wrapper__. Note that the callable is fully compiled without side-effects. The numba jitting uses the nopython; option which does not allow interaction with the Python interpreter. This means that you can use; the resulting function also safely in multi-threaded environments.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:914,Integrability,wrap,wrapper,914,"'''; Decorator for making Python callables accessible in C++ by just-in-time compilation; with numba and cling. The decorator takes the given Python callable and just-in-time compiles (jits); wrapper functions with the given C++ types for input and return types. Eventually,; the Python callable is accessible in the Numba namespace in C++. The implementation first jits with numba the Python callable. We support fundamental types and; ROOT::VecOps::RVecs thereof. Note that you can get the jitted Python callable by the attribute; numba_func. The C++ types are converted to the respective numba types and RVecs are accessible; in Python by numpy arrays. After jitting the actual Python callable, we jit another Python wrapper,; which converts the Python signature to a C-friendly signature. The wrapper code is accessible by; the attribute __py_wrapper__. Next, the Python wrapper is given to cling to jit a C++ wrapper function,; making the original Python callable accessible in C++. The wrapper code in C++ is accessible by; the attribute __cpp_wrapper__. Note that the callable is fully compiled without side-effects. The numba jitting uses the nopython; option which does not allow interaction with the Python interpreter. This means that you can use; the resulting function also safely in multi-threaded environments.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:992,Integrability,wrap,wrapper,992,"'''; Decorator for making Python callables accessible in C++ by just-in-time compilation; with numba and cling. The decorator takes the given Python callable and just-in-time compiles (jits); wrapper functions with the given C++ types for input and return types. Eventually,; the Python callable is accessible in the Numba namespace in C++. The implementation first jits with numba the Python callable. We support fundamental types and; ROOT::VecOps::RVecs thereof. Note that you can get the jitted Python callable by the attribute; numba_func. The C++ types are converted to the respective numba types and RVecs are accessible; in Python by numpy arrays. After jitting the actual Python callable, we jit another Python wrapper,; which converts the Python signature to a C-friendly signature. The wrapper code is accessible by; the attribute __py_wrapper__. Next, the Python wrapper is given to cling to jit a C++ wrapper function,; making the original Python callable accessible in C++. The wrapper code in C++ is accessible by; the attribute __cpp_wrapper__. Note that the callable is fully compiled without side-effects. The numba jitting uses the nopython; option which does not allow interaction with the Python interpreter. This means that you can use; the resulting function also safely in multi-threaded environments.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:1297,Performance,multi-thread,multi-threaded,1297,"'''; Decorator for making Python callables accessible in C++ by just-in-time compilation; with numba and cling. The decorator takes the given Python callable and just-in-time compiles (jits); wrapper functions with the given C++ types for input and return types. Eventually,; the Python callable is accessible in the Numba namespace in C++. The implementation first jits with numba the Python callable. We support fundamental types and; ROOT::VecOps::RVecs thereof. Note that you can get the jitted Python callable by the attribute; numba_func. The C++ types are converted to the respective numba types and RVecs are accessible; in Python by numpy arrays. After jitting the actual Python callable, we jit another Python wrapper,; which converts the Python signature to a C-friendly signature. The wrapper code is accessible by; the attribute __py_wrapper__. Next, the Python wrapper is given to cling to jit a C++ wrapper function,; making the original Python callable accessible in C++. The wrapper code in C++ is accessible by; the attribute __cpp_wrapper__. Note that the callable is fully compiled without side-effects. The numba jitting uses the nopython; option which does not allow interaction with the Python interpreter. This means that you can use; the resulting function also safely in multi-threaded environments.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:1287,Safety,safe,safely,1287,"'''; Decorator for making Python callables accessible in C++ by just-in-time compilation; with numba and cling. The decorator takes the given Python callable and just-in-time compiles (jits); wrapper functions with the given C++ types for input and return types. Eventually,; the Python callable is accessible in the Numba namespace in C++. The implementation first jits with numba the Python callable. We support fundamental types and; ROOT::VecOps::RVecs thereof. Note that you can get the jitted Python callable by the attribute; numba_func. The C++ types are converted to the respective numba types and RVecs are accessible; in Python by numpy arrays. After jitting the actual Python callable, we jit another Python wrapper,; which converts the Python signature to a C-friendly signature. The wrapper code is accessible by; the attribute __py_wrapper__. Next, the Python wrapper is given to cling to jit a C++ wrapper function,; making the original Python callable accessible in C++. The wrapper code in C++ is accessible by; the attribute __cpp_wrapper__. Note that the callable is fully compiled without side-effects. The numba jitting uses the nopython; option which does not allow interaction with the Python interpreter. This means that you can use; the resulting function also safely in multi-threaded environments.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:43,Security,access,accessible,43,"'''; Decorator for making Python callables accessible in C++ by just-in-time compilation; with numba and cling. The decorator takes the given Python callable and just-in-time compiles (jits); wrapper functions with the given C++ types for input and return types. Eventually,; the Python callable is accessible in the Numba namespace in C++. The implementation first jits with numba the Python callable. We support fundamental types and; ROOT::VecOps::RVecs thereof. Note that you can get the jitted Python callable by the attribute; numba_func. The C++ types are converted to the respective numba types and RVecs are accessible; in Python by numpy arrays. After jitting the actual Python callable, we jit another Python wrapper,; which converts the Python signature to a C-friendly signature. The wrapper code is accessible by; the attribute __py_wrapper__. Next, the Python wrapper is given to cling to jit a C++ wrapper function,; making the original Python callable accessible in C++. The wrapper code in C++ is accessible by; the attribute __cpp_wrapper__. Note that the callable is fully compiled without side-effects. The numba jitting uses the nopython; option which does not allow interaction with the Python interpreter. This means that you can use; the resulting function also safely in multi-threaded environments.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:299,Security,access,accessible,299,"'''; Decorator for making Python callables accessible in C++ by just-in-time compilation; with numba and cling. The decorator takes the given Python callable and just-in-time compiles (jits); wrapper functions with the given C++ types for input and return types. Eventually,; the Python callable is accessible in the Numba namespace in C++. The implementation first jits with numba the Python callable. We support fundamental types and; ROOT::VecOps::RVecs thereof. Note that you can get the jitted Python callable by the attribute; numba_func. The C++ types are converted to the respective numba types and RVecs are accessible; in Python by numpy arrays. After jitting the actual Python callable, we jit another Python wrapper,; which converts the Python signature to a C-friendly signature. The wrapper code is accessible by; the attribute __py_wrapper__. Next, the Python wrapper is given to cling to jit a C++ wrapper function,; making the original Python callable accessible in C++. The wrapper code in C++ is accessible by; the attribute __cpp_wrapper__. Note that the callable is fully compiled without side-effects. The numba jitting uses the nopython; option which does not allow interaction with the Python interpreter. This means that you can use; the resulting function also safely in multi-threaded environments.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:617,Security,access,accessible,617,"'''; Decorator for making Python callables accessible in C++ by just-in-time compilation; with numba and cling. The decorator takes the given Python callable and just-in-time compiles (jits); wrapper functions with the given C++ types for input and return types. Eventually,; the Python callable is accessible in the Numba namespace in C++. The implementation first jits with numba the Python callable. We support fundamental types and; ROOT::VecOps::RVecs thereof. Note that you can get the jitted Python callable by the attribute; numba_func. The C++ types are converted to the respective numba types and RVecs are accessible; in Python by numpy arrays. After jitting the actual Python callable, we jit another Python wrapper,; which converts the Python signature to a C-friendly signature. The wrapper code is accessible by; the attribute __py_wrapper__. Next, the Python wrapper is given to cling to jit a C++ wrapper function,; making the original Python callable accessible in C++. The wrapper code in C++ is accessible by; the attribute __cpp_wrapper__. Note that the callable is fully compiled without side-effects. The numba jitting uses the nopython; option which does not allow interaction with the Python interpreter. This means that you can use; the resulting function also safely in multi-threaded environments.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:813,Security,access,accessible,813,"'''; Decorator for making Python callables accessible in C++ by just-in-time compilation; with numba and cling. The decorator takes the given Python callable and just-in-time compiles (jits); wrapper functions with the given C++ types for input and return types. Eventually,; the Python callable is accessible in the Numba namespace in C++. The implementation first jits with numba the Python callable. We support fundamental types and; ROOT::VecOps::RVecs thereof. Note that you can get the jitted Python callable by the attribute; numba_func. The C++ types are converted to the respective numba types and RVecs are accessible; in Python by numpy arrays. After jitting the actual Python callable, we jit another Python wrapper,; which converts the Python signature to a C-friendly signature. The wrapper code is accessible by; the attribute __py_wrapper__. Next, the Python wrapper is given to cling to jit a C++ wrapper function,; making the original Python callable accessible in C++. The wrapper code in C++ is accessible by; the attribute __cpp_wrapper__. Note that the callable is fully compiled without side-effects. The numba jitting uses the nopython; option which does not allow interaction with the Python interpreter. This means that you can use; the resulting function also safely in multi-threaded environments.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:969,Security,access,accessible,969,"'''; Decorator for making Python callables accessible in C++ by just-in-time compilation; with numba and cling. The decorator takes the given Python callable and just-in-time compiles (jits); wrapper functions with the given C++ types for input and return types. Eventually,; the Python callable is accessible in the Numba namespace in C++. The implementation first jits with numba the Python callable. We support fundamental types and; ROOT::VecOps::RVecs thereof. Note that you can get the jitted Python callable by the attribute; numba_func. The C++ types are converted to the respective numba types and RVecs are accessible; in Python by numpy arrays. After jitting the actual Python callable, we jit another Python wrapper,; which converts the Python signature to a C-friendly signature. The wrapper code is accessible by; the attribute __py_wrapper__. Next, the Python wrapper is given to cling to jit a C++ wrapper function,; making the original Python callable accessible in C++. The wrapper code in C++ is accessible by; the attribute __cpp_wrapper__. Note that the callable is fully compiled without side-effects. The numba jitting uses the nopython; option which does not allow interaction with the Python interpreter. This means that you can use; the resulting function also safely in multi-threaded environments.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:1015,Security,access,accessible,1015,"'''; Decorator for making Python callables accessible in C++ by just-in-time compilation; with numba and cling. The decorator takes the given Python callable and just-in-time compiles (jits); wrapper functions with the given C++ types for input and return types. Eventually,; the Python callable is accessible in the Numba namespace in C++. The implementation first jits with numba the Python callable. We support fundamental types and; ROOT::VecOps::RVecs thereof. Note that you can get the jitted Python callable by the attribute; numba_func. The C++ types are converted to the respective numba types and RVecs are accessible; in Python by numpy arrays. After jitting the actual Python callable, we jit another Python wrapper,; which converts the Python signature to a C-friendly signature. The wrapper code is accessible by; the attribute __py_wrapper__. Next, the Python wrapper is given to cling to jit a C++ wrapper function,; making the original Python callable accessible in C++. The wrapper code in C++ is accessible by; the attribute __cpp_wrapper__. Note that the callable is fully compiled without side-effects. The numba jitting uses the nopython; option which does not allow interaction with the Python interpreter. This means that you can use; the resulting function also safely in multi-threaded environments.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:106,Integrability,wrap,wrapper,106,"'''; Get C friendly signature as numba type objects from C++ typenames. We need the types to jit a Python wrapper, which can be accessed as a function pointer in C++.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:128,Security,access,accessed,128,"'''; Get C friendly signature as numba type objects from C++ typenames. We need the types to jit a Python wrapper, which can be accessed as a function pointer in C++.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:311,Integrability,wrap,wrapper,311,"# We return an RVec through pointers as part of the input arguments. Note that the; # pointer type in numba is always an int64 and is later on cast in C++ to the correct type.; # In addition, we provide the size of the data type of the array for preallocating memory of; # the returned array.; # See the Python wrapper for further information why we are using these types.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:75,Integrability,wrap,wrapper,75,'''; Construct the type of an RVec input parameter for its use in the C++; wrapper function signature.; ''',MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:121,Integrability,wrap,wrapper,121,'''; Construct the type of an RVec input parameter for its use in the cast; of the function pointer of the jitted Python wrapper.; ''',MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:16,Integrability,wrap,wrapper,16,"# Create Python wrapper with C++ friendly signature; # Define signature",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:65,Energy Efficiency,allocate,allocated,65,"# If we return an RVec, we return via pointer the pointer of the allocated data,; # the size in elements. In addition, we provide the size of the datatype in bytes.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:8,Integrability,wrap,wrapper,8,"# Build wrapper code",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:40,Integrability,Wrap,Wrapper,40,"'''\; def pywrapper({SIGNATURE}):; """"""; Wrapper function for the jitted Python callable with special treatment of arrays; """"""; # If an RVec is given, define numba carray wrapper for the input types; {ARGS_DEF}; # Call the jitted Python function; r = nbjit({ARGS}); # Return the result; {RETURN}; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:170,Integrability,wrap,wrapper,170,"'''\; def pywrapper({SIGNATURE}):; """"""; Wrapper function for the jitted Python callable with special treatment of arrays; """"""; # If an RVec is given, define numba carray wrapper for the input types; {ARGS_DEF}; # Call the jitted Python function; r = nbjit({ARGS}); # Return the result; {RETURN}; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:46,Integrability,wrap,wrapper,46,"# Execute the pywrapper code and generate the wrapper function; # which calls the jitted C function",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:17,Integrability,wrap,wrapper,17,"# Jit the Python wrapper code",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:24,Integrability,wrap,wrapper,24,"# Get address of jitted wrapper function",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:24,Integrability,wrap,wrapper,24,"# Infer name of the C++ wrapper function",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:12,Integrability,wrap,wrapper,12,"# Build C++ wrapper for jitting with cling; # Define:; # - Input signature; # - Function pointer types",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:10,Integrability,wrap,wrapper,10,"# See C++ wrapper code for the reason using these types",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:10,Integrability,wrap,wrapper,10,"# See C++ wrapper code for the reason using these arguments",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:8,Integrability,wrap,wrapper,8,"# Build wrapper code",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:36,Integrability,wrap,wrapper,36,"""""""\; namespace Numba {{; /*; * C++ wrapper function around the jitted Python wrapping which calls the jitted Python callable; */; {RETURN_TYPE} {FUNC_NAME}({INPUT_SIGNATURE}) {{; // Create a function pointer from the jitted Python wrapper; const auto funcptr = reinterpret_cast<{FUNC_PTR_TYPE}>({FUNC_PTR});; // Perform conversion of RVec<bool>; {VECBOOL_CONVERSION}; // Return the result; {RETURN_OP}; }}; }}""""""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:78,Integrability,wrap,wrapping,78,"""""""\; namespace Numba {{; /*; * C++ wrapper function around the jitted Python wrapping which calls the jitted Python callable; */; {RETURN_TYPE} {FUNC_NAME}({INPUT_SIGNATURE}) {{; // Create a function pointer from the jitted Python wrapper; const auto funcptr = reinterpret_cast<{FUNC_PTR_TYPE}>({FUNC_PTR});; // Perform conversion of RVec<bool>; {VECBOOL_CONVERSION}; // Return the result; {RETURN_OP}; }}; }}""""""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:232,Integrability,wrap,wrapper,232,"""""""\; namespace Numba {{; /*; * C++ wrapper function around the jitted Python wrapping which calls the jitted Python callable; */; {RETURN_TYPE} {FUNC_NAME}({INPUT_SIGNATURE}) {{; // Create a function pointer from the jitted Python wrapper; const auto funcptr = reinterpret_cast<{FUNC_PTR_TYPE}>({FUNC_PTR});; // Perform conversion of RVec<bool>; {VECBOOL_CONVERSION}; // Return the result; {RETURN_OP}; }}; }}""""""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:313,Performance,Perform,Perform,313,"""""""\; namespace Numba {{; /*; * C++ wrapper function around the jitted Python wrapping which calls the jitted Python callable; */; {RETURN_TYPE} {FUNC_NAME}({INPUT_SIGNATURE}) {{; // Create a function pointer from the jitted Python wrapper; const auto funcptr = reinterpret_cast<{FUNC_PTR_TYPE}>({FUNC_PTR});; // Perform conversion of RVec<bool>; {VECBOOL_CONVERSION}; // Return the result; {RETURN_OP}; }}; }}""""""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:6,Integrability,wrap,wrapper,6,"# Jit wrapper C++ code",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py:8,Performance,cache,cache,8,"# Build cache of commonly used python strings (the cache is python intern, so; # all strings are shared python-wide, not just in PyROOT).; # See: https://docs.python.org/3.2/library/sys.html?highlight=sys.intern#sys.intern",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py:51,Performance,cache,cache,51,"# Build cache of commonly used python strings (the cache is python intern, so; # all strings are shared python-wide, not just in PyROOT).; # See: https://docs.python.org/3.2/library/sys.html?highlight=sys.intern#sys.intern",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py:2,Modifiability,Config,Configure,2,"# Configure ROOT facade module",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py:2,Modifiability,Config,Configure,2,"# Configure meta-path finder for ROOT namespaces, following the Python; # documentation and an example:; #; # * https://docs.python.org/3/library/importlib.html#module-importlib.abc; #; # * https://python.plainenglish.io/metapathfinders-or-how-to-change-python-import-behavior-a1cf3b5a13ec",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py:12,Performance,load,loader,12,"""""""; Custom loader for modules under the ROOT namespace.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py:2,Deployability,Configurat,Configuration,2,"# Configuration for usage from Jupyter notebooks",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py:2,Modifiability,Config,Configuration,2,"# Configuration for usage from Jupyter notebooks",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py:138,Performance,load,loaded,138,"# Hard teardown: run part of the gROOT shutdown sequence.; # Running it here ensures that it is done before any ROOT libraries; # are off-loaded, with unspecified order of static object destruction.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py:21,Modifiability,variab,variable,21,"## Creates the input variable histogram and perform the transformations if necessary; # @param dl DataLoader object; # @param className string Signal/Background; # @param variableName string containing the variable name; # @param numBin for creating the histogram; # @param processTrfs string containing the list of transformations to be used on input variable; eg. ""I;N;D;P;U;G,D""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py:171,Modifiability,variab,variableName,171,"## Creates the input variable histogram and perform the transformations if necessary; # @param dl DataLoader object; # @param className string Signal/Background; # @param variableName string containing the variable name; # @param numBin for creating the histogram; # @param processTrfs string containing the list of transformations to be used on input variable; eg. ""I;N;D;P;U;G,D""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py:206,Modifiability,variab,variable,206,"## Creates the input variable histogram and perform the transformations if necessary; # @param dl DataLoader object; # @param className string Signal/Background; # @param variableName string containing the variable name; # @param numBin for creating the histogram; # @param processTrfs string containing the list of transformations to be used on input variable; eg. ""I;N;D;P;U;G,D""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py:352,Modifiability,variab,variable,352,"## Creates the input variable histogram and perform the transformations if necessary; # @param dl DataLoader object; # @param className string Signal/Background; # @param variableName string containing the variable name; # @param numBin for creating the histogram; # @param processTrfs string containing the list of transformations to be used on input variable; eg. ""I;N;D;P;U;G,D""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py:44,Performance,perform,perform,44,"## Creates the input variable histogram and perform the transformations if necessary; # @param dl DataLoader object; # @param className string Signal/Background; # @param variableName string containing the variable name; # @param numBin for creating the histogram; # @param processTrfs string containing the list of transformations to be used on input variable; eg. ""I;N;D;P;U;G,D""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py:14,Modifiability,variab,variables,14,"## Draw input variables; # This function uses the previously defined GetInputVariableHist function to create the histograms; # @param dl The object pointer; # @param variableName string containing the variable name; # @param numBin for creating the histogram; # @param processTrfs list of transformations to be used on input variable; eg. [""I"", ""N"", ""D"", ""P"", ""U"", ""G""]""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py:166,Modifiability,variab,variableName,166,"## Draw input variables; # This function uses the previously defined GetInputVariableHist function to create the histograms; # @param dl The object pointer; # @param variableName string containing the variable name; # @param numBin for creating the histogram; # @param processTrfs list of transformations to be used on input variable; eg. [""I"", ""N"", ""D"", ""P"", ""U"", ""G""]""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py:201,Modifiability,variab,variable,201,"## Draw input variables; # This function uses the previously defined GetInputVariableHist function to create the histograms; # @param dl The object pointer; # @param variableName string containing the variable name; # @param numBin for creating the histogram; # @param processTrfs list of transformations to be used on input variable; eg. [""I"", ""N"", ""D"", ""P"", ""U"", ""G""]""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py:325,Modifiability,variab,variable,325,"## Draw input variables; # This function uses the previously defined GetInputVariableHist function to create the histograms; # @param dl The object pointer; # @param variableName string containing the variable name; # @param numBin for creating the histogram; # @param processTrfs list of transformations to be used on input variable; eg. [""I"", ""N"", ""D"", ""P"", ""U"", ""G""]""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py:3,Modifiability,Rewrite,Rewrite,3,"## Rewrite TMVA::DataLoader::PrepareTrainingAndTestTree; # @param *args positional parameters; # @param **kwargs named parameters: this will be transformed to option string",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:128,Modifiability,variab,variables,128,"# This class contains the necessary HTML, JavaScript, CSS codes (templates); # for the new Factory methods. Some parts of these variables will be replaced and the new string will be the cell output.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:2,Usability,progress bar,progress bar,2,"# progress bar",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:29,Modifiability,variab,variable,29,"## Returns a list with input variable names; # @param self the object pointer",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:198,Deployability,update,updates,198,"## Rewrite function for TMVA::Factory::TrainAllMethods. This function provides interactive training.; # The training will be started on separated thread. The main thread will periodically check for updates and will create; # the JS output which will update the plots and progress bars. The main thread must contain `while True`, because, if not; # it will cause crash (output will be flushed by tornado IOLoop (runs on main thread), but the output streams are; # C++ atomic types); # @param fac the factory object pointer",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:250,Deployability,update,update,250,"## Rewrite function for TMVA::Factory::TrainAllMethods. This function provides interactive training.; # The training will be started on separated thread. The main thread will periodically check for updates and will create; # the JS output which will update the plots and progress bars. The main thread must contain `while True`, because, if not; # it will cause crash (output will be flushed by tornado IOLoop (runs on main thread), but the output streams are; # C++ atomic types); # @param fac the factory object pointer",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:3,Modifiability,Rewrite,Rewrite,3,"## Rewrite function for TMVA::Factory::TrainAllMethods. This function provides interactive training.; # The training will be started on separated thread. The main thread will periodically check for updates and will create; # the JS output which will update the plots and progress bars. The main thread must contain `while True`, because, if not; # it will cause crash (output will be flushed by tornado IOLoop (runs on main thread), but the output streams are; # C++ atomic types); # @param fac the factory object pointer",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:271,Usability,progress bar,progress bars,271,"## Rewrite function for TMVA::Factory::TrainAllMethods. This function provides interactive training.; # The training will be started on separated thread. The main thread will periodically check for updates and will create; # the JS output which will update the plots and progress bars. The main thread must contain `while True`, because, if not; # it will cause crash (output will be flushed by tornado IOLoop (runs on main thread), but the output streams are; # C++ atomic types); # @param fac the factory object pointer",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:2,Usability,progress bar,progress bar,2,"# progress bar",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:3,Modifiability,Rewrite,Rewrite,3,"## Rewrite the constructor of TMVA::Factory; # @param *args positional parameters; # @param **kwargs named parameters: this will be transformed to option string",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:3,Modifiability,Rewrite,Rewrite,3,"## Rewrite TMVA::Factory::BookMethod; # @param *args positional parameters; # @param **kwargs named parameters: this will be transformed to option string",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:3,Modifiability,Rewrite,Rewrite,3,"## Rewrite the constructor of TMVA::Factory::EvaluateImportance; # @param *args positional parameters; # @param **kwargs named parameters: this will be transformed to option string",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:13,Integrability,interface,interface,13,"## Graphical interface for booking DNN; # @param self object pointer; # @param loader the DataLoader object; # @param title classifier title",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:79,Performance,load,loader,79,"## Graphical interface for booking DNN; # @param self object pointer; # @param loader the DataLoader object; # @param title classifier title",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:95,Modifiability,layers,layers,95,"## This function gets the classifier information and weights in JSON formats, and the selected layers and it will create; # the weight heat map.; # @param net DNN in JSON format; # @param selectedLayers the selected layers",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:216,Modifiability,layers,layers,216,"## This function gets the classifier information and weights in JSON formats, and the selected layers and it will create; # the weight heat map.; # @param net DNN in JSON format; # @param selectedLayers the selected layers",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:83,Modifiability,layers,layers,83,"## Show DNN weights in a heat map. It will produce an ipywidget element, where the layers can be selected.; # @param fac object pointer; # @param datasetName name of current dataset; # @param methodName DNN's name",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/JPyInterface.py:111,Integrability,inject,inject,111,"## Function inserter class; # This class contains the methods which are invoked by using jsmva magic, and will inject the new methods; # to TMVA::Factory, TMVA::DataLoader",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/JPyInterface.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/JPyInterface.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/JPyInterface.py:111,Security,inject,inject,111,"## Function inserter class; # This class contains the methods which are invoked by using jsmva magic, and will inject the new methods; # to TMVA::Factory, TMVA::DataLoader",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/JPyInterface.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/JPyInterface.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/JPyInterface.py:109,Performance,load,loader,109,"## This function captures objects which are declared in noteboko cell. It's used to capture factory and data loader objects.; # @param args classes",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/JPyInterface.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/JPyInterface.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/JPyInterface.py:46,Modifiability,config,config,46,"""""""; <script type=""text/javascript"">; require.config({; paths: {; 'JsMVA':'$PATH/JsMVA.min'; }; });; </script>; <link rel=""stylesheet"" href=""$CSSFile""></link>; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/JPyInterface.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/JPyInterface.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/OutputTransformer.py:13,Modifiability,Variab,Variable,13,"## Transform Variable related information to table.; # @param self object pointer; # @param headerMatch re.match object for the first line; # @param startIndex it defines where we are in self.lines array; # @param maxlen defines how many iterations we can do from startIndex",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/OutputTransformer.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/OutputTransformer.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/OutputTransformer.py:238,Modifiability,variab,variable,238,"## This function creates a correlation matrix from python matrix.; # @param self object pointer; # @param title first part of the title of histogram; # @param className Signal/Background: it will be on title; # @param varNames array with variable names; # @param matrix the correlation matrix",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/OutputTransformer.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/OutputTransformer.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/OutputTransformer.py:311,Availability,error,error,311,"## This is the main function, it will be registered as transformer function to JupyROOT, it will run every time; # when some ROOT function produces output. It get's the C++ style output and it returns it in HTML version.; # @param self object pointer; # @param output the content of C++ output stream; # @param error the content of C++ error stream",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/OutputTransformer.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/OutputTransformer.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/OutputTransformer.py:336,Availability,error,error,336,"## This is the main function, it will be registered as transformer function to JupyROOT, it will run every time; # when some ROOT function produces output. It get's the C++ style output and it returns it in HTML version.; # @param self object pointer; # @param output the content of C++ output stream; # @param error the content of C++ error stream",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/JsMVA/OutputTransformer.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/OutputTransformer.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_drawables.py:93,Modifiability,inherit,inherited,93,"# We have already set the ownership while initializing,; # so we do not need the custom Draw inherited from TPad to; # do it again in case it is executed.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_drawables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_drawables.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:36,Integrability,inject,injected,36,"'''; Instances of this class can be injected in class proxies to replace method; templates that we want to pythonize. Similarly to what `partialmethod`; does, this class implements `__get__` to return a wrapper object of a; method that is bound to an instance of the pythonized class. Such object is; both callable and subscriptable. Attributes:; _original_method (cppyy TemplateProxy): original cppyy method template; being pythonized.; _wrapper_class (subclass of MethodTemplateWrapper): class that wraps a; pythonized method template.; _extra_args (tuple): extra arguments to be forwarded to; `_wrapper_class`'s __init__ method, to be used by the wrapper object; when receiving a call.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:203,Integrability,wrap,wrapper,203,"'''; Instances of this class can be injected in class proxies to replace method; templates that we want to pythonize. Similarly to what `partialmethod`; does, this class implements `__get__` to return a wrapper object of a; method that is bound to an instance of the pythonized class. Such object is; both callable and subscriptable. Attributes:; _original_method (cppyy TemplateProxy): original cppyy method template; being pythonized.; _wrapper_class (subclass of MethodTemplateWrapper): class that wraps a; pythonized method template.; _extra_args (tuple): extra arguments to be forwarded to; `_wrapper_class`'s __init__ method, to be used by the wrapper object; when receiving a call.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:501,Integrability,wrap,wraps,501,"'''; Instances of this class can be injected in class proxies to replace method; templates that we want to pythonize. Similarly to what `partialmethod`; does, this class implements `__get__` to return a wrapper object of a; method that is bound to an instance of the pythonized class. Such object is; both callable and subscriptable. Attributes:; _original_method (cppyy TemplateProxy): original cppyy method template; being pythonized.; _wrapper_class (subclass of MethodTemplateWrapper): class that wraps a; pythonized method template.; _extra_args (tuple): extra arguments to be forwarded to; `_wrapper_class`'s __init__ method, to be used by the wrapper object; when receiving a call.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:650,Integrability,wrap,wrapper,650,"'''; Instances of this class can be injected in class proxies to replace method; templates that we want to pythonize. Similarly to what `partialmethod`; does, this class implements `__get__` to return a wrapper object of a; method that is bound to an instance of the pythonized class. Such object is; both callable and subscriptable. Attributes:; _original_method (cppyy TemplateProxy): original cppyy method template; being pythonized.; _wrapper_class (subclass of MethodTemplateWrapper): class that wraps a; pythonized method template.; _extra_args (tuple): extra arguments to be forwarded to; `_wrapper_class`'s __init__ method, to be used by the wrapper object; when receiving a call.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:36,Security,inject,injected,36,"'''; Instances of this class can be injected in class proxies to replace method; templates that we want to pythonize. Similarly to what `partialmethod`; does, this class implements `__get__` to return a wrapper object of a; method that is bound to an instance of the pythonized class. Such object is; both callable and subscriptable. Attributes:; _original_method (cppyy TemplateProxy): original cppyy method template; being pythonized.; _wrapper_class (subclass of MethodTemplateWrapper): class that wraps a; pythonized method template.; _extra_args (tuple): extra arguments to be forwarded to; `_wrapper_class`'s __init__ method, to be used by the wrapper object; when receiving a call.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:244,Integrability,wrap,wrapper,244,"'''; Initializes the getter object of a method template.; Saves the original implementation of the method template to be replaced; (i.e. the one provided by cppyy) so that it can be later used in the; implementation of the pythonization by the wrapper object. Args:; original_method (cppyy TemplateProxy): original cppyy method; template being pythonized.; wrapper_class (subclass of MethodTemplateWrapper): class that wraps; a pythonized method template.; extra_args (tuple, optional): extra arguments to be forwarded to; `wrapper_class`'s __init__ method, to be used by the wrapper; object when receiving a call.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:419,Integrability,wrap,wraps,419,"'''; Initializes the getter object of a method template.; Saves the original implementation of the method template to be replaced; (i.e. the one provided by cppyy) so that it can be later used in the; implementation of the pythonization by the wrapper object. Args:; original_method (cppyy TemplateProxy): original cppyy method; template being pythonized.; wrapper_class (subclass of MethodTemplateWrapper): class that wraps; a pythonized method template.; extra_args (tuple, optional): extra arguments to be forwarded to; `wrapper_class`'s __init__ method, to be used by the wrapper; object when receiving a call.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:576,Integrability,wrap,wrapper,576,"'''; Initializes the getter object of a method template.; Saves the original implementation of the method template to be replaced; (i.e. the one provided by cppyy) so that it can be later used in the; implementation of the pythonization by the wrapper object. Args:; original_method (cppyy TemplateProxy): original cppyy method; template being pythonized.; wrapper_class (subclass of MethodTemplateWrapper): class that wraps; a pythonized method template.; extra_args (tuple, optional): extra arguments to be forwarded to; `wrapper_class`'s __init__ method, to be used by the wrapper; object when receiving a call.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:27,Integrability,wrap,wrapper,27,"'''; Creates and returns a wrapper object for a method template. The type of; the wrapper is a subclass of MethodTemplateWrapper.; By implementing `__get__`, we obtain a handle to the instance of the; pythonized class on which the application accessed the method template.; That allows us to get an original implementation of the method template; that is bound to that instance, and pass such implementation along to; the wrapper object for later use. Args:; instance (class instance): instance of the pythonized class on; which the application accessed the method template.; instance_type (class type): type of the instance. Returns:; instance of MethodTemplateWrapper subclass: contains a handle to; the original implementation of the method template that is; bound to `instance` and, possibly, some extra arguments to be; used when receiving a call.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:82,Integrability,wrap,wrapper,82,"'''; Creates and returns a wrapper object for a method template. The type of; the wrapper is a subclass of MethodTemplateWrapper.; By implementing `__get__`, we obtain a handle to the instance of the; pythonized class on which the application accessed the method template.; That allows us to get an original implementation of the method template; that is bound to that instance, and pass such implementation along to; the wrapper object for later use. Args:; instance (class instance): instance of the pythonized class on; which the application accessed the method template.; instance_type (class type): type of the instance. Returns:; instance of MethodTemplateWrapper subclass: contains a handle to; the original implementation of the method template that is; bound to `instance` and, possibly, some extra arguments to be; used when receiving a call.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:422,Integrability,wrap,wrapper,422,"'''; Creates and returns a wrapper object for a method template. The type of; the wrapper is a subclass of MethodTemplateWrapper.; By implementing `__get__`, we obtain a handle to the instance of the; pythonized class on which the application accessed the method template.; That allows us to get an original implementation of the method template; that is bound to that instance, and pass such implementation along to; the wrapper object for later use. Args:; instance (class instance): instance of the pythonized class on; which the application accessed the method template.; instance_type (class type): type of the instance. Returns:; instance of MethodTemplateWrapper subclass: contains a handle to; the original implementation of the method template that is; bound to `instance` and, possibly, some extra arguments to be; used when receiving a call.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:243,Security,access,accessed,243,"'''; Creates and returns a wrapper object for a method template. The type of; the wrapper is a subclass of MethodTemplateWrapper.; By implementing `__get__`, we obtain a handle to the instance of the; pythonized class on which the application accessed the method template.; That allows us to get an original implementation of the method template; that is bound to that instance, and pass such implementation along to; the wrapper object for later use. Args:; instance (class instance): instance of the pythonized class on; which the application accessed the method template.; instance_type (class type): type of the instance. Returns:; instance of MethodTemplateWrapper subclass: contains a handle to; the original implementation of the method template that is; bound to `instance` and, possibly, some extra arguments to be; used when receiving a call.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:545,Security,access,accessed,545,"'''; Creates and returns a wrapper object for a method template. The type of; the wrapper is a subclass of MethodTemplateWrapper.; By implementing `__get__`, we obtain a handle to the instance of the; pythonized class on which the application accessed the method template.; That allows us to get an original implementation of the method template; that is bound to that instance, and pass such implementation along to; the wrapper object for later use. Args:; instance (class instance): instance of the pythonized class on; which the application accessed the method template.; instance_type (class type): type of the instance. Returns:; instance of MethodTemplateWrapper subclass: contains a handle to; the original implementation of the method template that is; bound to `instance` and, possibly, some extra arguments to be; used when receiving a call.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:172,Integrability,wrap,wrappers,172,"'''; Abstract base class that defines some common logic to properly pythonize; method templates. More precisely, it provides an implementation of; `__getitem__` that makes wrappers subscriptable and allows them to capture; template arguments.; Subclasses of this class must redefine `__call__` with the actual; pythonization of the method template. Attributes:; _original_method (cppyy TemplateProxy): original implementation of the; method template that is bound to the instance on which the template; was accessed.; _extra_args (tuple): extra arguments to be used when receiving a call.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:507,Security,access,accessed,507,"'''; Abstract base class that defines some common logic to properly pythonize; method templates. More precisely, it provides an implementation of; `__getitem__` that makes wrappers subscriptable and allows them to capture; template arguments.; Subclasses of this class must redefine `__call__` with the actual; pythonization of the method template. Attributes:; _original_method (cppyy TemplateProxy): original implementation of the; method template that is bound to the instance on which the template; was accessed.; _extra_args (tuple): extra arguments to be used when receiving a call.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:50,Testability,log,logic,50,"'''; Abstract base class that defines some common logic to properly pythonize; method templates. More precisely, it provides an implementation of; `__getitem__` that makes wrappers subscriptable and allows them to capture; template arguments.; Subclasses of this class must redefine `__call__` with the actual; pythonization of the method template. Attributes:; _original_method (cppyy TemplateProxy): original implementation of the; method template that is bound to the instance on which the template; was accessed.; _extra_args (tuple): extra arguments to be used when receiving a call.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:22,Integrability,wrap,wrapper,22,'''; Constructor of a wrapper object for a method template. Args:; original_method (cppyy TemplateProxy): original implementation of; the method template that is bound to the instance on which the; template was accessed.; extra_args (tuple): extra arguments to be used when receiving a; call.; ''',MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:211,Security,access,accessed,211,'''; Constructor of a wrapper object for a method template. Args:; original_method (cppyy TemplateProxy): original implementation of; the method template that is bound to the instance on which the; template was accessed.; extra_args (tuple): extra arguments to be used when receiving a; call.; ''',MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:188,Integrability,wrap,wrapper,188,"'''; Captures the template arguments used to instantiate the method template. Args:; template_args (tuple): template arguments. Returns:; instance of MethodTemplateWrapper subclass: a new wrapper instance; is returned, with an original method on which the template; arguments have been applied.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py:424,Performance,perform,performant,424,"""""""Read-out the RDataFrame as a collection of numpy arrays. The values of the dataframe are read out as numpy array of the respective type; if the type is a fundamental type such as float or int. If the type of the column; is a complex type, such as your custom class or a std::array, the returned numpy; array contains Python objects of this type interpreted via PyROOT. Be aware that reading out custom types is much less performant than reading out; fundamental types, such as int or float, which are supported directly by numpy. The reading is performed in multiple threads if the implicit multi-threading of; ROOT is enabled. Note that this is an instant action of the RDataFrame graph and will trigger the; event-loop. Parameters:; columns: If None return all branches as columns, otherwise specify names in iterable.; exclude: Exclude branches from selection.; lazy: Determines whether this action is instant (False, default) or lazy (True). Returns:; dict or AsNumpyResult: if instant (default), dict with column names as keys and; 1D numpy arrays with content as values; if lazy, AsNumpyResult containing; the result pointers obtained from the Take actions.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py:548,Performance,perform,performed,548,"""""""Read-out the RDataFrame as a collection of numpy arrays. The values of the dataframe are read out as numpy array of the respective type; if the type is a fundamental type such as float or int. If the type of the column; is a complex type, such as your custom class or a std::array, the returned numpy; array contains Python objects of this type interpreted via PyROOT. Be aware that reading out custom types is much less performant than reading out; fundamental types, such as int or float, which are supported directly by numpy. The reading is performed in multiple threads if the implicit multi-threading of; ROOT is enabled. Note that this is an instant action of the RDataFrame graph and will trigger the; event-loop. Parameters:; columns: If None return all branches as columns, otherwise specify names in iterable.; exclude: Exclude branches from selection.; lazy: Determines whether this action is instant (False, default) or lazy (True). Returns:; dict or AsNumpyResult: if instant (default), dict with column names as keys and; 1D numpy arrays with content as values; if lazy, AsNumpyResult containing; the result pointers obtained from the Take actions.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py:594,Performance,multi-thread,multi-threading,594,"""""""Read-out the RDataFrame as a collection of numpy arrays. The values of the dataframe are read out as numpy array of the respective type; if the type is a fundamental type such as float or int. If the type of the column; is a complex type, such as your custom class or a std::array, the returned numpy; array contains Python objects of this type interpreted via PyROOT. Be aware that reading out custom types is much less performant than reading out; fundamental types, such as int or float, which are supported directly by numpy. The reading is performed in multiple threads if the implicit multi-threading of; ROOT is enabled. Note that this is an instant action of the RDataFrame graph and will trigger the; event-loop. Parameters:; columns: If None return all branches as columns, otherwise specify names in iterable.; exclude: Exclude branches from selection.; lazy: Determines whether this action is instant (False, default) or lazy (True). Returns:; dict or AsNumpyResult: if instant (default), dict with column names as keys and; 1D numpy arrays with content as values; if lazy, AsNumpyResult containing; the result pointers obtained from the Take actions.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py:2,Security,Sanitiz,Sanitize,2,"# Sanitize input arguments",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py:181,Performance,optimiz,optimization,181,"# bool columns should be taken as unsigned chars, because NumPy stores; # bools in bytes - different from the std::vector<bool> returned by the; # action, which might do some space optimization",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py:24,Integrability,wrap,wrapping,24,"# This creates only the wrapping of the objects and does not copy.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py:25,Availability,alive,alive,25,"# For references to keep alive the NumPy arrays that are read by; # MakeNumpyDataFrame.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py:68,Availability,alive,alive,68,"# How we keep the NumPy arrays around as long as the RDataSource is alive:; #; # 1. Cache a container with references to the NumPy arrays in a global; # dictionary. Note that we use a copy of the original dict as the; # container, because otherwise the caller of _MakeNumpyDataFrame can; # invalidate our cache by mutating the np_dict after the call.; #; # 2. Together with the array data, store a deleter function to delete the; # cache element in the cache itself.; #; # 3. The C++ side gets a reference to the deleter function via; # std::function. Note that the C++ side can only get a non-owning; # reference to the Python function, which is the reason why we have to; # keep the deleter alive in the cache itself.; #; # 4. The RDataSource calls the deleter in its destructor.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py:693,Availability,alive,alive,693,"# How we keep the NumPy arrays around as long as the RDataSource is alive:; #; # 1. Cache a container with references to the NumPy arrays in a global; # dictionary. Note that we use a copy of the original dict as the; # container, because otherwise the caller of _MakeNumpyDataFrame can; # invalidate our cache by mutating the np_dict after the call.; #; # 2. Together with the array data, store a deleter function to delete the; # cache element in the cache itself.; #; # 3. The C++ side gets a reference to the deleter function via; # std::function. Note that the C++ side can only get a non-owning; # reference to the Python function, which is the reason why we have to; # keep the deleter alive in the cache itself.; #; # 4. The RDataSource calls the deleter in its destructor.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py:84,Performance,Cache,Cache,84,"# How we keep the NumPy arrays around as long as the RDataSource is alive:; #; # 1. Cache a container with references to the NumPy arrays in a global; # dictionary. Note that we use a copy of the original dict as the; # container, because otherwise the caller of _MakeNumpyDataFrame can; # invalidate our cache by mutating the np_dict after the call.; #; # 2. Together with the array data, store a deleter function to delete the; # cache element in the cache itself.; #; # 3. The C++ side gets a reference to the deleter function via; # std::function. Note that the C++ side can only get a non-owning; # reference to the Python function, which is the reason why we have to; # keep the deleter alive in the cache itself.; #; # 4. The RDataSource calls the deleter in its destructor.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py:305,Performance,cache,cache,305,"# How we keep the NumPy arrays around as long as the RDataSource is alive:; #; # 1. Cache a container with references to the NumPy arrays in a global; # dictionary. Note that we use a copy of the original dict as the; # container, because otherwise the caller of _MakeNumpyDataFrame can; # invalidate our cache by mutating the np_dict after the call.; #; # 2. Together with the array data, store a deleter function to delete the; # cache element in the cache itself.; #; # 3. The C++ side gets a reference to the deleter function via; # std::function. Note that the C++ side can only get a non-owning; # reference to the Python function, which is the reason why we have to; # keep the deleter alive in the cache itself.; #; # 4. The RDataSource calls the deleter in its destructor.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py:432,Performance,cache,cache,432,"# How we keep the NumPy arrays around as long as the RDataSource is alive:; #; # 1. Cache a container with references to the NumPy arrays in a global; # dictionary. Note that we use a copy of the original dict as the; # container, because otherwise the caller of _MakeNumpyDataFrame can; # invalidate our cache by mutating the np_dict after the call.; #; # 2. Together with the array data, store a deleter function to delete the; # cache element in the cache itself.; #; # 3. The C++ side gets a reference to the deleter function via; # std::function. Note that the C++ side can only get a non-owning; # reference to the Python function, which is the reason why we have to; # keep the deleter alive in the cache itself.; #; # 4. The RDataSource calls the deleter in its destructor.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py:453,Performance,cache,cache,453,"# How we keep the NumPy arrays around as long as the RDataSource is alive:; #; # 1. Cache a container with references to the NumPy arrays in a global; # dictionary. Note that we use a copy of the original dict as the; # container, because otherwise the caller of _MakeNumpyDataFrame can; # invalidate our cache by mutating the np_dict after the call.; #; # 2. Together with the array data, store a deleter function to delete the; # cache element in the cache itself.; #; # 3. The C++ side gets a reference to the deleter function via; # std::function. Note that the C++ side can only get a non-owning; # reference to the Python function, which is the reason why we have to; # keep the deleter alive in the cache itself.; #; # 4. The RDataSource calls the deleter in its destructor.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py:706,Performance,cache,cache,706,"# How we keep the NumPy arrays around as long as the RDataSource is alive:; #; # 1. Cache a container with references to the NumPy arrays in a global; # dictionary. Note that we use a copy of the original dict as the; # container, because otherwise the caller of _MakeNumpyDataFrame can; # invalidate our cache by mutating the np_dict after the call.; #; # 2. Together with the array data, store a deleter function to delete the; # cache element in the cache itself.; #; # 3. The C++ side gets a reference to the deleter function via; # std::function. Note that the C++ side can only get a non-owning; # reference to the Python function, which is the reason why we have to; # keep the deleter alive in the cache itself.; #; # 4. The RDataSource calls the deleter in its destructor.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_conversion_maps.py:144,Integrability,depend,dependency,144,"""""""; Contains constants needed for _rdf_pyz to convert datatypes for numba declarable types.; It is in a separate module so as to avoid a numpy dependency for ROOT.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_conversion_maps.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_conversion_maps.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_conversion_maps.py:130,Safety,avoid,avoid,130,"""""""; Contains constants needed for _rdf_pyz to convert datatypes for numba declarable types.; It is in a separate module so as to avoid a numpy dependency for ROOT.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_conversion_maps.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_conversion_maps.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py:2,Modifiability,Variab,Variable,2,"# Variable to store previous functions so as to not rejit.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py:317,Availability,error,error,317,"""""""; Function to determine the type of a variable x.; If x is a string. It maps it to the corresponding column's type in RDF. (String constants are not supported); Else it determines the fundamental type of x. (int, float, bool); Else it is an a numpy array and maps it to corresponding RVec.; Otherwise flags a type error; Args:; 	 ` x: Variable whose type is to be determined. Returns:; type of the variable x; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py:41,Modifiability,variab,variable,41,"""""""; Function to determine the type of a variable x.; If x is a string. It maps it to the corresponding column's type in RDF. (String constants are not supported); Else it determines the fundamental type of x. (int, float, bool); Else it is an a numpy array and maps it to corresponding RVec.; Otherwise flags a type error; Args:; 	 ` x: Variable whose type is to be determined. Returns:; type of the variable x; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py:338,Modifiability,Variab,Variable,338,"""""""; Function to determine the type of a variable x.; If x is a string. It maps it to the corresponding column's type in RDF. (String constants are not supported); Else it determines the fundamental type of x. (int, float, bool); Else it is an a numpy array and maps it to corresponding RVec.; Otherwise flags a type error; Args:; 	 ` x: Variable whose type is to be determined. Returns:; type of the variable x; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py:401,Modifiability,variab,variable,401,"""""""; Function to determine the type of a variable x.; If x is a string. It maps it to the corresponding column's type in RDF. (String constants are not supported); Else it determines the fundamental type of x. (int, float, bool); Else it is an a numpy array and maps it to corresponding RVec.; Otherwise flags a type error; Args:; 	 ` x: Variable whose type is to be determined. Returns:; type of the variable x; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py:58,Deployability,Update,Updates,58,"""""""; Function to create a list of parameters func needs.; Updates the class to have a new attribute params which is a list of the parameters of func. Arguments:; func: A python callable. """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py:117,Deployability,Update,Updates,117,"""""""; Function to create a dictionary mapping the parameters of the function to the corresponding columns or values.; Updates the class to have a new attribute func_args which contains the above mapping. Arguments:; cols_list: A python list that contains the columns which the function uses.; extra_args: A dictionary containing any extra parameters the function requires.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py:41,Deployability,Update,Updates,41,"""""""; Calculates the function signature.; Updates the class with a new attribute args_info which contains the mapping of the parameter of the function to its type and value.; args_info: dict{parameter_name(str): (type, value)}; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py:111,Deployability,Update,Updates,111,"""""""; Generates a function call and signature. Gives a unique name to the function if it is a lambda function.; Updates the class with new attributes func_call and func_sign to hold them,; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py:186,Availability,error,error,186,"""""""; Jits the provided function using ROOT's NumbaDeclare.; Also checks if the function was jitted earlier in which case it won't jit again but if signature does not match. It raises an error. Arguments:; func: A python callable; cols_list: A list of columns of RDF on which func depends on.; extra_args: A dict of extra arguments that func requires.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py:280,Integrability,depend,depends,280,"""""""; Jits the provided function using ROOT's NumbaDeclare.; Also checks if the function was jitted earlier in which case it won't jit again but if signature does not match. It raises an error. Arguments:; func: A python callable; cols_list: A list of columns of RDF on which func depends on.; extra_args: A dict of extra arguments that func requires.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_utils.py:7,Integrability,wrap,wrapper,7,"""""""; A wrapper class that inherits from `numpy.ndarray` and allows to attach the; result pointer of the `Take` action in an `RDataFrame` event loop to the; collection of values returned by that action. See; https://docs.scipy.org/doc/numpy/user/basics.subclassing.html for more; information on subclassing numpy arrays.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_utils.py:26,Modifiability,inherit,inherits,26,"""""""; A wrapper class that inherits from `numpy.ndarray` and allows to attach the; result pointer of the `Take` action in an `RDataFrame` event loop to the; collection of values returned by that action. See; https://docs.scipy.org/doc/numpy/user/basics.subclassing.html for more; information on subclassing numpy arrays.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_utils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_utils.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_runtime_error.py:150,Testability,log,logic,150,"# TODO: vpadulan; # This module enables pickling/unpickling of the std::runtime_error Python proxy; # defined in cppyy (via CPPExcInstance). The same logic should be implemented; # in the CPython extension to be more generic.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_runtime_error.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_runtime_error.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_runtime_error.py:68,Integrability,message,message,68,"""""""; Creates a new cppyy std::runtime_error proxy with the original message.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_runtime_error.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_runtime_error.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_runtime_error.py:92,Availability,error,error,92,"""""""; Establish the strategy to recreate a std::runtime_error when unpickling. Creates a new error from the original message. Need to use a separate free; function instead of an inline lambda to help pickle.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_runtime_error.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_runtime_error.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_runtime_error.py:116,Integrability,message,message,116,"""""""; Establish the strategy to recreate a std::runtime_error when unpickling. Creates a new error from the original message. Need to use a separate free; function instead of an inline lambda to help pickle.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_runtime_error.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_runtime_error.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rvec.py:12,Integrability,interface,interface,12,"# Get array interface of object",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rvec.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rvec.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rvec.py:140,Security,access,accessed,140,"# Numpy breaks for data pointer of 0 even though the array is empty.; # We set the pointer to 1 but the value itself is arbitrary and never accessed.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rvec.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rvec.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rvec.py:115,Integrability,interface,interface,115,"# Parameters:; # klass: class to be pythonized; # name: string containing the name of the class; # Add numpy array interface",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rvec.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rvec.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_stl_vector.py:115,Integrability,interface,interface,115,"# Parameters:; # klass: class to be pythonized; # name: string containing the name of the class; # Add numpy array interface; # NOTE: The pythonization is reused from ROOT::VecOps::RVec",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_stl_vector.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_stl_vector.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_stl_vector.py:2,Integrability,Inject,Inject,2,"# Inject custom vector<char>::data()",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_stl_vector.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_stl_vector.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_stl_vector.py:2,Security,Inject,Inject,2,"# Inject custom vector<char>::data()",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_stl_vector.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_stl_vector.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tcollection.py:58,Modifiability,extend,extend,58,"# Parameters:; # - self: collection; # - c: collection to extend self with",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tcollection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tcollection.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py:69,Availability,failure,failure,69,"""""""Injection of TDirectory.__getitem__ that raises AttributeError on failure. Method that is assigned to TDirectory.__getitem__. It relies on Get to; obtain the object from the TDirectory and adds on top:; - Raising an AttributeError if the object does not exist; - Caching the result of a successful get for future re-attempts.; Once cached, the same object is retrieved every time.; This pythonisation is inherited by TDirectoryFile and TFile. Example:; ```; myfile.mydir.mysubdir.myHist.Draw(); ```; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py:3,Integrability,Inject,Injection,3,"""""""Injection of TDirectory.__getitem__ that raises AttributeError on failure. Method that is assigned to TDirectory.__getitem__. It relies on Get to; obtain the object from the TDirectory and adds on top:; - Raising an AttributeError if the object does not exist; - Caching the result of a successful get for future re-attempts.; Once cached, the same object is retrieved every time.; This pythonisation is inherited by TDirectoryFile and TFile. Example:; ```; myfile.mydir.mysubdir.myHist.Draw(); ```; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py:407,Modifiability,inherit,inherited,407,"""""""Injection of TDirectory.__getitem__ that raises AttributeError on failure. Method that is assigned to TDirectory.__getitem__. It relies on Get to; obtain the object from the TDirectory and adds on top:; - Raising an AttributeError if the object does not exist; - Caching the result of a successful get for future re-attempts.; Once cached, the same object is retrieved every time.; This pythonisation is inherited by TDirectoryFile and TFile. Example:; ```; myfile.mydir.mysubdir.myHist.Draw(); ```; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py:335,Performance,cache,cached,335,"""""""Injection of TDirectory.__getitem__ that raises AttributeError on failure. Method that is assigned to TDirectory.__getitem__. It relies on Get to; obtain the object from the TDirectory and adds on top:; - Raising an AttributeError if the object does not exist; - Caching the result of a successful get for future re-attempts.; Once cached, the same object is retrieved every time.; This pythonisation is inherited by TDirectoryFile and TFile. Example:; ```; myfile.mydir.mysubdir.myHist.Draw(); ```; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py:3,Security,Inject,Injection,3,"""""""Injection of TDirectory.__getitem__ that raises AttributeError on failure. Method that is assigned to TDirectory.__getitem__. It relies on Get to; obtain the object from the TDirectory and adds on top:; - Raising an AttributeError if the object does not exist; - Caching the result of a successful get for future re-attempts.; Once cached, the same object is retrieved every time.; This pythonisation is inherited by TDirectoryFile and TFile. Example:; ```; myfile.mydir.mysubdir.myHist.Draw(); ```; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py:36,Usability,clear,clear,36,"# Caching behavior seems to be more clear to the user; can always override said; # behavior (i.e. re-read from file) with an explicit Get() call",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py:36,Usability,clear,clear,36,"# Caching behavior seems to be more clear to the user; can always override said; # behavior (i.e. re-read from file) with an explicit Get() call",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py:178,Integrability,inject,inject,178,"""""""; Allow access to objects through the method Get(). This concerns both TDirectoryFile and TFile, since the latter; inherits the Get method from the former.; We decided not to inject this behavior directly in TDirectory; because this one already has a templated method Get which, when; invoked from Python, returns an object of the derived class (e.g. TH1F); and not a generic TObject.; In case the object is not found, a null pointer is returned.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py:118,Modifiability,inherit,inherits,118,"""""""; Allow access to objects through the method Get(). This concerns both TDirectoryFile and TFile, since the latter; inherits the Get method from the former.; We decided not to inject this behavior directly in TDirectory; because this one already has a templated method Get which, when; invoked from Python, returns an object of the derived class (e.g. TH1F); and not a generic TObject.; In case the object is not found, a null pointer is returned.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py:11,Security,access,access,11,"""""""; Allow access to objects through the method Get(). This concerns both TDirectoryFile and TFile, since the latter; inherits the Get method from the former.; We decided not to inject this behavior directly in TDirectory; because this one already has a templated method Get which, when; invoked from Python, returns an object of the derived class (e.g. TH1F); and not a generic TObject.; In case the object is not found, a null pointer is returned.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py:178,Security,inject,inject,178,"""""""; Allow access to objects through the method Get(). This concerns both TDirectoryFile and TFile, since the latter; inherits the Get method from the former.; We decided not to inject this behavior directly in TDirectory; because this one already has a templated method Get which, when; invoked from Python, returns an object of the derived class (e.g. TH1F); and not a generic TObject.; In case the object is not found, a null pointer is returned.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py:20,Modifiability,inherit,inherits,20,"""""""; TDirectoryFile inherits from TDirectory the pythonized attr syntax (__getattr__); and WriteObject method.; On the other side, the Get() method is pythonised only in TDirectoryFile.; Thus, the situation is now the following:. 1) __getattr__ : TDirectory --> TDirectoryFile --> TFile; 1.1) caches the returned object for future attempts; 1.2) raises AttributeError if object not found. 2) Get() : TDirectoryFile --> TFile; 2.1) does not cache the returned object; 2.2 returns nullptr if object not found; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py:293,Performance,cache,caches,293,"""""""; TDirectoryFile inherits from TDirectory the pythonized attr syntax (__getattr__); and WriteObject method.; On the other side, the Get() method is pythonised only in TDirectoryFile.; Thus, the situation is now the following:. 1) __getattr__ : TDirectory --> TDirectoryFile --> TFile; 1.1) caches the returned object for future attempts; 1.2) raises AttributeError if object not found. 2) Get() : TDirectoryFile --> TFile; 2.1) does not cache the returned object; 2.2 returns nullptr if object not found; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py:440,Performance,cache,cache,440,"""""""; TDirectoryFile inherits from TDirectory the pythonized attr syntax (__getattr__); and WriteObject method.; On the other side, the Get() method is pythonised only in TDirectoryFile.; Thus, the situation is now the following:. 1) __getattr__ : TDirectory --> TDirectoryFile --> TFile; 1.1) caches the returned object for future attempts; 1.2) raises AttributeError if object not found. 2) Get() : TDirectoryFile --> TFile; 2.1) does not cache the returned object; 2.2 returns nullptr if object not found; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tfile.py:79,Performance,cache,cache,79,"# A TFile might be storing references to objects retrieved by the user in; # a cache. Make sure the cache is cleaned at exit time rather than having; # to wait for the garbage collector.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tfile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tfile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tfile.py:100,Performance,cache,cache,100,"# A TFile might be storing references to objects retrieved by the user in; # a cache. Make sure the cache is cleaned at exit time rather than having; # to wait for the garbage collector.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tfile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tfile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tfile.py:11,Modifiability,inherit,inherits,11,"""""""; TFile inherits from; - TDirectory the pythonized attr syntax (__getattr__) and WriteObject method.; - TDirectoryFile the pythonized Get method (pythonized only in Python); and defines the __enter__ and __exit__ methods to work as a context manager.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tfile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tfile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tfile.py:71,Usability,usab,usable,71,"# Pythonization for __enter__ and __exit__ methods; # These make TFile usable in a `with` statement as a context manager",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tfile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tfile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tgraph.py:521,Availability,error,error,521,"# Create a composite pythonizor.; #; # A composite is a type of pythonizor, i.e. it is a callable that expects two; # parameters: a class proxy and a string with the name of that class.; # A composite is created with the following parameters:; # - A string to match the class/es to be pythonized; # - A string to match the method/s to be pythonized in the class/es; # - A callable that will post-process the return value of the matched method/s; #; # Here we create a composite that will match TGraph, TGraph2D and their error; # subclasses, and will pythonize their getter methods of the X,Y,Z coordinate; # and error arrays, which in C++ return a pointer to a double.; # The pythonization consists in setting the size of the array that the getter; # method returns, so that it is known in Python and the array is fully usable; # (its length can be obtained, it is iterable).",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tgraph.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tgraph.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tgraph.py:613,Availability,error,error,613,"# Create a composite pythonizor.; #; # A composite is a type of pythonizor, i.e. it is a callable that expects two; # parameters: a class proxy and a string with the name of that class.; # A composite is created with the following parameters:; # - A string to match the class/es to be pythonized; # - A string to match the method/s to be pythonized in the class/es; # - A callable that will post-process the return value of the matched method/s; #; # Here we create a composite that will match TGraph, TGraph2D and their error; # subclasses, and will pythonize their getter methods of the X,Y,Z coordinate; # and error arrays, which in C++ return a pointer to a double.; # The pythonization consists in setting the size of the array that the getter; # method returns, so that it is known in Python and the array is fully usable; # (its length can be obtained, it is iterable).",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tgraph.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tgraph.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tgraph.py:821,Usability,usab,usable,821,"# Create a composite pythonizor.; #; # A composite is a type of pythonizor, i.e. it is a callable that expects two; # parameters: a class proxy and a string with the name of that class.; # A composite is created with the following parameters:; # - A string to match the class/es to be pythonized; # - A string to match the method/s to be pythonized in the class/es; # - A callable that will post-process the return value of the matched method/s; #; # Here we create a composite that will match TGraph, TGraph2D and their error; # subclasses, and will pythonize their getter methods of the X,Y,Z coordinate; # and error arrays, which in C++ return a pointer to a double.; # The pythonization consists in setting the size of the array that the getter; # method returns, so that it is known in Python and the array is fully usable; # (its length can be obtained, it is iterable).",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tgraph.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tgraph.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tobject.py:2,Integrability,Inject,Inject,2,"# Inject comparison operators",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tobject.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tobject.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tobject.py:2,Security,Inject,Inject,2,"# Inject comparison operators",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tobject.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tobject.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py:7,Security,access,access,7,"# Item access",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py:71,Integrability,message,message,71,"# Parameters:; # - idx: index whose type needs to be checked; # - msg: message to show in case of type issue",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py:100,Availability,error,error,100,"# Prevent this new Python proxy from owning the C++ object; # Otherwise we get an 'already deleted' error in; # TList::Clear when the application ends",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py:119,Usability,Clear,Clear,119,"# Prevent this new Python proxy from owning the C++ object; # Otherwise we get an 'already deleted' error in; # TList::Clear when the application ends",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py:55,Security,access,access,55,"# Parameters:; # klass: class to be pythonized; # Item access methods",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py:116,Availability,alive,alive,116,"# Otherwise, SetBranchAddress is expecting a pointer to the address of; # the object, and the pointer needs to stay alive. Therefore, we create; # a container for the pointer and cache it in the original cppyy proxy.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py:179,Performance,cache,cache,179,"# Otherwise, SetBranchAddress is expecting a pointer to the address of; # the object, and the pointer needs to stay alive. Therefore, we create; # a container for the pointer and cache it in the original cppyy proxy.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py:169,Safety,avoid,avoid,169,"""""""; Allow branches to be accessed as attributes of a tree. Allow access to branches/leaves as if they were Python data attributes of; the tree (e.g. mytree.branch). To avoid using the CPyCppyy API, any necessary cast is done here on the; Python side. The GetBranchAttr() function encodes a necessary cast in the; second element of the output tuple, which is a string with the required; type name. Parameters:; self (TTree): The instance of the TTree object from which the attribute is being retrieved.; key (str): The name of the branch to retrieve from the TTree object.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py:26,Security,access,accessed,26,"""""""; Allow branches to be accessed as attributes of a tree. Allow access to branches/leaves as if they were Python data attributes of; the tree (e.g. mytree.branch). To avoid using the CPyCppyy API, any necessary cast is done here on the; Python side. The GetBranchAttr() function encodes a necessary cast in the; second element of the output tuple, which is a string with the required; type name. Parameters:; self (TTree): The instance of the TTree object from which the attribute is being retrieved.; key (str): The name of the branch to retrieve from the TTree object.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py:66,Security,access,access,66,"""""""; Allow branches to be accessed as attributes of a tree. Allow access to branches/leaves as if they were Python data attributes of; the tree (e.g. mytree.branch). To avoid using the CPyCppyy API, any necessary cast is done here on the; Python side. The GetBranchAttr() function encodes a necessary cast in the; second element of the output tuple, which is a string with the required; type name. Parameters:; self (TTree): The instance of the TTree object from which the attribute is being retrieved.; key (str): The name of the branch to retrieve from the TTree object.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py:239,Integrability,inject,inject,239,"# Parameters:; # klass: class to be pythonized; # name: string containing the name of the class; # Pythonizations that are common to TTree and its subclasses.; # To avoid duplicating the same logic in the pythonizors of; # the subclasses, inject the pythonizations for all the target; # classes here.; # Pythonic iterator",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py:165,Safety,avoid,avoid,165,"# Parameters:; # klass: class to be pythonized; # name: string containing the name of the class; # Pythonizations that are common to TTree and its subclasses.; # To avoid duplicating the same logic in the pythonizors of; # the subclasses, inject the pythonizations for all the target; # classes here.; # Pythonic iterator",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py:239,Security,inject,inject,239,"# Parameters:; # klass: class to be pythonized; # name: string containing the name of the class; # Pythonizations that are common to TTree and its subclasses.; # To avoid duplicating the same logic in the pythonizors of; # the subclasses, inject the pythonizations for all the target; # classes here.; # Pythonic iterator",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py:192,Testability,log,logic,192,"# Parameters:; # klass: class to be pythonized; # name: string containing the name of the class; # Pythonizations that are common to TTree and its subclasses.; # To avoid duplicating the same logic in the pythonizors of; # the subclasses, inject the pythonizations for all the target; # classes here.; # Pythonic iterator",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py:250,Integrability,inject,injected,250,"# Parameters:; # klass: class to be pythonized; # TChain needs to be explicitly pythonized because it redefines; # SetBranchAddress in C++. As a consequence, TChain does not; # inherit TTree's pythonization for SetBranchAddress, which; # needs to be injected to TChain too. This is not the case for; # other classes like TNtuple, which will inherit all the; # pythonizations added here for TTree.; # SetBranchAddress",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py:177,Modifiability,inherit,inherit,177,"# Parameters:; # klass: class to be pythonized; # TChain needs to be explicitly pythonized because it redefines; # SetBranchAddress in C++. As a consequence, TChain does not; # inherit TTree's pythonization for SetBranchAddress, which; # needs to be injected to TChain too. This is not the case for; # other classes like TNtuple, which will inherit all the; # pythonizations added here for TTree.; # SetBranchAddress",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py:341,Modifiability,inherit,inherit,341,"# Parameters:; # klass: class to be pythonized; # TChain needs to be explicitly pythonized because it redefines; # SetBranchAddress in C++. As a consequence, TChain does not; # inherit TTree's pythonization for SetBranchAddress, which; # needs to be injected to TChain too. This is not the case for; # other classes like TNtuple, which will inherit all the; # pythonizations added here for TTree.; # SetBranchAddress",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py:250,Security,inject,injected,250,"# Parameters:; # klass: class to be pythonized; # TChain needs to be explicitly pythonized because it redefines; # SetBranchAddress in C++. As a consequence, TChain does not; # inherit TTree's pythonization for SetBranchAddress, which; # needs to be injected to TChain too. This is not the case for; # other classes like TNtuple, which will inherit all the; # pythonizations added here for TTree.; # SetBranchAddress",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py:284,Integrability,inject,injection,284,"'''; Decorator that allows to pythonize C++ classes. To pythonize means to add; some extra behaviour to a C++ class that is used from Python via PyROOT,; so that such a class can be used in an easier / more ""pythonic"" way.; When a pythonization is registered with this decorator, the injection of; the new behaviour in the C++ class is done immediately, if the class has; already been used from the application, or lazily, i.e. only when the class; is first accessed from the application. Args:; class_name (string/iterable[string]): specifies either a single string or; multiple strings, where each string can be either (i) the name of a; C++ class to be pythonized, or (ii) a prefix to match all classes; whose name starts with that prefix.; ns (string): namespace of the classes to be pythonized. Default is the; global namespace (`::`).; is_prefix (boolean): if True, `class_name` contains one or multiple; prefixes, each prefix potentially matching multiple classes.; Default is False.; These are examples of prefixes and namespace and what they match:; - class_name="""", ns=""::"" : all classes in the global namespace.; - class_name=""C"", ns=""::"" : all classes in the global namespace; whose name starts with ""C""; - class_name="""", ns=""NS1::NS2"" : all classes in namespace ""NS1::NS2""; - class_name=""C"", ns=""NS1::NS2"" : all classes in namespace; ""NS1::NS2"" whose name starts with ""C"". Returns:; function: function that receives the user-defined function and; decorates it.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py:284,Security,inject,injection,284,"'''; Decorator that allows to pythonize C++ classes. To pythonize means to add; some extra behaviour to a C++ class that is used from Python via PyROOT,; so that such a class can be used in an easier / more ""pythonic"" way.; When a pythonization is registered with this decorator, the injection of; the new behaviour in the C++ class is done immediately, if the class has; already been used from the application, or lazily, i.e. only when the class; is first accessed from the application. Args:; class_name (string/iterable[string]): specifies either a single string or; multiple strings, where each string can be either (i) the name of a; C++ class to be pythonized, or (ii) a prefix to match all classes; whose name starts with that prefix.; ns (string): namespace of the classes to be pythonized. Default is the; global namespace (`::`).; is_prefix (boolean): if True, `class_name` contains one or multiple; prefixes, each prefix potentially matching multiple classes.; Default is False.; These are examples of prefixes and namespace and what they match:; - class_name="""", ns=""::"" : all classes in the global namespace.; - class_name=""C"", ns=""::"" : all classes in the global namespace; whose name starts with ""C""; - class_name="""", ns=""NS1::NS2"" : all classes in namespace ""NS1::NS2""; - class_name=""C"", ns=""NS1::NS2"" : all classes in namespace; ""NS1::NS2"" whose name starts with ""C"". Returns:; function: function that receives the user-defined function and; decorates it.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py:458,Security,access,accessed,458,"'''; Decorator that allows to pythonize C++ classes. To pythonize means to add; some extra behaviour to a C++ class that is used from Python via PyROOT,; so that such a class can be used in an easier / more ""pythonic"" way.; When a pythonization is registered with this decorator, the injection of; the new behaviour in the C++ class is done immediately, if the class has; already been used from the application, or lazily, i.e. only when the class; is first accessed from the application. Args:; class_name (string/iterable[string]): specifies either a single string or; multiple strings, where each string can be either (i) the name of a; C++ class to be pythonized, or (ii) a prefix to match all classes; whose name starts with that prefix.; ns (string): namespace of the classes to be pythonized. Default is the; global namespace (`::`).; is_prefix (boolean): if True, `class_name` contains one or multiple; prefixes, each prefix potentially matching multiple classes.; Default is False.; These are examples of prefixes and namespace and what they match:; - class_name="""", ns=""::"" : all classes in the global namespace.; - class_name=""C"", ns=""::"" : all classes in the global namespace; whose name starts with ""C""; - class_name="""", ns=""NS1::NS2"" : all classes in namespace ""NS1::NS2""; - class_name=""C"", ns=""NS1::NS2"" : all classes in namespace; ""NS1::NS2"" whose name starts with ""C"". Returns:; function: function that receives the user-defined function and; decorates it.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py:99,Integrability,wrap,wrapper,99,"'''; The real decorator. Accepts a user-provided function and decorates it.; An inner function - a wrapper of the user function - is registered in; cppyy as a pythonizor. Args:; user_pythonizor (function): user-provided function to be decorated.; It implements some pythonization. It can accept two parameters:; the class to be pythonized, i.e. the Python proxy of the class; in which new behaviour can be injected, and optionally the name; of that class (can be used e.g. to do some more complex; filtering). Returns:; function: the user function, after being registered as a; pythonizor.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py:406,Integrability,inject,injected,406,"'''; The real decorator. Accepts a user-provided function and decorates it.; An inner function - a wrapper of the user function - is registered in; cppyy as a pythonizor. Args:; user_pythonizor (function): user-provided function to be decorated.; It implements some pythonization. It can accept two parameters:; the class to be pythonized, i.e. the Python proxy of the class; in which new behaviour can be injected, and optionally the name; of that class (can be used e.g. to do some more complex; filtering). Returns:; function: the user function, after being registered as a; pythonizor.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py:406,Security,inject,injected,406,"'''; The real decorator. Accepts a user-provided function and decorates it.; An inner function - a wrapper of the user function - is registered in; cppyy as a pythonizor. Args:; user_pythonizor (function): user-provided function to be decorated.; It implements some pythonization. It can accept two parameters:; the class to be pythonized, i.e. the Python proxy of the class; in which new behaviour can be injected, and optionally the name; of that class (can be used e.g. to do some more complex; filtering). Returns:; function: the user function, after being registered as a; pythonizor.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py:5,Integrability,Wrap,Wrapper,5,'''; Wrapper function with the parameters that cppyy requires for a; pythonizor function (class proxy and class name). It invokes the; user function only if the current class - a candidate for being; pythonized - matches the `target` argument of the decorator. Args:; klass (class type): cppyy proxy of the class that is the; current candidate to be pythonized.; name (string): name of the class that is the current candidate; to be pythonized.; ''',MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py:16,Availability,error,error,16,"# Propagate the error so that the class lookup that triggered this; # pythonization fails too and the application stops",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py:107,Performance,cache,cached,107,"# If this is a template, pythonize the instances. Note that in; # older cppyy, template instantiations are cached by; # fully-qualified name directly in the namespace, so they are; # covered by the code branch above.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py:28,Availability,redundant,redundant,28,"# Make sure we don't do any redundant pythonization, e.g. if we; # use a version of cppyy that caches both in the namespace and; # in the _instantiations attribute.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py:95,Performance,cache,caches,95,"# Make sure we don't do any redundant pythonization, e.g. if we; # use a version of cppyy that caches both in the namespace and; # in the _instantiations attribute.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py:28,Safety,redund,redundant,28,"# Make sure we don't do any redundant pythonization, e.g. if we; # use a version of cppyy that caches both in the namespace and; # in the _instantiations attribute.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py:87,Security,access,accessed,87,"'''; Finds and returns the proxy object of the `ns` namespace, if it has already; been accessed. Args:; ns (string): a namespace. Returns:; namespace proxy object, if the namespace has already been accessed,; otherwise None.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py:198,Security,access,accessed,198,"'''; Finds and returns the proxy object of the `ns` namespace, if it has already; been accessed. Args:; ns (string): a namespace. Returns:; namespace proxy object, if the namespace has already been accessed,; otherwise None.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py:59,Integrability,inject,injection,59,'''; Registers the ROOT pythonizations with cppyy for lazy injection.; ''',MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py:59,Security,inject,injection,59,'''; Registers the ROOT pythonizations with cppyy for lazy injection.; ''',MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooabsdata.py:30,Energy Efficiency,reduce,reduce,30,"# Redefinition of `RooAbsData.reduce` for keyword arguments.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooabsdata.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooabsdata.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooabsreal.py:63,Availability,alive,alive,63,"# We do the conversion to RooArgSet now, such that we can keep alive; # the normalization set by setting it as an attribute of this; # RooAbsReal.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooabsreal.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooabsreal.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooabsreallvalue.py:37,Modifiability,variab,variable,37,"# Add a Python reference to the plot variable to the RooPlot because; # the plot variable needs to survive at least as long as the plot.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooabsreallvalue.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooabsreallvalue.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooabsreallvalue.py:81,Modifiability,variab,variable,81,"# Add a Python reference to the plot variable to the RooPlot because; # the plot variable needs to survive at least as long as the plot.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooabsreallvalue.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooabsreallvalue.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooargset.py:13,Usability,simpl,simple,13,"# Note: This simple Pythonization caused me days of headache.; # Initially, I was also checking of `len(kwargs) == 0`, but it just; # didn't work. Eventually, I understood that when cppy attempts; # implicit conversion, a magic `__cppyy_no_implicit=True` keyword; # argument is added, hence the `len(kwargs) == 0` check breaks the; # implicit conversion!",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooargset.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooargset.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py:91,Modifiability,variab,variable,91,"# Returns a list with a Bool for each dimension of the histogram that; # flags whether the variable in this dimension is a RooAbsCategory.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py:25,Availability,error,errors,25,"# Returns the low weight errors as numpy arrays.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py:26,Availability,error,errors,26,"# Returns the high weight errors as numpy arrays.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py:34,Availability,error,errors,34,"# Returns the low and high weight errors as numpy arrays.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py:67,Energy Efficiency,adapt,adapt,67,"# name for internal binning that is created for the RooDataHist to adapt",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py:67,Modifiability,adapt,adapt,67,"# name for internal binning that is created for the RooDataHist to adapt",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py:82,Integrability,interface,interface,82,"# some reverse-computation that can't be avoided with the current C++ RooDataHist interface",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py:41,Safety,avoid,avoided,41,"# some reverse-computation that can't be avoided with the current C++ RooDataHist interface",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py:177,Modifiability,variab,variables,177,"""""""Create a RooDataSet from a dictionary of numpy arrays.; Args:; data (dict): Dictionary with strings as keys and numpy arrays as; values, to be imported into the RooDataSet.; variables (RooArgSet, or list/tuple of RooAbsArgs):; Specification of the variables in the RooDataSet, will be; forwarded to the RooDataSet constructor. Both real values and; categories are supported.; name (str): Name of the RooDataSet, `None` is equivalent to an; empty string.; title (str): Title of the RooDataSet, `None` is equivalent to an; empty string.; weight_name (str): Key of the array in `data` that will be used for; the dataset weights. Returns:; RooDataSet; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py:251,Modifiability,variab,variables,251,"""""""Create a RooDataSet from a dictionary of numpy arrays.; Args:; data (dict): Dictionary with strings as keys and numpy arrays as; values, to be imported into the RooDataSet.; variables (RooArgSet, or list/tuple of RooAbsArgs):; Specification of the variables in the RooDataSet, will be; forwarded to the RooDataSet constructor. Both real values and; categories are supported.; name (str): Name of the RooDataSet, `None` is equivalent to an; empty string.; title (str): Title of the RooDataSet, `None` is equivalent to an; empty string.; weight_name (str): Key of the array in `data` that will be used for; the dataset weights. Returns:; RooDataSet; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py:30,Integrability,message,message,30,"""""""Log a string to the RooFit message log for the WARNING level on; the DataHandling topic.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py:3,Testability,Log,Log,3,"""""""Log a string to the RooFit message log for the WARNING level on; the DataHandling topic.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py:38,Testability,log,log,38,"""""""Log a string to the RooFit message log for the WARNING level on; the DataHandling topic.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py:8,Availability,mask,mask,8,"# Get a mask that filters out all entries that are outside the variable definition range",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py:63,Modifiability,variab,variable,63,"# Get a mask that filters out all entries that are outside the variable definition range",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py:51,Availability,mask,mask,51,"# If all entries are in the range, we don't need a mask",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py:341,Modifiability,variab,variable,341,"""""""Export a RooDataSet to a dictionary of numpy arrays. Args:; copy (bool): If False, the data will not be copied. Use with; caution, as the numpy arrays and the RooAbsData now; own the same memory. If the dataset uses a; RooTreeDataStore, there will always be a copy and the; copy argument is ignored. Returns:; dict: A dictionary with the variable or weight names as keys and; the numpy arrays as values.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py:108,Modifiability,variab,variables,108,"""""""Create a RooDataSet from a pandas DataFrame.; Args:; df (pandas.DataFrame): Pandas DataFrame to import.; variables (RooArgSet, or list/tuple of RooAbsArgs):; Specification of the variables in the RooDataSet, will be; forwarded to the RooDataSet constructor. Both real values and; categories are supported.; name (str): Name of the RooDataSet, `None` is equivalent to an; empty string.; title (str): Title of the RooDataSet, `None` is equivalent to an; empty string.; weight_name (str): Key of the array in `data` that will be used for; the dataset weights. Returns:; RooDataSet; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py:182,Modifiability,variab,variables,182,"""""""Create a RooDataSet from a pandas DataFrame.; Args:; df (pandas.DataFrame): Pandas DataFrame to import.; variables (RooArgSet, or list/tuple of RooAbsArgs):; Specification of the variables in the RooDataSet, will be; forwarded to the RooDataSet constructor. Both real values and; categories are supported.; name (str): Name of the RooDataSet, `None` is equivalent to an; empty string.; title (str): Title of the RooDataSet, `None` is equivalent to an; empty string.; weight_name (str): Key of the array in `data` that will be used for; the dataset weights. Returns:; RooDataSet; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py:238,Modifiability,variab,variable,238,"""""""Export a RooDataSet to a pandas DataFrame. Args:. Note:; Pandas copies the data from the numpy arrays when creating a; DataFrame. That's why we can disable copying in the to_numpy call. Returns:; pandas.DataFrame: A dataframe with the variable or weight names as; column names and the a row for each variable or; weight in the dataset.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py:303,Modifiability,variab,variable,303,"""""""Export a RooDataSet to a pandas DataFrame. Args:. Note:; Pandas copies the data from the numpy arrays when creating a; DataFrame. That's why we can disable copying in the to_numpy call. Returns:; pandas.DataFrame: A dataframe with the variable or weight names as; column names and the a row for each variable or; weight in the dataset.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooglobalfunc.py:5,Integrability,Wrap,Wrap,5,"""""""; Wrap an arbitrary function defined in Python or C++. If you're wrapping a Python function, it must take numpy arrays of type; float64 as input and output types. Parameters:; - name (str): Name of the function.; - func (callable): Function that defines the function.; - variables (list): List of variables to be used in the function. Returns:; - RooAbsReal wrapping the given function; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooglobalfunc.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooglobalfunc.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooglobalfunc.py:68,Integrability,wrap,wrapping,68,"""""""; Wrap an arbitrary function defined in Python or C++. If you're wrapping a Python function, it must take numpy arrays of type; float64 as input and output types. Parameters:; - name (str): Name of the function.; - func (callable): Function that defines the function.; - variables (list): List of variables to be used in the function. Returns:; - RooAbsReal wrapping the given function; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooglobalfunc.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooglobalfunc.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooglobalfunc.py:361,Integrability,wrap,wrapping,361,"""""""; Wrap an arbitrary function defined in Python or C++. If you're wrapping a Python function, it must take numpy arrays of type; float64 as input and output types. Parameters:; - name (str): Name of the function.; - func (callable): Function that defines the function.; - variables (list): List of variables to be used in the function. Returns:; - RooAbsReal wrapping the given function; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooglobalfunc.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooglobalfunc.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooglobalfunc.py:274,Modifiability,variab,variables,274,"""""""; Wrap an arbitrary function defined in Python or C++. If you're wrapping a Python function, it must take numpy arrays of type; float64 as input and output types. Parameters:; - name (str): Name of the function.; - func (callable): Function that defines the function.; - variables (list): List of variables to be used in the function. Returns:; - RooAbsReal wrapping the given function; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooglobalfunc.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooglobalfunc.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooglobalfunc.py:300,Modifiability,variab,variables,300,"""""""; Wrap an arbitrary function defined in Python or C++. If you're wrapping a Python function, it must take numpy arrays of type; float64 as input and output types. Parameters:; - name (str): Name of the function.; - func (callable): Function that defines the function.; - variables (list): List of variables to be used in the function. Returns:; - RooAbsReal wrapping the given function; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooglobalfunc.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooglobalfunc.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py:12,Security,access,accessing,12,"# To enable accessing objects in the RooWorkspace with dictionary-like syntax.; # The key is passed to the general `RooWorkspace::obj()` function.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py:14,Modifiability,variab,variables,14,"# Initializes variables",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py:23,Availability,error,error,23,"# Else raises a Syntax error",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py:391,Availability,error,error,391,"# Many people pythonized the RooWorkspace themselves, by adding a new; # attribute `_import` that calls getattr(self, ""import"") under the; # hood. However, `_import` is now the reference to the original cppyy; # overload, and resetting it with a wrapper around `import` would cause; # infinite recursions! We prevent resetting any import-related function; # here, which results in a clearer error to the user than an infinite; # call stack involving the internal pythonization code.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py:246,Integrability,wrap,wrapper,246,"# Many people pythonized the RooWorkspace themselves, by adding a new; # attribute `_import` that calls getattr(self, ""import"") under the; # hood. However, `_import` is now the reference to the original cppyy; # overload, and resetting it with a wrapper around `import` would cause; # infinite recursions! We prevent resetting any import-related function; # here, which results in a clearer error to the user than an infinite; # call stack involving the internal pythonization code.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py:383,Usability,clear,clearer,383,"# Many people pythonized the RooWorkspace themselves, by adding a new; # attribute `_import` that calls getattr(self, ""import"") under the; # hood. However, `_import` is now the reference to the original cppyy; # overload, and resetting it with a wrapper around `import` would cause; # infinite recursions! We prevent resetting any import-related function; # here, which results in a clearer error to the user than an infinite; # call stack involving the internal pythonization code.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/__init__.py:37,Security,access,access,37,"# create a dictionary for convenient access to python classes",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:238,Performance,load,loaded,238,"""""""; Generate a template for the RBatchGenerator based on the given; RDataFrame and columns. Args:; file_name (str): name of the root file.; tree_name (str): name of the tree in the root file.; columns (list[str]): Columns that should be loaded.; Defaults to loading all columns; in the given RDataFrame; max_vec_sizes (list[int]): The length of each vector based column. Returns:; template (str): Template for the RBatchGenerator; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:259,Performance,load,loading,259,"""""""; Generate a template for the RBatchGenerator based on the given; RDataFrame and columns. Args:; file_name (str): name of the root file.; tree_name (str): name of the tree in the root file.; columns (list[str]): Columns that should be loaded.; Defaults to loading all columns; in the given RDataFrame; max_vec_sizes (list[int]): The length of each vector based column. Returns:; template (str): Template for the RBatchGenerator; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:3,Integrability,Wrap,Wrapper,3,"""""""Wrapper around the Cpp RBatchGenerator. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk; size results in better randomization, but higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply during loading. If not given, no filters; are applied.; max_vec_sizes (dict[std, int], optional):; Size of each column that consists of vectors.; Required when using vector based columns.; vec_padding (int):; Value to pad vectors with if the vector is smaller; than the given max vector length. Defaults is 0; target (str, optional): Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given.; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be between 0 and 1. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used.; shuffle (bool):; Batches consist of random events and are shuffled every epoch.; Defaults to True.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:232,Performance,load,loaded,232,"""""""Wrapper around the Cpp RBatchGenerator. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk; size results in better randomization, but higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply during loading. If not given, no filters; are applied.; max_vec_sizes (dict[std, int], optional):; Size of each column that consists of vectors.; Required when using vector based columns.; vec_padding (int):; Value to pad vectors with if the vector is smaller; than the given max vector length. Defaults is 0; target (str, optional): Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given.; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be between 0 and 1. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used.; shuffle (bool):; Batches consist of random events and are shuffled every epoch.; Defaults to True.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:486,Performance,load,loading,486,"""""""Wrapper around the Cpp RBatchGenerator. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk; size results in better randomization, but higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply during loading. If not given, no filters; are applied.; max_vec_sizes (dict[std, int], optional):; Size of each column that consists of vectors.; Required when using vector based columns.; vec_padding (int):; Value to pad vectors with if the vector is smaller; than the given max vector length. Defaults is 0; target (str, optional): Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given.; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be between 0 and 1. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used.; shuffle (bool):; Batches consist of random events and are shuffled every epoch.; Defaults to True.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1146,Performance,load,loaded,1146,"""""""Wrapper around the Cpp RBatchGenerator. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk; size results in better randomization, but higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply during loading. If not given, no filters; are applied.; max_vec_sizes (dict[std, int], optional):; Size of each column that consists of vectors.; Required when using vector based columns.; vec_padding (int):; Value to pad vectors with if the vector is smaller; than the given max vector length. Defaults is 0; target (str, optional): Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given.; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be between 0 and 1. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used.; shuffle (bool):; Batches consist of random events and are shuffled every epoch.; Defaults to True.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1017,Security,validat,validation,1017,"""""""Wrapper around the Cpp RBatchGenerator. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk; size results in better randomization, but higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply during loading. If not given, no filters; are applied.; max_vec_sizes (dict[std, int], optional):; Size of each column that consists of vectors.; Required when using vector based columns.; vec_padding (int):; Value to pad vectors with if the vector is smaller; than the given max vector length. Defaults is 0; target (str, optional): Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given.; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be between 0 and 1. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used.; shuffle (bool):; Batches consist of random events and are shuffled every epoch.; Defaults to True.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:82,Safety,safe,safety,82,"# The RBatchGenerator will create a separate C++ thread for I/O.; # Enable thread safety in ROOT from here, to make sure there is no; # interference between the main Python thread (which might call into; # cling via cppyy) and the I/O thread.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:22,Availability,avail,available,22,"# Return a batch when available",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:45,Performance,load,loading,45,"# Context that activates and deactivates the loading thread of the Cpp class; # This ensures that the thread will always be deleted properly",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:13,Performance,load,loading,13,"""""""Start the loading of training batches""""""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:12,Performance,load,loading,12,"""""""Stop the loading of batches""""""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:13,Performance,load,loading,13,"""""""Start the loading of batches and Yield the results. Yields:; Union[np.NDArray, torch.Tensor]: A batch of data; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:34,Security,validat,validation,34,"""""""; A generator that returns the validation batches of the given base; generator. NOTE: The ValidationRBatchGenerator only returns batches; if the training has been run. Args:; base_generator (BaseGenerator):; The base connection to the Cpp code; conversion_function (Callable[RTensor, np.NDArray|torch.Tensor]):; Function that converts a given RTensor into a python batch; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:93,Security,Validat,ValidationRBatchGenerator,93,"""""""; A generator that returns the validation batches of the given base; generator. NOTE: The ValidationRBatchGenerator only returns batches; if the training has been run. Args:; base_generator (BaseGenerator):; The base connection to the Cpp code; conversion_function (Callable[RTensor, np.NDArray|torch.Tensor]):; Function that converts a given RTensor into a python batch; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:20,Security,validat,validation,20,"""""""Loop through the validation batches. Yields:; Union[np.NDArray, torch.Tensor]: A batch of data; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:364,Performance,load,loaded,364,"""""""; Return two batch generators based on the given ROOT file and tree.; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1140,Performance,load,loaded,1140,"""""""; Return two batch generators based on the given ROOT file and tree.; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1387,Performance,load,load,1387,"""""""; Return two batch generators based on the given ROOT file and tree.; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1422,Performance,load,load,1422,"""""""; Return two batch generators based on the given ROOT file and tree.; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1481,Performance,load,loaded,1481,"""""""; Return two batch generators based on the given ROOT file and tree.; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:155,Security,validat,validation,155,"""""""; Return two batch generators based on the given ROOT file and tree.; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1011,Security,validat,validation,1011,"""""""; Return two batch generators based on the given ROOT file and tree.; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1317,Security,Validat,ValidationRBatchGenerator,1317,"""""""; Return two batch generators based on the given ROOT file and tree.; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1427,Security,validat,validation,1427,"""""""; Return two batch generators based on the given ROOT file and tree.; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1457,Security,validat,validation,1457,"""""""; Return two batch generators based on the given ROOT file and tree.; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1530,Security,validat,validation,1530,"""""""; Return two batch generators based on the given ROOT file and tree.; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:366,Performance,load,loaded,366,"""""""; Return two Tensorflow Datasets based on the given ROOT file and tree; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1142,Performance,load,loaded,1142,"""""""; Return two Tensorflow Datasets based on the given ROOT file and tree; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1389,Performance,load,load,1389,"""""""; Return two Tensorflow Datasets based on the given ROOT file and tree; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1424,Performance,load,load,1424,"""""""; Return two Tensorflow Datasets based on the given ROOT file and tree; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1483,Performance,load,loaded,1483,"""""""; Return two Tensorflow Datasets based on the given ROOT file and tree; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:157,Security,validat,validation,157,"""""""; Return two Tensorflow Datasets based on the given ROOT file and tree; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1013,Security,validat,validation,1013,"""""""; Return two Tensorflow Datasets based on the given ROOT file and tree; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1319,Security,Validat,ValidationRBatchGenerator,1319,"""""""; Return two Tensorflow Datasets based on the given ROOT file and tree; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1429,Security,validat,validation,1429,"""""""; Return two Tensorflow Datasets based on the given ROOT file and tree; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1459,Security,validat,validation,1459,"""""""; Return two Tensorflow Datasets based on the given ROOT file and tree; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1532,Security,validat,validation,1532,"""""""; Return two Tensorflow Datasets based on the given ROOT file and tree; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:7,Security,access,access,7,"# Give access to the columns function of the training set",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:7,Security,access,access,7,"# Give access to the columns function of the validation set",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:45,Security,validat,validation,45,"# Give access to the columns function of the validation set",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:366,Performance,load,loaded,366,"""""""; Return two Tensorflow Datasets based on the given ROOT file and tree; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1142,Performance,load,loaded,1142,"""""""; Return two Tensorflow Datasets based on the given ROOT file and tree; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1389,Performance,load,load,1389,"""""""; Return two Tensorflow Datasets based on the given ROOT file and tree; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1424,Performance,load,load,1424,"""""""; Return two Tensorflow Datasets based on the given ROOT file and tree; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1483,Performance,load,loaded,1483,"""""""; Return two Tensorflow Datasets based on the given ROOT file and tree; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:157,Security,validat,validation,157,"""""""; Return two Tensorflow Datasets based on the given ROOT file and tree; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1013,Security,validat,validation,1013,"""""""; Return two Tensorflow Datasets based on the given ROOT file and tree; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1319,Security,Validat,ValidationRBatchGenerator,1319,"""""""; Return two Tensorflow Datasets based on the given ROOT file and tree; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1429,Security,validat,validation,1429,"""""""; Return two Tensorflow Datasets based on the given ROOT file and tree; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1459,Security,validat,validation,1459,"""""""; Return two Tensorflow Datasets based on the given ROOT file and tree; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:1532,Security,validat,validation,1532,"""""""; Return two Tensorflow Datasets based on the given ROOT file and tree; The first generator returns training batches, while the second generator; returns validation batches. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk size; results in better randomization, but also higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply. If not given, no filters are applied.; max_vec_sizes (list[int], optional):; Size of each column that consists of vectors.; Required when using vector based columns; target (str, optional):; Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be from 0.0 to 1.0. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used; shuffle (bool):; randomize the training batches every epoch. Defaults to True. Returns:; Tuple[TrainRBatchGenerator, ValidationRBatchGenerator]:; Two generators are returned. One used to load training batches,; and one to load validation batches. NOTE: the validation batches; are loaded during the training. Before training, the validation; generator will return no batches.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:183,Deployability,update,update,183,"""""""; Get the activation function for the model. Parameters:; model: The graph_nets' component model to extract the activation function from.; The component model can be either of the update functions for; nodes, edges or globals. Returns:; The activation function enum value.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:237,Deployability,update,update,237,"""""""; Create an MLP model and add it to the GNN Initializer. Parameters:; gin: The GNN Initializer to which the model will be added.; model: The model extracted from graph_nets's GNN component; function_target: Target for the function to update either of nodes, edges or globals; graph_type: The type of the graph, i.e. GNN or GraphIndependent. """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:240,Deployability,update,update,240,"""""""; Create an Linear model and add it to the GNN Initializer. Parameters:; gin: The GNN Initializer to which the model will be added.; model: The model extracted from graph_nets's GNN component; function_target: Target for the function to update either of nodes, edges or globals; graph_type: The type of the graph, i.e. GNN or GraphIndependent. """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:287,Deployability,update,update,287,"""""""; Add a LayerNormalization operator to the particular function target; in the Graph Initializer. Parameters:; gin: The GNN Initializer to which the LayerNorm operator will be added; module_layer: Extracted LayerNorm from graph_nets' model; function_target: Target for the function to update either of nodes, edges or globals. """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:295,Deployability,update,update,295,"""""""; Add weights to respective function targets, either of nodes, edges or globals. Parameters:; gin: The GNN Initializer to which the weights will be added; weights: Weight information, containing the names, shapes and values of initialized tensors; function_target: Target for the function to update either of nodes, edges or globals. """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:139,Energy Efficiency,reduce,reducer,139,"""""""; Add aggregate function to the Graph Initializer. Parameters:; gin: The GNN Initializer to which the Aggregate function will be added; reducer: Specifies the means of aggregate, i.e. sum or mean of supplied values; relation: Specifies the relation of aggregate, i.e. Node-Edge, Global-Edge or Global-Node. """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:9,Deployability,update,update,9,"""""""; Add update function for respective function target, either of nodes, edges or globals; based on the supplied component_model. Parameters:; gin: The GNN Initializer to which the update function will be added; component_model: The update function to add, either of MLP or Sequential; graph_type: The type of the graph, i.e. GNN or GraphIndependent; function_target: Target for the function to update either of nodes, edges or globals. """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:182,Deployability,update,update,182,"""""""; Add update function for respective function target, either of nodes, edges or globals; based on the supplied component_model. Parameters:; gin: The GNN Initializer to which the update function will be added; component_model: The update function to add, either of MLP or Sequential; graph_type: The type of the graph, i.e. GNN or GraphIndependent; function_target: Target for the function to update either of nodes, edges or globals. """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:234,Deployability,update,update,234,"""""""; Add update function for respective function target, either of nodes, edges or globals; based on the supplied component_model. Parameters:; gin: The GNN Initializer to which the update function will be added; component_model: The update function to add, either of MLP or Sequential; graph_type: The type of the graph, i.e. GNN or GraphIndependent; function_target: Target for the function to update either of nodes, edges or globals. """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:396,Deployability,update,update,396,"""""""; Add update function for respective function target, either of nodes, edges or globals; based on the supplied component_model. Parameters:; gin: The GNN Initializer to which the update function will be added; component_model: The update function to add, either of MLP or Sequential; graph_type: The type of the graph, i.e. GNN or GraphIndependent; function_target: Target for the function to update either of nodes, edges or globals. """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:227,Deployability,update,update,227,"""""""; Wrapper class for graph_nets' GNN model;s parsing and inference generation. graph_nets' GNN model comprises of three components, the nodes, edges and globals.; The entire model and its inference is based on the respective update functions,; and aggregate function with other components.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:5,Integrability,Wrap,Wrapper,5,"""""""; Wrapper class for graph_nets' GNN model;s parsing and inference generation. graph_nets' GNN model comprises of three components, the nodes, edges and globals.; The entire model and its inference is based on the respective update functions,; and aggregate function with other components.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:18,Deployability,update,update,18,"# adding the node update function",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:18,Deployability,update,update,18,"# adding the edge update function",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:20,Deployability,update,update,20,"# adding the global update function",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:5,Integrability,Wrap,Wrapper,5,"""""""; Wrapper class for graph_nets' GraphIndependent model's parsing and inference generation. graph_nets' GraphIndependent model is similar to the GNN implementation, with the; difference being that it has no aggregate function. GraphIndependent is useful; for independent transformation on the graph data. """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:18,Deployability,update,update,18,"# adding the node update function; # when an update is present in graph_nets, the update function has the _model attribute; # otherwise it is just a simple function defining output = input.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:45,Deployability,update,update,45,"# adding the node update function; # when an update is present in graph_nets, the update function has the _model attribute; # otherwise it is just a simple function defining output = input.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:82,Deployability,update,update,82,"# adding the node update function; # when an update is present in graph_nets, the update function has the _model attribute; # otherwise it is just a simple function defining output = input.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:149,Usability,simpl,simple,149,"# adding the node update function; # when an update is present in graph_nets, the update function has the _model attribute; # otherwise it is just a simple function defining output = input.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:18,Deployability,update,update,18,"# adding the edge update function",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:20,Deployability,update,update,20,"# adding the global update function",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rbdt.py:69,Availability,error,error-handling,69,"# As fall-through we go to the original compute function and use the error-handling from cppyy",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rbdt.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rbdt.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py:12,Integrability,interface,interface,12,"# Get array interface of object",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py:22,Integrability,interface,interface,22,"""""""; Return the array interface dictionary. Parameters:; self: RTensor object; Returns:; Dictionary following the Numpy array interface specifications; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py:126,Integrability,interface,interface,126,"""""""; Return the array interface dictionary. Parameters:; self: RTensor object; Returns:; Dictionary following the Numpy array interface specifications; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py:140,Security,access,accessed,140,"# Numpy breaks for data pointer of 0 even though the array is empty.; # We set the pointer to 1 but the value itself is arbitrary and never accessed.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py:22,Integrability,interface,interface,22,"""""""; Attach the array interface as property if the data-type of the RTensor; elements is one of the supported basic types. Parameters:; klass: class to be pythonized; name: string containing the name of the class; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py:13,Security,access,access,13,"# Otherwise, access element by array of indices",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py:115,Integrability,interface,interface,115,"# Parameters:; # klass: class to be pythonized; # name: string containing the name of the class; # Add numpy array interface",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_tree_inference.py:216,Deployability,update,updater,216,"""""""Get base score from an XGBoost sklearn estimator. Copy-pasted from XGBoost unit test code. See also:; * https://github.com/dmlc/xgboost/blob/a99bb38bd2762e35e6a1673a0c11e09eddd8e723/python-package/xgboost/testing/updater.py#L13; * https://github.com/dmlc/xgboost/issues/9347; * https://discuss.xgboost.ai/t/how-to-get-base-score-from-trained-booster/3192; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_tree_inference.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_tree_inference.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_tree_inference.py:83,Testability,test,test,83,"""""""Get base score from an XGBoost sklearn estimator. Copy-pasted from XGBoost unit test code. See also:; * https://github.com/dmlc/xgboost/blob/a99bb38bd2762e35e6a1673a0c11e09eddd8e723/python-package/xgboost/testing/updater.py#L13; * https://github.com/dmlc/xgboost/issues/9347; * https://discuss.xgboost.ai/t/how-to-get-base-score-from-trained-booster/3192; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_tree_inference.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_tree_inference.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_tree_inference.py:208,Testability,test,testing,208,"""""""Get base score from an XGBoost sklearn estimator. Copy-pasted from XGBoost unit test code. See also:; * https://github.com/dmlc/xgboost/blob/a99bb38bd2762e35e6a1673a0c11e09eddd8e723/python-package/xgboost/testing/updater.py#L13; * https://github.com/dmlc/xgboost/issues/9347; * https://discuss.xgboost.ai/t/how-to-get-base-score-from-trained-booster/3192; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_tree_inference.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_tree_inference.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/__init__.py:16,Availability,avail,available,16,"#this should be available only when xgboost is there ?; # We probably don't need a protection here since the code is run only when there is xgboost",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/__init__.py:37,Security,access,access,37,"# create a dictionary for convenient access to python classes",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/__init__.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/__init__.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/CPPInstancePyz.cxx:39,Availability,error,error,39,"// use the PyString macro's to by-pass error checking; do not adopt the buffer,; // as the local TBufferFile can go out of scope (there is no copying)",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/CPPInstancePyz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/CPPInstancePyz.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/CPPInstancePyz.cxx:365,Integrability,wrap,wrapped,365,"////////////////////////////////////////////////////////////////////////////; /// \brief Set __reduce__ attribute for CPPInstance objects; /// \param[in] self Always null, since this is a module function.; /// \param[in] args Pointer to a Python tuple object containing the arguments; /// received from Python.; ///; /// The C++ function op_reduce defined above is wrapped in a Python method; /// so that it can be injected in CPPInstance",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/CPPInstancePyz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/CPPInstancePyz.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/CPPInstancePyz.cxx:415,Integrability,inject,injected,415,"////////////////////////////////////////////////////////////////////////////; /// \brief Set __reduce__ attribute for CPPInstance objects; /// \param[in] self Always null, since this is a module function.; /// \param[in] args Pointer to a Python tuple object containing the arguments; /// received from Python.; ///; /// The C++ function op_reduce defined above is wrapped in a Python method; /// so that it can be injected in CPPInstance",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/CPPInstancePyz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/CPPInstancePyz.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/CPPInstancePyz.cxx:415,Security,inject,injected,415,"////////////////////////////////////////////////////////////////////////////; /// \brief Set __reduce__ attribute for CPPInstance objects; /// \param[in] self Always null, since this is a module function.; /// \param[in] args Pointer to a Python tuple object containing the arguments; /// received from Python.; ///; /// The C++ function op_reduce defined above is wrapped in a Python method; /// so that it can be injected in CPPInstance",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/CPPInstancePyz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/CPPInstancePyz.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/GenericPyz.cxx:95,Performance,load,loaded,95,"// We take as unique identifier the declId of the class to; // treat the case where a class is loaded, an instance printed,; // the class unloaded and reloaded with changes.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/GenericPyz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/GenericPyz.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/GenericPyz.cxx:384,Usability,user-friendly,user-friendly,384,"////////////////////////////////////////////////////////////////////////////; /// \brief Add pretty printing pythonization; /// \param[in] self Always null, since this is a module function.; /// \param[in] args Pointer to a Python tuple object containing the arguments; /// received from Python.; ///; /// This function adds the following pythonizations to print the object more; /// user-friendly than cppyy by using the output of cling::printValue as the; /// return value of the special method __str__.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/GenericPyz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/GenericPyz.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:47,Integrability,interface,interface,47,"// namespace PyROOT; // Methods offered by the interface",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/PyROOTModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/PyROOTModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:24,Safety,abort,abort,24,"// signal policy: don't abort interpreter in interactive mode",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/PyROOTModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/PyROOTModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:3,Integrability,inject,inject,3,"// inject ROOT namespace for convenience",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/PyROOTModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/PyROOTModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:3,Security,inject,inject,3,"// inject ROOT namespace for convenience",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/PyROOTModule.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/PyROOTModule.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx:104,Availability,error,error,104,"////////////////////////////////////////////////////////////////////////////; /// \brief Translate ROOT error/warning to Python.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx:217,Availability,error,error,217,"// This warning might be triggered while holding the ROOT lock, while; // some other thread is holding the GIL and waiting for the ROOT lock.; // That will trigger a deadlock.; // So if ROOT is in MT mode, use ROOT's error handler that doesn't take; // the GIL.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx:39,Integrability,depend,depending,39,"// Either printout or raise exception, depending on user settings",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx:143,Availability,error,error,143,"////////////////////////////////////////////////////////////////////////////; /// \brief Install the ROOT message handler which will turn ROOT error; /// messages into Python exceptions.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx:89,Deployability,Install,Install,89,"////////////////////////////////////////////////////////////////////////////; /// \brief Install the ROOT message handler which will turn ROOT error; /// messages into Python exceptions.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx:106,Integrability,message,message,106,"////////////////////////////////////////////////////////////////////////////; /// \brief Install the ROOT message handler which will turn ROOT error; /// messages into Python exceptions.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx:154,Integrability,message,messages,154,"////////////////////////////////////////////////////////////////////////////; /// \brief Install the ROOT message handler which will turn ROOT error; /// messages into Python exceptions.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx:22,Security,access,accessing,22,"// Prevent crashes on accessing history",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx:111,Deployability,Install,Install,111,"// unnamed namespace; ////////////////////////////////////////////////////////////////////////////; /// \brief Install a method hook for sending events to the GUI.; /// \param[in] self Always null, since this is a module function.; /// \param[in] args Pointer to an empty Python tuple.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/RPyROOTApplication.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TClassPyz.cxx:3,Performance,Perform,Perform,3,"// Perform actual cast - calls default implementation of DynamicCast",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/TClassPyz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TClassPyz.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TClassPyz.cxx:75,Availability,Down,Downcast,75,"// Now use binding to return a usable class. Upcast: result is a base.; // Downcast: result is a derived.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/TClassPyz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TClassPyz.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TClassPyz.cxx:31,Usability,usab,usable,31,"// Now use binding to return a usable class. Upcast: result is a base.; // Downcast: result is a derived.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/TClassPyz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TClassPyz.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TMemoryRegulator.h:724,Availability,avail,available,724,"//////////////////////////////////////////////////////////////////////////; // //; // TMemoryRegulator //; // //; // Sets hooks in Cppyy's MemoryRegulator to keep track of the TObjects //; // that are constructed and destructed. For those objects, a map is //; // filled, where the key is the address of the object and the value is //; // the class to which the object belongs. //; // //; // The TMemoryRegulator object, created in PyROOTWrapper.cxx, is added //; // to the list of cleanups and its RecursiveRemove method is called by //; // ROOT to manage the memory of TObjects being deleted. //; // In RecursiveRemove, the object being deleted is already a TNamed, so //; // the information about its actual class is not available anymore. //; // To solve the problem, the map above is used to know the class of the //; // object, so that Cppyy's RecursiveRemove can be called passing the //; // class as argument. //; //////////////////////////////////////////////////////////////////////////; // Bindings; // CPyCppyy.h must be go first, since it includes Python.h, which must be; // included before any standard header",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/TMemoryRegulator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TMemoryRegulator.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TMemoryRegulator.h:554,Safety,safe,safe,554,"/// Manages TObject-derived objects created in a PyROOT application; ///; /// This class is responsible to keep track of the creation of the objects; /// that need further memory management within ROOT. The `ClearProxiedObjects`; /// function is only called at PyROOT shutdown time. The `CallCppyyRecursiveRemove`; /// is called as part of the global list of cleanups object destruction.; ///; /// This class is intentionally not derived from TObject. See the; /// `PyROOT::RegulatorCleanup` class for more info.; ///; /// \note This class is not thread-safe on its own. We create one thread-local; /// object in PyROOTWrapper.cxx.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/TMemoryRegulator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TMemoryRegulator.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TMemoryRegulator.h:208,Usability,Clear,ClearProxiedObjects,208,"/// Manages TObject-derived objects created in a PyROOT application; ///; /// This class is responsible to keep track of the creation of the objects; /// that need further memory management within ROOT. The `ClearProxiedObjects`; /// function is only called at PyROOT shutdown time. The `CallCppyyRecursiveRemove`; /// is called as part of the global list of cleanups object destruction.; ///; /// This class is intentionally not derived from TObject. See the; /// `PyROOT::RegulatorCleanup` class for more info.; ///; /// \note This class is not thread-safe on its own. We create one thread-local; /// object in PyROOTWrapper.cxx.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/TMemoryRegulator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TMemoryRegulator.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TMemoryRegulator.h:31,Integrability,inject,inject,31,"/// A TObject-derived class to inject the memory regulation logic in the ROOT list of cleanups.; ///; /// The purpose of this class is to keep the responsibilities separate between; /// the TMemoryRegulator logic and the rest of ROOT.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/TMemoryRegulator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TMemoryRegulator.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TMemoryRegulator.h:31,Security,inject,inject,31,"/// A TObject-derived class to inject the memory regulation logic in the ROOT list of cleanups.; ///; /// The purpose of this class is to keep the responsibilities separate between; /// the TMemoryRegulator logic and the rest of ROOT.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/TMemoryRegulator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TMemoryRegulator.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TMemoryRegulator.h:60,Testability,log,logic,60,"/// A TObject-derived class to inject the memory regulation logic in the ROOT list of cleanups.; ///; /// The purpose of this class is to keep the responsibilities separate between; /// the TMemoryRegulator logic and the rest of ROOT.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/TMemoryRegulator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TMemoryRegulator.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TMemoryRegulator.h:207,Testability,log,logic,207,"/// A TObject-derived class to inject the memory regulation logic in the ROOT list of cleanups.; ///; /// The purpose of this class is to keep the responsibilities separate between; /// the TMemoryRegulator logic and the rest of ROOT.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/TMemoryRegulator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TMemoryRegulator.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TPyDispatcher.cxx:236,Deployability,install,install,236,"//______________________________________________________________________________; // Python callback dispatcher; // ==========================; //; // The TPyDispatcher class acts as a functor that can be used for TFn's and GUIs; // to install callbacks from CINT.; //- constructors/destructor --------------------------------------------------",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/TPyDispatcher.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TPyDispatcher.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TTreePyz.cxx:32,Availability,failure,failure,32,"// try leaf, otherwise indicate failure by returning a typed null-object",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/TTreePyz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TTreePyz.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TTreePyz.cxx:194,Integrability,wrap,wrapped,194,"// Allow access to branches/leaves as if they were data members Returns a; // Python tuple where the first element is either the desired CPyCppyy proxy,; // or an address that still needs to be wrapped by the caller in a proxy using; // cppyy.ll.cast. In the latter case, the second tuple element is the target; // type name. Otherwise, the second element is an empty string.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/TTreePyz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TTreePyz.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TTreePyz.cxx:9,Security,access,access,9,"// Allow access to branches/leaves as if they were data members Returns a; // Python tuple where the first element is either the desired CPyCppyy proxy,; // or an address that still needs to be wrapped by the caller in a proxy using; // cppyy.ll.cast. In the latter case, the second tuple element is the target; // type name. Otherwise, the second element is an empty string.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/TTreePyz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TTreePyz.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TTreePyz.cxx:28,Integrability,wrap,wrap,28,"// found a branched object, wrap its address for the object it represents",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/TTreePyz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TTreePyz.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TTreePyz.cxx:35,Integrability,wrap,wrap,35,"// found a leaf, extract value and wrap with a Python object according to its type",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/src/TTreePyz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/src/TTreePyz.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/array_interface.py:78,Integrability,interface,interface,78,"""""""; Test memory adoption of std::vector and ROOT::RVec with the numpy; array interface.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/array_interface.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/array_interface.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/array_interface.py:5,Testability,Test,Test,5,"""""""; Test memory adoption of std::vector and ROOT::RVec with the numpy; array interface.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/array_interface.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/array_interface.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/array_interface.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/array_interface.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/array_interface.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/array_interface.py:5,Testability,Test,Test,5,"""""""; Test correct adoption of different datatypes for std::vector; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/array_interface.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/array_interface.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/array_interface.py:5,Testability,Test,Test,5,"""""""; Test correct adoption of different datatypes for ROOT::RVec; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/array_interface.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/array_interface.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/array_interface.py:5,Testability,Test,Test,5,"""""""; Test adoption of empty std::vector; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/array_interface.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/array_interface.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/array_interface.py:5,Testability,Test,Test,5,"""""""; Test adoption of empty ROOT::RVec; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/array_interface.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/array_interface.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py:30,Performance,load,loaded,30,"""""""; Test which libraries are loaded during importing ROOT; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/import_load_libs.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py:5,Testability,Test,Test,5,"""""""; Test which libraries are loaded during importing ROOT; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/import_load_libs.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py:14,Integrability,depend,dependencies,14,"# libCore and dependencies",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/import_load_libs.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py:15,Integrability,depend,dependencies,15,"# libCling and dependencies",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/import_load_libs.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py:57,Integrability,depend,dependencies,57,"# by libncurses (on some older platforms); # libTree and dependencies",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/import_load_libs.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py:98,Integrability,depend,dependencies,98,"# by libRIO if uring option is enabled; # On centos7 libssl links against kerberos pulling in all dependencies below, removed with libssl1.1.0",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/import_load_libs.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py:36,Deployability,configurat,configuration,36,"# AddressSanitizer runtime and ROOT configuration",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/import_load_libs.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py:36,Modifiability,config,configuration,36,"# AddressSanitizer runtime and ROOT configuration",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/import_load_libs.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py:22,Testability,test,test,22,"# Verbose mode of the test",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/import_load_libs.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py:20,Performance,load,loaded,20,"""""""; Test libraries loaded after importing ROOT; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/import_load_libs.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py:5,Testability,Test,Test,5,"""""""; Test libraries loaded after importing ROOT; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/import_load_libs.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py:17,Performance,load,loaded,17,"# Check that the loaded libraries are white listed",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/import_load_libs.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/memory.py:14,Testability,test,test,14,"""""""Regression test for https://github.com/root-project/root/issues/15703""""""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/memory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/memory.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:22,Testability,test,tests,22,"# Check whether these tests should be skipped",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:34,Integrability,wrap,wrapper,34,"""""""; Test decorator to create C++ wrapper for Python callables using numba with fundamental types; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test decorator to create C++ wrapper for Python callables using numba with fundamental types; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:2,Testability,Test,Test,2,"# Test refcounts",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test refcount of decorator; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test refcount of decorated callable; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:2,Testability,Test,Test,2,"# Test optional name",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:27,Integrability,wrap,wrapper,27,"""""""; Test optional name of wrapper function; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test optional name of wrapper function; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:2,Testability,Test,Test,2,"# Test attributes",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test additional attributes; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:13,Deployability,integrat,integration,13,"# Test cling integration",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:13,Integrability,integrat,integration,13,"# Test cling integration",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:2,Testability,Test,Test,2,"# Test cling integration",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test function call in cling; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:18,Deployability,integrat,integration,18,"# Test RDataFrame integration",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:18,Integrability,integrat,integration,18,"# Test RDataFrame integration",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:2,Testability,Test,Test,2,"# Test RDataFrame integration",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test function call as part of RDataFrame; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test passing a temporary from an RDataFrame operation; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:7,Integrability,wrap,wrappings,7,"# Test wrappings",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:2,Testability,Test,Test,2,"# Test wrappings",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:34,Integrability,wrap,wrapper,34,"""""""; Test decorator to create C++ wrapper for Python callables using numba with RVecs; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test decorator to create C++ wrapper for Python callables using numba with RVecs; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:110,Performance,load,load,110,"# The global module index does not have RVec entities preloaded and; # gInterpreter.Declare is not allowed to load libROOTVecOps for RVec.; # Preload the library now.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Deployability,configurat,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,Integrability,wrap,wrapper,10,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:46,Modifiability,config,configurations,46,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test const modifier in input argument type; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:5,Testability,Test,Test,5,"""""""; Test passing a reference as input argument; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/numbadeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pretty_printing.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pretty_printing.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pretty_printing.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pretty_printing.py:113,Safety,avoid,avoid,113,"# https://github.com/root-project/root/issues/12817; # The threshold for the memory used is generously chosen to avoid tests; # spuriously failing b/c of fluctuations and is also well below the; # memory needed before the fix to the issue mentioned above, i.e. about; # 4 GB and several minutes to complete (!)",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pretty_printing.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pretty_printing.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pretty_printing.py:119,Testability,test,tests,119,"# https://github.com/root-project/root/issues/12817; # The threshold for the memory used is generously chosen to avoid tests; # spuriously failing b/c of fluctuations and is also well below the; # memory needed before the fix to the issue mentioned above, i.e. about; # 4 GB and several minutes to complete (!)",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pretty_printing.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pretty_printing.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pretty_printing.py:2,Testability,Test,Test,2,"# Test fall-back to __repr__",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pretty_printing.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pretty_printing.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pretty_printing.py:13,Testability,test,test,13,"# ROOT-9935: test null proxied cpp object",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pretty_printing.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pretty_printing.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pretty_printing.py:7,Modifiability,inherit,inherited,7,"# Test inherited class",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pretty_printing.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pretty_printing.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pretty_printing.py:2,Testability,Test,Test,2,"# Test inherited class",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pretty_printing.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pretty_printing.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pretty_printing.py:84,Testability,assert,assertEqual,84,"""""""; def test_TNamed(self):; x = ROOT.TNamed(""name"", ""title""); self._print(x); self.assertEqual(""Name: name Title: title"", x.__str__()). def test_TObject(self):; x = ROOT.TObject(); self._print(x); self.assertEqual(""Name: TObject Title: Basic ROOT object"", x.__str__()); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pretty_printing.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pretty_printing.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pretty_printing.py:203,Testability,assert,assertEqual,203,"""""""; def test_TNamed(self):; x = ROOT.TNamed(""name"", ""title""); self._print(x); self.assertEqual(""Name: name Title: title"", x.__str__()). def test_TObject(self):; x = ROOT.TObject(); self._print(x); self.assertEqual(""Name: TObject Title: Basic ROOT object"", x.__str__()); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pretty_printing.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pretty_printing.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:5,Testability,Test,Test,5,"""""""; Test the @pythonization decorator for user-defined classes.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:88,Testability,test,tests,88,"# Some already instantiated ROOT classes may match targets of @pythonization; # in some tests, and because of immediate pythonization they will be; # processed by the pythonizors. Just ignore them",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:2,Testability,Test,Test,2,"# Test @pythonization('MyClass')",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:9,Testability,test,test,9,"# Define test class",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:2,Testability,Test,Test,2,"# Test @pythonization('NS::MyClass')",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:9,Testability,test,test,9,"# Define test class",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:2,Testability,Test,Test,2,"# Test @pythonization('Prefix', is_prefix=True)",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:9,Testability,test,test,9,"# Define test classes",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:2,Testability,Test,Test,2,"# Test @pythonization('NS::Prefix', is_prefix=True)",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:9,Testability,test,test,9,"# Define test classes",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:2,Testability,Test,Test,2,"# Test @pythonization(['OneClass', 'AnotherClass'])",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:9,Testability,test,test,9,"# Define test classes",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:2,Testability,Test,Test,2,"# Test @pythonization(['OneClass', 'AnotherClass'], ns='NS')",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:9,Testability,test,test,9,"# Define test classes",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:2,Testability,Test,Test,2,"# Test @pythonization(['OnePrefix', 'AnotherPrefix'], is_prefix=True)",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:9,Testability,test,test,9,"# Define test classes",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:2,Testability,Test,Test,2,"# Test @pythonization(['OnePrefix', 'AnotherPrefix'], ns='NS', is_prefix=True)",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:9,Testability,test,test,9,"# Define test classes",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:2,Testability,Test,Test,2,"# Test @pythonization('', is_prefix=True)",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:9,Testability,test,test,9,"# Define test classes",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:2,Testability,Test,Test,2,"# Test @pythonization('', ns='NS', is_prefix=True)",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:9,Testability,test,test,9,"# Define test classes",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:2,Testability,Test,Test,2,"# Test @pythonization(['MyClass', 'MyClass'])",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:9,Testability,test,test,9,"# Define test class",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:2,Testability,Test,Test,2,"# Test that @pythonization filters out non-matching classes",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:2,Testability,Test,Test,2,"# Test passing as target an iterable that is not a list",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:9,Testability,test,test,9,"# Define test classes",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:2,Testability,Test,Test,2,"# Test pythonizor with a single parameter (the class proxy)",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:9,Testability,test,test,9,"# Define test class",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:2,Testability,Test,Test,2,"# Test pythonizor with wrong number of parameters",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:9,Testability,test,test,9,"# Define test class",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:2,Testability,Test,Test,2,"# Test @pythonization where class_name (wrongly) includes namespace",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:9,Testability,test,test,9,"# Define test class",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:2,Testability,Test,Test,2,"# Test stacking of @pythonization decorators",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:9,Testability,test,test,9,"# Define test classes",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:2,Testability,Test,Test,2,"# Test pythonization of already instantiated classes",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:9,Testability,test,test,9,"# Define test classes",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:65,Performance,cache,cached,65,"# Immediate pythonization should happen.; # Accesses classes are cached by cppyy using their class name as key in; # their namespace",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:44,Security,Access,Accesses,44,"# Immediate pythonization should happen.; # Accesses classes are cached by cppyy using their class name as key in; # their namespace",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:100,Performance,cache,cached,100,"# Immediate pythonization should happen.; # Instantiated templates are also tested because they are cached by; # cppyy using their fully-qualified name as key in their namespace",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py:76,Testability,test,tested,76,"# Immediate pythonization should happen.; # Instantiated templates are also tested because they are cached by; # cppyy using their fully-qualified name as key in their namespace",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/pythonization_decorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/pythonization_decorator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:5,Testability,Test,Testing,5,"""""""; Testing of RDataFrame.AsNumpy pythonization; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:5,Testability,Test,Test,5,"""""""; Test supported data-types for read-out; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:5,Testability,Test,Test,5,"""""""; Test bool data-type as a special case since we cannot adopt; the std::vector<bool> with numpy arrays; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:5,Testability,Test,Testing,5,"""""""; Testing reading a std::array; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:5,Testability,Test,Testing,5,"""""""; Testing reading a TH1F; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:5,Testability,Test,Testing,5,"""""""; Testing reading a std::vector with constant size; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:40,Modifiability,variab,variable,40,"""""""; Testing reading a std::vector with variable size; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:5,Testability,Test,Testing,5,"""""""; Testing reading a std::vector with variable size; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:5,Testability,Test,Testing,5,"""""""; Testing reading a TLorentzVector; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:99,Performance,load,load,99,"# The global module index does not have it preloaded and; # gInterpreter.Declare is not allowed to load libPhysics for; # TLorentzVector. Preload the library now.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:36,Integrability,inject,injected,36,"""""""; Testing reading a custom class injected in the interpreter; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:36,Security,inject,injected,36,"""""""; Testing reading a custom class injected in the interpreter; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:5,Testability,Test,Testing,5,"""""""; Testing reading a custom class injected in the interpreter; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:5,Testability,Test,Testing,5,"""""""; Testing reading defined columns; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:5,Testability,Test,Testing,5,"""""""; Testing excluding columns from read-out; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:5,Testability,Test,Testing,5,"""""""; Testing result pointer being attribute of returned numpy array; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:5,Testability,Test,Testing,5,"""""""; Testing ownership of numpy array as owner of the data; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:5,Testability,Test,Testing,5,"""""""; Testing ownership of numpy array as view on data; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:5,Testability,Test,Testing,5,"""""""; Testing readout of empty std::vectors; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:5,Testability,Test,Testing,5,"""""""; Testing readout of empty selection; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:5,Testability,Test,Testing,5,"""""""; Testing pickling of returned numpy array; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:5,Testability,Test,Testing,5,"""""""; Testing the adoption of the memory from the C++ side for fundamental types; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:5,Testability,Test,Testing,5,"""""""; Testing the adoption of the memory from the C++ side for complex types; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:5,Testability,Test,Testing,5,"""""""; Testing cloning of AsNumpy results; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:5,Testability,Test,Testing,5,"""""""; Testing converting bool columns to NumPy arrays.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:2,Testability,test,test,2,"# test values",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:2,Testability,test,test,2,"# test type",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_histo_profile.py:5,Testability,Test,Tests,5,'''; Tests for the pythonization of HistoXD and ProfileXD methods.; ''',MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_histo_profile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_histo_profile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_histo_profile.py:5,Testability,Test,Test,5,"'''; Test conversion of model constructor arguments, passed as a tuple, to; an actual model object.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_histo_profile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_histo_profile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_histo_profile.py:2,Testability,Test,Test,2,"# Test model arg as tuple",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_histo_profile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_histo_profile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_histo_profile.py:5,Testability,Test,Test,5,'''; Test that the pythonized methods support being subscripted (explicit; template instantiation).; ''',MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_histo_profile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_histo_profile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_histo_profile.py:2,Testability,Test,Test,2,"# Test instantiation + model arg as tuple",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_histo_profile.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_histo_profile.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py:5,Testability,Test,Tests,5,"""""""; Tests for the FromNumpy feature enabling to read numpy arrays; with RDataFrame.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py:5,Testability,Test,Test,5,"""""""; Test reading different datatypes; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py:5,Testability,Test,Test,5,"""""""; Test reading multiple columns; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py:2,Testability,Test,Test,2,"# Test column names",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py:2,Testability,Test,Test,2,"# Test mean",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py:5,Testability,Test,Test,5,"""""""; Test the use of transformations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py:5,Testability,Test,Test,5,"""""""; Test behaviour with data dictionary going out of scope; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py:5,Testability,Test,Test,5,"""""""; Test behaviour with numpy array going out of scope; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py:5,Testability,Test,Test,5,"""""""; Test behaviour with inplace dictionary; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py:5,Testability,Test,Test,5,"""""""; Test lifetime of numpy array; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py:5,Testability,Test,Test,5,"""""""; Test lifetime of datasource. Datasource survives until last node of the graph goes out of scope; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py:25,Deployability,release,releases,25,"# Deleting the last node releases the RVecs and releases the reference; # to the numpy array",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py:48,Deployability,release,releases,48,"# Deleting the last node releases the RVecs and releases the reference; # to the numpy array",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py:5,Testability,Test,Test,5,"""""""; Test correct reading of a sliced numpy array (#13690); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_makenumpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdfdescription.py:5,Testability,Test,Testing,5,"""""""; Testing of RDFDescription pythonization; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdfdescription.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdfdescription.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdfdescription.py:5,Testability,Test,Test,5,"""""""; Test supported __repr__; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdfdescription.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdfdescription.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_define_pyz.py:5,Testability,Test,Testing,5,"""""""; Testing Pythonized Define of RDF; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdf_define_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_define_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_define_pyz.py:5,Testability,Test,Tests,5,"""""""; Tests the pythonized define with all the numba declare datatypes and ; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdf_define_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_define_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_define_pyz.py:5,Testability,Test,Test,5,"""""""; Test that a C++ functor can be passed as a callable argument of a; Define operation.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdf_define_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_define_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_define_pyz.py:5,Testability,Test,Test,5,"""""""; Test that an std::function can be passed as a callable argument of a; Define operation.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdf_define_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_define_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_filter_pyz.py:5,Testability,Test,Testing,5,"""""""; Testing Pythonized Filters of RDF; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdf_filter_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_filter_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_filter_pyz.py:5,Testability,Test,Tests,5,"""""""; Tests the pythonized filter with all the tree datatypes and ; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdf_filter_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_filter_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_filter_pyz.py:5,Testability,Test,Test,5,"""""""; Test to verify the first overload (1.a) of filter; Filter(callable, col_list, name); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdf_filter_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_filter_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_filter_pyz.py:5,Testability,Test,Test,5,"""""""; Test to verify the first overload (1.b) of filter; Filter(callable, col_list); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdf_filter_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_filter_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_filter_pyz.py:5,Testability,Test,Test,5,"""""""; Test to verify the first overload (1.c) of filter; Filter(callable); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdf_filter_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_filter_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_filter_pyz.py:5,Testability,Test,Test,5,"""""""; Test to verify the third overload of filter; Filter(callable, name); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdf_filter_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_filter_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_filter_pyz.py:5,Testability,Test,Test,5,"""""""; Test that a C++ functor can be passed as a callable argument of a; Filter operation.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdf_filter_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_filter_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_filter_pyz.py:5,Testability,Test,Test,5,"""""""; Test that an std::function can be passed as a callable argument of a; Filter operation.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdf_filter_pyz.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_filter_pyz.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_filter_pyz_helper.py:87,Testability,test,test,87,"""""""; This function generates the root files of various datatypes with random values to test them.; Datatypes could be generated are Strings, Char_t, UChar_t; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rdf_filter_pyz_helper.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdf_filter_pyz_helper.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/root_module.py:27,Testability,test,tests,27,"# Helper functions for the tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/root_module.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/root_module.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/root_module.py:5,Testability,Test,Testing,5,"""""""; Testing features of the ROOT module implemented in the ROOT module facade; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/root_module.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/root_module.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/root_module.py:5,Testability,Test,Test,5,"""""""; Test import; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/root_module.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/root_module.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/root_module.py:5,Testability,Test,Test,5,"""""""; Test relative import; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/root_module.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/root_module.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/root_module.py:5,Testability,Test,Test,5,"""""""; Test __version__ property; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/root_module.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/root_module.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/root_module.py:5,Testability,Test,Test,5,"""""""; Test module flag to ignore command line options; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/root_module.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/root_module.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/root_module.py:5,Testability,Test,Test,5,"""""""; Test importing implicitly from the ROOT namespace; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/root_module.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/root_module.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/root_module.py:5,Testability,Test,Test,5,"""""""; Test that we can correctly import C++ namespaces and other things that; should behave like Python modules, including nested cases.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/root_module.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/root_module.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py:5,Testability,Test,Test,5,"""""""; Test AsRTensor adoption mechanism; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py:5,Testability,Test,Test,5,"""""""; Test adoption of numpy arrays with different data types; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py:2,Testability,test,test,2,"# test also direct conversion",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py:5,Testability,Test,Test,5,"""""""; Test adoption of the memory layout; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py:5,Testability,Test,Test,5,"""""""; Test adoption of the strides. Note that numpy multiplies the strides with the size of the element; in bytes.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py:43,Integrability,interface,interface,43,"""""""; Test memory adoption of RTensor array interface.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py:5,Testability,Test,Test,5,"""""""; Test memory adoption of RTensor array interface.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py:5,Testability,Test,Test,5,"""""""; Test correct adoption of different datatypes; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py:5,Testability,Test,Test,5,"""""""; Test adoption of the memory layout; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py:5,Testability,Test,Test,5,"""""""; Test ownership of adopted numpy array; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py:59,Integrability,interface,interface,59,"""""""; Test compliance of the RTensor methods with the numpy interface; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py:5,Testability,Test,Test,5,"""""""; Test compliance of the RTensor methods with the numpy interface; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py:5,Testability,Test,Test,5,"""""""; Test np.transpose vs RTensor::Transpose; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py:5,Testability,Test,Test,5,"""""""; Test np.expand_dims vs RTensor::ExpandDims; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py:5,Testability,Test,Test,5,"""""""; Test np.squeeze vs RTensor::Squeeze; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py:5,Testability,Test,Test,5,"""""""; Test np.reshape vs RTensor::Reshape; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py:5,Testability,Test,Test,5,"""""""; Test slicing operations; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rtensor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec.py:5,Testability,Test,Test,5,"'''; Test the iteration over the iterator of an iterator. This breaks if __iter__ or tp_iter is not defined for the iterator and causes; issues, e.g., in comparison to numpy arrays.; '''",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rvec.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec.py:20,Performance,optimiz,optimization,20,"# Prevent potential optimization of the loop",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rvec.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec.py:23,Security,access,accessible,23,'''; Test that RVec is accessible from the ROOT and ROOT::VecOps namespace; ''',MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rvec.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec.py:5,Testability,Test,Test,5,'''; Test that RVec is accessible from the ROOT and ROOT::VecOps namespace; ''',MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rvec.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec_asrvec.py:92,Integrability,interface,interface,92,"""""""; Tests for the AsRVec feature enabling to adopt memory of Python objects; with an array interface member using RVec as C++ container.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rvec_asrvec.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec_asrvec.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec_asrvec.py:5,Testability,Test,Tests,5,"""""""; Tests for the AsRVec feature enabling to adopt memory of Python objects; with an array interface member using RVec as C++ container.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rvec_asrvec.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec_asrvec.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec_asrvec.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rvec_asrvec.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec_asrvec.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec_asrvec.py:5,Testability,Test,Test,5,"""""""; Test adoption of numpy arrays with different data types; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rvec_asrvec.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec_asrvec.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec_asrvec.py:5,Testability,Test,Test,5,"""""""; Test adoption of multi-dimensional numpy arrays; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rvec_asrvec.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec_asrvec.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec_asrvec.py:5,Testability,Test,Test,5,"""""""; Test adoption of numpy array with size 0; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rvec_asrvec.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec_asrvec.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec_asrvec.py:5,Testability,Test,Test,5,"""""""; Test adoption of RVecs; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rvec_asrvec.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec_asrvec.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec_asrvec.py:5,Testability,Test,Test,5,"""""""; Test ownership of returned RVec (to be owned by Python); """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rvec_asrvec.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec_asrvec.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec_asrvec.py:5,Testability,Test,Test,5,"""""""; Test __adopted__ attribute of returned RVecs; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rvec_asrvec.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec_asrvec.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec_asrvec.py:5,Testability,Test,Test,5,"""""""; Test reference count of returned RVec. We expect a refcount of 2 for the RVec because the call to sys.getrefcount; creates a second reference by itself.; We attach the adopted pyobject to the RVec and increase the refcount of the; numpy array. After deletion of the rvec, the refcount of the numpy array; is decreased.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/rvec_asrvec.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec_asrvec.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/sofie_gnn.py:5,Testability,Test,Tests,5,"""""""; Tests for the pythonizations of ParseFromMemory method of SOFIE GNN.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/sofie_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/sofie_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/sofie_gnn.py:5,Testability,Test,Test,5,'''; Test that parsed GNN model from a graphnets model generates correct; inference code; ''',MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/sofie_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/sofie_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/sofie_gnn.py:5,Testability,Test,Test,5,'''; Test that parsed GraphIndependent model from a graphnets model generates correct; inference code; ''',MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/sofie_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/sofie_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/sofie_gnn.py:5,Testability,Test,Test,5,'''; Test that parsed stack of SOFIE GNN and GraphIndependent modules generate the correct; inference code; ''',MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/sofie_gnn.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/sofie_gnn.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_set.py:5,Testability,Test,Tests,5,"""""""; Tests for the pythonizations of std::set.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/stl_set.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_set.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_set.py:5,Testability,Test,Test,5,"""""""; Test that a std::set of char behaves as a Python set.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/stl_set.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_set.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_set.py:5,Testability,Test,Test,5,"""""""; Test that the boolean conversion of a std::set works as expected.; https://github.com/root-project/root/issues/14573; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/stl_set.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_set.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_set.py:5,Testability,Test,Test,5,"""""""; Test that a TTree with a std::set branch behaves as expected.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/stl_set.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_set.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_set.py:9,Modifiability,variab,variables,9,"# Create variables to store std::vector elements",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/stl_set.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_set.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_vector.py:5,Testability,Test,Tests,5,"""""""; Tests for the pythonizations of std::vector. ; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/stl_vector.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_vector.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_vector.py:5,Testability,Test,Test,5,"""""""; Test that calling std::vector<char>::data() returns a Python string; that contains the characters of the vector and no exception is raised.; Check also that the iteration over the vector runs normally (#9632).; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/stl_vector.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_vector.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_vector.py:5,Testability,Test,Test,5,"""""""; Test that creating a std::vector<const char*> does not raise any; exception (#11581).; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/stl_vector.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_vector.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_vector.py:5,Testability,Test,Test,5,"""""""; Test that the boolean conversion of a std::vector works as expected.; https://github.com/root-project/root/issues/14573; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/stl_vector.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_vector.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_vector.py:5,Testability,Test,Test,5,"""""""; Test that the boolean conversion of a std::vector works as expected inside a TTree.; Also checks that the contents are correctly filled and read back.; https://github.com/root-project/root/issues/14573; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/stl_vector.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_vector.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_vector.py:9,Modifiability,variab,variables,9,"# Create variables to store std::vector elements",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/stl_vector.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/stl_vector.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/string_view.py:14,Availability,avail,availability,14,"""""""; Test the availability of std::string_view; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/string_view.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/string_view.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/string_view.py:5,Testability,Test,Test,5,"""""""; Test the availability of std::string_view; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/string_view.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/string_view.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/string_view.py:28,Availability,error,errors,28,"# Create file.root to avoid errors in the RDF constructor",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/string_view.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/string_view.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/string_view.py:22,Safety,avoid,avoid,22,"# Create file.root to avoid errors in the RDF constructor",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/string_view.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/string_view.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tarray_getitem.py:5,Testability,Test,Test,5,"""""""; Test for the pythonization that allows to: (i) get an item of a; TArray with boundary check for the index and (ii) iterate over; a TArray.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tarray_getitem.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tarray_getitem.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tarray_getitem.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tarray_getitem.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tarray_getitem.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tarray_len.py:47,Security,access,access,47,"""""""; Test for the pythonization that allows to access the number of elements of a; TArray (or subclass) by calling `len` on it.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tarray_len.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tarray_len.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tarray_len.py:5,Testability,Test,Test,5,"""""""; Test for the pythonization that allows to access the number of elements of a; TArray (or subclass) by calling `len` on it.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tarray_len.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tarray_len.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tarray_len.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tarray_len.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tarray_len.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tclass_dynamiccast.py:5,Testability,Test,Test,5,"""""""; Test for the pythonisation of TClass::DynamicCast, which adds an; an extra cast before returning the Python proxy to the user so that; it has the right type.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tclass_dynamiccast.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tclass_dynamiccast.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tclass_dynamiccast.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tclass_dynamiccast.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tclass_dynamiccast.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tclass_dynamiccast.py:2,Availability,Down,Downcast,2,"# Downcast: TObject -> TObjString",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tclass_dynamiccast.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tclass_dynamiccast.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcollection_iterable.py:5,Testability,Test,Test,5,"""""""; Test for the pythonization that makes instances of TCollection subclasses; iterable in Python.; For example, this allows to do:; `for elem in collection:`; `...`; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tcollection_iterable.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcollection_iterable.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcollection_iterable.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tcollection_iterable.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcollection_iterable.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcollection_len.py:47,Security,access,access,47,"""""""; Test for the pythonization that allows to access the number of elements of a; TCollection (or subclass) by calling `len` on it.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tcollection_len.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcollection_len.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcollection_len.py:5,Testability,Test,Test,5,"""""""; Test for the pythonization that allows to access the number of elements of a; TCollection (or subclass) by calling `len` on it.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tcollection_len.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcollection_len.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcollection_len.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tcollection_len.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcollection_len.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcollection_listmethods.py:99,Modifiability,extend,extend,99,"""""""; Test for the Python-list-like methods added to TCollection (and subclasses):; append, remove, extend, count; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tcollection_listmethods.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcollection_listmethods.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcollection_listmethods.py:5,Testability,Test,Test,5,"""""""; Test for the Python-list-like methods added to TCollection (and subclasses):; append, remove, extend, count; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tcollection_listmethods.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcollection_listmethods.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcollection_listmethods.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tcollection_listmethods.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcollection_listmethods.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcollection_operators.py:5,Testability,Test,Test,5,"""""""; Test for the Python operators defined in TCollection (and subclasses):; __add__, __mul__, __rmul__, __imul__; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tcollection_operators.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcollection_operators.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcollection_operators.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tcollection_operators.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcollection_operators.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcomplex_operators.py:5,Testability,Test,Test,5,"""""""; Test for the operators of TComplex:; __radd__, __rsub__, __rmul__, __rtruediv__/__rdiv__.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tcomplex_operators.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcomplex_operators.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcontext_contextmanager.py:5,Testability,Test,Test,5,"""""""; Test of TContext used as context manager; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tcontext_contextmanager.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcontext_contextmanager.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcontext_contextmanager.py:155,Performance,concurren,concurrently,155,"""""""; Run all tests of this class sequentially.; The tests of this class rely on the current directory, which can be changed; unpredictably if they are run concurrently.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tcontext_contextmanager.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcontext_contextmanager.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcontext_contextmanager.py:13,Testability,test,tests,13,"""""""; Run all tests of this class sequentially.; The tests of this class rely on the current directory, which can be changed; unpredictably if they are run concurrently.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tcontext_contextmanager.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcontext_contextmanager.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcontext_contextmanager.py:52,Testability,test,tests,52,"""""""; Run all tests of this class sequentially.; The tests of this class rely on the current directory, which can be changed; unpredictably if they are run concurrently.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tcontext_contextmanager.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tcontext_contextmanager.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tdirectoryfile_attrsyntax_get.py:5,Testability,Test,Test,5,"""""""; Test for the attr syntax and Get method of TDirectoryFile.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tdirectoryfile_attrsyntax_get.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tdirectoryfile_attrsyntax_get.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tdirectoryfile_attrsyntax_get.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tdirectoryfile_attrsyntax_get.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tdirectoryfile_attrsyntax_get.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tdirectoryfile_attrsyntax_get.py:27,Performance,cache,cached,27,"# check that object is not cached initially",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tdirectoryfile_attrsyntax_get.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tdirectoryfile_attrsyntax_get.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tdirectory_attrsyntax.py:5,Testability,Test,Test,5,"""""""; Test for the getitem syntax of TDirectory.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tdirectory_attrsyntax.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tdirectory_attrsyntax.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tdirectory_attrsyntax.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tdirectory_attrsyntax.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tdirectory_attrsyntax.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tdirectory_attrsyntax.py:27,Performance,cache,cached,27,"# check that object is not cached initially",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tdirectory_attrsyntax.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tdirectory_attrsyntax.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tdirectory_attrsyntax.py:17,Performance,cache,cached,17,"# check that the cached value in is actually the object; # inside the directory",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tdirectory_attrsyntax.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tdirectory_attrsyntax.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tfile_attrsyntax_get_writeobject_open.py:5,Testability,Test,Test,5,"""""""; Test for the TFile.Open factory like creation of TFile; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tfile_attrsyntax_get_writeobject_open.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tfile_attrsyntax_get_writeobject_open.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tfile_attrsyntax_get_writeobject_open.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tfile_attrsyntax_get_writeobject_open.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tfile_attrsyntax_get_writeobject_open.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tfile_attrsyntax_get_writeobject_open.py:27,Performance,cache,cached,27,"# check that object is not cached initially",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tfile_attrsyntax_get_writeobject_open.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tfile_attrsyntax_get_writeobject_open.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tfile_attrsyntax_get_writeobject_open.py:5,Testability,Test,Test,5,"""""""; Test that the TKey related to a histogram in the file contains the; histogram title as described in #9989.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tfile_attrsyntax_get_writeobject_open.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tfile_attrsyntax_get_writeobject_open.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tfile_constructor.py:5,Testability,Test,Test,5,"""""""; Test for the TFile constructor; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tfile_constructor.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tfile_constructor.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tfile_context_manager.py:5,Testability,Test,Test,5,"""""""; Test of TFile used as context manager; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tfile_context_manager.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tfile_context_manager.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tfile_context_manager.py:36,Security,access,access,36,"""""""; Detach histogram from file and access it outside of the context, both when writing and reading.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tfile_context_manager.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tfile_context_manager.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py:178,Integrability,wrap,wrapper,178,"""""""; Tests for passing Python callables when constructing TFX classes. This feature is not implemented by a PyROOT pythonization, but by a converter of; Cppyy that creates a C++ wrapper to invoke the Python callable.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tf_pycallables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py:5,Testability,Test,Tests,5,"""""""; Tests for passing Python callables when constructing TFX classes. This feature is not implemented by a PyROOT pythonization, but by a converter of; Cppyy that creates a C++ wrapper to invoke the Python callable.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tf_pycallables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py:5,Testability,Test,Test,5,"""""""; Test passing Python callables to ROOT::TF1; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tf_pycallables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py:5,Testability,Test,Test,5,"""""""; Test simple function without parameters; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tf_pycallables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py:10,Usability,simpl,simple,10,"""""""; Test simple function without parameters; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tf_pycallables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py:5,Testability,Test,Test,5,"""""""; Test function with parameters; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tf_pycallables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py:5,Testability,Test,Test,5,"""""""; Test function provided as callable; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tf_pycallables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py:5,Testability,Test,Test,5,"""""""; Test fitting a histogram to a Python function; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tf_pycallables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py:5,Testability,Test,Test,5,"""""""; Test the 2D Numpy array pythonisations for TF1::EvalPar; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tf_pycallables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py:33,Energy Efficiency,charge,charges,33,"# x dataset: 5 pairs of particle charges",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tf_pycallables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py:19,Energy Efficiency,charge,charges,19,"# Distance between charges r",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tf_pycallables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py:11,Safety,avoid,avoid,11,"# Slice to avoid the dummy column of 10's",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tf_pycallables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py:5,Testability,Test,Test,5,"""""""; Test the 2D NumPy pythonisations with dynamic TF1 data dimensions; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tf_pycallables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py:5,Testability,Test,Test,5,"""""""; Test passing Python callables to ROOT::TF2; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tf_pycallables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py:5,Testability,Test,Test,5,"""""""; Test function with parameters; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tf_pycallables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py:5,Testability,Test,Test,5,"""""""; Test passing Python callables to ROOT::TF3; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tf_pycallables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py:5,Testability,Test,Test,5,"""""""; Test function with parameters; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tf_pycallables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tgraph_getters.py:62,Availability,error,error,62,"""""""; Test for the pythonization of TGraph, TGraph2D and their error; subclasses, in particular of their X,Y,Z coordinates and errors; getters, which sets the size of the returned buffers.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tgraph_getters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tgraph_getters.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tgraph_getters.py:126,Availability,error,errors,126,"""""""; Test for the pythonization of TGraph, TGraph2D and their error; subclasses, in particular of their X,Y,Z coordinates and errors; getters, which sets the size of the returned buffers.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tgraph_getters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tgraph_getters.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tgraph_getters.py:5,Testability,Test,Test,5,"""""""; Test for the pythonization of TGraph, TGraph2D and their error; subclasses, in particular of their X,Y,Z coordinates and errors; getters, which sets the size of the returned buffers.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tgraph_getters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tgraph_getters.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tgraph_getters.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tgraph_getters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tgraph_getters.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/th1_operators.py:5,Testability,Test,Test,5,"""""""; Test for the __imul__ operator of TH1 and subclasses, which; multiplies the histogram by a constant.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/th1_operators.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/th1_operators.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/th1_operators.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/th1_operators.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/th1_operators.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/th2.py:65,Security,access,accessible,65,"""""""; Test that the method pulled in via using decls from TH1 are accessible; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/th2.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/th2.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/th2.py:5,Testability,Test,Test,5,"""""""; Test that the method pulled in via using decls from TH1 are accessible; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/th2.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/th2.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/th2.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/th2.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/th2.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/titer_iterator.py:5,Testability,Test,Test,5,"""""""; Test for the pythonization that allows instances of TIter to; behave as Python iterators.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/titer_iterator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/titer_iterator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/titer_iterator.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/titer_iterator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/titer_iterator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/titer_iterator.py:10,Availability,redundant,redundant,10,"# Somehow redundant, but good to test with real syntax",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/titer_iterator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/titer_iterator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/titer_iterator.py:10,Safety,redund,redundant,10,"# Somehow redundant, but good to test with real syntax",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/titer_iterator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/titer_iterator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/titer_iterator.py:33,Testability,test,test,33,"# Somehow redundant, but good to test with real syntax",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/titer_iterator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/titer_iterator.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_comparisonops.py:5,Testability,Test,Test,5,"""""""; Test for the comparison operators of TObject and subclasses:; __eq__, __ne__, __lt__, __le__, __gt__, __ge__.; Such pythonisations rely on TObject::IsEqual and TObject::Compare,; which can be reimplemented in subclasses.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tobject_comparisonops.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_comparisonops.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_comparisonops.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tobject_comparisonops.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_comparisonops.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_comparisonops.py:2,Testability,Test,Test,2,"# Test comparison with no TObject",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tobject_comparisonops.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_comparisonops.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_comparisonops.py:2,Testability,Test,Test,2,"# Test comparison with None",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tobject_comparisonops.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_comparisonops.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_comparisonops.py:2,Testability,Test,Test,2,"# Test comparison with no TObject",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tobject_comparisonops.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_comparisonops.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_comparisonops.py:2,Testability,Test,Test,2,"# Test comparison with None",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tobject_comparisonops.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_comparisonops.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_comparisonops.py:2,Testability,Test,Test,2,"# Test comparison with no TObject",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tobject_comparisonops.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_comparisonops.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_comparisonops.py:2,Testability,Test,Test,2,"# Test comparison with no TObject",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tobject_comparisonops.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_comparisonops.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_comparisonops.py:2,Testability,Test,Test,2,"# Test comparison with no TObject",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tobject_comparisonops.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_comparisonops.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_comparisonops.py:2,Testability,Test,Test,2,"# Test comparison with no TObject",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tobject_comparisonops.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_comparisonops.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_comparisonops.py:2,Testability,Test,Test,2,"# Test that comparison operators enable list sorting",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tobject_comparisonops.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_comparisonops.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_contains.py:5,Testability,Test,Test,5,"""""""; Test for the __contains__ pythonisation of TObject and subclasses.; Such pythonisation relies on TObject::FindObject, which is redefined; in some of its subclasses, such as TCollection.; Thanks to this pythonisation, we can use the syntax `obj in col`; to know if col contains obj.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tobject_contains.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_contains.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_contains.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tobject_contains.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobject_contains.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobjstring_comparisonops.py:5,Testability,Test,Test,5,"""""""; Test for the comparison operators of TObjString:; __eq__, __ne__, __lt__, __le__, __gt__, __ge__.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tobjstring_comparisonops.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobjstring_comparisonops.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobjstring_comparisonops.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tobjstring_comparisonops.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobjstring_comparisonops.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobjstring_comparisonops.py:2,Testability,Test,Test,2,"# Test that comparison operators enable list sorting",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tobjstring_comparisonops.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobjstring_comparisonops.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobjstring_len.py:5,Testability,Test,Test,5,"""""""; Test for the pythonization that provides the length of a; TObjString instance `s` via `len(s)`.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tobjstring_len.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobjstring_len.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobjstring_len.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tobjstring_len.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobjstring_len.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobjstring_str_repr.py:5,Testability,Test,Test,5,"""""""; Test for the pythonizations that provide a string representation; for instances of TObjString (__str__, __repr__).; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tobjstring_str_repr.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobjstring_str_repr.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobjstring_str_repr.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tobjstring_str_repr.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tobjstring_str_repr.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/TreeHelper.h:26,Testability,test,test,26,"// Helper struct for this test",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/TreeHelper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/TreeHelper.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/TreeHelper.h:19,Testability,test,test,19,"// Helper class to test branch with array member",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/TreeHelper.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/TreeHelper.h
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tseqcollection_itemaccess.py:23,Security,access,access,23,"""""""; Test for the item access methods added to TSeqCollection (and subclasses):; __getitem__, __setitem__, __delitem__.; Both the index (l[i]) and slice (l[i:j:k]) syntaxes are tested.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tseqcollection_itemaccess.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tseqcollection_itemaccess.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tseqcollection_itemaccess.py:5,Testability,Test,Test,5,"""""""; Test for the item access methods added to TSeqCollection (and subclasses):; __getitem__, __setitem__, __delitem__.; Both the index (l[i]) and slice (l[i:j:k]) syntaxes are tested.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tseqcollection_itemaccess.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tseqcollection_itemaccess.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tseqcollection_itemaccess.py:177,Testability,test,tested,177,"""""""; Test for the item access methods added to TSeqCollection (and subclasses):; __getitem__, __setitem__, __delitem__.; Both the index (l[i]) and slice (l[i:j:k]) syntaxes are tested.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tseqcollection_itemaccess.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tseqcollection_itemaccess.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tseqcollection_itemaccess.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tseqcollection_itemaccess.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tseqcollection_itemaccess.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tseqcollection_itemaccess.py:58,Testability,test,tests,58,"# Assign second and third items to just one item.; # This tests that the third item is removed",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tseqcollection_itemaccess.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tseqcollection_itemaccess.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tseqcollection_listmethods.py:5,Testability,Test,Test,5,"""""""; Test for the Python-list-like methods added to TSeqCollection; (and subclasses): insert, pop, reverse, sort, index; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tseqcollection_listmethods.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tseqcollection_listmethods.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tseqcollection_listmethods.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tseqcollection_listmethods.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tseqcollection_listmethods.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tseqcollection_listmethods.py:53,Security,hash,hash,53,"# Python sort, key and reverse arguments.; # Sort by hash in reverse order",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tseqcollection_listmethods.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tseqcollection_listmethods.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tstring_comparisonops.py:5,Testability,Test,Test,5,"""""""; Test for the comparison operators of TString:; __eq__, __ne__, __lt__, __le__, __gt__, __ge__.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tstring_comparisonops.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tstring_comparisonops.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tstring_comparisonops.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tstring_comparisonops.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tstring_comparisonops.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tstring_comparisonops.py:2,Testability,Test,Test,2,"# Test that comparison operators enable list sorting",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tstring_comparisonops.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tstring_comparisonops.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tstring_converter.py:5,Testability,Test,Tests,5,"""""""; Tests for passing a Python string to a C++ function that expects a TString. This feature is not implemented by a PyROOT pythonization, but by a converter; that was added to Cppyy to create a TString out of a Python string.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tstring_converter.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tstring_converter.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tstring_converter.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tstring_converter.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tstring_converter.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tstring_len.py:5,Testability,Test,Test,5,"""""""; Test for the pythonization that provides the length of a; TString instance `s` via `len(s)`.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tstring_len.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tstring_len.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tstring_len.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tstring_len.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tstring_len.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tstring_str_repr.py:5,Testability,Test,Test,5,"""""""; Test for the pythonizations that provide a string representation; for instances of TString (__str__, __repr__).; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tstring_str_repr.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tstring_str_repr.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tstring_str_repr.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tstring_str_repr.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tstring_str_repr.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch.py:5,Testability,Test,Test,5,"""""""; Test for the pythonization of TTree::Branch, which allows to pass proxy; references as arguments from the Python side. Example:; `v = ROOT.std.vector('int')()`; `t.Branch('my_vector_branch', v)`; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_branch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch.py:2,Testability,Test,Tests,2,"# Tests; # Basic type and array do not actually need the pythonization,; # but testing anyway for the sake of completeness",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_branch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch.py:79,Testability,test,testing,79,"# Tests; # Basic type and array do not actually need the pythonization,; # but testing anyway for the sake of completeness",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_branch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch.py:2,Testability,Test,Test,2,"# Test overloads",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_branch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch.py:2,Testability,Test,Test,2,"# Test aliases",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_branch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch.py:2,Testability,Test,Test,2,"# Test overloads",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_branch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch.py:2,Testability,Test,Test,2,"# Test an overload that uses the original Branch proxy",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_branch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch_attr.py:47,Security,access,access,47,"""""""; Test for the pythonization that allows to access top-level tree branches/leaves as attributes; (i.e. `mytree.mybranch`). Since this pythonization is common to TTree and its subclasses, TChain, TNtuple; and TNtupleD are also tested here.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_branch_attr.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch_attr.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch_attr.py:5,Testability,Test,Test,5,"""""""; Test for the pythonization that allows to access top-level tree branches/leaves as attributes; (i.e. `mytree.mybranch`). Since this pythonization is common to TTree and its subclasses, TChain, TNtuple; and TNtupleD are also tested here.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_branch_attr.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch_attr.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch_attr.py:229,Testability,test,tested,229,"""""""; Test for the pythonization that allows to access top-level tree branches/leaves as attributes; (i.e. `mytree.mybranch`). Since this pythonization is common to TTree and its subclasses, TChain, TNtuple; and TNtupleD are also tested here.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_branch_attr.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch_attr.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch_attr.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_branch_attr.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch_attr.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch_attr.py:2,Integrability,Synchroniz,Synchronized,2,"# Synchronized with arraysizeInner in TreeHelper.h",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_branch_attr.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch_attr.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_iterable.py:5,Testability,Test,Test,5,"""""""; Test for the pythonization that makes TTree instances iterable in Python. ; For example, this allows to do:; `for event in mytree:`; `...`. Since this pythonization is common to TTree and its subclasses, TChain, TNtuple; and TNtupleD are also tested here.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_iterable.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_iterable.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_iterable.py:248,Testability,test,tested,248,"""""""; Test for the pythonization that makes TTree instances iterable in Python. ; For example, this allows to do:; `for event in mytree:`; `...`. Since this pythonization is common to TTree and its subclasses, TChain, TNtuple; and TNtupleD are also tested here.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_iterable.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_iterable.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_iterable.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_iterable.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_iterable.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py:5,Testability,Test,Test,5,"""""""; Test for the pythonization of TTree::SetBranchAddress, which allows to pass proxy; references as arguments from the Python side. Example:; `v = ROOT.std.vector('int')()`; `t.SetBranchAddress(""my_vector_branch"", v)`. Since this pythonization is common to TTree and its subclasses, TChain, TNtuple; and TNtupleD are also tested here.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py:324,Testability,test,tested,324,"""""""; Test for the pythonization of TTree::SetBranchAddress, which allows to pass proxy; references as arguments from the Python side. Example:; `v = ROOT.std.vector('int')()`; `t.SetBranchAddress(""my_vector_branch"", v)`. Since this pythonization is common to TTree and its subclasses, TChain, TNtuple; and TNtupleD are also tested here.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py:2,Testability,Test,Tests,2,"# Tests; # Basic type, array and struct leaf list do not actually need the pythonization,; # but testing anyway for the sake of completeness",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py:97,Testability,test,testing,97,"# Tests; # Basic type, array and struct leaf list do not actually need the pythonization,; # but testing anyway for the sake of completeness",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py:38,Safety,detect,detected,38,"# check if type mismatch is correctly detected",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py:16,Availability,error,error,16,"# should return error code because of type mismatch",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py:38,Safety,detect,detected,38,"# check if type mismatch is correctly detected",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py:16,Availability,error,error,16,"# should return error code because of type mismatch",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py:2,Testability,Test,Test,2,"# Test an overload that uses the original SetBranchAddress proxy",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_setbranchaddress.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tvector3_getitem.py:5,Testability,Test,Test,5,"""""""; Test for the pythonization that allows to: (i) get an item of a; TVector3 with boundary check for the index and (ii) iterate over; a TVector3.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tvector3_getitem.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tvector3_getitem.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tvector3_getitem.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tvector3_getitem.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tvector3_getitem.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tvector3_len.py:5,Testability,Test,Test,5,"""""""; Test for the pythonization that allows to get the size of a; TVector3 (always 3) by calling `len` on it.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tvector3_len.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tvector3_len.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tvector3_len.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tvector3_len.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tvector3_len.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tvectort_getitem.py:5,Testability,Test,Test,5,"""""""; Test for the pythonization that allows to: (i) get an item of a; TVectorT with boundary check for the index and (ii) iterate over; a TVectorT.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tvectort_getitem.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tvectort_getitem.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tvectort_getitem.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tvectort_getitem.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tvectort_getitem.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tvectort_len.py:5,Testability,Test,Test,5,"""""""; Test for the pythonization that allows to get the size of a; TVectorT by calling `len` on it.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tvectort_len.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tvectort_len.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tvectort_len.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/tvectort_len.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tvectort_len.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py:5,Testability,Test,Test,5,"""""""; Test for RooAbsCollection pythonizations.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooabscollection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py:2,Usability,Clear,Clear,2,"# Clear TList before Python list deletes the objects",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooabscollection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py:15,Testability,test,tests,15,"# Parametrized tests for RooAbsCollection child classes",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooabscollection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py:11,Modifiability,variab,variable,11,"# The next variable has a duplicate name on purpose the check if it's; # really the name that is used as the key in RooAbsCollections.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooabscollection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooabscollection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py:25,Integrability,inject,injected,25,"""""""STL sequence iterator injected in RooAbsCollection, inherited by RooArgSet""""""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooabscollection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py:55,Modifiability,inherit,inherited,55,"""""""STL sequence iterator injected in RooAbsCollection, inherited by RooArgSet""""""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooabscollection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py:25,Security,inject,injected,25,"""""""STL sequence iterator injected in RooAbsCollection, inherited by RooArgSet""""""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooabscollection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabspdf_fitto.py:5,Testability,Test,Test,5,"""""""; Test for the FitTo callable.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooabspdf_fitto.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabspdf_fitto.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabspdf_fitto.py:2,Testability,test,test,2,"# test that kwargs can be passed; # and lead to correct result",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooabspdf_fitto.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabspdf_fitto.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabspdf_fitto.py:2,Testability,test,test,2,"# test that AttributeError is raised; # if keyword does not correspong to CmdArg",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooabspdf_fitto.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabspdf_fitto.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabspdf_fitto.py:2,Testability,test,test,2,"# test that fitting with keyword arguments leads to the same result; # as doing the same fit with passed ROOT objects",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooabspdf_fitto.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabspdf_fitto.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabspdf_fitto.py:15,Availability,error,error,15,"# test that no error is causes if python style and cpp style; # args are provided to fitto and that results are identical",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooabspdf_fitto.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabspdf_fitto.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabspdf_fitto.py:2,Testability,test,test,2,"# test that no error is causes if python style and cpp style; # args are provided to fitto and that results are identical",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooabspdf_fitto.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabspdf_fitto.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabsreal_ploton.py:5,Testability,Test,Test,5,"""""""; Test for the PlotOn callable.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooabsreal_ploton.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabsreal_ploton.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabsreal_ploton.py:2,Testability,test,test,2,"# test that kwargs can be passed; # and lead to correct result",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooabsreal_ploton.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabsreal_ploton.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabsreal_ploton.py:2,Testability,test,test,2,"# test that AttributeError is raised; # if keyword does not correspong to CmdArg",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooabsreal_ploton.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabsreal_ploton.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabsreal_ploton.py:2,Testability,test,test,2,"# test that fitting with keyword arguments leads to the same result; # as doing the same plot with passed ROOT objects",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooabsreal_ploton.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabsreal_ploton.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabsreal_ploton.py:15,Availability,error,error,15,"# test that no error is causes if python style and cpp style; # args are provided to plotOn and that results are identical",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooabsreal_ploton.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabsreal_ploton.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabsreal_ploton.py:2,Testability,test,test,2,"# test that no error is causes if python style and cpp style; # args are provided to plotOn and that results are identical",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooabsreal_ploton.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabsreal_ploton.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooarglist.py:5,Testability,Test,Test,5,"""""""; Test for RooArgList pythonizations.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooarglist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooarglist.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooarglist.py:98,Testability,test,test,98,"# General check that the conversion from string or tuple works, using; # constants to get compact test code.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooarglist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooarglist.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooarglist.py:165,Testability,test,test,165,"# Let's make sure that we can add two arguments with the same name to; # the RooArgList. Here, we try to add the same RooConst two times. The; # motivation for this test if the RooArgList is created via an; # intermediate RooArgSet, which should not happen.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooarglist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooarglist.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodatahist_numpy.py:3,Testability,Test,Test,3,"""""""Test exporting to numpy and then importing back a RooDataHist.""""""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/roodatahist_numpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodatahist_numpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodatahist_ploton.py:27,Testability,test,test,27,"""""""; Initially, this was a test for the pythonization that allowed; RooDataHist to use the overloads of plotOn defined in RooAbsData.; Currently, such functionality is automatically provided by Cppyy; and ROOT meta: the overloads obtained with 'using' declarations; are taken into account when calling a method.; We keep this test to check that the aforementioned functionality; works properly in a case that is important for RooFit.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/roodatahist_ploton.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodatahist_ploton.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodatahist_ploton.py:326,Testability,test,test,326,"""""""; Initially, this was a test for the pythonization that allowed; RooDataHist to use the overloads of plotOn defined in RooAbsData.; Currently, such functionality is automatically provided by Cppyy; and ROOT meta: the overloads obtained with 'using' declarations; are taken into account when calling a method.; We keep this test to check that the aforementioned functionality; works properly in a case that is important for RooFit.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/roodatahist_ploton.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodatahist_ploton.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodatahist_ploton.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/roodatahist_ploton.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodatahist_ploton.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py:9,Testability,test,test,9,"""""""Basic test with a real value and a category.""""""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py:3,Testability,Test,Test,3,"""""""Test with a weighted dataset.""""""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py:3,Testability,Test,Test,3,"""""""Test if the optional computation of derived weights works.""""""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py:3,Testability,Test,Test,3,"""""""Test exporting to numpy and then importing back a non-weighted dataset.""""""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py:3,Testability,Test,Test,3,"""""""Test exporting to numpy and then importing back a weighted dataset.""""""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py:18,Modifiability,variab,variable,18,"# Add column with variable w to previously generated dataset",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py:3,Testability,Test,Test,3,"""""""Test that rows with out-of-range values are skipped, both for; real-valued columns and categories.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py:13,Modifiability,variab,variable,13,"# The RooFit variable ""x"" is only defined from -1 to 2, and the; # category doesn't have the 0-state.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py:3,Testability,Test,Test,3,"""""""Test whether the import also works with non-contiguous arrays.; Covers GitHub issue #13605.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roodataset_numpy.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooglobalfunc.py:5,Testability,Test,Test,5,"""""""; Test for RooGlobalFunc pythonizations.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooglobalfunc.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooglobalfunc.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooglobalfunc.py:3,Testability,Test,Test,3,"""""""Test that the color code pythonizations in the functions like; RooFit.LineColor are working as they should.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooglobalfunc.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooglobalfunc.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooglobalfunc.py:3,Testability,Test,Test,3,"""""""Test that the RooFit.Link() command argument works as expected in; the RooDataSet constructor.; Inspired by the reproducer code in GitHub issue #11469.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooglobalfunc.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooglobalfunc.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roojsonfactorywstool.py:5,Testability,Test,Test,5,"""""""; Test for RooJSONFactoryWSTool pythonizations.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/roojsonfactorywstool.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roojsonfactorywstool.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roolinkedlist.py:5,Testability,Test,Tests,5,"""""""; Tests for the RooLinkedList.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/roolinkedlist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roolinkedlist.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roolinkedlist.py:2,Testability,test,test,2,"# test if we can correctly iterate over a RooLinkedList, also in; # reverse.",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/roolinkedlist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roolinkedlist.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roosimultaneous.py:5,Testability,Test,Test,5,"""""""; Test for the pythonizations of RooSimultaneous.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/roosimultaneous.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roosimultaneous.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roosimultaneous.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/roosimultaneous.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/roosimultaneous.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py:5,Testability,Test,Test,5,"""""""; Test for the pythonizations of RooWorkspace.; """"""",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooworkspace.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py:2,Testability,Test,Tests,2,"# Tests",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooworkspace.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py:25,Modifiability,variab,variables,25,"# Prepare workspace with variables and a PDF",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooworkspace.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py:2,Testability,Test,Test,2,"# Test that rename argument has worked",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooworkspace.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py:23,Modifiability,variab,variables,23,"# Test to check if new variables are created",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooworkspace.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py:2,Testability,Test,Test,2,"# Test to check if new variables are created",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooworkspace.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py:2,Testability,Test,Test,2,"# Test to check if new p.d.f.s are created",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooworkspace.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py:23,Modifiability,variab,variables,23,"# Test to check if new variables are created",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooworkspace.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py:2,Testability,Test,Test,2,"# Test to check if new variables are created",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooworkspace.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py:2,Testability,Test,Test,2,"# Test to check if new functions are created",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooworkspace.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py
https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py:2,Testability,Test,Test,2,"# Test to check if new p.d.f.s are created",MatchSource.CODE_COMMENT,bindings/pyroot/pythonizations/test/roofit/rooworkspace.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooworkspace.py
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRDataFrame.h:498,Modifiability,variab,variables,498,"/**; \class TRDataFrame. This is a class to create DataFrames from ROOT to R; <center><h2>TRDataFrame class</h2></center>. DataFrame is a very important datatype in R and in ROOTR we have a class to manipulate<br>; dataframes called TRDataFrame, with a lot of very useful operators overloaded to work with TRDataFrame's objects<br>; in a similar way that in the R environment but from c++ in ROOT.<br>; Example:<br>; <br>; Lets to create need data to play with dataframe features<br>. <h2>Creating variables</h2><br>; \code{.cpp}; TVectorD v1(3);; std::vector<Double_t> v2(3);; std::array<Int_t,3> v3{ {1,2,3} };; std::list<std::string> names;; \endcode. <h2> Assigning values </h2><br>; \code{.cpp}; v1[0]=1;; v1[1]=2;; v1[2]=3;. v2[0]=0.101;; v2[1]=0.202;; v2[2]=0.303;. names.push_back(""v1"");; names.push_back(""v2"");; names.push_back(""v3"");. ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; \endcode. In R the dataframe have associate to every column a label,; in ROOTR you can have the same label using the class ROOT::R::Label to create a TRDataFrame where you data; have a label associate.; <h2> Creating dataframe object with its labels</h2> <br>; \code{.cpp}; using namespace ROOT::R;; TRDataFrame df1(Label[""var1""]=v1,Label[""var2""]=v2,Label[""var3""]=v3,Label[""strings""]=names);; \endcode. <h2>Passing dataframe to R's environment</h2><br>; \code{.cpp}; r[""df1""]<<df1;; r<<""print(df1)"";; \endcode; Output; \code; var1 var2 var3 strings; 1 1 0.101 1 v1; 2 2 0.202 2 v2; 3 3 0.303 3 v3; \endcode. Manipulating data between dataframes; <h2>Adding colunms to dataframe</h2><br>; \code{.cpp}; TVectorD v4(3);; //filling the vector fro R's environment; r[""c(-1,-2,-3)""]>>v4;; //adding new colunm to df1 with name var4; df1[""var4""]=v4;; //updating df1 in R's environment; r[""df1""]<<df1;; //printing df1; r<<""print(df1)"";; \endcode. Output; var1 var2 var3 strings var4; 1 1 0.101 1 v1 -1; 2 2 0.202 2 v2 -2; 3 3 0.303 3 v3 -3. <h2>Getting dataframe from R's environment</h2><br>; \code{.cpp};",MatchSource.CODE_COMMENT,bindings/r/inc/TRDataFrame.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRDataFrame.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRDataFrame.h:2947,Usability,Guid,Guide,2947,"el associate.; <h2> Creating dataframe object with its labels</h2> <br>; \code{.cpp}; using namespace ROOT::R;; TRDataFrame df1(Label[""var1""]=v1,Label[""var2""]=v2,Label[""var3""]=v3,Label[""strings""]=names);; \endcode. <h2>Passing dataframe to R's environment</h2><br>; \code{.cpp}; r[""df1""]<<df1;; r<<""print(df1)"";; \endcode; Output; \code; var1 var2 var3 strings; 1 1 0.101 1 v1; 2 2 0.202 2 v2; 3 3 0.303 3 v3; \endcode. Manipulating data between dataframes; <h2>Adding colunms to dataframe</h2><br>; \code{.cpp}; TVectorD v4(3);; //filling the vector fro R's environment; r[""c(-1,-2,-3)""]>>v4;; //adding new colunm to df1 with name var4; df1[""var4""]=v4;; //updating df1 in R's environment; r[""df1""]<<df1;; //printing df1; r<<""print(df1)"";; \endcode. Output; var1 var2 var3 strings var4; 1 1 0.101 1 v1 -1; 2 2 0.202 2 v2 -2; 3 3 0.303 3 v3 -3. <h2>Getting dataframe from R's environment</h2><br>; \code{.cpp}; ROOT::R::TRDataFrame df2;. r<<""df2<-data.frame(v1=c(0.1,0.2,0.3),v2=c(3,2,1))"";; r[""df2""]>>df2;. TVectorD v(3);; df2[""v1""]>>v;; v.Print();. df2[""v2""]>>v;; v.Print();; \endcode. Output; \code; Vector (3) is as follows. | 1 |; ------------------; 0 |0.1; 1 |0.2; 2 |0.3. Vector (3) is as follows. | 1 |; ------------------; 0 |3; 1 |2; 2 |1; \endcode. <h2>Working with colunms between dataframes</h2><br>; \code{.cpp}; df2[""v3""]<<df1[""strings""];. //updating df2 in R's environment; r[""df2""]<<df2;; r<<""print(df2)"";; \endcode; Output; \code; v1 v2 v3; 1 0.1 3 v1; 2 0.2 2 v2; 3 0.3 1 v3; \endcode. <h2>Working with colunms between dataframes</h2><br>; \code{.cpp}; //passing values from colunm v3 of df2 to var1 of df1; df2[""v3""]>>df1[""var1""];; //updating df1 in R's environment; r[""df1""]<<df1;; r<<""print(df1)"";; \endcode; Output; \code; var1 var2 var3 strings var4; 1 v1 0.101 1 v1 -1; 2 v2 0.202 2 v2 -2; 3 v3 0.303 3 v3 -3; \endcode; <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>; @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRDataFrame.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRDataFrame.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRDataFrame.h:3063,Usability,Guid,Guide,3063,"el associate.; <h2> Creating dataframe object with its labels</h2> <br>; \code{.cpp}; using namespace ROOT::R;; TRDataFrame df1(Label[""var1""]=v1,Label[""var2""]=v2,Label[""var3""]=v3,Label[""strings""]=names);; \endcode. <h2>Passing dataframe to R's environment</h2><br>; \code{.cpp}; r[""df1""]<<df1;; r<<""print(df1)"";; \endcode; Output; \code; var1 var2 var3 strings; 1 1 0.101 1 v1; 2 2 0.202 2 v2; 3 3 0.303 3 v3; \endcode. Manipulating data between dataframes; <h2>Adding colunms to dataframe</h2><br>; \code{.cpp}; TVectorD v4(3);; //filling the vector fro R's environment; r[""c(-1,-2,-3)""]>>v4;; //adding new colunm to df1 with name var4; df1[""var4""]=v4;; //updating df1 in R's environment; r[""df1""]<<df1;; //printing df1; r<<""print(df1)"";; \endcode. Output; var1 var2 var3 strings var4; 1 1 0.101 1 v1 -1; 2 2 0.202 2 v2 -2; 3 3 0.303 3 v3 -3. <h2>Getting dataframe from R's environment</h2><br>; \code{.cpp}; ROOT::R::TRDataFrame df2;. r<<""df2<-data.frame(v1=c(0.1,0.2,0.3),v2=c(3,2,1))"";; r[""df2""]>>df2;. TVectorD v(3);; df2[""v1""]>>v;; v.Print();. df2[""v2""]>>v;; v.Print();; \endcode. Output; \code; Vector (3) is as follows. | 1 |; ------------------; 0 |0.1; 1 |0.2; 2 |0.3. Vector (3) is as follows. | 1 |; ------------------; 0 |3; 1 |2; 2 |1; \endcode. <h2>Working with colunms between dataframes</h2><br>; \code{.cpp}; df2[""v3""]<<df1[""strings""];. //updating df2 in R's environment; r[""df2""]<<df2;; r<<""print(df2)"";; \endcode; Output; \code; v1 v2 v3; 1 0.1 3 v1; 2 0.2 2 v2; 3 0.3 1 v3; \endcode. <h2>Working with colunms between dataframes</h2><br>; \code{.cpp}; //passing values from colunm v3 of df2 to var1 of df1; df2[""v3""]>>df1[""var1""];; //updating df1 in R's environment; r[""df1""]<<df1;; r<<""print(df1)"";; \endcode; Output; \code; var1 var2 var3 strings var4; 1 v1 0.101 1 v1 -1; 2 v2 0.202 2 v2 -2; 3 v3 0.303 3 v3 -3; \endcode; <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>; @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRDataFrame.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRDataFrame.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRDataFrame.h:64,Integrability,wrap,wrappable,64,/**; template method for operator assignation; \param var any R wrappable datatype; */,MatchSource.CODE_COMMENT,bindings/r/inc/TRDataFrame.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRDataFrame.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRDataFrame__ctors.h:129,Integrability,interface,interface,129,"// -*- mode: C++; c-indent-level: 4; c-basic-offset: 4; tab-width: 8 -*-; //; // TRIDataFrame_Impl__ctors.h: based in Rcpp R/C++ interface class library -- generated helper code for TRDataFrame_Impl.h; //; // Copyright (C) 2010 - 2013 Dirk Eddelbuettel and Romain Francois; // Modified by Omar Zapata for ROOTR; //; // This file is based in Rcpp.",MatchSource.CODE_COMMENT,bindings/r/inc/TRDataFrame__ctors.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRDataFrame__ctors.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h:2351,Availability,toler,tolerance,2351," will return a single vetor. \code{.cpp}; #include<TRInterface.h>. //in the next function the pointer *double must be changed by TVectorD, because the pointer has no; //sense in R's environment.; Double_t RosenBrock(const TVectorD xx ); {; const Double_t x = xx[0];; const Double_t y = xx[1];; const Double_t tmp1 = y-x*x;; const Double_t tmp2 = 1-x;; return 100*tmp1*tmp1+tmp2*tmp2;; }. TVectorD RosenBrockGrad(const TVectorD xx ); {; const Double_t x = xx[0];; const Double_t y = xx[1];; TVectorD grad(2);; grad[0]=-400 * x * (y - x * x) - 2 * (1 - x);; grad[1]=200 * (y - x * x);; return grad;; }. void Minimization(); {; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; //passing RosenBrock function to R; r[""RosenBrock""]<<ROOT::R::TRFunctionExport(RosenBrock);. //passing RosenBrockGrad function to R; r[""RosenBrockGrad""]<<ROOT::R::TRFunctionExport(RosenBrockGrad);. //the option ""method"" could be ""Nelder-Mead"", ""BFGS"", ""CG"", ""L-BFGS-B"", ""SANN"",""Brent""; //the option ""control"" lets you put some constraints like:; //""maxit"" The maximum number of iterations; //""abstol"" The absolute convergence tolerance.; //""reltol"" Relative convergence tolerance.; r<<""result <- optim( c(0.01,0.01), RosenBrock,method='BFGS',control = list(maxit = 1000000) )"";. //Getting results from R; TVectorD min=r.Eval(""result$par"");. std::cout.precision(8);; //printing results; std::cout<<""-----------------------------------------""<<std::endl;; std::cout<<""Minimum x=""<<min[0]<<"" y=""<<min[1]<<std::endl;; std::cout<<""Value at minimum =""<<RosenBrock(min)<<std::endl;. //using the gradient; r<<""optimHess(result$par, RosenBrock, RosenBrockGrad)"";; r<<""hresult <- optim(c(-1.2,1), RosenBrock, NULL, method = 'BFGS', hessian = TRUE)"";; //getting the minimum calculated with the gradient; TVectorD hmin=r.Eval(""hresult$par"");. //printing results; std::cout<<""-----------------------------------------""<<std::endl;; std::cout<<""Minimization with the Gradient""<<endl;; std::cout<<""Minimum x=""<<hmin[0]<<"" y=""<<hmin[",MatchSource.CODE_COMMENT,bindings/r/inc/TRFunctionExport.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h:2395,Availability,toler,tolerance,2395,"ause the pointer has no; //sense in R's environment.; Double_t RosenBrock(const TVectorD xx ); {; const Double_t x = xx[0];; const Double_t y = xx[1];; const Double_t tmp1 = y-x*x;; const Double_t tmp2 = 1-x;; return 100*tmp1*tmp1+tmp2*tmp2;; }. TVectorD RosenBrockGrad(const TVectorD xx ); {; const Double_t x = xx[0];; const Double_t y = xx[1];; TVectorD grad(2);; grad[0]=-400 * x * (y - x * x) - 2 * (1 - x);; grad[1]=200 * (y - x * x);; return grad;; }. void Minimization(); {; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; //passing RosenBrock function to R; r[""RosenBrock""]<<ROOT::R::TRFunctionExport(RosenBrock);. //passing RosenBrockGrad function to R; r[""RosenBrockGrad""]<<ROOT::R::TRFunctionExport(RosenBrockGrad);. //the option ""method"" could be ""Nelder-Mead"", ""BFGS"", ""CG"", ""L-BFGS-B"", ""SANN"",""Brent""; //the option ""control"" lets you put some constraints like:; //""maxit"" The maximum number of iterations; //""abstol"" The absolute convergence tolerance.; //""reltol"" Relative convergence tolerance.; r<<""result <- optim( c(0.01,0.01), RosenBrock,method='BFGS',control = list(maxit = 1000000) )"";. //Getting results from R; TVectorD min=r.Eval(""result$par"");. std::cout.precision(8);; //printing results; std::cout<<""-----------------------------------------""<<std::endl;; std::cout<<""Minimum x=""<<min[0]<<"" y=""<<min[1]<<std::endl;; std::cout<<""Value at minimum =""<<RosenBrock(min)<<std::endl;. //using the gradient; r<<""optimHess(result$par, RosenBrock, RosenBrockGrad)"";; r<<""hresult <- optim(c(-1.2,1), RosenBrock, NULL, method = 'BFGS', hessian = TRUE)"";; //getting the minimum calculated with the gradient; TVectorD hmin=r.Eval(""hresult$par"");. //printing results; std::cout<<""-----------------------------------------""<<std::endl;; std::cout<<""Minimization with the Gradient""<<endl;; std::cout<<""Minimum x=""<<hmin[0]<<"" y=""<<hmin[1]<<std::endl;; std::cout<<""Value at minimum =""<<RosenBrock(hmin)<<std::endl;. }; \endcode. Output; \code; Processing Minimization.C...; ----",MatchSource.CODE_COMMENT,bindings/r/inc/TRFunctionExport.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h:807,Integrability,interface,interface,807,"/**; \class TRFunctionExport. This is a class to pass functions from ROOT to R; <center><h2>TRFunctionExport class</h2></center>; <p>; The TRFunctionExport class lets you pass ROOT's functions to R's environment<br>; </p>; <p>; The next example was based in <br>; <a href=""https://root.cern/doc/master/NumericalMinimization_8C.html"">; https://root.cern/doc/master/NumericalMinimization_8C.html; </a><br>; <a href=""http://stat.ethz.ch/R-manual/R-devel/library/stats/html/optim.html"">; http://stat.ethz.ch/R-manual/R-devel/library/stats/html/optim.html</a><br>. </p>. Let \f$ f(x,y)=(x-1)^{2} + 100(y-x^{2})^{2} \f$ , which is called the Rosenbrock; function. It's known that this function has a minimum when \f$ y = x^{2}\f$ , and \f$ x = 1.\f$; Let's get the minimum using R's optim package through ROOTR's interface.; In the code this function was called ""Double_t RosenBrock(const TVectorD xx )"", because for; optim, the input in your function definition must be a single vector. The Gradient is formed by. \f$ \frac{\partial f}{\partial x} = -400x(y - x^{2}) - 2(1 - x) \f$. \f$ \frac{\partial f}{\partial y} = 200(y - x^{2}); \f$. The ""TVectorD RosenBrockGrad(const TVectorD xx )"" function; must have a single vector as the argument a it will return a single vetor. \code{.cpp}; #include<TRInterface.h>. //in the next function the pointer *double must be changed by TVectorD, because the pointer has no; //sense in R's environment.; Double_t RosenBrock(const TVectorD xx ); {; const Double_t x = xx[0];; const Double_t y = xx[1];; const Double_t tmp1 = y-x*x;; const Double_t tmp2 = 1-x;; return 100*tmp1*tmp1+tmp2*tmp2;; }. TVectorD RosenBrockGrad(const TVectorD xx ); {; const Double_t x = xx[0];; const Double_t y = xx[1];; TVectorD grad(2);; grad[0]=-400 * x * (y - x * x) - 2 * (1 - x);; grad[1]=200 * (y - x * x);; return grad;; }. void Minimization(); {; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; //passing RosenBrock function to R; r[""RosenBrock""]<<ROOT::R::TRFunctionExpo",MatchSource.CODE_COMMENT,bindings/r/inc/TRFunctionExport.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h:3653,Usability,Guid,Guide,3653,"rad[1]=200 * (y - x * x);; return grad;; }. void Minimization(); {; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; //passing RosenBrock function to R; r[""RosenBrock""]<<ROOT::R::TRFunctionExport(RosenBrock);. //passing RosenBrockGrad function to R; r[""RosenBrockGrad""]<<ROOT::R::TRFunctionExport(RosenBrockGrad);. //the option ""method"" could be ""Nelder-Mead"", ""BFGS"", ""CG"", ""L-BFGS-B"", ""SANN"",""Brent""; //the option ""control"" lets you put some constraints like:; //""maxit"" The maximum number of iterations; //""abstol"" The absolute convergence tolerance.; //""reltol"" Relative convergence tolerance.; r<<""result <- optim( c(0.01,0.01), RosenBrock,method='BFGS',control = list(maxit = 1000000) )"";. //Getting results from R; TVectorD min=r.Eval(""result$par"");. std::cout.precision(8);; //printing results; std::cout<<""-----------------------------------------""<<std::endl;; std::cout<<""Minimum x=""<<min[0]<<"" y=""<<min[1]<<std::endl;; std::cout<<""Value at minimum =""<<RosenBrock(min)<<std::endl;. //using the gradient; r<<""optimHess(result$par, RosenBrock, RosenBrockGrad)"";; r<<""hresult <- optim(c(-1.2,1), RosenBrock, NULL, method = 'BFGS', hessian = TRUE)"";; //getting the minimum calculated with the gradient; TVectorD hmin=r.Eval(""hresult$par"");. //printing results; std::cout<<""-----------------------------------------""<<std::endl;; std::cout<<""Minimization with the Gradient""<<endl;; std::cout<<""Minimum x=""<<hmin[0]<<"" y=""<<hmin[1]<<std::endl;; std::cout<<""Value at minimum =""<<RosenBrock(hmin)<<std::endl;. }; \endcode. Output; \code; Processing Minimization.C...; -----------------------------------------; Minimum x=0.99980006 y=0.99960016; Value at minimum =3.9974288e-08; -----------------------------------------; Minimization with the Gradient; Minimum x=0.99980443 y=0.99960838; Value at minimum =3.8273828e-08; \endcode; <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>. @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRFunctionExport.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h:3769,Usability,Guid,Guide,3769,"rad[1]=200 * (y - x * x);; return grad;; }. void Minimization(); {; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; //passing RosenBrock function to R; r[""RosenBrock""]<<ROOT::R::TRFunctionExport(RosenBrock);. //passing RosenBrockGrad function to R; r[""RosenBrockGrad""]<<ROOT::R::TRFunctionExport(RosenBrockGrad);. //the option ""method"" could be ""Nelder-Mead"", ""BFGS"", ""CG"", ""L-BFGS-B"", ""SANN"",""Brent""; //the option ""control"" lets you put some constraints like:; //""maxit"" The maximum number of iterations; //""abstol"" The absolute convergence tolerance.; //""reltol"" Relative convergence tolerance.; r<<""result <- optim( c(0.01,0.01), RosenBrock,method='BFGS',control = list(maxit = 1000000) )"";. //Getting results from R; TVectorD min=r.Eval(""result$par"");. std::cout.precision(8);; //printing results; std::cout<<""-----------------------------------------""<<std::endl;; std::cout<<""Minimum x=""<<min[0]<<"" y=""<<min[1]<<std::endl;; std::cout<<""Value at minimum =""<<RosenBrock(min)<<std::endl;. //using the gradient; r<<""optimHess(result$par, RosenBrock, RosenBrockGrad)"";; r<<""hresult <- optim(c(-1.2,1), RosenBrock, NULL, method = 'BFGS', hessian = TRUE)"";; //getting the minimum calculated with the gradient; TVectorD hmin=r.Eval(""hresult$par"");. //printing results; std::cout<<""-----------------------------------------""<<std::endl;; std::cout<<""Minimization with the Gradient""<<endl;; std::cout<<""Minimum x=""<<hmin[0]<<"" y=""<<hmin[1]<<std::endl;; std::cout<<""Value at minimum =""<<RosenBrock(hmin)<<std::endl;. }; \endcode. Output; \code; Processing Minimization.C...; -----------------------------------------; Minimum x=0.99980006 y=0.99960016; Value at minimum =3.9974288e-08; -----------------------------------------; Minimization with the Gradient; Minimum x=0.99980443 y=0.99960838; Value at minimum =3.8273828e-08; \endcode; <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>. @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRFunctionExport.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h:125,Integrability,wrap,wrapped,125,/**; TRFunctionExport template constructor that supports a lot of function's prototypes; \param fun supported function to be wrapped by Rcpp; */,MatchSource.CODE_COMMENT,bindings/r/inc/TRFunctionExport.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h:143,Integrability,wrap,wrapped,143,"/**; function to assign function to export,; template method that supports a lot of function's prototypes; \param fun supported function to be wrapped by Rcpp; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRFunctionExport.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionExport.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport.h:2065,Availability,Error,Error,2065,"rt list(""list"");; TRFunctionImport asformula(""as.formula"");; TRFunctionImport nls(""nls"");; TRFunctionImport confint(""confint"");; TRFunctionImport summary(""summary"");; TRFunctionImport print(""print"");; TRFunctionImport plot(""plot"");; TRFunctionImport lines(""lines"");; TRFunctionImport devnew(""dev.new"");; TRFunctionImport devoff(""dev.off"");; TRFunctionImport min(""min"");; TRFunctionImport max(""max"");; TRFunctionImport seq(""seq"");; TRFunctionImport predict(""predict"");. r<<""options(device='png')"";//enable plot in png file. ////////////////////////; //doing the procedure //; ////////////////////////; TRObject xdata = c(-2,-1.64,-1.33,-0.7,0,0.45,1.2,1.64,2.32,2.9);; TRObject ydata = c(0.699369,0.700462,0.695354,1.03905,1.97389,2.41143,1.91091,0.919576,-0.730975,-1.42001);. TRDataFrame data;; data[""xdata""]=xdata;; data[""ydata""]=ydata;. //fit = nls(ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata), start=list(p1=1,p2=0.2)) <- R code; TRObject fit = nls(asformula(""ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata)""),Label[""data""]=data, Label[""start""]=list(Label[""p1""]=1,Label[""p2""]=0.2));; print(summary(fit));. print(confint(fit));. devnew(""Fitting Regression"");; plot(xdata,ydata);. TRObject xgrid=seq(min(xdata),max(xdata),Label[""len""]=10);; lines(xgrid,predict(fit,xgrid),Label[""col""] = ""green"");; devoff();; }; \endcode. Output; \code; Formula: ydata ~ p1 * cos(p2 * xdata) + p2 * sin(p1 * xdata). Parameters:; Estimate Std. Error t value Pr(>|t|); p1 1.881851 0.027430 68.61 2.27e-12 ***; p2 0.700230 0.009153 76.51 9.50e-13 ***; ---; Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1. Residual standard error: 0.08202 on 8 degrees of freedom. Number of iterations to convergence: 7; Achieved convergence tolerance: 2.189e-06. Waiting for profiling to be done...; 2.5% 97.5%; p1 1.8206081 1.9442365; p2 0.6794193 0.7209843; \endcode; <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>. @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRFunctionImport.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport.h:2257,Availability,error,error,2257,"rt list(""list"");; TRFunctionImport asformula(""as.formula"");; TRFunctionImport nls(""nls"");; TRFunctionImport confint(""confint"");; TRFunctionImport summary(""summary"");; TRFunctionImport print(""print"");; TRFunctionImport plot(""plot"");; TRFunctionImport lines(""lines"");; TRFunctionImport devnew(""dev.new"");; TRFunctionImport devoff(""dev.off"");; TRFunctionImport min(""min"");; TRFunctionImport max(""max"");; TRFunctionImport seq(""seq"");; TRFunctionImport predict(""predict"");. r<<""options(device='png')"";//enable plot in png file. ////////////////////////; //doing the procedure //; ////////////////////////; TRObject xdata = c(-2,-1.64,-1.33,-0.7,0,0.45,1.2,1.64,2.32,2.9);; TRObject ydata = c(0.699369,0.700462,0.695354,1.03905,1.97389,2.41143,1.91091,0.919576,-0.730975,-1.42001);. TRDataFrame data;; data[""xdata""]=xdata;; data[""ydata""]=ydata;. //fit = nls(ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata), start=list(p1=1,p2=0.2)) <- R code; TRObject fit = nls(asformula(""ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata)""),Label[""data""]=data, Label[""start""]=list(Label[""p1""]=1,Label[""p2""]=0.2));; print(summary(fit));. print(confint(fit));. devnew(""Fitting Regression"");; plot(xdata,ydata);. TRObject xgrid=seq(min(xdata),max(xdata),Label[""len""]=10);; lines(xgrid,predict(fit,xgrid),Label[""col""] = ""green"");; devoff();; }; \endcode. Output; \code; Formula: ydata ~ p1 * cos(p2 * xdata) + p2 * sin(p1 * xdata). Parameters:; Estimate Std. Error t value Pr(>|t|); p1 1.881851 0.027430 68.61 2.27e-12 ***; p2 0.700230 0.009153 76.51 9.50e-13 ***; ---; Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1. Residual standard error: 0.08202 on 8 degrees of freedom. Number of iterations to convergence: 7; Achieved convergence tolerance: 2.189e-06. Waiting for profiling to be done...; 2.5% 97.5%; p1 1.8206081 1.9442365; p2 0.6794193 0.7209843; \endcode; <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>. @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRFunctionImport.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport.h:2358,Availability,toler,tolerance,2358,"rt list(""list"");; TRFunctionImport asformula(""as.formula"");; TRFunctionImport nls(""nls"");; TRFunctionImport confint(""confint"");; TRFunctionImport summary(""summary"");; TRFunctionImport print(""print"");; TRFunctionImport plot(""plot"");; TRFunctionImport lines(""lines"");; TRFunctionImport devnew(""dev.new"");; TRFunctionImport devoff(""dev.off"");; TRFunctionImport min(""min"");; TRFunctionImport max(""max"");; TRFunctionImport seq(""seq"");; TRFunctionImport predict(""predict"");. r<<""options(device='png')"";//enable plot in png file. ////////////////////////; //doing the procedure //; ////////////////////////; TRObject xdata = c(-2,-1.64,-1.33,-0.7,0,0.45,1.2,1.64,2.32,2.9);; TRObject ydata = c(0.699369,0.700462,0.695354,1.03905,1.97389,2.41143,1.91091,0.919576,-0.730975,-1.42001);. TRDataFrame data;; data[""xdata""]=xdata;; data[""ydata""]=ydata;. //fit = nls(ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata), start=list(p1=1,p2=0.2)) <- R code; TRObject fit = nls(asformula(""ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata)""),Label[""data""]=data, Label[""start""]=list(Label[""p1""]=1,Label[""p2""]=0.2));; print(summary(fit));. print(confint(fit));. devnew(""Fitting Regression"");; plot(xdata,ydata);. TRObject xgrid=seq(min(xdata),max(xdata),Label[""len""]=10);; lines(xgrid,predict(fit,xgrid),Label[""col""] = ""green"");; devoff();; }; \endcode. Output; \code; Formula: ydata ~ p1 * cos(p2 * xdata) + p2 * sin(p1 * xdata). Parameters:; Estimate Std. Error t value Pr(>|t|); p1 1.881851 0.027430 68.61 2.27e-12 ***; p2 0.700230 0.009153 76.51 9.50e-13 ***; ---; Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1. Residual standard error: 0.08202 on 8 degrees of freedom. Number of iterations to convergence: 7; Achieved convergence tolerance: 2.189e-06. Waiting for profiling to be done...; 2.5% 97.5%; p1 1.8206081 1.9442365; p2 0.6794193 0.7209843; \endcode; <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>. @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRFunctionImport.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport.h:1927,Energy Efficiency,green,green,1927,"rt list(""list"");; TRFunctionImport asformula(""as.formula"");; TRFunctionImport nls(""nls"");; TRFunctionImport confint(""confint"");; TRFunctionImport summary(""summary"");; TRFunctionImport print(""print"");; TRFunctionImport plot(""plot"");; TRFunctionImport lines(""lines"");; TRFunctionImport devnew(""dev.new"");; TRFunctionImport devoff(""dev.off"");; TRFunctionImport min(""min"");; TRFunctionImport max(""max"");; TRFunctionImport seq(""seq"");; TRFunctionImport predict(""predict"");. r<<""options(device='png')"";//enable plot in png file. ////////////////////////; //doing the procedure //; ////////////////////////; TRObject xdata = c(-2,-1.64,-1.33,-0.7,0,0.45,1.2,1.64,2.32,2.9);; TRObject ydata = c(0.699369,0.700462,0.695354,1.03905,1.97389,2.41143,1.91091,0.919576,-0.730975,-1.42001);. TRDataFrame data;; data[""xdata""]=xdata;; data[""ydata""]=ydata;. //fit = nls(ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata), start=list(p1=1,p2=0.2)) <- R code; TRObject fit = nls(asformula(""ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata)""),Label[""data""]=data, Label[""start""]=list(Label[""p1""]=1,Label[""p2""]=0.2));; print(summary(fit));. print(confint(fit));. devnew(""Fitting Regression"");; plot(xdata,ydata);. TRObject xgrid=seq(min(xdata),max(xdata),Label[""len""]=10);; lines(xgrid,predict(fit,xgrid),Label[""col""] = ""green"");; devoff();; }; \endcode. Output; \code; Formula: ydata ~ p1 * cos(p2 * xdata) + p2 * sin(p1 * xdata). Parameters:; Estimate Std. Error t value Pr(>|t|); p1 1.881851 0.027430 68.61 2.27e-12 ***; p2 0.700230 0.009153 76.51 9.50e-13 ***; ---; Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1. Residual standard error: 0.08202 on 8 degrees of freedom. Number of iterations to convergence: 7; Achieved convergence tolerance: 2.189e-06. Waiting for profiling to be done...; 2.5% 97.5%; p1 1.8206081 1.9442365; p2 0.6794193 0.7209843; \endcode; <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>. @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRFunctionImport.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport.h:1090,Safety,predict,predict,1090,"ass to pass functions from ROOT to R. <center><h2>TRFunctionImport class</h2></center>; <p>; The TRFunctionImport class lets you call R's functions to ROOT's environment<br>; The object associated to this class have a set of overloaded operators to use the object like function<br>; </p>; \code{.cpp}; #include<TRInterface.h>. using namespace ROOT::R;; void Function(); {; TRInterface &r = TRInterface::Instance();; r.SetVerbose(1);; ////////////////////////////////////////; //defining functions to be used from R//; ////////////////////////////////////////; TRFunctionImport c(""c"");; TRFunctionImport list(""list"");; TRFunctionImport asformula(""as.formula"");; TRFunctionImport nls(""nls"");; TRFunctionImport confint(""confint"");; TRFunctionImport summary(""summary"");; TRFunctionImport print(""print"");; TRFunctionImport plot(""plot"");; TRFunctionImport lines(""lines"");; TRFunctionImport devnew(""dev.new"");; TRFunctionImport devoff(""dev.off"");; TRFunctionImport min(""min"");; TRFunctionImport max(""max"");; TRFunctionImport seq(""seq"");; TRFunctionImport predict(""predict"");. r<<""options(device='png')"";//enable plot in png file. ////////////////////////; //doing the procedure //; ////////////////////////; TRObject xdata = c(-2,-1.64,-1.33,-0.7,0,0.45,1.2,1.64,2.32,2.9);; TRObject ydata = c(0.699369,0.700462,0.695354,1.03905,1.97389,2.41143,1.91091,0.919576,-0.730975,-1.42001);. TRDataFrame data;; data[""xdata""]=xdata;; data[""ydata""]=ydata;. //fit = nls(ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata), start=list(p1=1,p2=0.2)) <- R code; TRObject fit = nls(asformula(""ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata)""),Label[""data""]=data, Label[""start""]=list(Label[""p1""]=1,Label[""p2""]=0.2));; print(summary(fit));. print(confint(fit));. devnew(""Fitting Regression"");; plot(xdata,ydata);. TRObject xgrid=seq(min(xdata),max(xdata),Label[""len""]=10);; lines(xgrid,predict(fit,xgrid),Label[""col""] = ""green"");; devoff();; }; \endcode. Output; \code; Formula: ydata ~ p1 * cos(p2 * xdata) + p2 * sin(p1 * xdata). Param",MatchSource.CODE_COMMENT,bindings/r/inc/TRFunctionImport.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport.h:1099,Safety,predict,predict,1099,"ass to pass functions from ROOT to R. <center><h2>TRFunctionImport class</h2></center>; <p>; The TRFunctionImport class lets you call R's functions to ROOT's environment<br>; The object associated to this class have a set of overloaded operators to use the object like function<br>; </p>; \code{.cpp}; #include<TRInterface.h>. using namespace ROOT::R;; void Function(); {; TRInterface &r = TRInterface::Instance();; r.SetVerbose(1);; ////////////////////////////////////////; //defining functions to be used from R//; ////////////////////////////////////////; TRFunctionImport c(""c"");; TRFunctionImport list(""list"");; TRFunctionImport asformula(""as.formula"");; TRFunctionImport nls(""nls"");; TRFunctionImport confint(""confint"");; TRFunctionImport summary(""summary"");; TRFunctionImport print(""print"");; TRFunctionImport plot(""plot"");; TRFunctionImport lines(""lines"");; TRFunctionImport devnew(""dev.new"");; TRFunctionImport devoff(""dev.off"");; TRFunctionImport min(""min"");; TRFunctionImport max(""max"");; TRFunctionImport seq(""seq"");; TRFunctionImport predict(""predict"");. r<<""options(device='png')"";//enable plot in png file. ////////////////////////; //doing the procedure //; ////////////////////////; TRObject xdata = c(-2,-1.64,-1.33,-0.7,0,0.45,1.2,1.64,2.32,2.9);; TRObject ydata = c(0.699369,0.700462,0.695354,1.03905,1.97389,2.41143,1.91091,0.919576,-0.730975,-1.42001);. TRDataFrame data;; data[""xdata""]=xdata;; data[""ydata""]=ydata;. //fit = nls(ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata), start=list(p1=1,p2=0.2)) <- R code; TRObject fit = nls(asformula(""ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata)""),Label[""data""]=data, Label[""start""]=list(Label[""p1""]=1,Label[""p2""]=0.2));; print(summary(fit));. print(confint(fit));. devnew(""Fitting Regression"");; plot(xdata,ydata);. TRObject xgrid=seq(min(xdata),max(xdata),Label[""len""]=10);; lines(xgrid,predict(fit,xgrid),Label[""col""] = ""green"");; devoff();; }; \endcode. Output; \code; Formula: ydata ~ p1 * cos(p2 * xdata) + p2 * sin(p1 * xdata). Param",MatchSource.CODE_COMMENT,bindings/r/inc/TRFunctionImport.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport.h:1892,Safety,predict,predict,1892,"rt list(""list"");; TRFunctionImport asformula(""as.formula"");; TRFunctionImport nls(""nls"");; TRFunctionImport confint(""confint"");; TRFunctionImport summary(""summary"");; TRFunctionImport print(""print"");; TRFunctionImport plot(""plot"");; TRFunctionImport lines(""lines"");; TRFunctionImport devnew(""dev.new"");; TRFunctionImport devoff(""dev.off"");; TRFunctionImport min(""min"");; TRFunctionImport max(""max"");; TRFunctionImport seq(""seq"");; TRFunctionImport predict(""predict"");. r<<""options(device='png')"";//enable plot in png file. ////////////////////////; //doing the procedure //; ////////////////////////; TRObject xdata = c(-2,-1.64,-1.33,-0.7,0,0.45,1.2,1.64,2.32,2.9);; TRObject ydata = c(0.699369,0.700462,0.695354,1.03905,1.97389,2.41143,1.91091,0.919576,-0.730975,-1.42001);. TRDataFrame data;; data[""xdata""]=xdata;; data[""ydata""]=ydata;. //fit = nls(ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata), start=list(p1=1,p2=0.2)) <- R code; TRObject fit = nls(asformula(""ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata)""),Label[""data""]=data, Label[""start""]=list(Label[""p1""]=1,Label[""p2""]=0.2));; print(summary(fit));. print(confint(fit));. devnew(""Fitting Regression"");; plot(xdata,ydata);. TRObject xgrid=seq(min(xdata),max(xdata),Label[""len""]=10);; lines(xgrid,predict(fit,xgrid),Label[""col""] = ""green"");; devoff();; }; \endcode. Output; \code; Formula: ydata ~ p1 * cos(p2 * xdata) + p2 * sin(p1 * xdata). Parameters:; Estimate Std. Error t value Pr(>|t|); p1 1.881851 0.027430 68.61 2.27e-12 ***; p2 0.700230 0.009153 76.51 9.50e-13 ***; ---; Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1. Residual standard error: 0.08202 on 8 degrees of freedom. Number of iterations to convergence: 7; Achieved convergence tolerance: 2.189e-06. Waiting for profiling to be done...; 2.5% 97.5%; p1 1.8206081 1.9442365; p2 0.6794193 0.7209843; \endcode; <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>. @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRFunctionImport.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport.h:2497,Usability,Guid,Guide,2497,"rt list(""list"");; TRFunctionImport asformula(""as.formula"");; TRFunctionImport nls(""nls"");; TRFunctionImport confint(""confint"");; TRFunctionImport summary(""summary"");; TRFunctionImport print(""print"");; TRFunctionImport plot(""plot"");; TRFunctionImport lines(""lines"");; TRFunctionImport devnew(""dev.new"");; TRFunctionImport devoff(""dev.off"");; TRFunctionImport min(""min"");; TRFunctionImport max(""max"");; TRFunctionImport seq(""seq"");; TRFunctionImport predict(""predict"");. r<<""options(device='png')"";//enable plot in png file. ////////////////////////; //doing the procedure //; ////////////////////////; TRObject xdata = c(-2,-1.64,-1.33,-0.7,0,0.45,1.2,1.64,2.32,2.9);; TRObject ydata = c(0.699369,0.700462,0.695354,1.03905,1.97389,2.41143,1.91091,0.919576,-0.730975,-1.42001);. TRDataFrame data;; data[""xdata""]=xdata;; data[""ydata""]=ydata;. //fit = nls(ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata), start=list(p1=1,p2=0.2)) <- R code; TRObject fit = nls(asformula(""ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata)""),Label[""data""]=data, Label[""start""]=list(Label[""p1""]=1,Label[""p2""]=0.2));; print(summary(fit));. print(confint(fit));. devnew(""Fitting Regression"");; plot(xdata,ydata);. TRObject xgrid=seq(min(xdata),max(xdata),Label[""len""]=10);; lines(xgrid,predict(fit,xgrid),Label[""col""] = ""green"");; devoff();; }; \endcode. Output; \code; Formula: ydata ~ p1 * cos(p2 * xdata) + p2 * sin(p1 * xdata). Parameters:; Estimate Std. Error t value Pr(>|t|); p1 1.881851 0.027430 68.61 2.27e-12 ***; p2 0.700230 0.009153 76.51 9.50e-13 ***; ---; Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1. Residual standard error: 0.08202 on 8 degrees of freedom. Number of iterations to convergence: 7; Achieved convergence tolerance: 2.189e-06. Waiting for profiling to be done...; 2.5% 97.5%; p1 1.8206081 1.9442365; p2 0.6794193 0.7209843; \endcode; <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>. @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRFunctionImport.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport.h:2613,Usability,Guid,Guide,2613,"rt list(""list"");; TRFunctionImport asformula(""as.formula"");; TRFunctionImport nls(""nls"");; TRFunctionImport confint(""confint"");; TRFunctionImport summary(""summary"");; TRFunctionImport print(""print"");; TRFunctionImport plot(""plot"");; TRFunctionImport lines(""lines"");; TRFunctionImport devnew(""dev.new"");; TRFunctionImport devoff(""dev.off"");; TRFunctionImport min(""min"");; TRFunctionImport max(""max"");; TRFunctionImport seq(""seq"");; TRFunctionImport predict(""predict"");. r<<""options(device='png')"";//enable plot in png file. ////////////////////////; //doing the procedure //; ////////////////////////; TRObject xdata = c(-2,-1.64,-1.33,-0.7,0,0.45,1.2,1.64,2.32,2.9);; TRObject ydata = c(0.699369,0.700462,0.695354,1.03905,1.97389,2.41143,1.91091,0.919576,-0.730975,-1.42001);. TRDataFrame data;; data[""xdata""]=xdata;; data[""ydata""]=ydata;. //fit = nls(ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata), start=list(p1=1,p2=0.2)) <- R code; TRObject fit = nls(asformula(""ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata)""),Label[""data""]=data, Label[""start""]=list(Label[""p1""]=1,Label[""p2""]=0.2));; print(summary(fit));. print(confint(fit));. devnew(""Fitting Regression"");; plot(xdata,ydata);. TRObject xgrid=seq(min(xdata),max(xdata),Label[""len""]=10);; lines(xgrid,predict(fit,xgrid),Label[""col""] = ""green"");; devoff();; }; \endcode. Output; \code; Formula: ydata ~ p1 * cos(p2 * xdata) + p2 * sin(p1 * xdata). Parameters:; Estimate Std. Error t value Pr(>|t|); p1 1.881851 0.027430 68.61 2.27e-12 ***; p2 0.700230 0.009153 76.51 9.50e-13 ***; ---; Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1. Residual standard error: 0.08202 on 8 degrees of freedom. Number of iterations to convergence: 7; Achieved convergence tolerance: 2.189e-06. Waiting for profiling to be done...; 2.5% 97.5%; p1 1.8206081 1.9442365; p2 0.6794193 0.7209843; \endcode; <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>. @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRFunctionImport.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport__oprtr.h:127,Integrability,interface,interface,127,"// -*- mode: C++; c-indent-level: 4; c-basic-offset: 4; tab-width: 8 -*-; //; // TRFunctionImport__oprt.h: based in Rcpp R/C++ interface class library -- generated helper code for Function.h; //; // Copyright (C) 2010 - 2013 Dirk Eddelbuettel and Romain Francois; // Modified by Omar Zapata for ROOTR; //; // This file is based in Rcpp.",MatchSource.CODE_COMMENT,bindings/r/inc/TRFunctionImport__oprtr.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport__oprtr.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:81,Integrability,Interface,Interface,81,/**; @namespace ROOT::R; namespace associated R package for ROOT.; @defgroup R R Interface for Statistical Computing; */,MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:3278,Deployability,Update,Update,3278,"ficient(power) and plot the data,; the known function and the fitted function.; \code{.cpp}. TCanvas *c1 = new TCanvas(""c1"",""Curve Fit"",700,500);; c1->SetGrid();. // draw a frame for multiples graphs; TMultiGraph *mg = new TMultiGraph();. // create the first graph (points with gaussian noise); const Int_t n = 24;; Double_t x[n] ;; Double_t y[n] ;; //Generate points along a X^3 with noise; TRandom rg;; rg.SetSeed(520);; for (Int_t i = 0; i < n; i++) {; x[i] = rg.Uniform(0, 1);; y[i] = TMath::Power(x[i], 3) + rg.Gaus() * 0.06;; }. TGraph *gr1 = new TGraph(n,x,y);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(8);; gr1->SetMarkerSize(1);; mg->Add(gr1);. // create second graph; TF1 *f_known=new TF1(""f_known"",""pow(x,3)"",0,1);; TGraph *gr2 = new TGraph(f_known);; gr2->SetMarkerColor(kRed);; gr2->SetMarkerStyle(8);; gr2->SetMarkerSize(1);; mg->Add(gr2);. //passing x and y values to R for fitting; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; r[""x""]<<TVectorD(n, x);; r[""y""]<<TVectorD(n, y);; //creating a R data frame; r<<""ds<-data.frame(x=x,y=y)"";; //fitting x and y to X^power using Nonlinear Least Squares; r<<""m <- nls(y ~ I(x^power),data = ds, start = list(power = 1),trace = T)"";; //getting the fitted value (power); Double_t power;; r[""summary(m)$coefficients[1]""]>>power;. TF1 *f_fitted=new TF1(""f_fitted"",""pow(x,[0])"",0,1);; f_fitted->SetParameter(0,power);; //plotting the fitted function; TGraph *gr3 = new TGraph(f_fitted);; gr3->SetMarkerColor(kGreen);; gr3->SetMarkerStyle(8);; gr3->SetMarkerSize(1);. mg->Add(gr3);; mg->Draw(""ap"");. //displaying basic results; TPaveText *pt = new TPaveText(0.1,0.6,0.5,0.9,""brNDC"");; pt->SetFillColor(18);; pt->SetTextAlign(12);; pt->AddText(""Fitting x^power "");; pt->AddText("" \""Blue\"" Points with gaussian noise to be fitted"");; pt->AddText("" \""Red\"" Known function x^3"");; TString fmsg;; fmsg.Form("" \""Green\"" Fitted function with power=%.4lf"",power);; pt->AddText(fmsg);; pt->Draw();; c1->Update();; \endcode; @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:659,Energy Efficiency,power,power,659,"/**; \class TRInterface; ROOT R was implemented using the; <A HREF=""http://www.r-project.org/"">R Project</A> library and the modules; <A HREF=""http://cran.r-project.org/web/packages/Rcpp/index.html"">Rcpp</A> and; <A HREF=""http://cran.r-project.org/web/packages/RInside/index.html"">RInside</A>; <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>. \ingroup R; */; /**; <center><h2>TRInterface class</h2></center>. </p>; The TRInterface class lets you process R code from ROOT.<br>; You can call R libraries and their functions, plot results in R or ROOT,<br>; and use the power of ROOT and R at the same time.<br>; It also lets you pass scalars, vectors and matrices from ROOT to R<br>; and from R to ROOT using TRObject; but you can to use overloaded operators [],<< and >> <br>; to work with ROOTR like work with streams of data.<br>. TRInterface class can not be instantiated directly, but you can create objects using the static methods; TRInterface& Instance() and TRInterface* InstancePtr() to create your own objects.<br>; <br>; </p>; Show an example below:; Create an exponential fit, the idea is to create a set of numbers x,y with noise from ROOT,; pass them to R and fit the data to \f$ x^3 \f$, get the fitted coefficient(power) and plot the data,; the known function and the fitted function.; \code{.cpp}. TCanvas *c1 = new TCanvas(""c1"",""Curve Fit"",700,500);; c1->SetGrid();. // draw a frame for multiples graphs; TMultiGraph *mg = new TMultiGraph();. // create the first graph (points with gaussian noise); const Int_t n = 24;; Double_t x[n] ;; Double_t y[n] ;; //Generate points along a X^3 with noise; TRandom rg;; rg.SetSeed(520);; for (Int_t i = 0; i < n; i++) {; x[i] = rg.Uniform(0, 1);; y[i] = TMath::Power(x[i], 3) + rg.Gaus() * 0.06;; }. TGraph *gr1 = new TGraph(n,x,y);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(8);; gr1->SetMarkerSize(1);; mg->Add(gr1);. // create second graph; TF",MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:1321,Energy Efficiency,power,power,1321,"/packages/RInside/index.html"">RInside</A>; <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>. \ingroup R; */; /**; <center><h2>TRInterface class</h2></center>. </p>; The TRInterface class lets you process R code from ROOT.<br>; You can call R libraries and their functions, plot results in R or ROOT,<br>; and use the power of ROOT and R at the same time.<br>; It also lets you pass scalars, vectors and matrices from ROOT to R<br>; and from R to ROOT using TRObject; but you can to use overloaded operators [],<< and >> <br>; to work with ROOTR like work with streams of data.<br>. TRInterface class can not be instantiated directly, but you can create objects using the static methods; TRInterface& Instance() and TRInterface* InstancePtr() to create your own objects.<br>; <br>; </p>; Show an example below:; Create an exponential fit, the idea is to create a set of numbers x,y with noise from ROOT,; pass them to R and fit the data to \f$ x^3 \f$, get the fitted coefficient(power) and plot the data,; the known function and the fitted function.; \code{.cpp}. TCanvas *c1 = new TCanvas(""c1"",""Curve Fit"",700,500);; c1->SetGrid();. // draw a frame for multiples graphs; TMultiGraph *mg = new TMultiGraph();. // create the first graph (points with gaussian noise); const Int_t n = 24;; Double_t x[n] ;; Double_t y[n] ;; //Generate points along a X^3 with noise; TRandom rg;; rg.SetSeed(520);; for (Int_t i = 0; i < n; i++) {; x[i] = rg.Uniform(0, 1);; y[i] = TMath::Power(x[i], 3) + rg.Gaus() * 0.06;; }. TGraph *gr1 = new TGraph(n,x,y);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(8);; gr1->SetMarkerSize(1);; mg->Add(gr1);. // create second graph; TF1 *f_known=new TF1(""f_known"",""pow(x,3)"",0,1);; TGraph *gr2 = new TGraph(f_known);; gr2->SetMarkerColor(kRed);; gr2->SetMarkerStyle(8);; gr2->SetMarkerSize(1);; mg->Add(gr2);. //passing x and y values to R for fitting; ROOT::R::TRInterface &r=ROOT::R:",MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:1809,Energy Efficiency,Power,Power,1809,"ect; but you can to use overloaded operators [],<< and >> <br>; to work with ROOTR like work with streams of data.<br>. TRInterface class can not be instantiated directly, but you can create objects using the static methods; TRInterface& Instance() and TRInterface* InstancePtr() to create your own objects.<br>; <br>; </p>; Show an example below:; Create an exponential fit, the idea is to create a set of numbers x,y with noise from ROOT,; pass them to R and fit the data to \f$ x^3 \f$, get the fitted coefficient(power) and plot the data,; the known function and the fitted function.; \code{.cpp}. TCanvas *c1 = new TCanvas(""c1"",""Curve Fit"",700,500);; c1->SetGrid();. // draw a frame for multiples graphs; TMultiGraph *mg = new TMultiGraph();. // create the first graph (points with gaussian noise); const Int_t n = 24;; Double_t x[n] ;; Double_t y[n] ;; //Generate points along a X^3 with noise; TRandom rg;; rg.SetSeed(520);; for (Int_t i = 0; i < n; i++) {; x[i] = rg.Uniform(0, 1);; y[i] = TMath::Power(x[i], 3) + rg.Gaus() * 0.06;; }. TGraph *gr1 = new TGraph(n,x,y);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(8);; gr1->SetMarkerSize(1);; mg->Add(gr1);. // create second graph; TF1 *f_known=new TF1(""f_known"",""pow(x,3)"",0,1);; TGraph *gr2 = new TGraph(f_known);; gr2->SetMarkerColor(kRed);; gr2->SetMarkerStyle(8);; gr2->SetMarkerSize(1);; mg->Add(gr2);. //passing x and y values to R for fitting; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; r[""x""]<<TVectorD(n, x);; r[""y""]<<TVectorD(n, y);; //creating a R data frame; r<<""ds<-data.frame(x=x,y=y)"";; //fitting x and y to X^power using Nonlinear Least Squares; r<<""m <- nls(y ~ I(x^power),data = ds, start = list(power = 1),trace = T)"";; //getting the fitted value (power); Double_t power;; r[""summary(m)$coefficients[1]""]>>power;. TF1 *f_fitted=new TF1(""f_fitted"",""pow(x,[0])"",0,1);; f_fitted->SetParameter(0,power);; //plotting the fitted function; TGraph *gr3 = new TGraph(f_fitted);; gr3->SetMarkerColor(kGreen);; g",MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:2409,Energy Efficiency,power,power,2409,"ficient(power) and plot the data,; the known function and the fitted function.; \code{.cpp}. TCanvas *c1 = new TCanvas(""c1"",""Curve Fit"",700,500);; c1->SetGrid();. // draw a frame for multiples graphs; TMultiGraph *mg = new TMultiGraph();. // create the first graph (points with gaussian noise); const Int_t n = 24;; Double_t x[n] ;; Double_t y[n] ;; //Generate points along a X^3 with noise; TRandom rg;; rg.SetSeed(520);; for (Int_t i = 0; i < n; i++) {; x[i] = rg.Uniform(0, 1);; y[i] = TMath::Power(x[i], 3) + rg.Gaus() * 0.06;; }. TGraph *gr1 = new TGraph(n,x,y);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(8);; gr1->SetMarkerSize(1);; mg->Add(gr1);. // create second graph; TF1 *f_known=new TF1(""f_known"",""pow(x,3)"",0,1);; TGraph *gr2 = new TGraph(f_known);; gr2->SetMarkerColor(kRed);; gr2->SetMarkerStyle(8);; gr2->SetMarkerSize(1);; mg->Add(gr2);. //passing x and y values to R for fitting; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; r[""x""]<<TVectorD(n, x);; r[""y""]<<TVectorD(n, y);; //creating a R data frame; r<<""ds<-data.frame(x=x,y=y)"";; //fitting x and y to X^power using Nonlinear Least Squares; r<<""m <- nls(y ~ I(x^power),data = ds, start = list(power = 1),trace = T)"";; //getting the fitted value (power); Double_t power;; r[""summary(m)$coefficients[1]""]>>power;. TF1 *f_fitted=new TF1(""f_fitted"",""pow(x,[0])"",0,1);; f_fitted->SetParameter(0,power);; //plotting the fitted function; TGraph *gr3 = new TGraph(f_fitted);; gr3->SetMarkerColor(kGreen);; gr3->SetMarkerStyle(8);; gr3->SetMarkerSize(1);. mg->Add(gr3);; mg->Draw(""ap"");. //displaying basic results; TPaveText *pt = new TPaveText(0.1,0.6,0.5,0.9,""brNDC"");; pt->SetFillColor(18);; pt->SetTextAlign(12);; pt->AddText(""Fitting x^power "");; pt->AddText("" \""Blue\"" Points with gaussian noise to be fitted"");; pt->AddText("" \""Red\"" Known function x^3"");; TString fmsg;; fmsg.Form("" \""Green\"" Fitted function with power=%.4lf"",power);; pt->AddText(fmsg);; pt->Draw();; c1->Update();; \endcode; @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:2467,Energy Efficiency,power,power,2467,"ficient(power) and plot the data,; the known function and the fitted function.; \code{.cpp}. TCanvas *c1 = new TCanvas(""c1"",""Curve Fit"",700,500);; c1->SetGrid();. // draw a frame for multiples graphs; TMultiGraph *mg = new TMultiGraph();. // create the first graph (points with gaussian noise); const Int_t n = 24;; Double_t x[n] ;; Double_t y[n] ;; //Generate points along a X^3 with noise; TRandom rg;; rg.SetSeed(520);; for (Int_t i = 0; i < n; i++) {; x[i] = rg.Uniform(0, 1);; y[i] = TMath::Power(x[i], 3) + rg.Gaus() * 0.06;; }. TGraph *gr1 = new TGraph(n,x,y);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(8);; gr1->SetMarkerSize(1);; mg->Add(gr1);. // create second graph; TF1 *f_known=new TF1(""f_known"",""pow(x,3)"",0,1);; TGraph *gr2 = new TGraph(f_known);; gr2->SetMarkerColor(kRed);; gr2->SetMarkerStyle(8);; gr2->SetMarkerSize(1);; mg->Add(gr2);. //passing x and y values to R for fitting; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; r[""x""]<<TVectorD(n, x);; r[""y""]<<TVectorD(n, y);; //creating a R data frame; r<<""ds<-data.frame(x=x,y=y)"";; //fitting x and y to X^power using Nonlinear Least Squares; r<<""m <- nls(y ~ I(x^power),data = ds, start = list(power = 1),trace = T)"";; //getting the fitted value (power); Double_t power;; r[""summary(m)$coefficients[1]""]>>power;. TF1 *f_fitted=new TF1(""f_fitted"",""pow(x,[0])"",0,1);; f_fitted->SetParameter(0,power);; //plotting the fitted function; TGraph *gr3 = new TGraph(f_fitted);; gr3->SetMarkerColor(kGreen);; gr3->SetMarkerStyle(8);; gr3->SetMarkerSize(1);. mg->Add(gr3);; mg->Draw(""ap"");. //displaying basic results; TPaveText *pt = new TPaveText(0.1,0.6,0.5,0.9,""brNDC"");; pt->SetFillColor(18);; pt->SetTextAlign(12);; pt->AddText(""Fitting x^power "");; pt->AddText("" \""Blue\"" Points with gaussian noise to be fitted"");; pt->AddText("" \""Red\"" Known function x^3"");; TString fmsg;; fmsg.Form("" \""Green\"" Fitted function with power=%.4lf"",power);; pt->AddText(fmsg);; pt->Draw();; c1->Update();; \endcode; @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:2498,Energy Efficiency,power,power,2498,"ficient(power) and plot the data,; the known function and the fitted function.; \code{.cpp}. TCanvas *c1 = new TCanvas(""c1"",""Curve Fit"",700,500);; c1->SetGrid();. // draw a frame for multiples graphs; TMultiGraph *mg = new TMultiGraph();. // create the first graph (points with gaussian noise); const Int_t n = 24;; Double_t x[n] ;; Double_t y[n] ;; //Generate points along a X^3 with noise; TRandom rg;; rg.SetSeed(520);; for (Int_t i = 0; i < n; i++) {; x[i] = rg.Uniform(0, 1);; y[i] = TMath::Power(x[i], 3) + rg.Gaus() * 0.06;; }. TGraph *gr1 = new TGraph(n,x,y);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(8);; gr1->SetMarkerSize(1);; mg->Add(gr1);. // create second graph; TF1 *f_known=new TF1(""f_known"",""pow(x,3)"",0,1);; TGraph *gr2 = new TGraph(f_known);; gr2->SetMarkerColor(kRed);; gr2->SetMarkerStyle(8);; gr2->SetMarkerSize(1);; mg->Add(gr2);. //passing x and y values to R for fitting; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; r[""x""]<<TVectorD(n, x);; r[""y""]<<TVectorD(n, y);; //creating a R data frame; r<<""ds<-data.frame(x=x,y=y)"";; //fitting x and y to X^power using Nonlinear Least Squares; r<<""m <- nls(y ~ I(x^power),data = ds, start = list(power = 1),trace = T)"";; //getting the fitted value (power); Double_t power;; r[""summary(m)$coefficients[1]""]>>power;. TF1 *f_fitted=new TF1(""f_fitted"",""pow(x,[0])"",0,1);; f_fitted->SetParameter(0,power);; //plotting the fitted function; TGraph *gr3 = new TGraph(f_fitted);; gr3->SetMarkerColor(kGreen);; gr3->SetMarkerStyle(8);; gr3->SetMarkerSize(1);. mg->Add(gr3);; mg->Draw(""ap"");. //displaying basic results; TPaveText *pt = new TPaveText(0.1,0.6,0.5,0.9,""brNDC"");; pt->SetFillColor(18);; pt->SetTextAlign(12);; pt->AddText(""Fitting x^power "");; pt->AddText("" \""Blue\"" Points with gaussian noise to be fitted"");; pt->AddText("" \""Red\"" Known function x^3"");; TString fmsg;; fmsg.Form("" \""Green\"" Fitted function with power=%.4lf"",power);; pt->AddText(fmsg);; pt->Draw();; c1->Update();; \endcode; @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:2551,Energy Efficiency,power,power,2551,"ficient(power) and plot the data,; the known function and the fitted function.; \code{.cpp}. TCanvas *c1 = new TCanvas(""c1"",""Curve Fit"",700,500);; c1->SetGrid();. // draw a frame for multiples graphs; TMultiGraph *mg = new TMultiGraph();. // create the first graph (points with gaussian noise); const Int_t n = 24;; Double_t x[n] ;; Double_t y[n] ;; //Generate points along a X^3 with noise; TRandom rg;; rg.SetSeed(520);; for (Int_t i = 0; i < n; i++) {; x[i] = rg.Uniform(0, 1);; y[i] = TMath::Power(x[i], 3) + rg.Gaus() * 0.06;; }. TGraph *gr1 = new TGraph(n,x,y);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(8);; gr1->SetMarkerSize(1);; mg->Add(gr1);. // create second graph; TF1 *f_known=new TF1(""f_known"",""pow(x,3)"",0,1);; TGraph *gr2 = new TGraph(f_known);; gr2->SetMarkerColor(kRed);; gr2->SetMarkerStyle(8);; gr2->SetMarkerSize(1);; mg->Add(gr2);. //passing x and y values to R for fitting; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; r[""x""]<<TVectorD(n, x);; r[""y""]<<TVectorD(n, y);; //creating a R data frame; r<<""ds<-data.frame(x=x,y=y)"";; //fitting x and y to X^power using Nonlinear Least Squares; r<<""m <- nls(y ~ I(x^power),data = ds, start = list(power = 1),trace = T)"";; //getting the fitted value (power); Double_t power;; r[""summary(m)$coefficients[1]""]>>power;. TF1 *f_fitted=new TF1(""f_fitted"",""pow(x,[0])"",0,1);; f_fitted->SetParameter(0,power);; //plotting the fitted function; TGraph *gr3 = new TGraph(f_fitted);; gr3->SetMarkerColor(kGreen);; gr3->SetMarkerStyle(8);; gr3->SetMarkerSize(1);. mg->Add(gr3);; mg->Draw(""ap"");. //displaying basic results; TPaveText *pt = new TPaveText(0.1,0.6,0.5,0.9,""brNDC"");; pt->SetFillColor(18);; pt->SetTextAlign(12);; pt->AddText(""Fitting x^power "");; pt->AddText("" \""Blue\"" Points with gaussian noise to be fitted"");; pt->AddText("" \""Red\"" Known function x^3"");; TString fmsg;; fmsg.Form("" \""Green\"" Fitted function with power=%.4lf"",power);; pt->AddText(fmsg);; pt->Draw();; c1->Update();; \endcode; @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:2568,Energy Efficiency,power,power,2568,"ficient(power) and plot the data,; the known function and the fitted function.; \code{.cpp}. TCanvas *c1 = new TCanvas(""c1"",""Curve Fit"",700,500);; c1->SetGrid();. // draw a frame for multiples graphs; TMultiGraph *mg = new TMultiGraph();. // create the first graph (points with gaussian noise); const Int_t n = 24;; Double_t x[n] ;; Double_t y[n] ;; //Generate points along a X^3 with noise; TRandom rg;; rg.SetSeed(520);; for (Int_t i = 0; i < n; i++) {; x[i] = rg.Uniform(0, 1);; y[i] = TMath::Power(x[i], 3) + rg.Gaus() * 0.06;; }. TGraph *gr1 = new TGraph(n,x,y);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(8);; gr1->SetMarkerSize(1);; mg->Add(gr1);. // create second graph; TF1 *f_known=new TF1(""f_known"",""pow(x,3)"",0,1);; TGraph *gr2 = new TGraph(f_known);; gr2->SetMarkerColor(kRed);; gr2->SetMarkerStyle(8);; gr2->SetMarkerSize(1);; mg->Add(gr2);. //passing x and y values to R for fitting; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; r[""x""]<<TVectorD(n, x);; r[""y""]<<TVectorD(n, y);; //creating a R data frame; r<<""ds<-data.frame(x=x,y=y)"";; //fitting x and y to X^power using Nonlinear Least Squares; r<<""m <- nls(y ~ I(x^power),data = ds, start = list(power = 1),trace = T)"";; //getting the fitted value (power); Double_t power;; r[""summary(m)$coefficients[1]""]>>power;. TF1 *f_fitted=new TF1(""f_fitted"",""pow(x,[0])"",0,1);; f_fitted->SetParameter(0,power);; //plotting the fitted function; TGraph *gr3 = new TGraph(f_fitted);; gr3->SetMarkerColor(kGreen);; gr3->SetMarkerStyle(8);; gr3->SetMarkerSize(1);. mg->Add(gr3);; mg->Draw(""ap"");. //displaying basic results; TPaveText *pt = new TPaveText(0.1,0.6,0.5,0.9,""brNDC"");; pt->SetFillColor(18);; pt->SetTextAlign(12);; pt->AddText(""Fitting x^power "");; pt->AddText("" \""Blue\"" Points with gaussian noise to be fitted"");; pt->AddText("" \""Red\"" Known function x^3"");; TString fmsg;; fmsg.Form("" \""Green\"" Fitted function with power=%.4lf"",power);; pt->AddText(fmsg);; pt->Draw();; c1->Update();; \endcode; @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:2609,Energy Efficiency,power,power,2609,"ficient(power) and plot the data,; the known function and the fitted function.; \code{.cpp}. TCanvas *c1 = new TCanvas(""c1"",""Curve Fit"",700,500);; c1->SetGrid();. // draw a frame for multiples graphs; TMultiGraph *mg = new TMultiGraph();. // create the first graph (points with gaussian noise); const Int_t n = 24;; Double_t x[n] ;; Double_t y[n] ;; //Generate points along a X^3 with noise; TRandom rg;; rg.SetSeed(520);; for (Int_t i = 0; i < n; i++) {; x[i] = rg.Uniform(0, 1);; y[i] = TMath::Power(x[i], 3) + rg.Gaus() * 0.06;; }. TGraph *gr1 = new TGraph(n,x,y);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(8);; gr1->SetMarkerSize(1);; mg->Add(gr1);. // create second graph; TF1 *f_known=new TF1(""f_known"",""pow(x,3)"",0,1);; TGraph *gr2 = new TGraph(f_known);; gr2->SetMarkerColor(kRed);; gr2->SetMarkerStyle(8);; gr2->SetMarkerSize(1);; mg->Add(gr2);. //passing x and y values to R for fitting; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; r[""x""]<<TVectorD(n, x);; r[""y""]<<TVectorD(n, y);; //creating a R data frame; r<<""ds<-data.frame(x=x,y=y)"";; //fitting x and y to X^power using Nonlinear Least Squares; r<<""m <- nls(y ~ I(x^power),data = ds, start = list(power = 1),trace = T)"";; //getting the fitted value (power); Double_t power;; r[""summary(m)$coefficients[1]""]>>power;. TF1 *f_fitted=new TF1(""f_fitted"",""pow(x,[0])"",0,1);; f_fitted->SetParameter(0,power);; //plotting the fitted function; TGraph *gr3 = new TGraph(f_fitted);; gr3->SetMarkerColor(kGreen);; gr3->SetMarkerStyle(8);; gr3->SetMarkerSize(1);. mg->Add(gr3);; mg->Draw(""ap"");. //displaying basic results; TPaveText *pt = new TPaveText(0.1,0.6,0.5,0.9,""brNDC"");; pt->SetFillColor(18);; pt->SetTextAlign(12);; pt->AddText(""Fitting x^power "");; pt->AddText("" \""Blue\"" Points with gaussian noise to be fitted"");; pt->AddText("" \""Red\"" Known function x^3"");; TString fmsg;; fmsg.Form("" \""Green\"" Fitted function with power=%.4lf"",power);; pt->AddText(fmsg);; pt->Draw();; c1->Update();; \endcode; @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:2695,Energy Efficiency,power,power,2695,"ficient(power) and plot the data,; the known function and the fitted function.; \code{.cpp}. TCanvas *c1 = new TCanvas(""c1"",""Curve Fit"",700,500);; c1->SetGrid();. // draw a frame for multiples graphs; TMultiGraph *mg = new TMultiGraph();. // create the first graph (points with gaussian noise); const Int_t n = 24;; Double_t x[n] ;; Double_t y[n] ;; //Generate points along a X^3 with noise; TRandom rg;; rg.SetSeed(520);; for (Int_t i = 0; i < n; i++) {; x[i] = rg.Uniform(0, 1);; y[i] = TMath::Power(x[i], 3) + rg.Gaus() * 0.06;; }. TGraph *gr1 = new TGraph(n,x,y);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(8);; gr1->SetMarkerSize(1);; mg->Add(gr1);. // create second graph; TF1 *f_known=new TF1(""f_known"",""pow(x,3)"",0,1);; TGraph *gr2 = new TGraph(f_known);; gr2->SetMarkerColor(kRed);; gr2->SetMarkerStyle(8);; gr2->SetMarkerSize(1);; mg->Add(gr2);. //passing x and y values to R for fitting; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; r[""x""]<<TVectorD(n, x);; r[""y""]<<TVectorD(n, y);; //creating a R data frame; r<<""ds<-data.frame(x=x,y=y)"";; //fitting x and y to X^power using Nonlinear Least Squares; r<<""m <- nls(y ~ I(x^power),data = ds, start = list(power = 1),trace = T)"";; //getting the fitted value (power); Double_t power;; r[""summary(m)$coefficients[1]""]>>power;. TF1 *f_fitted=new TF1(""f_fitted"",""pow(x,[0])"",0,1);; f_fitted->SetParameter(0,power);; //plotting the fitted function; TGraph *gr3 = new TGraph(f_fitted);; gr3->SetMarkerColor(kGreen);; gr3->SetMarkerStyle(8);; gr3->SetMarkerSize(1);. mg->Add(gr3);; mg->Draw(""ap"");. //displaying basic results; TPaveText *pt = new TPaveText(0.1,0.6,0.5,0.9,""brNDC"");; pt->SetFillColor(18);; pt->SetTextAlign(12);; pt->AddText(""Fitting x^power "");; pt->AddText("" \""Blue\"" Points with gaussian noise to be fitted"");; pt->AddText("" \""Red\"" Known function x^3"");; TString fmsg;; fmsg.Form("" \""Green\"" Fitted function with power=%.4lf"",power);; pt->AddText(fmsg);; pt->Draw();; c1->Update();; \endcode; @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:3038,Energy Efficiency,power,power,3038,"ficient(power) and plot the data,; the known function and the fitted function.; \code{.cpp}. TCanvas *c1 = new TCanvas(""c1"",""Curve Fit"",700,500);; c1->SetGrid();. // draw a frame for multiples graphs; TMultiGraph *mg = new TMultiGraph();. // create the first graph (points with gaussian noise); const Int_t n = 24;; Double_t x[n] ;; Double_t y[n] ;; //Generate points along a X^3 with noise; TRandom rg;; rg.SetSeed(520);; for (Int_t i = 0; i < n; i++) {; x[i] = rg.Uniform(0, 1);; y[i] = TMath::Power(x[i], 3) + rg.Gaus() * 0.06;; }. TGraph *gr1 = new TGraph(n,x,y);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(8);; gr1->SetMarkerSize(1);; mg->Add(gr1);. // create second graph; TF1 *f_known=new TF1(""f_known"",""pow(x,3)"",0,1);; TGraph *gr2 = new TGraph(f_known);; gr2->SetMarkerColor(kRed);; gr2->SetMarkerStyle(8);; gr2->SetMarkerSize(1);; mg->Add(gr2);. //passing x and y values to R for fitting; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; r[""x""]<<TVectorD(n, x);; r[""y""]<<TVectorD(n, y);; //creating a R data frame; r<<""ds<-data.frame(x=x,y=y)"";; //fitting x and y to X^power using Nonlinear Least Squares; r<<""m <- nls(y ~ I(x^power),data = ds, start = list(power = 1),trace = T)"";; //getting the fitted value (power); Double_t power;; r[""summary(m)$coefficients[1]""]>>power;. TF1 *f_fitted=new TF1(""f_fitted"",""pow(x,[0])"",0,1);; f_fitted->SetParameter(0,power);; //plotting the fitted function; TGraph *gr3 = new TGraph(f_fitted);; gr3->SetMarkerColor(kGreen);; gr3->SetMarkerStyle(8);; gr3->SetMarkerSize(1);. mg->Add(gr3);; mg->Draw(""ap"");. //displaying basic results; TPaveText *pt = new TPaveText(0.1,0.6,0.5,0.9,""brNDC"");; pt->SetFillColor(18);; pt->SetTextAlign(12);; pt->AddText(""Fitting x^power "");; pt->AddText("" \""Blue\"" Points with gaussian noise to be fitted"");; pt->AddText("" \""Red\"" Known function x^3"");; TString fmsg;; fmsg.Form("" \""Green\"" Fitted function with power=%.4lf"",power);; pt->AddText(fmsg);; pt->Draw();; c1->Update();; \endcode; @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:3190,Energy Efficiency,Green,Green,3190,"ficient(power) and plot the data,; the known function and the fitted function.; \code{.cpp}. TCanvas *c1 = new TCanvas(""c1"",""Curve Fit"",700,500);; c1->SetGrid();. // draw a frame for multiples graphs; TMultiGraph *mg = new TMultiGraph();. // create the first graph (points with gaussian noise); const Int_t n = 24;; Double_t x[n] ;; Double_t y[n] ;; //Generate points along a X^3 with noise; TRandom rg;; rg.SetSeed(520);; for (Int_t i = 0; i < n; i++) {; x[i] = rg.Uniform(0, 1);; y[i] = TMath::Power(x[i], 3) + rg.Gaus() * 0.06;; }. TGraph *gr1 = new TGraph(n,x,y);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(8);; gr1->SetMarkerSize(1);; mg->Add(gr1);. // create second graph; TF1 *f_known=new TF1(""f_known"",""pow(x,3)"",0,1);; TGraph *gr2 = new TGraph(f_known);; gr2->SetMarkerColor(kRed);; gr2->SetMarkerStyle(8);; gr2->SetMarkerSize(1);; mg->Add(gr2);. //passing x and y values to R for fitting; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; r[""x""]<<TVectorD(n, x);; r[""y""]<<TVectorD(n, y);; //creating a R data frame; r<<""ds<-data.frame(x=x,y=y)"";; //fitting x and y to X^power using Nonlinear Least Squares; r<<""m <- nls(y ~ I(x^power),data = ds, start = list(power = 1),trace = T)"";; //getting the fitted value (power); Double_t power;; r[""summary(m)$coefficients[1]""]>>power;. TF1 *f_fitted=new TF1(""f_fitted"",""pow(x,[0])"",0,1);; f_fitted->SetParameter(0,power);; //plotting the fitted function; TGraph *gr3 = new TGraph(f_fitted);; gr3->SetMarkerColor(kGreen);; gr3->SetMarkerStyle(8);; gr3->SetMarkerSize(1);. mg->Add(gr3);; mg->Draw(""ap"");. //displaying basic results; TPaveText *pt = new TPaveText(0.1,0.6,0.5,0.9,""brNDC"");; pt->SetFillColor(18);; pt->SetTextAlign(12);; pt->AddText(""Fitting x^power "");; pt->AddText("" \""Blue\"" Points with gaussian noise to be fitted"");; pt->AddText("" \""Red\"" Known function x^3"");; TString fmsg;; fmsg.Form("" \""Green\"" Fitted function with power=%.4lf"",power);; pt->AddText(fmsg);; pt->Draw();; c1->Update();; \endcode; @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:3219,Energy Efficiency,power,power,3219,"ficient(power) and plot the data,; the known function and the fitted function.; \code{.cpp}. TCanvas *c1 = new TCanvas(""c1"",""Curve Fit"",700,500);; c1->SetGrid();. // draw a frame for multiples graphs; TMultiGraph *mg = new TMultiGraph();. // create the first graph (points with gaussian noise); const Int_t n = 24;; Double_t x[n] ;; Double_t y[n] ;; //Generate points along a X^3 with noise; TRandom rg;; rg.SetSeed(520);; for (Int_t i = 0; i < n; i++) {; x[i] = rg.Uniform(0, 1);; y[i] = TMath::Power(x[i], 3) + rg.Gaus() * 0.06;; }. TGraph *gr1 = new TGraph(n,x,y);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(8);; gr1->SetMarkerSize(1);; mg->Add(gr1);. // create second graph; TF1 *f_known=new TF1(""f_known"",""pow(x,3)"",0,1);; TGraph *gr2 = new TGraph(f_known);; gr2->SetMarkerColor(kRed);; gr2->SetMarkerStyle(8);; gr2->SetMarkerSize(1);; mg->Add(gr2);. //passing x and y values to R for fitting; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; r[""x""]<<TVectorD(n, x);; r[""y""]<<TVectorD(n, y);; //creating a R data frame; r<<""ds<-data.frame(x=x,y=y)"";; //fitting x and y to X^power using Nonlinear Least Squares; r<<""m <- nls(y ~ I(x^power),data = ds, start = list(power = 1),trace = T)"";; //getting the fitted value (power); Double_t power;; r[""summary(m)$coefficients[1]""]>>power;. TF1 *f_fitted=new TF1(""f_fitted"",""pow(x,[0])"",0,1);; f_fitted->SetParameter(0,power);; //plotting the fitted function; TGraph *gr3 = new TGraph(f_fitted);; gr3->SetMarkerColor(kGreen);; gr3->SetMarkerStyle(8);; gr3->SetMarkerSize(1);. mg->Add(gr3);; mg->Draw(""ap"");. //displaying basic results; TPaveText *pt = new TPaveText(0.1,0.6,0.5,0.9,""brNDC"");; pt->SetFillColor(18);; pt->SetTextAlign(12);; pt->AddText(""Fitting x^power "");; pt->AddText("" \""Blue\"" Points with gaussian noise to be fitted"");; pt->AddText("" \""Red\"" Known function x^3"");; TString fmsg;; fmsg.Form("" \""Green\"" Fitted function with power=%.4lf"",power);; pt->AddText(fmsg);; pt->Draw();; c1->Update();; \endcode; @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:3232,Energy Efficiency,power,power,3232,"ficient(power) and plot the data,; the known function and the fitted function.; \code{.cpp}. TCanvas *c1 = new TCanvas(""c1"",""Curve Fit"",700,500);; c1->SetGrid();. // draw a frame for multiples graphs; TMultiGraph *mg = new TMultiGraph();. // create the first graph (points with gaussian noise); const Int_t n = 24;; Double_t x[n] ;; Double_t y[n] ;; //Generate points along a X^3 with noise; TRandom rg;; rg.SetSeed(520);; for (Int_t i = 0; i < n; i++) {; x[i] = rg.Uniform(0, 1);; y[i] = TMath::Power(x[i], 3) + rg.Gaus() * 0.06;; }. TGraph *gr1 = new TGraph(n,x,y);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(8);; gr1->SetMarkerSize(1);; mg->Add(gr1);. // create second graph; TF1 *f_known=new TF1(""f_known"",""pow(x,3)"",0,1);; TGraph *gr2 = new TGraph(f_known);; gr2->SetMarkerColor(kRed);; gr2->SetMarkerStyle(8);; gr2->SetMarkerSize(1);; mg->Add(gr2);. //passing x and y values to R for fitting; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; r[""x""]<<TVectorD(n, x);; r[""y""]<<TVectorD(n, y);; //creating a R data frame; r<<""ds<-data.frame(x=x,y=y)"";; //fitting x and y to X^power using Nonlinear Least Squares; r<<""m <- nls(y ~ I(x^power),data = ds, start = list(power = 1),trace = T)"";; //getting the fitted value (power); Double_t power;; r[""summary(m)$coefficients[1]""]>>power;. TF1 *f_fitted=new TF1(""f_fitted"",""pow(x,[0])"",0,1);; f_fitted->SetParameter(0,power);; //plotting the fitted function; TGraph *gr3 = new TGraph(f_fitted);; gr3->SetMarkerColor(kGreen);; gr3->SetMarkerStyle(8);; gr3->SetMarkerSize(1);. mg->Add(gr3);; mg->Draw(""ap"");. //displaying basic results; TPaveText *pt = new TPaveText(0.1,0.6,0.5,0.9,""brNDC"");; pt->SetFillColor(18);; pt->SetTextAlign(12);; pt->AddText(""Fitting x^power "");; pt->AddText("" \""Blue\"" Points with gaussian noise to be fitted"");; pt->AddText("" \""Red\"" Known function x^3"");; TString fmsg;; fmsg.Form("" \""Green\"" Fitted function with power=%.4lf"",power);; pt->AddText(fmsg);; pt->Draw();; c1->Update();; \endcode; @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:304,Usability,Guid,Guide,304,"/**; \class TRInterface; ROOT R was implemented using the; <A HREF=""http://www.r-project.org/"">R Project</A> library and the modules; <A HREF=""http://cran.r-project.org/web/packages/Rcpp/index.html"">Rcpp</A> and; <A HREF=""http://cran.r-project.org/web/packages/RInside/index.html"">RInside</A>; <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>. \ingroup R; */; /**; <center><h2>TRInterface class</h2></center>. </p>; The TRInterface class lets you process R code from ROOT.<br>; You can call R libraries and their functions, plot results in R or ROOT,<br>; and use the power of ROOT and R at the same time.<br>; It also lets you pass scalars, vectors and matrices from ROOT to R<br>; and from R to ROOT using TRObject; but you can to use overloaded operators [],<< and >> <br>; to work with ROOTR like work with streams of data.<br>. TRInterface class can not be instantiated directly, but you can create objects using the static methods; TRInterface& Instance() and TRInterface* InstancePtr() to create your own objects.<br>; <br>; </p>; Show an example below:; Create an exponential fit, the idea is to create a set of numbers x,y with noise from ROOT,; pass them to R and fit the data to \f$ x^3 \f$, get the fitted coefficient(power) and plot the data,; the known function and the fitted function.; \code{.cpp}. TCanvas *c1 = new TCanvas(""c1"",""Curve Fit"",700,500);; c1->SetGrid();. // draw a frame for multiples graphs; TMultiGraph *mg = new TMultiGraph();. // create the first graph (points with gaussian noise); const Int_t n = 24;; Double_t x[n] ;; Double_t y[n] ;; //Generate points along a X^3 with noise; TRandom rg;; rg.SetSeed(520);; for (Int_t i = 0; i < n; i++) {; x[i] = rg.Uniform(0, 1);; y[i] = TMath::Power(x[i], 3) + rg.Gaus() * 0.06;; }. TGraph *gr1 = new TGraph(n,x,y);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(8);; gr1->SetMarkerSize(1);; mg->Add(gr1);. // create second graph; TF",MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:420,Usability,Guid,Guide,420,"/**; \class TRInterface; ROOT R was implemented using the; <A HREF=""http://www.r-project.org/"">R Project</A> library and the modules; <A HREF=""http://cran.r-project.org/web/packages/Rcpp/index.html"">Rcpp</A> and; <A HREF=""http://cran.r-project.org/web/packages/RInside/index.html"">RInside</A>; <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>. \ingroup R; */; /**; <center><h2>TRInterface class</h2></center>. </p>; The TRInterface class lets you process R code from ROOT.<br>; You can call R libraries and their functions, plot results in R or ROOT,<br>; and use the power of ROOT and R at the same time.<br>; It also lets you pass scalars, vectors and matrices from ROOT to R<br>; and from R to ROOT using TRObject; but you can to use overloaded operators [],<< and >> <br>; to work with ROOTR like work with streams of data.<br>. TRInterface class can not be instantiated directly, but you can create objects using the static methods; TRInterface& Instance() and TRInterface* InstancePtr() to create your own objects.<br>; <br>; </p>; Show an example below:; Create an exponential fit, the idea is to create a set of numbers x,y with noise from ROOT,; pass them to R and fit the data to \f$ x^3 \f$, get the fitted coefficient(power) and plot the data,; the known function and the fitted function.; \code{.cpp}. TCanvas *c1 = new TCanvas(""c1"",""Curve Fit"",700,500);; c1->SetGrid();. // draw a frame for multiples graphs; TMultiGraph *mg = new TMultiGraph();. // create the first graph (points with gaussian noise); const Int_t n = 24;; Double_t x[n] ;; Double_t y[n] ;; //Generate points along a X^3 with noise; TRandom rg;; rg.SetSeed(520);; for (Int_t i = 0; i < n; i++) {; x[i] = rg.Uniform(0, 1);; y[i] = TMath::Power(x[i], 3) + rg.Gaus() * 0.06;; }. TGraph *gr1 = new TGraph(n,x,y);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(8);; gr1->SetMarkerSize(1);; mg->Add(gr1);. // create second graph; TF",MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:293,Performance,load,loadRcpp,293,"/**; The command line arguments are by default argc=0 and argv=NULL,; The verbose mode is by default disabled but you can enable it to show procedures information in stdout/stderr \note some time can produce so much noise in the output; \param argc default 0; \param argv default null; \param loadRcpp default true; \param verbose default false; \param interactive default true; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:31,Availability,error,error,31,"// parse line, returns in ans; error code rc; /**; Method to eval R code; \param code R code; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:82,Integrability,wrap,wrappable,82,/**; Template method to assign C++ variables into R environment; \param var any R wrappable datatype; \param name name of the variable in R's environment; */,MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:35,Modifiability,variab,variables,35,/**; Template method to assign C++ variables into R environment; \param var any R wrappable datatype; \param name name of the variable in R's environment; */,MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:126,Modifiability,variab,variable,126,/**; Template method to assign C++ variables into R environment; \param var any R wrappable datatype; \param name name of the variable in R's environment; */,MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:29,Modifiability,variab,variables,29,"// This method lets you pass variables from ROOT to R.; // The template T should be a supported ROOT datatype and; // the TString's name is the name of the variable in the R environment.",MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:156,Modifiability,variab,variable,156,"// This method lets you pass variables from ROOT to R.; // The template T should be a supported ROOT datatype and; // the TString's name is the name of the variable in the R environment.",MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:112,Modifiability,variab,variable,112,/**; Method to assign TRFunctionExport in R's environment; \param fun TRFunctionExport; \param name name of the variable in R's environment; */,MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:101,Modifiability,variab,variable,101,/**; Method to assign TRDataFrame in R's environment; \param df TRDataFrame; \param name name of the variable in R's environment; */,MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:38,Deployability,install,installed,38,/**; Method to verify if a package is installed; \param pkg R's pkg name; \return true or false if the package is installed or not; */,MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:114,Deployability,install,installed,114,/**; Method to verify if a package is installed; \param pkg R's pkg name; \return true or false if the package is installed or not; */,MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:15,Performance,load,load,15,/**; Method to load an R's package; \param pkg R's pkg name; \return true or false if the package was loaded or not; */,MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:102,Performance,load,loaded,102,/**; Method to load an R's package; \param pkg R's pkg name; \return true or false if the package was loaded or not; */,MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:15,Deployability,install,install,15,/**; Method to install an R's package; \param pkg R's pkg name; \param repos url for R's package repository; \return true or false if the package was installed or not; */,MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:150,Deployability,install,installed,150,/**; Method to install an R's package; \param pkg R's pkg name; \param repos url for R's package repository; \return true or false if the package was installed or not; */,MatchSource.CODE_COMMENT,bindings/r/inc/TRInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInternalFunction__ctors.h:135,Integrability,interface,interface,135,"// -*- mode: C++; c-indent-level: 4; c-basic-offset: 4; tab-width: 8 -*-; //; // TRInternalFunction_Impl__ctors.h: based in Rcpp R/C++ interface class library -- generated helper code for TRInternalFunction_Impl.h; //; // Copyright (C) 2010 - 2013 Dirk Eddelbuettel and Romain Francois; // Modified by Omar Zapata for ROOTR; //; // This file is based in Rcpp.",MatchSource.CODE_COMMENT,bindings/r/inc/TRInternalFunction__ctors.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInternalFunction__ctors.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h:276,Usability,simpl,simple,276,"/**. This is a class to get ROOT's objects from R's objects; <center><h2>TRObject class</h2></center>. <p>; The TRObject class lets you obtain ROOT's objects from R's objects.<br>; It has some basic template operators to convert R's objects into ROOT's datatypes<br>; </p>; A simple example<br>; <p>. </p>. \code{.cpp}; #include<TRInterface.h>; void Proxy(); {; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; ROOT::R::TRObject obj;; obj=r.Eval(""seq(1,10)"");; TVectorD v=obj;; v.Print();; }; \endcode; Output; \code. Vector (10) is as follows. | 1 |; ------------------; 0 |1; 1 |2; 2 |3; 3 |4; 4 |5; 5 |6; 6 |7; 7 |8; 8 |9; 9 |10. \endcode. <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>. @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRObject.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h:663,Usability,Guid,Guide,663,"/**. This is a class to get ROOT's objects from R's objects; <center><h2>TRObject class</h2></center>. <p>; The TRObject class lets you obtain ROOT's objects from R's objects.<br>; It has some basic template operators to convert R's objects into ROOT's datatypes<br>; </p>; A simple example<br>; <p>. </p>. \code{.cpp}; #include<TRInterface.h>; void Proxy(); {; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; ROOT::R::TRObject obj;; obj=r.Eval(""seq(1,10)"");; TVectorD v=obj;; v.Print();; }; \endcode; Output; \code. Vector (10) is as follows. | 1 |; ------------------; 0 |1; 1 |2; 2 |3; 3 |4; 4 |5; 5 |6; 6 |7; 7 |8; 8 |9; 9 |10. \endcode. <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>. @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRObject.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h:779,Usability,Guid,Guide,779,"/**. This is a class to get ROOT's objects from R's objects; <center><h2>TRObject class</h2></center>. <p>; The TRObject class lets you obtain ROOT's objects from R's objects.<br>; It has some basic template operators to convert R's objects into ROOT's datatypes<br>; </p>; A simple example<br>; <p>. </p>. \code{.cpp}; #include<TRInterface.h>; void Proxy(); {; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; ROOT::R::TRObject obj;; obj=r.Eval(""seq(1,10)"");; TVectorD v=obj;; v.Print();; }; \endcode; Output; \code. Vector (10) is as follows. | 1 |; ------------------; 0 |1; 1 |2; 2 |3; 3 |4; 4 |5; 5 |6; 6 |7; 7 |8; 8 |9; 9 |10. \endcode. <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>. @ingroup R; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRObject.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h:42,Integrability,wrap,wrapped,42,"/**; Some datatypes of ROOT or c++ can be wrapped in to a TRObject,; this method lets you wrap those datatypes; \param obj template object to be wrapped; \return TRObject reference of wrapped object; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRObject.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h:90,Integrability,wrap,wrap,90,"/**; Some datatypes of ROOT or c++ can be wrapped in to a TRObject,; this method lets you wrap those datatypes; \param obj template object to be wrapped; \return TRObject reference of wrapped object; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRObject.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h:145,Integrability,wrap,wrapped,145,"/**; Some datatypes of ROOT or c++ can be wrapped in to a TRObject,; this method lets you wrap those datatypes; \param obj template object to be wrapped; \return TRObject reference of wrapped object; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRObject.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h:184,Integrability,wrap,wrapped,184,"/**; Some datatypes of ROOT or c++ can be wrapped in to a TRObject,; this method lets you wrap those datatypes; \param obj template object to be wrapped; \return TRObject reference of wrapped object; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRObject.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h:251,Availability,error,error,251,"/**; Some datatypes of ROOT or c++ can be wrapped in to a TRObject,; this method lets you unwrap those datatypes encapsulate into this TRObject.; \note If the current TRObject is not a valid object it will return and empty object and it will print an error message; \return template return with the require datatype; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRObject.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h:42,Integrability,wrap,wrapped,42,"/**; Some datatypes of ROOT or c++ can be wrapped in to a TRObject,; this method lets you unwrap those datatypes encapsulate into this TRObject.; \note If the current TRObject is not a valid object it will return and empty object and it will print an error message; \return template return with the require datatype; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRObject.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h:257,Integrability,message,message,257,"/**; Some datatypes of ROOT or c++ can be wrapped in to a TRObject,; this method lets you unwrap those datatypes encapsulate into this TRObject.; \note If the current TRObject is not a valid object it will return and empty object and it will print an error message; \return template return with the require datatype; */",MatchSource.CODE_COMMENT,bindings/r/inc/TRObject.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRObject.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/src/TRCompletion.h:77,Integrability,interface,interface,77,"// @(#)root/r:$Id$; // Author: Omar Zapata 29/08/2013; // The tab-completion interface was based in R's readline code.",MatchSource.CODE_COMMENT,bindings/r/src/TRCompletion.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/src/TRCompletion.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/src/TRCompletion.h:11,Modifiability,variab,variables,11,"//Readline variables.",MatchSource.CODE_COMMENT,bindings/r/src/TRCompletion.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/src/TRCompletion.h
https://github.com/root-project/root/tree/v6-32-06/bindings/r/src/TRInterface.cxx:2,Deployability,Install,Installing,2,"//Installing the readline callbacks for completion in the; //method Interactive",MatchSource.CODE_COMMENT,bindings/r/src/TRInterface.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/src/TRInterface.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/inc/TPython.h:112,Security,Access,Access,112,"//////////////////////////////////////////////////////////////////////////////; // //; // TPython //; // //; // Access to the python interpreter and API onto PyROOT. //; // //; //////////////////////////////////////////////////////////////////////////////; // Bindings",MatchSource.CODE_COMMENT,bindings/tpython/inc/TPython.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/inc/TPython.h
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/inc/TPython.h:3,Security,Access,Access,3,"// Access to the python interpreter",MatchSource.CODE_COMMENT,bindings/tpython/inc/TPython.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/inc/TPython.h
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPyArg.cxx:93,Integrability,wrap,wrapper,93,"//______________________________________________________________________________; // Generic wrapper for arguments; // =============================; //; // Transport class for bringing C++ values and objects from Cling to Python. It; // provides, from the selected constructor, the proper conversion to a PyObject.; // In principle, there should be no need to use this class directly: it relies; // on implicit conversions.; //- data ---------------------------------------------------------------------",MatchSource.CODE_COMMENT,bindings/tpython/src/TPyArg.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPyArg.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPyArg.cxx:34,Availability,down,down,34,"// calls actual dtor if ref-count down to 0",MatchSource.CODE_COMMENT,bindings/tpython/src/TPyArg.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPyArg.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPyClassGenerator.cxx:42,Availability,avail,available,42,"// Class generator to make python classes available to Cling",MatchSource.CODE_COMMENT,bindings/tpython/src/TPyClassGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPyClassGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPyClassGenerator.cxx:9,Modifiability,refactor,refactor,9,"// TODO: refactor the code below with the class method code",MatchSource.CODE_COMMENT,bindings/tpython/src/TPyClassGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPyClassGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPyClassGenerator.cxx:24,Modifiability,variab,variables,24,"// figure out number of variables required",MatchSource.CODE_COMMENT,bindings/tpython/src/TPyClassGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPyClassGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPyClassGenerator.cxx:11,Modifiability,variab,variables,11,"// add the variables",MatchSource.CODE_COMMENT,bindings/tpython/src/TPyClassGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPyClassGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPyClassGenerator.cxx:47,Performance,load,load,47,"// create class in namespace, if it exists (no load, silent)",MatchSource.CODE_COMMENT,bindings/tpython/src/TPyClassGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPyClassGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPyClassGenerator.cxx:26,Availability,avail,available,26,"// the class is no longer available?!",MatchSource.CODE_COMMENT,bindings/tpython/src/TPyClassGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPyClassGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPyClassGenerator.cxx:64,Modifiability,variab,variables,64,"// skip all other python special funcs; // figure out number of variables required",MatchSource.CODE_COMMENT,bindings/tpython/src/TPyClassGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPyClassGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPyClassGenerator.cxx:26,Modifiability,variab,variables,26,"// then add the remaining variables",MatchSource.CODE_COMMENT,bindings/tpython/src/TPyClassGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPyClassGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:1116,Modifiability,Variab,Variables,1116,"// The TPython class allows for access to python objects from Cling. The current; /// functionality is only basic: ROOT objects and builtin types can freely cross; /// the boundary between the two interpreters, python objects can be instantiated; /// and their methods can be called. All other cross-coding is based on strings; /// that are run on the python interpreter.; ///; /// Examples:; ///; /// ~~~{.cpp}; /// $ root -l; /// // Execute a string of python code.; /// root [0] TPython::Exec( ""print('Hello World!')"" );; /// Hello World!; ///; /// // Create a TNamed on the python side, and transfer it back and forth.; /// root [1] std::any res1;; /// root [2] TPython::Exec(""_anyresult = ROOT.std.make_any['TNamed']('hello', '')"", &res1);; /// root [3] TPython::Bind(&std::any_cast<TNamed&>(res1), ""n"");; /// root [4] std::any res2;; /// root [5] TPython::Exec(""_anyresult = ROOT.std.make_any['TNamed*', 'TNamed*'](n)"", &res2);; /// root [6] (&std::any_cast<TNamed&>(res1) == std::any_cast<TNamed*>(res2)); /// (bool) true; ///; /// // Variables can cross-over by using an `std::any` with a specific name.; /// root [6] TPython::Exec(""_anyresult = ROOT.std.make_any['Int_t'](1 + 1)"", &res1);; /// root [7] std::any_cast<int>(res1); /// (int) 2; /// ~~~; ///; /// And with a python file `MyPyClass.py` like this:; /// ~~~{.py}; /// print 'creating class MyPyClass ... '; ///; /// class MyPyClass:; /// def __init__( self ):; /// print 'in MyPyClass.__init__'; ///; /// def gime( self, what ):; /// return what; /// ~~~; /// one can load a python module, and use the class. Casts are; /// necessary as the type information can not be otherwise derived.; /// ~~~{.cpp}; /// root [6] TPython::LoadMacro( ""MyPyClass.py"" );; /// creating class MyPyClass ...; /// root [7] MyPyClass m;; /// in MyPyClass.__init__; /// root [8] std::string s = (char*)m.gime( ""aap"" );; /// root [9] s; /// (class TString)""aap""; /// ~~~; /// It is possible to switch between interpreters by calling `TPython::Prompt()`; /",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:1611,Performance,load,load,1611,"d!')"" );; /// Hello World!; ///; /// // Create a TNamed on the python side, and transfer it back and forth.; /// root [1] std::any res1;; /// root [2] TPython::Exec(""_anyresult = ROOT.std.make_any['TNamed']('hello', '')"", &res1);; /// root [3] TPython::Bind(&std::any_cast<TNamed&>(res1), ""n"");; /// root [4] std::any res2;; /// root [5] TPython::Exec(""_anyresult = ROOT.std.make_any['TNamed*', 'TNamed*'](n)"", &res2);; /// root [6] (&std::any_cast<TNamed&>(res1) == std::any_cast<TNamed*>(res2)); /// (bool) true; ///; /// // Variables can cross-over by using an `std::any` with a specific name.; /// root [6] TPython::Exec(""_anyresult = ROOT.std.make_any['Int_t'](1 + 1)"", &res1);; /// root [7] std::any_cast<int>(res1); /// (int) 2; /// ~~~; ///; /// And with a python file `MyPyClass.py` like this:; /// ~~~{.py}; /// print 'creating class MyPyClass ... '; ///; /// class MyPyClass:; /// def __init__( self ):; /// print 'in MyPyClass.__init__'; ///; /// def gime( self, what ):; /// return what; /// ~~~; /// one can load a python module, and use the class. Casts are; /// necessary as the type information can not be otherwise derived.; /// ~~~{.cpp}; /// root [6] TPython::LoadMacro( ""MyPyClass.py"" );; /// creating class MyPyClass ...; /// root [7] MyPyClass m;; /// in MyPyClass.__init__; /// root [8] std::string s = (char*)m.gime( ""aap"" );; /// root [9] s; /// (class TString)""aap""; /// ~~~; /// It is possible to switch between interpreters by calling `TPython::Prompt()`; /// on the Cling side, while returning with `^D` (EOF). State is preserved between; /// successive switches.; ///; /// The API part provides (direct) C++ access to the bindings functionality of; /// PyROOT. It allows verifying that you deal with a PyROOT python object in the; /// first place (CPPInstance_Check for CPPInstance and any derived types, as well; /// as CPPInstance_CheckExact for CPPInstance's only); and it allows conversions; /// of `void*` to an CPPInstance and vice versa.; //- data ---------------",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:1769,Performance,Load,LoadMacro,1769,"on the python side, and transfer it back and forth.; /// root [1] std::any res1;; /// root [2] TPython::Exec(""_anyresult = ROOT.std.make_any['TNamed']('hello', '')"", &res1);; /// root [3] TPython::Bind(&std::any_cast<TNamed&>(res1), ""n"");; /// root [4] std::any res2;; /// root [5] TPython::Exec(""_anyresult = ROOT.std.make_any['TNamed*', 'TNamed*'](n)"", &res2);; /// root [6] (&std::any_cast<TNamed&>(res1) == std::any_cast<TNamed*>(res2)); /// (bool) true; ///; /// // Variables can cross-over by using an `std::any` with a specific name.; /// root [6] TPython::Exec(""_anyresult = ROOT.std.make_any['Int_t'](1 + 1)"", &res1);; /// root [7] std::any_cast<int>(res1); /// (int) 2; /// ~~~; ///; /// And with a python file `MyPyClass.py` like this:; /// ~~~{.py}; /// print 'creating class MyPyClass ... '; ///; /// class MyPyClass:; /// def __init__( self ):; /// print 'in MyPyClass.__init__'; ///; /// def gime( self, what ):; /// return what; /// ~~~; /// one can load a python module, and use the class. Casts are; /// necessary as the type information can not be otherwise derived.; /// ~~~{.cpp}; /// root [6] TPython::LoadMacro( ""MyPyClass.py"" );; /// creating class MyPyClass ...; /// root [7] MyPyClass m;; /// in MyPyClass.__init__; /// root [8] std::string s = (char*)m.gime( ""aap"" );; /// root [9] s; /// (class TString)""aap""; /// ~~~; /// It is possible to switch between interpreters by calling `TPython::Prompt()`; /// on the Cling side, while returning with `^D` (EOF). State is preserved between; /// successive switches.; ///; /// The API part provides (direct) C++ access to the bindings functionality of; /// PyROOT. It allows verifying that you deal with a PyROOT python object in the; /// first place (CPPInstance_Check for CPPInstance and any derived types, as well; /// as CPPInstance_CheckExact for CPPInstance's only); and it allows conversions; /// of `void*` to an CPPInstance and vice versa.; //- data ---------------------------------------------------------------------",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:24,Security,Access,Accessing,24,"/// \class TPython; /// Accessing the Python interpreter from C++.; ///; /// The TPython class allows for access to python objects from Cling. The current; /// functionality is only basic: ROOT objects and builtin types can freely cross; /// the boundary between the two interpreters, python objects can be instantiated; /// and their methods can be called. All other cross-coding is based on strings; /// that are run on the python interpreter.; ///; /// Examples:; ///; /// ~~~{.cpp}; /// $ root -l; /// // Execute a string of python code.; /// root [0] TPython::Exec( ""print('Hello World!')"" );; /// Hello World!; ///; /// // Create a TNamed on the python side, and transfer it back and forth.; /// root [1] std::any res1;; /// root [2] TPython::Exec(""_anyresult = ROOT.std.make_any['TNamed']('hello', '')"", &res1);; /// root [3] TPython::Bind(&std::any_cast<TNamed&>(res1), ""n"");; /// root [4] std::any res2;; /// root [5] TPython::Exec(""_anyresult = ROOT.std.make_any['TNamed*', 'TNamed*'](n)"", &res2);; /// root [6] (&std::any_cast<TNamed&>(res1) == std::any_cast<TNamed*>(res2)); /// (bool) true; ///; /// // Variables can cross-over by using an `std::any` with a specific name.; /// root [6] TPython::Exec(""_anyresult = ROOT.std.make_any['Int_t'](1 + 1)"", &res1);; /// root [7] std::any_cast<int>(res1); /// (int) 2; /// ~~~; ///; /// And with a python file `MyPyClass.py` like this:; /// ~~~{.py}; /// print 'creating class MyPyClass ... '; ///; /// class MyPyClass:; /// def __init__( self ):; /// print 'in MyPyClass.__init__'; ///; /// def gime( self, what ):; /// return what; /// ~~~; /// one can load a python module, and use the class. Casts are; /// necessary as the type information can not be otherwise derived.; /// ~~~{.cpp}; /// root [6] TPython::LoadMacro( ""MyPyClass.py"" );; /// creating class MyPyClass ...; /// root [7] MyPyClass m;; /// in MyPyClass.__init__; /// root [8] std::string s = (char*)m.gime( ""aap"" );; /// root [9] s; /// (class TString)""aap""; /// ~~~; /// It is",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:106,Security,access,access,106,"/// \class TPython; /// Accessing the Python interpreter from C++.; ///; /// The TPython class allows for access to python objects from Cling. The current; /// functionality is only basic: ROOT objects and builtin types can freely cross; /// the boundary between the two interpreters, python objects can be instantiated; /// and their methods can be called. All other cross-coding is based on strings; /// that are run on the python interpreter.; ///; /// Examples:; ///; /// ~~~{.cpp}; /// $ root -l; /// // Execute a string of python code.; /// root [0] TPython::Exec( ""print('Hello World!')"" );; /// Hello World!; ///; /// // Create a TNamed on the python side, and transfer it back and forth.; /// root [1] std::any res1;; /// root [2] TPython::Exec(""_anyresult = ROOT.std.make_any['TNamed']('hello', '')"", &res1);; /// root [3] TPython::Bind(&std::any_cast<TNamed&>(res1), ""n"");; /// root [4] std::any res2;; /// root [5] TPython::Exec(""_anyresult = ROOT.std.make_any['TNamed*', 'TNamed*'](n)"", &res2);; /// root [6] (&std::any_cast<TNamed&>(res1) == std::any_cast<TNamed*>(res2)); /// (bool) true; ///; /// // Variables can cross-over by using an `std::any` with a specific name.; /// root [6] TPython::Exec(""_anyresult = ROOT.std.make_any['Int_t'](1 + 1)"", &res1);; /// root [7] std::any_cast<int>(res1); /// (int) 2; /// ~~~; ///; /// And with a python file `MyPyClass.py` like this:; /// ~~~{.py}; /// print 'creating class MyPyClass ... '; ///; /// class MyPyClass:; /// def __init__( self ):; /// print 'in MyPyClass.__init__'; ///; /// def gime( self, what ):; /// return what; /// ~~~; /// one can load a python module, and use the class. Casts are; /// necessary as the type information can not be otherwise derived.; /// ~~~{.cpp}; /// root [6] TPython::LoadMacro( ""MyPyClass.py"" );; /// creating class MyPyClass ...; /// root [7] MyPyClass m;; /// in MyPyClass.__init__; /// root [8] std::string s = (char*)m.gime( ""aap"" );; /// root [9] s; /// (class TString)""aap""; /// ~~~; /// It is",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:2228,Security,access,access,2228,"on the python side, and transfer it back and forth.; /// root [1] std::any res1;; /// root [2] TPython::Exec(""_anyresult = ROOT.std.make_any['TNamed']('hello', '')"", &res1);; /// root [3] TPython::Bind(&std::any_cast<TNamed&>(res1), ""n"");; /// root [4] std::any res2;; /// root [5] TPython::Exec(""_anyresult = ROOT.std.make_any['TNamed*', 'TNamed*'](n)"", &res2);; /// root [6] (&std::any_cast<TNamed&>(res1) == std::any_cast<TNamed*>(res2)); /// (bool) true; ///; /// // Variables can cross-over by using an `std::any` with a specific name.; /// root [6] TPython::Exec(""_anyresult = ROOT.std.make_any['Int_t'](1 + 1)"", &res1);; /// root [7] std::any_cast<int>(res1); /// (int) 2; /// ~~~; ///; /// And with a python file `MyPyClass.py` like this:; /// ~~~{.py}; /// print 'creating class MyPyClass ... '; ///; /// class MyPyClass:; /// def __init__( self ):; /// print 'in MyPyClass.__init__'; ///; /// def gime( self, what ):; /// return what; /// ~~~; /// one can load a python module, and use the class. Casts are; /// necessary as the type information can not be otherwise derived.; /// ~~~{.cpp}; /// root [6] TPython::LoadMacro( ""MyPyClass.py"" );; /// creating class MyPyClass ...; /// root [7] MyPyClass m;; /// in MyPyClass.__init__; /// root [8] std::string s = (char*)m.gime( ""aap"" );; /// root [9] s; /// (class TString)""aap""; /// ~~~; /// It is possible to switch between interpreters by calling `TPython::Prompt()`; /// on the Cling side, while returning with `^D` (EOF). State is preserved between; /// successive switches.; ///; /// The API part provides (direct) C++ access to the bindings functionality of; /// PyROOT. It allows verifying that you deal with a PyROOT python object in the; /// first place (CPPInstance_Check for CPPInstance and any derived types, as well; /// as CPPInstance_CheckExact for CPPInstance's only); and it allows conversions; /// of `void*` to an CPPInstance and vice versa.; //- data ---------------------------------------------------------------------",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:154,Performance,load,load,154,"// namespace; //- static public members ----------------------------------------------------; /// Initialization method: setup the python interpreter and load the; /// ROOT module.",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:36,Performance,concurren,concurrent,36,"// Don't initialize Python from two concurrent threads",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:9,Performance,load,loading,9,"// force loading of the ROOT module",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:153,Availability,alive,alive,153,"// The gMainDict is borrowed, i.e. we are not calling Py_INCREF(gMainDict).; // Like this, we avoid unexpectedly affecting how long __main__ is kept; // alive. The gMainDict is only used in Exec(), ExecScript(), and Eval(),; // which should not be called after __main__ is garbage collected anyway.",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:94,Safety,avoid,avoid,94,"// The gMainDict is borrowed, i.e. we are not calling Py_INCREF(gMainDict).; // Like this, we avoid unexpectedly affecting how long __main__ is kept; // alive. The gMainDict is only used in Exec(), ExecScript(), and Eval(),; // which should not be called after __main__ is garbage collected anyway.",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:226,Availability,avail,available,226,"////////////////////////////////////////////////////////////////////////////////; /// Execute the give python script as if it were a macro (effectively an; /// execfile in __main__), and create Cling equivalents for any newly available; /// python classes.",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:246,Testability,test,test,246,"////////////////////////////////////////////////////////////////////////////////; /// Execute a python stand-alone script, with argv CLI arguments.; ///; /// example of use:; /// const char* argv[] = { ""1"", ""2"", ""3"" };; /// TPython::ExecScript( ""test.py"", sizeof(argv)/sizeof(argv[0]), argv );",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:553,Modifiability,variab,variable,553,"////////////////////////////////////////////////////////////////////////////////; /// Executes a Python command within the current Python environment.; ///; /// This function initializes the Python environment if it is not already; /// initialized. It then executes the specified Python command string using the; /// Python C API.; ///; /// In the Python command, you can change the value of a special TPyResult; /// object returned by TPyBuffer(). If the optional result parameter is; /// non-zero, the result parameter will be swapped with a std::any variable on; /// the Python side. You need to define this variable yourself, and it needs to; /// be of type std::any and its name needs to be `""_anyresult""` by default.; /// Like this, you can pass information from Python back to C++.; ///; /// \param cmd The Python command to be executed as a string.; /// \param result Optional pointer to a std::any object that can be used to; /// transfer results from Python to C++.; /// \param resultName Name of the Python variable that is swapped over to the std::any result.; /// The default value is `""_anyresult""`.; /// \return bool Returns `true` if the command was successfully executed,; /// otherwise returns `false`.",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:611,Modifiability,variab,variable,611,"////////////////////////////////////////////////////////////////////////////////; /// Executes a Python command within the current Python environment.; ///; /// This function initializes the Python environment if it is not already; /// initialized. It then executes the specified Python command string using the; /// Python C API.; ///; /// In the Python command, you can change the value of a special TPyResult; /// object returned by TPyBuffer(). If the optional result parameter is; /// non-zero, the result parameter will be swapped with a std::any variable on; /// the Python side. You need to define this variable yourself, and it needs to; /// be of type std::any and its name needs to be `""_anyresult""` by default.; /// Like this, you can pass information from Python back to C++.; ///; /// \param cmd The Python command to be executed as a string.; /// \param result Optional pointer to a std::any object that can be used to; /// transfer results from Python to C++.; /// \param resultName Name of the Python variable that is swapped over to the std::any result.; /// The default value is `""_anyresult""`.; /// \return bool Returns `true` if the command was successfully executed,; /// otherwise returns `false`.",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:1018,Modifiability,variab,variable,1018,"////////////////////////////////////////////////////////////////////////////////; /// Executes a Python command within the current Python environment.; ///; /// This function initializes the Python environment if it is not already; /// initialized. It then executes the specified Python command string using the; /// Python C API.; ///; /// In the Python command, you can change the value of a special TPyResult; /// object returned by TPyBuffer(). If the optional result parameter is; /// non-zero, the result parameter will be swapped with a std::any variable on; /// the Python side. You need to define this variable yourself, and it needs to; /// be of type std::any and its name needs to be `""_anyresult""` by default.; /// Like this, you can pass information from Python back to C++.; ///; /// \param cmd The Python command to be executed as a string.; /// \param result Optional pointer to a std::any object that can be used to; /// transfer results from Python to C++.; /// \param resultName Name of the Python variable that is swapped over to the std::any result.; /// The default value is `""_anyresult""`.; /// \return bool Returns `true` if the command was successfully executed,; /// otherwise returns `false`.",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:12,Availability,error,error,12,"// test for error",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:3,Testability,test,test,3,"// test for error",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:10,Availability,error,errors,10,"// report errors as appropriate; return void",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:86,Testability,Test,Test,86,"////////////////////////////////////////////////////////////////////////////////; /// Test whether the type of the given pyobject is of CPPInstance type or any; /// derived type.",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:25,Modifiability,inherit,inheritance,25,"// detailed walk through inheritance hierarchy",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:86,Testability,Test,Test,86,"////////////////////////////////////////////////////////////////////////////////; /// Test whether the type of the given pyobject is CPPinstance type.",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:86,Testability,Test,Test,86,"////////////////////////////////////////////////////////////////////////////////; /// Test whether the type of the given pyobject is of CPPOverload type or any; /// derived type.",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:25,Modifiability,inherit,inheritance,25,"// detailed walk through inheritance hierarchy",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:86,Testability,Test,Test,86,"////////////////////////////////////////////////////////////////////////////////; /// Test whether the type of the given pyobject is CPPOverload type.",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:69,Availability,error,errors,69,"// perform cast (the call will check TClass and addr, and set python errors); // give ownership, for ref-counting, to the python side, if so requested",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx:3,Performance,perform,perform,3,"// perform cast (the call will check TClass and addr, and set python errors); // give ownership, for ref-counting, to the python side, if so requested",MatchSource.CODE_COMMENT,bindings/tpython/src/TPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/src/TPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/test/testTPython.cxx:17,Testability,Test,Test,17,"// namespace; // Test TPython::Exec from multiple threads.",MatchSource.CODE_COMMENT,bindings/tpython/test/testTPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/test/testTPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/test/testTPython.cxx:3,Performance,Concurren,Concurrently,3,"// Concurrently append to this array",MatchSource.CODE_COMMENT,bindings/tpython/test/testTPython.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/test/testTPython.cxx
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/test/test_tpython.py:5,Testability,Test,Testing,5,"""""""; Testing features of TPython from Python, to see if they still work when the; Python interpreter was not initialized by TPython on the C++ side.; """"""",MatchSource.CODE_COMMENT,bindings/tpython/test/test_tpython.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/test/test_tpython.py
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/test/test_tpython.py:5,Testability,Test,Test,5,"""""""; Test TPython::Exec.; """"""",MatchSource.CODE_COMMENT,bindings/tpython/test/test_tpython.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/test/test_tpython.py
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/test/test_tpython.py:8,Testability,Test,Test,8,""""""". // Test TPython::Exec from multiple threads.; int testTPythonExec(int nIn); {; std::any out;; std::stringstream cmd;; cmd << ""_anyresult = ROOT.std.make_any['int']("" << nIn << "")"";; TPython::Exec(cmd.str().c_str(), &out);; return std::any_cast<int>(out);; }; """"""",MatchSource.CODE_COMMENT,bindings/tpython/test/test_tpython.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/test/test_tpython.py
https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/test/test_tpython.py:55,Testability,test,testTPythonExec,55,""""""". // Test TPython::Exec from multiple threads.; int testTPythonExec(int nIn); {; std::any out;; std::stringstream cmd;; cmd << ""_anyresult = ROOT.std.make_any['int']("" << nIn << "")"";; TPython::Exec(cmd.str().c_str(), &out);; return std::any_cast<int>(out);; }; """"""",MatchSource.CODE_COMMENT,bindings/tpython/test/test_tpython.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/tpython/test/test_tpython.py
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/eglew.h:1951,Energy Efficiency,charge,charge,1951," FOR A PARTICULAR PURPOSE; ** ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE ; ** LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR ; ** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF ; ** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS; ** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN; ** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE); ** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF; ** THE POSSIBILITY OF SUCH DAMAGE.; */; /*; * Mesa 3-D graphics library; * Version: 7.0; *; * Copyright (C) 1999-2007 Brian Paul All Rights Reserved.; *; * Permission is hereby granted, free of charge, to any person obtaining a; * copy of this software and associated documentation files (the ""Software""),; * to deal in the Software without restriction, including without limitation; * the rights to use, copy, modify, merge, publish, distribute, sublicense,; * and/or sell copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included; * in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS; * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL; * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; */; /*; ** Copyright (c) 2007 The Khronos Group Inc.; ** ; ** Permission is hereby granted, free of charge, to any person obtaining a; ** copy of this software and/or associated documentation files (the; ** ""Materials""), to deal in the Materia",MatchSource.CODE_COMMENT,builtins/glew/inc/GL/eglew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/eglew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/eglew.h:3058,Energy Efficiency,charge,charge,3058,"t limitation; * the rights to use, copy, modify, merge, publish, distribute, sublicense,; * and/or sell copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included; * in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS; * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL; * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; */; /*; ** Copyright (c) 2007 The Khronos Group Inc.; ** ; ** Permission is hereby granted, free of charge, to any person obtaining a; ** copy of this software and/or associated documentation files (the; ** ""Materials""), to deal in the Materials without restriction, including; ** without limitation the rights to use, copy, modify, merge, publish,; ** distribute, sublicense, and/or sell copies of the Materials, and to; ** permit persons to whom the Materials are furnished to do so, subject to; ** the following conditions:; ** ; ** The above copyright notice and this permission notice shall be included; ** in all copies or substantial portions of the Materials.; ** ; ** THE MATERIALS ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.; ** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY; ** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,; ** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE; ** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.; */",MatchSource.CODE_COMMENT,builtins/glew/inc/GL/eglew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/eglew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/eglew.h:1609,Integrability,CONTRACT,CONTRACT,1609," must retain the above copyright notice, ; ** this list of conditions and the following disclaimer.; ** * Redistributions in binary form must reproduce the above copyright notice, ; ** this list of conditions and the following disclaimer in the documentation ; ** and/or other materials provided with the distribution.; ** * The name of the author may be used to endorse or promote products ; ** derived from this software without specific prior written permission.; **; ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" ; ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE ; ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE; ** ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE ; ** LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR ; ** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF ; ** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS; ** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN; ** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE); ** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF; ** THE POSSIBILITY OF SUCH DAMAGE.; */; /*; * Mesa 3-D graphics library; * Version: 7.0; *; * Copyright (C) 1999-2007 Brian Paul All Rights Reserved.; *; * Permission is hereby granted, free of charge, to any person obtaining a; * copy of this software and associated documentation files (the ""Software""),; * to deal in the Software without restriction, including without limitation; * the rights to use, copy, modify, merge, publish, distribute, sublicense,; * and/or sell copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included; * in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS ",MatchSource.CODE_COMMENT,builtins/glew/inc/GL/eglew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/eglew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/eglew.h:2823,Integrability,CONTRACT,CONTRACT,2823,"ersion: 7.0; *; * Copyright (C) 1999-2007 Brian Paul All Rights Reserved.; *; * Permission is hereby granted, free of charge, to any person obtaining a; * copy of this software and associated documentation files (the ""Software""),; * to deal in the Software without restriction, including without limitation; * the rights to use, copy, modify, merge, publish, distribute, sublicense,; * and/or sell copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included; * in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS; * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL; * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; */; /*; ** Copyright (c) 2007 The Khronos Group Inc.; ** ; ** Permission is hereby granted, free of charge, to any person obtaining a; ** copy of this software and/or associated documentation files (the; ** ""Materials""), to deal in the Materials without restriction, including; ** without limitation the rights to use, copy, modify, merge, publish,; ** distribute, sublicense, and/or sell copies of the Materials, and to; ** permit persons to whom the Materials are furnished to do so, subject to; ** the following conditions:; ** ; ** The above copyright notice and this permission notice shall be included; ** in all copies or substantial portions of the Materials.; ** ; ** THE MATERIALS ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON",MatchSource.CODE_COMMENT,builtins/glew/inc/GL/eglew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/eglew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/eglew.h:3983,Integrability,CONTRACT,CONTRACT,3983,"t limitation; * the rights to use, copy, modify, merge, publish, distribute, sublicense,; * and/or sell copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included; * in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS; * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL; * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; */; /*; ** Copyright (c) 2007 The Khronos Group Inc.; ** ; ** Permission is hereby granted, free of charge, to any person obtaining a; ** copy of this software and/or associated documentation files (the; ** ""Materials""), to deal in the Materials without restriction, including; ** without limitation the rights to use, copy, modify, merge, publish,; ** distribute, sublicense, and/or sell copies of the Materials, and to; ** permit persons to whom the Materials are furnished to do so, subject to; ** the following conditions:; ** ; ** The above copyright notice and this permission notice shall be included; ** in all copies or substantial portions of the Materials.; ** ; ** THE MATERIALS ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.; ** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY; ** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,; ** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE; ** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.; */",MatchSource.CODE_COMMENT,builtins/glew/inc/GL/eglew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/eglew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h:1951,Energy Efficiency,charge,charge,1951," FOR A PARTICULAR PURPOSE; ** ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE ; ** LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR ; ** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF ; ** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS; ** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN; ** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE); ** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF; ** THE POSSIBILITY OF SUCH DAMAGE.; */; /*; * Mesa 3-D graphics library; * Version: 7.0; *; * Copyright (C) 1999-2007 Brian Paul All Rights Reserved.; *; * Permission is hereby granted, free of charge, to any person obtaining a; * copy of this software and associated documentation files (the ""Software""),; * to deal in the Software without restriction, including without limitation; * the rights to use, copy, modify, merge, publish, distribute, sublicense,; * and/or sell copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included; * in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS; * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL; * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; */; /*; ** Copyright (c) 2007 The Khronos Group Inc.; ** ; ** Permission is hereby granted, free of charge, to any person obtaining a; ** copy of this software and/or associated documentation files (the; ** ""Materials""), to deal in the Materia",MatchSource.CODE_COMMENT,builtins/glew/inc/GL/glew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h:3058,Energy Efficiency,charge,charge,3058,"t limitation; * the rights to use, copy, modify, merge, publish, distribute, sublicense,; * and/or sell copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included; * in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS; * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL; * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; */; /*; ** Copyright (c) 2007 The Khronos Group Inc.; ** ; ** Permission is hereby granted, free of charge, to any person obtaining a; ** copy of this software and/or associated documentation files (the; ** ""Materials""), to deal in the Materials without restriction, including; ** without limitation the rights to use, copy, modify, merge, publish,; ** distribute, sublicense, and/or sell copies of the Materials, and to; ** permit persons to whom the Materials are furnished to do so, subject to; ** the following conditions:; ** ; ** The above copyright notice and this permission notice shall be included; ** in all copies or substantial portions of the Materials.; ** ; ** THE MATERIALS ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.; ** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY; ** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,; ** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE; ** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.; */",MatchSource.CODE_COMMENT,builtins/glew/inc/GL/glew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h:1609,Integrability,CONTRACT,CONTRACT,1609," must retain the above copyright notice, ; ** this list of conditions and the following disclaimer.; ** * Redistributions in binary form must reproduce the above copyright notice, ; ** this list of conditions and the following disclaimer in the documentation ; ** and/or other materials provided with the distribution.; ** * The name of the author may be used to endorse or promote products ; ** derived from this software without specific prior written permission.; **; ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" ; ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE ; ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE; ** ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE ; ** LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR ; ** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF ; ** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS; ** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN; ** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE); ** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF; ** THE POSSIBILITY OF SUCH DAMAGE.; */; /*; * Mesa 3-D graphics library; * Version: 7.0; *; * Copyright (C) 1999-2007 Brian Paul All Rights Reserved.; *; * Permission is hereby granted, free of charge, to any person obtaining a; * copy of this software and associated documentation files (the ""Software""),; * to deal in the Software without restriction, including without limitation; * the rights to use, copy, modify, merge, publish, distribute, sublicense,; * and/or sell copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included; * in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS ",MatchSource.CODE_COMMENT,builtins/glew/inc/GL/glew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h:2823,Integrability,CONTRACT,CONTRACT,2823,"ersion: 7.0; *; * Copyright (C) 1999-2007 Brian Paul All Rights Reserved.; *; * Permission is hereby granted, free of charge, to any person obtaining a; * copy of this software and associated documentation files (the ""Software""),; * to deal in the Software without restriction, including without limitation; * the rights to use, copy, modify, merge, publish, distribute, sublicense,; * and/or sell copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included; * in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS; * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL; * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; */; /*; ** Copyright (c) 2007 The Khronos Group Inc.; ** ; ** Permission is hereby granted, free of charge, to any person obtaining a; ** copy of this software and/or associated documentation files (the; ** ""Materials""), to deal in the Materials without restriction, including; ** without limitation the rights to use, copy, modify, merge, publish,; ** distribute, sublicense, and/or sell copies of the Materials, and to; ** permit persons to whom the Materials are furnished to do so, subject to; ** the following conditions:; ** ; ** The above copyright notice and this permission notice shall be included; ** in all copies or substantial portions of the Materials.; ** ; ** THE MATERIALS ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON",MatchSource.CODE_COMMENT,builtins/glew/inc/GL/glew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h:3983,Integrability,CONTRACT,CONTRACT,3983,"t limitation; * the rights to use, copy, modify, merge, publish, distribute, sublicense,; * and/or sell copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included; * in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS; * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL; * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; */; /*; ** Copyright (c) 2007 The Khronos Group Inc.; ** ; ** Permission is hereby granted, free of charge, to any person obtaining a; ** copy of this software and/or associated documentation files (the; ** ""Materials""), to deal in the Materials without restriction, including; ** without limitation the rights to use, copy, modify, merge, publish,; ** distribute, sublicense, and/or sell copies of the Materials, and to; ** permit persons to whom the Materials are furnished to do so, subject to; ** the following conditions:; ** ; ** The above copyright notice and this permission notice shall be included; ** in all copies or substantial portions of the Materials.; ** ; ** THE MATERIALS ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.; ** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY; ** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,; ** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE; ** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.; */",MatchSource.CODE_COMMENT,builtins/glew/inc/GL/glew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h:43,Safety,avoid,avoid,43,"/*; * GLEW does not include <windows.h> to avoid name space pollution.; * GL needs GLAPI and GLAPIENTRY, GLU needs APIENTRY, CALLBACK, and wchar_t; * defined properly.; */; /* <windef.h> and <gl.h>*/",MatchSource.CODE_COMMENT,builtins/glew/inc/GL/glew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h:313,Modifiability,portab,portable,313,"/* _UNIX */; /*; * Needed for ptrdiff_t in turn needed by VBO. This is defined by ISO; * C. On my system, this amounts to _3 lines_ of included code, all of; * them pretty much harmless. If you know of a way of detecting 32 vs; * 64 _targets_ at compile time you are free to replace this with; * something that's portable. For now, _this_ is the portable solution.; * (mem, 2004-01-04); */",MatchSource.CODE_COMMENT,builtins/glew/inc/GL/glew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h:346,Modifiability,portab,portable,346,"/* _UNIX */; /*; * Needed for ptrdiff_t in turn needed by VBO. This is defined by ISO; * C. On my system, this amounts to _3 lines_ of included code, all of; * them pretty much harmless. If you know of a way of detecting 32 vs; * 64 _targets_ at compile time you are free to replace this with; * something that's portable. For now, _this_ is the portable solution.; * (mem, 2004-01-04); */",MatchSource.CODE_COMMENT,builtins/glew/inc/GL/glew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h:211,Safety,detect,detecting,211,"/* _UNIX */; /*; * Needed for ptrdiff_t in turn needed by VBO. This is defined by ISO; * C. On my system, this amounts to _3 lines_ of included code, all of; * them pretty much harmless. If you know of a way of detecting 32 vs; * 64 _targets_ at compile time you are free to replace this with; * something that's portable. For now, _this_ is the portable solution.; * (mem, 2004-01-04); */",MatchSource.CODE_COMMENT,builtins/glew/inc/GL/glew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h:24,Safety,safe,safely,24,/* this is where we can safely include GLU */,MatchSource.CODE_COMMENT,builtins/glew/inc/GL/glew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h:84,Availability,error,error,84,/* ------------------------------------------------------------------------- */; /* error codes */,MatchSource.CODE_COMMENT,builtins/glew/inc/GL/glew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glxew.h:1951,Energy Efficiency,charge,charge,1951," FOR A PARTICULAR PURPOSE; ** ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE ; ** LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR ; ** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF ; ** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS; ** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN; ** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE); ** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF; ** THE POSSIBILITY OF SUCH DAMAGE.; */; /*; * Mesa 3-D graphics library; * Version: 7.0; *; * Copyright (C) 1999-2007 Brian Paul All Rights Reserved.; *; * Permission is hereby granted, free of charge, to any person obtaining a; * copy of this software and associated documentation files (the ""Software""),; * to deal in the Software without restriction, including without limitation; * the rights to use, copy, modify, merge, publish, distribute, sublicense,; * and/or sell copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included; * in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS; * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL; * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; */; /*; ** Copyright (c) 2007 The Khronos Group Inc.; ** ; ** Permission is hereby granted, free of charge, to any person obtaining a; ** copy of this software and/or associated documentation files (the; ** ""Materials""), to deal in the Materia",MatchSource.CODE_COMMENT,builtins/glew/inc/GL/glxew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glxew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glxew.h:3058,Energy Efficiency,charge,charge,3058,"t limitation; * the rights to use, copy, modify, merge, publish, distribute, sublicense,; * and/or sell copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included; * in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS; * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL; * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; */; /*; ** Copyright (c) 2007 The Khronos Group Inc.; ** ; ** Permission is hereby granted, free of charge, to any person obtaining a; ** copy of this software and/or associated documentation files (the; ** ""Materials""), to deal in the Materials without restriction, including; ** without limitation the rights to use, copy, modify, merge, publish,; ** distribute, sublicense, and/or sell copies of the Materials, and to; ** permit persons to whom the Materials are furnished to do so, subject to; ** the following conditions:; ** ; ** The above copyright notice and this permission notice shall be included; ** in all copies or substantial portions of the Materials.; ** ; ** THE MATERIALS ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.; ** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY; ** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,; ** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE; ** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.; */",MatchSource.CODE_COMMENT,builtins/glew/inc/GL/glxew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glxew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glxew.h:1609,Integrability,CONTRACT,CONTRACT,1609," must retain the above copyright notice, ; ** this list of conditions and the following disclaimer.; ** * Redistributions in binary form must reproduce the above copyright notice, ; ** this list of conditions and the following disclaimer in the documentation ; ** and/or other materials provided with the distribution.; ** * The name of the author may be used to endorse or promote products ; ** derived from this software without specific prior written permission.; **; ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" ; ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE ; ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE; ** ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE ; ** LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR ; ** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF ; ** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS; ** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN; ** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE); ** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF; ** THE POSSIBILITY OF SUCH DAMAGE.; */; /*; * Mesa 3-D graphics library; * Version: 7.0; *; * Copyright (C) 1999-2007 Brian Paul All Rights Reserved.; *; * Permission is hereby granted, free of charge, to any person obtaining a; * copy of this software and associated documentation files (the ""Software""),; * to deal in the Software without restriction, including without limitation; * the rights to use, copy, modify, merge, publish, distribute, sublicense,; * and/or sell copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included; * in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS ",MatchSource.CODE_COMMENT,builtins/glew/inc/GL/glxew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glxew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glxew.h:2823,Integrability,CONTRACT,CONTRACT,2823,"ersion: 7.0; *; * Copyright (C) 1999-2007 Brian Paul All Rights Reserved.; *; * Permission is hereby granted, free of charge, to any person obtaining a; * copy of this software and associated documentation files (the ""Software""),; * to deal in the Software without restriction, including without limitation; * the rights to use, copy, modify, merge, publish, distribute, sublicense,; * and/or sell copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included; * in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS; * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL; * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; */; /*; ** Copyright (c) 2007 The Khronos Group Inc.; ** ; ** Permission is hereby granted, free of charge, to any person obtaining a; ** copy of this software and/or associated documentation files (the; ** ""Materials""), to deal in the Materials without restriction, including; ** without limitation the rights to use, copy, modify, merge, publish,; ** distribute, sublicense, and/or sell copies of the Materials, and to; ** permit persons to whom the Materials are furnished to do so, subject to; ** the following conditions:; ** ; ** The above copyright notice and this permission notice shall be included; ** in all copies or substantial portions of the Materials.; ** ; ** THE MATERIALS ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON",MatchSource.CODE_COMMENT,builtins/glew/inc/GL/glxew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glxew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glxew.h:3983,Integrability,CONTRACT,CONTRACT,3983,"t limitation; * the rights to use, copy, modify, merge, publish, distribute, sublicense,; * and/or sell copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included; * in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS; * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL; * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; */; /*; ** Copyright (c) 2007 The Khronos Group Inc.; ** ; ** Permission is hereby granted, free of charge, to any person obtaining a; ** copy of this software and/or associated documentation files (the; ** ""Materials""), to deal in the Materials without restriction, including; ** without limitation the rights to use, copy, modify, merge, publish,; ** distribute, sublicense, and/or sell copies of the Materials, and to; ** permit persons to whom the Materials are furnished to do so, subject to; ** the following conditions:; ** ; ** The above copyright notice and this permission notice shall be included; ** in all copies or substantial portions of the Materials.; ** ; ** THE MATERIALS ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.; ** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY; ** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,; ** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE; ** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.; */",MatchSource.CODE_COMMENT,builtins/glew/inc/GL/glxew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glxew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/wglew.h:1893,Energy Efficiency,charge,charge,1893,"r written permission.; **; ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" ; ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE ; ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE; ** ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE ; ** LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR ; ** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF ; ** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS; ** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN; ** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE); ** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF; ** THE POSSIBILITY OF SUCH DAMAGE.; */; /*; ** Copyright (c) 2007 The Khronos Group Inc.; ** ; ** Permission is hereby granted, free of charge, to any person obtaining a; ** copy of this software and/or associated documentation files (the; ** ""Materials""), to deal in the Materials without restriction, including; ** without limitation the rights to use, copy, modify, merge, publish,; ** distribute, sublicense, and/or sell copies of the Materials, and to; ** permit persons to whom the Materials are furnished to do so, subject to; ** the following conditions:; ** ; ** The above copyright notice and this permission notice shall be included; ** in all copies or substantial portions of the Materials.; ** ; ** THE MATERIALS ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.; ** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY; ** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,; ** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE; ** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.; */",MatchSource.CODE_COMMENT,builtins/glew/inc/GL/wglew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/wglew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/wglew.h:1609,Integrability,CONTRACT,CONTRACT,1609," must retain the above copyright notice, ; ** this list of conditions and the following disclaimer.; ** * Redistributions in binary form must reproduce the above copyright notice, ; ** this list of conditions and the following disclaimer in the documentation ; ** and/or other materials provided with the distribution.; ** * The name of the author may be used to endorse or promote products ; ** derived from this software without specific prior written permission.; **; ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" ; ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE ; ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE; ** ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE ; ** LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR ; ** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF ; ** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS; ** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN; ** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE); ** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF; ** THE POSSIBILITY OF SUCH DAMAGE.; */; /*; ** Copyright (c) 2007 The Khronos Group Inc.; ** ; ** Permission is hereby granted, free of charge, to any person obtaining a; ** copy of this software and/or associated documentation files (the; ** ""Materials""), to deal in the Materials without restriction, including; ** without limitation the rights to use, copy, modify, merge, publish,; ** distribute, sublicense, and/or sell copies of the Materials, and to; ** permit persons to whom the Materials are furnished to do so, subject to; ** the following conditions:; ** ; ** The above copyright notice and this permission notice shall be included; ** in all copies or substantial portions of the Materials.; ** ; ** THE MATERIALS ARE PROVIDED ""AS IS"", WITHOUT WARRA",MatchSource.CODE_COMMENT,builtins/glew/inc/GL/wglew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/wglew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/wglew.h:2818,Integrability,CONTRACT,CONTRACT,2818,"r written permission.; **; ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" ; ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE ; ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE; ** ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE ; ** LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR ; ** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF ; ** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS; ** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN; ** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE); ** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF; ** THE POSSIBILITY OF SUCH DAMAGE.; */; /*; ** Copyright (c) 2007 The Khronos Group Inc.; ** ; ** Permission is hereby granted, free of charge, to any person obtaining a; ** copy of this software and/or associated documentation files (the; ** ""Materials""), to deal in the Materials without restriction, including; ** without limitation the rights to use, copy, modify, merge, publish,; ** distribute, sublicense, and/or sell copies of the Materials, and to; ** permit persons to whom the Materials are furnished to do so, subject to; ** the following conditions:; ** ; ** The above copyright notice and this permission notice shall be included; ** in all copies or substantial portions of the Materials.; ** ; ** THE MATERIALS ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.; ** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY; ** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,; ** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE; ** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.; */",MatchSource.CODE_COMMENT,builtins/glew/inc/GL/wglew.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/wglew.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1247,Integrability,CONTRACT,CONTRACT,1247,"/*; * LZ4 - Fast LZ compression algorithm; * Header File; * Copyright (C) 2011-present, Yann Collet. BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php). Redistribution and use in source and binary forms, with or without; modification, are permitted provided that the following conditions are; met:. * Redistributions of source code must retain the above copyright; notice, this list of conditions and the following disclaimer.; * Redistributions in binary form must reproduce the above; copyright notice, this list of conditions and the following disclaimer; in the documentation and/or other materials provided with the; distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS; ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR; A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT; OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. You can contact the author at :; - LZ4 homepage : http://www.lz4.org; - LZ4 source repository : https://github.com/lz4/lz4; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:7,Integrability,Depend,Dependency,7,/* --- Dependency --- */,MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:778,Integrability,depend,depends,778,"/**; Introduction. LZ4 is lossless compression algorithm, providing compression speed >500 MB/s per core,; scalable with multi-cores CPU. It features an extremely fast decoder, with speed in; multiple GB/s per core, typically reaching RAM speed limits on multi-core systems. The LZ4 compression library provides in-memory compression and decompression functions.; It gives full buffer control to user.; Compression can be done in:; - a single step (described as Simple Functions); - a single step, reusing a context (described in Advanced Functions); - unbounded multiple steps (described as Streaming compression). lz4.h generates and decodes LZ4-compressed blocks (doc/lz4_Block_format.md).; Decompressing such a compressed block requires additional metadata.; Exact metadata depends on exact decompression function.; For the typical case of LZ4_decompress_safe(),; metadata includes block's compressed size, and maximum bound of decompressed size.; Each application is free to encode and pass such metadata in whichever way it wants. lz4.h only handle blocks, it can not generate Frames. Blocks are different from Frames (doc/lz4_Frame_format.md).; Frames bundle both blocks and metadata in a specified manner.; Embedding metadata is required for compressed data to be self-contained and portable.; Frame format is delivered through a companion API, declared in lz4frame.h.; The `lz4` CLI can only manage frames.; */; /*^***************************************************************; * Export parameters; *****************************************************************/; /*; * LZ4_DLL_EXPORT :; * Enable exporting of functions when building a Windows DLL; * LZ4LIB_VISIBILITY :; * Control library symbols visibility.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1291,Modifiability,portab,portable,1291,"/**; Introduction. LZ4 is lossless compression algorithm, providing compression speed >500 MB/s per core,; scalable with multi-cores CPU. It features an extremely fast decoder, with speed in; multiple GB/s per core, typically reaching RAM speed limits on multi-core systems. The LZ4 compression library provides in-memory compression and decompression functions.; It gives full buffer control to user.; Compression can be done in:; - a single step (described as Simple Functions); - a single step, reusing a context (described in Advanced Functions); - unbounded multiple steps (described as Streaming compression). lz4.h generates and decodes LZ4-compressed blocks (doc/lz4_Block_format.md).; Decompressing such a compressed block requires additional metadata.; Exact metadata depends on exact decompression function.; For the typical case of LZ4_decompress_safe(),; metadata includes block's compressed size, and maximum bound of decompressed size.; Each application is free to encode and pass such metadata in whichever way it wants. lz4.h only handle blocks, it can not generate Frames. Blocks are different from Frames (doc/lz4_Frame_format.md).; Frames bundle both blocks and metadata in a specified manner.; Embedding metadata is required for compressed data to be self-contained and portable.; Frame format is delivered through a companion API, declared in lz4frame.h.; The `lz4` CLI can only manage frames.; */; /*^***************************************************************; * Export parameters; *****************************************************************/; /*; * LZ4_DLL_EXPORT :; * Enable exporting of functions when building a Windows DLL; * LZ4LIB_VISIBILITY :; * Control library symbols visibility.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:107,Performance,scalab,scalable,107,"/**; Introduction. LZ4 is lossless compression algorithm, providing compression speed >500 MB/s per core,; scalable with multi-cores CPU. It features an extremely fast decoder, with speed in; multiple GB/s per core, typically reaching RAM speed limits on multi-core systems. The LZ4 compression library provides in-memory compression and decompression functions.; It gives full buffer control to user.; Compression can be done in:; - a single step (described as Simple Functions); - a single step, reusing a context (described in Advanced Functions); - unbounded multiple steps (described as Streaming compression). lz4.h generates and decodes LZ4-compressed blocks (doc/lz4_Block_format.md).; Decompressing such a compressed block requires additional metadata.; Exact metadata depends on exact decompression function.; For the typical case of LZ4_decompress_safe(),; metadata includes block's compressed size, and maximum bound of decompressed size.; Each application is free to encode and pass such metadata in whichever way it wants. lz4.h only handle blocks, it can not generate Frames. Blocks are different from Frames (doc/lz4_Frame_format.md).; Frames bundle both blocks and metadata in a specified manner.; Embedding metadata is required for compressed data to be self-contained and portable.; Frame format is delivered through a companion API, declared in lz4frame.h.; The `lz4` CLI can only manage frames.; */; /*^***************************************************************; * Export parameters; *****************************************************************/; /*; * LZ4_DLL_EXPORT :; * Enable exporting of functions when building a Windows DLL; * LZ4LIB_VISIBILITY :; * Control library symbols visibility.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:462,Usability,Simpl,Simple,462,"/**; Introduction. LZ4 is lossless compression algorithm, providing compression speed >500 MB/s per core,; scalable with multi-cores CPU. It features an extremely fast decoder, with speed in; multiple GB/s per core, typically reaching RAM speed limits on multi-core systems. The LZ4 compression library provides in-memory compression and decompression functions.; It gives full buffer control to user.; Compression can be done in:; - a single step (described as Simple Functions); - a single step, reusing a context (described in Advanced Functions); - unbounded multiple steps (described as Streaming compression). lz4.h generates and decodes LZ4-compressed blocks (doc/lz4_Block_format.md).; Decompressing such a compressed block requires additional metadata.; Exact metadata depends on exact decompression function.; For the typical case of LZ4_decompress_safe(),; metadata includes block's compressed size, and maximum bound of decompressed size.; Each application is free to encode and pass such metadata in whichever way it wants. lz4.h only handle blocks, it can not generate Frames. Blocks are different from Frames (doc/lz4_Frame_format.md).; Frames bundle both blocks and metadata in a specified manner.; Embedding metadata is required for compressed data to be self-contained and portable.; Frame format is delivered through a companion API, declared in lz4frame.h.; The `lz4` CLI can only manage frames.; */; /*^***************************************************************; * Export parameters; *****************************************************************/; /*; * LZ4_DLL_EXPORT :; * Enable exporting of functions when building a Windows DLL; * LZ4LIB_VISIBILITY :; * Control library symbols visibility.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:83,Performance,load,load,83,"/* It isn't required but allows to generate better code, saving a function pointer load from the IAT and an indirect jump.*/",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:16,Integrability,interface,interface,16,/* for breaking interface changes */,MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:26,Integrability,interface,interface,26,/* for new (non-breaking) interface capabilities */,MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:350,Energy Efficiency,Reduce,Reduced,350,"/**< library version string; useful to check dll version */; /*-************************************; * Tuning parameter; **************************************/; /*!; * LZ4_MEMORY_USAGE :; * Memory usage formula : N->2^N Bytes (examples : 10 -> 1KB; 12 -> 4KB ; 16 -> 64KB; 20 -> 1MB; etc.); * Increasing memory usage improves compression ratio.; * Reduced memory usage may improve speed, thanks to better cache locality.; * Default value is 14, for 16KB, which nicely fits into Intel x86 L1 cache; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:407,Performance,cache,cache,407,"/**< library version string; useful to check dll version */; /*-************************************; * Tuning parameter; **************************************/; /*!; * LZ4_MEMORY_USAGE :; * Memory usage formula : N->2^N Bytes (examples : 10 -> 1KB; 12 -> 4KB ; 16 -> 64KB; 20 -> 1MB; etc.); * Increasing memory usage improves compression ratio.; * Reduced memory usage may improve speed, thanks to better cache locality.; * Default value is 14, for 16KB, which nicely fits into Intel x86 L1 cache; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:493,Performance,cache,cache,493,"/**< library version string; useful to check dll version */; /*-************************************; * Tuning parameter; **************************************/; /*!; * LZ4_MEMORY_USAGE :; * Memory usage formula : N->2^N Bytes (examples : 10 -> 1KB; 12 -> 4KB ; 16 -> 64KB; 20 -> 1MB; etc.); * Increasing memory usage improves compression ratio.; * Reduced memory usage may improve speed, thanks to better cache locality.; * Default value is 14, for 16KB, which nicely fits into Intel x86 L1 cache; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:195,Energy Efficiency,allocate,allocated,195,"/*-************************************; * Simple Functions; **************************************/; /*! LZ4_compress_default() :; * Compresses 'srcSize' bytes from buffer 'src'; * into already allocated 'dst' buffer of size 'dstCapacity'.; * Compression is guaranteed to succeed if 'dstCapacity' >= LZ4_compressBound(srcSize).; * It also runs faster, so it's a recommended setting.; * If the function cannot compress 'src' into a more limited 'dst' budget,; * compression stops *immediately*, and the function result is zero.; * In which case, 'dst' content is undefined (invalid).; * srcSize : max supported value is LZ4_MAX_INPUT_SIZE.; * dstCapacity : size of buffer 'dst' (which must be already allocated); * @return : the number of bytes written into buffer 'dst' (necessarily <= dstCapacity); * or 0 if compression fails; * Note : This function is protected against buffer overflow scenarios (never writes outside 'dst' buffer, nor read outside 'source' buffer).; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:701,Energy Efficiency,allocate,allocated,701,"/*-************************************; * Simple Functions; **************************************/; /*! LZ4_compress_default() :; * Compresses 'srcSize' bytes from buffer 'src'; * into already allocated 'dst' buffer of size 'dstCapacity'.; * Compression is guaranteed to succeed if 'dstCapacity' >= LZ4_compressBound(srcSize).; * It also runs faster, so it's a recommended setting.; * If the function cannot compress 'src' into a more limited 'dst' budget,; * compression stops *immediately*, and the function result is zero.; * In which case, 'dst' content is undefined (invalid).; * srcSize : max supported value is LZ4_MAX_INPUT_SIZE.; * dstCapacity : size of buffer 'dst' (which must be already allocated); * @return : the number of bytes written into buffer 'dst' (necessarily <= dstCapacity); * or 0 if compression fails; * Note : This function is protected against buffer overflow scenarios (never writes outside 'dst' buffer, nor read outside 'source' buffer).; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:43,Usability,Simpl,Simple,43,"/*-************************************; * Simple Functions; **************************************/; /*! LZ4_compress_default() :; * Compresses 'srcSize' bytes from buffer 'src'; * into already allocated 'dst' buffer of size 'dstCapacity'.; * Compression is guaranteed to succeed if 'dstCapacity' >= LZ4_compressBound(srcSize).; * It also runs faster, so it's a recommended setting.; * If the function cannot compress 'src' into a more limited 'dst' budget,; * compression stops *immediately*, and the function result is zero.; * In which case, 'dst' content is undefined (invalid).; * srcSize : max supported value is LZ4_MAX_INPUT_SIZE.; * dstCapacity : size of buffer 'dst' (which must be already allocated); * @return : the number of bytes written into buffer 'dst' (necessarily <= dstCapacity); * or 0 if compression fails; * Note : This function is protected against buffer overflow scenarios (never writes outside 'dst' buffer, nor read outside 'source' buffer).; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:410,Availability,error,error,410,"/*! LZ4_decompress_safe() :; * compressedSize : is the exact complete size of the compressed block.; * dstCapacity : is the size of destination buffer (which must be already allocated), presumed an upper bound of decompressed size.; * @return : the number of bytes decompressed into destination buffer (necessarily <= dstCapacity); * If destination buffer is not large enough, decoding will stop and output an error code (negative value).; * If the source stream is detected malformed, the function will stop decoding and return a negative result.; * Note 1 : This function is protected against malicious data packets :; * it will never writes outside 'dst' buffer, nor read outside 'source' buffer,; * even if the compressed block is maliciously modified to order the decoder to do these actions.; * In such case, the decoder stops immediately, and considers the compressed block malformed.; * Note 2 : compressedSize and dstCapacity must be provided to the function, the compressed block does not contain them.; * The implementation is free to send / store / derive this information in whichever way is most beneficial.; * If there is a need for a different format which bundles together both compressed data and its metadata, consider looking at lz4frame.h instead.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:174,Energy Efficiency,allocate,allocated,174,"/*! LZ4_decompress_safe() :; * compressedSize : is the exact complete size of the compressed block.; * dstCapacity : is the size of destination buffer (which must be already allocated), presumed an upper bound of decompressed size.; * @return : the number of bytes decompressed into destination buffer (necessarily <= dstCapacity); * If destination buffer is not large enough, decoding will stop and output an error code (negative value).; * If the source stream is detected malformed, the function will stop decoding and return a negative result.; * Note 1 : This function is protected against malicious data packets :; * it will never writes outside 'dst' buffer, nor read outside 'source' buffer,; * even if the compressed block is maliciously modified to order the decoder to do these actions.; * In such case, the decoder stops immediately, and considers the compressed block malformed.; * Note 2 : compressedSize and dstCapacity must be provided to the function, the compressed block does not contain them.; * The implementation is free to send / store / derive this information in whichever way is most beneficial.; * If there is a need for a different format which bundles together both compressed data and its metadata, consider looking at lz4frame.h instead.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:466,Safety,detect,detected,466,"/*! LZ4_decompress_safe() :; * compressedSize : is the exact complete size of the compressed block.; * dstCapacity : is the size of destination buffer (which must be already allocated), presumed an upper bound of decompressed size.; * @return : the number of bytes decompressed into destination buffer (necessarily <= dstCapacity); * If destination buffer is not large enough, decoding will stop and output an error code (negative value).; * If the source stream is detected malformed, the function will stop decoding and return a negative result.; * Note 1 : This function is protected against malicious data packets :; * it will never writes outside 'dst' buffer, nor read outside 'source' buffer,; * even if the compressed block is maliciously modified to order the decoder to do these actions.; * In such case, the decoder stops immediately, and considers the compressed block malformed.; * Note 2 : compressedSize and dstCapacity must be provided to the function, the compressed block does not contain them.; * The implementation is free to send / store / derive this information in whichever way is most beneficial.; * If there is a need for a different format which bundles together both compressed data and its metadata, consider looking at lz4frame.h instead.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:239,Performance,tune,tuned,239,"/*! LZ4_compress_fast() :; Same as LZ4_compress_default(), but allows selection of ""acceleration"" factor.; The larger the acceleration value, the faster the algorithm, but also the lesser the compression.; It's a trade-off. It can be fine tuned, with each successive value providing roughly +~3% to speed.; An acceleration value of ""1"" is the same as regular LZ4_compress_default(); Values <= 0 will be replaced by LZ4_ACCELERATION_DEFAULT (currently == 1, see lz4.c).; Values > LZ4_ACCELERATION_MAX will be replaced by LZ4_ACCELERATION_MAX (currently == 65537, see lz4.c).; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:87,Energy Efficiency,allocate,allocated,87,"/*! LZ4_compress_fast_extState() :; * Same as LZ4_compress_fast(), using an externally allocated memory space for its state.; * Use LZ4_sizeofState() to know how much memory must be allocated,; * and allocate it on 8-bytes boundaries (using `malloc()` typically).; * Then, provide this buffer as `void* state` to compression function.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:182,Energy Efficiency,allocate,allocated,182,"/*! LZ4_compress_fast_extState() :; * Same as LZ4_compress_fast(), using an externally allocated memory space for its state.; * Use LZ4_sizeofState() to know how much memory must be allocated,; * and allocate it on 8-bytes boundaries (using `malloc()` typically).; * Then, provide this buffer as `void* state` to compression function.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:200,Energy Efficiency,allocate,allocate,200,"/*! LZ4_compress_fast_extState() :; * Same as LZ4_compress_fast(), using an externally allocated memory space for its state.; * Use LZ4_sizeofState() to know how much memory must be allocated,; * and allocate it on 8-bytes boundaries (using `malloc()` typically).; * Then, provide this buffer as `void* state` to compression function.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:998,Deployability,update,update,998,"/*! LZ4_compress_destSize() :; * Reverse the logic : compresses as much data as possible from 'src' buffer; * into already allocated buffer 'dst', of size >= 'targetDestSize'.; * This function either compresses the entire 'src' content into 'dst' if it's large enough,; * or fill 'dst' buffer completely with as much data as possible from 'src'.; * note: acceleration parameter is fixed to ""default"".; *; * *srcSizePtr : will be modified to indicate how many bytes where read from 'src' to fill 'dst'.; * New value is necessarily <= input value.; * @return : Nb bytes written into 'dst' (necessarily <= targetDestSize); * or 0 if compression fails.; *; * Note : from v1.8.2 to v1.9.1, this function had a bug (fixed un v1.9.2+):; * the produced compressed content could, in specific circumstances,; * require to be decompressed into a destination buffer larger; * by at least 1 byte than the content to decompress.; * If an application uses `LZ4_compress_destSize()`,; * it's highly recommended to update liblz4 to v1.9.2 or better.; * If this can't be done or ensured,; * the receiving decompression function should provide; * a dstCapacity which is > decompressedSize, by at least 1 byte.; * See https://github.com/lz4/lz4/issues/859 for details; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:123,Energy Efficiency,allocate,allocated,123,"/*! LZ4_compress_destSize() :; * Reverse the logic : compresses as much data as possible from 'src' buffer; * into already allocated buffer 'dst', of size >= 'targetDestSize'.; * This function either compresses the entire 'src' content into 'dst' if it's large enough,; * or fill 'dst' buffer completely with as much data as possible from 'src'.; * note: acceleration parameter is fixed to ""default"".; *; * *srcSizePtr : will be modified to indicate how many bytes where read from 'src' to fill 'dst'.; * New value is necessarily <= input value.; * @return : Nb bytes written into 'dst' (necessarily <= targetDestSize); * or 0 if compression fails.; *; * Note : from v1.8.2 to v1.9.1, this function had a bug (fixed un v1.9.2+):; * the produced compressed content could, in specific circumstances,; * require to be decompressed into a destination buffer larger; * by at least 1 byte than the content to decompress.; * If an application uses `LZ4_compress_destSize()`,; * it's highly recommended to update liblz4 to v1.9.2 or better.; * If this can't be done or ensured,; * the receiving decompression function should provide; * a dstCapacity which is > decompressedSize, by at least 1 byte.; * See https://github.com/lz4/lz4/issues/859 for details; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:45,Testability,log,logic,45,"/*! LZ4_compress_destSize() :; * Reverse the logic : compresses as much data as possible from 'src' buffer; * into already allocated buffer 'dst', of size >= 'targetDestSize'.; * This function either compresses the entire 'src' content into 'dst' if it's large enough,; * or fill 'dst' buffer completely with as much data as possible from 'src'.; * note: acceleration parameter is fixed to ""default"".; *; * *srcSizePtr : will be modified to indicate how many bytes where read from 'src' to fill 'dst'.; * New value is necessarily <= input value.; * @return : Nb bytes written into 'dst' (necessarily <= targetDestSize); * or 0 if compression fails.; *; * Note : from v1.8.2 to v1.9.1, this function had a bug (fixed un v1.9.2+):; * the produced compressed content could, in specific circumstances,; * require to be decompressed into a destination buffer larger; * by at least 1 byte than the content to decompress.; * If an application uses `LZ4_compress_destSize()`,; * it's highly recommended to update liblz4 to v1.9.2 or better.; * If this can't be done or ensured,; * the receiving decompression function should provide; * a dstCapacity which is > decompressedSize, by at least 1 byte.; * See https://github.com/lz4/lz4/issues/859 for details; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:802,Availability,redundant,redundant,802,"/*! LZ4_decompress_safe_partial() :; * Decompress an LZ4 compressed block, of size 'srcSize' at position 'src',; * into destination buffer 'dst' of size 'dstCapacity'.; * Up to 'targetOutputSize' bytes will be decoded.; * The function stops decoding on reaching this objective.; * This can be useful to boost performance; * whenever only the beginning of a block is required.; *; * @return : the number of bytes decoded in `dst` (necessarily <= targetOutputSize); * If source stream is detected malformed, function returns a negative result.; *; * Note 1 : @return can be < targetOutputSize, if compressed block contains less data.; *; * Note 2 : targetOutputSize must be <= dstCapacity; *; * Note 3 : this function effectively stops decoding on reaching targetOutputSize,; * so dstCapacity is kind of redundant.; * This is because in older versions of this function,; * decoding operation would still write complete sequences.; * Therefore, there was no guarantee that it would stop writing at exactly targetOutputSize,; * it could write more bytes, though only up to dstCapacity.; * Some ""margin"" used to be required for this operation to work properly.; * Thankfully, this is no longer necessary.; * The function nonetheless keeps the same signature, in an effort to preserve API compatibility.; *; * Note 4 : If srcSize is the exact size of the block,; * then targetOutputSize can be any value,; * including larger than the block's decompressed size.; * The function will, at most, generate block's decompressed size.; *; * Note 5 : If srcSize is _larger_ than block's compressed size,; * then targetOutputSize **MUST** be <= block's decompressed size.; * Otherwise, *silent corruption will occur*.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:309,Performance,perform,performance,309,"/*! LZ4_decompress_safe_partial() :; * Decompress an LZ4 compressed block, of size 'srcSize' at position 'src',; * into destination buffer 'dst' of size 'dstCapacity'.; * Up to 'targetOutputSize' bytes will be decoded.; * The function stops decoding on reaching this objective.; * This can be useful to boost performance; * whenever only the beginning of a block is required.; *; * @return : the number of bytes decoded in `dst` (necessarily <= targetOutputSize); * If source stream is detected malformed, function returns a negative result.; *; * Note 1 : @return can be < targetOutputSize, if compressed block contains less data.; *; * Note 2 : targetOutputSize must be <= dstCapacity; *; * Note 3 : this function effectively stops decoding on reaching targetOutputSize,; * so dstCapacity is kind of redundant.; * This is because in older versions of this function,; * decoding operation would still write complete sequences.; * Therefore, there was no guarantee that it would stop writing at exactly targetOutputSize,; * it could write more bytes, though only up to dstCapacity.; * Some ""margin"" used to be required for this operation to work properly.; * Thankfully, this is no longer necessary.; * The function nonetheless keeps the same signature, in an effort to preserve API compatibility.; *; * Note 4 : If srcSize is the exact size of the block,; * then targetOutputSize can be any value,; * including larger than the block's decompressed size.; * The function will, at most, generate block's decompressed size.; *; * Note 5 : If srcSize is _larger_ than block's compressed size,; * then targetOutputSize **MUST** be <= block's decompressed size.; * Otherwise, *silent corruption will occur*.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:486,Safety,detect,detected,486,"/*! LZ4_decompress_safe_partial() :; * Decompress an LZ4 compressed block, of size 'srcSize' at position 'src',; * into destination buffer 'dst' of size 'dstCapacity'.; * Up to 'targetOutputSize' bytes will be decoded.; * The function stops decoding on reaching this objective.; * This can be useful to boost performance; * whenever only the beginning of a block is required.; *; * @return : the number of bytes decoded in `dst` (necessarily <= targetOutputSize); * If source stream is detected malformed, function returns a negative result.; *; * Note 1 : @return can be < targetOutputSize, if compressed block contains less data.; *; * Note 2 : targetOutputSize must be <= dstCapacity; *; * Note 3 : this function effectively stops decoding on reaching targetOutputSize,; * so dstCapacity is kind of redundant.; * This is because in older versions of this function,; * decoding operation would still write complete sequences.; * Therefore, there was no guarantee that it would stop writing at exactly targetOutputSize,; * it could write more bytes, though only up to dstCapacity.; * Some ""margin"" used to be required for this operation to work properly.; * Thankfully, this is no longer necessary.; * The function nonetheless keeps the same signature, in an effort to preserve API compatibility.; *; * Note 4 : If srcSize is the exact size of the block,; * then targetOutputSize can be any value,; * including larger than the block's decompressed size.; * The function will, at most, generate block's decompressed size.; *; * Note 5 : If srcSize is _larger_ than block's compressed size,; * then targetOutputSize **MUST** be <= block's decompressed size.; * Otherwise, *silent corruption will occur*.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:802,Safety,redund,redundant,802,"/*! LZ4_decompress_safe_partial() :; * Decompress an LZ4 compressed block, of size 'srcSize' at position 'src',; * into destination buffer 'dst' of size 'dstCapacity'.; * Up to 'targetOutputSize' bytes will be decoded.; * The function stops decoding on reaching this objective.; * This can be useful to boost performance; * whenever only the beginning of a block is required.; *; * @return : the number of bytes decoded in `dst` (necessarily <= targetOutputSize); * If source stream is detected malformed, function returns a negative result.; *; * Note 1 : @return can be < targetOutputSize, if compressed block contains less data.; *; * Note 2 : targetOutputSize must be <= dstCapacity; *; * Note 3 : this function effectively stops decoding on reaching targetOutputSize,; * so dstCapacity is kind of redundant.; * This is because in older versions of this function,; * decoding operation would still write complete sequences.; * Therefore, there was no guarantee that it would stop writing at exactly targetOutputSize,; * it could write more bytes, though only up to dstCapacity.; * Some ""margin"" used to be required for this operation to work properly.; * Thankfully, this is no longer necessary.; * The function nonetheless keeps the same signature, in an effort to preserve API compatibility.; *; * Note 4 : If srcSize is the exact size of the block,; * then targetOutputSize can be any value,; * including larger than the block's decompressed size.; * The function will, at most, generate block's decompressed size.; *; * Note 5 : If srcSize is _larger_ than block's compressed size,; * then targetOutputSize **MUST** be <= block's decompressed size.; * Otherwise, *silent corruption will occur*.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1006,Availability,redundant,redundant,1006,"/*! LZ4_resetStream_fast() : v1.9.0+; * Use this to prepare an LZ4_stream_t for a new chain of dependent blocks; * (e.g., LZ4_compress_fast_continue()).; *; * An LZ4_stream_t must be initialized once before usage.; * This is automatically done when created by LZ4_createStream().; * However, should the LZ4_stream_t be simply declared on stack (for example),; * it's necessary to initialize it first, using LZ4_initStream().; *; * After init, start any new stream with LZ4_resetStream_fast().; * A same LZ4_stream_t can be re-used multiple times consecutively; * and compress multiple streams,; * provided that it starts each new stream with LZ4_resetStream_fast().; *; * LZ4_resetStream_fast() is much faster than LZ4_initStream(),; * but is not compatible with memory regions containing garbage data.; *; * Note: it's only useful to call LZ4_resetStream_fast(); * in the context of streaming compression.; * The *extState* functions perform their own resets.; * Invoking LZ4_resetStream_fast() before is redundant, and even counterproductive.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:95,Integrability,depend,dependent,95,"/*! LZ4_resetStream_fast() : v1.9.0+; * Use this to prepare an LZ4_stream_t for a new chain of dependent blocks; * (e.g., LZ4_compress_fast_continue()).; *; * An LZ4_stream_t must be initialized once before usage.; * This is automatically done when created by LZ4_createStream().; * However, should the LZ4_stream_t be simply declared on stack (for example),; * it's necessary to initialize it first, using LZ4_initStream().; *; * After init, start any new stream with LZ4_resetStream_fast().; * A same LZ4_stream_t can be re-used multiple times consecutively; * and compress multiple streams,; * provided that it starts each new stream with LZ4_resetStream_fast().; *; * LZ4_resetStream_fast() is much faster than LZ4_initStream(),; * but is not compatible with memory regions containing garbage data.; *; * Note: it's only useful to call LZ4_resetStream_fast(); * in the context of streaming compression.; * The *extState* functions perform their own resets.; * Invoking LZ4_resetStream_fast() before is redundant, and even counterproductive.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:935,Performance,perform,perform,935,"/*! LZ4_resetStream_fast() : v1.9.0+; * Use this to prepare an LZ4_stream_t for a new chain of dependent blocks; * (e.g., LZ4_compress_fast_continue()).; *; * An LZ4_stream_t must be initialized once before usage.; * This is automatically done when created by LZ4_createStream().; * However, should the LZ4_stream_t be simply declared on stack (for example),; * it's necessary to initialize it first, using LZ4_initStream().; *; * After init, start any new stream with LZ4_resetStream_fast().; * A same LZ4_stream_t can be re-used multiple times consecutively; * and compress multiple streams,; * provided that it starts each new stream with LZ4_resetStream_fast().; *; * LZ4_resetStream_fast() is much faster than LZ4_initStream(),; * but is not compatible with memory regions containing garbage data.; *; * Note: it's only useful to call LZ4_resetStream_fast(); * in the context of streaming compression.; * The *extState* functions perform their own resets.; * Invoking LZ4_resetStream_fast() before is redundant, and even counterproductive.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1006,Safety,redund,redundant,1006,"/*! LZ4_resetStream_fast() : v1.9.0+; * Use this to prepare an LZ4_stream_t for a new chain of dependent blocks; * (e.g., LZ4_compress_fast_continue()).; *; * An LZ4_stream_t must be initialized once before usage.; * This is automatically done when created by LZ4_createStream().; * However, should the LZ4_stream_t be simply declared on stack (for example),; * it's necessary to initialize it first, using LZ4_initStream().; *; * After init, start any new stream with LZ4_resetStream_fast().; * A same LZ4_stream_t can be re-used multiple times consecutively; * and compress multiple streams,; * provided that it starts each new stream with LZ4_resetStream_fast().; *; * LZ4_resetStream_fast() is much faster than LZ4_initStream(),; * but is not compatible with memory regions containing garbage data.; *; * Note: it's only useful to call LZ4_resetStream_fast(); * in the context of streaming compression.; * The *extState* functions perform their own resets.; * Invoking LZ4_resetStream_fast() before is redundant, and even counterproductive.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:319,Usability,simpl,simply,319,"/*! LZ4_resetStream_fast() : v1.9.0+; * Use this to prepare an LZ4_stream_t for a new chain of dependent blocks; * (e.g., LZ4_compress_fast_continue()).; *; * An LZ4_stream_t must be initialized once before usage.; * This is automatically done when created by LZ4_createStream().; * However, should the LZ4_stream_t be simply declared on stack (for example),; * it's necessary to initialize it first, using LZ4_initStream().; *; * After init, start any new stream with LZ4_resetStream_fast().; * A same LZ4_stream_t can be re-used multiple times consecutively; * and compress multiple streams,; * provided that it starts each new stream with LZ4_resetStream_fast().; *; * LZ4_resetStream_fast() is much faster than LZ4_initStream(),; * but is not compatible with memory regions containing garbage data.; *; * Note: it's only useful to call LZ4_resetStream_fast(); * in the context of streaming compression.; * The *extState* functions perform their own resets.; * Invoking LZ4_resetStream_fast() before is redundant, and even counterproductive.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:124,Availability,avail,available,124,"/*! LZ4_loadDict() :; * Use this function to reference a static dictionary into LZ4_stream_t.; * The dictionary must remain available during compression.; * LZ4_loadDict() triggers a reset, so any previous data will be forgotten.; * The same dictionary will have to be loaded on decompression side for successful decoding.; * Dictionary are useful for better compression of small data (KB range).; * While LZ4 accept any input as dictionary,; * results are generally better when using Zstandard's Dictionary Builder.; * Loading a size of 0 is allowed, and is the same as reset.; * @return : loaded dictionary size, in bytes (necessarily <= 64 KB); */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:269,Performance,load,loaded,269,"/*! LZ4_loadDict() :; * Use this function to reference a static dictionary into LZ4_stream_t.; * The dictionary must remain available during compression.; * LZ4_loadDict() triggers a reset, so any previous data will be forgotten.; * The same dictionary will have to be loaded on decompression side for successful decoding.; * Dictionary are useful for better compression of small data (KB range).; * While LZ4 accept any input as dictionary,; * results are generally better when using Zstandard's Dictionary Builder.; * Loading a size of 0 is allowed, and is the same as reset.; * @return : loaded dictionary size, in bytes (necessarily <= 64 KB); */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:520,Performance,Load,Loading,520,"/*! LZ4_loadDict() :; * Use this function to reference a static dictionary into LZ4_stream_t.; * The dictionary must remain available during compression.; * LZ4_loadDict() triggers a reset, so any previous data will be forgotten.; * The same dictionary will have to be loaded on decompression side for successful decoding.; * Dictionary are useful for better compression of small data (KB range).; * While LZ4 accept any input as dictionary,; * results are generally better when using Zstandard's Dictionary Builder.; * Loading a size of 0 is allowed, and is the same as reset.; * @return : loaded dictionary size, in bytes (necessarily <= 64 KB); */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:591,Performance,load,loaded,591,"/*! LZ4_loadDict() :; * Use this function to reference a static dictionary into LZ4_stream_t.; * The dictionary must remain available during compression.; * LZ4_loadDict() triggers a reset, so any previous data will be forgotten.; * The same dictionary will have to be loaded on decompression side for successful decoding.; * Dictionary are useful for better compression of small data (KB range).; * While LZ4 accept any input as dictionary,; * results are generally better when using Zstandard's Dictionary Builder.; * Loading a size of 0 is allowed, and is the same as reset.; * @return : loaded dictionary size, in bytes (necessarily <= 64 KB); */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:348,Availability,error,error,348,"/*! LZ4_compress_fast_continue() :; * Compress 'src' content using data from previously compressed blocks, for better compression ratio.; * 'dst' buffer must be already allocated.; * If dstCapacity >= LZ4_compressBound(srcSize), compression is guaranteed to succeed, and runs faster.; *; * @return : size of compressed block; * or 0 if there is an error (typically, cannot fit into 'dst').; *; * Note 1 : Each invocation to LZ4_compress_fast_continue() generates a new block.; * Each block has precise boundaries.; * Each block must be decompressed separately, calling LZ4_decompress_*() with relevant metadata.; * It's not possible to append blocks together and expect a single invocation of LZ4_decompress_*() to decompress them together.; *; * Note 2 : The previous 64KB of source data is __assumed__ to remain present, unmodified, at same address in memory !; *; * Note 3 : When input is structured as a double-buffer, each buffer can have any size, including < 64 KB.; * Make sure that buffers are separated, by at least one byte.; * This construction ensures that each block only depends on previous block.; *; * Note 4 : If input buffer is a ring-buffer, it can have any size, including < 64 KB.; *; * Note 5 : After an error, the stream status is undefined (invalid), it can only be reset or freed.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1227,Availability,error,error,1227,"/*! LZ4_compress_fast_continue() :; * Compress 'src' content using data from previously compressed blocks, for better compression ratio.; * 'dst' buffer must be already allocated.; * If dstCapacity >= LZ4_compressBound(srcSize), compression is guaranteed to succeed, and runs faster.; *; * @return : size of compressed block; * or 0 if there is an error (typically, cannot fit into 'dst').; *; * Note 1 : Each invocation to LZ4_compress_fast_continue() generates a new block.; * Each block has precise boundaries.; * Each block must be decompressed separately, calling LZ4_decompress_*() with relevant metadata.; * It's not possible to append blocks together and expect a single invocation of LZ4_decompress_*() to decompress them together.; *; * Note 2 : The previous 64KB of source data is __assumed__ to remain present, unmodified, at same address in memory !; *; * Note 3 : When input is structured as a double-buffer, each buffer can have any size, including < 64 KB.; * Make sure that buffers are separated, by at least one byte.; * This construction ensures that each block only depends on previous block.; *; * Note 4 : If input buffer is a ring-buffer, it can have any size, including < 64 KB.; *; * Note 5 : After an error, the stream status is undefined (invalid), it can only be reset or freed.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:169,Energy Efficiency,allocate,allocated,169,"/*! LZ4_compress_fast_continue() :; * Compress 'src' content using data from previously compressed blocks, for better compression ratio.; * 'dst' buffer must be already allocated.; * If dstCapacity >= LZ4_compressBound(srcSize), compression is guaranteed to succeed, and runs faster.; *; * @return : size of compressed block; * or 0 if there is an error (typically, cannot fit into 'dst').; *; * Note 1 : Each invocation to LZ4_compress_fast_continue() generates a new block.; * Each block has precise boundaries.; * Each block must be decompressed separately, calling LZ4_decompress_*() with relevant metadata.; * It's not possible to append blocks together and expect a single invocation of LZ4_decompress_*() to decompress them together.; *; * Note 2 : The previous 64KB of source data is __assumed__ to remain present, unmodified, at same address in memory !; *; * Note 3 : When input is structured as a double-buffer, each buffer can have any size, including < 64 KB.; * Make sure that buffers are separated, by at least one byte.; * This construction ensures that each block only depends on previous block.; *; * Note 4 : If input buffer is a ring-buffer, it can have any size, including < 64 KB.; *; * Note 5 : After an error, the stream status is undefined (invalid), it can only be reset or freed.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1086,Integrability,depend,depends,1086,"/*! LZ4_compress_fast_continue() :; * Compress 'src' content using data from previously compressed blocks, for better compression ratio.; * 'dst' buffer must be already allocated.; * If dstCapacity >= LZ4_compressBound(srcSize), compression is guaranteed to succeed, and runs faster.; *; * @return : size of compressed block; * or 0 if there is an error (typically, cannot fit into 'dst').; *; * Note 1 : Each invocation to LZ4_compress_fast_continue() generates a new block.; * Each block has precise boundaries.; * Each block must be decompressed separately, calling LZ4_decompress_*() with relevant metadata.; * It's not possible to append blocks together and expect a single invocation of LZ4_decompress_*() to decompress them together.; *; * Note 2 : The previous 64KB of source data is __assumed__ to remain present, unmodified, at same address in memory !; *; * Note 3 : When input is structured as a double-buffer, each buffer can have any size, including < 64 KB.; * Make sure that buffers are separated, by at least one byte.; * This construction ensures that each block only depends on previous block.; *; * Note 4 : If input buffer is a ring-buffer, it can have any size, including < 64 KB.; *; * Note 5 : After an error, the stream status is undefined (invalid), it can only be reset or freed.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:73,Availability,avail,available,73,"/*! LZ4_saveDict() :; * If last 64KB data cannot be guaranteed to remain available at its current memory location,; * save it into a safer place (char* safeBuffer).; * This is schematically equivalent to a memcpy() followed by LZ4_loadDict(),; * but is much faster, because LZ4_saveDict() doesn't need to rebuild tables.; * @return : saved dictionary size in bytes (necessarily <= maxDictSize), or 0 if error.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:403,Availability,error,error,403,"/*! LZ4_saveDict() :; * If last 64KB data cannot be guaranteed to remain available at its current memory location,; * save it into a safer place (char* safeBuffer).; * This is schematically equivalent to a memcpy() followed by LZ4_loadDict(),; * but is much faster, because LZ4_saveDict() doesn't need to rebuild tables.; * @return : saved dictionary size in bytes (necessarily <= maxDictSize), or 0 if error.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:133,Safety,safe,safer,133,"/*! LZ4_saveDict() :; * If last 64KB data cannot be guaranteed to remain available at its current memory location,; * save it into a safer place (char* safeBuffer).; * This is schematically equivalent to a memcpy() followed by LZ4_loadDict(),; * but is much faster, because LZ4_saveDict() doesn't need to rebuild tables.; * @return : saved dictionary size in bytes (necessarily <= maxDictSize), or 0 if error.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:152,Safety,safe,safeBuffer,152,"/*! LZ4_saveDict() :; * If last 64KB data cannot be guaranteed to remain available at its current memory location,; * save it into a safer place (char* safeBuffer).; * This is schematically equivalent to a memcpy() followed by LZ4_loadDict(),; * but is much faster, because LZ4_saveDict() doesn't need to rebuild tables.; * @return : saved dictionary size in bytes (necessarily <= maxDictSize), or 0 if error.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:389,Availability,error,error,389,"/*! LZ4_setStreamDecode() :; * An LZ4_streamDecode_t context can be allocated once and re-used multiple times.; * Use this function to start decompression of a new stream of blocks.; * A dictionary can optionally be set. Use NULL or size 0 for a reset order.; * Dictionary is presumed stable : it must remain accessible and unmodified during next decompression.; * @return : 1 if OK, 0 if error; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:68,Energy Efficiency,allocate,allocated,68,"/*! LZ4_setStreamDecode() :; * An LZ4_streamDecode_t context can be allocated once and re-used multiple times.; * Use this function to start decompression of a new stream of blocks.; * A dictionary can optionally be set. Use NULL or size 0 for a reset order.; * Dictionary is presumed stable : it must remain accessible and unmodified during next decompression.; * @return : 1 if OK, 0 if error; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:309,Security,access,accessible,309,"/*! LZ4_setStreamDecode() :; * An LZ4_streamDecode_t context can be allocated once and re-used multiple times.; * Use this function to start decompression of a new stream of blocks.; * A dictionary can optionally be set. Use NULL or size 0 for a reset order.; * Dictionary is presumed stable : it must remain accessible and unmodified during next decompression.; * @return : 1 if OK, 0 if error; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:554,Availability,error,error,554,"/*! LZ4_decoderRingBufferSize() : v1.8.2+; * Note : in a ring buffer scenario (optional),; * blocks are presumed decompressed next to each other; * up to the moment there is not enough remaining space for next block (remainingSize < maxBlockSize),; * at which stage it resumes from beginning of ring buffer.; * When setting such a ring buffer for streaming decompression,; * provides the minimum size of this ring buffer; * to be compatible with any source respecting maxBlockSize condition.; * @return : minimum ring buffer size,; * or 0 if there is an error (invalid maxBlockSize).; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:269,Usability,resume,resumes,269,"/*! LZ4_decoderRingBufferSize() : v1.8.2+; * Note : in a ring buffer scenario (optional),; * blocks are presumed decompressed next to each other; * up to the moment there is not enough remaining space for next block (remainingSize < maxBlockSize),; * at which stage it resumes from beginning of ring buffer.; * When setting such a ring buffer for streaming decompression,; * provides the minimum size of this ring buffer; * to be compatible with any source respecting maxBlockSize condition.; * @return : minimum ring buffer size,; * or 0 if there is an error (invalid maxBlockSize).; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:341,Availability,avail,available,341,"/*! LZ4_decompress_*_continue() :; * These decoding functions allow decompression of consecutive blocks in ""streaming"" mode.; * A block is an unsplittable entity, it must be presented entirely to a decompression function.; * Decompression functions only accepts one block at a time.; * The last 64KB of previously decoded data *must* remain available and unmodified at the memory position where they were decoded.; * If less than 64KB of data has been decoded, all the data must be present.; *; * Special : if decompression side sets a ring buffer, it must respect one of the following conditions :; * - Decompression buffer size is _at least_ LZ4_decoderRingBufferSize(maxBlockSize).; * maxBlockSize is the maximum size of any single block. It can have any value > 16 bytes.; * In which case, encoding and decoding buffers do not need to be synchronized.; * Actually, data can be produced by any source compliant with LZ4 format specification, and respecting maxBlockSize.; * - Synchronized mode :; * Decompression buffer size is _exactly_ the same as compression buffer size,; * and follows exactly same update rule (block boundaries at same positions),; * and decoding function is provided with exact decompressed size of each block (exception for last block of the stream),; * _then_ decoding & encoding ring buffer can have any size, including small ones ( < 64 KB).; * - Decompression buffer is larger than encoding buffer, by a minimum of maxBlockSize more bytes.; * In which case, encoding and decoding buffers do not need to be synchronized,; * and encoding ring buffer can have any size, including small ones ( < 64 KB).; *; * Whenever these conditions are not possible,; * save the last 64KB of decoded data into a safe buffer where it can't be modified during decompression,; * then indicate where this data is saved using LZ4_setStreamDecode(), before decompressing next block.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1106,Deployability,update,update,1106,"/*! LZ4_decompress_*_continue() :; * These decoding functions allow decompression of consecutive blocks in ""streaming"" mode.; * A block is an unsplittable entity, it must be presented entirely to a decompression function.; * Decompression functions only accepts one block at a time.; * The last 64KB of previously decoded data *must* remain available and unmodified at the memory position where they were decoded.; * If less than 64KB of data has been decoded, all the data must be present.; *; * Special : if decompression side sets a ring buffer, it must respect one of the following conditions :; * - Decompression buffer size is _at least_ LZ4_decoderRingBufferSize(maxBlockSize).; * maxBlockSize is the maximum size of any single block. It can have any value > 16 bytes.; * In which case, encoding and decoding buffers do not need to be synchronized.; * Actually, data can be produced by any source compliant with LZ4 format specification, and respecting maxBlockSize.; * - Synchronized mode :; * Decompression buffer size is _exactly_ the same as compression buffer size,; * and follows exactly same update rule (block boundaries at same positions),; * and decoding function is provided with exact decompressed size of each block (exception for last block of the stream),; * _then_ decoding & encoding ring buffer can have any size, including small ones ( < 64 KB).; * - Decompression buffer is larger than encoding buffer, by a minimum of maxBlockSize more bytes.; * In which case, encoding and decoding buffers do not need to be synchronized,; * and encoding ring buffer can have any size, including small ones ( < 64 KB).; *; * Whenever these conditions are not possible,; * save the last 64KB of decoded data into a safe buffer where it can't be modified during decompression,; * then indicate where this data is saved using LZ4_setStreamDecode(), before decompressing next block.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:842,Integrability,synchroniz,synchronized,842,"/*! LZ4_decompress_*_continue() :; * These decoding functions allow decompression of consecutive blocks in ""streaming"" mode.; * A block is an unsplittable entity, it must be presented entirely to a decompression function.; * Decompression functions only accepts one block at a time.; * The last 64KB of previously decoded data *must* remain available and unmodified at the memory position where they were decoded.; * If less than 64KB of data has been decoded, all the data must be present.; *; * Special : if decompression side sets a ring buffer, it must respect one of the following conditions :; * - Decompression buffer size is _at least_ LZ4_decoderRingBufferSize(maxBlockSize).; * maxBlockSize is the maximum size of any single block. It can have any value > 16 bytes.; * In which case, encoding and decoding buffers do not need to be synchronized.; * Actually, data can be produced by any source compliant with LZ4 format specification, and respecting maxBlockSize.; * - Synchronized mode :; * Decompression buffer size is _exactly_ the same as compression buffer size,; * and follows exactly same update rule (block boundaries at same positions),; * and decoding function is provided with exact decompressed size of each block (exception for last block of the stream),; * _then_ decoding & encoding ring buffer can have any size, including small ones ( < 64 KB).; * - Decompression buffer is larger than encoding buffer, by a minimum of maxBlockSize more bytes.; * In which case, encoding and decoding buffers do not need to be synchronized,; * and encoding ring buffer can have any size, including small ones ( < 64 KB).; *; * Whenever these conditions are not possible,; * save the last 64KB of decoded data into a safe buffer where it can't be modified during decompression,; * then indicate where this data is saved using LZ4_setStreamDecode(), before decompressing next block.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:979,Integrability,Synchroniz,Synchronized,979,"/*! LZ4_decompress_*_continue() :; * These decoding functions allow decompression of consecutive blocks in ""streaming"" mode.; * A block is an unsplittable entity, it must be presented entirely to a decompression function.; * Decompression functions only accepts one block at a time.; * The last 64KB of previously decoded data *must* remain available and unmodified at the memory position where they were decoded.; * If less than 64KB of data has been decoded, all the data must be present.; *; * Special : if decompression side sets a ring buffer, it must respect one of the following conditions :; * - Decompression buffer size is _at least_ LZ4_decoderRingBufferSize(maxBlockSize).; * maxBlockSize is the maximum size of any single block. It can have any value > 16 bytes.; * In which case, encoding and decoding buffers do not need to be synchronized.; * Actually, data can be produced by any source compliant with LZ4 format specification, and respecting maxBlockSize.; * - Synchronized mode :; * Decompression buffer size is _exactly_ the same as compression buffer size,; * and follows exactly same update rule (block boundaries at same positions),; * and decoding function is provided with exact decompressed size of each block (exception for last block of the stream),; * _then_ decoding & encoding ring buffer can have any size, including small ones ( < 64 KB).; * - Decompression buffer is larger than encoding buffer, by a minimum of maxBlockSize more bytes.; * In which case, encoding and decoding buffers do not need to be synchronized,; * and encoding ring buffer can have any size, including small ones ( < 64 KB).; *; * Whenever these conditions are not possible,; * save the last 64KB of decoded data into a safe buffer where it can't be modified during decompression,; * then indicate where this data is saved using LZ4_setStreamDecode(), before decompressing next block.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1537,Integrability,synchroniz,synchronized,1537,"/*! LZ4_decompress_*_continue() :; * These decoding functions allow decompression of consecutive blocks in ""streaming"" mode.; * A block is an unsplittable entity, it must be presented entirely to a decompression function.; * Decompression functions only accepts one block at a time.; * The last 64KB of previously decoded data *must* remain available and unmodified at the memory position where they were decoded.; * If less than 64KB of data has been decoded, all the data must be present.; *; * Special : if decompression side sets a ring buffer, it must respect one of the following conditions :; * - Decompression buffer size is _at least_ LZ4_decoderRingBufferSize(maxBlockSize).; * maxBlockSize is the maximum size of any single block. It can have any value > 16 bytes.; * In which case, encoding and decoding buffers do not need to be synchronized.; * Actually, data can be produced by any source compliant with LZ4 format specification, and respecting maxBlockSize.; * - Synchronized mode :; * Decompression buffer size is _exactly_ the same as compression buffer size,; * and follows exactly same update rule (block boundaries at same positions),; * and decoding function is provided with exact decompressed size of each block (exception for last block of the stream),; * _then_ decoding & encoding ring buffer can have any size, including small ones ( < 64 KB).; * - Decompression buffer is larger than encoding buffer, by a minimum of maxBlockSize more bytes.; * In which case, encoding and decoding buffers do not need to be synchronized,; * and encoding ring buffer can have any size, including small ones ( < 64 KB).; *; * Whenever these conditions are not possible,; * save the last 64KB of decoded data into a safe buffer where it can't be modified during decompression,; * then indicate where this data is saved using LZ4_setStreamDecode(), before decompressing next block.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1726,Safety,safe,safe,1726,"/*! LZ4_decompress_*_continue() :; * These decoding functions allow decompression of consecutive blocks in ""streaming"" mode.; * A block is an unsplittable entity, it must be presented entirely to a decompression function.; * Decompression functions only accepts one block at a time.; * The last 64KB of previously decoded data *must* remain available and unmodified at the memory position where they were decoded.; * If less than 64KB of data has been decoded, all the data must be present.; *; * Special : if decompression side sets a ring buffer, it must respect one of the following conditions :; * - Decompression buffer size is _at least_ LZ4_decoderRingBufferSize(maxBlockSize).; * maxBlockSize is the maximum size of any single block. It can have any value > 16 bytes.; * In which case, encoding and decoding buffers do not need to be synchronized.; * Actually, data can be produced by any source compliant with LZ4 format specification, and respecting maxBlockSize.; * - Synchronized mode :; * Decompression buffer size is _exactly_ the same as compression buffer size,; * and follows exactly same update rule (block boundaries at same positions),; * and decoding function is provided with exact decompressed size of each block (exception for last block of the stream),; * _then_ decoding & encoding ring buffer can have any size, including small ones ( < 64 KB).; * - Decompression buffer is larger than encoding buffer, by a minimum of maxBlockSize more bytes.; * In which case, encoding and decoding buffers do not need to be synchronized,; * and encoding ring buffer can have any size, including small ones ( < 64 KB).; *; * Whenever these conditions are not possible,; * save the last 64KB of decoded data into a safe buffer where it can't be modified during decompression,; * then indicate where this data is saved using LZ4_setStreamDecode(), before decompressing next block.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:336,Performance,Perform,Performance,336,"/*! LZ4_decompress_*_usingDict() :; * These decoding functions work the same as; * a combination of LZ4_setStreamDecode() followed by LZ4_decompress_*_continue(); * They are stand-alone, and don't need an LZ4_streamDecode_t structure.; * Dictionary is presumed stable : it must remain accessible and unmodified during decompression.; * Performance tip : Decompression speed can be substantially increased; * when dst == dictStart + dictSize.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:285,Security,access,accessible,285,"/*! LZ4_decompress_*_usingDict() :; * These decoding functions work the same as; * a combination of LZ4_setStreamDecode() followed by LZ4_decompress_*_continue(); * They are stand-alone, and don't need an LZ4_streamDecode_t structure.; * Dictionary is presumed stable : it must remain accessible and unmodified during decompression.; * Performance tip : Decompression speed can be substantially increased; * when dst == dictStart + dictSize.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:449,Integrability,depend,depend,449,"/* LZ4_H_2983827168210 */; /*^*************************************; * !!!!!! STATIC LINKING ONLY !!!!!!; ***************************************/; /*-****************************************************************************; * Experimental section; *; * Symbols declared in this section must be considered unstable. Their; * signatures or semantics may change, or they may be removed altogether in the; * future. They are therefore only safe to depend on when the caller is; * statically linked against the library.; *; * To protect against unsafe usage, not only are the declarations guarded,; * the definitions are hidden by default; * when building LZ4 as a shared/dynamic library.; *; * In order to access these declarations,; * define LZ4_STATIC_LINKING_ONLY in your application; * before including LZ4's headers.; *; * In order to make their implementations accessible dynamically, you must; * define LZ4_PUBLISH_STATIC_FUNCTIONS when building the LZ4 library.; ******************************************************************************/",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:441,Safety,safe,safe,441,"/* LZ4_H_2983827168210 */; /*^*************************************; * !!!!!! STATIC LINKING ONLY !!!!!!; ***************************************/; /*-****************************************************************************; * Experimental section; *; * Symbols declared in this section must be considered unstable. Their; * signatures or semantics may change, or they may be removed altogether in the; * future. They are therefore only safe to depend on when the caller is; * statically linked against the library.; *; * To protect against unsafe usage, not only are the declarations guarded,; * the definitions are hidden by default; * when building LZ4 as a shared/dynamic library.; *; * In order to access these declarations,; * define LZ4_STATIC_LINKING_ONLY in your application; * before including LZ4's headers.; *; * In order to make their implementations accessible dynamically, you must; * define LZ4_PUBLISH_STATIC_FUNCTIONS when building the LZ4 library.; ******************************************************************************/",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:545,Safety,unsafe,unsafe,545,"/* LZ4_H_2983827168210 */; /*^*************************************; * !!!!!! STATIC LINKING ONLY !!!!!!; ***************************************/; /*-****************************************************************************; * Experimental section; *; * Symbols declared in this section must be considered unstable. Their; * signatures or semantics may change, or they may be removed altogether in the; * future. They are therefore only safe to depend on when the caller is; * statically linked against the library.; *; * To protect against unsafe usage, not only are the declarations guarded,; * the definitions are hidden by default; * when building LZ4 as a shared/dynamic library.; *; * In order to access these declarations,; * define LZ4_STATIC_LINKING_ONLY in your application; * before including LZ4's headers.; *; * In order to make their implementations accessible dynamically, you must; * define LZ4_PUBLISH_STATIC_FUNCTIONS when building the LZ4 library.; ******************************************************************************/",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:707,Security,access,access,707,"/* LZ4_H_2983827168210 */; /*^*************************************; * !!!!!! STATIC LINKING ONLY !!!!!!; ***************************************/; /*-****************************************************************************; * Experimental section; *; * Symbols declared in this section must be considered unstable. Their; * signatures or semantics may change, or they may be removed altogether in the; * future. They are therefore only safe to depend on when the caller is; * statically linked against the library.; *; * To protect against unsafe usage, not only are the declarations guarded,; * the definitions are hidden by default; * when building LZ4 as a shared/dynamic library.; *; * In order to access these declarations,; * define LZ4_STATIC_LINKING_ONLY in your application; * before including LZ4's headers.; *; * In order to make their implementations accessible dynamically, you must; * define LZ4_PUBLISH_STATIC_FUNCTIONS when building the LZ4 library.; ******************************************************************************/",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:868,Security,access,accessible,868,"/* LZ4_H_2983827168210 */; /*^*************************************; * !!!!!! STATIC LINKING ONLY !!!!!!; ***************************************/; /*-****************************************************************************; * Experimental section; *; * Symbols declared in this section must be considered unstable. Their; * signatures or semantics may change, or they may be removed altogether in the; * future. They are therefore only safe to depend on when the caller is; * statically linked against the library.; *; * To protect against unsafe usage, not only are the declarations guarded,; * the definitions are hidden by default; * when building LZ4 as a shared/dynamic library.; *; * In order to access these declarations,; * define LZ4_STATIC_LINKING_ONLY in your application; * before including LZ4's headers.; *; * In order to make their implementations accessible dynamically, you must; * define LZ4_PUBLISH_STATIC_FUNCTIONS when building the LZ4 library.; ******************************************************************************/",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:116,Safety,avoid,avoids,116,"/*! LZ4_compress_fast_extState_fastReset() :; * A variant of LZ4_compress_fast_extState().; *; * Using this variant avoids an expensive initialization step.; * It is only safe to call if the state buffer is known to be correctly initialized already; * (see above comment on LZ4_resetStream_fast() for a definition of ""correctly initialized"").; * From a high level, the difference is that; * this function initializes the provided state with a call to something like LZ4_resetStream_fast(); * while LZ4_compress_fast_extState() starts with a call to LZ4_resetStream().; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:171,Safety,safe,safe,171,"/*! LZ4_compress_fast_extState_fastReset() :; * A variant of LZ4_compress_fast_extState().; *; * Using this variant avoids an expensive initialization step.; * It is only safe to call if the state buffer is known to be correctly initialized already; * (see above comment on LZ4_resetStream_fast() for a definition of ""correctly initialized"").; * From a high level, the difference is that; * this function initializes the provided state with a call to something like LZ4_resetStream_fast(); * while LZ4_compress_fast_extState() starts with a call to LZ4_resetStream().; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:76,Energy Efficiency,efficient,efficient,76,"/*! LZ4_attach_dictionary() :; * This is an experimental API that allows; * efficient use of a static dictionary many times.; *; * Rather than re-loading the dictionary buffer into a working context before; * each compression, or copying a pre-loaded dictionary's LZ4_stream_t into a; * working LZ4_stream_t, this function introduces a no-copy setup mechanism,; * in which the working stream references the dictionary stream in-place.; *; * Several assumptions are made about the state of the dictionary stream.; * Currently, only streams which have been prepared by LZ4_loadDict() should; * be expected to work.; *; * Alternatively, the provided dictionaryStream may be NULL,; * in which case any existing dictionary stream is unset.; *; * If a dictionary is provided, it replaces any pre-existing stream history.; * The dictionary contents are the only history that can be referenced and; * logically immediately precede the data compressed in the first subsequent; * compression call.; *; * The dictionary will only remain attached to the working stream through the; * first compression call, at the end of which it is cleared. The dictionary; * stream (and source buffer) must remain in-place / accessible / unchanged; * through the completion of the first compression call on the stream.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:146,Performance,load,loading,146,"/*! LZ4_attach_dictionary() :; * This is an experimental API that allows; * efficient use of a static dictionary many times.; *; * Rather than re-loading the dictionary buffer into a working context before; * each compression, or copying a pre-loaded dictionary's LZ4_stream_t into a; * working LZ4_stream_t, this function introduces a no-copy setup mechanism,; * in which the working stream references the dictionary stream in-place.; *; * Several assumptions are made about the state of the dictionary stream.; * Currently, only streams which have been prepared by LZ4_loadDict() should; * be expected to work.; *; * Alternatively, the provided dictionaryStream may be NULL,; * in which case any existing dictionary stream is unset.; *; * If a dictionary is provided, it replaces any pre-existing stream history.; * The dictionary contents are the only history that can be referenced and; * logically immediately precede the data compressed in the first subsequent; * compression call.; *; * The dictionary will only remain attached to the working stream through the; * first compression call, at the end of which it is cleared. The dictionary; * stream (and source buffer) must remain in-place / accessible / unchanged; * through the completion of the first compression call on the stream.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:244,Performance,load,loaded,244,"/*! LZ4_attach_dictionary() :; * This is an experimental API that allows; * efficient use of a static dictionary many times.; *; * Rather than re-loading the dictionary buffer into a working context before; * each compression, or copying a pre-loaded dictionary's LZ4_stream_t into a; * working LZ4_stream_t, this function introduces a no-copy setup mechanism,; * in which the working stream references the dictionary stream in-place.; *; * Several assumptions are made about the state of the dictionary stream.; * Currently, only streams which have been prepared by LZ4_loadDict() should; * be expected to work.; *; * Alternatively, the provided dictionaryStream may be NULL,; * in which case any existing dictionary stream is unset.; *; * If a dictionary is provided, it replaces any pre-existing stream history.; * The dictionary contents are the only history that can be referenced and; * logically immediately precede the data compressed in the first subsequent; * compression call.; *; * The dictionary will only remain attached to the working stream through the; * first compression call, at the end of which it is cleared. The dictionary; * stream (and source buffer) must remain in-place / accessible / unchanged; * through the completion of the first compression call on the stream.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1199,Security,access,accessible,1199,"/*! LZ4_attach_dictionary() :; * This is an experimental API that allows; * efficient use of a static dictionary many times.; *; * Rather than re-loading the dictionary buffer into a working context before; * each compression, or copying a pre-loaded dictionary's LZ4_stream_t into a; * working LZ4_stream_t, this function introduces a no-copy setup mechanism,; * in which the working stream references the dictionary stream in-place.; *; * Several assumptions are made about the state of the dictionary stream.; * Currently, only streams which have been prepared by LZ4_loadDict() should; * be expected to work.; *; * Alternatively, the provided dictionaryStream may be NULL,; * in which case any existing dictionary stream is unset.; *; * If a dictionary is provided, it replaces any pre-existing stream history.; * The dictionary contents are the only history that can be referenced and; * logically immediately precede the data compressed in the first subsequent; * compression call.; *; * The dictionary will only remain attached to the working stream through the; * first compression call, at the end of which it is cleared. The dictionary; * stream (and source buffer) must remain in-place / accessible / unchanged; * through the completion of the first compression call on the stream.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:893,Testability,log,logically,893,"/*! LZ4_attach_dictionary() :; * This is an experimental API that allows; * efficient use of a static dictionary many times.; *; * Rather than re-loading the dictionary buffer into a working context before; * each compression, or copying a pre-loaded dictionary's LZ4_stream_t into a; * working LZ4_stream_t, this function introduces a no-copy setup mechanism,; * in which the working stream references the dictionary stream in-place.; *; * Several assumptions are made about the state of the dictionary stream.; * Currently, only streams which have been prepared by LZ4_loadDict() should; * be expected to work.; *; * Alternatively, the provided dictionaryStream may be NULL,; * in which case any existing dictionary stream is unset.; *; * If a dictionary is provided, it replaces any pre-existing stream history.; * The dictionary contents are the only history that can be referenced and; * logically immediately precede the data compressed in the first subsequent; * compression call.; *; * The dictionary will only remain attached to the working stream through the; * first compression call, at the end of which it is cleared. The dictionary; * stream (and source buffer) must remain in-place / accessible / unchanged; * through the completion of the first compression call on the stream.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1122,Usability,clear,cleared,1122,"/*! LZ4_attach_dictionary() :; * This is an experimental API that allows; * efficient use of a static dictionary many times.; *; * Rather than re-loading the dictionary buffer into a working context before; * each compression, or copying a pre-loaded dictionary's LZ4_stream_t into a; * working LZ4_stream_t, this function introduces a no-copy setup mechanism,; * in which the working stream references the dictionary stream in-place.; *; * Several assumptions are made about the state of the dictionary stream.; * Currently, only streams which have been prepared by LZ4_loadDict() should; * be expected to work.; *; * Alternatively, the provided dictionaryStream may be NULL,; * in which case any existing dictionary stream is unset.; *; * If a dictionary is provided, it replaces any pre-existing stream history.; * The dictionary contents are the only history that can be referenced and; * logically immediately precede the data compressed in the first subsequent; * compression call.; *; * The dictionary will only remain attached to the working stream through the; * first compression call, at the end of which it is cleared. The dictionary; * stream (and source buffer) must remain in-place / accessible / unchanged; * through the completion of the first compression call on the stream.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:951,Energy Efficiency,efficient,efficient,951,"/*! In-place compression and decompression; *; * It's possible to have input and output sharing the same buffer,; * for highly contrained memory environments.; * In both cases, it requires input to lay at the end of the buffer,; * and decompression to start at beginning of the buffer.; * Buffer size must feature some margin, hence be larger than final size.; *; * |<------------------------buffer--------------------------------->|; * |<-----------compressed data--------->|; * |<-----------decompressed size------------------>|; * |<----margin---->|; *; * This technique is more useful for decompression,; * since decompressed size is typically larger,; * and margin is short.; *; * In-place decompression will work inside any buffer; * which size is >= LZ4_DECOMPRESS_INPLACE_BUFFER_SIZE(decompressedSize).; * This presumes that decompressedSize > compressedSize.; * Otherwise, it means compression actually expanded data,; * and it would be more efficient to store such data with a flag indicating it's not compressed.; * This can happen when data is not compressible (already compressed, or encrypted).; *; * For in-place compression, margin is larger, as it must be able to cope with both; * history preservation, requiring input data to remain unmodified up to LZ4_DISTANCE_MAX,; * and data expansion, which can happen when input is not compressible.; * As a consequence, buffer size requirements are much higher,; * and memory savings offered by in-place compression are more limited.; *; * There are ways to limit this cost for compression :; * - Reduce history size, by modifying LZ4_DISTANCE_MAX.; * Note that it is a compile-time constant, so all compressions will apply this limit.; * Lower values will reduce compression ratio, except when input_size < LZ4_DISTANCE_MAX,; * so it's a reasonable trick when inputs are known to be small.; * - Require the compressor to deliver a ""maximum compressed size"".; * This is the `dstCapacity` parameter in `LZ4_compress*()`.; * When this size is ",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1557,Energy Efficiency,Reduce,Reduce,1557,">|; *; * This technique is more useful for decompression,; * since decompressed size is typically larger,; * and margin is short.; *; * In-place decompression will work inside any buffer; * which size is >= LZ4_DECOMPRESS_INPLACE_BUFFER_SIZE(decompressedSize).; * This presumes that decompressedSize > compressedSize.; * Otherwise, it means compression actually expanded data,; * and it would be more efficient to store such data with a flag indicating it's not compressed.; * This can happen when data is not compressible (already compressed, or encrypted).; *; * For in-place compression, margin is larger, as it must be able to cope with both; * history preservation, requiring input data to remain unmodified up to LZ4_DISTANCE_MAX,; * and data expansion, which can happen when input is not compressible.; * As a consequence, buffer size requirements are much higher,; * and memory savings offered by in-place compression are more limited.; *; * There are ways to limit this cost for compression :; * - Reduce history size, by modifying LZ4_DISTANCE_MAX.; * Note that it is a compile-time constant, so all compressions will apply this limit.; * Lower values will reduce compression ratio, except when input_size < LZ4_DISTANCE_MAX,; * so it's a reasonable trick when inputs are known to be small.; * - Require the compressor to deliver a ""maximum compressed size"".; * This is the `dstCapacity` parameter in `LZ4_compress*()`.; * When this size is < LZ4_COMPRESSBOUND(inputSize), then compression can fail,; * in which case, the return code will be 0 (zero).; * The caller must be ready for these cases to happen,; * and typically design a backup scheme to send data uncompressed.; * The combination of both techniques can significantly reduce; * the amount of margin required for in-place compression.; *; * In-place compression can work in any buffer; * which size is >= (maxCompressedSize); * with maxCompressedSize == LZ4_COMPRESSBOUND(srcSize) for guaranteed compression success.; * LZ4_COMPRE",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1717,Energy Efficiency,reduce,reduce,1717,"n will work inside any buffer; * which size is >= LZ4_DECOMPRESS_INPLACE_BUFFER_SIZE(decompressedSize).; * This presumes that decompressedSize > compressedSize.; * Otherwise, it means compression actually expanded data,; * and it would be more efficient to store such data with a flag indicating it's not compressed.; * This can happen when data is not compressible (already compressed, or encrypted).; *; * For in-place compression, margin is larger, as it must be able to cope with both; * history preservation, requiring input data to remain unmodified up to LZ4_DISTANCE_MAX,; * and data expansion, which can happen when input is not compressible.; * As a consequence, buffer size requirements are much higher,; * and memory savings offered by in-place compression are more limited.; *; * There are ways to limit this cost for compression :; * - Reduce history size, by modifying LZ4_DISTANCE_MAX.; * Note that it is a compile-time constant, so all compressions will apply this limit.; * Lower values will reduce compression ratio, except when input_size < LZ4_DISTANCE_MAX,; * so it's a reasonable trick when inputs are known to be small.; * - Require the compressor to deliver a ""maximum compressed size"".; * This is the `dstCapacity` parameter in `LZ4_compress*()`.; * When this size is < LZ4_COMPRESSBOUND(inputSize), then compression can fail,; * in which case, the return code will be 0 (zero).; * The caller must be ready for these cases to happen,; * and typically design a backup scheme to send data uncompressed.; * The combination of both techniques can significantly reduce; * the amount of margin required for in-place compression.; *; * In-place compression can work in any buffer; * which size is >= (maxCompressedSize); * with maxCompressedSize == LZ4_COMPRESSBOUND(srcSize) for guaranteed compression success.; * LZ4_COMPRESS_INPLACE_BUFFER_SIZE() depends on both maxCompressedSize and LZ4_DISTANCE_MAX,; * so it's possible to reduce memory requirements by playing with them.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:2290,Energy Efficiency,reduce,reduce,2290,"n will work inside any buffer; * which size is >= LZ4_DECOMPRESS_INPLACE_BUFFER_SIZE(decompressedSize).; * This presumes that decompressedSize > compressedSize.; * Otherwise, it means compression actually expanded data,; * and it would be more efficient to store such data with a flag indicating it's not compressed.; * This can happen when data is not compressible (already compressed, or encrypted).; *; * For in-place compression, margin is larger, as it must be able to cope with both; * history preservation, requiring input data to remain unmodified up to LZ4_DISTANCE_MAX,; * and data expansion, which can happen when input is not compressible.; * As a consequence, buffer size requirements are much higher,; * and memory savings offered by in-place compression are more limited.; *; * There are ways to limit this cost for compression :; * - Reduce history size, by modifying LZ4_DISTANCE_MAX.; * Note that it is a compile-time constant, so all compressions will apply this limit.; * Lower values will reduce compression ratio, except when input_size < LZ4_DISTANCE_MAX,; * so it's a reasonable trick when inputs are known to be small.; * - Require the compressor to deliver a ""maximum compressed size"".; * This is the `dstCapacity` parameter in `LZ4_compress*()`.; * When this size is < LZ4_COMPRESSBOUND(inputSize), then compression can fail,; * in which case, the return code will be 0 (zero).; * The caller must be ready for these cases to happen,; * and typically design a backup scheme to send data uncompressed.; * The combination of both techniques can significantly reduce; * the amount of margin required for in-place compression.; *; * In-place compression can work in any buffer; * which size is >= (maxCompressedSize); * with maxCompressedSize == LZ4_COMPRESSBOUND(srcSize) for guaranteed compression success.; * LZ4_COMPRESS_INPLACE_BUFFER_SIZE() depends on both maxCompressedSize and LZ4_DISTANCE_MAX,; * so it's possible to reduce memory requirements by playing with them.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:2655,Energy Efficiency,reduce,reduce,2655,"n will work inside any buffer; * which size is >= LZ4_DECOMPRESS_INPLACE_BUFFER_SIZE(decompressedSize).; * This presumes that decompressedSize > compressedSize.; * Otherwise, it means compression actually expanded data,; * and it would be more efficient to store such data with a flag indicating it's not compressed.; * This can happen when data is not compressible (already compressed, or encrypted).; *; * For in-place compression, margin is larger, as it must be able to cope with both; * history preservation, requiring input data to remain unmodified up to LZ4_DISTANCE_MAX,; * and data expansion, which can happen when input is not compressible.; * As a consequence, buffer size requirements are much higher,; * and memory savings offered by in-place compression are more limited.; *; * There are ways to limit this cost for compression :; * - Reduce history size, by modifying LZ4_DISTANCE_MAX.; * Note that it is a compile-time constant, so all compressions will apply this limit.; * Lower values will reduce compression ratio, except when input_size < LZ4_DISTANCE_MAX,; * so it's a reasonable trick when inputs are known to be small.; * - Require the compressor to deliver a ""maximum compressed size"".; * This is the `dstCapacity` parameter in `LZ4_compress*()`.; * When this size is < LZ4_COMPRESSBOUND(inputSize), then compression can fail,; * in which case, the return code will be 0 (zero).; * The caller must be ready for these cases to happen,; * and typically design a backup scheme to send data uncompressed.; * The combination of both techniques can significantly reduce; * the amount of margin required for in-place compression.; *; * In-place compression can work in any buffer; * which size is >= (maxCompressedSize); * with maxCompressedSize == LZ4_COMPRESSBOUND(srcSize) for guaranteed compression success.; * LZ4_COMPRESS_INPLACE_BUFFER_SIZE() depends on both maxCompressedSize and LZ4_DISTANCE_MAX,; * so it's possible to reduce memory requirements by playing with them.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:2576,Integrability,depend,depends,2576,"n will work inside any buffer; * which size is >= LZ4_DECOMPRESS_INPLACE_BUFFER_SIZE(decompressedSize).; * This presumes that decompressedSize > compressedSize.; * Otherwise, it means compression actually expanded data,; * and it would be more efficient to store such data with a flag indicating it's not compressed.; * This can happen when data is not compressible (already compressed, or encrypted).; *; * For in-place compression, margin is larger, as it must be able to cope with both; * history preservation, requiring input data to remain unmodified up to LZ4_DISTANCE_MAX,; * and data expansion, which can happen when input is not compressible.; * As a consequence, buffer size requirements are much higher,; * and memory savings offered by in-place compression are more limited.; *; * There are ways to limit this cost for compression :; * - Reduce history size, by modifying LZ4_DISTANCE_MAX.; * Note that it is a compile-time constant, so all compressions will apply this limit.; * Lower values will reduce compression ratio, except when input_size < LZ4_DISTANCE_MAX,; * so it's a reasonable trick when inputs are known to be small.; * - Require the compressor to deliver a ""maximum compressed size"".; * This is the `dstCapacity` parameter in `LZ4_compress*()`.; * When this size is < LZ4_COMPRESSBOUND(inputSize), then compression can fail,; * in which case, the return code will be 0 (zero).; * The caller must be ready for these cases to happen,; * and typically design a backup scheme to send data uncompressed.; * The combination of both techniques can significantly reduce; * the amount of margin required for in-place compression.; *; * In-place compression can work in any buffer; * which size is >= (maxCompressedSize); * with maxCompressedSize == LZ4_COMPRESSBOUND(srcSize) for guaranteed compression success.; * LZ4_COMPRESS_INPLACE_BUFFER_SIZE() depends on both maxCompressedSize and LZ4_DISTANCE_MAX,; * so it's possible to reduce memory requirements by playing with them.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1097,Security,encrypt,encrypted,1097," have input and output sharing the same buffer,; * for highly contrained memory environments.; * In both cases, it requires input to lay at the end of the buffer,; * and decompression to start at beginning of the buffer.; * Buffer size must feature some margin, hence be larger than final size.; *; * |<------------------------buffer--------------------------------->|; * |<-----------compressed data--------->|; * |<-----------decompressed size------------------>|; * |<----margin---->|; *; * This technique is more useful for decompression,; * since decompressed size is typically larger,; * and margin is short.; *; * In-place decompression will work inside any buffer; * which size is >= LZ4_DECOMPRESS_INPLACE_BUFFER_SIZE(decompressedSize).; * This presumes that decompressedSize > compressedSize.; * Otherwise, it means compression actually expanded data,; * and it would be more efficient to store such data with a flag indicating it's not compressed.; * This can happen when data is not compressible (already compressed, or encrypted).; *; * For in-place compression, margin is larger, as it must be able to cope with both; * history preservation, requiring input data to remain unmodified up to LZ4_DISTANCE_MAX,; * and data expansion, which can happen when input is not compressible.; * As a consequence, buffer size requirements are much higher,; * and memory savings offered by in-place compression are more limited.; *; * There are ways to limit this cost for compression :; * - Reduce history size, by modifying LZ4_DISTANCE_MAX.; * Note that it is a compile-time constant, so all compressions will apply this limit.; * Lower values will reduce compression ratio, except when input_size < LZ4_DISTANCE_MAX,; * so it's a reasonable trick when inputs are known to be small.; * - Require the compressor to deliver a ""maximum compressed size"".; * This is the `dstCapacity` parameter in `LZ4_compress*()`.; * When this size is < LZ4_COMPRESSBOUND(inputSize), then compression can fail,; * in ",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:27,Safety,safe,safely,27,/* LZ4_DISTANCE_MAX can be safely replaced by srcSize when it's smaller */,MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:110,Safety,risk,risk,110,"/**< maxCompressedSize is generally LZ4_COMPRESSBOUND(inputSize), but can be set to any lower value, with the risk that compression can fail (return code 0(zero)) */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:210,Security,expose,exposed,210,/*-************************************************************; * Private Definitions; **************************************************************; * Do not use these definitions directly.; * They are only exposed to allow static allocation of `LZ4_stream_t` and `LZ4_streamDecode_t`.; * Accessing members will expose user code to API and/or ABI break in future versions of the library.; **************************************************************/,MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:292,Security,Access,Accessing,292,/*-************************************************************; * Private Definitions; **************************************************************; * Do not use these definitions directly.; * They are only exposed to allow static allocation of `LZ4_stream_t` and `LZ4_streamDecode_t`.; * Accessing members will expose user code to API and/or ABI break in future versions of the library.; **************************************************************/,MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:315,Security,expose,expose,315,/*-************************************************************; * Private Definitions; **************************************************************; * Do not use these definitions directly.; * They are only exposed to allow static allocation of `LZ4_stream_t` and `LZ4_streamDecode_t`.; * Accessing members will expose user code to API and/or ABI break in future versions of the library.; **************************************************************/,MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:85,Energy Efficiency,allocate,allocate,85,"/*! LZ4_stream_t :; * Do not use below internal definitions directly !; * Declare or allocate an LZ4_stream_t instead.; * LZ4_stream_t can also be created using LZ4_createStream(), which is recommended.; * The structure definition can be convenient for static allocation; * (on stack, or as part of larger structure).; * Init this structure with LZ4_initStream() before first use.; * note : only use this definition in association with static linking !; * this definition is not API/ABI safe, and may change in future versions.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:487,Safety,safe,safe,487,"/*! LZ4_stream_t :; * Do not use below internal definitions directly !; * Declare or allocate an LZ4_stream_t instead.; * LZ4_stream_t can also be created using LZ4_createStream(), which is recommended.; * The structure definition can be convenient for static allocation; * (on stack, or as part of larger structure).; * Init this structure with LZ4_initStream() before first use.; * note : only use this definition in association with static linking !; * this definition is not API/ABI safe, and may change in future versions.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:241,Usability,simpl,simply,241,"/* previously typedef'd to LZ4_stream_t */; /*! LZ4_initStream() : v1.9.0+; * An LZ4_stream_t structure must be initialized at least once.; * This is automatically done when invoking LZ4_createStream(),; * but it's not when the structure is simply declared on stack (for example).; *; * Use LZ4_initStream() to properly initialize a newly declared LZ4_stream_t.; * It can also initialize any arbitrary buffer of sufficient size,; * and will @return a pointer of proper type upon initialization.; *; * Note : initialization fails if size and alignment conditions are not respected.; * In which case, the function will @return NULL.; * Note2: An LZ4_stream_t structure guarantees correct alignment and size.; * Note3: Before v1.9.0, use LZ4_resetStream() instead; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:254,Safety,safe,safe,254,"/*! LZ4_streamDecode_t :; * information structure to track an LZ4 stream during decompression.; * init this structure using LZ4_setStreamDecode() before first use.; * note : only use in association with static linking !; * this definition is not API/ABI safe,; * and may change in a future version !; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:293,Deployability,update,update,293,"/* previously typedef'd to LZ4_streamDecode_t */; /*-************************************; * Obsolete Functions; **************************************/; /*! Deprecation warnings; *; * Deprecated functions make the compiler generate a warning when invoked.; * This is meant to invite users to update their source code.; * Should deprecation warnings be a problem, it is generally possible to disable them,; * typically with -Wno-deprecated-declarations for gcc; * or _CRT_SECURE_NO_WARNINGS in Visual.; *; * Another method is to define LZ4_DISABLE_DEPRECATE_WARNINGS; * before including the header file.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:50,Availability,degraded,degraded,50,"/* Obsolete streaming functions (since v1.7.0); * degraded functionality; do not use!; *; * In order to perform streaming compression, these functions depended on data; * that is no longer tracked in the state. They have been preserved as well as; * possible: using them will still produce a correct output. However, they don't; * actually retain any history between compression calls. The compression ratio; * achieved will therefore be no better than compressing each chunk; * independently.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:151,Integrability,depend,depended,151,"/* Obsolete streaming functions (since v1.7.0); * degraded functionality; do not use!; *; * In order to perform streaming compression, these functions depended on data; * that is no longer tracked in the state. They have been preserved as well as; * possible: using them will still produce a correct output. However, they don't; * actually retain any history between compression calls. The compression ratio; * achieved will therefore be no better than compressing each chunk; * independently.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:104,Performance,perform,perform,104,"/* Obsolete streaming functions (since v1.7.0); * degraded functionality; do not use!; *; * In order to perform streaming compression, these functions depended on data; * that is no longer tracked in the state. They have been preserved as well as; * possible: using them will still produce a correct output. However, they don't; * actually retain any history between compression calls. The compression ratio; * achieved will therefore be no better than compressing each chunk; * independently.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1647,Availability,error,error,1647,"/*! Obsolete LZ4_decompress_fast variants (since v1.9.0) :; * These functions used to be faster than LZ4_decompress_safe(),; * but this is no longer the case. They are now slower.; * This is because LZ4_decompress_fast() doesn't know the input size,; * and therefore must progress more cautiously into the input buffer to not read beyond the end of block.; * On top of that `LZ4_decompress_fast()` is not protected vs malformed or malicious inputs, making it a security liability.; * As a consequence, LZ4_decompress_fast() is strongly discouraged, and deprecated.; *; * The last remaining LZ4_decompress_fast() specificity is that; * it can decompress a block without knowing its compressed size.; * Such functionality can be achieved in a more secure manner; * by employing LZ4_decompress_safe_partial().; *; * Parameters:; * originalSize : is the uncompressed size to regenerate.; * `dst` must be already allocated, its size must be >= 'originalSize' bytes.; * @return : number of bytes read from source buffer (== compressed size).; * The function expects to finish at block's end exactly.; * If the source stream is detected malformed, the function stops decoding and returns a negative result.; * note : LZ4_decompress_fast*() requires originalSize. Thanks to this information, it never writes past the output buffer.; * However, since it doesn't know its 'src' size, it may read an unknown amount of input, past input buffer bounds.; * Also, since match offsets are not validated, match reads from 'src' may underflow too.; * These issues never happen if input (compressed) data is correct.; * But they may happen if input data is invalid (error or intentional tampering).; * As a consequence, use these functions in trusted environments with trusted data **only**.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:908,Energy Efficiency,allocate,allocated,908,"/*! Obsolete LZ4_decompress_fast variants (since v1.9.0) :; * These functions used to be faster than LZ4_decompress_safe(),; * but this is no longer the case. They are now slower.; * This is because LZ4_decompress_fast() doesn't know the input size,; * and therefore must progress more cautiously into the input buffer to not read beyond the end of block.; * On top of that `LZ4_decompress_fast()` is not protected vs malformed or malicious inputs, making it a security liability.; * As a consequence, LZ4_decompress_fast() is strongly discouraged, and deprecated.; *; * The last remaining LZ4_decompress_fast() specificity is that; * it can decompress a block without knowing its compressed size.; * Such functionality can be achieved in a more secure manner; * by employing LZ4_decompress_safe_partial().; *; * Parameters:; * originalSize : is the uncompressed size to regenerate.; * `dst` must be already allocated, its size must be >= 'originalSize' bytes.; * @return : number of bytes read from source buffer (== compressed size).; * The function expects to finish at block's end exactly.; * If the source stream is detected malformed, the function stops decoding and returns a negative result.; * note : LZ4_decompress_fast*() requires originalSize. Thanks to this information, it never writes past the output buffer.; * However, since it doesn't know its 'src' size, it may read an unknown amount of input, past input buffer bounds.; * Also, since match offsets are not validated, match reads from 'src' may underflow too.; * These issues never happen if input (compressed) data is correct.; * But they may happen if input data is invalid (error or intentional tampering).; * As a consequence, use these functions in trusted environments with trusted data **only**.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1121,Safety,detect,detected,1121,"/*! Obsolete LZ4_decompress_fast variants (since v1.9.0) :; * These functions used to be faster than LZ4_decompress_safe(),; * but this is no longer the case. They are now slower.; * This is because LZ4_decompress_fast() doesn't know the input size,; * and therefore must progress more cautiously into the input buffer to not read beyond the end of block.; * On top of that `LZ4_decompress_fast()` is not protected vs malformed or malicious inputs, making it a security liability.; * As a consequence, LZ4_decompress_fast() is strongly discouraged, and deprecated.; *; * The last remaining LZ4_decompress_fast() specificity is that; * it can decompress a block without knowing its compressed size.; * Such functionality can be achieved in a more secure manner; * by employing LZ4_decompress_safe_partial().; *; * Parameters:; * originalSize : is the uncompressed size to regenerate.; * `dst` must be already allocated, its size must be >= 'originalSize' bytes.; * @return : number of bytes read from source buffer (== compressed size).; * The function expects to finish at block's end exactly.; * If the source stream is detected malformed, the function stops decoding and returns a negative result.; * note : LZ4_decompress_fast*() requires originalSize. Thanks to this information, it never writes past the output buffer.; * However, since it doesn't know its 'src' size, it may read an unknown amount of input, past input buffer bounds.; * Also, since match offsets are not validated, match reads from 'src' may underflow too.; * These issues never happen if input (compressed) data is correct.; * But they may happen if input data is invalid (error or intentional tampering).; * As a consequence, use these functions in trusted environments with trusted data **only**.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:461,Security,secur,security,461,"/*! Obsolete LZ4_decompress_fast variants (since v1.9.0) :; * These functions used to be faster than LZ4_decompress_safe(),; * but this is no longer the case. They are now slower.; * This is because LZ4_decompress_fast() doesn't know the input size,; * and therefore must progress more cautiously into the input buffer to not read beyond the end of block.; * On top of that `LZ4_decompress_fast()` is not protected vs malformed or malicious inputs, making it a security liability.; * As a consequence, LZ4_decompress_fast() is strongly discouraged, and deprecated.; *; * The last remaining LZ4_decompress_fast() specificity is that; * it can decompress a block without knowing its compressed size.; * Such functionality can be achieved in a more secure manner; * by employing LZ4_decompress_safe_partial().; *; * Parameters:; * originalSize : is the uncompressed size to regenerate.; * `dst` must be already allocated, its size must be >= 'originalSize' bytes.; * @return : number of bytes read from source buffer (== compressed size).; * The function expects to finish at block's end exactly.; * If the source stream is detected malformed, the function stops decoding and returns a negative result.; * note : LZ4_decompress_fast*() requires originalSize. Thanks to this information, it never writes past the output buffer.; * However, since it doesn't know its 'src' size, it may read an unknown amount of input, past input buffer bounds.; * Also, since match offsets are not validated, match reads from 'src' may underflow too.; * These issues never happen if input (compressed) data is correct.; * But they may happen if input data is invalid (error or intentional tampering).; * As a consequence, use these functions in trusted environments with trusted data **only**.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:746,Security,secur,secure,746,"/*! Obsolete LZ4_decompress_fast variants (since v1.9.0) :; * These functions used to be faster than LZ4_decompress_safe(),; * but this is no longer the case. They are now slower.; * This is because LZ4_decompress_fast() doesn't know the input size,; * and therefore must progress more cautiously into the input buffer to not read beyond the end of block.; * On top of that `LZ4_decompress_fast()` is not protected vs malformed or malicious inputs, making it a security liability.; * As a consequence, LZ4_decompress_fast() is strongly discouraged, and deprecated.; *; * The last remaining LZ4_decompress_fast() specificity is that; * it can decompress a block without knowing its compressed size.; * Such functionality can be achieved in a more secure manner; * by employing LZ4_decompress_safe_partial().; *; * Parameters:; * originalSize : is the uncompressed size to regenerate.; * `dst` must be already allocated, its size must be >= 'originalSize' bytes.; * @return : number of bytes read from source buffer (== compressed size).; * The function expects to finish at block's end exactly.; * If the source stream is detected malformed, the function stops decoding and returns a negative result.; * note : LZ4_decompress_fast*() requires originalSize. Thanks to this information, it never writes past the output buffer.; * However, since it doesn't know its 'src' size, it may read an unknown amount of input, past input buffer bounds.; * Also, since match offsets are not validated, match reads from 'src' may underflow too.; * These issues never happen if input (compressed) data is correct.; * But they may happen if input data is invalid (error or intentional tampering).; * As a consequence, use these functions in trusted environments with trusted data **only**.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1477,Security,validat,validated,1477,"/*! Obsolete LZ4_decompress_fast variants (since v1.9.0) :; * These functions used to be faster than LZ4_decompress_safe(),; * but this is no longer the case. They are now slower.; * This is because LZ4_decompress_fast() doesn't know the input size,; * and therefore must progress more cautiously into the input buffer to not read beyond the end of block.; * On top of that `LZ4_decompress_fast()` is not protected vs malformed or malicious inputs, making it a security liability.; * As a consequence, LZ4_decompress_fast() is strongly discouraged, and deprecated.; *; * The last remaining LZ4_decompress_fast() specificity is that; * it can decompress a block without knowing its compressed size.; * Such functionality can be achieved in a more secure manner; * by employing LZ4_decompress_safe_partial().; *; * Parameters:; * originalSize : is the uncompressed size to regenerate.; * `dst` must be already allocated, its size must be >= 'originalSize' bytes.; * @return : number of bytes read from source buffer (== compressed size).; * The function expects to finish at block's end exactly.; * If the source stream is detected malformed, the function stops decoding and returns a negative result.; * note : LZ4_decompress_fast*() requires originalSize. Thanks to this information, it never writes past the output buffer.; * However, since it doesn't know its 'src' size, it may read an unknown amount of input, past input buffer bounds.; * Also, since match offsets are not validated, match reads from 'src' may underflow too.; * These issues never happen if input (compressed) data is correct.; * But they may happen if input data is invalid (error or intentional tampering).; * As a consequence, use these functions in trusted environments with trusted data **only**.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.h:35,Security,checksum,checksum,35,/* 1: frame terminated with 32-bit checksum of decompressed data; 0: disabled (default) */,MatchSource.CODE_COMMENT,builtins/lz4/lz4frame.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.h:31,Security,checksum,checksum,31,/* 1: each block followed by a checksum of block's compressed data; 0: disabled (default) */,MatchSource.CODE_COMMENT,builtins/lz4/lz4frame.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.h:20,Energy Efficiency,reduce,reduces,20,/* 1: always flush; reduces usage of internal buffers */,MatchSource.CODE_COMMENT,builtins/lz4/lz4frame.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.h:35,Integrability,depend,depending,35,"/* LZ4 Frame header size can vary, depending on selected paramaters */",MatchSource.CODE_COMMENT,builtins/lz4/lz4frame.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.h:56,Availability,avail,available,56,/* pledges that last 64KB decompressed data will remain available unmodified. This optimization skips storage operations in tmp buffers. */,MatchSource.CODE_COMMENT,builtins/lz4/lz4frame.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.h:83,Performance,optimiz,optimization,83,/* pledges that last 64KB decompressed data will remain available unmodified. This optimization skips storage operations in tmp buffers. */,MatchSource.CODE_COMMENT,builtins/lz4/lz4frame.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame_static.h:1251,Integrability,CONTRACT,CONTRACT,1251,"/*; LZ4 auto-framing library; Header File for static linking only; Copyright (C) 2011-2016, Yann Collet. BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php). Redistribution and use in source and binary forms, with or without; modification, are permitted provided that the following conditions are; met:. * Redistributions of source code must retain the above copyright; notice, this list of conditions and the following disclaimer.; * Redistributions in binary form must reproduce the above; copyright notice, this list of conditions and the following disclaimer; in the documentation and/or other materials provided with the; distribution. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS; ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR; A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT; OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. You can contact the author at :; - LZ4 source repository : https://github.com/lz4/lz4; - LZ4 public forum : https://groups.google.com/forum/#!forum/lz4c; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4frame_static.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame_static.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame_static.h:174,Usability,simpl,simply,174,"/* The declarations that formerly were made here have been merged into; * lz4frame.h, protected by the LZ4F_STATIC_LINKING_ONLY macro. Going forward,; * it is recommended to simply include that header directly.; */",MatchSource.CODE_COMMENT,builtins/lz4/lz4frame_static.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame_static.h
https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.h:43,Deployability,update,update,43,/* index from which to continue dictionary update */,MatchSource.CODE_COMMENT,builtins/lz4/lz4hc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:2775,Availability,avail,available,2775,"T SHALL THE COPYRIGHT; * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; *; * You can contact the author at:; * - xxHash homepage: https://www.xxhash.com; * - xxHash source repository: https://github.com/Cyan4973/xxHash; */; /* TODO: update */; /* Notice extracted from xxHash homepage:. xxHash is an extremely fast hash algorithm, running at RAM speed limits.; It also successfully passes all tests from the SMHasher suite. Comparison (single thread, Windows Seven 32 bits, using SMHasher on a Core 2 Duo @3GHz). Name Speed Q.Score Author; xxHash 5.4 GB/s 10; CrapWow 3.2 GB/s 2 Andrew; MumurHash 3a 2.7 GB/s 10 Austin Appleby; SpookyHash 2.0 GB/s 10 Bob Jenkins; SBox 1.4 GB/s 9 Bret Mulvey; Lookup3 1.2 GB/s 9 Bob Jenkins; SuperFastHash 1.2 GB/s 1 Paul Hsieh; CityHash64 1.05 GB/s 10 Pike & Alakuijala; FNV 0.55 GB/s 5 Fowler, Noll, Vo; CRC32 0.43 GB/s 9; MD5-32 0.33 GB/s 10 Ronald L. Rivest; SHA1-32 0.28 GB/s 10. Q.Score is a measure of quality of the hash function.; It depends on successfully passing SMHasher test set.; 10 is a perfect score. Note: SMHasher's CRC32 implementation is not the fastest one.; Other speed-oriented implementations can be faster,; especially in combination with PCLMUL instruction:; https://fastcompression.blogspot.com/2019/03/presenting-xxh3.html?showComment=1552696407071#c3490092340461170735. A 64-bit version, named XXH64, is available since r35.; It offers much better speed, but for 64-bit applications only.; Name Speed on 64 bits Speed on 32 bits; XXH64 13.8 GB/s 1.9 GB/s; XXH32 6.8 GB/s 6.0 GB/s; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1641,Deployability,update,update,1641,"ls provided with the; * distribution.; *; * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS; * ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT; * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR; * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT; * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; *; * You can contact the author at:; * - xxHash homepage: https://www.xxhash.com; * - xxHash source repository: https://github.com/Cyan4973/xxHash; */; /* TODO: update */; /* Notice extracted from xxHash homepage:. xxHash is an extremely fast hash algorithm, running at RAM speed limits.; It also successfully passes all tests from the SMHasher suite. Comparison (single thread, Windows Seven 32 bits, using SMHasher on a Core 2 Duo @3GHz). Name Speed Q.Score Author; xxHash 5.4 GB/s 10; CrapWow 3.2 GB/s 2 Andrew; MumurHash 3a 2.7 GB/s 10 Austin Appleby; SpookyHash 2.0 GB/s 10 Bob Jenkins; SBox 1.4 GB/s 9 Bret Mulvey; Lookup3 1.2 GB/s 9 Bob Jenkins; SuperFastHash 1.2 GB/s 1 Paul Hsieh; CityHash64 1.05 GB/s 10 Pike & Alakuijala; FNV 0.55 GB/s 5 Fowler, Noll, Vo; CRC32 0.43 GB/s 9; MD5-32 0.33 GB/s 10 Ronald L. Rivest; SHA1-32 0.28 GB/s 10. Q.Score is a measure of quality of the hash function.; It depends on successfully passing SMHasher test set.; 10 is a perfect score. Note: SMHasher's CRC32 implementation is not the fastest one.; Other speed-oriented implementations can be faster,; especially in combination with PCLMUL instruction:; https://fastcompression.",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1298,Integrability,CONTRACT,CONTRACT,1298,"n source and binary forms, with or without; * modification, are permitted provided that the following conditions are; * met:; *; * * Redistributions of source code must retain the above copyright; * notice, this list of conditions and the following disclaimer.; * * Redistributions in binary form must reproduce the above; * copyright notice, this list of conditions and the following disclaimer; * in the documentation and/or other materials provided with the; * distribution.; *; * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS; * ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT; * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR; * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT; * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; *; * You can contact the author at:; * - xxHash homepage: https://www.xxhash.com; * - xxHash source repository: https://github.com/Cyan4973/xxHash; */; /* TODO: update */; /* Notice extracted from xxHash homepage:. xxHash is an extremely fast hash algorithm, running at RAM speed limits.; It also successfully passes all tests from the SMHasher suite. Comparison (single thread, Windows Seven 32 bits, using SMHasher on a Core 2 Duo @3GHz). Name Speed Q.Score Author; xxHash 5.4 GB/s 10; CrapWow 3.2 GB/s 2 Andrew; MumurHash 3a 2.7 GB/s 10 Austin Appleby; SpookyHash 2.0 GB/s 10 Bob Jenkins; SBox 1.4 GB/s 9 Bret Mulvey; Lookup3 1.2 GB/s 9 Bob Jenkins; SuperFastHash 1.2 GB/s 1 Paul Hsieh; CityHash64 1.05 GB/s 10 Pike & Alakuijala",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:2384,Integrability,depend,depends,2384,"T SHALL THE COPYRIGHT; * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; *; * You can contact the author at:; * - xxHash homepage: https://www.xxhash.com; * - xxHash source repository: https://github.com/Cyan4973/xxHash; */; /* TODO: update */; /* Notice extracted from xxHash homepage:. xxHash is an extremely fast hash algorithm, running at RAM speed limits.; It also successfully passes all tests from the SMHasher suite. Comparison (single thread, Windows Seven 32 bits, using SMHasher on a Core 2 Duo @3GHz). Name Speed Q.Score Author; xxHash 5.4 GB/s 10; CrapWow 3.2 GB/s 2 Andrew; MumurHash 3a 2.7 GB/s 10 Austin Appleby; SpookyHash 2.0 GB/s 10 Bob Jenkins; SBox 1.4 GB/s 9 Bret Mulvey; Lookup3 1.2 GB/s 9 Bob Jenkins; SuperFastHash 1.2 GB/s 1 Paul Hsieh; CityHash64 1.05 GB/s 10 Pike & Alakuijala; FNV 0.55 GB/s 5 Fowler, Noll, Vo; CRC32 0.43 GB/s 9; MD5-32 0.33 GB/s 10 Ronald L. Rivest; SHA1-32 0.28 GB/s 10. Q.Score is a measure of quality of the hash function.; It depends on successfully passing SMHasher test set.; 10 is a perfect score. Note: SMHasher's CRC32 implementation is not the fastest one.; Other speed-oriented implementations can be faster,; especially in combination with PCLMUL instruction:; https://fastcompression.blogspot.com/2019/03/presenting-xxh3.html?showComment=1552696407071#c3490092340461170735. A 64-bit version, named XXH64, is available since r35.; It offers much better speed, but for 64-bit applications only.; Name Speed on 64 bits Speed on 32 bits; XXH64 13.8 GB/s 1.9 GB/s; XXH32 6.8 GB/s 6.0 GB/s; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:30,Security,Hash,Hash,30,"/*; * xxHash - Extremely Fast Hash algorithm; * Header File; * Copyright (C) 2012-2020 Yann Collet; *; * BSD 2-Clause License (https://www.opensource.org/licenses/bsd-license.php); *; * Redistribution and use in source and binary forms, with or without; * modification, are permitted provided that the following conditions are; * met:; *; * * Redistributions of source code must retain the above copyright; * notice, this list of conditions and the following disclaimer.; * * Redistributions in binary form must reproduce the above; * copyright notice, this list of conditions and the following disclaimer; * in the documentation and/or other materials provided with the; * distribution.; *; * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS; * ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT; * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR; * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT; * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; *; * You can contact the author at:; * - xxHash homepage: https://www.xxhash.com; * - xxHash source repository: https://github.com/Cyan4973/xxHash; */; /* TODO: update */; /* Notice extracted from xxHash homepage:. xxHash is an extremely fast hash algorithm, running at RAM speed limits.; It also successfully passes all tests from the SMHasher suite. Comparison (single thread, Windows Seven 32 bits, using SMHasher on a Core 2 Duo @3GHz). Name Speed Q.Score Author; xxHash 5.4 GB/s 10; CrapWow 3.2 GB/s 2 Andrew; MumurH",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1723,Security,hash,hash,1723,"YRIGHT HOLDERS AND CONTRIBUTORS; * ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT; * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR; * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT; * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; *; * You can contact the author at:; * - xxHash homepage: https://www.xxhash.com; * - xxHash source repository: https://github.com/Cyan4973/xxHash; */; /* TODO: update */; /* Notice extracted from xxHash homepage:. xxHash is an extremely fast hash algorithm, running at RAM speed limits.; It also successfully passes all tests from the SMHasher suite. Comparison (single thread, Windows Seven 32 bits, using SMHasher on a Core 2 Duo @3GHz). Name Speed Q.Score Author; xxHash 5.4 GB/s 10; CrapWow 3.2 GB/s 2 Andrew; MumurHash 3a 2.7 GB/s 10 Austin Appleby; SpookyHash 2.0 GB/s 10 Bob Jenkins; SBox 1.4 GB/s 9 Bret Mulvey; Lookup3 1.2 GB/s 9 Bob Jenkins; SuperFastHash 1.2 GB/s 1 Paul Hsieh; CityHash64 1.05 GB/s 10 Pike & Alakuijala; FNV 0.55 GB/s 5 Fowler, Noll, Vo; CRC32 0.43 GB/s 9; MD5-32 0.33 GB/s 10 Ronald L. Rivest; SHA1-32 0.28 GB/s 10. Q.Score is a measure of quality of the hash function.; It depends on successfully passing SMHasher test set.; 10 is a perfect score. Note: SMHasher's CRC32 implementation is not the fastest one.; Other speed-oriented implementations can be faster,; especially in combination with PCLMUL instruction:; https://fastcompression.blogspot.com/2019/03/presenting-xxh3.html?showComment=1552696407071#c34900923404",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:2365,Security,hash,hash,2365,"T SHALL THE COPYRIGHT; * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; *; * You can contact the author at:; * - xxHash homepage: https://www.xxhash.com; * - xxHash source repository: https://github.com/Cyan4973/xxHash; */; /* TODO: update */; /* Notice extracted from xxHash homepage:. xxHash is an extremely fast hash algorithm, running at RAM speed limits.; It also successfully passes all tests from the SMHasher suite. Comparison (single thread, Windows Seven 32 bits, using SMHasher on a Core 2 Duo @3GHz). Name Speed Q.Score Author; xxHash 5.4 GB/s 10; CrapWow 3.2 GB/s 2 Andrew; MumurHash 3a 2.7 GB/s 10 Austin Appleby; SpookyHash 2.0 GB/s 10 Bob Jenkins; SBox 1.4 GB/s 9 Bret Mulvey; Lookup3 1.2 GB/s 9 Bob Jenkins; SuperFastHash 1.2 GB/s 1 Paul Hsieh; CityHash64 1.05 GB/s 10 Pike & Alakuijala; FNV 0.55 GB/s 5 Fowler, Noll, Vo; CRC32 0.43 GB/s 9; MD5-32 0.33 GB/s 10 Ronald L. Rivest; SHA1-32 0.28 GB/s 10. Q.Score is a measure of quality of the hash function.; It depends on successfully passing SMHasher test set.; 10 is a perfect score. Note: SMHasher's CRC32 implementation is not the fastest one.; Other speed-oriented implementations can be faster,; especially in combination with PCLMUL instruction:; https://fastcompression.blogspot.com/2019/03/presenting-xxh3.html?showComment=1552696407071#c3490092340461170735. A 64-bit version, named XXH64, is available since r35.; It offers much better speed, but for 64-bit applications only.; Name Speed on 64 bits Speed on 32 bits; XXH64 13.8 GB/s 1.9 GB/s; XXH32 6.8 GB/s 6.0 GB/s; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1801,Testability,test,tests,1801," WARRANTIES, INCLUDING, BUT NOT; * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR; * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT; * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; *; * You can contact the author at:; * - xxHash homepage: https://www.xxhash.com; * - xxHash source repository: https://github.com/Cyan4973/xxHash; */; /* TODO: update */; /* Notice extracted from xxHash homepage:. xxHash is an extremely fast hash algorithm, running at RAM speed limits.; It also successfully passes all tests from the SMHasher suite. Comparison (single thread, Windows Seven 32 bits, using SMHasher on a Core 2 Duo @3GHz). Name Speed Q.Score Author; xxHash 5.4 GB/s 10; CrapWow 3.2 GB/s 2 Andrew; MumurHash 3a 2.7 GB/s 10 Austin Appleby; SpookyHash 2.0 GB/s 10 Bob Jenkins; SBox 1.4 GB/s 9 Bret Mulvey; Lookup3 1.2 GB/s 9 Bob Jenkins; SuperFastHash 1.2 GB/s 1 Paul Hsieh; CityHash64 1.05 GB/s 10 Pike & Alakuijala; FNV 0.55 GB/s 5 Fowler, Noll, Vo; CRC32 0.43 GB/s 9; MD5-32 0.33 GB/s 10 Ronald L. Rivest; SHA1-32 0.28 GB/s 10. Q.Score is a measure of quality of the hash function.; It depends on successfully passing SMHasher test set.; 10 is a perfect score. Note: SMHasher's CRC32 implementation is not the fastest one.; Other speed-oriented implementations can be faster,; especially in combination with PCLMUL instruction:; https://fastcompression.blogspot.com/2019/03/presenting-xxh3.html?showComment=1552696407071#c3490092340461170735. A 64-bit version, named XXH64, is available since r35.; It",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:2425,Testability,test,test,2425,"T SHALL THE COPYRIGHT; * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,; * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT; * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,; * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY; * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT; * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE; * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.; *; * You can contact the author at:; * - xxHash homepage: https://www.xxhash.com; * - xxHash source repository: https://github.com/Cyan4973/xxHash; */; /* TODO: update */; /* Notice extracted from xxHash homepage:. xxHash is an extremely fast hash algorithm, running at RAM speed limits.; It also successfully passes all tests from the SMHasher suite. Comparison (single thread, Windows Seven 32 bits, using SMHasher on a Core 2 Duo @3GHz). Name Speed Q.Score Author; xxHash 5.4 GB/s 10; CrapWow 3.2 GB/s 2 Andrew; MumurHash 3a 2.7 GB/s 10 Austin Appleby; SpookyHash 2.0 GB/s 10 Bob Jenkins; SBox 1.4 GB/s 9 Bret Mulvey; Lookup3 1.2 GB/s 9 Bob Jenkins; SuperFastHash 1.2 GB/s 1 Paul Hsieh; CityHash64 1.05 GB/s 10 Pike & Alakuijala; FNV 0.55 GB/s 5 Fowler, Noll, Vo; CRC32 0.43 GB/s 9; MD5-32 0.33 GB/s 10 Ronald L. Rivest; SHA1-32 0.28 GB/s 10. Q.Score is a measure of quality of the hash function.; It depends on successfully passing SMHasher test set.; 10 is a perfect score. Note: SMHasher's CRC32 implementation is not the fastest one.; Other speed-oriented implementations can be faster,; especially in combination with PCLMUL instruction:; https://fastcompression.blogspot.com/2019/03/presenting-xxh3.html?showComment=1552696407071#c3490092340461170735. A 64-bit version, named XXH64, is available since r35.; It offers much better speed, but for 64-bit applications only.; Name Speed on 64 bits Speed on 32 bits; XXH64 13.8 GB/s 1.9 GB/s; XXH32 6.8 GB/s 6.0 GB/s; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:395,Energy Efficiency,power,power,395,"/* ****************************; * INLINE mode; ******************************/; /*!; * XXH_INLINE_ALL (and XXH_PRIVATE_API); * Use these build macros to inline xxhash into the target unit.; * Inlining improves performance on small inputs, especially when the length is; * expressed as a compile-time constant:; *; * https://fastcompression.blogspot.com/2018/03/xxhash-for-small-keys-impressive-power.html; *; * It also keeps xxHash symbols private to the unit, so they are not exported.; *; * Usage:; * #define XXH_INLINE_ALL; * #include ""xxhash.h""; *; * Do not compile and link xxhash.o as a separate object, as it is not useful.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:211,Performance,perform,performance,211,"/* ****************************; * INLINE mode; ******************************/; /*!; * XXH_INLINE_ALL (and XXH_PRIVATE_API); * Use these build macros to inline xxhash into the target unit.; * Inlining improves performance on small inputs, especially when the length is; * expressed as a compile-time constant:; *; * https://fastcompression.blogspot.com/2018/03/xxhash-for-small-keys-impressive-power.html; *; * It also keeps xxHash symbols private to the unit, so they are not exported.; *; * Usage:; * #define XXH_INLINE_ALL; * #include ""xxhash.h""; *; * Do not compile and link xxhash.o as a separate object, as it is not useful.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:8,Security,access,access,8,"/* give access to the advanced API, required to compile implementations */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:3,Safety,avoid,avoid,3,/* avoid macro redef */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:339,Availability,failure,failure,339,"/*; * This part deals with the special case where a unit wants to inline xxHash,; * but ""xxhash.h"" has previously been included without XXH_INLINE_ALL, such; * as part of some previously included *.h header file.; * Without further action, the new include would just be ignored,; * and functions would effectively _not_ be inlined (silent failure).; * The following macros solve this situation by prefixing all inlined names,; * avoiding naming collision with previous inclusions.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:429,Safety,avoid,avoiding,429,"/*; * This part deals with the special case where a unit wants to inline xxHash,; * but ""xxhash.h"" has previously been included without XXH_INLINE_ALL, such; * as part of some previously included *.h header file.; * Without further action, the new include would just be ignored,; * and functions would effectively _not_ be inlined (silent failure).; * The following macros solve this situation by prefixing all inlined names,; * avoiding naming collision with previous inclusions.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:84,Availability,error,error,84,"/*; * Note: Alternative: #undef all symbols (it's a pretty large list).; * Without #error: it compiles, but functions are actually not inlined.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:97,Safety,avoid,avoid,97,"/*; * Some identifiers (enums, type names) are not symbols, but they must; * still be renamed to avoid redeclaration.; * Alternative solution: do not redeclare them.; * However, this requires some #ifdefs, and is a more dispersed action.; * Meanwhile, renaming can be achieved in a single block; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:156,Safety,avoid,avoid,156,"/*!; * XXH_NAMESPACE, aka Namespace Emulation:; *; * If you want to include _and expose_ xxHash functions from within your own; * library, but also want to avoid symbol collisions with other libraries which; * may also include xxHash, you can use XXH_NAMESPACE to automatically prefix; * any public symbol from xxhash library with the value of XXH_NAMESPACE; * (therefore, avoid empty or numeric values).; *; * Note that no change is required within the calling program as long as it; * includes `xxhash.h`: Regular symbol names will be automatically translated; * by this header.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:373,Safety,avoid,avoid,373,"/*!; * XXH_NAMESPACE, aka Namespace Emulation:; *; * If you want to include _and expose_ xxHash functions from within your own; * library, but also want to avoid symbol collisions with other libraries which; * may also include xxHash, you can use XXH_NAMESPACE to automatically prefix; * any public symbol from xxhash library with the value of XXH_NAMESPACE; * (therefore, avoid empty or numeric values).; *; * Note that no change is required within the calling program as long as it; * includes `xxhash.h`: Regular symbol names will be automatically translated; * by this header.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:84,Security,hash,hash,84,/*-**********************************************************************; * 32-bit hash; ************************************************************************/,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:164,Energy Efficiency,allocate,allocated,164,"/*!; * XXH32():; * Calculate the 32-bit hash of sequence ""length"" bytes stored at memory address ""input"".; * The memory between input & input+length must be valid (allocated and read-accessible).; * ""seed"" can be used to alter the result predictably.; * Speed on Core 2 Duo @ 3 GHz (single thread, SMHasher benchmark): 5.4 GB/s; *; * Note: XXH3 provides competitive speed for both 32-bit and 64-bit systems,; * and offers true 64/128 bit hash results. It provides a superior level of; * dispersion, and greatly reduces the risks of collisions.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:511,Energy Efficiency,reduce,reduces,511,"/*!; * XXH32():; * Calculate the 32-bit hash of sequence ""length"" bytes stored at memory address ""input"".; * The memory between input & input+length must be valid (allocated and read-accessible).; * ""seed"" can be used to alter the result predictably.; * Speed on Core 2 Duo @ 3 GHz (single thread, SMHasher benchmark): 5.4 GB/s; *; * Note: XXH3 provides competitive speed for both 32-bit and 64-bit systems,; * and offers true 64/128 bit hash results. It provides a superior level of; * dispersion, and greatly reduces the risks of collisions.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:238,Safety,predict,predictably,238,"/*!; * XXH32():; * Calculate the 32-bit hash of sequence ""length"" bytes stored at memory address ""input"".; * The memory between input & input+length must be valid (allocated and read-accessible).; * ""seed"" can be used to alter the result predictably.; * Speed on Core 2 Duo @ 3 GHz (single thread, SMHasher benchmark): 5.4 GB/s; *; * Note: XXH3 provides competitive speed for both 32-bit and 64-bit systems,; * and offers true 64/128 bit hash results. It provides a superior level of; * dispersion, and greatly reduces the risks of collisions.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:523,Safety,risk,risks,523,"/*!; * XXH32():; * Calculate the 32-bit hash of sequence ""length"" bytes stored at memory address ""input"".; * The memory between input & input+length must be valid (allocated and read-accessible).; * ""seed"" can be used to alter the result predictably.; * Speed on Core 2 Duo @ 3 GHz (single thread, SMHasher benchmark): 5.4 GB/s; *; * Note: XXH3 provides competitive speed for both 32-bit and 64-bit systems,; * and offers true 64/128 bit hash results. It provides a superior level of; * dispersion, and greatly reduces the risks of collisions.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:40,Security,hash,hash,40,"/*!; * XXH32():; * Calculate the 32-bit hash of sequence ""length"" bytes stored at memory address ""input"".; * The memory between input & input+length must be valid (allocated and read-accessible).; * ""seed"" can be used to alter the result predictably.; * Speed on Core 2 Duo @ 3 GHz (single thread, SMHasher benchmark): 5.4 GB/s; *; * Note: XXH3 provides competitive speed for both 32-bit and 64-bit systems,; * and offers true 64/128 bit hash results. It provides a superior level of; * dispersion, and greatly reduces the risks of collisions.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:183,Security,access,accessible,183,"/*!; * XXH32():; * Calculate the 32-bit hash of sequence ""length"" bytes stored at memory address ""input"".; * The memory between input & input+length must be valid (allocated and read-accessible).; * ""seed"" can be used to alter the result predictably.; * Speed on Core 2 Duo @ 3 GHz (single thread, SMHasher benchmark): 5.4 GB/s; *; * Note: XXH3 provides competitive speed for both 32-bit and 64-bit systems,; * and offers true 64/128 bit hash results. It provides a superior level of; * dispersion, and greatly reduces the risks of collisions.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:438,Security,hash,hash,438,"/*!; * XXH32():; * Calculate the 32-bit hash of sequence ""length"" bytes stored at memory address ""input"".; * The memory between input & input+length must be valid (allocated and read-accessible).; * ""seed"" can be used to alter the result predictably.; * Speed on Core 2 Duo @ 3 GHz (single thread, SMHasher benchmark): 5.4 GB/s; *; * Note: XXH3 provides competitive speed for both 32-bit and 64-bit systems,; * and offers true 64/128 bit hash results. It provides a superior level of; * dispersion, and greatly reduces the risks of collisions.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:307,Testability,benchmark,benchmark,307,"/*!; * XXH32():; * Calculate the 32-bit hash of sequence ""length"" bytes stored at memory address ""input"".; * The memory between input & input+length must be valid (allocated and read-accessible).; * ""seed"" can be used to alter the result predictably.; * Speed on Core 2 Duo @ 3 GHz (single thread, SMHasher benchmark): 5.4 GB/s; *; * Note: XXH3 provides competitive speed for both 32-bit and 64-bit systems,; * and offers true 64/128 bit hash results. It provides a superior level of; * dispersion, and greatly reduces the risks of collisions.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:538,Availability,error,error,538,"/******* Streaming *******/; /*; * Streaming functions generate the xxHash value from an incrememtal input.; * This method is slower than single-call functions, due to state management.; * For small inputs, prefer `XXH32()` and `XXH64()`, which are better optimized.; *; * An XXH state must first be allocated using `XXH*_createState()`.; *; * Start a new hash by initializing the state with a seed using `XXH*_reset()`.; *; * Then, feed the hash state by calling `XXH*_update()` as many times as necessary.; *; * The function returns an error code, with 0 meaning OK, and any other value; * meaning there is an error.; *; * Finally, a hash value can be produced anytime, by using `XXH*_digest()`.; * This function returns the nn-bits hash as an int or long long.; *; * It's still possible to continue inserting input into the hash state after a; * digest, and generate new hash values later on by invoking `XXH*_digest()`.; *; * When done, release the state using `XXH*_freeState()`.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:612,Availability,error,error,612,"/******* Streaming *******/; /*; * Streaming functions generate the xxHash value from an incrememtal input.; * This method is slower than single-call functions, due to state management.; * For small inputs, prefer `XXH32()` and `XXH64()`, which are better optimized.; *; * An XXH state must first be allocated using `XXH*_createState()`.; *; * Start a new hash by initializing the state with a seed using `XXH*_reset()`.; *; * Then, feed the hash state by calling `XXH*_update()` as many times as necessary.; *; * The function returns an error code, with 0 meaning OK, and any other value; * meaning there is an error.; *; * Finally, a hash value can be produced anytime, by using `XXH*_digest()`.; * This function returns the nn-bits hash as an int or long long.; *; * It's still possible to continue inserting input into the hash state after a; * digest, and generate new hash values later on by invoking `XXH*_digest()`.; *; * When done, release the state using `XXH*_freeState()`.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:941,Deployability,release,release,941,"/******* Streaming *******/; /*; * Streaming functions generate the xxHash value from an incrememtal input.; * This method is slower than single-call functions, due to state management.; * For small inputs, prefer `XXH32()` and `XXH64()`, which are better optimized.; *; * An XXH state must first be allocated using `XXH*_createState()`.; *; * Start a new hash by initializing the state with a seed using `XXH*_reset()`.; *; * Then, feed the hash state by calling `XXH*_update()` as many times as necessary.; *; * The function returns an error code, with 0 meaning OK, and any other value; * meaning there is an error.; *; * Finally, a hash value can be produced anytime, by using `XXH*_digest()`.; * This function returns the nn-bits hash as an int or long long.; *; * It's still possible to continue inserting input into the hash state after a; * digest, and generate new hash values later on by invoking `XXH*_digest()`.; *; * When done, release the state using `XXH*_freeState()`.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:300,Energy Efficiency,allocate,allocated,300,"/******* Streaming *******/; /*; * Streaming functions generate the xxHash value from an incrememtal input.; * This method is slower than single-call functions, due to state management.; * For small inputs, prefer `XXH32()` and `XXH64()`, which are better optimized.; *; * An XXH state must first be allocated using `XXH*_createState()`.; *; * Start a new hash by initializing the state with a seed using `XXH*_reset()`.; *; * Then, feed the hash state by calling `XXH*_update()` as many times as necessary.; *; * The function returns an error code, with 0 meaning OK, and any other value; * meaning there is an error.; *; * Finally, a hash value can be produced anytime, by using `XXH*_digest()`.; * This function returns the nn-bits hash as an int or long long.; *; * It's still possible to continue inserting input into the hash state after a; * digest, and generate new hash values later on by invoking `XXH*_digest()`.; *; * When done, release the state using `XXH*_freeState()`.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:256,Performance,optimiz,optimized,256,"/******* Streaming *******/; /*; * Streaming functions generate the xxHash value from an incrememtal input.; * This method is slower than single-call functions, due to state management.; * For small inputs, prefer `XXH32()` and `XXH64()`, which are better optimized.; *; * An XXH state must first be allocated using `XXH*_createState()`.; *; * Start a new hash by initializing the state with a seed using `XXH*_reset()`.; *; * Then, feed the hash state by calling `XXH*_update()` as many times as necessary.; *; * The function returns an error code, with 0 meaning OK, and any other value; * meaning there is an error.; *; * Finally, a hash value can be produced anytime, by using `XXH*_digest()`.; * This function returns the nn-bits hash as an int or long long.; *; * It's still possible to continue inserting input into the hash state after a; * digest, and generate new hash values later on by invoking `XXH*_digest()`.; *; * When done, release the state using `XXH*_freeState()`.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:356,Security,hash,hash,356,"/******* Streaming *******/; /*; * Streaming functions generate the xxHash value from an incrememtal input.; * This method is slower than single-call functions, due to state management.; * For small inputs, prefer `XXH32()` and `XXH64()`, which are better optimized.; *; * An XXH state must first be allocated using `XXH*_createState()`.; *; * Start a new hash by initializing the state with a seed using `XXH*_reset()`.; *; * Then, feed the hash state by calling `XXH*_update()` as many times as necessary.; *; * The function returns an error code, with 0 meaning OK, and any other value; * meaning there is an error.; *; * Finally, a hash value can be produced anytime, by using `XXH*_digest()`.; * This function returns the nn-bits hash as an int or long long.; *; * It's still possible to continue inserting input into the hash state after a; * digest, and generate new hash values later on by invoking `XXH*_digest()`.; *; * When done, release the state using `XXH*_freeState()`.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:442,Security,hash,hash,442,"/******* Streaming *******/; /*; * Streaming functions generate the xxHash value from an incrememtal input.; * This method is slower than single-call functions, due to state management.; * For small inputs, prefer `XXH32()` and `XXH64()`, which are better optimized.; *; * An XXH state must first be allocated using `XXH*_createState()`.; *; * Start a new hash by initializing the state with a seed using `XXH*_reset()`.; *; * Then, feed the hash state by calling `XXH*_update()` as many times as necessary.; *; * The function returns an error code, with 0 meaning OK, and any other value; * meaning there is an error.; *; * Finally, a hash value can be produced anytime, by using `XXH*_digest()`.; * This function returns the nn-bits hash as an int or long long.; *; * It's still possible to continue inserting input into the hash state after a; * digest, and generate new hash values later on by invoking `XXH*_digest()`.; *; * When done, release the state using `XXH*_freeState()`.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:636,Security,hash,hash,636,"/******* Streaming *******/; /*; * Streaming functions generate the xxHash value from an incrememtal input.; * This method is slower than single-call functions, due to state management.; * For small inputs, prefer `XXH32()` and `XXH64()`, which are better optimized.; *; * An XXH state must first be allocated using `XXH*_createState()`.; *; * Start a new hash by initializing the state with a seed using `XXH*_reset()`.; *; * Then, feed the hash state by calling `XXH*_update()` as many times as necessary.; *; * The function returns an error code, with 0 meaning OK, and any other value; * meaning there is an error.; *; * Finally, a hash value can be produced anytime, by using `XXH*_digest()`.; * This function returns the nn-bits hash as an int or long long.; *; * It's still possible to continue inserting input into the hash state after a; * digest, and generate new hash values later on by invoking `XXH*_digest()`.; *; * When done, release the state using `XXH*_freeState()`.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:735,Security,hash,hash,735,"/******* Streaming *******/; /*; * Streaming functions generate the xxHash value from an incrememtal input.; * This method is slower than single-call functions, due to state management.; * For small inputs, prefer `XXH32()` and `XXH64()`, which are better optimized.; *; * An XXH state must first be allocated using `XXH*_createState()`.; *; * Start a new hash by initializing the state with a seed using `XXH*_reset()`.; *; * Then, feed the hash state by calling `XXH*_update()` as many times as necessary.; *; * The function returns an error code, with 0 meaning OK, and any other value; * meaning there is an error.; *; * Finally, a hash value can be produced anytime, by using `XXH*_digest()`.; * This function returns the nn-bits hash as an int or long long.; *; * It's still possible to continue inserting input into the hash state after a; * digest, and generate new hash values later on by invoking `XXH*_digest()`.; *; * When done, release the state using `XXH*_freeState()`.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:827,Security,hash,hash,827,"/******* Streaming *******/; /*; * Streaming functions generate the xxHash value from an incrememtal input.; * This method is slower than single-call functions, due to state management.; * For small inputs, prefer `XXH32()` and `XXH64()`, which are better optimized.; *; * An XXH state must first be allocated using `XXH*_createState()`.; *; * Start a new hash by initializing the state with a seed using `XXH*_reset()`.; *; * Then, feed the hash state by calling `XXH*_update()` as many times as necessary.; *; * The function returns an error code, with 0 meaning OK, and any other value; * meaning there is an error.; *; * Finally, a hash value can be produced anytime, by using `XXH*_digest()`.; * This function returns the nn-bits hash as an int or long long.; *; * It's still possible to continue inserting input into the hash state after a; * digest, and generate new hash values later on by invoking `XXH*_digest()`.; *; * When done, release the state using `XXH*_freeState()`.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:874,Security,hash,hash,874,"/******* Streaming *******/; /*; * Streaming functions generate the xxHash value from an incrememtal input.; * This method is slower than single-call functions, due to state management.; * For small inputs, prefer `XXH32()` and `XXH64()`, which are better optimized.; *; * An XXH state must first be allocated using `XXH*_createState()`.; *; * Start a new hash by initializing the state with a seed using `XXH*_reset()`.; *; * Then, feed the hash state by calling `XXH*_update()` as many times as necessary.; *; * The function returns an error code, with 0 meaning OK, and any other value; * meaning there is an error.; *; * Finally, a hash value can be produced anytime, by using `XXH*_digest()`.; * This function returns the nn-bits hash as an int or long long.; *; * It's still possible to continue inserting input into the hash state after a; * digest, and generate new hash values later on by invoking `XXH*_digest()`.; *; * When done, release the state using `XXH*_freeState()`.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:699,Modifiability,portab,portability,699,"/******* Canonical representation *******/; /*; * The default return values from XXH functions are unsigned 32 and 64 bit; * integers.; * This the simplest and fastest format for further post-processing.; *; * However, this leaves open the question of what is the order on the byte level,; * since little and big endian conventions will store the same number differently.; *; * The canonical representation settles this issue by mandating big-endian; * convention, the same convention as human-readable numbers (large digits first).; *; * When writing hash values to storage, sending them over a network, or printing; * them, it's highly recommended to use the canonical representation to ensure; * portability across a wider range of systems, present and future.; *; * The following functions allow transformation of hash values to and from; * canonical format.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:552,Security,hash,hash,552,"/******* Canonical representation *******/; /*; * The default return values from XXH functions are unsigned 32 and 64 bit; * integers.; * This the simplest and fastest format for further post-processing.; *; * However, this leaves open the question of what is the order on the byte level,; * since little and big endian conventions will store the same number differently.; *; * The canonical representation settles this issue by mandating big-endian; * convention, the same convention as human-readable numbers (large digits first).; *; * When writing hash values to storage, sending them over a network, or printing; * them, it's highly recommended to use the canonical representation to ensure; * portability across a wider range of systems, present and future.; *; * The following functions allow transformation of hash values to and from; * canonical format.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:818,Security,hash,hash,818,"/******* Canonical representation *******/; /*; * The default return values from XXH functions are unsigned 32 and 64 bit; * integers.; * This the simplest and fastest format for further post-processing.; *; * However, this leaves open the question of what is the order on the byte level,; * since little and big endian conventions will store the same number differently.; *; * The canonical representation settles this issue by mandating big-endian; * convention, the same convention as human-readable numbers (large digits first).; *; * When writing hash values to storage, sending them over a network, or printing; * them, it's highly recommended to use the canonical representation to ensure; * portability across a wider range of systems, present and future.; *; * The following functions allow transformation of hash values to and from; * canonical format.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:147,Usability,simpl,simplest,147,"/******* Canonical representation *******/; /*; * The default return values from XXH functions are unsigned 32 and 64 bit; * integers.; * This the simplest and fastest format for further post-processing.; *; * However, this leaves open the question of what is the order on the byte level,; * since little and big endian conventions will store the same number differently.; *; * The canonical representation settles this issue by mandating big-endian; * convention, the same convention as human-readable numbers (large digits first).; *; * When writing hash values to storage, sending them over a network, or printing; * them, it's highly recommended to use the canonical representation to ensure; * portability across a wider range of systems, present and future.; *; * The following functions allow transformation of hash values to and from; * canonical format.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:84,Security,hash,hash,84,/*-**********************************************************************; * 64-bit hash; ************************************************************************/,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:454,Energy Efficiency,reduce,reduces,454,"/*!; * XXH64():; * Returns the 64-bit hash of sequence of length @length stored at memory; * address @input.; * @seed can be used to alter the result predictably.; *; * This function usually runs faster on 64-bit systems, but slower on 32-bit; * systems (see benchmark).; *; * Note: XXH3 provides competitive speed for both 32-bit and 64-bit systems,; * and offers true 64/128 bit hash results. It provides a superior level of; * dispersion, and greatly reduces the risks of collisions.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:150,Safety,predict,predictably,150,"/*!; * XXH64():; * Returns the 64-bit hash of sequence of length @length stored at memory; * address @input.; * @seed can be used to alter the result predictably.; *; * This function usually runs faster on 64-bit systems, but slower on 32-bit; * systems (see benchmark).; *; * Note: XXH3 provides competitive speed for both 32-bit and 64-bit systems,; * and offers true 64/128 bit hash results. It provides a superior level of; * dispersion, and greatly reduces the risks of collisions.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:466,Safety,risk,risks,466,"/*!; * XXH64():; * Returns the 64-bit hash of sequence of length @length stored at memory; * address @input.; * @seed can be used to alter the result predictably.; *; * This function usually runs faster on 64-bit systems, but slower on 32-bit; * systems (see benchmark).; *; * Note: XXH3 provides competitive speed for both 32-bit and 64-bit systems,; * and offers true 64/128 bit hash results. It provides a superior level of; * dispersion, and greatly reduces the risks of collisions.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:38,Security,hash,hash,38,"/*!; * XXH64():; * Returns the 64-bit hash of sequence of length @length stored at memory; * address @input.; * @seed can be used to alter the result predictably.; *; * This function usually runs faster on 64-bit systems, but slower on 32-bit; * systems (see benchmark).; *; * Note: XXH3 provides competitive speed for both 32-bit and 64-bit systems,; * and offers true 64/128 bit hash results. It provides a superior level of; * dispersion, and greatly reduces the risks of collisions.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:381,Security,hash,hash,381,"/*!; * XXH64():; * Returns the 64-bit hash of sequence of length @length stored at memory; * address @input.; * @seed can be used to alter the result predictably.; *; * This function usually runs faster on 64-bit systems, but slower on 32-bit; * systems (see benchmark).; *; * Note: XXH3 provides competitive speed for both 32-bit and 64-bit systems,; * and offers true 64/128 bit hash results. It provides a superior level of; * dispersion, and greatly reduces the risks of collisions.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:259,Testability,benchmark,benchmark,259,"/*!; * XXH64():; * Returns the 64-bit hash of sequence of length @length stored at memory; * address @input.; * @seed can be used to alter the result predictably.; *; * This function usually runs faster on 64-bit systems, but slower on 32-bit; * systems (see benchmark).; *; * Note: XXH3 provides competitive speed for both 32-bit and 64-bit systems,; * and offers true 64/128 bit hash results. It provides a superior level of; * dispersion, and greatly reduces the risks of collisions.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1406,Energy Efficiency,reduce,reduces,1406,"ation; * - Improved 32-bit viability; *; * Speed analysis methodology is explained here:; *; * https://fastcompression.blogspot.com/2019/03/presenting-xxh3.html; *; * In general, expect XXH3 to run about ~2x faster on large inputs and >3x; * faster on small ones compared to XXH64, though exact differences depend on; * the platform.; *; * The algorithm is portable: Like XXH32 and XXH64, it generates the same hash; * on all platforms.; *; * It benefits greatly from SIMD and 64-bit arithmetic, but does not require it.; *; * Almost all 32-bit and 64-bit targets that can run XXH32 smoothly can run; * XXH3 at competitive speeds, even if XXH64 runs slowly. Further details are; * explained in the implementation.; *; * Optimized implementations are provided for AVX512, AVX2, SSE2, NEON, POWER8,; * ZVector and scalar targets. This can be controlled with the XXH_VECTOR macro.; *; * XXH3 offers 2 variants, _64bits and _128bits.; * When only 64 bits are needed, prefer calling the _64bits variant, as it; * reduces the amount of mixing, resulting in faster speed on small inputs.; *; * It's also generally simpler to manipulate a scalar return type than a struct.; *; * The 128-bit version adds additional strength, but it is slightly slower.; *; * The XXH3 algorithm is still in development.; * The results it produces may still change in future versions.; *; * Results produced by v0.7.x are not comparable with results from v0.7.y.; * However, the API is completely stable, and it can safely be used for; * ephemeral data (local sessions).; *; * Avoid storing values in long-term storage until the algorithm is finalized.; * XXH3's return values will be officially finalized upon reaching v0.8.0.; *; * After which, return values of XXH3 and XXH128 will no longer change in; * future versions.; *; * The API supports one-shot hashing, streaming mode, and custom secrets.; */; /* XXH3_64bits():; * default 64-bit variant, using default secret and default seed of 0.; * It's the fastest variant. */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:705,Integrability,depend,depend,705,"/*-**********************************************************************; * XXH3 64-bit variant; ************************************************************************/; /* ************************************************************************; * XXH3 is a new hash algorithm featuring:; * - Improved speed for both small and large inputs; * - True 64-bit and 128-bit outputs; * - SIMD acceleration; * - Improved 32-bit viability; *; * Speed analysis methodology is explained here:; *; * https://fastcompression.blogspot.com/2019/03/presenting-xxh3.html; *; * In general, expect XXH3 to run about ~2x faster on large inputs and >3x; * faster on small ones compared to XXH64, though exact differences depend on; * the platform.; *; * The algorithm is portable: Like XXH32 and XXH64, it generates the same hash; * on all platforms.; *; * It benefits greatly from SIMD and 64-bit arithmetic, but does not require it.; *; * Almost all 32-bit and 64-bit targets that can run XXH32 smoothly can run; * XXH3 at competitive speeds, even if XXH64 runs slowly. Further details are; * explained in the implementation.; *; * Optimized implementations are provided for AVX512, AVX2, SSE2, NEON, POWER8,; * ZVector and scalar targets. This can be controlled with the XXH_VECTOR macro.; *; * XXH3 offers 2 variants, _64bits and _128bits.; * When only 64 bits are needed, prefer calling the _64bits variant, as it; * reduces the amount of mixing, resulting in faster speed on small inputs.; *; * It's also generally simpler to manipulate a scalar return type than a struct.; *; * The 128-bit version adds additional strength, but it is slightly slower.; *; * The XXH3 algorithm is still in development.; * The results it produces may still change in future versions.; *; * Results produced by v0.7.x are not comparable with results from v0.7.y.; * However, the API is completely stable, and it can safely be used for; * ephemeral data (local sessions).; *; * Avoid storing values in long-term storage until the a",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:755,Modifiability,portab,portable,755,"/*-**********************************************************************; * XXH3 64-bit variant; ************************************************************************/; /* ************************************************************************; * XXH3 is a new hash algorithm featuring:; * - Improved speed for both small and large inputs; * - True 64-bit and 128-bit outputs; * - SIMD acceleration; * - Improved 32-bit viability; *; * Speed analysis methodology is explained here:; *; * https://fastcompression.blogspot.com/2019/03/presenting-xxh3.html; *; * In general, expect XXH3 to run about ~2x faster on large inputs and >3x; * faster on small ones compared to XXH64, though exact differences depend on; * the platform.; *; * The algorithm is portable: Like XXH32 and XXH64, it generates the same hash; * on all platforms.; *; * It benefits greatly from SIMD and 64-bit arithmetic, but does not require it.; *; * Almost all 32-bit and 64-bit targets that can run XXH32 smoothly can run; * XXH3 at competitive speeds, even if XXH64 runs slowly. Further details are; * explained in the implementation.; *; * Optimized implementations are provided for AVX512, AVX2, SSE2, NEON, POWER8,; * ZVector and scalar targets. This can be controlled with the XXH_VECTOR macro.; *; * XXH3 offers 2 variants, _64bits and _128bits.; * When only 64 bits are needed, prefer calling the _64bits variant, as it; * reduces the amount of mixing, resulting in faster speed on small inputs.; *; * It's also generally simpler to manipulate a scalar return type than a struct.; *; * The 128-bit version adds additional strength, but it is slightly slower.; *; * The XXH3 algorithm is still in development.; * The results it produces may still change in future versions.; *; * Results produced by v0.7.x are not comparable with results from v0.7.y.; * However, the API is completely stable, and it can safely be used for; * ephemeral data (local sessions).; *; * Avoid storing values in long-term storage until the a",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1118,Performance,Optimiz,Optimized,1118,"**/; /* ************************************************************************; * XXH3 is a new hash algorithm featuring:; * - Improved speed for both small and large inputs; * - True 64-bit and 128-bit outputs; * - SIMD acceleration; * - Improved 32-bit viability; *; * Speed analysis methodology is explained here:; *; * https://fastcompression.blogspot.com/2019/03/presenting-xxh3.html; *; * In general, expect XXH3 to run about ~2x faster on large inputs and >3x; * faster on small ones compared to XXH64, though exact differences depend on; * the platform.; *; * The algorithm is portable: Like XXH32 and XXH64, it generates the same hash; * on all platforms.; *; * It benefits greatly from SIMD and 64-bit arithmetic, but does not require it.; *; * Almost all 32-bit and 64-bit targets that can run XXH32 smoothly can run; * XXH3 at competitive speeds, even if XXH64 runs slowly. Further details are; * explained in the implementation.; *; * Optimized implementations are provided for AVX512, AVX2, SSE2, NEON, POWER8,; * ZVector and scalar targets. This can be controlled with the XXH_VECTOR macro.; *; * XXH3 offers 2 variants, _64bits and _128bits.; * When only 64 bits are needed, prefer calling the _64bits variant, as it; * reduces the amount of mixing, resulting in faster speed on small inputs.; *; * It's also generally simpler to manipulate a scalar return type than a struct.; *; * The 128-bit version adds additional strength, but it is slightly slower.; *; * The XXH3 algorithm is still in development.; * The results it produces may still change in future versions.; *; * Results produced by v0.7.x are not comparable with results from v0.7.y.; * However, the API is completely stable, and it can safely be used for; * ephemeral data (local sessions).; *; * Avoid storing values in long-term storage until the algorithm is finalized.; * XXH3's return values will be officially finalized upon reaching v0.8.0.; *; * After which, return values of XXH3 and XXH128 will no longer ch",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1887,Safety,safe,safely,1887,"ation; * - Improved 32-bit viability; *; * Speed analysis methodology is explained here:; *; * https://fastcompression.blogspot.com/2019/03/presenting-xxh3.html; *; * In general, expect XXH3 to run about ~2x faster on large inputs and >3x; * faster on small ones compared to XXH64, though exact differences depend on; * the platform.; *; * The algorithm is portable: Like XXH32 and XXH64, it generates the same hash; * on all platforms.; *; * It benefits greatly from SIMD and 64-bit arithmetic, but does not require it.; *; * Almost all 32-bit and 64-bit targets that can run XXH32 smoothly can run; * XXH3 at competitive speeds, even if XXH64 runs slowly. Further details are; * explained in the implementation.; *; * Optimized implementations are provided for AVX512, AVX2, SSE2, NEON, POWER8,; * ZVector and scalar targets. This can be controlled with the XXH_VECTOR macro.; *; * XXH3 offers 2 variants, _64bits and _128bits.; * When only 64 bits are needed, prefer calling the _64bits variant, as it; * reduces the amount of mixing, resulting in faster speed on small inputs.; *; * It's also generally simpler to manipulate a scalar return type than a struct.; *; * The 128-bit version adds additional strength, but it is slightly slower.; *; * The XXH3 algorithm is still in development.; * The results it produces may still change in future versions.; *; * Results produced by v0.7.x are not comparable with results from v0.7.y.; * However, the API is completely stable, and it can safely be used for; * ephemeral data (local sessions).; *; * Avoid storing values in long-term storage until the algorithm is finalized.; * XXH3's return values will be officially finalized upon reaching v0.8.0.; *; * After which, return values of XXH3 and XXH128 will no longer change in; * future versions.; *; * The API supports one-shot hashing, streaming mode, and custom secrets.; */; /* XXH3_64bits():; * default 64-bit variant, using default secret and default seed of 0.; * It's the fastest variant. */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1948,Safety,Avoid,Avoid,1948,"ation; * - Improved 32-bit viability; *; * Speed analysis methodology is explained here:; *; * https://fastcompression.blogspot.com/2019/03/presenting-xxh3.html; *; * In general, expect XXH3 to run about ~2x faster on large inputs and >3x; * faster on small ones compared to XXH64, though exact differences depend on; * the platform.; *; * The algorithm is portable: Like XXH32 and XXH64, it generates the same hash; * on all platforms.; *; * It benefits greatly from SIMD and 64-bit arithmetic, but does not require it.; *; * Almost all 32-bit and 64-bit targets that can run XXH32 smoothly can run; * XXH3 at competitive speeds, even if XXH64 runs slowly. Further details are; * explained in the implementation.; *; * Optimized implementations are provided for AVX512, AVX2, SSE2, NEON, POWER8,; * ZVector and scalar targets. This can be controlled with the XXH_VECTOR macro.; *; * XXH3 offers 2 variants, _64bits and _128bits.; * When only 64 bits are needed, prefer calling the _64bits variant, as it; * reduces the amount of mixing, resulting in faster speed on small inputs.; *; * It's also generally simpler to manipulate a scalar return type than a struct.; *; * The 128-bit version adds additional strength, but it is slightly slower.; *; * The XXH3 algorithm is still in development.; * The results it produces may still change in future versions.; *; * Results produced by v0.7.x are not comparable with results from v0.7.y.; * However, the API is completely stable, and it can safely be used for; * ephemeral data (local sessions).; *; * Avoid storing values in long-term storage until the algorithm is finalized.; * XXH3's return values will be officially finalized upon reaching v0.8.0.; *; * After which, return values of XXH3 and XXH128 will no longer change in; * future versions.; *; * The API supports one-shot hashing, streaming mode, and custom secrets.; */; /* XXH3_64bits():; * default 64-bit variant, using default secret and default seed of 0.; * It's the fastest variant. */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:266,Security,hash,hash,266,"/*-**********************************************************************; * XXH3 64-bit variant; ************************************************************************/; /* ************************************************************************; * XXH3 is a new hash algorithm featuring:; * - Improved speed for both small and large inputs; * - True 64-bit and 128-bit outputs; * - SIMD acceleration; * - Improved 32-bit viability; *; * Speed analysis methodology is explained here:; *; * https://fastcompression.blogspot.com/2019/03/presenting-xxh3.html; *; * In general, expect XXH3 to run about ~2x faster on large inputs and >3x; * faster on small ones compared to XXH64, though exact differences depend on; * the platform.; *; * The algorithm is portable: Like XXH32 and XXH64, it generates the same hash; * on all platforms.; *; * It benefits greatly from SIMD and 64-bit arithmetic, but does not require it.; *; * Almost all 32-bit and 64-bit targets that can run XXH32 smoothly can run; * XXH3 at competitive speeds, even if XXH64 runs slowly. Further details are; * explained in the implementation.; *; * Optimized implementations are provided for AVX512, AVX2, SSE2, NEON, POWER8,; * ZVector and scalar targets. This can be controlled with the XXH_VECTOR macro.; *; * XXH3 offers 2 variants, _64bits and _128bits.; * When only 64 bits are needed, prefer calling the _64bits variant, as it; * reduces the amount of mixing, resulting in faster speed on small inputs.; *; * It's also generally simpler to manipulate a scalar return type than a struct.; *; * The 128-bit version adds additional strength, but it is slightly slower.; *; * The XXH3 algorithm is still in development.; * The results it produces may still change in future versions.; *; * Results produced by v0.7.x are not comparable with results from v0.7.y.; * However, the API is completely stable, and it can safely be used for; * ephemeral data (local sessions).; *; * Avoid storing values in long-term storage until the a",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:809,Security,hash,hash,809,"/*-**********************************************************************; * XXH3 64-bit variant; ************************************************************************/; /* ************************************************************************; * XXH3 is a new hash algorithm featuring:; * - Improved speed for both small and large inputs; * - True 64-bit and 128-bit outputs; * - SIMD acceleration; * - Improved 32-bit viability; *; * Speed analysis methodology is explained here:; *; * https://fastcompression.blogspot.com/2019/03/presenting-xxh3.html; *; * In general, expect XXH3 to run about ~2x faster on large inputs and >3x; * faster on small ones compared to XXH64, though exact differences depend on; * the platform.; *; * The algorithm is portable: Like XXH32 and XXH64, it generates the same hash; * on all platforms.; *; * It benefits greatly from SIMD and 64-bit arithmetic, but does not require it.; *; * Almost all 32-bit and 64-bit targets that can run XXH32 smoothly can run; * XXH3 at competitive speeds, even if XXH64 runs slowly. Further details are; * explained in the implementation.; *; * Optimized implementations are provided for AVX512, AVX2, SSE2, NEON, POWER8,; * ZVector and scalar targets. This can be controlled with the XXH_VECTOR macro.; *; * XXH3 offers 2 variants, _64bits and _128bits.; * When only 64 bits are needed, prefer calling the _64bits variant, as it; * reduces the amount of mixing, resulting in faster speed on small inputs.; *; * It's also generally simpler to manipulate a scalar return type than a struct.; *; * The 128-bit version adds additional strength, but it is slightly slower.; *; * The XXH3 algorithm is still in development.; * The results it produces may still change in future versions.; *; * Results produced by v0.7.x are not comparable with results from v0.7.y.; * However, the API is completely stable, and it can safely be used for; * ephemeral data (local sessions).; *; * Avoid storing values in long-term storage until the a",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:2228,Security,hash,hashing,2228,"ation; * - Improved 32-bit viability; *; * Speed analysis methodology is explained here:; *; * https://fastcompression.blogspot.com/2019/03/presenting-xxh3.html; *; * In general, expect XXH3 to run about ~2x faster on large inputs and >3x; * faster on small ones compared to XXH64, though exact differences depend on; * the platform.; *; * The algorithm is portable: Like XXH32 and XXH64, it generates the same hash; * on all platforms.; *; * It benefits greatly from SIMD and 64-bit arithmetic, but does not require it.; *; * Almost all 32-bit and 64-bit targets that can run XXH32 smoothly can run; * XXH3 at competitive speeds, even if XXH64 runs slowly. Further details are; * explained in the implementation.; *; * Optimized implementations are provided for AVX512, AVX2, SSE2, NEON, POWER8,; * ZVector and scalar targets. This can be controlled with the XXH_VECTOR macro.; *; * XXH3 offers 2 variants, _64bits and _128bits.; * When only 64 bits are needed, prefer calling the _64bits variant, as it; * reduces the amount of mixing, resulting in faster speed on small inputs.; *; * It's also generally simpler to manipulate a scalar return type than a struct.; *; * The 128-bit version adds additional strength, but it is slightly slower.; *; * The XXH3 algorithm is still in development.; * The results it produces may still change in future versions.; *; * Results produced by v0.7.x are not comparable with results from v0.7.y.; * However, the API is completely stable, and it can safely be used for; * ephemeral data (local sessions).; *; * Avoid storing values in long-term storage until the algorithm is finalized.; * XXH3's return values will be officially finalized upon reaching v0.8.0.; *; * After which, return values of XXH3 and XXH128 will no longer change in; * future versions.; *; * The API supports one-shot hashing, streaming mode, and custom secrets.; */; /* XXH3_64bits():; * default 64-bit variant, using default secret and default seed of 0.; * It's the fastest variant. */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1505,Usability,simpl,simpler,1505,"ation; * - Improved 32-bit viability; *; * Speed analysis methodology is explained here:; *; * https://fastcompression.blogspot.com/2019/03/presenting-xxh3.html; *; * In general, expect XXH3 to run about ~2x faster on large inputs and >3x; * faster on small ones compared to XXH64, though exact differences depend on; * the platform.; *; * The algorithm is portable: Like XXH32 and XXH64, it generates the same hash; * on all platforms.; *; * It benefits greatly from SIMD and 64-bit arithmetic, but does not require it.; *; * Almost all 32-bit and 64-bit targets that can run XXH32 smoothly can run; * XXH3 at competitive speeds, even if XXH64 runs slowly. Further details are; * explained in the implementation.; *; * Optimized implementations are provided for AVX512, AVX2, SSE2, NEON, POWER8,; * ZVector and scalar targets. This can be controlled with the XXH_VECTOR macro.; *; * XXH3 offers 2 variants, _64bits and _128bits.; * When only 64 bits are needed, prefer calling the _64bits variant, as it; * reduces the amount of mixing, resulting in faster speed on small inputs.; *; * It's also generally simpler to manipulate a scalar return type than a struct.; *; * The 128-bit version adds additional strength, but it is slightly slower.; *; * The XXH3 algorithm is still in development.; * The results it produces may still change in future versions.; *; * Results produced by v0.7.x are not comparable with results from v0.7.y.; * However, the API is completely stable, and it can safely be used for; * ephemeral data (local sessions).; *; * Avoid storing values in long-term storage until the algorithm is finalized.; * XXH3's return values will be officially finalized upon reaching v0.8.0.; *; * After which, return values of XXH3 and XXH128 will no longer change in; * future versions.; *; * The API supports one-shot hashing, streaming mode, and custom secrets.; */; /* XXH3_64bits():; * default 64-bit variant, using default secret and default seed of 0.; * It's the fastest variant. */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:344,Integrability,depend,depends,344,"/*; * XXH3_64bits_withSecret():; * It's possible to provide any blob of bytes as a ""secret"" to generate the hash.; * This makes it more difficult for an external actor to prepare an intentional collision.; * The main condition is that secretSize *must* be large enough (>= XXH3_SECRET_SIZE_MIN).; * However, the quality of produced hash values depends on secret's entropy.; * Technically, the secret must look like a bunch of random bytes.; * Avoid ""trivial"" or structured data such as repeated sequences or a text document.; * Whenever unsure about the ""randomness"" of the blob of bytes,; * consider relabelling it as a ""custom seed"" instead,; * and employ ""XXH3_generateSecret()"" (see below); * to generate a high entropy secret derived from the custom seed.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:443,Safety,Avoid,Avoid,443,"/*; * XXH3_64bits_withSecret():; * It's possible to provide any blob of bytes as a ""secret"" to generate the hash.; * This makes it more difficult for an external actor to prepare an intentional collision.; * The main condition is that secretSize *must* be large enough (>= XXH3_SECRET_SIZE_MIN).; * However, the quality of produced hash values depends on secret's entropy.; * Technically, the secret must look like a bunch of random bytes.; * Avoid ""trivial"" or structured data such as repeated sequences or a text document.; * Whenever unsure about the ""randomness"" of the blob of bytes,; * consider relabelling it as a ""custom seed"" instead,; * and employ ""XXH3_generateSecret()"" (see below); * to generate a high entropy secret derived from the custom seed.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:108,Security,hash,hash,108,"/*; * XXH3_64bits_withSecret():; * It's possible to provide any blob of bytes as a ""secret"" to generate the hash.; * This makes it more difficult for an external actor to prepare an intentional collision.; * The main condition is that secretSize *must* be large enough (>= XXH3_SECRET_SIZE_MIN).; * However, the quality of produced hash values depends on secret's entropy.; * Technically, the secret must look like a bunch of random bytes.; * Avoid ""trivial"" or structured data such as repeated sequences or a text document.; * Whenever unsure about the ""randomness"" of the blob of bytes,; * consider relabelling it as a ""custom seed"" instead,; * and employ ""XXH3_generateSecret()"" (see below); * to generate a high entropy secret derived from the custom seed.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:332,Security,hash,hash,332,"/*; * XXH3_64bits_withSecret():; * It's possible to provide any blob of bytes as a ""secret"" to generate the hash.; * This makes it more difficult for an external actor to prepare an intentional collision.; * The main condition is that secretSize *must* be large enough (>= XXH3_SECRET_SIZE_MIN).; * However, the quality of produced hash values depends on secret's entropy.; * Technically, the secret must look like a bunch of random bytes.; * Avoid ""trivial"" or structured data such as repeated sequences or a text document.; * Whenever unsure about the ""randomness"" of the blob of bytes,; * consider relabelling it as a ""custom seed"" instead,; * and employ ""XXH3_generateSecret()"" (see below); * to generate a high entropy secret derived from the custom seed.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:60,Availability,mainten,maintenance,60,"/******* Streaming *******/; /*; * Streaming requires state maintenance.; * This operation costs memory and CPU.; * As a consequence, streaming is slower than one-shot hashing.; * For better performance, prefer one-shot functions whenever applicable.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:191,Performance,perform,performance,191,"/******* Streaming *******/; /*; * Streaming requires state maintenance.; * This operation costs memory and CPU.; * As a consequence, streaming is slower than one-shot hashing.; * For better performance, prefer one-shot functions whenever applicable.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:168,Security,hash,hashing,168,"/******* Streaming *******/; /*; * Streaming requires state maintenance.; * This operation costs memory and CPU.; * As a consequence, streaming is slower than one-shot hashing.; * For better performance, prefer one-shot functions whenever applicable.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:230,Integrability,depend,depends,230,"/*; * XXH3_64bits_reset_withSecret():; * `secret` is referenced, it _must outlive_ the hash streaming session.; * Similar to one-shot API, `secretSize` must be >= `XXH3_SECRET_SIZE_MIN`,; * and the quality of produced hash values depends on secret's entropy; * (secret's content should look like a bunch of random bytes).; * When in doubt about the randomness of a candidate `secret`,; * consider employing `XXH3_generateSecret()` instead (see below).; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:87,Security,hash,hash,87,"/*; * XXH3_64bits_reset_withSecret():; * `secret` is referenced, it _must outlive_ the hash streaming session.; * Similar to one-shot API, `secretSize` must be >= `XXH3_SECRET_SIZE_MIN`,; * and the quality of produced hash values depends on secret's entropy; * (secret's content should look like a bunch of random bytes).; * When in doubt about the randomness of a candidate `secret`,; * consider employing `XXH3_generateSecret()` instead (see below).; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:218,Security,hash,hash,218,"/*; * XXH3_64bits_reset_withSecret():; * `secret` is referenced, it _must outlive_ the hash streaming session.; * Similar to one-shot API, `secretSize` must be >= `XXH3_SECRET_SIZE_MIN`,; * and the quality of produced hash values depends on secret's entropy; * (secret's content should look like a bunch of random bytes).; * When in doubt about the randomness of a candidate `secret`,; * consider employing `XXH3_generateSecret()` instead (see below).; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:60,Availability,mainten,maintenance,60,"/******* Streaming *******/; /*; * Streaming requires state maintenance.; * This operation costs memory and CPU.; * As a consequence, streaming is slower than one-shot hashing.; * For better performance, prefer one-shot functions whenever applicable.; *; * XXH3_128bits uses the same XXH3_state_t as XXH3_64bits().; * Use already declared XXH3_createState() and XXH3_freeState().; *; * All reset and streaming functions have same meaning as their 64-bit counterpart.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:191,Performance,perform,performance,191,"/******* Streaming *******/; /*; * Streaming requires state maintenance.; * This operation costs memory and CPU.; * As a consequence, streaming is slower than one-shot hashing.; * For better performance, prefer one-shot functions whenever applicable.; *; * XXH3_128bits uses the same XXH3_state_t as XXH3_64bits().; * Use already declared XXH3_createState() and XXH3_freeState().; *; * All reset and streaming functions have same meaning as their 64-bit counterpart.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:168,Security,hash,hashing,168,"/******* Streaming *******/; /*; * Streaming requires state maintenance.; * This operation costs memory and CPU.; * As a consequence, streaming is slower than one-shot hashing.; * For better performance, prefer one-shot functions whenever applicable.; *; * XXH3_128bits uses the same XXH3_state_t as XXH3_64bits().; * Use already declared XXH3_createState() and XXH3_freeState().; *; * All reset and streaming functions have same meaning as their 64-bit counterpart.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:187,Performance,perform,performance,187,"/* Following helper functions make it possible to compare XXH128_hast_t values.; * Since XXH128_hash_t is a structure, this capability is not offered by the language.; * Note: For better performance, these functions can be inlined using XXH_INLINE_ALL */; /*!; * XXH128_isEqual():; * Return: 1 if `h1` and `h2` are equal, 0 if they are not.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:609,Security,access,access,609,"/* ****************************************************************************; * This section contains declarations which are not guaranteed to remain stable.; * They may change in future versions, becoming incompatible with a different; * version of the library.; * These declarations should only be used with static linking.; * Never use them in association with dynamic linking!; ***************************************************************************** */; /*; * These definitions are only present to allow static allocation; * of XXH states, on stack or in a struct, for example.; * Never **ever** access their members directly.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:699,Energy Efficiency,allocate,allocated,699,"/* === Experimental API === */; /* Symbols defined below must be considered tied to a specific library version. */; /*; * XXH3_generateSecret():; *; * Derive a high-entropy secret from any user-defined content, named customSeed.; * The generated secret can be used in combination with `*_withSecret()` functions.; * The `_withSecret()` variants are useful to provide a higher level of protection than 64-bit seed,; * as it becomes much more difficult for an external actor to guess how to impact the calculation logic.; *; * The function accepts as input a custom seed of any length and any content,; * and derives from it a high-entropy secret of length XXH3_SECRET_DEFAULT_SIZE; * into an already allocated buffer secretBuffer.; * The generated secret is _always_ XXH_SECRET_DEFAULT_SIZE bytes long.; *; * The generated secret can then be used with any `*_withSecret()` variant.; * Functions `XXH3_128bits_withSecret()`, `XXH3_64bits_withSecret()`,; * `XXH3_128bits_reset_withSecret()` and `XXH3_64bits_reset_withSecret()`; * are part of this list. They all accept a `secret` parameter; * which must be very long for implementation reasons (>= XXH3_SECRET_SIZE_MIN); * _and_ feature very high entropy (consist of random-looking bytes).; * These conditions can be a high bar to meet, so; * this function can be used to generate a secret of proper quality.; *; * customSeed can be anything. It can have any size, even small ones,; * and its content can be anything, even stupidly ""low entropy"" source such as a bunch of zeroes.; * The resulting `secret` will nonetheless provide all expected qualities.; *; * Supplying NULL as the customSeed copies the default secret into `secretBuffer`.; * When customSeedSize > 0, supplying NULL as customSeed is undefined behavior.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:512,Testability,log,logic,512,"/* === Experimental API === */; /* Symbols defined below must be considered tied to a specific library version. */; /*; * XXH3_generateSecret():; *; * Derive a high-entropy secret from any user-defined content, named customSeed.; * The generated secret can be used in combination with `*_withSecret()` functions.; * The `_withSecret()` variants are useful to provide a higher level of protection than 64-bit seed,; * as it becomes much more difficult for an external actor to guess how to impact the calculation logic.; *; * The function accepts as input a custom seed of any length and any content,; * and derives from it a high-entropy secret of length XXH3_SECRET_DEFAULT_SIZE; * into an already allocated buffer secretBuffer.; * The generated secret is _always_ XXH_SECRET_DEFAULT_SIZE bytes long.; *; * The generated secret can then be used with any `*_withSecret()` variant.; * Functions `XXH3_128bits_withSecret()`, `XXH3_64bits_withSecret()`,; * `XXH3_128bits_reset_withSecret()` and `XXH3_64bits_reset_withSecret()`; * are part of this list. They all accept a `secret` parameter; * which must be very long for implementation reasons (>= XXH3_SECRET_SIZE_MIN); * _and_ feature very high entropy (consist of random-looking bytes).; * These conditions can be a high bar to meet, so; * this function can be used to generate a secret of proper quality.; *; * customSeed can be anything. It can have any size, even small ones,; * and its content can be anything, even stupidly ""low entropy"" source such as a bunch of zeroes.; * The resulting `secret` will nonetheless provide all expected qualities.; *; * Supplying NULL as the customSeed copies the default secret into `secretBuffer`.; * When customSeedSize > 0, supplying NULL as customSeed is undefined behavior.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:3,Usability,simpl,simple,3,/* simple short-cut to pre-selected XXH3_128bits variant */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1089,Availability,avail,available,1089,"/* defined(XXH_STATIC_LINKING_ONLY) && !defined(XXHASH_H_STATIC_13879238742) */; /* ======================================================================== */; /* ======================================================================== */; /* ======================================================================== */; /*-**********************************************************************; * xxHash implementation; *-**********************************************************************; * xxHash's implementation used to be hosted inside xxhash.c.; *; * However, inlining requires implementation to be visible to the compiler,; * hence be included alongside the header.; * Previously, implementation was hosted inside xxhash.c,; * which was then #included when inlining was activated.; * This construction created issues with a few build and install systems,; * as it required xxhash.c to be stored in /include directory.; *; * xxHash implementation is now directly integrated within xxhash.h.; * As a consequence, xxhash.c is no longer needed in /include.; *; * xxhash.c is still available and is still useful.; * In a ""normal"" setup, when xxhash is not inlined,; * xxhash.h only exposes the prototypes and public symbols,; * while xxhash.c can be built into an object file xxhash.o; * which can then be linked into the final binary.; ************************************************************************/",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:850,Deployability,install,install,850,"/* defined(XXH_STATIC_LINKING_ONLY) && !defined(XXHASH_H_STATIC_13879238742) */; /* ======================================================================== */; /* ======================================================================== */; /* ======================================================================== */; /*-**********************************************************************; * xxHash implementation; *-**********************************************************************; * xxHash's implementation used to be hosted inside xxhash.c.; *; * However, inlining requires implementation to be visible to the compiler,; * hence be included alongside the header.; * Previously, implementation was hosted inside xxhash.c,; * which was then #included when inlining was activated.; * This construction created issues with a few build and install systems,; * as it required xxhash.c to be stored in /include directory.; *; * xxHash implementation is now directly integrated within xxhash.h.; * As a consequence, xxhash.c is no longer needed in /include.; *; * xxhash.c is still available and is still useful.; * In a ""normal"" setup, when xxhash is not inlined,; * xxhash.h only exposes the prototypes and public symbols,; * while xxhash.c can be built into an object file xxhash.o; * which can then be linked into the final binary.; ************************************************************************/",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:974,Deployability,integrat,integrated,974,"/* defined(XXH_STATIC_LINKING_ONLY) && !defined(XXHASH_H_STATIC_13879238742) */; /* ======================================================================== */; /* ======================================================================== */; /* ======================================================================== */; /*-**********************************************************************; * xxHash implementation; *-**********************************************************************; * xxHash's implementation used to be hosted inside xxhash.c.; *; * However, inlining requires implementation to be visible to the compiler,; * hence be included alongside the header.; * Previously, implementation was hosted inside xxhash.c,; * which was then #included when inlining was activated.; * This construction created issues with a few build and install systems,; * as it required xxhash.c to be stored in /include directory.; *; * xxHash implementation is now directly integrated within xxhash.h.; * As a consequence, xxhash.c is no longer needed in /include.; *; * xxhash.c is still available and is still useful.; * In a ""normal"" setup, when xxhash is not inlined,; * xxhash.h only exposes the prototypes and public symbols,; * while xxhash.c can be built into an object file xxhash.o; * which can then be linked into the final binary.; ************************************************************************/",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:974,Integrability,integrat,integrated,974,"/* defined(XXH_STATIC_LINKING_ONLY) && !defined(XXHASH_H_STATIC_13879238742) */; /* ======================================================================== */; /* ======================================================================== */; /* ======================================================================== */; /*-**********************************************************************; * xxHash implementation; *-**********************************************************************; * xxHash's implementation used to be hosted inside xxhash.c.; *; * However, inlining requires implementation to be visible to the compiler,; * hence be included alongside the header.; * Previously, implementation was hosted inside xxhash.c,; * which was then #included when inlining was activated.; * This construction created issues with a few build and install systems,; * as it required xxhash.c to be stored in /include directory.; *; * xxHash implementation is now directly integrated within xxhash.h.; * As a consequence, xxhash.c is no longer needed in /include.; *; * xxhash.c is still available and is still useful.; * In a ""normal"" setup, when xxhash is not inlined,; * xxhash.h only exposes the prototypes and public symbols,; * while xxhash.c can be built into an object file xxhash.o; * which can then be linked into the final binary.; ************************************************************************/",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1189,Security,expose,exposes,1189,"/* defined(XXH_STATIC_LINKING_ONLY) && !defined(XXHASH_H_STATIC_13879238742) */; /* ======================================================================== */; /* ======================================================================== */; /* ======================================================================== */; /*-**********************************************************************; * xxHash implementation; *-**********************************************************************; * xxHash's implementation used to be hosted inside xxhash.c.; *; * However, inlining requires implementation to be visible to the compiler,; * hence be included alongside the header.; * Previously, implementation was hosted inside xxhash.c,; * which was then #included when inlining was activated.; * This construction created issues with a few build and install systems,; * as it required xxhash.c to be stored in /include directory.; *; * xxHash implementation is now directly integrated within xxhash.h.; * As a consequence, xxhash.c is no longer needed in /include.; *; * xxhash.c is still available and is still useful.; * In a ""normal"" setup, when xxhash is not inlined,; * xxhash.h only exposes the prototypes and public symbols,; * while xxhash.c can be built into an object file xxhash.o; * which can then be linked into the final binary.; ************************************************************************/",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:577,Integrability,depend,depends,577,"/* *************************************; * Tuning parameters; ***************************************/; /*!; * XXH_FORCE_MEMORY_ACCESS:; * By default, access to unaligned memory is controlled by `memcpy()`, which is; * safe and portable.; *; * Unfortunately, on some target/compiler combinations, the generated assembly; * is sub-optimal.; *; * The below switch allow selection of a different access method; * in the search for improved performance.; * Method 0 (default):; * Use `memcpy()`. Safe and portable. Default.; * Method 1:; * `__attribute__((packed))` statement. It depends on compiler extensions; * and is therefore not portable.; * This method is safe if your compiler supports it, and *generally* as; * fast or faster than `memcpy`.; * Method 2:; * Direct access via cast. This method doesn't depend on the compiler but; * violates the C standard.; * It can generate buggy code on targets which do not support unaligned; * memory accesses.; * But in some circumstances, it's the only known way to get the most; * performance (example: GCC + ARMv6); * Method 3:; * Byteshift. This can generate the best code on old compilers which don't; * inline small `memcpy()` calls, and it might also be faster on big-endian; * systems which lack a native byteswap instruction.; * See https://stackoverflow.com/a/32095106/646947 for details.; * Prefer these methods in priority order (0 > 1 > 2 > 3); */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:807,Integrability,depend,depend,807,"/* *************************************; * Tuning parameters; ***************************************/; /*!; * XXH_FORCE_MEMORY_ACCESS:; * By default, access to unaligned memory is controlled by `memcpy()`, which is; * safe and portable.; *; * Unfortunately, on some target/compiler combinations, the generated assembly; * is sub-optimal.; *; * The below switch allow selection of a different access method; * in the search for improved performance.; * Method 0 (default):; * Use `memcpy()`. Safe and portable. Default.; * Method 1:; * `__attribute__((packed))` statement. It depends on compiler extensions; * and is therefore not portable.; * This method is safe if your compiler supports it, and *generally* as; * fast or faster than `memcpy`.; * Method 2:; * Direct access via cast. This method doesn't depend on the compiler but; * violates the C standard.; * It can generate buggy code on targets which do not support unaligned; * memory accesses.; * But in some circumstances, it's the only known way to get the most; * performance (example: GCC + ARMv6); * Method 3:; * Byteshift. This can generate the best code on old compilers which don't; * inline small `memcpy()` calls, and it might also be faster on big-endian; * systems which lack a native byteswap instruction.; * See https://stackoverflow.com/a/32095106/646947 for details.; * Prefer these methods in priority order (0 > 1 > 2 > 3); */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:229,Modifiability,portab,portable,229,"/* *************************************; * Tuning parameters; ***************************************/; /*!; * XXH_FORCE_MEMORY_ACCESS:; * By default, access to unaligned memory is controlled by `memcpy()`, which is; * safe and portable.; *; * Unfortunately, on some target/compiler combinations, the generated assembly; * is sub-optimal.; *; * The below switch allow selection of a different access method; * in the search for improved performance.; * Method 0 (default):; * Use `memcpy()`. Safe and portable. Default.; * Method 1:; * `__attribute__((packed))` statement. It depends on compiler extensions; * and is therefore not portable.; * This method is safe if your compiler supports it, and *generally* as; * fast or faster than `memcpy`.; * Method 2:; * Direct access via cast. This method doesn't depend on the compiler but; * violates the C standard.; * It can generate buggy code on targets which do not support unaligned; * memory accesses.; * But in some circumstances, it's the only known way to get the most; * performance (example: GCC + ARMv6); * Method 3:; * Byteshift. This can generate the best code on old compilers which don't; * inline small `memcpy()` calls, and it might also be faster on big-endian; * systems which lack a native byteswap instruction.; * See https://stackoverflow.com/a/32095106/646947 for details.; * Prefer these methods in priority order (0 > 1 > 2 > 3); */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:502,Modifiability,portab,portable,502,"/* *************************************; * Tuning parameters; ***************************************/; /*!; * XXH_FORCE_MEMORY_ACCESS:; * By default, access to unaligned memory is controlled by `memcpy()`, which is; * safe and portable.; *; * Unfortunately, on some target/compiler combinations, the generated assembly; * is sub-optimal.; *; * The below switch allow selection of a different access method; * in the search for improved performance.; * Method 0 (default):; * Use `memcpy()`. Safe and portable. Default.; * Method 1:; * `__attribute__((packed))` statement. It depends on compiler extensions; * and is therefore not portable.; * This method is safe if your compiler supports it, and *generally* as; * fast or faster than `memcpy`.; * Method 2:; * Direct access via cast. This method doesn't depend on the compiler but; * violates the C standard.; * It can generate buggy code on targets which do not support unaligned; * memory accesses.; * But in some circumstances, it's the only known way to get the most; * performance (example: GCC + ARMv6); * Method 3:; * Byteshift. This can generate the best code on old compilers which don't; * inline small `memcpy()` calls, and it might also be faster on big-endian; * systems which lack a native byteswap instruction.; * See https://stackoverflow.com/a/32095106/646947 for details.; * Prefer these methods in priority order (0 > 1 > 2 > 3); */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:632,Modifiability,portab,portable,632,"/* *************************************; * Tuning parameters; ***************************************/; /*!; * XXH_FORCE_MEMORY_ACCESS:; * By default, access to unaligned memory is controlled by `memcpy()`, which is; * safe and portable.; *; * Unfortunately, on some target/compiler combinations, the generated assembly; * is sub-optimal.; *; * The below switch allow selection of a different access method; * in the search for improved performance.; * Method 0 (default):; * Use `memcpy()`. Safe and portable. Default.; * Method 1:; * `__attribute__((packed))` statement. It depends on compiler extensions; * and is therefore not portable.; * This method is safe if your compiler supports it, and *generally* as; * fast or faster than `memcpy`.; * Method 2:; * Direct access via cast. This method doesn't depend on the compiler but; * violates the C standard.; * It can generate buggy code on targets which do not support unaligned; * memory accesses.; * But in some circumstances, it's the only known way to get the most; * performance (example: GCC + ARMv6); * Method 3:; * Byteshift. This can generate the best code on old compilers which don't; * inline small `memcpy()` calls, and it might also be faster on big-endian; * systems which lack a native byteswap instruction.; * See https://stackoverflow.com/a/32095106/646947 for details.; * Prefer these methods in priority order (0 > 1 > 2 > 3); */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:438,Performance,perform,performance,438,"/* *************************************; * Tuning parameters; ***************************************/; /*!; * XXH_FORCE_MEMORY_ACCESS:; * By default, access to unaligned memory is controlled by `memcpy()`, which is; * safe and portable.; *; * Unfortunately, on some target/compiler combinations, the generated assembly; * is sub-optimal.; *; * The below switch allow selection of a different access method; * in the search for improved performance.; * Method 0 (default):; * Use `memcpy()`. Safe and portable. Default.; * Method 1:; * `__attribute__((packed))` statement. It depends on compiler extensions; * and is therefore not portable.; * This method is safe if your compiler supports it, and *generally* as; * fast or faster than `memcpy`.; * Method 2:; * Direct access via cast. This method doesn't depend on the compiler but; * violates the C standard.; * It can generate buggy code on targets which do not support unaligned; * memory accesses.; * But in some circumstances, it's the only known way to get the most; * performance (example: GCC + ARMv6); * Method 3:; * Byteshift. This can generate the best code on old compilers which don't; * inline small `memcpy()` calls, and it might also be faster on big-endian; * systems which lack a native byteswap instruction.; * See https://stackoverflow.com/a/32095106/646947 for details.; * Prefer these methods in priority order (0 > 1 > 2 > 3); */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1027,Performance,perform,performance,1027,"/* *************************************; * Tuning parameters; ***************************************/; /*!; * XXH_FORCE_MEMORY_ACCESS:; * By default, access to unaligned memory is controlled by `memcpy()`, which is; * safe and portable.; *; * Unfortunately, on some target/compiler combinations, the generated assembly; * is sub-optimal.; *; * The below switch allow selection of a different access method; * in the search for improved performance.; * Method 0 (default):; * Use `memcpy()`. Safe and portable. Default.; * Method 1:; * `__attribute__((packed))` statement. It depends on compiler extensions; * and is therefore not portable.; * This method is safe if your compiler supports it, and *generally* as; * fast or faster than `memcpy`.; * Method 2:; * Direct access via cast. This method doesn't depend on the compiler but; * violates the C standard.; * It can generate buggy code on targets which do not support unaligned; * memory accesses.; * But in some circumstances, it's the only known way to get the most; * performance (example: GCC + ARMv6); * Method 3:; * Byteshift. This can generate the best code on old compilers which don't; * inline small `memcpy()` calls, and it might also be faster on big-endian; * systems which lack a native byteswap instruction.; * See https://stackoverflow.com/a/32095106/646947 for details.; * Prefer these methods in priority order (0 > 1 > 2 > 3); */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:220,Safety,safe,safe,220,"/* *************************************; * Tuning parameters; ***************************************/; /*!; * XXH_FORCE_MEMORY_ACCESS:; * By default, access to unaligned memory is controlled by `memcpy()`, which is; * safe and portable.; *; * Unfortunately, on some target/compiler combinations, the generated assembly; * is sub-optimal.; *; * The below switch allow selection of a different access method; * in the search for improved performance.; * Method 0 (default):; * Use `memcpy()`. Safe and portable. Default.; * Method 1:; * `__attribute__((packed))` statement. It depends on compiler extensions; * and is therefore not portable.; * This method is safe if your compiler supports it, and *generally* as; * fast or faster than `memcpy`.; * Method 2:; * Direct access via cast. This method doesn't depend on the compiler but; * violates the C standard.; * It can generate buggy code on targets which do not support unaligned; * memory accesses.; * But in some circumstances, it's the only known way to get the most; * performance (example: GCC + ARMv6); * Method 3:; * Byteshift. This can generate the best code on old compilers which don't; * inline small `memcpy()` calls, and it might also be faster on big-endian; * systems which lack a native byteswap instruction.; * See https://stackoverflow.com/a/32095106/646947 for details.; * Prefer these methods in priority order (0 > 1 > 2 > 3); */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:493,Safety,Safe,Safe,493,"/* *************************************; * Tuning parameters; ***************************************/; /*!; * XXH_FORCE_MEMORY_ACCESS:; * By default, access to unaligned memory is controlled by `memcpy()`, which is; * safe and portable.; *; * Unfortunately, on some target/compiler combinations, the generated assembly; * is sub-optimal.; *; * The below switch allow selection of a different access method; * in the search for improved performance.; * Method 0 (default):; * Use `memcpy()`. Safe and portable. Default.; * Method 1:; * `__attribute__((packed))` statement. It depends on compiler extensions; * and is therefore not portable.; * This method is safe if your compiler supports it, and *generally* as; * fast or faster than `memcpy`.; * Method 2:; * Direct access via cast. This method doesn't depend on the compiler but; * violates the C standard.; * It can generate buggy code on targets which do not support unaligned; * memory accesses.; * But in some circumstances, it's the only known way to get the most; * performance (example: GCC + ARMv6); * Method 3:; * Byteshift. This can generate the best code on old compilers which don't; * inline small `memcpy()` calls, and it might also be faster on big-endian; * systems which lack a native byteswap instruction.; * See https://stackoverflow.com/a/32095106/646947 for details.; * Prefer these methods in priority order (0 > 1 > 2 > 3); */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:660,Safety,safe,safe,660,"/* *************************************; * Tuning parameters; ***************************************/; /*!; * XXH_FORCE_MEMORY_ACCESS:; * By default, access to unaligned memory is controlled by `memcpy()`, which is; * safe and portable.; *; * Unfortunately, on some target/compiler combinations, the generated assembly; * is sub-optimal.; *; * The below switch allow selection of a different access method; * in the search for improved performance.; * Method 0 (default):; * Use `memcpy()`. Safe and portable. Default.; * Method 1:; * `__attribute__((packed))` statement. It depends on compiler extensions; * and is therefore not portable.; * This method is safe if your compiler supports it, and *generally* as; * fast or faster than `memcpy`.; * Method 2:; * Direct access via cast. This method doesn't depend on the compiler but; * violates the C standard.; * It can generate buggy code on targets which do not support unaligned; * memory accesses.; * But in some circumstances, it's the only known way to get the most; * performance (example: GCC + ARMv6); * Method 3:; * Byteshift. This can generate the best code on old compilers which don't; * inline small `memcpy()` calls, and it might also be faster on big-endian; * systems which lack a native byteswap instruction.; * See https://stackoverflow.com/a/32095106/646947 for details.; * Prefer these methods in priority order (0 > 1 > 2 > 3); */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:152,Security,access,access,152,"/* *************************************; * Tuning parameters; ***************************************/; /*!; * XXH_FORCE_MEMORY_ACCESS:; * By default, access to unaligned memory is controlled by `memcpy()`, which is; * safe and portable.; *; * Unfortunately, on some target/compiler combinations, the generated assembly; * is sub-optimal.; *; * The below switch allow selection of a different access method; * in the search for improved performance.; * Method 0 (default):; * Use `memcpy()`. Safe and portable. Default.; * Method 1:; * `__attribute__((packed))` statement. It depends on compiler extensions; * and is therefore not portable.; * This method is safe if your compiler supports it, and *generally* as; * fast or faster than `memcpy`.; * Method 2:; * Direct access via cast. This method doesn't depend on the compiler but; * violates the C standard.; * It can generate buggy code on targets which do not support unaligned; * memory accesses.; * But in some circumstances, it's the only known way to get the most; * performance (example: GCC + ARMv6); * Method 3:; * Byteshift. This can generate the best code on old compilers which don't; * inline small `memcpy()` calls, and it might also be faster on big-endian; * systems which lack a native byteswap instruction.; * See https://stackoverflow.com/a/32095106/646947 for details.; * Prefer these methods in priority order (0 > 1 > 2 > 3); */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:394,Security,access,access,394,"/* *************************************; * Tuning parameters; ***************************************/; /*!; * XXH_FORCE_MEMORY_ACCESS:; * By default, access to unaligned memory is controlled by `memcpy()`, which is; * safe and portable.; *; * Unfortunately, on some target/compiler combinations, the generated assembly; * is sub-optimal.; *; * The below switch allow selection of a different access method; * in the search for improved performance.; * Method 0 (default):; * Use `memcpy()`. Safe and portable. Default.; * Method 1:; * `__attribute__((packed))` statement. It depends on compiler extensions; * and is therefore not portable.; * This method is safe if your compiler supports it, and *generally* as; * fast or faster than `memcpy`.; * Method 2:; * Direct access via cast. This method doesn't depend on the compiler but; * violates the C standard.; * It can generate buggy code on targets which do not support unaligned; * memory accesses.; * But in some circumstances, it's the only known way to get the most; * performance (example: GCC + ARMv6); * Method 3:; * Byteshift. This can generate the best code on old compilers which don't; * inline small `memcpy()` calls, and it might also be faster on big-endian; * systems which lack a native byteswap instruction.; * See https://stackoverflow.com/a/32095106/646947 for details.; * Prefer these methods in priority order (0 > 1 > 2 > 3); */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:770,Security,access,access,770,"/* *************************************; * Tuning parameters; ***************************************/; /*!; * XXH_FORCE_MEMORY_ACCESS:; * By default, access to unaligned memory is controlled by `memcpy()`, which is; * safe and portable.; *; * Unfortunately, on some target/compiler combinations, the generated assembly; * is sub-optimal.; *; * The below switch allow selection of a different access method; * in the search for improved performance.; * Method 0 (default):; * Use `memcpy()`. Safe and portable. Default.; * Method 1:; * `__attribute__((packed))` statement. It depends on compiler extensions; * and is therefore not portable.; * This method is safe if your compiler supports it, and *generally* as; * fast or faster than `memcpy`.; * Method 2:; * Direct access via cast. This method doesn't depend on the compiler but; * violates the C standard.; * It can generate buggy code on targets which do not support unaligned; * memory accesses.; * But in some circumstances, it's the only known way to get the most; * performance (example: GCC + ARMv6); * Method 3:; * Byteshift. This can generate the best code on old compilers which don't; * inline small `memcpy()` calls, and it might also be faster on big-endian; * systems which lack a native byteswap instruction.; * See https://stackoverflow.com/a/32095106/646947 for details.; * Prefer these methods in priority order (0 > 1 > 2 > 3); */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:944,Security,access,accesses,944,"/* *************************************; * Tuning parameters; ***************************************/; /*!; * XXH_FORCE_MEMORY_ACCESS:; * By default, access to unaligned memory is controlled by `memcpy()`, which is; * safe and portable.; *; * Unfortunately, on some target/compiler combinations, the generated assembly; * is sub-optimal.; *; * The below switch allow selection of a different access method; * in the search for improved performance.; * Method 0 (default):; * Use `memcpy()`. Safe and portable. Default.; * Method 1:; * `__attribute__((packed))` statement. It depends on compiler extensions; * and is therefore not portable.; * This method is safe if your compiler supports it, and *generally* as; * fast or faster than `memcpy`.; * Method 2:; * Direct access via cast. This method doesn't depend on the compiler but; * violates the C standard.; * It can generate buggy code on targets which do not support unaligned; * memory accesses.; * But in some circumstances, it's the only known way to get the most; * performance (example: GCC + ARMv6); * Method 3:; * Byteshift. This can generate the best code on old compilers which don't; * inline small `memcpy()` calls, and it might also be faster on big-endian; * systems which lack a native byteswap instruction.; * See https://stackoverflow.com/a/32095106/646947 for details.; * Prefer these methods in priority order (0 > 1 > 2 > 3); */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:54,Performance,perform,performance,54,"/*!; * XXH_FORCE_ALIGN_CHECK:; * This is an important performance trick; * for architectures without decent unaligned memory access performance.; * It checks for input alignment, and when conditions are met,; * uses a ""fast path"" employing direct 32-bit/64-bit read,; * resulting in _dramatically faster_ read speed.; *; * The check costs one initial branch per hash, which is generally negligible, but not zero.; * Moreover, it's not useful to generate binary for an additional code path; * if memory access uses same instruction for both aligned and unaligned adresses.; *; * In these cases, the alignment check can be removed by setting this macro to 0.; * Then the code will always use unaligned memory access.; * Align check is automatically disabled on x86, x64 & arm64,; * which are platforms known to offer good unaligned memory accesses performance.; *; * This option does not affect XXH3 (only XXH32 and XXH64).; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:132,Performance,perform,performance,132,"/*!; * XXH_FORCE_ALIGN_CHECK:; * This is an important performance trick; * for architectures without decent unaligned memory access performance.; * It checks for input alignment, and when conditions are met,; * uses a ""fast path"" employing direct 32-bit/64-bit read,; * resulting in _dramatically faster_ read speed.; *; * The check costs one initial branch per hash, which is generally negligible, but not zero.; * Moreover, it's not useful to generate binary for an additional code path; * if memory access uses same instruction for both aligned and unaligned adresses.; *; * In these cases, the alignment check can be removed by setting this macro to 0.; * Then the code will always use unaligned memory access.; * Align check is automatically disabled on x86, x64 & arm64,; * which are platforms known to offer good unaligned memory accesses performance.; *; * This option does not affect XXH3 (only XXH32 and XXH64).; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:846,Performance,perform,performance,846,"/*!; * XXH_FORCE_ALIGN_CHECK:; * This is an important performance trick; * for architectures without decent unaligned memory access performance.; * It checks for input alignment, and when conditions are met,; * uses a ""fast path"" employing direct 32-bit/64-bit read,; * resulting in _dramatically faster_ read speed.; *; * The check costs one initial branch per hash, which is generally negligible, but not zero.; * Moreover, it's not useful to generate binary for an additional code path; * if memory access uses same instruction for both aligned and unaligned adresses.; *; * In these cases, the alignment check can be removed by setting this macro to 0.; * Then the code will always use unaligned memory access.; * Align check is automatically disabled on x86, x64 & arm64,; * which are platforms known to offer good unaligned memory accesses performance.; *; * This option does not affect XXH3 (only XXH32 and XXH64).; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:125,Security,access,access,125,"/*!; * XXH_FORCE_ALIGN_CHECK:; * This is an important performance trick; * for architectures without decent unaligned memory access performance.; * It checks for input alignment, and when conditions are met,; * uses a ""fast path"" employing direct 32-bit/64-bit read,; * resulting in _dramatically faster_ read speed.; *; * The check costs one initial branch per hash, which is generally negligible, but not zero.; * Moreover, it's not useful to generate binary for an additional code path; * if memory access uses same instruction for both aligned and unaligned adresses.; *; * In these cases, the alignment check can be removed by setting this macro to 0.; * Then the code will always use unaligned memory access.; * Align check is automatically disabled on x86, x64 & arm64,; * which are platforms known to offer good unaligned memory accesses performance.; *; * This option does not affect XXH3 (only XXH32 and XXH64).; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:362,Security,hash,hash,362,"/*!; * XXH_FORCE_ALIGN_CHECK:; * This is an important performance trick; * for architectures without decent unaligned memory access performance.; * It checks for input alignment, and when conditions are met,; * uses a ""fast path"" employing direct 32-bit/64-bit read,; * resulting in _dramatically faster_ read speed.; *; * The check costs one initial branch per hash, which is generally negligible, but not zero.; * Moreover, it's not useful to generate binary for an additional code path; * if memory access uses same instruction for both aligned and unaligned adresses.; *; * In these cases, the alignment check can be removed by setting this macro to 0.; * Then the code will always use unaligned memory access.; * Align check is automatically disabled on x86, x64 & arm64,; * which are platforms known to offer good unaligned memory accesses performance.; *; * This option does not affect XXH3 (only XXH32 and XXH64).; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:502,Security,access,access,502,"/*!; * XXH_FORCE_ALIGN_CHECK:; * This is an important performance trick; * for architectures without decent unaligned memory access performance.; * It checks for input alignment, and when conditions are met,; * uses a ""fast path"" employing direct 32-bit/64-bit read,; * resulting in _dramatically faster_ read speed.; *; * The check costs one initial branch per hash, which is generally negligible, but not zero.; * Moreover, it's not useful to generate binary for an additional code path; * if memory access uses same instruction for both aligned and unaligned adresses.; *; * In these cases, the alignment check can be removed by setting this macro to 0.; * Then the code will always use unaligned memory access.; * Align check is automatically disabled on x86, x64 & arm64,; * which are platforms known to offer good unaligned memory accesses performance.; *; * This option does not affect XXH3 (only XXH32 and XXH64).; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:707,Security,access,access,707,"/*!; * XXH_FORCE_ALIGN_CHECK:; * This is an important performance trick; * for architectures without decent unaligned memory access performance.; * It checks for input alignment, and when conditions are met,; * uses a ""fast path"" employing direct 32-bit/64-bit read,; * resulting in _dramatically faster_ read speed.; *; * The check costs one initial branch per hash, which is generally negligible, but not zero.; * Moreover, it's not useful to generate binary for an additional code path; * if memory access uses same instruction for both aligned and unaligned adresses.; *; * In these cases, the alignment check can be removed by setting this macro to 0.; * Then the code will always use unaligned memory access.; * Align check is automatically disabled on x86, x64 & arm64,; * which are platforms known to offer good unaligned memory accesses performance.; *; * This option does not affect XXH3 (only XXH32 and XXH64).; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:837,Security,access,accesses,837,"/*!; * XXH_FORCE_ALIGN_CHECK:; * This is an important performance trick; * for architectures without decent unaligned memory access performance.; * It checks for input alignment, and when conditions are met,; * uses a ""fast path"" employing direct 32-bit/64-bit read,; * resulting in _dramatically faster_ read speed.; *; * The check costs one initial branch per hash, which is generally negligible, but not zero.; * Moreover, it's not useful to generate binary for an additional code path; * if memory access uses same instruction for both aligned and unaligned adresses.; *; * In these cases, the alignment check can be removed by setting this macro to 0.; * Then the code will always use unaligned memory access.; * Align check is automatically disabled on x86, x64 & arm64,; * which are platforms known to offer good unaligned memory accesses performance.; *; * This option does not affect XXH3 (only XXH32 and XXH64).; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:175,Energy Efficiency,reduce,reduced,175,"/*!; * XXH_NO_INLINE_HINTS:; *; * By default, xxHash tries to force the compiler to inline almost all internal; * functions.; *; * This can usually improve performance due to reduced jumping and improved; * constant folding, but significantly increases the size of the binary which; * might not be favorable.; *; * Additionally, sometimes the forced inlining can be detrimental to performance,; * depending on the architecture.; *; * XXH_NO_INLINE_HINTS marks all internal functions as static, giving the; * compiler full control on whether to inline or not.; *; * When not optimizing (-O0), optimizing for size (-Os, -Oz), or using; * -fno-inline with GCC or Clang, this will automatically be defined.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:397,Integrability,depend,depending,397,"/*!; * XXH_NO_INLINE_HINTS:; *; * By default, xxHash tries to force the compiler to inline almost all internal; * functions.; *; * This can usually improve performance due to reduced jumping and improved; * constant folding, but significantly increases the size of the binary which; * might not be favorable.; *; * Additionally, sometimes the forced inlining can be detrimental to performance,; * depending on the architecture.; *; * XXH_NO_INLINE_HINTS marks all internal functions as static, giving the; * compiler full control on whether to inline or not.; *; * When not optimizing (-O0), optimizing for size (-Os, -Oz), or using; * -fno-inline with GCC or Clang, this will automatically be defined.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:156,Performance,perform,performance,156,"/*!; * XXH_NO_INLINE_HINTS:; *; * By default, xxHash tries to force the compiler to inline almost all internal; * functions.; *; * This can usually improve performance due to reduced jumping and improved; * constant folding, but significantly increases the size of the binary which; * might not be favorable.; *; * Additionally, sometimes the forced inlining can be detrimental to performance,; * depending on the architecture.; *; * XXH_NO_INLINE_HINTS marks all internal functions as static, giving the; * compiler full control on whether to inline or not.; *; * When not optimizing (-O0), optimizing for size (-Os, -Oz), or using; * -fno-inline with GCC or Clang, this will automatically be defined.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:381,Performance,perform,performance,381,"/*!; * XXH_NO_INLINE_HINTS:; *; * By default, xxHash tries to force the compiler to inline almost all internal; * functions.; *; * This can usually improve performance due to reduced jumping and improved; * constant folding, but significantly increases the size of the binary which; * might not be favorable.; *; * Additionally, sometimes the forced inlining can be detrimental to performance,; * depending on the architecture.; *; * XXH_NO_INLINE_HINTS marks all internal functions as static, giving the; * compiler full control on whether to inline or not.; *; * When not optimizing (-O0), optimizing for size (-Os, -Oz), or using; * -fno-inline with GCC or Clang, this will automatically be defined.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:574,Performance,optimiz,optimizing,574,"/*!; * XXH_NO_INLINE_HINTS:; *; * By default, xxHash tries to force the compiler to inline almost all internal; * functions.; *; * This can usually improve performance due to reduced jumping and improved; * constant folding, but significantly increases the size of the binary which; * might not be favorable.; *; * Additionally, sometimes the forced inlining can be detrimental to performance,; * depending on the architecture.; *; * XXH_NO_INLINE_HINTS marks all internal functions as static, giving the; * compiler full control on whether to inline or not.; *; * When not optimizing (-O0), optimizing for size (-Os, -Oz), or using; * -fno-inline with GCC or Clang, this will automatically be defined.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:592,Performance,optimiz,optimizing,592,"/*!; * XXH_NO_INLINE_HINTS:; *; * By default, xxHash tries to force the compiler to inline almost all internal; * functions.; *; * This can usually improve performance due to reduced jumping and improved; * constant folding, but significantly increases the size of the binary which; * might not be favorable.; *; * Additionally, sometimes the forced inlining can be detrimental to performance,; * depending on the architecture.; *; * XXH_NO_INLINE_HINTS marks all internal functions as static, giving the; * compiler full control on whether to inline or not.; *; * When not optimizing (-O0), optimizing for size (-Os, -Oz), or using; * -fno-inline with GCC or Clang, this will automatically be defined.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:206,Integrability,rout,routines,206,/* *************************************; * Includes & Memory related functions; ***************************************/; /*!; * Modify the local functions below should you wish to use; * different memory routines for malloc() and free(); */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:19,Modifiability,variab,variable,19,/* note: use after variable declarations */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:14,Security,access,access,14,/* *** Memory access *** */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:26,Security,access,access,26,/*; * Force direct memory access. Only works on CPU which support unaligned memory; * access in hardware.; */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:86,Security,access,access,86,/*; * Force direct memory access. Only works on CPU which support unaligned memory; * access in hardware.; */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:30,Safety,safe,safer,30,"/*; * __pack instructions are safer but compiler specific, hence potentially; * problematic for some compilers.; *; * Currently only defined for GCC and ICC.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:44,Energy Efficiency,efficient,efficient,44,/*; * Portable and safe solution. Generally efficient.; * see: https://stackoverflow.com/a/32095106/646947; */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:6,Modifiability,Portab,Portable,6,/*; * Portable and safe solution. Generally efficient.; * see: https://stackoverflow.com/a/32095106/646947; */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:19,Safety,safe,safe,19,/*; * Portable and safe solution. Generally efficient.; * see: https://stackoverflow.com/a/32095106/646947; */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:13,Safety,detect,detect,13,"/*; * Try to detect endianness automatically, to avoid the nonstandard behavior; * in `XXH_isLittleEndian()`; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:49,Safety,avoid,avoid,49,"/*; * Try to detect endianness automatically, to avoid the nonstandard behavior; * in `XXH_isLittleEndian()`; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:14,Testability,test,test,14,"/*; * runtime test, presumed to simplify to a constant by compiler; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:32,Usability,simpl,simplify,32,"/*; * runtime test, presumed to simplify to a constant by compiler; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:6,Modifiability,Portab,Portable,6,/*; * Portable and well-defined behavior.; * Don't use static: it is detrimental to performance.; */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:84,Performance,perform,performance,84,/*; * Portable and well-defined behavior.; * Don't use static: it is detrimental to performance.; */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:62,Performance,perform,performance,62,"/* Note: although _rotl exists for minGW (GCC under windows), performance seems poor */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:68,Performance,load,load,68,/*; * XXH_FORCE_MEMORY_ACCESS==3 is an endian-independent byteshift load.; *; * This is ideal for older compilers which don't inline memcpy.; */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:81,Security,hash,hash,81,/* *******************************************************************; * 32-bit hash functions; *********************************************************************/,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:409,Availability,down,down,409,"/*; * UGLY HACK:; * This inline assembly hack forces acc into a normal register. This is the; * only thing that prevents GCC and Clang from autovectorizing the XXH32; * loop (pragmas and attributes don't work for some resason) without globally; * disabling SSE4.1.; *; * The reason we want to avoid vectorization is because despite working on; * 4 integers at a time, there are multiple factors slowing XXH32 down on; * SSE4:; * - There's a ridiculous amount of lag from pmulld (10 cycles of latency on; * newer chips!) making it slightly slower to multiply four integers at; * once compared to four integers independently. Even when pmulld was; * fastest, Sandy/Ivy Bridge, it is still not worth it to go into SSE; * just to multiply unless doing a long operation.; *; * - Four instructions are required to rotate,; * movqda tmp, v // not required with VEX encoding; * pslld tmp, 13 // tmp <<= 13; * psrld v, 19 // x >>= 19; * por v, tmp // x |= tmp; * compared to one for scalar:; * roll v, 13 // reliably fast across the board; * shldl v, v, 13 // Sandy Bridge and later prefer this for some reason; *; * - Instruction level parallelism is actually more beneficial here because; * the SIMD actually serializes this operation: While v1 is rotating, v2; * can load data, while v3 can multiply. SSE forces them to operate; * together.; *; * How this hack works:; * __asm__("""" // Declare an assembly block but don't declare any instructions; * : // However, as an Input/Output Operand,; * ""+r"" // constrain a read/write operand (+) as a general purpose register (r).; * (acc) // and set acc as the operand; * );; *; * Because of the 'r', the compiler has promised that seed will be in a; * general purpose register and the '+' says that it will be 'read/write',; * so it has to assume it has changed. It is like volatile without all the; * loads and stores.; *; * Since the argument has to be in a normal register (not an SSE register),; * each time XXH32_round is called, it is impossible to vectorize",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:999,Availability,reliab,reliably,999,"UGLY HACK:; * This inline assembly hack forces acc into a normal register. This is the; * only thing that prevents GCC and Clang from autovectorizing the XXH32; * loop (pragmas and attributes don't work for some resason) without globally; * disabling SSE4.1.; *; * The reason we want to avoid vectorization is because despite working on; * 4 integers at a time, there are multiple factors slowing XXH32 down on; * SSE4:; * - There's a ridiculous amount of lag from pmulld (10 cycles of latency on; * newer chips!) making it slightly slower to multiply four integers at; * once compared to four integers independently. Even when pmulld was; * fastest, Sandy/Ivy Bridge, it is still not worth it to go into SSE; * just to multiply unless doing a long operation.; *; * - Four instructions are required to rotate,; * movqda tmp, v // not required with VEX encoding; * pslld tmp, 13 // tmp <<= 13; * psrld v, 19 // x >>= 19; * por v, tmp // x |= tmp; * compared to one for scalar:; * roll v, 13 // reliably fast across the board; * shldl v, v, 13 // Sandy Bridge and later prefer this for some reason; *; * - Instruction level parallelism is actually more beneficial here because; * the SIMD actually serializes this operation: While v1 is rotating, v2; * can load data, while v3 can multiply. SSE forces them to operate; * together.; *; * How this hack works:; * __asm__("""" // Declare an assembly block but don't declare any instructions; * : // However, as an Input/Output Operand,; * ""+r"" // constrain a read/write operand (+) as a general purpose register (r).; * (acc) // and set acc as the operand; * );; *; * Because of the 'r', the compiler has promised that seed will be in a; * general purpose register and the '+' says that it will be 'read/write',; * so it has to assume it has changed. It is like volatile without all the; * loads and stores.; *; * Since the argument has to be in a normal register (not an SSE register),; * each time XXH32_round is called, it is impossible to vectorize.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:667,Integrability,Bridg,Bridge,667,"/*; * UGLY HACK:; * This inline assembly hack forces acc into a normal register. This is the; * only thing that prevents GCC and Clang from autovectorizing the XXH32; * loop (pragmas and attributes don't work for some resason) without globally; * disabling SSE4.1.; *; * The reason we want to avoid vectorization is because despite working on; * 4 integers at a time, there are multiple factors slowing XXH32 down on; * SSE4:; * - There's a ridiculous amount of lag from pmulld (10 cycles of latency on; * newer chips!) making it slightly slower to multiply four integers at; * once compared to four integers independently. Even when pmulld was; * fastest, Sandy/Ivy Bridge, it is still not worth it to go into SSE; * just to multiply unless doing a long operation.; *; * - Four instructions are required to rotate,; * movqda tmp, v // not required with VEX encoding; * pslld tmp, 13 // tmp <<= 13; * psrld v, 19 // x >>= 19; * por v, tmp // x |= tmp; * compared to one for scalar:; * roll v, 13 // reliably fast across the board; * shldl v, v, 13 // Sandy Bridge and later prefer this for some reason; *; * - Instruction level parallelism is actually more beneficial here because; * the SIMD actually serializes this operation: While v1 is rotating, v2; * can load data, while v3 can multiply. SSE forces them to operate; * together.; *; * How this hack works:; * __asm__("""" // Declare an assembly block but don't declare any instructions; * : // However, as an Input/Output Operand,; * ""+r"" // constrain a read/write operand (+) as a general purpose register (r).; * (acc) // and set acc as the operand; * );; *; * Because of the 'r', the compiler has promised that seed will be in a; * general purpose register and the '+' says that it will be 'read/write',; * so it has to assume it has changed. It is like volatile without all the; * loads and stores.; *; * Since the argument has to be in a normal register (not an SSE register),; * each time XXH32_round is called, it is impossible to vectorize",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1057,Integrability,Bridg,Bridge,1057,"UGLY HACK:; * This inline assembly hack forces acc into a normal register. This is the; * only thing that prevents GCC and Clang from autovectorizing the XXH32; * loop (pragmas and attributes don't work for some resason) without globally; * disabling SSE4.1.; *; * The reason we want to avoid vectorization is because despite working on; * 4 integers at a time, there are multiple factors slowing XXH32 down on; * SSE4:; * - There's a ridiculous amount of lag from pmulld (10 cycles of latency on; * newer chips!) making it slightly slower to multiply four integers at; * once compared to four integers independently. Even when pmulld was; * fastest, Sandy/Ivy Bridge, it is still not worth it to go into SSE; * just to multiply unless doing a long operation.; *; * - Four instructions are required to rotate,; * movqda tmp, v // not required with VEX encoding; * pslld tmp, 13 // tmp <<= 13; * psrld v, 19 // x >>= 19; * por v, tmp // x |= tmp; * compared to one for scalar:; * roll v, 13 // reliably fast across the board; * shldl v, v, 13 // Sandy Bridge and later prefer this for some reason; *; * - Instruction level parallelism is actually more beneficial here because; * the SIMD actually serializes this operation: While v1 is rotating, v2; * can load data, while v3 can multiply. SSE forces them to operate; * together.; *; * How this hack works:; * __asm__("""" // Declare an assembly block but don't declare any instructions; * : // However, as an Input/Output Operand,; * ""+r"" // constrain a read/write operand (+) as a general purpose register (r).; * (acc) // and set acc as the operand; * );; *; * Because of the 'r', the compiler has promised that seed will be in a; * general purpose register and the '+' says that it will be 'read/write',; * so it has to assume it has changed. It is like volatile without all the; * loads and stores.; *; * Since the argument has to be in a normal register (not an SSE register),; * each time XXH32_round is called, it is impossible to vectorize.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:492,Performance,latency,latency,492,"/*; * UGLY HACK:; * This inline assembly hack forces acc into a normal register. This is the; * only thing that prevents GCC and Clang from autovectorizing the XXH32; * loop (pragmas and attributes don't work for some resason) without globally; * disabling SSE4.1.; *; * The reason we want to avoid vectorization is because despite working on; * 4 integers at a time, there are multiple factors slowing XXH32 down on; * SSE4:; * - There's a ridiculous amount of lag from pmulld (10 cycles of latency on; * newer chips!) making it slightly slower to multiply four integers at; * once compared to four integers independently. Even when pmulld was; * fastest, Sandy/Ivy Bridge, it is still not worth it to go into SSE; * just to multiply unless doing a long operation.; *; * - Four instructions are required to rotate,; * movqda tmp, v // not required with VEX encoding; * pslld tmp, 13 // tmp <<= 13; * psrld v, 19 // x >>= 19; * por v, tmp // x |= tmp; * compared to one for scalar:; * roll v, 13 // reliably fast across the board; * shldl v, v, 13 // Sandy Bridge and later prefer this for some reason; *; * - Instruction level parallelism is actually more beneficial here because; * the SIMD actually serializes this operation: While v1 is rotating, v2; * can load data, while v3 can multiply. SSE forces them to operate; * together.; *; * How this hack works:; * __asm__("""" // Declare an assembly block but don't declare any instructions; * : // However, as an Input/Output Operand,; * ""+r"" // constrain a read/write operand (+) as a general purpose register (r).; * (acc) // and set acc as the operand; * );; *; * Because of the 'r', the compiler has promised that seed will be in a; * general purpose register and the '+' says that it will be 'read/write',; * so it has to assume it has changed. It is like volatile without all the; * loads and stores.; *; * Since the argument has to be in a normal register (not an SSE register),; * each time XXH32_round is called, it is impossible to vectorize",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1261,Performance,load,load,1261,"UGLY HACK:; * This inline assembly hack forces acc into a normal register. This is the; * only thing that prevents GCC and Clang from autovectorizing the XXH32; * loop (pragmas and attributes don't work for some resason) without globally; * disabling SSE4.1.; *; * The reason we want to avoid vectorization is because despite working on; * 4 integers at a time, there are multiple factors slowing XXH32 down on; * SSE4:; * - There's a ridiculous amount of lag from pmulld (10 cycles of latency on; * newer chips!) making it slightly slower to multiply four integers at; * once compared to four integers independently. Even when pmulld was; * fastest, Sandy/Ivy Bridge, it is still not worth it to go into SSE; * just to multiply unless doing a long operation.; *; * - Four instructions are required to rotate,; * movqda tmp, v // not required with VEX encoding; * pslld tmp, 13 // tmp <<= 13; * psrld v, 19 // x >>= 19; * por v, tmp // x |= tmp; * compared to one for scalar:; * roll v, 13 // reliably fast across the board; * shldl v, v, 13 // Sandy Bridge and later prefer this for some reason; *; * - Instruction level parallelism is actually more beneficial here because; * the SIMD actually serializes this operation: While v1 is rotating, v2; * can load data, while v3 can multiply. SSE forces them to operate; * together.; *; * How this hack works:; * __asm__("""" // Declare an assembly block but don't declare any instructions; * : // However, as an Input/Output Operand,; * ""+r"" // constrain a read/write operand (+) as a general purpose register (r).; * (acc) // and set acc as the operand; * );; *; * Because of the 'r', the compiler has promised that seed will be in a; * general purpose register and the '+' says that it will be 'read/write',; * so it has to assume it has changed. It is like volatile without all the; * loads and stores.; *; * Since the argument has to be in a normal register (not an SSE register),; * each time XXH32_round is called, it is impossible to vectorize.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1839,Performance,load,loads,1839,"UGLY HACK:; * This inline assembly hack forces acc into a normal register. This is the; * only thing that prevents GCC and Clang from autovectorizing the XXH32; * loop (pragmas and attributes don't work for some resason) without globally; * disabling SSE4.1.; *; * The reason we want to avoid vectorization is because despite working on; * 4 integers at a time, there are multiple factors slowing XXH32 down on; * SSE4:; * - There's a ridiculous amount of lag from pmulld (10 cycles of latency on; * newer chips!) making it slightly slower to multiply four integers at; * once compared to four integers independently. Even when pmulld was; * fastest, Sandy/Ivy Bridge, it is still not worth it to go into SSE; * just to multiply unless doing a long operation.; *; * - Four instructions are required to rotate,; * movqda tmp, v // not required with VEX encoding; * pslld tmp, 13 // tmp <<= 13; * psrld v, 19 // x >>= 19; * por v, tmp // x |= tmp; * compared to one for scalar:; * roll v, 13 // reliably fast across the board; * shldl v, v, 13 // Sandy Bridge and later prefer this for some reason; *; * - Instruction level parallelism is actually more beneficial here because; * the SIMD actually serializes this operation: While v1 is rotating, v2; * can load data, while v3 can multiply. SSE forces them to operate; * together.; *; * How this hack works:; * __asm__("""" // Declare an assembly block but don't declare any instructions; * : // However, as an Input/Output Operand,; * ""+r"" // constrain a read/write operand (+) as a general purpose register (r).; * (acc) // and set acc as the operand; * );; *; * Because of the 'r', the compiler has promised that seed will be in a; * general purpose register and the '+' says that it will be 'read/write',; * so it has to assume it has changed. It is like volatile without all the; * loads and stores.; *; * Since the argument has to be in a normal register (not an SSE register),; * each time XXH32_round is called, it is impossible to vectorize.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:293,Safety,avoid,avoid,293,"/*; * UGLY HACK:; * This inline assembly hack forces acc into a normal register. This is the; * only thing that prevents GCC and Clang from autovectorizing the XXH32; * loop (pragmas and attributes don't work for some resason) without globally; * disabling SSE4.1.; *; * The reason we want to avoid vectorization is because despite working on; * 4 integers at a time, there are multiple factors slowing XXH32 down on; * SSE4:; * - There's a ridiculous amount of lag from pmulld (10 cycles of latency on; * newer chips!) making it slightly slower to multiply four integers at; * once compared to four integers independently. Even when pmulld was; * fastest, Sandy/Ivy Bridge, it is still not worth it to go into SSE; * just to multiply unless doing a long operation.; *; * - Four instructions are required to rotate,; * movqda tmp, v // not required with VEX encoding; * pslld tmp, 13 // tmp <<= 13; * psrld v, 19 // x >>= 19; * por v, tmp // x |= tmp; * compared to one for scalar:; * roll v, 13 // reliably fast across the board; * shldl v, v, 13 // Sandy Bridge and later prefer this for some reason; *; * - Instruction level parallelism is actually more beneficial here because; * the SIMD actually serializes this operation: While v1 is rotating, v2; * can load data, while v3 can multiply. SSE forces them to operate; * together.; *; * How this hack works:; * __asm__("""" // Declare an assembly block but don't declare any instructions; * : // However, as an Input/Output Operand,; * ""+r"" // constrain a read/write operand (+) as a general purpose register (r).; * (acc) // and set acc as the operand; * );; *; * Because of the 'r', the compiler has promised that seed will be in a; * general purpose register and the '+' says that it will be 'read/write',; * so it has to assume it has changed. It is like volatile without all the; * loads and stores.; *; * Since the argument has to be in a normal register (not an SSE register),; * each time XXH32_round is called, it is impossible to vectorize",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:33,Availability,mainten,maintenance,33,"/* Simple version, good for code maintenance, but unfortunately slow for small inputs */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:3,Usability,Simpl,Simple,3,"/* Simple version, good for code maintenance, but unfortunately slow for small inputs */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:9,Security,Hash,Hash,9,/******* Hash streaming *******/,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:47,Safety,avoid,avoid,47,/* using a local state to memcpy() in order to avoid strict-aliasing warnings */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:32,Deployability,update,update,32,/* some data left from previous update */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:285,Security,hash,hash,285,"/******* Canonical representation *******/; /*; * The default return values from XXH functions are unsigned 32 and 64 bit; * integers.; *; * The canonical representation uses big endian convention, the same convention; * as human-readable numbers (large digits first).; *; * This way, hash values can be written into a file or buffer, remaining; * comparable across different systems.; *; * The following functions allow transformation of hash values to and from their; * canonical format.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:439,Security,hash,hash,439,"/******* Canonical representation *******/; /*; * The default return values from XXH functions are unsigned 32 and 64 bit; * integers.; *; * The canonical representation uses big endian convention, the same convention; * as human-readable numbers (large digits first).; *; * This way, hash values can be written into a file or buffer, remaining; * comparable across different systems.; *; * The following functions allow transformation of hash values to and from their; * canonical format.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:81,Security,hash,hash,81,/* *******************************************************************; * 64-bit hash functions; *********************************************************************/; /******* Memory access *******/,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:185,Security,access,access,185,/* *******************************************************************; * 64-bit hash functions; *********************************************************************/; /******* Memory access *******/,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:154,Performance,perform,performance,154,"/*!; * XXH_REROLL_XXH64:; * Whether to reroll the XXH64_finalize() loop.; *; * Just like XXH32, we can unroll the XXH64_finalize() loop. This can be a; * performance gain on 64-bit hosts, as only one jump is required.; *; * However, on 32-bit hosts, because arithmetic needs to be done with two 32-bit; * registers, and 64-bit arithmetic needs to be simulated, it isn't beneficial; * to unroll. The code becomes ridiculously large (the largest function in the; * binary on i386!), and rerolling it saves anywhere from 3kB to 20kB. It is; * also slightly faster because it fits into cache better and is more likely; * to be inlined by the compiler.; *; * If XXH_REROLL is defined, this is ignored and the loop is always rerolled.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:582,Performance,cache,cache,582,"/*!; * XXH_REROLL_XXH64:; * Whether to reroll the XXH64_finalize() loop.; *; * Just like XXH32, we can unroll the XXH64_finalize() loop. This can be a; * performance gain on 64-bit hosts, as only one jump is required.; *; * However, on 32-bit hosts, because arithmetic needs to be done with two 32-bit; * registers, and 64-bit arithmetic needs to be simulated, it isn't beneficial; * to unroll. The code becomes ridiculously large (the largest function in the; * binary on i386!), and rerolling it saves anywhere from 3kB to 20kB. It is; * also slightly faster because it fits into cache better and is more likely; * to be inlined by the compiler.; *; * If XXH_REROLL is defined, this is ignored and the loop is always rerolled.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:23,Security,access,access,23,/* Force direct memory access. Only works on CPU which support unaligned memory access in hardware */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:80,Security,access,access,80,/* Force direct memory access. Only works on CPU which support unaligned memory access in hardware */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:30,Safety,safe,safer,30,"/*; * __pack instructions are safer, but compiler specific, hence potentially; * problematic for some compilers.; *; * Currently only defined for GCC and ICC.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:44,Energy Efficiency,efficient,efficient,44,/*; * Portable and safe solution. Generally efficient.; * see: https://stackoverflow.com/a/32095106/646947; */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:6,Modifiability,Portab,Portable,6,/*; * Portable and safe solution. Generally efficient.; * see: https://stackoverflow.com/a/32095106/646947; */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:19,Safety,safe,safe,19,/*; * Portable and safe solution. Generally efficient.; * see: https://stackoverflow.com/a/32095106/646947; */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:65,Performance,load,load,65,/* XXH_FORCE_MEMORY_ACCESS==3 is an endian-independent byteshift load. */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:33,Availability,mainten,maintenance,33,"/* Simple version, good for code maintenance, but unfortunately slow for small inputs */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:3,Usability,Simpl,Simple,3,"/* Simple version, good for code maintenance, but unfortunately slow for small inputs */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:9,Security,Hash,Hash,9,/******* Hash Streaming *******/,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:45,Safety,avoid,avoid,45,/* use a local state to memcpy() in order to avoid strict-aliasing warnings */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:99,Security,hash,hash,99,/* *********************************************************************; * XXH3; * New generation hash designed for speed on small keys and vectorization; ************************************************************************ */; /* === Compiler specifics === */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1146,Energy Efficiency,efficient,efficient,1146,"too many steps on the average 32-bit machine.; *; * For example, these two lines seem similar, and run equally fast on 64-bit:; *; * xxh_u64 x;; * x ^= (x >> 47); // good; * x ^= (x >> 13); // bad; *; * However, to a 32-bit machine, there is a major difference.; *; * x ^= (x >> 47) looks like this:; *; * x.lo ^= (x.hi >> (47 - 32));; *; * while x ^= (x >> 13) looks like this:; *; * // note: funnel shifts are not usually cheap.; * x.lo ^= (x.lo >> 13) | (x.hi << (32 - 13));; * x.hi ^= (x.hi >> 13);; *; * The first one is significantly faster than the second, simply because the; * shift is larger than 32. This means:; * - All the bits we need are in the upper 32 bits, so we can ignore the lower; * 32 bits in the shift.; * - The shift result will always fit in the lower 32 bits, and therefore,; * we can ignore the upper 32 bits in the xor.; *; * Thanks to this optimization, XXH3 only requires these features to be efficient:; *; * - Usable unaligned access; * - A 32-bit or 64-bit ALU; * - If 32-bit, a decent ADC instruction; * - A 32 or 64-bit multiply with a 64-bit result; * - For the 128-bit variant, a decent byteswap helps short inputs.; *; * The first two are already required by XXH32, and almost all 32-bit and 64-bit; * platforms which can run XXH32 can run XXH3 efficiently.; *; * Thumb-1, the classic 16-bit only subset of ARM's instruction set, is one; * notable exception.; *; * First of all, Thumb-1 lacks support for the UMULL instruction which; * performs the important long multiply. This means numerous __aeabi_lmul; * calls.; *; * Second of all, the 8 functional registers are just not enough.; * Setup for __aeabi_lmul, byteshift loads, pointers, and all arithmetic need; * Lo registers, and this shuffling results in thousands more MOVs than A32.; *; * A32 and T32 don't have this limitation. They can access all 14 registers,; * do a 32->64 multiply with UMULL, and the flexible operand allowing free; * shifts is helpful, too.; *; * Therefore, we do a quick sanity c",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1506,Energy Efficiency,efficient,efficiently,1506,"machine, there is a major difference.; *; * x ^= (x >> 47) looks like this:; *; * x.lo ^= (x.hi >> (47 - 32));; *; * while x ^= (x >> 13) looks like this:; *; * // note: funnel shifts are not usually cheap.; * x.lo ^= (x.lo >> 13) | (x.hi << (32 - 13));; * x.hi ^= (x.hi >> 13);; *; * The first one is significantly faster than the second, simply because the; * shift is larger than 32. This means:; * - All the bits we need are in the upper 32 bits, so we can ignore the lower; * 32 bits in the shift.; * - The shift result will always fit in the lower 32 bits, and therefore,; * we can ignore the upper 32 bits in the xor.; *; * Thanks to this optimization, XXH3 only requires these features to be efficient:; *; * - Usable unaligned access; * - A 32-bit or 64-bit ALU; * - If 32-bit, a decent ADC instruction; * - A 32 or 64-bit multiply with a 64-bit result; * - For the 128-bit variant, a decent byteswap helps short inputs.; *; * The first two are already required by XXH32, and almost all 32-bit and 64-bit; * platforms which can run XXH32 can run XXH3 efficiently.; *; * Thumb-1, the classic 16-bit only subset of ARM's instruction set, is one; * notable exception.; *; * First of all, Thumb-1 lacks support for the UMULL instruction which; * performs the important long multiply. This means numerous __aeabi_lmul; * calls.; *; * Second of all, the 8 functional registers are just not enough.; * Setup for __aeabi_lmul, byteshift loads, pointers, and all arithmetic need; * Lo registers, and this shuffling results in thousands more MOVs than A32.; *; * A32 and T32 don't have this limitation. They can access all 14 registers,; * do a 32->64 multiply with UMULL, and the flexible operand allowing free; * shifts is helpful, too.; *; * Therefore, we do a quick sanity check.; *; * If compiling Thumb-1 for a target which supports ARM instructions, we will; * emit a warning, as it is not a ""sane"" platform to compile for.; *; * Usually, if this happens, it is because of an accident and you pr",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:2126,Modifiability,flexible,flexible,2126,"* x.lo ^= (x.lo >> 13) | (x.hi << (32 - 13));; * x.hi ^= (x.hi >> 13);; *; * The first one is significantly faster than the second, simply because the; * shift is larger than 32. This means:; * - All the bits we need are in the upper 32 bits, so we can ignore the lower; * 32 bits in the shift.; * - The shift result will always fit in the lower 32 bits, and therefore,; * we can ignore the upper 32 bits in the xor.; *; * Thanks to this optimization, XXH3 only requires these features to be efficient:; *; * - Usable unaligned access; * - A 32-bit or 64-bit ALU; * - If 32-bit, a decent ADC instruction; * - A 32 or 64-bit multiply with a 64-bit result; * - For the 128-bit variant, a decent byteswap helps short inputs.; *; * The first two are already required by XXH32, and almost all 32-bit and 64-bit; * platforms which can run XXH32 can run XXH3 efficiently.; *; * Thumb-1, the classic 16-bit only subset of ARM's instruction set, is one; * notable exception.; *; * First of all, Thumb-1 lacks support for the UMULL instruction which; * performs the important long multiply. This means numerous __aeabi_lmul; * calls.; *; * Second of all, the 8 functional registers are just not enough.; * Setup for __aeabi_lmul, byteshift loads, pointers, and all arithmetic need; * Lo registers, and this shuffling results in thousands more MOVs than A32.; *; * A32 and T32 don't have this limitation. They can access all 14 registers,; * do a 32->64 multiply with UMULL, and the flexible operand allowing free; * shifts is helpful, too.; *; * Therefore, we do a quick sanity check.; *; * If compiling Thumb-1 for a target which supports ARM instructions, we will; * emit a warning, as it is not a ""sane"" platform to compile for.; *; * Usually, if this happens, it is because of an accident and you probably need; * to specify -march, as you likely meant to compile for a newer architecture.; *; * Credit: large sections of the vectorial and asm source code paths; * have been contributed by @easyaspi314; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1092,Performance,optimiz,optimization,1092,"too many steps on the average 32-bit machine.; *; * For example, these two lines seem similar, and run equally fast on 64-bit:; *; * xxh_u64 x;; * x ^= (x >> 47); // good; * x ^= (x >> 13); // bad; *; * However, to a 32-bit machine, there is a major difference.; *; * x ^= (x >> 47) looks like this:; *; * x.lo ^= (x.hi >> (47 - 32));; *; * while x ^= (x >> 13) looks like this:; *; * // note: funnel shifts are not usually cheap.; * x.lo ^= (x.lo >> 13) | (x.hi << (32 - 13));; * x.hi ^= (x.hi >> 13);; *; * The first one is significantly faster than the second, simply because the; * shift is larger than 32. This means:; * - All the bits we need are in the upper 32 bits, so we can ignore the lower; * 32 bits in the shift.; * - The shift result will always fit in the lower 32 bits, and therefore,; * we can ignore the upper 32 bits in the xor.; *; * Thanks to this optimization, XXH3 only requires these features to be efficient:; *; * - Usable unaligned access; * - A 32-bit or 64-bit ALU; * - If 32-bit, a decent ADC instruction; * - A 32 or 64-bit multiply with a 64-bit result; * - For the 128-bit variant, a decent byteswap helps short inputs.; *; * The first two are already required by XXH32, and almost all 32-bit and 64-bit; * platforms which can run XXH32 can run XXH3 efficiently.; *; * Thumb-1, the classic 16-bit only subset of ARM's instruction set, is one; * notable exception.; *; * First of all, Thumb-1 lacks support for the UMULL instruction which; * performs the important long multiply. This means numerous __aeabi_lmul; * calls.; *; * Second of all, the 8 functional registers are just not enough.; * Setup for __aeabi_lmul, byteshift loads, pointers, and all arithmetic need; * Lo registers, and this shuffling results in thousands more MOVs than A32.; *; * A32 and T32 don't have this limitation. They can access all 14 registers,; * do a 32->64 multiply with UMULL, and the flexible operand allowing free; * shifts is helpful, too.; *; * Therefore, we do a quick sanity c",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1697,Performance,perform,performs,1697,"* x.lo ^= (x.lo >> 13) | (x.hi << (32 - 13));; * x.hi ^= (x.hi >> 13);; *; * The first one is significantly faster than the second, simply because the; * shift is larger than 32. This means:; * - All the bits we need are in the upper 32 bits, so we can ignore the lower; * 32 bits in the shift.; * - The shift result will always fit in the lower 32 bits, and therefore,; * we can ignore the upper 32 bits in the xor.; *; * Thanks to this optimization, XXH3 only requires these features to be efficient:; *; * - Usable unaligned access; * - A 32-bit or 64-bit ALU; * - If 32-bit, a decent ADC instruction; * - A 32 or 64-bit multiply with a 64-bit result; * - For the 128-bit variant, a decent byteswap helps short inputs.; *; * The first two are already required by XXH32, and almost all 32-bit and 64-bit; * platforms which can run XXH32 can run XXH3 efficiently.; *; * Thumb-1, the classic 16-bit only subset of ARM's instruction set, is one; * notable exception.; *; * First of all, Thumb-1 lacks support for the UMULL instruction which; * performs the important long multiply. This means numerous __aeabi_lmul; * calls.; *; * Second of all, the 8 functional registers are just not enough.; * Setup for __aeabi_lmul, byteshift loads, pointers, and all arithmetic need; * Lo registers, and this shuffling results in thousands more MOVs than A32.; *; * A32 and T32 don't have this limitation. They can access all 14 registers,; * do a 32->64 multiply with UMULL, and the flexible operand allowing free; * shifts is helpful, too.; *; * Therefore, we do a quick sanity check.; *; * If compiling Thumb-1 for a target which supports ARM instructions, we will; * emit a warning, as it is not a ""sane"" platform to compile for.; *; * Usually, if this happens, it is because of an accident and you probably need; * to specify -march, as you likely meant to compile for a newer architecture.; *; * Credit: large sections of the vectorial and asm source code paths; * have been contributed by @easyaspi314; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1884,Performance,load,loads,1884,"* x.lo ^= (x.lo >> 13) | (x.hi << (32 - 13));; * x.hi ^= (x.hi >> 13);; *; * The first one is significantly faster than the second, simply because the; * shift is larger than 32. This means:; * - All the bits we need are in the upper 32 bits, so we can ignore the lower; * 32 bits in the shift.; * - The shift result will always fit in the lower 32 bits, and therefore,; * we can ignore the upper 32 bits in the xor.; *; * Thanks to this optimization, XXH3 only requires these features to be efficient:; *; * - Usable unaligned access; * - A 32-bit or 64-bit ALU; * - If 32-bit, a decent ADC instruction; * - A 32 or 64-bit multiply with a 64-bit result; * - For the 128-bit variant, a decent byteswap helps short inputs.; *; * The first two are already required by XXH32, and almost all 32-bit and 64-bit; * platforms which can run XXH32 can run XXH3 efficiently.; *; * Thumb-1, the classic 16-bit only subset of ARM's instruction set, is one; * notable exception.; *; * First of all, Thumb-1 lacks support for the UMULL instruction which; * performs the important long multiply. This means numerous __aeabi_lmul; * calls.; *; * Second of all, the 8 functional registers are just not enough.; * Setup for __aeabi_lmul, byteshift loads, pointers, and all arithmetic need; * Lo registers, and this shuffling results in thousands more MOVs than A32.; *; * A32 and T32 don't have this limitation. They can access all 14 registers,; * do a 32->64 multiply with UMULL, and the flexible operand allowing free; * shifts is helpful, too.; *; * Therefore, we do a quick sanity check.; *; * If compiling Thumb-1 for a target which supports ARM instructions, we will; * emit a warning, as it is not a ""sane"" platform to compile for.; *; * Usually, if this happens, it is because of an accident and you probably need; * to specify -march, as you likely meant to compile for a newer architecture.; *; * Credit: large sections of the vectorial and asm source code paths; * have been contributed by @easyaspi314; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:2215,Safety,sanity check,sanity check,2215,"* x.lo ^= (x.lo >> 13) | (x.hi << (32 - 13));; * x.hi ^= (x.hi >> 13);; *; * The first one is significantly faster than the second, simply because the; * shift is larger than 32. This means:; * - All the bits we need are in the upper 32 bits, so we can ignore the lower; * 32 bits in the shift.; * - The shift result will always fit in the lower 32 bits, and therefore,; * we can ignore the upper 32 bits in the xor.; *; * Thanks to this optimization, XXH3 only requires these features to be efficient:; *; * - Usable unaligned access; * - A 32-bit or 64-bit ALU; * - If 32-bit, a decent ADC instruction; * - A 32 or 64-bit multiply with a 64-bit result; * - For the 128-bit variant, a decent byteswap helps short inputs.; *; * The first two are already required by XXH32, and almost all 32-bit and 64-bit; * platforms which can run XXH32 can run XXH3 efficiently.; *; * Thumb-1, the classic 16-bit only subset of ARM's instruction set, is one; * notable exception.; *; * First of all, Thumb-1 lacks support for the UMULL instruction which; * performs the important long multiply. This means numerous __aeabi_lmul; * calls.; *; * Second of all, the 8 functional registers are just not enough.; * Setup for __aeabi_lmul, byteshift loads, pointers, and all arithmetic need; * Lo registers, and this shuffling results in thousands more MOVs than A32.; *; * A32 and T32 don't have this limitation. They can access all 14 registers,; * do a 32->64 multiply with UMULL, and the flexible operand allowing free; * shifts is helpful, too.; *; * Therefore, we do a quick sanity check.; *; * If compiling Thumb-1 for a target which supports ARM instructions, we will; * emit a warning, as it is not a ""sane"" platform to compile for.; *; * Usually, if this happens, it is because of an accident and you probably need; * to specify -march, as you likely meant to compile for a newer architecture.; *; * Credit: large sections of the vectorial and asm source code paths; * have been contributed by @easyaspi314; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:110,Security,hash,hash,110,"/*; * One goal of XXH3 is to make it fast on both 32-bit and 64-bit, while; * remaining a true 64-bit/128-bit hash function.; *; * This is done by prioritizing a subset of 64-bit operations that can be; * emulated without too many steps on the average 32-bit machine.; *; * For example, these two lines seem similar, and run equally fast on 64-bit:; *; * xxh_u64 x;; * x ^= (x >> 47); // good; * x ^= (x >> 13); // bad; *; * However, to a 32-bit machine, there is a major difference.; *; * x ^= (x >> 47) looks like this:; *; * x.lo ^= (x.hi >> (47 - 32));; *; * while x ^= (x >> 13) looks like this:; *; * // note: funnel shifts are not usually cheap.; * x.lo ^= (x.lo >> 13) | (x.hi << (32 - 13));; * x.hi ^= (x.hi >> 13);; *; * The first one is significantly faster than the second, simply because the; * shift is larger than 32. This means:; * - All the bits we need are in the upper 32 bits, so we can ignore the lower; * 32 bits in the shift.; * - The shift result will always fit in the lower 32 bits, and therefore,; * we can ignore the upper 32 bits in the xor.; *; * Thanks to this optimization, XXH3 only requires these features to be efficient:; *; * - Usable unaligned access; * - A 32-bit or 64-bit ALU; * - If 32-bit, a decent ADC instruction; * - A 32 or 64-bit multiply with a 64-bit result; * - For the 128-bit variant, a decent byteswap helps short inputs.; *; * The first two are already required by XXH32, and almost all 32-bit and 64-bit; * platforms which can run XXH32 can run XXH3 efficiently.; *; * Thumb-1, the classic 16-bit only subset of ARM's instruction set, is one; * notable exception.; *; * First of all, Thumb-1 lacks support for the UMULL instruction which; * performs the important long multiply. This means numerous __aeabi_lmul; * calls.; *; * Second of all, the 8 functional registers are just not enough.; * Setup for __aeabi_lmul, byteshift loads, pointers, and all arithmetic need; * Lo registers, and this shuffling results in thousands more MOVs than A32.",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1182,Security,access,access,1182,"too many steps on the average 32-bit machine.; *; * For example, these two lines seem similar, and run equally fast on 64-bit:; *; * xxh_u64 x;; * x ^= (x >> 47); // good; * x ^= (x >> 13); // bad; *; * However, to a 32-bit machine, there is a major difference.; *; * x ^= (x >> 47) looks like this:; *; * x.lo ^= (x.hi >> (47 - 32));; *; * while x ^= (x >> 13) looks like this:; *; * // note: funnel shifts are not usually cheap.; * x.lo ^= (x.lo >> 13) | (x.hi << (32 - 13));; * x.hi ^= (x.hi >> 13);; *; * The first one is significantly faster than the second, simply because the; * shift is larger than 32. This means:; * - All the bits we need are in the upper 32 bits, so we can ignore the lower; * 32 bits in the shift.; * - The shift result will always fit in the lower 32 bits, and therefore,; * we can ignore the upper 32 bits in the xor.; *; * Thanks to this optimization, XXH3 only requires these features to be efficient:; *; * - Usable unaligned access; * - A 32-bit or 64-bit ALU; * - If 32-bit, a decent ADC instruction; * - A 32 or 64-bit multiply with a 64-bit result; * - For the 128-bit variant, a decent byteswap helps short inputs.; *; * The first two are already required by XXH32, and almost all 32-bit and 64-bit; * platforms which can run XXH32 can run XXH3 efficiently.; *; * Thumb-1, the classic 16-bit only subset of ARM's instruction set, is one; * notable exception.; *; * First of all, Thumb-1 lacks support for the UMULL instruction which; * performs the important long multiply. This means numerous __aeabi_lmul; * calls.; *; * Second of all, the 8 functional registers are just not enough.; * Setup for __aeabi_lmul, byteshift loads, pointers, and all arithmetic need; * Lo registers, and this shuffling results in thousands more MOVs than A32.; *; * A32 and T32 don't have this limitation. They can access all 14 registers,; * do a 32->64 multiply with UMULL, and the flexible operand allowing free; * shifts is helpful, too.; *; * Therefore, we do a quick sanity c",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:2057,Security,access,access,2057,"* x.lo ^= (x.lo >> 13) | (x.hi << (32 - 13));; * x.hi ^= (x.hi >> 13);; *; * The first one is significantly faster than the second, simply because the; * shift is larger than 32. This means:; * - All the bits we need are in the upper 32 bits, so we can ignore the lower; * 32 bits in the shift.; * - The shift result will always fit in the lower 32 bits, and therefore,; * we can ignore the upper 32 bits in the xor.; *; * Thanks to this optimization, XXH3 only requires these features to be efficient:; *; * - Usable unaligned access; * - A 32-bit or 64-bit ALU; * - If 32-bit, a decent ADC instruction; * - A 32 or 64-bit multiply with a 64-bit result; * - For the 128-bit variant, a decent byteswap helps short inputs.; *; * The first two are already required by XXH32, and almost all 32-bit and 64-bit; * platforms which can run XXH32 can run XXH3 efficiently.; *; * Thumb-1, the classic 16-bit only subset of ARM's instruction set, is one; * notable exception.; *; * First of all, Thumb-1 lacks support for the UMULL instruction which; * performs the important long multiply. This means numerous __aeabi_lmul; * calls.; *; * Second of all, the 8 functional registers are just not enough.; * Setup for __aeabi_lmul, byteshift loads, pointers, and all arithmetic need; * Lo registers, and this shuffling results in thousands more MOVs than A32.; *; * A32 and T32 don't have this limitation. They can access all 14 registers,; * do a 32->64 multiply with UMULL, and the flexible operand allowing free; * shifts is helpful, too.; *; * Therefore, we do a quick sanity check.; *; * If compiling Thumb-1 for a target which supports ARM instructions, we will; * emit a warning, as it is not a ""sane"" platform to compile for.; *; * Usually, if this happens, it is because of an accident and you probably need; * to specify -march, as you likely meant to compile for a newer architecture.; *; * Credit: large sections of the vectorial and asm source code paths; * have been contributed by @easyaspi314; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:786,Usability,simpl,simply,786,"/*; * One goal of XXH3 is to make it fast on both 32-bit and 64-bit, while; * remaining a true 64-bit/128-bit hash function.; *; * This is done by prioritizing a subset of 64-bit operations that can be; * emulated without too many steps on the average 32-bit machine.; *; * For example, these two lines seem similar, and run equally fast on 64-bit:; *; * xxh_u64 x;; * x ^= (x >> 47); // good; * x ^= (x >> 13); // bad; *; * However, to a 32-bit machine, there is a major difference.; *; * x ^= (x >> 47) looks like this:; *; * x.lo ^= (x.hi >> (47 - 32));; *; * while x ^= (x >> 13) looks like this:; *; * // note: funnel shifts are not usually cheap.; * x.lo ^= (x.lo >> 13) | (x.hi << (32 - 13));; * x.hi ^= (x.hi >> 13);; *; * The first one is significantly faster than the second, simply because the; * shift is larger than 32. This means:; * - All the bits we need are in the upper 32 bits, so we can ignore the lower; * 32 bits in the shift.; * - The shift result will always fit in the lower 32 bits, and therefore,; * we can ignore the upper 32 bits in the xor.; *; * Thanks to this optimization, XXH3 only requires these features to be efficient:; *; * - Usable unaligned access; * - A 32-bit or 64-bit ALU; * - If 32-bit, a decent ADC instruction; * - A 32 or 64-bit multiply with a 64-bit result; * - For the 128-bit variant, a decent byteswap helps short inputs.; *; * The first two are already required by XXH32, and almost all 32-bit and 64-bit; * platforms which can run XXH32 can run XXH3 efficiently.; *; * Thumb-1, the classic 16-bit only subset of ARM's instruction set, is one; * notable exception.; *; * First of all, Thumb-1 lacks support for the UMULL instruction which; * performs the important long multiply. This means numerous __aeabi_lmul; * calls.; *; * Second of all, the 8 functional registers are just not enough.; * Setup for __aeabi_lmul, byteshift loads, pointers, and all arithmetic need; * Lo registers, and this shuffling results in thousands more MOVs than A32.",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1165,Usability,Usab,Usable,1165,"too many steps on the average 32-bit machine.; *; * For example, these two lines seem similar, and run equally fast on 64-bit:; *; * xxh_u64 x;; * x ^= (x >> 47); // good; * x ^= (x >> 13); // bad; *; * However, to a 32-bit machine, there is a major difference.; *; * x ^= (x >> 47) looks like this:; *; * x.lo ^= (x.hi >> (47 - 32));; *; * while x ^= (x >> 13) looks like this:; *; * // note: funnel shifts are not usually cheap.; * x.lo ^= (x.lo >> 13) | (x.hi << (32 - 13));; * x.hi ^= (x.hi >> 13);; *; * The first one is significantly faster than the second, simply because the; * shift is larger than 32. This means:; * - All the bits we need are in the upper 32 bits, so we can ignore the lower; * 32 bits in the shift.; * - The shift result will always fit in the lower 32 bits, and therefore,; * we can ignore the upper 32 bits in the xor.; *; * Thanks to this optimization, XXH3 only requires these features to be efficient:; *; * - Usable unaligned access; * - A 32-bit or 64-bit ALU; * - If 32-bit, a decent ADC instruction; * - A 32 or 64-bit multiply with a 64-bit result; * - For the 128-bit variant, a decent byteswap helps short inputs.; *; * The first two are already required by XXH32, and almost all 32-bit and 64-bit; * platforms which can run XXH32 can run XXH3 efficiently.; *; * Thumb-1, the classic 16-bit only subset of ARM's instruction set, is one; * notable exception.; *; * First of all, Thumb-1 lacks support for the UMULL instruction which; * performs the important long multiply. This means numerous __aeabi_lmul; * calls.; *; * Second of all, the 8 functional registers are just not enough.; * Setup for __aeabi_lmul, byteshift loads, pointers, and all arithmetic need; * Lo registers, and this shuffling results in thousands more MOVs than A32.; *; * A32 and T32 don't have this limitation. They can access all 14 registers,; * do a 32->64 multiply with UMULL, and the flexible operand allowing free; * shifts is helpful, too.; *; * Therefore, we do a quick sanity c",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:63,Safety,detect,detection,63,/* ==========================================; * Vectorization detection; * ========================================== */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:3,Modifiability,Portab,Portable,3,/* Portable scalar version */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:90,Performance,load,loads,90,"/*; * Controls the alignment of the accumulator,; * for compatibility with aligned vector loads, which are usually faster.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:386,Integrability,Bridg,Bridge,386,"/*; * UGLY HACK:; * GCC usually generates the best code with -O3 for xxHash.; *; * However, when targeting AVX2, it is overzealous in its unrolling resulting; * in code roughly 3/4 the speed of Clang.; *; * There are other issues, such as GCC splitting _mm256_loadu_si256 into; * _mm_loadu_si128 + _mm256_inserti128_si256. This is an optimization which; * only applies to Sandy and Ivy Bridge... which don't even support AVX2.; *; * That is why when compiling the AVX2 version, it is recommended to use either; * -O2 -mavx2 -march=haswell; * or; * -O2 -mavx2 -mno-avx256-split-unaligned-load; * for decent performance, or to use Clang instead.; *; * Fortunately, we can control the first one with a pragma that forces GCC into; * -O2, but the other one we can't control without ""failed to inline always; * inline function due to target mismatch"" warnings.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:334,Performance,optimiz,optimization,334,"/*; * UGLY HACK:; * GCC usually generates the best code with -O3 for xxHash.; *; * However, when targeting AVX2, it is overzealous in its unrolling resulting; * in code roughly 3/4 the speed of Clang.; *; * There are other issues, such as GCC splitting _mm256_loadu_si256 into; * _mm_loadu_si128 + _mm256_inserti128_si256. This is an optimization which; * only applies to Sandy and Ivy Bridge... which don't even support AVX2.; *; * That is why when compiling the AVX2 version, it is recommended to use either; * -O2 -mavx2 -march=haswell; * or; * -O2 -mavx2 -mno-avx256-split-unaligned-load; * for decent performance, or to use Clang instead.; *; * Fortunately, we can control the first one with a pragma that forces GCC into; * -O2, but the other one we can't control without ""failed to inline always; * inline function due to target mismatch"" warnings.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:587,Performance,load,load,587,"/*; * UGLY HACK:; * GCC usually generates the best code with -O3 for xxHash.; *; * However, when targeting AVX2, it is overzealous in its unrolling resulting; * in code roughly 3/4 the speed of Clang.; *; * There are other issues, such as GCC splitting _mm256_loadu_si256 into; * _mm_loadu_si128 + _mm256_inserti128_si256. This is an optimization which; * only applies to Sandy and Ivy Bridge... which don't even support AVX2.; *; * That is why when compiling the AVX2 version, it is recommended to use either; * -O2 -mavx2 -march=haswell; * or; * -O2 -mavx2 -mno-avx256-split-unaligned-load; * for decent performance, or to use Clang instead.; *; * Fortunately, we can control the first one with a pragma that forces GCC into; * -O2, but the other one we can't control without ""failed to inline always; * inline function due to target mismatch"" warnings.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:606,Performance,perform,performance,606,"/*; * UGLY HACK:; * GCC usually generates the best code with -O3 for xxHash.; *; * However, when targeting AVX2, it is overzealous in its unrolling resulting; * in code roughly 3/4 the speed of Clang.; *; * There are other issues, such as GCC splitting _mm256_loadu_si256 into; * _mm_loadu_si128 + _mm256_inserti128_si256. This is an optimization which; * only applies to Sandy and Ivy Bridge... which don't even support AVX2.; *; * That is why when compiling the AVX2 version, it is recommended to use either; * -O2 -mavx2 -march=haswell; * or; * -O2 -mavx2 -mno-avx256-split-unaligned-load; * for decent performance, or to use Clang instead.; *; * Fortunately, we can control the first one with a pragma that forces GCC into; * -O2, but the other one we can't control without ""failed to inline always; * inline function due to target mismatch"" warnings.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:147,Availability,mask,mask,147,"/*; * NEON's setup for vmlal_u32 is a little more complicated than it is on; * SSE2, AVX2, and VSX.; *; * While PMULUDQ and VMULEUW both perform a mask, VMLAL.U32 performs an upcast.; *; * To do the same operation, the 128-bit 'Q' register needs to be split into; * two 64-bit 'D' registers, performing this operation::; *; * [ a | b ]; * | '---------. .--------' |; * | x |; * | .---------' '--------. |; * [ a & 0xFFFFFFFF | b & 0xFFFFFFFF ],[ a >> 32 | b >> 32 ]; *; * Due to significant changes in aarch64, the fastest method for aarch64 is; * completely different than the fastest method for ARMv7-A.; *; * ARMv7-A treats D registers as unions overlaying Q registers, so modifying; * D11 will modify the high half of Q5. This is similar to how modifying AH; * will only affect bits 8-15 of AX on x86.; *; * VZIP takes two registers, and puts even lanes in one register and odd lanes; * in the other.; *; * On ARMv7-A, this strangely modifies both parameters in place instead of; * taking the usual 3-operand form.; *; * Therefore, if we want to do this, we can simply use a D-form VZIP.32 on the; * lower and upper halves of the Q register to end up with the high and low; * halves where we want - all in one instruction.; *; * vzip.32 d10, d11 @ d10 = { d10[0], d11[0] }; d11 = { d10[1], d11[1] }; *; * Unfortunately we need inline assembly for this: Instructions modifying two; * registers at once is not possible in GCC or Clang's IR, and they have to; * create a copy.; *; * aarch64 requires a different approach.; *; * In order to make it easier to write a decent compiler for aarch64, many; * quirks were removed, such as conditional execution.; *; * NEON was also affected by this.; *; * aarch64 cannot access the high bits of a Q-form register, and writes to a; * D-form register zero the high bits, similar to how writes to W-form scalar; * registers (or DWORD registers on x86_64) work.; *; * The formerly free vget_high intrinsics now require a vext (with a few; * exceptions); *; * Ad",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:2464,Availability,down,downcast,2464,"modifies both parameters in place instead of; * taking the usual 3-operand form.; *; * Therefore, if we want to do this, we can simply use a D-form VZIP.32 on the; * lower and upper halves of the Q register to end up with the high and low; * halves where we want - all in one instruction.; *; * vzip.32 d10, d11 @ d10 = { d10[0], d11[0] }; d11 = { d10[1], d11[1] }; *; * Unfortunately we need inline assembly for this: Instructions modifying two; * registers at once is not possible in GCC or Clang's IR, and they have to; * create a copy.; *; * aarch64 requires a different approach.; *; * In order to make it easier to write a decent compiler for aarch64, many; * quirks were removed, such as conditional execution.; *; * NEON was also affected by this.; *; * aarch64 cannot access the high bits of a Q-form register, and writes to a; * D-form register zero the high bits, similar to how writes to W-form scalar; * registers (or DWORD registers on x86_64) work.; *; * The formerly free vget_high intrinsics now require a vext (with a few; * exceptions); *; * Additionally, VZIP was replaced by ZIP1 and ZIP2, which are the equivalent; * of PUNPCKL* and PUNPCKH* in SSE, respectively, in order to only modify one; * operand.; *; * The equivalent of the VZIP.32 on the lower and upper halves would be this; * mess:; *; * ext v2.4s, v0.4s, v0.4s, #2 // v2 = { v0[2], v0[3], v0[0], v0[1] }; * zip1 v1.2s, v0.2s, v2.2s // v1 = { v0[0], v2[0] }; * zip2 v0.2s, v0.2s, v1.2s // v0 = { v0[1], v2[1] }; *; * Instead, we use a literal downcast, vmovn_u64 (XTN), and vshrn_n_u64 (SHRN):; *; * shrn v1.2s, v0.2d, #32 // v1 = (uint32x2_t)(v0 >> 32);; * xtn v0.2s, v0.2d // v0 = (uint32x2_t)(v0 & 0xFFFFFFFF);; *; * This is available on ARMv7-A, but is less efficient than a single VZIP.32.; */; /*; * Function-like macro:; * void XXH_SPLIT_IN_PLACE(uint64x2_t &in, uint32x2_t &outLo, uint32x2_t &outHi); * {; * outLo = (uint32x2_t)(in & 0xFFFFFFFF);; * outHi = (uint32x2_t)(in >> 32);; * in = UNDEFINED;; * }; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:2649,Availability,avail,available,2649,"modifies both parameters in place instead of; * taking the usual 3-operand form.; *; * Therefore, if we want to do this, we can simply use a D-form VZIP.32 on the; * lower and upper halves of the Q register to end up with the high and low; * halves where we want - all in one instruction.; *; * vzip.32 d10, d11 @ d10 = { d10[0], d11[0] }; d11 = { d10[1], d11[1] }; *; * Unfortunately we need inline assembly for this: Instructions modifying two; * registers at once is not possible in GCC or Clang's IR, and they have to; * create a copy.; *; * aarch64 requires a different approach.; *; * In order to make it easier to write a decent compiler for aarch64, many; * quirks were removed, such as conditional execution.; *; * NEON was also affected by this.; *; * aarch64 cannot access the high bits of a Q-form register, and writes to a; * D-form register zero the high bits, similar to how writes to W-form scalar; * registers (or DWORD registers on x86_64) work.; *; * The formerly free vget_high intrinsics now require a vext (with a few; * exceptions); *; * Additionally, VZIP was replaced by ZIP1 and ZIP2, which are the equivalent; * of PUNPCKL* and PUNPCKH* in SSE, respectively, in order to only modify one; * operand.; *; * The equivalent of the VZIP.32 on the lower and upper halves would be this; * mess:; *; * ext v2.4s, v0.4s, v0.4s, #2 // v2 = { v0[2], v0[3], v0[0], v0[1] }; * zip1 v1.2s, v0.2s, v2.2s // v1 = { v0[0], v2[0] }; * zip2 v0.2s, v0.2s, v1.2s // v0 = { v0[1], v2[1] }; *; * Instead, we use a literal downcast, vmovn_u64 (XTN), and vshrn_n_u64 (SHRN):; *; * shrn v1.2s, v0.2d, #32 // v1 = (uint32x2_t)(v0 >> 32);; * xtn v0.2s, v0.2d // v0 = (uint32x2_t)(v0 & 0xFFFFFFFF);; *; * This is available on ARMv7-A, but is less efficient than a single VZIP.32.; */; /*; * Function-like macro:; * void XXH_SPLIT_IN_PLACE(uint64x2_t &in, uint32x2_t &outLo, uint32x2_t &outHi); * {; * outLo = (uint32x2_t)(in & 0xFFFFFFFF);; * outHi = (uint32x2_t)(in >> 32);; * in = UNDEFINED;; * }; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:2683,Energy Efficiency,efficient,efficient,2683,"modifies both parameters in place instead of; * taking the usual 3-operand form.; *; * Therefore, if we want to do this, we can simply use a D-form VZIP.32 on the; * lower and upper halves of the Q register to end up with the high and low; * halves where we want - all in one instruction.; *; * vzip.32 d10, d11 @ d10 = { d10[0], d11[0] }; d11 = { d10[1], d11[1] }; *; * Unfortunately we need inline assembly for this: Instructions modifying two; * registers at once is not possible in GCC or Clang's IR, and they have to; * create a copy.; *; * aarch64 requires a different approach.; *; * In order to make it easier to write a decent compiler for aarch64, many; * quirks were removed, such as conditional execution.; *; * NEON was also affected by this.; *; * aarch64 cannot access the high bits of a Q-form register, and writes to a; * D-form register zero the high bits, similar to how writes to W-form scalar; * registers (or DWORD registers on x86_64) work.; *; * The formerly free vget_high intrinsics now require a vext (with a few; * exceptions); *; * Additionally, VZIP was replaced by ZIP1 and ZIP2, which are the equivalent; * of PUNPCKL* and PUNPCKH* in SSE, respectively, in order to only modify one; * operand.; *; * The equivalent of the VZIP.32 on the lower and upper halves would be this; * mess:; *; * ext v2.4s, v0.4s, v0.4s, #2 // v2 = { v0[2], v0[3], v0[0], v0[1] }; * zip1 v1.2s, v0.2s, v2.2s // v1 = { v0[0], v2[0] }; * zip2 v0.2s, v0.2s, v1.2s // v0 = { v0[1], v2[1] }; *; * Instead, we use a literal downcast, vmovn_u64 (XTN), and vshrn_n_u64 (SHRN):; *; * shrn v1.2s, v0.2d, #32 // v1 = (uint32x2_t)(v0 >> 32);; * xtn v0.2s, v0.2d // v0 = (uint32x2_t)(v0 & 0xFFFFFFFF);; *; * This is available on ARMv7-A, but is less efficient than a single VZIP.32.; */; /*; * Function-like macro:; * void XXH_SPLIT_IN_PLACE(uint64x2_t &in, uint32x2_t &outLo, uint32x2_t &outHi); * {; * outLo = (uint32x2_t)(in & 0xFFFFFFFF);; * outHi = (uint32x2_t)(in >> 32);; * in = UNDEFINED;; * }; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:137,Performance,perform,perform,137,"/*; * NEON's setup for vmlal_u32 is a little more complicated than it is on; * SSE2, AVX2, and VSX.; *; * While PMULUDQ and VMULEUW both perform a mask, VMLAL.U32 performs an upcast.; *; * To do the same operation, the 128-bit 'Q' register needs to be split into; * two 64-bit 'D' registers, performing this operation::; *; * [ a | b ]; * | '---------. .--------' |; * | x |; * | .---------' '--------. |; * [ a & 0xFFFFFFFF | b & 0xFFFFFFFF ],[ a >> 32 | b >> 32 ]; *; * Due to significant changes in aarch64, the fastest method for aarch64 is; * completely different than the fastest method for ARMv7-A.; *; * ARMv7-A treats D registers as unions overlaying Q registers, so modifying; * D11 will modify the high half of Q5. This is similar to how modifying AH; * will only affect bits 8-15 of AX on x86.; *; * VZIP takes two registers, and puts even lanes in one register and odd lanes; * in the other.; *; * On ARMv7-A, this strangely modifies both parameters in place instead of; * taking the usual 3-operand form.; *; * Therefore, if we want to do this, we can simply use a D-form VZIP.32 on the; * lower and upper halves of the Q register to end up with the high and low; * halves where we want - all in one instruction.; *; * vzip.32 d10, d11 @ d10 = { d10[0], d11[0] }; d11 = { d10[1], d11[1] }; *; * Unfortunately we need inline assembly for this: Instructions modifying two; * registers at once is not possible in GCC or Clang's IR, and they have to; * create a copy.; *; * aarch64 requires a different approach.; *; * In order to make it easier to write a decent compiler for aarch64, many; * quirks were removed, such as conditional execution.; *; * NEON was also affected by this.; *; * aarch64 cannot access the high bits of a Q-form register, and writes to a; * D-form register zero the high bits, similar to how writes to W-form scalar; * registers (or DWORD registers on x86_64) work.; *; * The formerly free vget_high intrinsics now require a vext (with a few; * exceptions); *; * Ad",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:163,Performance,perform,performs,163,"/*; * NEON's setup for vmlal_u32 is a little more complicated than it is on; * SSE2, AVX2, and VSX.; *; * While PMULUDQ and VMULEUW both perform a mask, VMLAL.U32 performs an upcast.; *; * To do the same operation, the 128-bit 'Q' register needs to be split into; * two 64-bit 'D' registers, performing this operation::; *; * [ a | b ]; * | '---------. .--------' |; * | x |; * | .---------' '--------. |; * [ a & 0xFFFFFFFF | b & 0xFFFFFFFF ],[ a >> 32 | b >> 32 ]; *; * Due to significant changes in aarch64, the fastest method for aarch64 is; * completely different than the fastest method for ARMv7-A.; *; * ARMv7-A treats D registers as unions overlaying Q registers, so modifying; * D11 will modify the high half of Q5. This is similar to how modifying AH; * will only affect bits 8-15 of AX on x86.; *; * VZIP takes two registers, and puts even lanes in one register and odd lanes; * in the other.; *; * On ARMv7-A, this strangely modifies both parameters in place instead of; * taking the usual 3-operand form.; *; * Therefore, if we want to do this, we can simply use a D-form VZIP.32 on the; * lower and upper halves of the Q register to end up with the high and low; * halves where we want - all in one instruction.; *; * vzip.32 d10, d11 @ d10 = { d10[0], d11[0] }; d11 = { d10[1], d11[1] }; *; * Unfortunately we need inline assembly for this: Instructions modifying two; * registers at once is not possible in GCC or Clang's IR, and they have to; * create a copy.; *; * aarch64 requires a different approach.; *; * In order to make it easier to write a decent compiler for aarch64, many; * quirks were removed, such as conditional execution.; *; * NEON was also affected by this.; *; * aarch64 cannot access the high bits of a Q-form register, and writes to a; * D-form register zero the high bits, similar to how writes to W-form scalar; * registers (or DWORD registers on x86_64) work.; *; * The formerly free vget_high intrinsics now require a vext (with a few; * exceptions); *; * Ad",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:292,Performance,perform,performing,292,"/*; * NEON's setup for vmlal_u32 is a little more complicated than it is on; * SSE2, AVX2, and VSX.; *; * While PMULUDQ and VMULEUW both perform a mask, VMLAL.U32 performs an upcast.; *; * To do the same operation, the 128-bit 'Q' register needs to be split into; * two 64-bit 'D' registers, performing this operation::; *; * [ a | b ]; * | '---------. .--------' |; * | x |; * | .---------' '--------. |; * [ a & 0xFFFFFFFF | b & 0xFFFFFFFF ],[ a >> 32 | b >> 32 ]; *; * Due to significant changes in aarch64, the fastest method for aarch64 is; * completely different than the fastest method for ARMv7-A.; *; * ARMv7-A treats D registers as unions overlaying Q registers, so modifying; * D11 will modify the high half of Q5. This is similar to how modifying AH; * will only affect bits 8-15 of AX on x86.; *; * VZIP takes two registers, and puts even lanes in one register and odd lanes; * in the other.; *; * On ARMv7-A, this strangely modifies both parameters in place instead of; * taking the usual 3-operand form.; *; * Therefore, if we want to do this, we can simply use a D-form VZIP.32 on the; * lower and upper halves of the Q register to end up with the high and low; * halves where we want - all in one instruction.; *; * vzip.32 d10, d11 @ d10 = { d10[0], d11[0] }; d11 = { d10[1], d11[1] }; *; * Unfortunately we need inline assembly for this: Instructions modifying two; * registers at once is not possible in GCC or Clang's IR, and they have to; * create a copy.; *; * aarch64 requires a different approach.; *; * In order to make it easier to write a decent compiler for aarch64, many; * quirks were removed, such as conditional execution.; *; * NEON was also affected by this.; *; * aarch64 cannot access the high bits of a Q-form register, and writes to a; * D-form register zero the high bits, similar to how writes to W-form scalar; * registers (or DWORD registers on x86_64) work.; *; * The formerly free vget_high intrinsics now require a vext (with a few; * exceptions); *; * Ad",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1715,Security,access,access,1715," on x86.; *; * VZIP takes two registers, and puts even lanes in one register and odd lanes; * in the other.; *; * On ARMv7-A, this strangely modifies both parameters in place instead of; * taking the usual 3-operand form.; *; * Therefore, if we want to do this, we can simply use a D-form VZIP.32 on the; * lower and upper halves of the Q register to end up with the high and low; * halves where we want - all in one instruction.; *; * vzip.32 d10, d11 @ d10 = { d10[0], d11[0] }; d11 = { d10[1], d11[1] }; *; * Unfortunately we need inline assembly for this: Instructions modifying two; * registers at once is not possible in GCC or Clang's IR, and they have to; * create a copy.; *; * aarch64 requires a different approach.; *; * In order to make it easier to write a decent compiler for aarch64, many; * quirks were removed, such as conditional execution.; *; * NEON was also affected by this.; *; * aarch64 cannot access the high bits of a Q-form register, and writes to a; * D-form register zero the high bits, similar to how writes to W-form scalar; * registers (or DWORD registers on x86_64) work.; *; * The formerly free vget_high intrinsics now require a vext (with a few; * exceptions); *; * Additionally, VZIP was replaced by ZIP1 and ZIP2, which are the equivalent; * of PUNPCKL* and PUNPCKH* in SSE, respectively, in order to only modify one; * operand.; *; * The equivalent of the VZIP.32 on the lower and upper halves would be this; * mess:; *; * ext v2.4s, v0.4s, v0.4s, #2 // v2 = { v0[2], v0[3], v0[0], v0[1] }; * zip1 v1.2s, v0.2s, v2.2s // v1 = { v0[0], v2[0] }; * zip2 v0.2s, v0.2s, v1.2s // v0 = { v0[1], v2[1] }; *; * Instead, we use a literal downcast, vmovn_u64 (XTN), and vshrn_n_u64 (SHRN):; *; * shrn v1.2s, v0.2d, #32 // v1 = (uint32x2_t)(v0 >> 32);; * xtn v0.2s, v0.2d // v0 = (uint32x2_t)(v0 & 0xFFFFFFFF);; *; * This is available on ARMv7-A, but is less efficient than a single VZIP.32.; */; /*; * Function-like macro:; * void XXH_SPLIT_IN_PLACE(uint64x2_t &in, uint32",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1066,Usability,simpl,simply,1066,"licated than it is on; * SSE2, AVX2, and VSX.; *; * While PMULUDQ and VMULEUW both perform a mask, VMLAL.U32 performs an upcast.; *; * To do the same operation, the 128-bit 'Q' register needs to be split into; * two 64-bit 'D' registers, performing this operation::; *; * [ a | b ]; * | '---------. .--------' |; * | x |; * | .---------' '--------. |; * [ a & 0xFFFFFFFF | b & 0xFFFFFFFF ],[ a >> 32 | b >> 32 ]; *; * Due to significant changes in aarch64, the fastest method for aarch64 is; * completely different than the fastest method for ARMv7-A.; *; * ARMv7-A treats D registers as unions overlaying Q registers, so modifying; * D11 will modify the high half of Q5. This is similar to how modifying AH; * will only affect bits 8-15 of AX on x86.; *; * VZIP takes two registers, and puts even lanes in one register and odd lanes; * in the other.; *; * On ARMv7-A, this strangely modifies both parameters in place instead of; * taking the usual 3-operand form.; *; * Therefore, if we want to do this, we can simply use a D-form VZIP.32 on the; * lower and upper halves of the Q register to end up with the high and low; * halves where we want - all in one instruction.; *; * vzip.32 d10, d11 @ d10 = { d10[0], d11[0] }; d11 = { d10[1], d11[1] }; *; * Unfortunately we need inline assembly for this: Instructions modifying two; * registers at once is not possible in GCC or Clang's IR, and they have to; * create a copy.; *; * aarch64 requires a different approach.; *; * In order to make it easier to write a decent compiler for aarch64, many; * quirks were removed, such as conditional execution.; *; * NEON was also affected by this.; *; * aarch64 cannot access the high bits of a Q-form register, and writes to a; * D-form register zero the high bits, similar to how writes to W-form scalar; * registers (or DWORD registers on x86_64) work.; *; * The formerly free vget_high intrinsics now require a vext (with a few; * exceptions); *; * Additionally, VZIP was replaced by ZIP1 and ZIP2, which ",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:142,Modifiability,config,config,142,"/* Undocumented GCC/Clang operand modifier: %e0 = lower D half, %f0 = upper D half */; /* https://github.com/gcc-mirror/gcc/blob/38cf91e5/gcc/config/arm/arm.c#L22486 */; /* https://github.com/llvm-mirror/llvm/blob/2c4ca683/lib/Target/ARM/ARMAsmPrinter.cpp#L399 */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:3,Usability,Undo,Undocumented,3,"/* Undocumented GCC/Clang operand modifier: %e0 = lower D half, %f0 = upper D half */; /* https://github.com/gcc-mirror/gcc/blob/38cf91e5/gcc/config/arm/arm.c#L22486 */; /* https://github.com/llvm-mirror/llvm/blob/2c4ca683/lib/Target/ARM/ARMAsmPrinter.cpp#L399 */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:5,Integrability,wrap,wrapper,5,/* A wrapper for POWER9's vec_revb. */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:24,Performance,Perform,Performs,24,/* XXH_VSX_BE */; /*; * Performs an unaligned load and byte swaps it on big endian.; */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:46,Performance,load,load,46,/* XXH_VSX_BE */; /*; * Performs an unaligned load and byte swaps it on big endian.; */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:63,Energy Efficiency,Power,PowerPC,63,"/*; * vec_mulo and vec_mule are very problematic intrinsics on PowerPC; *; * These intrinsics weren't added until GCC 8, despite existing for a while,; * and they are endian dependent. Also, their meaning swap depending on version.; * */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:174,Integrability,depend,dependent,174,"/*; * vec_mulo and vec_mule are very problematic intrinsics on PowerPC; *; * These intrinsics weren't added until GCC 8, despite existing for a while,; * and they are endian dependent. Also, their meaning swap depending on version.; * */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:210,Integrability,depend,depending,210,"/*; * vec_mulo and vec_mule are very problematic intrinsics on PowerPC; *; * These intrinsics weren't added until GCC 8, despite existing for a while,; * and they are endian dependent. Also, their meaning swap depending on version.; * */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:36,Energy Efficiency,Adapt,Adapted,36,/* gcc needs inline assembly */; /* Adapted from https://github.com/google/highwayhash/blob/master/highwayhash/hh_vsx.h. */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:36,Modifiability,Adapt,Adapted,36,/* gcc needs inline assembly */; /* Adapted from https://github.com/google/highwayhash/blob/master/highwayhash/hh_vsx.h. */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:57,Integrability,Wrap,Wraps,57,"/*; * Calculates a 32-bit to 64-bit long multiply.; *; * Wraps __emulu on MSVC x86 because it tends to call __allmul when it doesn't; * need to (but it shouldn't need to anyways, it is about 7 instructions to do; * a 64x64 multiply...). Since we know that this will _always_ emit MULL, we; * use that instead of the normal method.; *; * If you are compiling for platforms like Thumb-1 and don't have a better option,; * you may also want to write your own long multiply routine here.; *; * XXH_FORCE_INLINE xxh_u64 XXH_mult32to64(xxh_u64 x, xxh_u64 y); * {; * return (x & 0xFFFFFFFF) * (y & 0xFFFFFFFF);; * }; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:470,Integrability,rout,routine,470,"/*; * Calculates a 32-bit to 64-bit long multiply.; *; * Wraps __emulu on MSVC x86 because it tends to call __allmul when it doesn't; * need to (but it shouldn't need to anyways, it is about 7 instructions to do; * a 64x64 multiply...). Since we know that this will _always_ emit MULL, we; * use that instead of the normal method.; *; * If you are compiling for platforms like Thumb-1 and don't have a better option,; * you may also want to write your own long multiply routine here.; *; * XXH_FORCE_INLINE xxh_u64 XXH_mult32to64(xxh_u64 x, xxh_u64 y); * {; * return (x & 0xFFFFFFFF) * (y & 0xFFFFFFFF);; * }; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:6,Availability,Down,Downcast,6,"/*; * Downcast + upcast is usually better than masking on older compilers like; * GCC 4.2 (especially 32-bit ones), all without affecting newer compilers.; *; * The other method, (x & 0xFFFFFFFF) * (y & 0xFFFFFFFF), will AND both operands; * and perform a full 64x64 multiply -- entirely redundant on 32-bit.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:47,Availability,mask,masking,47,"/*; * Downcast + upcast is usually better than masking on older compilers like; * GCC 4.2 (especially 32-bit ones), all without affecting newer compilers.; *; * The other method, (x & 0xFFFFFFFF) * (y & 0xFFFFFFFF), will AND both operands; * and perform a full 64x64 multiply -- entirely redundant on 32-bit.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:288,Availability,redundant,redundant,288,"/*; * Downcast + upcast is usually better than masking on older compilers like; * GCC 4.2 (especially 32-bit ones), all without affecting newer compilers.; *; * The other method, (x & 0xFFFFFFFF) * (y & 0xFFFFFFFF), will AND both operands; * and perform a full 64x64 multiply -- entirely redundant on 32-bit.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:246,Performance,perform,perform,246,"/*; * Downcast + upcast is usually better than masking on older compilers like; * GCC 4.2 (especially 32-bit ones), all without affecting newer compilers.; *; * The other method, (x & 0xFFFFFFFF) * (y & 0xFFFFFFFF), will AND both operands; * and perform a full 64x64 multiply -- entirely redundant on 32-bit.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:288,Safety,redund,redundant,288,"/*; * Downcast + upcast is usually better than masking on older compilers like; * GCC 4.2 (especially 32-bit ones), all without affecting newer compilers.; *; * The other method, (x & 0xFFFFFFFF) * (y & 0xFFFFFFFF), will AND both operands; * and perform a full 64x64 multiply -- entirely redundant on 32-bit.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:85,Availability,avail,available,85,"/*; * Calculates a 64->128-bit long multiply.; *; * Uses __uint128_t and _umul128 if available, otherwise uses a scalar version.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:510,Modifiability,portab,portable,510,"/*; * GCC/Clang __uint128_t method.; *; * On most 64-bit targets, GCC and Clang define a __uint128_t type.; * This is usually the best way as it usually uses a native long 64-bit; * multiply, such as MULQ on x86_64 or MUL + UMULH on aarch64.; *; * Usually.; *; * Despite being a 32-bit platform, Clang (and emscripten) define this type; * despite not having the arithmetic for it. This results in a laggy; * compiler builtin call which calculates a full 128-bit multiply.; * In that case it is best to use the portable one.; * https://github.com/Cyan4973/xxHash/issues/211#issuecomment-515575677; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:968,Availability,avail,available,968,"/*; * Portable scalar method. Optimized for 32-bit and 64-bit ALUs.; *; * This is a fast and simple grade school multiply, which is shown below; * with base 10 arithmetic instead of base 0x100000000.; *; * 9 3 // D2 lhs = 93; * x 7 5 // D2 rhs = 75; * ----------; * 1 5 // D2 lo_lo = (93 % 10) * (75 % 10) = 15; * 4 5 | // D2 hi_lo = (93 / 10) * (75 % 10) = 45; * 2 1 | // D2 lo_hi = (93 % 10) * (75 / 10) = 21; * + 6 3 | | // D2 hi_hi = (93 / 10) * (75 / 10) = 63; * ---------; * 2 7 | // D2 cross = (15 / 10) + (45 % 10) + 21 = 27; * + 6 7 | | // D2 upper = (27 / 10) + (45 / 10) + 63 = 67; * ---------; * 6 9 7 5 // D4 res = (27 * 10) + (15 % 10) + (67 * 100) = 6975; *; * The reasons for adding the products like this are:; * 1. It avoids manual carry tracking. Just like how; * (9 * 9) + 9 + 9 = 99, the same applies with this for UINT64_MAX.; * This avoids a lot of complexity.; *; * 2. It hints for, and on Clang, compiles to, the powerful UMAAL; * instruction available in ARM's Digital Signal Processing extension; * in 32-bit ARMv6 and later, which is shown below:; *; * void UMAAL(xxh_u32 *RdLo, xxh_u32 *RdHi, xxh_u32 Rn, xxh_u32 Rm); * {; * xxh_u64 product = (xxh_u64)*RdLo * (xxh_u64)*RdHi + Rn + Rm;; * *RdLo = (xxh_u32)(product & 0xFFFFFFFF);; * *RdHi = (xxh_u32)(product >> 32);; * }; *; * This instruction was designed for efficient long multiplication, and; * allows this to be calculated in only 4 instructions at speeds; * comparable to some 64-bit ALUs.; *; * 3. It isn't terrible on other platforms. Usually this will be a couple; * of 32-bit ADD/ADCs.; */; /* First calculate all of the cross products. */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:938,Energy Efficiency,power,powerful,938,"/*; * Portable scalar method. Optimized for 32-bit and 64-bit ALUs.; *; * This is a fast and simple grade school multiply, which is shown below; * with base 10 arithmetic instead of base 0x100000000.; *; * 9 3 // D2 lhs = 93; * x 7 5 // D2 rhs = 75; * ----------; * 1 5 // D2 lo_lo = (93 % 10) * (75 % 10) = 15; * 4 5 | // D2 hi_lo = (93 / 10) * (75 % 10) = 45; * 2 1 | // D2 lo_hi = (93 % 10) * (75 / 10) = 21; * + 6 3 | | // D2 hi_hi = (93 / 10) * (75 / 10) = 63; * ---------; * 2 7 | // D2 cross = (15 / 10) + (45 % 10) + 21 = 27; * + 6 7 | | // D2 upper = (27 / 10) + (45 / 10) + 63 = 67; * ---------; * 6 9 7 5 // D4 res = (27 * 10) + (15 % 10) + (67 * 100) = 6975; *; * The reasons for adding the products like this are:; * 1. It avoids manual carry tracking. Just like how; * (9 * 9) + 9 + 9 = 99, the same applies with this for UINT64_MAX.; * This avoids a lot of complexity.; *; * 2. It hints for, and on Clang, compiles to, the powerful UMAAL; * instruction available in ARM's Digital Signal Processing extension; * in 32-bit ARMv6 and later, which is shown below:; *; * void UMAAL(xxh_u32 *RdLo, xxh_u32 *RdHi, xxh_u32 Rn, xxh_u32 Rm); * {; * xxh_u64 product = (xxh_u64)*RdLo * (xxh_u64)*RdHi + Rn + Rm;; * *RdLo = (xxh_u32)(product & 0xFFFFFFFF);; * *RdHi = (xxh_u32)(product >> 32);; * }; *; * This instruction was designed for efficient long multiplication, and; * allows this to be calculated in only 4 instructions at speeds; * comparable to some 64-bit ALUs.; *; * 3. It isn't terrible on other platforms. Usually this will be a couple; * of 32-bit ADD/ADCs.; */; /* First calculate all of the cross products. */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1341,Energy Efficiency,efficient,efficient,1341,"/*; * Portable scalar method. Optimized for 32-bit and 64-bit ALUs.; *; * This is a fast and simple grade school multiply, which is shown below; * with base 10 arithmetic instead of base 0x100000000.; *; * 9 3 // D2 lhs = 93; * x 7 5 // D2 rhs = 75; * ----------; * 1 5 // D2 lo_lo = (93 % 10) * (75 % 10) = 15; * 4 5 | // D2 hi_lo = (93 / 10) * (75 % 10) = 45; * 2 1 | // D2 lo_hi = (93 % 10) * (75 / 10) = 21; * + 6 3 | | // D2 hi_hi = (93 / 10) * (75 / 10) = 63; * ---------; * 2 7 | // D2 cross = (15 / 10) + (45 % 10) + 21 = 27; * + 6 7 | | // D2 upper = (27 / 10) + (45 / 10) + 63 = 67; * ---------; * 6 9 7 5 // D4 res = (27 * 10) + (15 % 10) + (67 * 100) = 6975; *; * The reasons for adding the products like this are:; * 1. It avoids manual carry tracking. Just like how; * (9 * 9) + 9 + 9 = 99, the same applies with this for UINT64_MAX.; * This avoids a lot of complexity.; *; * 2. It hints for, and on Clang, compiles to, the powerful UMAAL; * instruction available in ARM's Digital Signal Processing extension; * in 32-bit ARMv6 and later, which is shown below:; *; * void UMAAL(xxh_u32 *RdLo, xxh_u32 *RdHi, xxh_u32 Rn, xxh_u32 Rm); * {; * xxh_u64 product = (xxh_u64)*RdLo * (xxh_u64)*RdHi + Rn + Rm;; * *RdLo = (xxh_u32)(product & 0xFFFFFFFF);; * *RdHi = (xxh_u32)(product >> 32);; * }; *; * This instruction was designed for efficient long multiplication, and; * allows this to be calculated in only 4 instructions at speeds; * comparable to some 64-bit ALUs.; *; * 3. It isn't terrible on other platforms. Usually this will be a couple; * of 32-bit ADD/ADCs.; */; /* First calculate all of the cross products. */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:6,Modifiability,Portab,Portable,6,"/*; * Portable scalar method. Optimized for 32-bit and 64-bit ALUs.; *; * This is a fast and simple grade school multiply, which is shown below; * with base 10 arithmetic instead of base 0x100000000.; *; * 9 3 // D2 lhs = 93; * x 7 5 // D2 rhs = 75; * ----------; * 1 5 // D2 lo_lo = (93 % 10) * (75 % 10) = 15; * 4 5 | // D2 hi_lo = (93 / 10) * (75 % 10) = 45; * 2 1 | // D2 lo_hi = (93 % 10) * (75 / 10) = 21; * + 6 3 | | // D2 hi_hi = (93 / 10) * (75 / 10) = 63; * ---------; * 2 7 | // D2 cross = (15 / 10) + (45 % 10) + 21 = 27; * + 6 7 | | // D2 upper = (27 / 10) + (45 / 10) + 63 = 67; * ---------; * 6 9 7 5 // D4 res = (27 * 10) + (15 % 10) + (67 * 100) = 6975; *; * The reasons for adding the products like this are:; * 1. It avoids manual carry tracking. Just like how; * (9 * 9) + 9 + 9 = 99, the same applies with this for UINT64_MAX.; * This avoids a lot of complexity.; *; * 2. It hints for, and on Clang, compiles to, the powerful UMAAL; * instruction available in ARM's Digital Signal Processing extension; * in 32-bit ARMv6 and later, which is shown below:; *; * void UMAAL(xxh_u32 *RdLo, xxh_u32 *RdHi, xxh_u32 Rn, xxh_u32 Rm); * {; * xxh_u64 product = (xxh_u64)*RdLo * (xxh_u64)*RdHi + Rn + Rm;; * *RdLo = (xxh_u32)(product & 0xFFFFFFFF);; * *RdHi = (xxh_u32)(product >> 32);; * }; *; * This instruction was designed for efficient long multiplication, and; * allows this to be calculated in only 4 instructions at speeds; * comparable to some 64-bit ALUs.; *; * 3. It isn't terrible on other platforms. Usually this will be a couple; * of 32-bit ADD/ADCs.; */; /* First calculate all of the cross products. */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:30,Performance,Optimiz,Optimized,30,"/*; * Portable scalar method. Optimized for 32-bit and 64-bit ALUs.; *; * This is a fast and simple grade school multiply, which is shown below; * with base 10 arithmetic instead of base 0x100000000.; *; * 9 3 // D2 lhs = 93; * x 7 5 // D2 rhs = 75; * ----------; * 1 5 // D2 lo_lo = (93 % 10) * (75 % 10) = 15; * 4 5 | // D2 hi_lo = (93 / 10) * (75 % 10) = 45; * 2 1 | // D2 lo_hi = (93 % 10) * (75 / 10) = 21; * + 6 3 | | // D2 hi_hi = (93 / 10) * (75 / 10) = 63; * ---------; * 2 7 | // D2 cross = (15 / 10) + (45 % 10) + 21 = 27; * + 6 7 | | // D2 upper = (27 / 10) + (45 / 10) + 63 = 67; * ---------; * 6 9 7 5 // D4 res = (27 * 10) + (15 % 10) + (67 * 100) = 6975; *; * The reasons for adding the products like this are:; * 1. It avoids manual carry tracking. Just like how; * (9 * 9) + 9 + 9 = 99, the same applies with this for UINT64_MAX.; * This avoids a lot of complexity.; *; * 2. It hints for, and on Clang, compiles to, the powerful UMAAL; * instruction available in ARM's Digital Signal Processing extension; * in 32-bit ARMv6 and later, which is shown below:; *; * void UMAAL(xxh_u32 *RdLo, xxh_u32 *RdHi, xxh_u32 Rn, xxh_u32 Rm); * {; * xxh_u64 product = (xxh_u64)*RdLo * (xxh_u64)*RdHi + Rn + Rm;; * *RdLo = (xxh_u32)(product & 0xFFFFFFFF);; * *RdHi = (xxh_u32)(product >> 32);; * }; *; * This instruction was designed for efficient long multiplication, and; * allows this to be calculated in only 4 instructions at speeds; * comparable to some 64-bit ALUs.; *; * 3. It isn't terrible on other platforms. Usually this will be a couple; * of 32-bit ADD/ADCs.; */; /* First calculate all of the cross products. */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:736,Safety,avoid,avoids,736,"/*; * Portable scalar method. Optimized for 32-bit and 64-bit ALUs.; *; * This is a fast and simple grade school multiply, which is shown below; * with base 10 arithmetic instead of base 0x100000000.; *; * 9 3 // D2 lhs = 93; * x 7 5 // D2 rhs = 75; * ----------; * 1 5 // D2 lo_lo = (93 % 10) * (75 % 10) = 15; * 4 5 | // D2 hi_lo = (93 / 10) * (75 % 10) = 45; * 2 1 | // D2 lo_hi = (93 % 10) * (75 / 10) = 21; * + 6 3 | | // D2 hi_hi = (93 / 10) * (75 / 10) = 63; * ---------; * 2 7 | // D2 cross = (15 / 10) + (45 % 10) + 21 = 27; * + 6 7 | | // D2 upper = (27 / 10) + (45 / 10) + 63 = 67; * ---------; * 6 9 7 5 // D4 res = (27 * 10) + (15 % 10) + (67 * 100) = 6975; *; * The reasons for adding the products like this are:; * 1. It avoids manual carry tracking. Just like how; * (9 * 9) + 9 + 9 = 99, the same applies with this for UINT64_MAX.; * This avoids a lot of complexity.; *; * 2. It hints for, and on Clang, compiles to, the powerful UMAAL; * instruction available in ARM's Digital Signal Processing extension; * in 32-bit ARMv6 and later, which is shown below:; *; * void UMAAL(xxh_u32 *RdLo, xxh_u32 *RdHi, xxh_u32 Rn, xxh_u32 Rm); * {; * xxh_u64 product = (xxh_u64)*RdLo * (xxh_u64)*RdHi + Rn + Rm;; * *RdLo = (xxh_u32)(product & 0xFFFFFFFF);; * *RdHi = (xxh_u32)(product >> 32);; * }; *; * This instruction was designed for efficient long multiplication, and; * allows this to be calculated in only 4 instructions at speeds; * comparable to some 64-bit ALUs.; *; * 3. It isn't terrible on other platforms. Usually this will be a couple; * of 32-bit ADD/ADCs.; */; /* First calculate all of the cross products. */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:856,Safety,avoid,avoids,856,"/*; * Portable scalar method. Optimized for 32-bit and 64-bit ALUs.; *; * This is a fast and simple grade school multiply, which is shown below; * with base 10 arithmetic instead of base 0x100000000.; *; * 9 3 // D2 lhs = 93; * x 7 5 // D2 rhs = 75; * ----------; * 1 5 // D2 lo_lo = (93 % 10) * (75 % 10) = 15; * 4 5 | // D2 hi_lo = (93 / 10) * (75 % 10) = 45; * 2 1 | // D2 lo_hi = (93 % 10) * (75 / 10) = 21; * + 6 3 | | // D2 hi_hi = (93 / 10) * (75 / 10) = 63; * ---------; * 2 7 | // D2 cross = (15 / 10) + (45 % 10) + 21 = 27; * + 6 7 | | // D2 upper = (27 / 10) + (45 / 10) + 63 = 67; * ---------; * 6 9 7 5 // D4 res = (27 * 10) + (15 % 10) + (67 * 100) = 6975; *; * The reasons for adding the products like this are:; * 1. It avoids manual carry tracking. Just like how; * (9 * 9) + 9 + 9 = 99, the same applies with this for UINT64_MAX.; * This avoids a lot of complexity.; *; * 2. It hints for, and on Clang, compiles to, the powerful UMAAL; * instruction available in ARM's Digital Signal Processing extension; * in 32-bit ARMv6 and later, which is shown below:; *; * void UMAAL(xxh_u32 *RdLo, xxh_u32 *RdHi, xxh_u32 Rn, xxh_u32 Rm); * {; * xxh_u64 product = (xxh_u64)*RdLo * (xxh_u64)*RdHi + Rn + Rm;; * *RdLo = (xxh_u32)(product & 0xFFFFFFFF);; * *RdHi = (xxh_u32)(product >> 32);; * }; *; * This instruction was designed for efficient long multiplication, and; * allows this to be calculated in only 4 instructions at speeds; * comparable to some 64-bit ALUs.; *; * 3. It isn't terrible on other platforms. Usually this will be a couple; * of 32-bit ADD/ADCs.; */; /* First calculate all of the cross products. */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:93,Usability,simpl,simple,93,"/*; * Portable scalar method. Optimized for 32-bit and 64-bit ALUs.; *; * This is a fast and simple grade school multiply, which is shown below; * with base 10 arithmetic instead of base 0x100000000.; *; * 9 3 // D2 lhs = 93; * x 7 5 // D2 rhs = 75; * ----------; * 1 5 // D2 lo_lo = (93 % 10) * (75 % 10) = 15; * 4 5 | // D2 hi_lo = (93 / 10) * (75 % 10) = 45; * 2 1 | // D2 lo_hi = (93 % 10) * (75 / 10) = 21; * + 6 3 | | // D2 hi_hi = (93 / 10) * (75 / 10) = 63; * ---------; * 2 7 | // D2 cross = (15 / 10) + (45 % 10) + 21 = 27; * + 6 7 | | // D2 upper = (27 / 10) + (45 / 10) + 63 = 67; * ---------; * 6 9 7 5 // D4 res = (27 * 10) + (15 % 10) + (67 * 100) = 6975; *; * The reasons for adding the products like this are:; * 1. It avoids manual carry tracking. Just like how; * (9 * 9) + 9 + 9 = 99, the same applies with this for UINT64_MAX.; * This avoids a lot of complexity.; *; * 2. It hints for, and on Clang, compiles to, the powerful UMAAL; * instruction available in ARM's Digital Signal Processing extension; * in 32-bit ARMv6 and later, which is shown below:; *; * void UMAAL(xxh_u32 *RdLo, xxh_u32 *RdHi, xxh_u32 Rn, xxh_u32 Rm); * {; * xxh_u64 product = (xxh_u64)*RdLo * (xxh_u64)*RdHi + Rn + Rm;; * *RdLo = (xxh_u32)(product & 0xFFFFFFFF);; * *RdHi = (xxh_u32)(product >> 32);; * }; *; * This instruction was designed for efficient long multiplication, and; * allows this to be calculated in only 4 instructions at speeds; * comparable to some 64-bit ALUs.; *; * 3. It isn't terrible on other platforms. Usually this will be a couple; * of 32-bit ADD/ADCs.; */; /* First calculate all of the cross products. */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:543,Energy Efficiency,reduce,reduced,543,"/* ==========================================; * Short keys; * ==========================================; * One of the shortcomings of XXH32 and XXH64 was that their performance was; * sub-optimal on short lengths. It used an iterative algorithm which strongly; * favored lengths that were a multiple of 4 or 8.; *; * Instead of iterating over individual inputs, we use a set of single shot; * functions which piece together a range of lengths and operate in constant time.; *; * Additionally, the number of multiplies has been significantly reduced. This; * reduces latency, especially when emulating 64-bit multiplies on 32-bit.; *; * Depending on the platform, this may or may not be faster than XXH32, but it; * is almost guaranteed to be faster than XXH64.; */; /*; * At very short lengths, there isn't enough input to fully hide secrets, or use; * the entire secret.; *; * There is also only a limited amount of mixing we can do before significantly; * impacting performance.; *; * Therefore, we use different sections of the secret and always mix two secret; * samples with an XOR. This should have no effect on performance on the; * seedless or withSeed variants because everything _should_ be constant folded; * by modern compilers.; *; * The XOR mixing hides individual parts of the secret and increases entropy.; *; * This adds an extra layer of strength for custom secrets.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:560,Energy Efficiency,reduce,reduces,560,"/* ==========================================; * Short keys; * ==========================================; * One of the shortcomings of XXH32 and XXH64 was that their performance was; * sub-optimal on short lengths. It used an iterative algorithm which strongly; * favored lengths that were a multiple of 4 or 8.; *; * Instead of iterating over individual inputs, we use a set of single shot; * functions which piece together a range of lengths and operate in constant time.; *; * Additionally, the number of multiplies has been significantly reduced. This; * reduces latency, especially when emulating 64-bit multiplies on 32-bit.; *; * Depending on the platform, this may or may not be faster than XXH32, but it; * is almost guaranteed to be faster than XXH64.; */; /*; * At very short lengths, there isn't enough input to fully hide secrets, or use; * the entire secret.; *; * There is also only a limited amount of mixing we can do before significantly; * impacting performance.; *; * Therefore, we use different sections of the secret and always mix two secret; * samples with an XOR. This should have no effect on performance on the; * seedless or withSeed variants because everything _should_ be constant folded; * by modern compilers.; *; * The XOR mixing hides individual parts of the secret and increases entropy.; *; * This adds an extra layer of strength for custom secrets.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:638,Integrability,Depend,Depending,638,"/* ==========================================; * Short keys; * ==========================================; * One of the shortcomings of XXH32 and XXH64 was that their performance was; * sub-optimal on short lengths. It used an iterative algorithm which strongly; * favored lengths that were a multiple of 4 or 8.; *; * Instead of iterating over individual inputs, we use a set of single shot; * functions which piece together a range of lengths and operate in constant time.; *; * Additionally, the number of multiplies has been significantly reduced. This; * reduces latency, especially when emulating 64-bit multiplies on 32-bit.; *; * Depending on the platform, this may or may not be faster than XXH32, but it; * is almost guaranteed to be faster than XXH64.; */; /*; * At very short lengths, there isn't enough input to fully hide secrets, or use; * the entire secret.; *; * There is also only a limited amount of mixing we can do before significantly; * impacting performance.; *; * Therefore, we use different sections of the secret and always mix two secret; * samples with an XOR. This should have no effect on performance on the; * seedless or withSeed variants because everything _should_ be constant folded; * by modern compilers.; *; * The XOR mixing hides individual parts of the secret and increases entropy.; *; * This adds an extra layer of strength for custom secrets.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:167,Performance,perform,performance,167,"/* ==========================================; * Short keys; * ==========================================; * One of the shortcomings of XXH32 and XXH64 was that their performance was; * sub-optimal on short lengths. It used an iterative algorithm which strongly; * favored lengths that were a multiple of 4 or 8.; *; * Instead of iterating over individual inputs, we use a set of single shot; * functions which piece together a range of lengths and operate in constant time.; *; * Additionally, the number of multiplies has been significantly reduced. This; * reduces latency, especially when emulating 64-bit multiplies on 32-bit.; *; * Depending on the platform, this may or may not be faster than XXH32, but it; * is almost guaranteed to be faster than XXH64.; */; /*; * At very short lengths, there isn't enough input to fully hide secrets, or use; * the entire secret.; *; * There is also only a limited amount of mixing we can do before significantly; * impacting performance.; *; * Therefore, we use different sections of the secret and always mix two secret; * samples with an XOR. This should have no effect on performance on the; * seedless or withSeed variants because everything _should_ be constant folded; * by modern compilers.; *; * The XOR mixing hides individual parts of the secret and increases entropy.; *; * This adds an extra layer of strength for custom secrets.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:568,Performance,latency,latency,568,"/* ==========================================; * Short keys; * ==========================================; * One of the shortcomings of XXH32 and XXH64 was that their performance was; * sub-optimal on short lengths. It used an iterative algorithm which strongly; * favored lengths that were a multiple of 4 or 8.; *; * Instead of iterating over individual inputs, we use a set of single shot; * functions which piece together a range of lengths and operate in constant time.; *; * Additionally, the number of multiplies has been significantly reduced. This; * reduces latency, especially when emulating 64-bit multiplies on 32-bit.; *; * Depending on the platform, this may or may not be faster than XXH32, but it; * is almost guaranteed to be faster than XXH64.; */; /*; * At very short lengths, there isn't enough input to fully hide secrets, or use; * the entire secret.; *; * There is also only a limited amount of mixing we can do before significantly; * impacting performance.; *; * Therefore, we use different sections of the secret and always mix two secret; * samples with an XOR. This should have no effect on performance on the; * seedless or withSeed variants because everything _should_ be constant folded; * by modern compilers.; *; * The XOR mixing hides individual parts of the secret and increases entropy.; *; * This adds an extra layer of strength for custom secrets.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:970,Performance,perform,performance,970,"/* ==========================================; * Short keys; * ==========================================; * One of the shortcomings of XXH32 and XXH64 was that their performance was; * sub-optimal on short lengths. It used an iterative algorithm which strongly; * favored lengths that were a multiple of 4 or 8.; *; * Instead of iterating over individual inputs, we use a set of single shot; * functions which piece together a range of lengths and operate in constant time.; *; * Additionally, the number of multiplies has been significantly reduced. This; * reduces latency, especially when emulating 64-bit multiplies on 32-bit.; *; * Depending on the platform, this may or may not be faster than XXH32, but it; * is almost guaranteed to be faster than XXH64.; */; /*; * At very short lengths, there isn't enough input to fully hide secrets, or use; * the entire secret.; *; * There is also only a limited amount of mixing we can do before significantly; * impacting performance.; *; * Therefore, we use different sections of the secret and always mix two secret; * samples with an XOR. This should have no effect on performance on the; * seedless or withSeed variants because everything _should_ be constant folded; * by modern compilers.; *; * The XOR mixing hides individual parts of the secret and increases entropy.; *; * This adds an extra layer of strength for custom secrets.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1120,Performance,perform,performance,1120,"/* ==========================================; * Short keys; * ==========================================; * One of the shortcomings of XXH32 and XXH64 was that their performance was; * sub-optimal on short lengths. It used an iterative algorithm which strongly; * favored lengths that were a multiple of 4 or 8.; *; * Instead of iterating over individual inputs, we use a set of single shot; * functions which piece together a range of lengths and operate in constant time.; *; * Additionally, the number of multiplies has been significantly reduced. This; * reduces latency, especially when emulating 64-bit multiplies on 32-bit.; *; * Depending on the platform, this may or may not be faster than XXH32, but it; * is almost guaranteed to be faster than XXH64.; */; /*; * At very short lengths, there isn't enough input to fully hide secrets, or use; * the entire secret.; *; * There is also only a limited amount of mixing we can do before significantly; * impacting performance.; *; * Therefore, we use different sections of the secret and always mix two secret; * samples with an XOR. This should have no effect on performance on the; * seedless or withSeed variants because everything _should_ be constant folded; * by modern compilers.; *; * The XOR mixing hides individual parts of the secret and increases entropy.; *; * This adds an extra layer of strength for custom secrets.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:40,Integrability,depend,dependent,40,"/*; * DISCLAIMER: There are known *seed-dependent* multicollisions here due to; * multiplication by zero, affecting hashes of lengths 17 to 240.; *; * However, they are very unlikely.; *; * Keep this in mind when using the unseeded XXH3_64bits() variant: As with all; * unseeded non-cryptographic hashes, it does not attempt to defend itself; * against specially crafted inputs, only random inputs.; *; * Compared to classic UMAC where a 1 in 2^31 chance of 4 consecutive bytes; * cancelling out the secret is taken an arbitrary number of times (addressed; * in XXH3_accumulate_512), this collision is very unlikely with random inputs; * and/or proper seeding:; *; * This only has a 1 in 2^63 chance of 8 consecutive bytes cancelling out, in a; * function that is only called up to 16 times per hash with up to 240 bytes of; * input.; *; * This is not too bad for a non-cryptographic hash function, especially with; * only 64 bit outputs.; *; * The 128-bit variant (which trades some speed for strength) is NOT affected; * by this, although it is always a good idea to use a proper seed if you care; * about strength.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:116,Security,hash,hashes,116,"/*; * DISCLAIMER: There are known *seed-dependent* multicollisions here due to; * multiplication by zero, affecting hashes of lengths 17 to 240.; *; * However, they are very unlikely.; *; * Keep this in mind when using the unseeded XXH3_64bits() variant: As with all; * unseeded non-cryptographic hashes, it does not attempt to defend itself; * against specially crafted inputs, only random inputs.; *; * Compared to classic UMAC where a 1 in 2^31 chance of 4 consecutive bytes; * cancelling out the secret is taken an arbitrary number of times (addressed; * in XXH3_accumulate_512), this collision is very unlikely with random inputs; * and/or proper seeding:; *; * This only has a 1 in 2^63 chance of 8 consecutive bytes cancelling out, in a; * function that is only called up to 16 times per hash with up to 240 bytes of; * input.; *; * This is not too bad for a non-cryptographic hash function, especially with; * only 64 bit outputs.; *; * The 128-bit variant (which trades some speed for strength) is NOT affected; * by this, although it is always a good idea to use a proper seed if you care; * about strength.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:297,Security,hash,hashes,297,"/*; * DISCLAIMER: There are known *seed-dependent* multicollisions here due to; * multiplication by zero, affecting hashes of lengths 17 to 240.; *; * However, they are very unlikely.; *; * Keep this in mind when using the unseeded XXH3_64bits() variant: As with all; * unseeded non-cryptographic hashes, it does not attempt to defend itself; * against specially crafted inputs, only random inputs.; *; * Compared to classic UMAC where a 1 in 2^31 chance of 4 consecutive bytes; * cancelling out the secret is taken an arbitrary number of times (addressed; * in XXH3_accumulate_512), this collision is very unlikely with random inputs; * and/or proper seeding:; *; * This only has a 1 in 2^63 chance of 8 consecutive bytes cancelling out, in a; * function that is only called up to 16 times per hash with up to 240 bytes of; * input.; *; * This is not too bad for a non-cryptographic hash function, especially with; * only 64 bit outputs.; *; * The 128-bit variant (which trades some speed for strength) is NOT affected; * by this, although it is always a good idea to use a proper seed if you care; * about strength.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:795,Security,hash,hash,795,"/*; * DISCLAIMER: There are known *seed-dependent* multicollisions here due to; * multiplication by zero, affecting hashes of lengths 17 to 240.; *; * However, they are very unlikely.; *; * Keep this in mind when using the unseeded XXH3_64bits() variant: As with all; * unseeded non-cryptographic hashes, it does not attempt to defend itself; * against specially crafted inputs, only random inputs.; *; * Compared to classic UMAC where a 1 in 2^31 chance of 4 consecutive bytes; * cancelling out the secret is taken an arbitrary number of times (addressed; * in XXH3_accumulate_512), this collision is very unlikely with random inputs; * and/or proper seeding:; *; * This only has a 1 in 2^63 chance of 8 consecutive bytes cancelling out, in a; * function that is only called up to 16 times per hash with up to 240 bytes of; * input.; *; * This is not too bad for a non-cryptographic hash function, especially with; * only 64 bit outputs.; *; * The 128-bit variant (which trades some speed for strength) is NOT affected; * by this, although it is always a good idea to use a proper seed if you care; * about strength.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:884,Security,hash,hash,884,"/*; * DISCLAIMER: There are known *seed-dependent* multicollisions here due to; * multiplication by zero, affecting hashes of lengths 17 to 240.; *; * However, they are very unlikely.; *; * Keep this in mind when using the unseeded XXH3_64bits() variant: As with all; * unseeded non-cryptographic hashes, it does not attempt to defend itself; * against specially crafted inputs, only random inputs.; *; * Compared to classic UMAC where a 1 in 2^31 chance of 4 consecutive bytes; * cancelling out the secret is taken an arbitrary number of times (addressed; * in XXH3_accumulate_512), this collision is very unlikely with random inputs; * and/or proper seeding:; *; * This only has a 1 in 2^63 chance of 8 consecutive bytes cancelling out, in a; * function that is only called up to 16 times per hash with up to 240 bytes of; * input.; *; * This is not too bad for a non-cryptographic hash function, especially with; * only 64 bit outputs.; *; * The 128-bit variant (which trades some speed for strength) is NOT affected; * by this, although it is always a good idea to use a proper seed if you care; * about strength.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:39,Security,hash,hash,39,"/* For mid range keys, XXH3 uses a Mum-hash variant. */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:500,Safety,avoid,avoid,500,"/*; * UGLY HACK:; * Clang for ARMv7-A tries to vectorize this loop, similar to GCC x86.; * In everywhere else, it uses scalar code.; *; * For 64->128-bit multiplies, even if the NEON was 100% optimal, it; * would still be slower than UMAAL (see XXH_mult64to128).; *; * Unfortunately, Clang doesn't handle the long multiplies properly and; * converts them to the nonexistent ""vmulq_u64"" intrinsic, which is then; * scalarized into an ugly mess of VMOV.32 instructions.; *; * This mess is difficult to avoid without turning autovectorization; * off completely, but they are usually relatively minor and/or not; * worth it to fix.; *; * This loop is the easiest to fix, as unlike XXH32, this pragma; * _actually works_ because it is a loop vectorization instead of an; * SLP vectorization.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:204,Energy Efficiency,adapt,adapts,204,"/*; * XXH3_accumulate_512 is the tightest loop for long inputs, and it is the most optimized.; *; * It is a hardened version of UMAC, based off of FARSH's implementation.; *; * This was chosen because it adapts quite well to 32-bit, 64-bit, and SIMD; * implementations, and it is ridiculously fast.; *; * We harden it by mixing the original input to the accumulators as well as the product.; *; * This means that in the (relatively likely) case of a multiply by zero, the; * original input is preserved.; *; * On 128-bit inputs, we swap 64-bit pairs when we add the input to improve; * cross-pollination, as otherwise the upper and lower halves would be; * essentially independent.; *; * This doesn't matter on 64-bit hashes since they all get merged together in; * the end, so we skip the extra step.; *; * Both XXH3_64bits and XXH3_128bits use this subroutine.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:204,Modifiability,adapt,adapts,204,"/*; * XXH3_accumulate_512 is the tightest loop for long inputs, and it is the most optimized.; *; * It is a hardened version of UMAC, based off of FARSH's implementation.; *; * This was chosen because it adapts quite well to 32-bit, 64-bit, and SIMD; * implementations, and it is ridiculously fast.; *; * We harden it by mixing the original input to the accumulators as well as the product.; *; * This means that in the (relatively likely) case of a multiply by zero, the; * original input is preserved.; *; * On 128-bit inputs, we swap 64-bit pairs when we add the input to improve; * cross-pollination, as otherwise the upper and lower halves would be; * essentially independent.; *; * This doesn't matter on 64-bit hashes since they all get merged together in; * the end, so we skip the extra step.; *; * Both XXH3_64bits and XXH3_128bits use this subroutine.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:83,Performance,optimiz,optimized,83,"/*; * XXH3_accumulate_512 is the tightest loop for long inputs, and it is the most optimized.; *; * It is a hardened version of UMAC, based off of FARSH's implementation.; *; * This was chosen because it adapts quite well to 32-bit, 64-bit, and SIMD; * implementations, and it is ridiculously fast.; *; * We harden it by mixing the original input to the accumulators as well as the product.; *; * This means that in the (relatively likely) case of a multiply by zero, the; * original input is preserved.; *; * On 128-bit inputs, we swap 64-bit pairs when we add the input to improve; * cross-pollination, as otherwise the upper and lower halves would be; * essentially independent.; *; * This doesn't matter on 64-bit hashes since they all get merged together in; * the end, so we skip the extra step.; *; * Both XXH3_64bits and XXH3_128bits use this subroutine.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:718,Security,hash,hashes,718,"/*; * XXH3_accumulate_512 is the tightest loop for long inputs, and it is the most optimized.; *; * It is a hardened version of UMAC, based off of FARSH's implementation.; *; * This was chosen because it adapts quite well to 32-bit, 64-bit, and SIMD; * implementations, and it is ridiculously fast.; *; * We harden it by mixing the original input to the accumulators as well as the product.; *; * This means that in the (relatively likely) case of a multiply by zero, the; * original input is preserved.; *; * On 128-bit inputs, we swap 64-bit pairs when we add the input to improve; * cross-pollination, as otherwise the upper and lower halves would be; * essentially independent.; *; * This doesn't matter on 64-bit hashes since they all get merged together in; * the end, so we skip the extra step.; *; * Both XXH3_64bits and XXH3_128bits use this subroutine.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:740,Safety,avoid,avoid,740,"/*; * XXH3_scrambleAcc: Scrambles the accumulators to improve mixing.; *; * Multiplication isn't perfect, as explained by Google in HighwayHash:; *; * // Multiplication mixes/scrambles bytes 0-7 of the 64-bit result to; * // varying degrees. In descending order of goodness, bytes; * // 3 4 2 5 1 6 0 7 have quality 228 224 164 160 100 96 36 32.; * // As expected, the upper and lower bytes are much worse.; *; * Source: https://github.com/google/highwayhash/blob/0aaf66b/highwayhash/hh_avx2.h#L291; *; * Since our algorithm uses a pseudorandom secret to add some variance into the; * mix, we don't need to (or want to) mix as often or as much as HighwayHash does.; *; * This isn't as tight as XXH3_accumulate, but still written in SIMD to avoid; * extraction.; *; * Both XXH3_64bits and XXH3_128bits use this subroutine.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:361,Performance,load,loads,361,"/*; * On GCC & Clang, marking 'dest' as modified will cause the compiler:; * - do not extract the secret from sse registers in the internal loop; * - use less common registers, and avoid pushing these reg into stack; * The asm hack causes Clang to assume that XXH3_kSecretPtr aliases with; * customSecret, and on aarch64, this prevented LDP from merging two; * loads together for free. Putting the loads together before the stores; * properly generates LDP.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:398,Performance,load,loads,398,"/*; * On GCC & Clang, marking 'dest' as modified will cause the compiler:; * - do not extract the secret from sse registers in the internal loop; * - use less common registers, and avoid pushing these reg into stack; * The asm hack causes Clang to assume that XXH3_kSecretPtr aliases with; * customSecret, and on aarch64, this prevented LDP from merging two; * loads together for free. Putting the loads together before the stores; * properly generates LDP.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:181,Safety,avoid,avoid,181,"/*; * On GCC & Clang, marking 'dest' as modified will cause the compiler:; * - do not extract the secret from sse registers in the internal loop; * - use less common registers, and avoid pushing these reg into stack; * The asm hack causes Clang to assume that XXH3_kSecretPtr aliases with; * customSecret, and on aarch64, this prevented LDP from merging two; * loads together for free. Putting the loads together before the stores; * properly generates LDP.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:181,Safety,avoid,avoid,181,"/*; * On GCC & Clang, marking 'dest' as modified will cause the compiler:; * - do not extract the secret from sse registers in the internal loop; * - use less common registers, and avoid pushing these reg into stack; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:59,Availability,error,errors,59,/* We don't use a uint32x4_t pointer because it causes bus errors on ARMv7. */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:374,Integrability,rout,routine,374,"/*; * prod_hi = (data_key >> 32) * XXH_PRIME32_1;; *; * Avoid vmul_u32 + vshll_n_u32 since Clang 6 and 7 will; * incorrectly ""optimize"" this:; * tmp = vmul_u32(vmovn_u64(a), vmovn_u64(b));; * shifted = vshll_n_u32(tmp, 32);; * to this:; * tmp = ""vmulq_u64""(a, b); // no such thing!; * shifted = vshlq_n_u64(tmp, 32);; *; * However, unlike SSE, Clang lacks a 64-bit multiply routine; * for NEON, and it scalarizes two 64-bit multiplies instead.; *; * vmull_u32 has the same timing as vmul_u32, and it avoids; * this bug completely.; * See https://bugs.llvm.org/show_bug.cgi?id=39967; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:126,Performance,optimiz,optimize,126,"/*; * prod_hi = (data_key >> 32) * XXH_PRIME32_1;; *; * Avoid vmul_u32 + vshll_n_u32 since Clang 6 and 7 will; * incorrectly ""optimize"" this:; * tmp = vmul_u32(vmovn_u64(a), vmovn_u64(b));; * shifted = vshll_n_u32(tmp, 32);; * to this:; * tmp = ""vmulq_u64""(a, b); // no such thing!; * shifted = vshlq_n_u64(tmp, 32);; *; * However, unlike SSE, Clang lacks a 64-bit multiply routine; * for NEON, and it scalarizes two 64-bit multiplies instead.; *; * vmull_u32 has the same timing as vmul_u32, and it avoids; * this bug completely.; * See https://bugs.llvm.org/show_bug.cgi?id=39967; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:56,Safety,Avoid,Avoid,56,"/*; * prod_hi = (data_key >> 32) * XXH_PRIME32_1;; *; * Avoid vmul_u32 + vshll_n_u32 since Clang 6 and 7 will; * incorrectly ""optimize"" this:; * tmp = vmul_u32(vmovn_u64(a), vmovn_u64(b));; * shifted = vshll_n_u32(tmp, 32);; * to this:; * tmp = ""vmulq_u64""(a, b); // no such thing!; * shifted = vshlq_n_u64(tmp, 32);; *; * However, unlike SSE, Clang lacks a 64-bit multiply routine; * for NEON, and it scalarizes two 64-bit multiplies instead.; *; * vmull_u32 has the same timing as vmul_u32, and it avoids; * this bug completely.; * See https://bugs.llvm.org/show_bug.cgi?id=39967; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:500,Safety,avoid,avoids,500,"/*; * prod_hi = (data_key >> 32) * XXH_PRIME32_1;; *; * Avoid vmul_u32 + vshll_n_u32 since Clang 6 and 7 will; * incorrectly ""optimize"" this:; * tmp = vmul_u32(vmovn_u64(a), vmovn_u64(b));; * shifted = vshll_n_u32(tmp, 32);; * to this:; * tmp = ""vmulq_u64""(a, b); // no such thing!; * shifted = vshlq_n_u64(tmp, 32);; *; * However, unlike SSE, Clang lacks a 64-bit multiply routine; * for NEON, and it scalarizes two 64-bit multiplies instead.; *; * vmull_u32 has the same timing as vmul_u32, and it avoids; * this bug completely.; * See https://bugs.llvm.org/show_bug.cgi?id=39967; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:120,Performance,optimiz,optimize,120,"/*; * We need a separate pointer for the hack below,; * which requires a non-const pointer.; * Any decent compiler will optimize this out otherwise.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:310,Deployability,pipeline,pipelines,310,"/*; * UGLY HACK:; * Clang generates a bunch of MOV/MOVK pairs for aarch64, and they are; * placed sequentially, in order, at the top of the unrolled loop.; *; * While MOVK is great for generating constants (2 cycles for a 64-bit; * constant compared to 4 cycles for LDR), long MOVK chains stall the; * integer pipelines:; * I L S; * MOVK; * MOVK; * MOVK; * MOVK; * ADD; * SUB STR; * STR; * By forcing loads from memory (as the asm line causes Clang to assume; * that XXH3_kSecretPtr has been changed), the pipelines are used more; * efficiently:; * I L S; * LDR; * ADD LDR; * SUB STR; * STR; * XXH3_64bits_withSeed, len == 256, Snapdragon 835; * without hack: 2654.4 MB/s; * with hack: 3202.9 MB/s; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:506,Deployability,pipeline,pipelines,506,"/*; * UGLY HACK:; * Clang generates a bunch of MOV/MOVK pairs for aarch64, and they are; * placed sequentially, in order, at the top of the unrolled loop.; *; * While MOVK is great for generating constants (2 cycles for a 64-bit; * constant compared to 4 cycles for LDR), long MOVK chains stall the; * integer pipelines:; * I L S; * MOVK; * MOVK; * MOVK; * MOVK; * ADD; * SUB STR; * STR; * By forcing loads from memory (as the asm line causes Clang to assume; * that XXH3_kSecretPtr has been changed), the pipelines are used more; * efficiently:; * I L S; * LDR; * ADD LDR; * SUB STR; * STR; * XXH3_64bits_withSeed, len == 256, Snapdragon 835; * without hack: 2654.4 MB/s; * with hack: 3202.9 MB/s; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:533,Energy Efficiency,efficient,efficiently,533,"/*; * UGLY HACK:; * Clang generates a bunch of MOV/MOVK pairs for aarch64, and they are; * placed sequentially, in order, at the top of the unrolled loop.; *; * While MOVK is great for generating constants (2 cycles for a 64-bit; * constant compared to 4 cycles for LDR), long MOVK chains stall the; * integer pipelines:; * I L S; * MOVK; * MOVK; * MOVK; * MOVK; * ADD; * SUB STR; * STR; * By forcing loads from memory (as the asm line causes Clang to assume; * that XXH3_kSecretPtr has been changed), the pipelines are used more; * efficiently:; * I L S; * LDR; * ADD LDR; * SUB STR; * STR; * XXH3_64bits_withSeed, len == 256, Snapdragon 835; * without hack: 2654.4 MB/s; * with hack: 3202.9 MB/s; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:401,Performance,load,loads,401,"/*; * UGLY HACK:; * Clang generates a bunch of MOV/MOVK pairs for aarch64, and they are; * placed sequentially, in order, at the top of the unrolled loop.; *; * While MOVK is great for generating constants (2 cycles for a 64-bit; * constant compared to 4 cycles for LDR), long MOVK chains stall the; * integer pipelines:; * I L S; * MOVK; * MOVK; * MOVK; * MOVK; * ADD; * SUB STR; * STR; * By forcing loads from memory (as the asm line causes Clang to assume; * that XXH3_kSecretPtr has been changed), the pipelines are used more; * efficiently:; * I L S; * LDR; * ADD LDR; * SUB STR; * STR; * XXH3_64bits_withSeed, len == 256, Snapdragon 835; * without hack: 2654.4 MB/s; * with hack: 3202.9 MB/s; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:50,Performance,optimiz,optimization,50,"/*; * Note: in debug mode, this overrides the asm optimization; * and Clang will emit MOVK chains again.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:143,Performance,load,loads,143,"/*; * The asm hack causes Clang to assume that kSecretPtr aliases with; * customSecret, and on aarch64, this prevented LDP from merging two; * loads together for free. Putting the loads together before the stores; * properly generates LDP.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:180,Performance,load,loads,180,"/*; * The asm hack causes Clang to assume that kSecretPtr aliases with; * customSecret, and on aarch64, this prevented LDP from merging two; * loads together for free. Putting the loads together before the stores; * properly generates LDP.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:23,Security,hash,hash,23,/* converge into final hash */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:25,Performance,perform,performance,25,/*; * It's important for performance that XXH3_hashLong is not inlined.; */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:25,Performance,perform,performance,25,"/*; * It's important for performance that XXH3_hashLong is not inlined.; * Since the function is not inlined, the compiler may not be able to understand that,; * in some scenarios, its `secret` argument is actually a compile time constant.; * This variant enforces that the compiler can detect that,; * and uses this opportunity to streamline the generated code for better performance.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:373,Performance,perform,performance,373,"/*; * It's important for performance that XXH3_hashLong is not inlined.; * Since the function is not inlined, the compiler may not be able to understand that,; * in some scenarios, its `secret` argument is actually a compile time constant.; * This variant enforces that the compiler can detect that,; * and uses this opportunity to streamline the generated code for better performance.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:287,Safety,detect,detect,287,"/*; * It's important for performance that XXH3_hashLong is not inlined.; * Since the function is not inlined, the compiler may not be able to understand that,; * in some scenarios, its `secret` argument is actually a compile time constant.; * This variant enforces that the compiler can detect that,; * and uses this opportunity to streamline the generated code for better performance.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:338,Performance,perform,performance,338,"/*; * XXH3_hashLong_64b_withSeed():; * Generate a custom key based on alteration of default XXH3_kSecret with the seed,; * and then use this key for long mode hashing.; *; * This operation is decently fast but nonetheless costs a little bit of time.; * Try to avoid it whenever possible (typically when seed==0).; *; * It's important for performance that XXH3_hashLong is not inlined. Not sure; * why (uop cache maybe?), but the difference is large and easily measurable.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:406,Performance,cache,cache,406,"/*; * XXH3_hashLong_64b_withSeed():; * Generate a custom key based on alteration of default XXH3_kSecret with the seed,; * and then use this key for long mode hashing.; *; * This operation is decently fast but nonetheless costs a little bit of time.; * Try to avoid it whenever possible (typically when seed==0).; *; * It's important for performance that XXH3_hashLong is not inlined. Not sure; * why (uop cache maybe?), but the difference is large and easily measurable.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:260,Safety,avoid,avoid,260,"/*; * XXH3_hashLong_64b_withSeed():; * Generate a custom key based on alteration of default XXH3_kSecret with the seed,; * and then use this key for long mode hashing.; *; * This operation is decently fast but nonetheless costs a little bit of time.; * Try to avoid it whenever possible (typically when seed==0).; *; * It's important for performance that XXH3_hashLong is not inlined. Not sure; * why (uop cache maybe?), but the difference is large and easily measurable.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:159,Security,hash,hashing,159,"/*; * XXH3_hashLong_64b_withSeed():; * Generate a custom key based on alteration of default XXH3_kSecret with the seed,; * and then use this key for long mode hashing.; *; * This operation is decently fast but nonetheless costs a little bit of time.; * Try to avoid it whenever possible (typically when seed==0).; *; * It's important for performance that XXH3_hashLong is not inlined. Not sure; * why (uop cache maybe?), but the difference is large and easily measurable.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:25,Performance,perform,performance,25,/*; * It's important for performance that XXH3_hashLong is not inlined.; */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:291,Availability,error,error,291,"/*; * If an action is to be taken if `secretLen` condition is not respected,; * it should be done here.; * For now, it's a contract pre-condition.; * Adding a check and a branch here would cost performance at every hash.; * Also, note that function signature doesn't offer room to return an error.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:123,Integrability,contract,contract,123,"/*; * If an action is to be taken if `secretLen` condition is not respected,; * it should be done here.; * For now, it's a contract pre-condition.; * Adding a check and a branch here would cost performance at every hash.; * Also, note that function signature doesn't offer room to return an error.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:194,Performance,perform,performance,194,"/*; * If an action is to be taken if `secretLen` condition is not respected,; * it should be done here.; * For now, it's a contract pre-condition.; * Adding a check and a branch here would cost performance at every hash.; * Also, note that function signature doesn't offer room to return an error.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:215,Security,hash,hash,215,"/*; * If an action is to be taken if `secretLen` condition is not respected,; * it should be done here.; * For now, it's a contract pre-condition.; * Adding a check and a branch here would cost performance at every hash.; * Also, note that function signature doesn't offer room to return an error.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1006,Energy Efficiency,power,power,1006,"/* === XXH3 streaming === */; /*; * Malloc's a pointer that is always aligned to align.; *; * This must be freed with `XXH_alignedFree()`.; *; * malloc typically guarantees 16 byte alignment on 64-bit systems and 8 byte; * alignment on 32-bit. This isn't enough for the 32 byte aligned loads in AVX2; * or on 32-bit, the 16 byte aligned loads in SSE2 and NEON.; *; * This underalignment previously caused a rather obvious crash which went; * completely unnoticed due to XXH3_createState() not actually being tested.; * Credit to RedSpah for noticing this bug.; *; * The alignment is done manually: Functions like posix_memalign or _mm_malloc; * are avoided: To maintain portability, we would have to write a fallback; * like this anyways, and besides, testing for the existence of library; * functions without relying on external build tools is impossible.; *; * The method is simple: Overallocate, manually align, and store the offset; * to the original behind the returned pointer.; *; * Align must be a power of 2 and 8 <= align <= 128.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:670,Modifiability,portab,portability,670,"/* === XXH3 streaming === */; /*; * Malloc's a pointer that is always aligned to align.; *; * This must be freed with `XXH_alignedFree()`.; *; * malloc typically guarantees 16 byte alignment on 64-bit systems and 8 byte; * alignment on 32-bit. This isn't enough for the 32 byte aligned loads in AVX2; * or on 32-bit, the 16 byte aligned loads in SSE2 and NEON.; *; * This underalignment previously caused a rather obvious crash which went; * completely unnoticed due to XXH3_createState() not actually being tested.; * Credit to RedSpah for noticing this bug.; *; * The alignment is done manually: Functions like posix_memalign or _mm_malloc; * are avoided: To maintain portability, we would have to write a fallback; * like this anyways, and besides, testing for the existence of library; * functions without relying on external build tools is impossible.; *; * The method is simple: Overallocate, manually align, and store the offset; * to the original behind the returned pointer.; *; * Align must be a power of 2 and 8 <= align <= 128.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:286,Performance,load,loads,286,"/* === XXH3 streaming === */; /*; * Malloc's a pointer that is always aligned to align.; *; * This must be freed with `XXH_alignedFree()`.; *; * malloc typically guarantees 16 byte alignment on 64-bit systems and 8 byte; * alignment on 32-bit. This isn't enough for the 32 byte aligned loads in AVX2; * or on 32-bit, the 16 byte aligned loads in SSE2 and NEON.; *; * This underalignment previously caused a rather obvious crash which went; * completely unnoticed due to XXH3_createState() not actually being tested.; * Credit to RedSpah for noticing this bug.; *; * The alignment is done manually: Functions like posix_memalign or _mm_malloc; * are avoided: To maintain portability, we would have to write a fallback; * like this anyways, and besides, testing for the existence of library; * functions without relying on external build tools is impossible.; *; * The method is simple: Overallocate, manually align, and store the offset; * to the original behind the returned pointer.; *; * Align must be a power of 2 and 8 <= align <= 128.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:337,Performance,load,loads,337,"/* === XXH3 streaming === */; /*; * Malloc's a pointer that is always aligned to align.; *; * This must be freed with `XXH_alignedFree()`.; *; * malloc typically guarantees 16 byte alignment on 64-bit systems and 8 byte; * alignment on 32-bit. This isn't enough for the 32 byte aligned loads in AVX2; * or on 32-bit, the 16 byte aligned loads in SSE2 and NEON.; *; * This underalignment previously caused a rather obvious crash which went; * completely unnoticed due to XXH3_createState() not actually being tested.; * Credit to RedSpah for noticing this bug.; *; * The alignment is done manually: Functions like posix_memalign or _mm_malloc; * are avoided: To maintain portability, we would have to write a fallback; * like this anyways, and besides, testing for the existence of library; * functions without relying on external build tools is impossible.; *; * The method is simple: Overallocate, manually align, and store the offset; * to the original behind the returned pointer.; *; * Align must be a power of 2 and 8 <= align <= 128.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:649,Safety,avoid,avoided,649,"/* === XXH3 streaming === */; /*; * Malloc's a pointer that is always aligned to align.; *; * This must be freed with `XXH_alignedFree()`.; *; * malloc typically guarantees 16 byte alignment on 64-bit systems and 8 byte; * alignment on 32-bit. This isn't enough for the 32 byte aligned loads in AVX2; * or on 32-bit, the 16 byte aligned loads in SSE2 and NEON.; *; * This underalignment previously caused a rather obvious crash which went; * completely unnoticed due to XXH3_createState() not actually being tested.; * Credit to RedSpah for noticing this bug.; *; * The alignment is done manually: Functions like posix_memalign or _mm_malloc; * are avoided: To maintain portability, we would have to write a fallback; * like this anyways, and besides, testing for the existence of library; * functions without relying on external build tools is impossible.; *; * The method is simple: Overallocate, manually align, and store the offset; * to the original behind the returned pointer.; *; * Align must be a power of 2 and 8 <= align <= 128.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:508,Testability,test,tested,508,"/* === XXH3 streaming === */; /*; * Malloc's a pointer that is always aligned to align.; *; * This must be freed with `XXH_alignedFree()`.; *; * malloc typically guarantees 16 byte alignment on 64-bit systems and 8 byte; * alignment on 32-bit. This isn't enough for the 32 byte aligned loads in AVX2; * or on 32-bit, the 16 byte aligned loads in SSE2 and NEON.; *; * This underalignment previously caused a rather obvious crash which went; * completely unnoticed due to XXH3_createState() not actually being tested.; * Credit to RedSpah for noticing this bug.; *; * The alignment is done manually: Functions like posix_memalign or _mm_malloc; * are avoided: To maintain portability, we would have to write a fallback; * like this anyways, and besides, testing for the existence of library; * functions without relying on external build tools is impossible.; *; * The method is simple: Overallocate, manually align, and store the offset; * to the original behind the returned pointer.; *; * Align must be a power of 2 and 8 <= align <= 128.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:752,Testability,test,testing,752,"/* === XXH3 streaming === */; /*; * Malloc's a pointer that is always aligned to align.; *; * This must be freed with `XXH_alignedFree()`.; *; * malloc typically guarantees 16 byte alignment on 64-bit systems and 8 byte; * alignment on 32-bit. This isn't enough for the 32 byte aligned loads in AVX2; * or on 32-bit, the 16 byte aligned loads in SSE2 and NEON.; *; * This underalignment previously caused a rather obvious crash which went; * completely unnoticed due to XXH3_createState() not actually being tested.; * Credit to RedSpah for noticing this bug.; *; * The alignment is done manually: Functions like posix_memalign or _mm_malloc; * are avoided: To maintain portability, we would have to write a fallback; * like this anyways, and besides, testing for the existence of library; * functions without relying on external build tools is impossible.; *; * The method is simple: Overallocate, manually align, and store the offset; * to the original behind the returned pointer.; *; * Align must be a power of 2 and 8 <= align <= 128.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:877,Usability,simpl,simple,877,"/* === XXH3 streaming === */; /*; * Malloc's a pointer that is always aligned to align.; *; * This must be freed with `XXH_alignedFree()`.; *; * malloc typically guarantees 16 byte alignment on 64-bit systems and 8 byte; * alignment on 32-bit. This isn't enough for the 32 byte aligned loads in AVX2; * or on 32-bit, the 16 byte aligned loads in SSE2 and NEON.; *; * This underalignment previously caused a rather obvious crash which went; * completely unnoticed due to XXH3_createState() not actually being tested.; * Credit to RedSpah for noticing this bug.; *; * The alignment is done manually: Functions like posix_memalign or _mm_malloc; * are avoided: To maintain portability, we would have to write a fallback; * like this anyways, and besides, testing for the existence of library; * functions without relying on external build tools is impossible.; *; * The method is simple: Overallocate, manually align, and store the offset; * to the original behind the returned pointer.; *; * Align must be a power of 2 and 8 <= align <= 128.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:3,Energy Efficiency,power,power,3,/* power of 2 */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:31,Energy Efficiency,allocate,allocated,31,"/*; * Frees an aligned pointer allocated by XXH_alignedMalloc(). Don't pass; * normal malloc'd pointers, XXH_alignedMalloc has a specific data layout.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:63,Integrability,rout,routine,63,/*; * Both XXH3_64bits_update and XXH3_128bits_update use this routine.; */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:328,Integrability,depend,dependent,328,"/* ==========================================; * XXH3 128 bits (a.k.a XXH128); * ==========================================; * XXH3's 128-bit variant has better mixing and strength than the 64-bit variant,; * even without counting the significantly larger output size.; *; * For example, extra steps are taken to avoid the seed-dependent collisions; * in 17-240 byte inputs (See XXH3_mix16B and XXH128_mix32B).; *; * This strength naturally comes at the cost of some speed, especially on short; * lengths. Note that longer hashes are about as fast as the 64-bit version; * due to it using only a slight modification of the 64-bit loop.; *; * XXH128 is also more oriented towards 64-bit machines. It is still extremely; * fast for a _128-bit_ hash on 32-bit (it usually clears XXH64).; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:313,Safety,avoid,avoid,313,"/* ==========================================; * XXH3 128 bits (a.k.a XXH128); * ==========================================; * XXH3's 128-bit variant has better mixing and strength than the 64-bit variant,; * even without counting the significantly larger output size.; *; * For example, extra steps are taken to avoid the seed-dependent collisions; * in 17-240 byte inputs (See XXH3_mix16B and XXH128_mix32B).; *; * This strength naturally comes at the cost of some speed, especially on short; * lengths. Note that longer hashes are about as fast as the 64-bit version; * due to it using only a slight modification of the 64-bit loop.; *; * XXH128 is also more oriented towards 64-bit machines. It is still extremely; * fast for a _128-bit_ hash on 32-bit (it usually clears XXH64).; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:523,Security,hash,hashes,523,"/* ==========================================; * XXH3 128 bits (a.k.a XXH128); * ==========================================; * XXH3's 128-bit variant has better mixing and strength than the 64-bit variant,; * even without counting the significantly larger output size.; *; * For example, extra steps are taken to avoid the seed-dependent collisions; * in 17-240 byte inputs (See XXH3_mix16B and XXH128_mix32B).; *; * This strength naturally comes at the cost of some speed, especially on short; * lengths. Note that longer hashes are about as fast as the 64-bit version; * due to it using only a slight modification of the 64-bit loop.; *; * XXH128 is also more oriented towards 64-bit machines. It is still extremely; * fast for a _128-bit_ hash on 32-bit (it usually clears XXH64).; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:742,Security,hash,hash,742,"/* ==========================================; * XXH3 128 bits (a.k.a XXH128); * ==========================================; * XXH3's 128-bit variant has better mixing and strength than the 64-bit variant,; * even without counting the significantly larger output size.; *; * For example, extra steps are taken to avoid the seed-dependent collisions; * in 17-240 byte inputs (See XXH3_mix16B and XXH128_mix32B).; *; * This strength naturally comes at the cost of some speed, especially on short; * lengths. Note that longer hashes are about as fast as the 64-bit version; * due to it using only a slight modification of the 64-bit loop.; *; * XXH128 is also more oriented towards 64-bit machines. It is still extremely; * fast for a _128-bit_ hash on 32-bit (it usually clears XXH64).; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:769,Usability,clear,clears,769,"/* ==========================================; * XXH3 128 bits (a.k.a XXH128); * ==========================================; * XXH3's 128-bit variant has better mixing and strength than the 64-bit variant,; * even without counting the significantly larger output size.; *; * For example, extra steps are taken to avoid the seed-dependent collisions; * in 17-240 byte inputs (See XXH3_mix16B and XXH128_mix32B).; *; * This strength naturally comes at the cost of some speed, especially on short; * lengths. Note that longer hashes are about as fast as the 64-bit version; * due to it using only a slight modification of the 64-bit loop.; *; * XXH128 is also more oriented towards 64-bit machines. It is still extremely; * fast for a _128-bit_ hash on 32-bit (it usually clears XXH64).; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:52,Safety,avoid,avoids,52,"/* Shift len to the left to ensure it is even, this avoids even multiplies. */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:197,Availability,mask,mask,197,"/* 32-bit */; /*; * 32-bit optimized version, which is more readable.; *; * On 32-bit, it removes an ADC and delays a dependency between the two; * halves of m128.high64, but it generates an extra mask on 64-bit.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:118,Integrability,depend,dependency,118,"/* 32-bit */; /*; * 32-bit optimized version, which is more readable.; *; * On 32-bit, it removes an ADC and delays a dependency between the two; * halves of m128.high64, but it generates an extra mask on 64-bit.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:27,Performance,optimiz,optimized,27,"/* 32-bit */; /*; * 32-bit optimized version, which is more readable.; *; * On 32-bit, it removes an ADC and delays a dependency between the two; * halves of m128.high64, but it generates an extra mask on 64-bit.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:128,Availability,mask,mask,128,"/*; * 64-bit optimized (albeit more confusing) version.; *; * Uses some properties of addition and multiplication to remove the mask:; *; * Let:; * a = input_hi.lo = (input_hi & 0x00000000FFFFFFFF); * b = input_hi.hi = (input_hi & 0xFFFFFFFF00000000); * c = XXH_PRIME32_2; *; * a + (b * c); * Inverse Property: x + y - x == y; * a + (b * (1 + c - 1)); * Distributive Property: x * (y + z) == (x * y) + (x * z); * a + (b * 1) + (b * (c - 1)); * Identity Property: x * 1 == x; * a + b + (b * (c - 1)); *; * Substitute a, b, and c:; * input_hi.hi + input_hi.lo + ((xxh_u64)input_hi.lo * (XXH_PRIME32_2 - 1)); *; * Since input_hi.hi + input_hi.lo == input_hi, we get this:; * input_hi + ((xxh_u64)input_hi.lo * (XXH_PRIME32_2 - 1)); */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:13,Performance,optimiz,optimized,13,"/*; * 64-bit optimized (albeit more confusing) version.; *; * Uses some properties of addition and multiplication to remove the mask:; *; * Let:; * a = input_hi.lo = (input_hi & 0x00000000FFFFFFFF); * b = input_hi.hi = (input_hi & 0xFFFFFFFF00000000); * c = XXH_PRIME32_2; *; * a + (b * c); * Inverse Property: x + y - x == y; * a + (b * (1 + c - 1)); * Distributive Property: x * (y + z) == (x * y) + (x * z); * a + (b * 1) + (b * (c - 1)); * Identity Property: x * 1 == x; * a + b + (b * (c - 1)); *; * Substitute a, b, and c:; * input_hi.hi + input_hi.lo + ((xxh_u64)input_hi.lo * (XXH_PRIME32_2 - 1)); *; * Since input_hi.hi + input_hi.lo == input_hi, we get this:; * input_hi + ((xxh_u64)input_hi.lo * (XXH_PRIME32_2 - 1)); */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:23,Security,hash,hash,23,/* converge into final hash */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:25,Performance,perform,performance,25,/*; * It's important for performance that XXH3_hashLong is not inlined.; */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:25,Performance,perform,performance,25,/*; * It's important for performance that XXH3_hashLong is not inlined.; */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:25,Performance,perform,performance,25,/*; * It's important for performance that XXH3_hashLong is not inlined.; */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:122,Integrability,contract,contract,122,"/*; * If an action is to be taken if `secret` conditions are not respected,; * it should be done here.; * For now, it's a contract pre-condition.; * Adding a check and a branch here would cost performance at every hash.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:193,Performance,perform,performance,193,"/*; * If an action is to be taken if `secret` conditions are not respected,; * it should be done here.; * For now, it's a contract pre-condition.; * Adding a check and a branch here would cost performance at every hash.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:214,Security,hash,hash,214,"/*; * If an action is to be taken if `secret` conditions are not respected,; * it should be done here.; * For now, it's a contract pre-condition.; * Adding a check and a branch here would cost performance at every hash.; */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:160,Integrability,rout,routine,160,/* === XXH3 128-bit streaming === */; /*; * All the functions are actually the same as for 64-bit streaming variant.; * The only difference is the finalizatiom routine.; */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:36,Security,hash,hash,36,"/* note : bets that, in most cases, hash values are different */",MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:11,Performance,optimiz,optimization,11,/* Pop our optimization override from above */,MatchSource.CODE_COMMENT,builtins/xxhash/xxhash.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:129,Safety,avoid,avoid,129,"/* define NO_GZIP when compiling if you want to disable gzip header and; trailer creation by deflate(). NO_GZIP would be used to avoid linking in; the crc code when it is not needed. For shared libraries, gzip encoding; should be left enabled. */",MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:286,Performance,perform,performed,286,"/* Sliding window. Input bytes are read into the second half of the window,; * and move to the first half later to keep a dictionary of at least wSize; * bytes. With this organization, matches are limited to a distance of; * wSize-MAX_MATCH bytes, but this ensures that IO is always; * performed with a length multiple of the block size. Also, it limits; * the window size to 64K, which is quite useful on MSDOS.; * To do: use the user input buffer as sliding window.; */",MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:34,Security,hash,hash,34,"/* Link to older string with same hash index. To limit the size of this; * array to 64K, this link is maintained only for the last 32K strings.; * An index in this array is thus a window index modulo 32K.; */",MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:16,Security,hash,hash,16,/* Heads of the hash chains or NIL. */,MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:3,Security,hash,hash,3,/* hash index of string to be inserted */,MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:25,Security,hash,hash,25,/* number of elements in hash table */,MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:163,Security,hash,hash,163,"/* Number of bits by which ins_h must be shifted at each input; * step. It must be such that after MIN_MATCH steps, the oldest; * byte no longer takes part in the hash key, that is:; * hash_shift * MIN_MATCH >= hash_bits; */",MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:26,Security,hash,hash,26,"/* To speed up deflation, hash chains are never searched beyond this; * length. A higher limit improves compression ratio but degrades the; * speed.; */",MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:29,Security,hash,hash,29,/* Insert new strings in the hash table only if the match length is not; * greater than this length. This saves time but degrades compression.; * max_insert_length is used only for compression levels <= 3.; */,MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:686,Energy Efficiency,adapt,adaptation,686,"/* Size of match buffer for literals/lengths. There are 4 reasons for; * limiting lit_bufsize to 64K:; * - frequencies can be kept in 16 bit counters; * - if compression is not successful for the first block, all input; * data is still in the window so we can still emit a stored block even; * when input comes from standard input. (This can also be done for; * all blocks if lit_bufsize is not greater than 32K.); * - if compression is not successful for a file smaller than 64K, we can; * even emit a stored file instead of a stored block (saving 5 bytes).; * This is applicable only for zip (not gzip or zlib).; * - creating new Huffman trees less frequently may not provide fast; * adaptation to changes in the input data statistics. (Take for; * example a binary file with poorly compressible code followed by; * a highly compressible string table.) Smaller buffer sizes give; * fast adaptation but have of course the overhead of transmitting; * trees more frequently.; * - I can't count above 4; */",MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:889,Energy Efficiency,adapt,adaptation,889,"/* Size of match buffer for literals/lengths. There are 4 reasons for; * limiting lit_bufsize to 64K:; * - frequencies can be kept in 16 bit counters; * - if compression is not successful for the first block, all input; * data is still in the window so we can still emit a stored block even; * when input comes from standard input. (This can also be done for; * all blocks if lit_bufsize is not greater than 32K.); * - if compression is not successful for a file smaller than 64K, we can; * even emit a stored file instead of a stored block (saving 5 bytes).; * This is applicable only for zip (not gzip or zlib).; * - creating new Huffman trees less frequently may not provide fast; * adaptation to changes in the input data statistics. (Take for; * example a binary file with poorly compressible code followed by; * a highly compressible string table.) Smaller buffer sizes give; * fast adaptation but have of course the overhead of transmitting; * trees more frequently.; * - I can't count above 4; */",MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:686,Modifiability,adapt,adaptation,686,"/* Size of match buffer for literals/lengths. There are 4 reasons for; * limiting lit_bufsize to 64K:; * - frequencies can be kept in 16 bit counters; * - if compression is not successful for the first block, all input; * data is still in the window so we can still emit a stored block even; * when input comes from standard input. (This can also be done for; * all blocks if lit_bufsize is not greater than 32K.); * - if compression is not successful for a file smaller than 64K, we can; * even emit a stored file instead of a stored block (saving 5 bytes).; * This is applicable only for zip (not gzip or zlib).; * - creating new Huffman trees less frequently may not provide fast; * adaptation to changes in the input data statistics. (Take for; * example a binary file with poorly compressible code followed by; * a highly compressible string table.) Smaller buffer sizes give; * fast adaptation but have of course the overhead of transmitting; * trees more frequently.; * - I can't count above 4; */",MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:889,Modifiability,adapt,adaptation,889,"/* Size of match buffer for literals/lengths. There are 4 reasons for; * limiting lit_bufsize to 64K:; * - frequencies can be kept in 16 bit counters; * - if compression is not successful for the first block, all input; * data is still in the window so we can still emit a stored block even; * when input comes from standard input. (This can also be done for; * all blocks if lit_bufsize is not greater than 32K.); * - if compression is not successful for a file smaller than 64K, we can; * even emit a stored file instead of a stored block (saving 5 bytes).; * This is applicable only for zip (not gzip or zlib).; * - creating new Huffman trees less frequently may not provide fast; * adaptation to changes in the input data statistics. (Take for; * example a binary file with poorly compressible code followed by; * a highly compressible string table.) Smaller buffer sizes give; * fast adaptation but have of course the overhead of transmitting; * trees more frequently.; * - I can't count above 4; */",MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:28,Usability,simpl,simplify,28,"/* Buffer for distances. To simplify the code, d_buf and l_buf have; * the same number of elements. To use different lengths, an extra flag; * array would be necessary.; */",MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:213,Deployability,update,updated,213,/* High water mark offset in window for initialized bytes -- bytes above; * this are set to zero in order to avoid memory check warnings when; * longest match routines access bytes past the input. This is then; * updated to the new high water mark.; */,MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:159,Integrability,rout,routines,159,/* High water mark offset in window for initialized bytes -- bytes above; * this are set to zero in order to avoid memory check warnings when; * longest match routines access bytes past the input. This is then; * updated to the new high water mark.; */,MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:109,Safety,avoid,avoid,109,/* High water mark offset in window for initialized bytes -- bytes above; * this are set to zero in order to avoid memory check warnings when; * longest match routines access bytes past the input. This is then; * updated to the new high water mark.; */,MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:168,Security,access,access,168,/* High water mark offset in window for initialized bytes -- bytes above; * this are set to zero in order to avoid memory check warnings when; * longest match routines access bytes past the input. This is then; * updated to the new high water mark.; */,MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:38,Testability,assert,assertion,38,/* Output a byte on the stream.; * IN assertion: there is enough room in pending_buf.; */,MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:15,Usability,simpl,simplify,15,"/* In order to simplify the code, particularly on 16 bit machines, match; * distances are limited to MAX_DIST instead of WSIZE.; */",MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:95,Availability,error,errors,95,/* Number of bytes after end of data in window to initialize in order to avoid; memory checker errors from longest match routines */; /* in trees.c */,MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:121,Integrability,rout,routines,121,/* Number of bytes after end of data in window to initialize in order to avoid; memory checker errors from longest match routines */; /* in trees.c */,MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:73,Safety,avoid,avoid,73,/* Number of bytes after end of data in window to initialize in order to avoid; memory checker errors from longest match routines */; /* in trees.c */,MatchSource.CODE_COMMENT,builtins/zlib/deflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:286,Performance,perform,performed,286,"/* Sliding window. Input bytes are read into the second half of the window,; * and move to the first half later to keep a dictionary of at least wSize; * bytes. With this organization, matches are limited to a distance of; * wSize-MAX_MATCH bytes, but this ensures that IO is always; * performed with a length multiple of the block size. Also, it limits; * the window size to 64K, which is quite useful on MSDOS.; * To do: use the user input buffer as sliding window.; */",MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:34,Security,hash,hash,34,"/* Link to older string with same hash index. To limit the size of this; * array to 64K, this link is maintained only for the last 32K strings.; * An index in this array is thus a window index modulo 32K.; */",MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:16,Security,hash,hash,16,/* Heads of the hash chains or NIL. */,MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:3,Security,hash,hash,3,/* hash index of string to be inserted */,MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:25,Security,hash,hash,25,/* number of elements in hash table */,MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:163,Security,hash,hash,163,"/* Number of bits by which ins_h must be shifted at each input; * step. It must be such that after MIN_MATCH steps, the oldest; * byte no longer takes part in the hash key, that is:; * hash_shift * MIN_MATCH >= hash_bits; */",MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:26,Security,hash,hash,26,"/* To speed up deflation, hash chains are never searched beyond this; * length. A higher limit improves compression ratio but degrades the; * speed.; */",MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:29,Security,hash,hash,29,/* Insert new strings in the hash table only if the match length is not; * greater than this length. This saves time but degrades compression.; * max_insert_length is used only for compression levels <= 3.; */,MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:686,Energy Efficiency,adapt,adaptation,686,"/* Size of match buffer for literals/lengths. There are 4 reasons for; * limiting lit_bufsize to 64K:; * - frequencies can be kept in 16 bit counters; * - if compression is not successful for the first block, all input; * data is still in the window so we can still emit a stored block even; * when input comes from standard input. (This can also be done for; * all blocks if lit_bufsize is not greater than 32K.); * - if compression is not successful for a file smaller than 64K, we can; * even emit a stored file instead of a stored block (saving 5 bytes).; * This is applicable only for zip (not gzip or zlib).; * - creating new Huffman trees less frequently may not provide fast; * adaptation to changes in the input data statistics. (Take for; * example a binary file with poorly compressible code followed by; * a highly compressible string table.) Smaller buffer sizes give; * fast adaptation but have of course the overhead of transmitting; * trees more frequently.; * - I can't count above 4; */",MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:889,Energy Efficiency,adapt,adaptation,889,"/* Size of match buffer for literals/lengths. There are 4 reasons for; * limiting lit_bufsize to 64K:; * - frequencies can be kept in 16 bit counters; * - if compression is not successful for the first block, all input; * data is still in the window so we can still emit a stored block even; * when input comes from standard input. (This can also be done for; * all blocks if lit_bufsize is not greater than 32K.); * - if compression is not successful for a file smaller than 64K, we can; * even emit a stored file instead of a stored block (saving 5 bytes).; * This is applicable only for zip (not gzip or zlib).; * - creating new Huffman trees less frequently may not provide fast; * adaptation to changes in the input data statistics. (Take for; * example a binary file with poorly compressible code followed by; * a highly compressible string table.) Smaller buffer sizes give; * fast adaptation but have of course the overhead of transmitting; * trees more frequently.; * - I can't count above 4; */",MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:686,Modifiability,adapt,adaptation,686,"/* Size of match buffer for literals/lengths. There are 4 reasons for; * limiting lit_bufsize to 64K:; * - frequencies can be kept in 16 bit counters; * - if compression is not successful for the first block, all input; * data is still in the window so we can still emit a stored block even; * when input comes from standard input. (This can also be done for; * all blocks if lit_bufsize is not greater than 32K.); * - if compression is not successful for a file smaller than 64K, we can; * even emit a stored file instead of a stored block (saving 5 bytes).; * This is applicable only for zip (not gzip or zlib).; * - creating new Huffman trees less frequently may not provide fast; * adaptation to changes in the input data statistics. (Take for; * example a binary file with poorly compressible code followed by; * a highly compressible string table.) Smaller buffer sizes give; * fast adaptation but have of course the overhead of transmitting; * trees more frequently.; * - I can't count above 4; */",MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:889,Modifiability,adapt,adaptation,889,"/* Size of match buffer for literals/lengths. There are 4 reasons for; * limiting lit_bufsize to 64K:; * - frequencies can be kept in 16 bit counters; * - if compression is not successful for the first block, all input; * data is still in the window so we can still emit a stored block even; * when input comes from standard input. (This can also be done for; * all blocks if lit_bufsize is not greater than 32K.); * - if compression is not successful for a file smaller than 64K, we can; * even emit a stored file instead of a stored block (saving 5 bytes).; * This is applicable only for zip (not gzip or zlib).; * - creating new Huffman trees less frequently may not provide fast; * adaptation to changes in the input data statistics. (Take for; * example a binary file with poorly compressible code followed by; * a highly compressible string table.) Smaller buffer sizes give; * fast adaptation but have of course the overhead of transmitting; * trees more frequently.; * - I can't count above 4; */",MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:28,Usability,simpl,simplify,28,"/* Buffer for distances. To simplify the code, d_buf and l_buf have; * the same number of elements. To use different lengths, an extra flag; * array would be necessary.; */",MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:213,Deployability,update,updated,213,/* High water mark offset in window for initialized bytes -- bytes above; * this are set to zero in order to avoid memory check warnings when; * longest match routines access bytes past the input. This is then; * updated to the new high water mark.; */,MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:159,Integrability,rout,routines,159,/* High water mark offset in window for initialized bytes -- bytes above; * this are set to zero in order to avoid memory check warnings when; * longest match routines access bytes past the input. This is then; * updated to the new high water mark.; */,MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:109,Safety,avoid,avoid,109,/* High water mark offset in window for initialized bytes -- bytes above; * this are set to zero in order to avoid memory check warnings when; * longest match routines access bytes past the input. This is then; * updated to the new high water mark.; */,MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:168,Security,access,access,168,/* High water mark offset in window for initialized bytes -- bytes above; * this are set to zero in order to avoid memory check warnings when; * longest match routines access bytes past the input. This is then; * updated to the new high water mark.; */,MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:38,Testability,assert,assertion,38,/* Output a byte on the stream.; * IN assertion: there is enough room in pending_buf.; */,MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:128,Testability,assert,assertion,128,/* ===========================================================================; * Output a short LSB first on the stream.; * IN assertion: there is enough room in pendingBuf.; */,MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:15,Usability,simpl,simplify,15,"/* In order to simplify the code, particularly on 16 bit machines, match; * distances are limited to MAX_DIST instead of WSIZE.; */",MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:95,Availability,error,errors,95,/* Number of bytes after end of data in window to initialize in order to avoid; memory checker errors from longest match routines */; /* in trees.c */,MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:121,Integrability,rout,routines,121,/* Number of bytes after end of data in window to initialize in order to avoid; memory checker errors from longest match routines */; /* in trees.c */,MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:73,Safety,avoid,avoid,73,/* Number of bytes after end of data in window to initialize in order to avoid; memory checker errors from longest match routines */; /* in trees.c */,MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h:89,Performance,optimiz,optimizes,89,/* MSC doesn't have __builtin_expect. Just ignore likely/unlikely and; hope the compiler optimizes for the best.; */,MatchSource.CODE_COMMENT,builtins/zlib/deflate_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h:26,Availability,avail,available,26,"/* In Win32, vsnprintf is available as the ""non-ANSI"" _vsnprintf. */",MatchSource.CODE_COMMENT,builtins/zlib/gzguts.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h:37,Security,integrity,integrity,37,"/* gzip modes, also provide a little integrity check on the passed structure */",MatchSource.CODE_COMMENT,builtins/zlib/gzguts.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h:3,Security,expose,exposed,3,/* exposed contents for gzgetc() macro */,MatchSource.CODE_COMMENT,builtins/zlib/gzguts.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h:50,Availability,avail,available,50,"/* ""x"" for exposed */; /* x.have: number of bytes available at x.next */; /* x.next: next output data to deliver or write */; /* x.pos: current position in uncompressed data */; /* used for both reading and writing */",MatchSource.CODE_COMMENT,builtins/zlib/gzguts.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h:11,Security,expose,exposed,11,"/* ""x"" for exposed */; /* x.have: number of bytes available at x.next */; /* x.next: next output data to deliver or write */; /* x.pos: current position in uncompressed data */; /* used for both reading and writing */",MatchSource.CODE_COMMENT,builtins/zlib/gzguts.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h:18,Availability,error,error,18,/* path or fd for error messages */,MatchSource.CODE_COMMENT,builtins/zlib/gzguts.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h:24,Integrability,message,messages,24,/* path or fd for error messages */,MatchSource.CODE_COMMENT,builtins/zlib/gzguts.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h:28,Energy Efficiency,allocate,allocated,28,"/* buffer size, zero if not allocated yet */",MatchSource.CODE_COMMENT,builtins/zlib/gzguts.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h:39,Availability,error,error,39,/* true if seek request pending */; /* error information */,MatchSource.CODE_COMMENT,builtins/zlib/gzguts.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h:3,Availability,error,error,3,/* error code */,MatchSource.CODE_COMMENT,builtins/zlib/gzguts.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h:3,Availability,error,error,3,/* error message */; /* zlib inflate or deflate stream */,MatchSource.CODE_COMMENT,builtins/zlib/gzguts.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h:9,Integrability,message,message,9,/* error message */; /* zlib inflate or deflate stream */,MatchSource.CODE_COMMENT,builtins/zlib/gzguts.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h:486,Safety,avoid,avoid,486,"/* inflate.h -- internal inflate state definition; * Copyright (C) 1995-2009 Mark Adler; * For conditions of distribution and use, see copyright notice in zlib.h; */; /* WARNING: this file should *not* be used by applications. It is; part of the implementation of the compression library and is; subject to change. Applications should only use zlib.h.; */; /* define NO_GZIP when compiling if you want to disable gzip header and; trailer decoding by inflate(). NO_GZIP would be used to avoid linking in; the crc code when it is not needed. For shared libraries, gzip decoding; should be left enabled. */",MatchSource.CODE_COMMENT,builtins/zlib/inflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h:14,Availability,error,error,14,/* got a data error -- remain here until reset */,MatchSource.CODE_COMMENT,builtins/zlib/inflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h:27,Availability,error,error,27,/* got an inflate() memory error -- remain here until reset */,MatchSource.CODE_COMMENT,builtins/zlib/inflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h:15,Integrability,synchroniz,synchronization,15,/* looking for synchronization bytes to restart inflate() */,MatchSource.CODE_COMMENT,builtins/zlib/inflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h:81,Availability,error,error,81,/*; State transitions between above modes -. (most modes can go to BAD or MEM on error -- not shown for clarity). Process header:; HEAD -> (gzip) or (zlib) or (raw); (gzip) -> FLAGS -> TIME -> OS -> EXLEN -> EXTRA -> NAME -> COMMENT ->; HCRC -> TYPE; (zlib) -> DICTID or TYPE; DICTID -> DICT -> TYPE; (raw) -> TYPEDO; Read deflate blocks:; TYPE -> TYPEDO -> STORED or TABLE or LEN_ or CHECK; STORED -> COPY_ -> COPY -> TYPE; TABLE -> LENLENS -> CODELENS -> LEN_; LEN_ -> LEN; Read deflate codes in fixed or dynamic block:; LEN -> LENEXT or LIT or TYPE; LENEXT -> DIST -> DISTEXT -> MATCH -> LEN; LIT -> LEN; Process trailer:; CHECK -> LENGTH -> DONE; */; /* state maintained between inflate() calls. Approximately 10K bytes. */,MatchSource.CODE_COMMENT,builtins/zlib/inflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h:3,Testability,log,log,3,/* log base 2 of requested window size */,MatchSource.CODE_COMMENT,builtins/zlib/inflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h:3,Energy Efficiency,allocate,allocated,3,"/* allocated sliding window, if needed */; /* bit accumulator */",MatchSource.CODE_COMMENT,builtins/zlib/inflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h:8,Availability,avail,available,8,/* next available space in codes[] */,MatchSource.CODE_COMMENT,builtins/zlib/inflate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.h:999,Deployability,update,updated,999,"/* op values as set by inflate_table():; 00000000 - literal; 0000tttt - table link, tttt != 0 is the number of table index bits; 0001eeee - length or distance, eeee is the number of extra bits; 01100000 - end of block; 01000000 - invalid code; */; /* Maximum size of the dynamic table. The maximum number of code structures is; 1444, which is the sum of 852 for literal/length codes and 592 for distance; codes. These values were found by exhaustive searches using the program; examples/enough.c found in the zlib distribtution. The arguments to that; program are the number of symbols, the initial root table size, and the; maximum bit length of a code. ""enough 286 9 15"" for literal/length codes; returns returns 852, and ""enough 30 6 15"" for distance codes returns 592.; The initial root table size (9 or 6) is found in the fifth argument of the; inflate_table() calls in inflate.c and infback.c. If the root table size is; changed, then these maximum sizes would be need to be recalculated and; updated. */",MatchSource.CODE_COMMENT,builtins/zlib/inftrees.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inftrees.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h:14,Deployability,configurat,configuration,14,"/* zconf.h -- configuration of the zlib compression library; * Copyright (C) 1995-2013 Jean-loup Gailly.; * For conditions of distribution and use, see copyright notice in zlib.h; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,builtins/zlib/zconf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h:14,Modifiability,config,configuration,14,"/* zconf.h -- configuration of the zlib compression library; * Copyright (C) 1995-2013 Jean-loup Gailly.; * For conditions of distribution and use, see copyright notice in zlib.h; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,builtins/zlib/zconf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h:221,Modifiability,config,configure,221,"/*; * If you *really* need a unique prefix for all types and library functions,; * compile with -DZ_PREFIX. The ""standard"" zlib should be compiled without it.; * Even better than compiling with -DZ_PREFIX would be to use configure to set; * this permanently in zconf.h using ""./configure --zprefix"".; */",MatchSource.CODE_COMMENT,builtins/zlib/zconf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h:278,Modifiability,config,configure,278,"/*; * If you *really* need a unique prefix for all types and library functions,; * compile with -DZ_PREFIX. The ""standard"" zlib should be compiled without it.; * Even better than compiling with -DZ_PREFIX would be to use configure to set; * this permanently in zconf.h using ""./configure --zprefix"".; */",MatchSource.CODE_COMMENT,builtins/zlib/zconf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h:28,Modifiability,config,configure,28,/* may be set to #if 1 by ./configure */,MatchSource.CODE_COMMENT,builtins/zlib/zconf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h:61,Energy Efficiency,allocate,allocate,61,/*; * Compile with -DMAXSEG_64K if the alloc function cannot allocate more; * than 64k bytes at a time (needed on systems with 16-bit int).; */,MatchSource.CODE_COMMENT,builtins/zlib/zconf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h:243,Energy Efficiency,reduce,reduce,243,"/* The memory requirements for deflate are (in bytes):; (1 << (windowBits+2)) + (1 << (memLevel+9)); that is: 128K for windowBits=15 + 128K for memLevel = 8 (default values); plus a few kilobytes for small objects. For example, if you want to reduce; the default memory requirements from 256K to 128K, compile with; make CFLAGS=""-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7""; Of course this will generally degrade compression (there's no free lunch). The memory requirements for inflate are (in bytes) 1 << windowBits; that is, 32K for windowBits=15 (default value) plus a few kilobytes; for small objects.; */; /* Type declarations */",MatchSource.CODE_COMMENT,builtins/zlib/zconf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h:153,Testability,test,tested,153,"/* The following definitions for FAR are needed only for MSDOS mixed; * model programming (small or medium model with some far allocations).; * This was tested only with MSC; for other MSDOS compilers you may have; * to define NO_MEMCPY in zutil.h. If you don't need the mixed model,; * just define FAR to be empty.; */",MatchSource.CODE_COMMENT,builtins/zlib/zconf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h:105,Performance,perform,performance,105,"/* If building or using zlib as a DLL, define ZLIB_DLL.; * This is not mandatory, but it offers a little performance increase.; */",MatchSource.CODE_COMMENT,builtins/zlib/zconf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h:28,Modifiability,config,configure,28,/* may be set to #if 1 by ./configure */,MatchSource.CODE_COMMENT,builtins/zlib/zconf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h:28,Modifiability,config,configure,28,/* may be set to #if 1 by ./configure */,MatchSource.CODE_COMMENT,builtins/zlib/zconf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h:14,Deployability,configurat,configuration,14,"/* zconf.h -- configuration of the zlib compression library; * Copyright (C) 1995-2013 Jean-loup Gailly.; * For conditions of distribution and use, see copyright notice in zlib.h; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,builtins/zlib/zconf_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h:14,Modifiability,config,configuration,14,"/* zconf.h -- configuration of the zlib compression library; * Copyright (C) 1995-2013 Jean-loup Gailly.; * For conditions of distribution and use, see copyright notice in zlib.h; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,builtins/zlib/zconf_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h:221,Modifiability,config,configure,221,"/*; * If you *really* need a unique prefix for all types and library functions,; * compile with -DZ_PREFIX. The ""standard"" zlib should be compiled without it.; * Even better than compiling with -DZ_PREFIX would be to use configure to set; * this permanently in zconf.h using ""./configure --zprefix"".; */",MatchSource.CODE_COMMENT,builtins/zlib/zconf_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h:278,Modifiability,config,configure,278,"/*; * If you *really* need a unique prefix for all types and library functions,; * compile with -DZ_PREFIX. The ""standard"" zlib should be compiled without it.; * Even better than compiling with -DZ_PREFIX would be to use configure to set; * this permanently in zconf.h using ""./configure --zprefix"".; */",MatchSource.CODE_COMMENT,builtins/zlib/zconf_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h:28,Modifiability,config,configure,28,/* may be set to #if 1 by ./configure */,MatchSource.CODE_COMMENT,builtins/zlib/zconf_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h:61,Energy Efficiency,allocate,allocate,61,/*; * Compile with -DMAXSEG_64K if the alloc function cannot allocate more; * than 64k bytes at a time (needed on systems with 16-bit int).; */,MatchSource.CODE_COMMENT,builtins/zlib/zconf_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h:243,Energy Efficiency,reduce,reduce,243,"/* The memory requirements for deflate are (in bytes):; (1 << (windowBits+2)) + (1 << (memLevel+9)); that is: 128K for windowBits=15 + 128K for memLevel = 8 (default values); plus a few kilobytes for small objects. For example, if you want to reduce; the default memory requirements from 256K to 128K, compile with; make CFLAGS=""-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7""; Of course this will generally degrade compression (there's no free lunch). The memory requirements for inflate are (in bytes) 1 << windowBits; that is, 32K for windowBits=15 (default value) plus a few kilobytes; for small objects.; */; /* Type declarations */",MatchSource.CODE_COMMENT,builtins/zlib/zconf_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h:153,Testability,test,tested,153,"/* The following definitions for FAR are needed only for MSDOS mixed; * model programming (small or medium model with some far allocations).; * This was tested only with MSC; for other MSDOS compilers you may have; * to define NO_MEMCPY in zutil.h. If you don't need the mixed model,; * just define FAR to be empty.; */",MatchSource.CODE_COMMENT,builtins/zlib/zconf_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h:105,Performance,perform,performance,105,"/* If building or using zlib as a DLL, define ZLIB_DLL.; * This is not mandatory, but it offers a little performance increase.; */",MatchSource.CODE_COMMENT,builtins/zlib/zconf_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h:25,Modifiability,config,configure,25,/* was set to #if 1 by ./configure */,MatchSource.CODE_COMMENT,builtins/zlib/zconf_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h:25,Modifiability,config,configure,25,/* was set to #if 1 by ./configure */,MatchSource.CODE_COMMENT,builtins/zlib/zconf_cf.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:13,Integrability,interface,interface,13,"/* zlib.h -- interface of the 'zlib' general purpose compression library; version 1.2.8, April 28th, 2013. Copyright (C) 1995-2013 Jean-loup Gailly and Mark Adler. This software is provided 'as-is', without any express or implied; warranty. In no event will the authors be held liable for any damages; arising from the use of this software. Permission is granted to anyone to use this software for any purpose,; including commercial applications, and to alter it and redistribute it; freely, subject to the following restrictions:. 1. The origin of this software must not be misrepresented; you must not; claim that you wrote the original software. If you use this software; in a product, an acknowledgment in the product documentation would be; appreciated but is not required.; 2. Altered source versions must be plainly marked as such, and must not be; misrepresented as being the original software.; 3. This notice may not be removed or altered from any source distribution. Jean-loup Gailly Mark Adler; jloup@gzip.org madler@alumni.caltech.edu. The data format used by the zlib library is described by RFCs (Request for; Comments) 1950 to 1952 in the files http://tools.ietf.org/html/rfc1950; (zlib format), rfc1951 (deflate format) and rfc1952 (gzip format).; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1484,Deployability,install,install,1484,"/*; The 'zlib' compression library provides in-memory compression and; decompression functions, including integrity checks of the uncompressed data.; This version of the library supports only one compression method (deflation); but other algorithms will be added later and will have the same stream; interface. Compression can be done in a single step if the buffers are large enough,; or can be done by repeated calls of the compression function. In the latter; case, the application must provide more input and/or consume the output; (providing more output space) before each call. The compressed data format used by default by the in-memory functions is; the zlib format, which is a zlib wrapper documented in RFC 1950, wrapped; around a deflate stream, which is itself documented in RFC 1951. The library also supports reading and writing files in gzip (.gz) format; with an interface similar to that of stdio using the functions that start; with ""gz"". The gzip format is different from the zlib format. gzip is a; gzip wrapper, documented in RFC 1952, wrapped around a deflate stream. This library can optionally read and write gzip streams in memory as well. The zlib format was designed to be compact and fast for use in memory; and on communications channels. The gzip format was designed for single-; file compression on file systems, has a larger header than zlib to maintain; directory information, and uses a different, slower check method than zlib. The library does not install any signal handler. The decoder checks; the consistency of the compressed data, so the library should never crash; even in case of corrupted input.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:300,Integrability,interface,interface,300,"/*; The 'zlib' compression library provides in-memory compression and; decompression functions, including integrity checks of the uncompressed data.; This version of the library supports only one compression method (deflation); but other algorithms will be added later and will have the same stream; interface. Compression can be done in a single step if the buffers are large enough,; or can be done by repeated calls of the compression function. In the latter; case, the application must provide more input and/or consume the output; (providing more output space) before each call. The compressed data format used by default by the in-memory functions is; the zlib format, which is a zlib wrapper documented in RFC 1950, wrapped; around a deflate stream, which is itself documented in RFC 1951. The library also supports reading and writing files in gzip (.gz) format; with an interface similar to that of stdio using the functions that start; with ""gz"". The gzip format is different from the zlib format. gzip is a; gzip wrapper, documented in RFC 1952, wrapped around a deflate stream. This library can optionally read and write gzip streams in memory as well. The zlib format was designed to be compact and fast for use in memory; and on communications channels. The gzip format was designed for single-; file compression on file systems, has a larger header than zlib to maintain; directory information, and uses a different, slower check method than zlib. The library does not install any signal handler. The decoder checks; the consistency of the compressed data, so the library should never crash; even in case of corrupted input.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:691,Integrability,wrap,wrapper,691,"/*; The 'zlib' compression library provides in-memory compression and; decompression functions, including integrity checks of the uncompressed data.; This version of the library supports only one compression method (deflation); but other algorithms will be added later and will have the same stream; interface. Compression can be done in a single step if the buffers are large enough,; or can be done by repeated calls of the compression function. In the latter; case, the application must provide more input and/or consume the output; (providing more output space) before each call. The compressed data format used by default by the in-memory functions is; the zlib format, which is a zlib wrapper documented in RFC 1950, wrapped; around a deflate stream, which is itself documented in RFC 1951. The library also supports reading and writing files in gzip (.gz) format; with an interface similar to that of stdio using the functions that start; with ""gz"". The gzip format is different from the zlib format. gzip is a; gzip wrapper, documented in RFC 1952, wrapped around a deflate stream. This library can optionally read and write gzip streams in memory as well. The zlib format was designed to be compact and fast for use in memory; and on communications channels. The gzip format was designed for single-; file compression on file systems, has a larger header than zlib to maintain; directory information, and uses a different, slower check method than zlib. The library does not install any signal handler. The decoder checks; the consistency of the compressed data, so the library should never crash; even in case of corrupted input.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:723,Integrability,wrap,wrapped,723,"/*; The 'zlib' compression library provides in-memory compression and; decompression functions, including integrity checks of the uncompressed data.; This version of the library supports only one compression method (deflation); but other algorithms will be added later and will have the same stream; interface. Compression can be done in a single step if the buffers are large enough,; or can be done by repeated calls of the compression function. In the latter; case, the application must provide more input and/or consume the output; (providing more output space) before each call. The compressed data format used by default by the in-memory functions is; the zlib format, which is a zlib wrapper documented in RFC 1950, wrapped; around a deflate stream, which is itself documented in RFC 1951. The library also supports reading and writing files in gzip (.gz) format; with an interface similar to that of stdio using the functions that start; with ""gz"". The gzip format is different from the zlib format. gzip is a; gzip wrapper, documented in RFC 1952, wrapped around a deflate stream. This library can optionally read and write gzip streams in memory as well. The zlib format was designed to be compact and fast for use in memory; and on communications channels. The gzip format was designed for single-; file compression on file systems, has a larger header than zlib to maintain; directory information, and uses a different, slower check method than zlib. The library does not install any signal handler. The decoder checks; the consistency of the compressed data, so the library should never crash; even in case of corrupted input.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:879,Integrability,interface,interface,879,"/*; The 'zlib' compression library provides in-memory compression and; decompression functions, including integrity checks of the uncompressed data.; This version of the library supports only one compression method (deflation); but other algorithms will be added later and will have the same stream; interface. Compression can be done in a single step if the buffers are large enough,; or can be done by repeated calls of the compression function. In the latter; case, the application must provide more input and/or consume the output; (providing more output space) before each call. The compressed data format used by default by the in-memory functions is; the zlib format, which is a zlib wrapper documented in RFC 1950, wrapped; around a deflate stream, which is itself documented in RFC 1951. The library also supports reading and writing files in gzip (.gz) format; with an interface similar to that of stdio using the functions that start; with ""gz"". The gzip format is different from the zlib format. gzip is a; gzip wrapper, documented in RFC 1952, wrapped around a deflate stream. This library can optionally read and write gzip streams in memory as well. The zlib format was designed to be compact and fast for use in memory; and on communications channels. The gzip format was designed for single-; file compression on file systems, has a larger header than zlib to maintain; directory information, and uses a different, slower check method than zlib. The library does not install any signal handler. The decoder checks; the consistency of the compressed data, so the library should never crash; even in case of corrupted input.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1024,Integrability,wrap,wrapper,1024,"/*; The 'zlib' compression library provides in-memory compression and; decompression functions, including integrity checks of the uncompressed data.; This version of the library supports only one compression method (deflation); but other algorithms will be added later and will have the same stream; interface. Compression can be done in a single step if the buffers are large enough,; or can be done by repeated calls of the compression function. In the latter; case, the application must provide more input and/or consume the output; (providing more output space) before each call. The compressed data format used by default by the in-memory functions is; the zlib format, which is a zlib wrapper documented in RFC 1950, wrapped; around a deflate stream, which is itself documented in RFC 1951. The library also supports reading and writing files in gzip (.gz) format; with an interface similar to that of stdio using the functions that start; with ""gz"". The gzip format is different from the zlib format. gzip is a; gzip wrapper, documented in RFC 1952, wrapped around a deflate stream. This library can optionally read and write gzip streams in memory as well. The zlib format was designed to be compact and fast for use in memory; and on communications channels. The gzip format was designed for single-; file compression on file systems, has a larger header than zlib to maintain; directory information, and uses a different, slower check method than zlib. The library does not install any signal handler. The decoder checks; the consistency of the compressed data, so the library should never crash; even in case of corrupted input.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1057,Integrability,wrap,wrapped,1057,"/*; The 'zlib' compression library provides in-memory compression and; decompression functions, including integrity checks of the uncompressed data.; This version of the library supports only one compression method (deflation); but other algorithms will be added later and will have the same stream; interface. Compression can be done in a single step if the buffers are large enough,; or can be done by repeated calls of the compression function. In the latter; case, the application must provide more input and/or consume the output; (providing more output space) before each call. The compressed data format used by default by the in-memory functions is; the zlib format, which is a zlib wrapper documented in RFC 1950, wrapped; around a deflate stream, which is itself documented in RFC 1951. The library also supports reading and writing files in gzip (.gz) format; with an interface similar to that of stdio using the functions that start; with ""gz"". The gzip format is different from the zlib format. gzip is a; gzip wrapper, documented in RFC 1952, wrapped around a deflate stream. This library can optionally read and write gzip streams in memory as well. The zlib format was designed to be compact and fast for use in memory; and on communications channels. The gzip format was designed for single-; file compression on file systems, has a larger header than zlib to maintain; directory information, and uses a different, slower check method than zlib. The library does not install any signal handler. The decoder checks; the consistency of the compressed data, so the library should never crash; even in case of corrupted input.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:106,Security,integrity,integrity,106,"/*; The 'zlib' compression library provides in-memory compression and; decompression functions, including integrity checks of the uncompressed data.; This version of the library supports only one compression method (deflation); but other algorithms will be added later and will have the same stream; interface. Compression can be done in a single step if the buffers are large enough,; or can be done by repeated calls of the compression function. In the latter; case, the application must provide more input and/or consume the output; (providing more output space) before each call. The compressed data format used by default by the in-memory functions is; the zlib format, which is a zlib wrapper documented in RFC 1950, wrapped; around a deflate stream, which is itself documented in RFC 1951. The library also supports reading and writing files in gzip (.gz) format; with an interface similar to that of stdio using the functions that start; with ""gz"". The gzip format is different from the zlib format. gzip is a; gzip wrapper, documented in RFC 1952, wrapped around a deflate stream. This library can optionally read and write gzip streams in memory as well. The zlib format was designed to be compact and fast for use in memory; and on communications channels. The gzip format was designed for single-; file compression on file systems, has a larger header than zlib to maintain; directory information, and uses a different, slower check method than zlib. The library does not install any signal handler. The decoder checks; the consistency of the compressed data, so the library should never crash; even in case of corrupted input.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:19,Availability,avail,available,19,/* number of bytes available at next_in */,MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:8,Availability,error,error,8,"/* last error message, NULL if no error */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:34,Availability,error,error,34,"/* last error message, NULL if no error */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:14,Integrability,message,message,14,"/* last error message, NULL if no error */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:11,Energy Efficiency,allocate,allocate,11,/* used to allocate the internal state */,MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:52,Integrability,rout,routines,52,/*; gzip header information passed to and from zlib routines. See RFC 1952; for more details on the meanings of these fields.; */,MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:25,Deployability,update,update,25,"/*; The application must update next_in and avail_in when avail_in has dropped; to zero. It must update next_out and avail_out when avail_out has dropped; to zero. The application must initialize zalloc, zfree and opaque before; calling the init function. All other fields are set by the compression; library and must not be updated by the application. The opaque value provided by the application will be passed as the first; parameter for calls of zalloc and zfree. This can be useful for custom; memory management. The compression library attaches no meaning to the; opaque value. zalloc must return Z_NULL if there is not enough memory for the object.; If zlib is used in a multi-threaded application, zalloc and zfree must be; thread safe. On 16-bit systems, the functions zalloc and zfree must be able to allocate; exactly 65536 bytes, but will not be required to allocate more than this if; the symbol MAXSEG_64K is defined (see zconf.h). WARNING: On MSDOS, pointers; returned by zalloc for objects of exactly 65536 bytes *must* have their; offset normalized to zero. The default allocation function provided by this; library ensures this (see zutil.c). To reduce memory requirements and avoid; any allocation of 64K objects, at the expense of compression ratio, compile; the library with -DMAX_WBITS=14 (see zconf.h). The fields total_in and total_out can be used for statistics or progress; reports. After compression, total_in holds the total size of the; uncompressed data and may be saved for use in the decompressor (particularly; if the decompressor wants to decompress everything in a single step).; */; /* constants */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:97,Deployability,update,update,97,"/*; The application must update next_in and avail_in when avail_in has dropped; to zero. It must update next_out and avail_out when avail_out has dropped; to zero. The application must initialize zalloc, zfree and opaque before; calling the init function. All other fields are set by the compression; library and must not be updated by the application. The opaque value provided by the application will be passed as the first; parameter for calls of zalloc and zfree. This can be useful for custom; memory management. The compression library attaches no meaning to the; opaque value. zalloc must return Z_NULL if there is not enough memory for the object.; If zlib is used in a multi-threaded application, zalloc and zfree must be; thread safe. On 16-bit systems, the functions zalloc and zfree must be able to allocate; exactly 65536 bytes, but will not be required to allocate more than this if; the symbol MAXSEG_64K is defined (see zconf.h). WARNING: On MSDOS, pointers; returned by zalloc for objects of exactly 65536 bytes *must* have their; offset normalized to zero. The default allocation function provided by this; library ensures this (see zutil.c). To reduce memory requirements and avoid; any allocation of 64K objects, at the expense of compression ratio, compile; the library with -DMAX_WBITS=14 (see zconf.h). The fields total_in and total_out can be used for statistics or progress; reports. After compression, total_in holds the total size of the; uncompressed data and may be saved for use in the decompressor (particularly; if the decompressor wants to decompress everything in a single step).; */; /* constants */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:325,Deployability,update,updated,325,"/*; The application must update next_in and avail_in when avail_in has dropped; to zero. It must update next_out and avail_out when avail_out has dropped; to zero. The application must initialize zalloc, zfree and opaque before; calling the init function. All other fields are set by the compression; library and must not be updated by the application. The opaque value provided by the application will be passed as the first; parameter for calls of zalloc and zfree. This can be useful for custom; memory management. The compression library attaches no meaning to the; opaque value. zalloc must return Z_NULL if there is not enough memory for the object.; If zlib is used in a multi-threaded application, zalloc and zfree must be; thread safe. On 16-bit systems, the functions zalloc and zfree must be able to allocate; exactly 65536 bytes, but will not be required to allocate more than this if; the symbol MAXSEG_64K is defined (see zconf.h). WARNING: On MSDOS, pointers; returned by zalloc for objects of exactly 65536 bytes *must* have their; offset normalized to zero. The default allocation function provided by this; library ensures this (see zutil.c). To reduce memory requirements and avoid; any allocation of 64K objects, at the expense of compression ratio, compile; the library with -DMAX_WBITS=14 (see zconf.h). The fields total_in and total_out can be used for statistics or progress; reports. After compression, total_in holds the total size of the; uncompressed data and may be saved for use in the decompressor (particularly; if the decompressor wants to decompress everything in a single step).; */; /* constants */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:811,Energy Efficiency,allocate,allocate,811,"/*; The application must update next_in and avail_in when avail_in has dropped; to zero. It must update next_out and avail_out when avail_out has dropped; to zero. The application must initialize zalloc, zfree and opaque before; calling the init function. All other fields are set by the compression; library and must not be updated by the application. The opaque value provided by the application will be passed as the first; parameter for calls of zalloc and zfree. This can be useful for custom; memory management. The compression library attaches no meaning to the; opaque value. zalloc must return Z_NULL if there is not enough memory for the object.; If zlib is used in a multi-threaded application, zalloc and zfree must be; thread safe. On 16-bit systems, the functions zalloc and zfree must be able to allocate; exactly 65536 bytes, but will not be required to allocate more than this if; the symbol MAXSEG_64K is defined (see zconf.h). WARNING: On MSDOS, pointers; returned by zalloc for objects of exactly 65536 bytes *must* have their; offset normalized to zero. The default allocation function provided by this; library ensures this (see zutil.c). To reduce memory requirements and avoid; any allocation of 64K objects, at the expense of compression ratio, compile; the library with -DMAX_WBITS=14 (see zconf.h). The fields total_in and total_out can be used for statistics or progress; reports. After compression, total_in holds the total size of the; uncompressed data and may be saved for use in the decompressor (particularly; if the decompressor wants to decompress everything in a single step).; */; /* constants */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:870,Energy Efficiency,allocate,allocate,870,"/*; The application must update next_in and avail_in when avail_in has dropped; to zero. It must update next_out and avail_out when avail_out has dropped; to zero. The application must initialize zalloc, zfree and opaque before; calling the init function. All other fields are set by the compression; library and must not be updated by the application. The opaque value provided by the application will be passed as the first; parameter for calls of zalloc and zfree. This can be useful for custom; memory management. The compression library attaches no meaning to the; opaque value. zalloc must return Z_NULL if there is not enough memory for the object.; If zlib is used in a multi-threaded application, zalloc and zfree must be; thread safe. On 16-bit systems, the functions zalloc and zfree must be able to allocate; exactly 65536 bytes, but will not be required to allocate more than this if; the symbol MAXSEG_64K is defined (see zconf.h). WARNING: On MSDOS, pointers; returned by zalloc for objects of exactly 65536 bytes *must* have their; offset normalized to zero. The default allocation function provided by this; library ensures this (see zutil.c). To reduce memory requirements and avoid; any allocation of 64K objects, at the expense of compression ratio, compile; the library with -DMAX_WBITS=14 (see zconf.h). The fields total_in and total_out can be used for statistics or progress; reports. After compression, total_in holds the total size of the; uncompressed data and may be saved for use in the decompressor (particularly; if the decompressor wants to decompress everything in a single step).; */; /* constants */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1164,Energy Efficiency,reduce,reduce,1164,"/*; The application must update next_in and avail_in when avail_in has dropped; to zero. It must update next_out and avail_out when avail_out has dropped; to zero. The application must initialize zalloc, zfree and opaque before; calling the init function. All other fields are set by the compression; library and must not be updated by the application. The opaque value provided by the application will be passed as the first; parameter for calls of zalloc and zfree. This can be useful for custom; memory management. The compression library attaches no meaning to the; opaque value. zalloc must return Z_NULL if there is not enough memory for the object.; If zlib is used in a multi-threaded application, zalloc and zfree must be; thread safe. On 16-bit systems, the functions zalloc and zfree must be able to allocate; exactly 65536 bytes, but will not be required to allocate more than this if; the symbol MAXSEG_64K is defined (see zconf.h). WARNING: On MSDOS, pointers; returned by zalloc for objects of exactly 65536 bytes *must* have their; offset normalized to zero. The default allocation function provided by this; library ensures this (see zutil.c). To reduce memory requirements and avoid; any allocation of 64K objects, at the expense of compression ratio, compile; the library with -DMAX_WBITS=14 (see zconf.h). The fields total_in and total_out can be used for statistics or progress; reports. After compression, total_in holds the total size of the; uncompressed data and may be saved for use in the decompressor (particularly; if the decompressor wants to decompress everything in a single step).; */; /* constants */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:678,Performance,multi-thread,multi-threaded,678,"/*; The application must update next_in and avail_in when avail_in has dropped; to zero. It must update next_out and avail_out when avail_out has dropped; to zero. The application must initialize zalloc, zfree and opaque before; calling the init function. All other fields are set by the compression; library and must not be updated by the application. The opaque value provided by the application will be passed as the first; parameter for calls of zalloc and zfree. This can be useful for custom; memory management. The compression library attaches no meaning to the; opaque value. zalloc must return Z_NULL if there is not enough memory for the object.; If zlib is used in a multi-threaded application, zalloc and zfree must be; thread safe. On 16-bit systems, the functions zalloc and zfree must be able to allocate; exactly 65536 bytes, but will not be required to allocate more than this if; the symbol MAXSEG_64K is defined (see zconf.h). WARNING: On MSDOS, pointers; returned by zalloc for objects of exactly 65536 bytes *must* have their; offset normalized to zero. The default allocation function provided by this; library ensures this (see zutil.c). To reduce memory requirements and avoid; any allocation of 64K objects, at the expense of compression ratio, compile; the library with -DMAX_WBITS=14 (see zconf.h). The fields total_in and total_out can be used for statistics or progress; reports. After compression, total_in holds the total size of the; uncompressed data and may be saved for use in the decompressor (particularly; if the decompressor wants to decompress everything in a single step).; */; /* constants */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:739,Safety,safe,safe,739,"/*; The application must update next_in and avail_in when avail_in has dropped; to zero. It must update next_out and avail_out when avail_out has dropped; to zero. The application must initialize zalloc, zfree and opaque before; calling the init function. All other fields are set by the compression; library and must not be updated by the application. The opaque value provided by the application will be passed as the first; parameter for calls of zalloc and zfree. This can be useful for custom; memory management. The compression library attaches no meaning to the; opaque value. zalloc must return Z_NULL if there is not enough memory for the object.; If zlib is used in a multi-threaded application, zalloc and zfree must be; thread safe. On 16-bit systems, the functions zalloc and zfree must be able to allocate; exactly 65536 bytes, but will not be required to allocate more than this if; the symbol MAXSEG_64K is defined (see zconf.h). WARNING: On MSDOS, pointers; returned by zalloc for objects of exactly 65536 bytes *must* have their; offset normalized to zero. The default allocation function provided by this; library ensures this (see zutil.c). To reduce memory requirements and avoid; any allocation of 64K objects, at the expense of compression ratio, compile; the library with -DMAX_WBITS=14 (see zconf.h). The fields total_in and total_out can be used for statistics or progress; reports. After compression, total_in holds the total size of the; uncompressed data and may be saved for use in the decompressor (particularly; if the decompressor wants to decompress everything in a single step).; */; /* constants */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1195,Safety,avoid,avoid,1195,"/*; The application must update next_in and avail_in when avail_in has dropped; to zero. It must update next_out and avail_out when avail_out has dropped; to zero. The application must initialize zalloc, zfree and opaque before; calling the init function. All other fields are set by the compression; library and must not be updated by the application. The opaque value provided by the application will be passed as the first; parameter for calls of zalloc and zfree. This can be useful for custom; memory management. The compression library attaches no meaning to the; opaque value. zalloc must return Z_NULL if there is not enough memory for the object.; If zlib is used in a multi-threaded application, zalloc and zfree must be; thread safe. On 16-bit systems, the functions zalloc and zfree must be able to allocate; exactly 65536 bytes, but will not be required to allocate more than this if; the symbol MAXSEG_64K is defined (see zconf.h). WARNING: On MSDOS, pointers; returned by zalloc for objects of exactly 65536 bytes *must* have their; offset normalized to zero. The default allocation function provided by this; library ensures this (see zutil.c). To reduce memory requirements and avoid; any allocation of 64K objects, at the expense of compression ratio, compile; the library with -DMAX_WBITS=14 (see zconf.h). The fields total_in and total_out can be used for statistics or progress; reports. After compression, total_in holds the total size of the; uncompressed data and may be saved for use in the decompressor (particularly; if the decompressor wants to decompress everything in a single step).; */; /* constants */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:84,Availability,error,errors,84,"/* Return codes for the compression/decompression functions. Negative values; * are errors, positive values are used for special but normal events.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1224,Availability,error,error,1224,"/* The application can compare zlibVersion and ZLIB_VERSION for consistency.; If the first character differs, the library code actually used is not; compatible with the zlib.h header file used by the application. This check; is automatically made by deflateInit and inflateInit.; */; /*; ZEXTERN int ZEXPORT deflateInit OF((z_streamp strm, int level));. Initializes the internal stream state for compression. The fields; zalloc, zfree and opaque must be initialized before by the caller. If; zalloc and zfree are set to Z_NULL, deflateInit updates them to use default; allocation functions. The compression level must be Z_DEFAULT_COMPRESSION, or between 0 and 9:; 1 gives best speed, 9 gives best compression, 0 gives no compression at all; (the input data is simply copied a block at a time). Z_DEFAULT_COMPRESSION; requests a default compromise between speed and compression (currently; equivalent to level 6). deflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_STREAM_ERROR if level is not a valid compression level, or; Z_VERSION_ERROR if the zlib library version (zlib_version) is incompatible; with the version assumed by the caller (ZLIB_VERSION). msg is set to null; if there is no error message. deflateInit does not perform any compression:; this will be done by deflate().; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:540,Deployability,update,updates,540,"/* The application can compare zlibVersion and ZLIB_VERSION for consistency.; If the first character differs, the library code actually used is not; compatible with the zlib.h header file used by the application. This check; is automatically made by deflateInit and inflateInit.; */; /*; ZEXTERN int ZEXPORT deflateInit OF((z_streamp strm, int level));. Initializes the internal stream state for compression. The fields; zalloc, zfree and opaque must be initialized before by the caller. If; zalloc and zfree are set to Z_NULL, deflateInit updates them to use default; allocation functions. The compression level must be Z_DEFAULT_COMPRESSION, or between 0 and 9:; 1 gives best speed, 9 gives best compression, 0 gives no compression at all; (the input data is simply copied a block at a time). Z_DEFAULT_COMPRESSION; requests a default compromise between speed and compression (currently; equivalent to level 6). deflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_STREAM_ERROR if level is not a valid compression level, or; Z_VERSION_ERROR if the zlib library version (zlib_version) is incompatible; with the version assumed by the caller (ZLIB_VERSION). msg is set to null; if there is no error message. deflateInit does not perform any compression:; this will be done by deflate().; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1230,Integrability,message,message,1230,"/* The application can compare zlibVersion and ZLIB_VERSION for consistency.; If the first character differs, the library code actually used is not; compatible with the zlib.h header file used by the application. This check; is automatically made by deflateInit and inflateInit.; */; /*; ZEXTERN int ZEXPORT deflateInit OF((z_streamp strm, int level));. Initializes the internal stream state for compression. The fields; zalloc, zfree and opaque must be initialized before by the caller. If; zalloc and zfree are set to Z_NULL, deflateInit updates them to use default; allocation functions. The compression level must be Z_DEFAULT_COMPRESSION, or between 0 and 9:; 1 gives best speed, 9 gives best compression, 0 gives no compression at all; (the input data is simply copied a block at a time). Z_DEFAULT_COMPRESSION; requests a default compromise between speed and compression (currently; equivalent to level 6). deflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_STREAM_ERROR if level is not a valid compression level, or; Z_VERSION_ERROR if the zlib library version (zlib_version) is incompatible; with the version assumed by the caller (ZLIB_VERSION). msg is set to null; if there is no error message. deflateInit does not perform any compression:; this will be done by deflate().; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1260,Performance,perform,perform,1260,"/* The application can compare zlibVersion and ZLIB_VERSION for consistency.; If the first character differs, the library code actually used is not; compatible with the zlib.h header file used by the application. This check; is automatically made by deflateInit and inflateInit.; */; /*; ZEXTERN int ZEXPORT deflateInit OF((z_streamp strm, int level));. Initializes the internal stream state for compression. The fields; zalloc, zfree and opaque must be initialized before by the caller. If; zalloc and zfree are set to Z_NULL, deflateInit updates them to use default; allocation functions. The compression level must be Z_DEFAULT_COMPRESSION, or between 0 and 9:; 1 gives best speed, 9 gives best compression, 0 gives no compression at all; (the input data is simply copied a block at a time). Z_DEFAULT_COMPRESSION; requests a default compromise between speed and compression (currently; equivalent to level 6). deflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_STREAM_ERROR if level is not a valid compression level, or; Z_VERSION_ERROR if the zlib library version (zlib_version) is incompatible; with the version assumed by the caller (ZLIB_VERSION). msg is set to null; if there is no error message. deflateInit does not perform any compression:; this will be done by deflate().; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:761,Usability,simpl,simply,761,"/* The application can compare zlibVersion and ZLIB_VERSION for consistency.; If the first character differs, the library code actually used is not; compatible with the zlib.h header file used by the application. This check; is automatically made by deflateInit and inflateInit.; */; /*; ZEXTERN int ZEXPORT deflateInit OF((z_streamp strm, int level));. Initializes the internal stream state for compression. The fields; zalloc, zfree and opaque must be initialized before by the caller. If; zalloc and zfree are set to Z_NULL, deflateInit updates them to use default; allocation functions. The compression level must be Z_DEFAULT_COMPRESSION, or between 0 and 9:; 1 gives best speed, 9 gives best compression, 0 gives no compression at all; (the input data is simply copied a block at a time). Z_DEFAULT_COMPRESSION; requests a default compromise between speed and compression (currently; equivalent to level 6). deflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_STREAM_ERROR if level is not a valid compression level, or; Z_VERSION_ERROR if the zlib library version (zlib_version) is incompatible; with the version assumed by the caller (ZLIB_VERSION). msg is set to null; if there is no error message. deflateInit does not perform any compression:; this will be done by deflate().; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1916,Availability,avail,available,1916,"ratio, so this parameter; should be set only when necessary (in interactive applications). Some; output may be provided even if flush is not set. Before the call of deflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming more; output, and updating avail_in or avail_out accordingly; avail_out should; never be zero before the call. The application can consume the compressed; output when it wants, for example when the output buffer is full (avail_out; == 0), or after each call of deflate(). If deflate returns Z_OK and with; zero avail_out, it must be called again after making room in the output; buffer because there might be more output pending. Normally the parameter flush is set to Z_NO_FLUSH, which allows deflate to; decide how much data to accumulate before producing output, in order to; maximize compression. If the parameter flush is set to Z_SYNC_FLUSH, all pending output is; flushed to the output buffer and the output is aligned on a byte boundary, so; that the decompressor can get all input data available so far. (In; particular avail_in is zero after the call if enough output space has been; provided before the call.) Flushing may degrade compression for some; compression algorithms and so it should be used only when necessary. This; completes the current deflate block and follows it with an empty stored block; that is three bits plus filler bits to the next byte, followed by four bytes; (00 00 ff ff). If flush is set to Z_PARTIAL_FLUSH, all pending output is flushed to the; output buffer, but the output is not aligned to a byte boundary. All of the; input data so far will be available to the decompressor, as for Z_SYNC_FLUSH.; This completes the current deflate block and follows it with an empty fixed; codes block that is 10 bits long. This assures that enough bytes are output; in order for the decompressor to finish the block before the empty fixed code; block. If flush is set to Z_BLOC",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:2509,Availability,avail,available,2509,"there might be more output pending. Normally the parameter flush is set to Z_NO_FLUSH, which allows deflate to; decide how much data to accumulate before producing output, in order to; maximize compression. If the parameter flush is set to Z_SYNC_FLUSH, all pending output is; flushed to the output buffer and the output is aligned on a byte boundary, so; that the decompressor can get all input data available so far. (In; particular avail_in is zero after the call if enough output space has been; provided before the call.) Flushing may degrade compression for some; compression algorithms and so it should be used only when necessary. This; completes the current deflate block and follows it with an empty stored block; that is three bits plus filler bits to the next byte, followed by four bytes; (00 00 ff ff). If flush is set to Z_PARTIAL_FLUSH, all pending output is flushed to the; output buffer, but the output is not aligned to a byte boundary. All of the; input data so far will be available to the decompressor, as for Z_SYNC_FLUSH.; This completes the current deflate block and follows it with an empty fixed; codes block that is 10 bits long. This assures that enough bytes are output; in order for the decompressor to finish the block before the empty fixed code; block. If flush is set to Z_BLOCK, a deflate block is completed and emitted, as; for Z_SYNC_FLUSH, but the output is not aligned on a byte boundary, and up to; seven bits of the current block are held to be written as the next byte after; the next deflate block is completed. In this case, the decompressor may not; be provided enough bits at this point in order to complete decompression of; the data provided so far to the compressor. It may need to wait for the next; block to be emitted. This is for advanced applications that need to control; the emission of deflate blocks. If flush is set to Z_FULL_FLUSH, all output is flushed as with; Z_SYNC_FLUSH, and the compression state is reset so that decompression can; ",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:4435,Availability,error,error,4435,"e next; block to be emitted. This is for advanced applications that need to control; the emission of deflate blocks. If flush is set to Z_FULL_FLUSH, all output is flushed as with; Z_SYNC_FLUSH, and the compression state is reset so that decompression can; restart from this point if previous compressed data has been damaged or if; random access is desired. Using Z_FULL_FLUSH too often can seriously degrade; compression. If deflate returns with avail_out == 0, this function must be called again; with the same value of the flush parameter and more output space (updated; avail_out), until the flush is complete (deflate returns with non-zero; avail_out). In the case of a Z_FULL_FLUSH or Z_SYNC_FLUSH, make sure that; avail_out is greater than six to avoid repeated flush markers due to; avail_out == 0 on return. If the parameter flush is set to Z_FINISH, pending input is processed,; pending output is flushed and deflate returns with Z_STREAM_END if there was; enough output space; if deflate returns with Z_OK, this function must be; called again with Z_FINISH and more output space (updated avail_out) but no; more input data, until it returns with Z_STREAM_END or an error. After; deflate has returned Z_STREAM_END, the only possible operations on the stream; are deflateReset or deflateEnd. Z_FINISH can be used immediately after deflateInit if all the compression; is to be done in a single step. In this case, avail_out must be at least the; value returned by deflateBound (see below). Then deflate is guaranteed to; return Z_STREAM_END. If not enough output space is provided, deflate will; not return Z_STREAM_END, and it must be called again as described above. deflate() sets strm->adler to the adler32 checksum of all input read; so far (that is, total_in bytes). deflate() may update strm->data_type if it can make a good guess about; the input data type (Z_BINARY or Z_TEXT). In doubt, the data is considered; binary. This field is only for information purposes and does not affec",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:386,Deployability,update,update,386,"/*; deflate compresses as much data as possible, and stops when the input; buffer becomes empty or the output buffer becomes full. It may introduce; some output latency (reading input without producing any output) except when; forced to flush. The detailed semantics are as follows. deflate performs one or both of the; following actions:. - Compress more input starting at next_in and update next_in and avail_in; accordingly. If not all input can be processed (because there is not; enough room in the output buffer), next_in and avail_in are updated and; processing will resume at this point for the next call of deflate(). - Provide more output starting at next_out and update next_out and avail_out; accordingly. This action is forced if the parameter flush is non zero.; Forcing flush frequently degrades the compression ratio, so this parameter; should be set only when necessary (in interactive applications). Some; output may be provided even if flush is not set. Before the call of deflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming more; output, and updating avail_in or avail_out accordingly; avail_out should; never be zero before the call. The application can consume the compressed; output when it wants, for example when the output buffer is full (avail_out; == 0), or after each call of deflate(). If deflate returns Z_OK and with; zero avail_out, it must be called again after making room in the output; buffer because there might be more output pending. Normally the parameter flush is set to Z_NO_FLUSH, which allows deflate to; decide how much data to accumulate before producing output, in order to; maximize compression. If the parameter flush is set to Z_SYNC_FLUSH, all pending output is; flushed to the output buffer and the output is aligned on a byte boundary, so; that the decompressor can get all input data available so far. (In; particular avail_in is zero after the call if enough output sp",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:545,Deployability,update,updated,545,"/*; deflate compresses as much data as possible, and stops when the input; buffer becomes empty or the output buffer becomes full. It may introduce; some output latency (reading input without producing any output) except when; forced to flush. The detailed semantics are as follows. deflate performs one or both of the; following actions:. - Compress more input starting at next_in and update next_in and avail_in; accordingly. If not all input can be processed (because there is not; enough room in the output buffer), next_in and avail_in are updated and; processing will resume at this point for the next call of deflate(). - Provide more output starting at next_out and update next_out and avail_out; accordingly. This action is forced if the parameter flush is non zero.; Forcing flush frequently degrades the compression ratio, so this parameter; should be set only when necessary (in interactive applications). Some; output may be provided even if flush is not set. Before the call of deflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming more; output, and updating avail_in or avail_out accordingly; avail_out should; never be zero before the call. The application can consume the compressed; output when it wants, for example when the output buffer is full (avail_out; == 0), or after each call of deflate(). If deflate returns Z_OK and with; zero avail_out, it must be called again after making room in the output; buffer because there might be more output pending. Normally the parameter flush is set to Z_NO_FLUSH, which allows deflate to; decide how much data to accumulate before producing output, in order to; maximize compression. If the parameter flush is set to Z_SYNC_FLUSH, all pending output is; flushed to the output buffer and the output is aligned on a byte boundary, so; that the decompressor can get all input data available so far. (In; particular avail_in is zero after the call if enough output sp",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:674,Deployability,update,update,674,"/*; deflate compresses as much data as possible, and stops when the input; buffer becomes empty or the output buffer becomes full. It may introduce; some output latency (reading input without producing any output) except when; forced to flush. The detailed semantics are as follows. deflate performs one or both of the; following actions:. - Compress more input starting at next_in and update next_in and avail_in; accordingly. If not all input can be processed (because there is not; enough room in the output buffer), next_in and avail_in are updated and; processing will resume at this point for the next call of deflate(). - Provide more output starting at next_out and update next_out and avail_out; accordingly. This action is forced if the parameter flush is non zero.; Forcing flush frequently degrades the compression ratio, so this parameter; should be set only when necessary (in interactive applications). Some; output may be provided even if flush is not set. Before the call of deflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming more; output, and updating avail_in or avail_out accordingly; avail_out should; never be zero before the call. The application can consume the compressed; output when it wants, for example when the output buffer is full (avail_out; == 0), or after each call of deflate(). If deflate returns Z_OK and with; zero avail_out, it must be called again after making room in the output; buffer because there might be more output pending. Normally the parameter flush is set to Z_NO_FLUSH, which allows deflate to; decide how much data to accumulate before producing output, in order to; maximize compression. If the parameter flush is set to Z_SYNC_FLUSH, all pending output is; flushed to the output buffer and the output is aligned on a byte boundary, so; that the decompressor can get all input data available so far. (In; particular avail_in is zero after the call if enough output sp",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3824,Deployability,update,updated,3824,"ck. If flush is set to Z_BLOCK, a deflate block is completed and emitted, as; for Z_SYNC_FLUSH, but the output is not aligned on a byte boundary, and up to; seven bits of the current block are held to be written as the next byte after; the next deflate block is completed. In this case, the decompressor may not; be provided enough bits at this point in order to complete decompression of; the data provided so far to the compressor. It may need to wait for the next; block to be emitted. This is for advanced applications that need to control; the emission of deflate blocks. If flush is set to Z_FULL_FLUSH, all output is flushed as with; Z_SYNC_FLUSH, and the compression state is reset so that decompression can; restart from this point if previous compressed data has been damaged or if; random access is desired. Using Z_FULL_FLUSH too often can seriously degrade; compression. If deflate returns with avail_out == 0, this function must be called again; with the same value of the flush parameter and more output space (updated; avail_out), until the flush is complete (deflate returns with non-zero; avail_out). In the case of a Z_FULL_FLUSH or Z_SYNC_FLUSH, make sure that; avail_out is greater than six to avoid repeated flush markers due to; avail_out == 0 on return. If the parameter flush is set to Z_FINISH, pending input is processed,; pending output is flushed and deflate returns with Z_STREAM_END if there was; enough output space; if deflate returns with Z_OK, this function must be; called again with Z_FINISH and more output space (updated avail_out) but no; more input data, until it returns with Z_STREAM_END or an error. After; deflate has returned Z_STREAM_END, the only possible operations on the stream; are deflateReset or deflateEnd. Z_FINISH can be used immediately after deflateInit if all the compression; is to be done in a single step. In this case, avail_out must be at least the; value returned by deflateBound (see below). Then deflate is guaranteed to; return Z_ST",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:4350,Deployability,update,updated,4350,"e next; block to be emitted. This is for advanced applications that need to control; the emission of deflate blocks. If flush is set to Z_FULL_FLUSH, all output is flushed as with; Z_SYNC_FLUSH, and the compression state is reset so that decompression can; restart from this point if previous compressed data has been damaged or if; random access is desired. Using Z_FULL_FLUSH too often can seriously degrade; compression. If deflate returns with avail_out == 0, this function must be called again; with the same value of the flush parameter and more output space (updated; avail_out), until the flush is complete (deflate returns with non-zero; avail_out). In the case of a Z_FULL_FLUSH or Z_SYNC_FLUSH, make sure that; avail_out is greater than six to avoid repeated flush markers due to; avail_out == 0 on return. If the parameter flush is set to Z_FINISH, pending input is processed,; pending output is flushed and deflate returns with Z_STREAM_END if there was; enough output space; if deflate returns with Z_OK, this function must be; called again with Z_FINISH and more output space (updated avail_out) but no; more input data, until it returns with Z_STREAM_END or an error. After; deflate has returned Z_STREAM_END, the only possible operations on the stream; are deflateReset or deflateEnd. Z_FINISH can be used immediately after deflateInit if all the compression; is to be done in a single step. In this case, avail_out must be at least the; value returned by deflateBound (see below). Then deflate is guaranteed to; return Z_STREAM_END. If not enough output space is provided, deflate will; not return Z_STREAM_END, and it must be called again as described above. deflate() sets strm->adler to the adler32 checksum of all input read; so far (that is, total_in bytes). deflate() may update strm->data_type if it can make a good guess about; the input data type (Z_BINARY or Z_TEXT). In doubt, the data is considered; binary. This field is only for information purposes and does not affec",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:5054,Deployability,update,update,5054,"il the flush is complete (deflate returns with non-zero; avail_out). In the case of a Z_FULL_FLUSH or Z_SYNC_FLUSH, make sure that; avail_out is greater than six to avoid repeated flush markers due to; avail_out == 0 on return. If the parameter flush is set to Z_FINISH, pending input is processed,; pending output is flushed and deflate returns with Z_STREAM_END if there was; enough output space; if deflate returns with Z_OK, this function must be; called again with Z_FINISH and more output space (updated avail_out) but no; more input data, until it returns with Z_STREAM_END or an error. After; deflate has returned Z_STREAM_END, the only possible operations on the stream; are deflateReset or deflateEnd. Z_FINISH can be used immediately after deflateInit if all the compression; is to be done in a single step. In this case, avail_out must be at least the; value returned by deflateBound (see below). Then deflate is guaranteed to; return Z_STREAM_END. If not enough output space is provided, deflate will; not return Z_STREAM_END, and it must be called again as described above. deflate() sets strm->adler to the adler32 checksum of all input read; so far (that is, total_in bytes). deflate() may update strm->data_type if it can make a good guess about; the input data type (Z_BINARY or Z_TEXT). In doubt, the data is considered; binary. This field is only for information purposes and does not affect the; compression algorithm in any manner. deflate() returns Z_OK if some progress has been made (more input; processed or more output produced), Z_STREAM_END if all input has been; consumed and all output has been produced (only when flush is set to; Z_FINISH), Z_STREAM_ERROR if the stream state was inconsistent (for example; if next_in or next_out was Z_NULL), Z_BUF_ERROR if no progress is possible; (for example avail_in or avail_out was zero). Note that Z_BUF_ERROR is not; fatal, and deflate() can be called again with more input and more output; space to continue compressing.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:161,Performance,latency,latency,161,"/*; deflate compresses as much data as possible, and stops when the input; buffer becomes empty or the output buffer becomes full. It may introduce; some output latency (reading input without producing any output) except when; forced to flush. The detailed semantics are as follows. deflate performs one or both of the; following actions:. - Compress more input starting at next_in and update next_in and avail_in; accordingly. If not all input can be processed (because there is not; enough room in the output buffer), next_in and avail_in are updated and; processing will resume at this point for the next call of deflate(). - Provide more output starting at next_out and update next_out and avail_out; accordingly. This action is forced if the parameter flush is non zero.; Forcing flush frequently degrades the compression ratio, so this parameter; should be set only when necessary (in interactive applications). Some; output may be provided even if flush is not set. Before the call of deflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming more; output, and updating avail_in or avail_out accordingly; avail_out should; never be zero before the call. The application can consume the compressed; output when it wants, for example when the output buffer is full (avail_out; == 0), or after each call of deflate(). If deflate returns Z_OK and with; zero avail_out, it must be called again after making room in the output; buffer because there might be more output pending. Normally the parameter flush is set to Z_NO_FLUSH, which allows deflate to; decide how much data to accumulate before producing output, in order to; maximize compression. If the parameter flush is set to Z_SYNC_FLUSH, all pending output is; flushed to the output buffer and the output is aligned on a byte boundary, so; that the decompressor can get all input data available so far. (In; particular avail_in is zero after the call if enough output sp",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:291,Performance,perform,performs,291,"/*; deflate compresses as much data as possible, and stops when the input; buffer becomes empty or the output buffer becomes full. It may introduce; some output latency (reading input without producing any output) except when; forced to flush. The detailed semantics are as follows. deflate performs one or both of the; following actions:. - Compress more input starting at next_in and update next_in and avail_in; accordingly. If not all input can be processed (because there is not; enough room in the output buffer), next_in and avail_in are updated and; processing will resume at this point for the next call of deflate(). - Provide more output starting at next_out and update next_out and avail_out; accordingly. This action is forced if the parameter flush is non zero.; Forcing flush frequently degrades the compression ratio, so this parameter; should be set only when necessary (in interactive applications). Some; output may be provided even if flush is not set. Before the call of deflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming more; output, and updating avail_in or avail_out accordingly; avail_out should; never be zero before the call. The application can consume the compressed; output when it wants, for example when the output buffer is full (avail_out; == 0), or after each call of deflate(). If deflate returns Z_OK and with; zero avail_out, it must be called again after making room in the output; buffer because there might be more output pending. Normally the parameter flush is set to Z_NO_FLUSH, which allows deflate to; decide how much data to accumulate before producing output, in order to; maximize compression. If the parameter flush is set to Z_SYNC_FLUSH, all pending output is; flushed to the output buffer and the output is aligned on a byte boundary, so; that the decompressor can get all input data available so far. (In; particular avail_in is zero after the call if enough output sp",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:4013,Safety,avoid,avoid,4013," to be written as the next byte after; the next deflate block is completed. In this case, the decompressor may not; be provided enough bits at this point in order to complete decompression of; the data provided so far to the compressor. It may need to wait for the next; block to be emitted. This is for advanced applications that need to control; the emission of deflate blocks. If flush is set to Z_FULL_FLUSH, all output is flushed as with; Z_SYNC_FLUSH, and the compression state is reset so that decompression can; restart from this point if previous compressed data has been damaged or if; random access is desired. Using Z_FULL_FLUSH too often can seriously degrade; compression. If deflate returns with avail_out == 0, this function must be called again; with the same value of the flush parameter and more output space (updated; avail_out), until the flush is complete (deflate returns with non-zero; avail_out). In the case of a Z_FULL_FLUSH or Z_SYNC_FLUSH, make sure that; avail_out is greater than six to avoid repeated flush markers due to; avail_out == 0 on return. If the parameter flush is set to Z_FINISH, pending input is processed,; pending output is flushed and deflate returns with Z_STREAM_END if there was; enough output space; if deflate returns with Z_OK, this function must be; called again with Z_FINISH and more output space (updated avail_out) but no; more input data, until it returns with Z_STREAM_END or an error. After; deflate has returned Z_STREAM_END, the only possible operations on the stream; are deflateReset or deflateEnd. Z_FINISH can be used immediately after deflateInit if all the compression; is to be done in a single step. In this case, avail_out must be at least the; value returned by deflateBound (see below). Then deflate is guaranteed to; return Z_STREAM_END. If not enough output space is provided, deflate will; not return Z_STREAM_END, and it must be called again as described above. deflate() sets strm->adler to the adler32 checksum of all in",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3598,Security,access,access,3598,"o far will be available to the decompressor, as for Z_SYNC_FLUSH.; This completes the current deflate block and follows it with an empty fixed; codes block that is 10 bits long. This assures that enough bytes are output; in order for the decompressor to finish the block before the empty fixed code; block. If flush is set to Z_BLOCK, a deflate block is completed and emitted, as; for Z_SYNC_FLUSH, but the output is not aligned on a byte boundary, and up to; seven bits of the current block are held to be written as the next byte after; the next deflate block is completed. In this case, the decompressor may not; be provided enough bits at this point in order to complete decompression of; the data provided so far to the compressor. It may need to wait for the next; block to be emitted. This is for advanced applications that need to control; the emission of deflate blocks. If flush is set to Z_FULL_FLUSH, all output is flushed as with; Z_SYNC_FLUSH, and the compression state is reset so that decompression can; restart from this point if previous compressed data has been damaged or if; random access is desired. Using Z_FULL_FLUSH too often can seriously degrade; compression. If deflate returns with avail_out == 0, this function must be called again; with the same value of the flush parameter and more output space (updated; avail_out), until the flush is complete (deflate returns with non-zero; avail_out). In the case of a Z_FULL_FLUSH or Z_SYNC_FLUSH, make sure that; avail_out is greater than six to avoid repeated flush markers due to; avail_out == 0 on return. If the parameter flush is set to Z_FINISH, pending input is processed,; pending output is flushed and deflate returns with Z_STREAM_END if there was; enough output space; if deflate returns with Z_OK, this function must be; called again with Z_FINISH and more output space (updated avail_out) but no; more input data, until it returns with Z_STREAM_END or an error. After; deflate has returned Z_STREAM_END, the only po",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:4978,Security,checksum,checksum,4978,"il the flush is complete (deflate returns with non-zero; avail_out). In the case of a Z_FULL_FLUSH or Z_SYNC_FLUSH, make sure that; avail_out is greater than six to avoid repeated flush markers due to; avail_out == 0 on return. If the parameter flush is set to Z_FINISH, pending input is processed,; pending output is flushed and deflate returns with Z_STREAM_END if there was; enough output space; if deflate returns with Z_OK, this function must be; called again with Z_FINISH and more output space (updated avail_out) but no; more input data, until it returns with Z_STREAM_END or an error. After; deflate has returned Z_STREAM_END, the only possible operations on the stream; are deflateReset or deflateEnd. Z_FINISH can be used immediately after deflateInit if all the compression; is to be done in a single step. In this case, avail_out must be at least the; value returned by deflateBound (see below). Then deflate is guaranteed to; return Z_STREAM_END. If not enough output space is provided, deflate will; not return Z_STREAM_END, and it must be called again as described above. deflate() sets strm->adler to the adler32 checksum of all input read; so far (that is, total_in bytes). deflate() may update strm->data_type if it can make a good guess about; the input data type (Z_BINARY or Z_TEXT). In doubt, the data is considered; binary. This field is only for information purposes and does not affect the; compression algorithm in any manner. deflate() returns Z_OK if some progress has been made (more input; processed or more output produced), Z_STREAM_END if all input has been; consumed and all output has been produced (only when flush is set to; Z_FINISH), Z_STREAM_ERROR if the stream state was inconsistent (for example; if next_in or next_out was Z_NULL), Z_BUF_ERROR if no progress is possible; (for example avail_in or avail_out was zero). Note that Z_BUF_ERROR is not; fatal, and deflate() can be called again with more input and more output; space to continue compressing.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:574,Usability,resume,resume,574,"/*; deflate compresses as much data as possible, and stops when the input; buffer becomes empty or the output buffer becomes full. It may introduce; some output latency (reading input without producing any output) except when; forced to flush. The detailed semantics are as follows. deflate performs one or both of the; following actions:. - Compress more input starting at next_in and update next_in and avail_in; accordingly. If not all input can be processed (because there is not; enough room in the output buffer), next_in and avail_in are updated and; processing will resume at this point for the next call of deflate(). - Provide more output starting at next_out and update next_out and avail_out; accordingly. This action is forced if the parameter flush is non zero.; Forcing flush frequently degrades the compression ratio, so this parameter; should be set only when necessary (in interactive applications). Some; output may be provided even if flush is not set. Before the call of deflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming more; output, and updating avail_in or avail_out accordingly; avail_out should; never be zero before the call. The application can consume the compressed; output when it wants, for example when the output buffer is full (avail_out; == 0), or after each call of deflate(). If deflate returns Z_OK and with; zero avail_out, it must be called again after making room in the output; buffer because there might be more output pending. Normally the parameter flush is set to Z_NO_FLUSH, which allows deflate to; decide how much data to accumulate before producing output, in order to; maximize compression. If the parameter flush is set to Z_SYNC_FLUSH, all pending output is; flushed to the output buffer and the output is aligned on a byte boundary, so; that the decompressor can get all input data available so far. (In; particular avail_in is zero after the call if enough output sp",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:344,Availability,error,error,344,"/*; All dynamically allocated data structures for this stream are freed.; This function discards any unprocessed input and does not flush any pending; output. deflateEnd returns Z_OK if success, Z_STREAM_ERROR if the; stream state was inconsistent, Z_DATA_ERROR if the stream was freed; prematurely (some input or output was discarded). In the error case, msg; may be set but then points to a static string (which must not be; deallocated).; */; /*; ZEXTERN int ZEXPORT inflateInit OF((z_streamp strm));. Initializes the internal stream state for decompression. The fields; next_in, avail_in, zalloc, zfree and opaque must be initialized before by; the caller. If next_in is not Z_NULL and avail_in is large enough (the; exact value depends on the compression method), inflateInit determines the; compression method from the zlib header and allocates all data structures; accordingly; otherwise the allocation will be deferred to the first call of; inflate. If zalloc and zfree are set to Z_NULL, inflateInit updates them to; use default allocation functions. inflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_VERSION_ERROR if the zlib library version is incompatible with the; version assumed by the caller, or Z_STREAM_ERROR if the parameters are; invalid, such as a null pointer to the structure. msg is set to null if; there is no error message. inflateInit does not perform any decompression; apart from possibly reading the zlib header if present: actual decompression; will be done by inflate(). (So next_in and avail_in may be modified, but; next_out and avail_out are unused and unchanged.) The current implementation; of inflateInit() does not process any header information -- that is deferred; until inflate() is called.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1369,Availability,error,error,1369,"/*; All dynamically allocated data structures for this stream are freed.; This function discards any unprocessed input and does not flush any pending; output. deflateEnd returns Z_OK if success, Z_STREAM_ERROR if the; stream state was inconsistent, Z_DATA_ERROR if the stream was freed; prematurely (some input or output was discarded). In the error case, msg; may be set but then points to a static string (which must not be; deallocated).; */; /*; ZEXTERN int ZEXPORT inflateInit OF((z_streamp strm));. Initializes the internal stream state for decompression. The fields; next_in, avail_in, zalloc, zfree and opaque must be initialized before by; the caller. If next_in is not Z_NULL and avail_in is large enough (the; exact value depends on the compression method), inflateInit determines the; compression method from the zlib header and allocates all data structures; accordingly; otherwise the allocation will be deferred to the first call of; inflate. If zalloc and zfree are set to Z_NULL, inflateInit updates them to; use default allocation functions. inflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_VERSION_ERROR if the zlib library version is incompatible with the; version assumed by the caller, or Z_STREAM_ERROR if the parameters are; invalid, such as a null pointer to the structure. msg is set to null if; there is no error message. inflateInit does not perform any decompression; apart from possibly reading the zlib header if present: actual decompression; will be done by inflate(). (So next_in and avail_in may be modified, but; next_out and avail_out are unused and unchanged.) The current implementation; of inflateInit() does not process any header information -- that is deferred; until inflate() is called.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1009,Deployability,update,updates,1009,"/*; All dynamically allocated data structures for this stream are freed.; This function discards any unprocessed input and does not flush any pending; output. deflateEnd returns Z_OK if success, Z_STREAM_ERROR if the; stream state was inconsistent, Z_DATA_ERROR if the stream was freed; prematurely (some input or output was discarded). In the error case, msg; may be set but then points to a static string (which must not be; deallocated).; */; /*; ZEXTERN int ZEXPORT inflateInit OF((z_streamp strm));. Initializes the internal stream state for decompression. The fields; next_in, avail_in, zalloc, zfree and opaque must be initialized before by; the caller. If next_in is not Z_NULL and avail_in is large enough (the; exact value depends on the compression method), inflateInit determines the; compression method from the zlib header and allocates all data structures; accordingly; otherwise the allocation will be deferred to the first call of; inflate. If zalloc and zfree are set to Z_NULL, inflateInit updates them to; use default allocation functions. inflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_VERSION_ERROR if the zlib library version is incompatible with the; version assumed by the caller, or Z_STREAM_ERROR if the parameters are; invalid, such as a null pointer to the structure. msg is set to null if; there is no error message. inflateInit does not perform any decompression; apart from possibly reading the zlib header if present: actual decompression; will be done by inflate(). (So next_in and avail_in may be modified, but; next_out and avail_out are unused and unchanged.) The current implementation; of inflateInit() does not process any header information -- that is deferred; until inflate() is called.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:20,Energy Efficiency,allocate,allocated,20,"/*; All dynamically allocated data structures for this stream are freed.; This function discards any unprocessed input and does not flush any pending; output. deflateEnd returns Z_OK if success, Z_STREAM_ERROR if the; stream state was inconsistent, Z_DATA_ERROR if the stream was freed; prematurely (some input or output was discarded). In the error case, msg; may be set but then points to a static string (which must not be; deallocated).; */; /*; ZEXTERN int ZEXPORT inflateInit OF((z_streamp strm));. Initializes the internal stream state for decompression. The fields; next_in, avail_in, zalloc, zfree and opaque must be initialized before by; the caller. If next_in is not Z_NULL and avail_in is large enough (the; exact value depends on the compression method), inflateInit determines the; compression method from the zlib header and allocates all data structures; accordingly; otherwise the allocation will be deferred to the first call of; inflate. If zalloc and zfree are set to Z_NULL, inflateInit updates them to; use default allocation functions. inflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_VERSION_ERROR if the zlib library version is incompatible with the; version assumed by the caller, or Z_STREAM_ERROR if the parameters are; invalid, such as a null pointer to the structure. msg is set to null if; there is no error message. inflateInit does not perform any decompression; apart from possibly reading the zlib header if present: actual decompression; will be done by inflate(). (So next_in and avail_in may be modified, but; next_out and avail_out are unused and unchanged.) The current implementation; of inflateInit() does not process any header information -- that is deferred; until inflate() is called.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:841,Energy Efficiency,allocate,allocates,841,"/*; All dynamically allocated data structures for this stream are freed.; This function discards any unprocessed input and does not flush any pending; output. deflateEnd returns Z_OK if success, Z_STREAM_ERROR if the; stream state was inconsistent, Z_DATA_ERROR if the stream was freed; prematurely (some input or output was discarded). In the error case, msg; may be set but then points to a static string (which must not be; deallocated).; */; /*; ZEXTERN int ZEXPORT inflateInit OF((z_streamp strm));. Initializes the internal stream state for decompression. The fields; next_in, avail_in, zalloc, zfree and opaque must be initialized before by; the caller. If next_in is not Z_NULL and avail_in is large enough (the; exact value depends on the compression method), inflateInit determines the; compression method from the zlib header and allocates all data structures; accordingly; otherwise the allocation will be deferred to the first call of; inflate. If zalloc and zfree are set to Z_NULL, inflateInit updates them to; use default allocation functions. inflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_VERSION_ERROR if the zlib library version is incompatible with the; version assumed by the caller, or Z_STREAM_ERROR if the parameters are; invalid, such as a null pointer to the structure. msg is set to null if; there is no error message. inflateInit does not perform any decompression; apart from possibly reading the zlib header if present: actual decompression; will be done by inflate(). (So next_in and avail_in may be modified, but; next_out and avail_out are unused and unchanged.) The current implementation; of inflateInit() does not process any header information -- that is deferred; until inflate() is called.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:733,Integrability,depend,depends,733,"/*; All dynamically allocated data structures for this stream are freed.; This function discards any unprocessed input and does not flush any pending; output. deflateEnd returns Z_OK if success, Z_STREAM_ERROR if the; stream state was inconsistent, Z_DATA_ERROR if the stream was freed; prematurely (some input or output was discarded). In the error case, msg; may be set but then points to a static string (which must not be; deallocated).; */; /*; ZEXTERN int ZEXPORT inflateInit OF((z_streamp strm));. Initializes the internal stream state for decompression. The fields; next_in, avail_in, zalloc, zfree and opaque must be initialized before by; the caller. If next_in is not Z_NULL and avail_in is large enough (the; exact value depends on the compression method), inflateInit determines the; compression method from the zlib header and allocates all data structures; accordingly; otherwise the allocation will be deferred to the first call of; inflate. If zalloc and zfree are set to Z_NULL, inflateInit updates them to; use default allocation functions. inflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_VERSION_ERROR if the zlib library version is incompatible with the; version assumed by the caller, or Z_STREAM_ERROR if the parameters are; invalid, such as a null pointer to the structure. msg is set to null if; there is no error message. inflateInit does not perform any decompression; apart from possibly reading the zlib header if present: actual decompression; will be done by inflate(). (So next_in and avail_in may be modified, but; next_out and avail_out are unused and unchanged.) The current implementation; of inflateInit() does not process any header information -- that is deferred; until inflate() is called.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1375,Integrability,message,message,1375,"/*; All dynamically allocated data structures for this stream are freed.; This function discards any unprocessed input and does not flush any pending; output. deflateEnd returns Z_OK if success, Z_STREAM_ERROR if the; stream state was inconsistent, Z_DATA_ERROR if the stream was freed; prematurely (some input or output was discarded). In the error case, msg; may be set but then points to a static string (which must not be; deallocated).; */; /*; ZEXTERN int ZEXPORT inflateInit OF((z_streamp strm));. Initializes the internal stream state for decompression. The fields; next_in, avail_in, zalloc, zfree and opaque must be initialized before by; the caller. If next_in is not Z_NULL and avail_in is large enough (the; exact value depends on the compression method), inflateInit determines the; compression method from the zlib header and allocates all data structures; accordingly; otherwise the allocation will be deferred to the first call of; inflate. If zalloc and zfree are set to Z_NULL, inflateInit updates them to; use default allocation functions. inflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_VERSION_ERROR if the zlib library version is incompatible with the; version assumed by the caller, or Z_STREAM_ERROR if the parameters are; invalid, such as a null pointer to the structure. msg is set to null if; there is no error message. inflateInit does not perform any decompression; apart from possibly reading the zlib header if present: actual decompression; will be done by inflate(). (So next_in and avail_in may be modified, but; next_out and avail_out are unused and unchanged.) The current implementation; of inflateInit() does not process any header information -- that is deferred; until inflate() is called.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1405,Performance,perform,perform,1405,"/*; All dynamically allocated data structures for this stream are freed.; This function discards any unprocessed input and does not flush any pending; output. deflateEnd returns Z_OK if success, Z_STREAM_ERROR if the; stream state was inconsistent, Z_DATA_ERROR if the stream was freed; prematurely (some input or output was discarded). In the error case, msg; may be set but then points to a static string (which must not be; deallocated).; */; /*; ZEXTERN int ZEXPORT inflateInit OF((z_streamp strm));. Initializes the internal stream state for decompression. The fields; next_in, avail_in, zalloc, zfree and opaque must be initialized before by; the caller. If next_in is not Z_NULL and avail_in is large enough (the; exact value depends on the compression method), inflateInit determines the; compression method from the zlib header and allocates all data structures; accordingly; otherwise the allocation will be deferred to the first call of; inflate. If zalloc and zfree are set to Z_NULL, inflateInit updates them to; use default allocation functions. inflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_VERSION_ERROR if the zlib library version is incompatible with the; version assumed by the caller, or Z_STREAM_ERROR if the parameters are; invalid, such as a null pointer to the structure. msg is set to null if; there is no error message. inflateInit does not perform any decompression; apart from possibly reading the zlib header if present: actual decompression; will be done by inflate(). (So next_in and avail_in may be modified, but; next_out and avail_out are unused and unchanged.) The current implementation; of inflateInit() does not process any header information -- that is deferred; until inflate() is called.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3430,Availability,error,error,3430,"header up to just before the first byte of the deflate; stream. The end-of-block will not be indicated until all of the uncompressed; data from that block has been written to strm->next_out. The number of; unused bits may in general be greater than seven, except when bit 7 of; data_type is set, in which case the number of unused bits will be less than; eight. data_type is set as noted here every time inflate() returns for all; flush options, and so can be used to determine the amount of currently; consumed input in bits. The Z_TREES option behaves as Z_BLOCK does, but it also returns when the; end of each deflate block header is reached, before any actual data in that; block is decoded. This allows the caller to determine the length of the; deflate block header for later use in random access within a deflate block.; 256 is added to the value of strm->data_type when inflate() returns; immediately after reaching the end of the deflate block header. inflate() should normally be called until it returns Z_STREAM_END or an; error. However if all decompression is to be performed in a single step (a; single call of inflate), the parameter flush should be set to Z_FINISH. In; this case all pending input is processed and all pending output is flushed;; avail_out must be large enough to hold all of the uncompressed data for the; operation to complete. (The size of the uncompressed data may have been; saved by the compressor for this purpose.) The use of Z_FINISH is not; required to perform an inflation in one step. However it may be used to; inform inflate that a faster approach can be used for the single inflate(); call. Z_FINISH also informs inflate to not maintain a sliding window if the; stream completes, which reduces inflate's memory footprint. If the stream; does not complete, either because not all of the stream is provided or not; enough output space is provided, then a sliding window will be allocated and; inflate() can be called again to continue the operation as if",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:5207,Availability,error,error,5207,"lso informs inflate to not maintain a sliding window if the; stream completes, which reduces inflate's memory footprint. If the stream; does not complete, either because not all of the stream is provided or not; enough output space is provided, then a sliding window will be allocated and; inflate() can be called again to continue the operation as if Z_NO_FLUSH had; been used. In this implementation, inflate() always flushes as much output as; possible to the output buffer, and always uses the faster approach on the; first call. So the effects of the flush parameter in this implementation are; on the return value of inflate() as noted below, when inflate() returns early; when Z_BLOCK or Z_TREES is used, and when inflate() avoids the allocation of; memory for a sliding window when Z_FINISH is used. If a preset dictionary is needed after this call (see inflateSetDictionary; below), inflate sets strm->adler to the Adler-32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the Adler-32 checksum of all output produced so far (that is,; total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described; below. At the end of the stream, inflate() checks that its computed adler32; checksum is equal to that saved by the compressor and returns Z_STREAM_END; only if the checksum is correct. inflate() can decompress and check either zlib-wrapped or gzip-wrapped; deflate data. The header type is detected automatically, if requested when; initializing with inflateInit2(). Any information contained in the gzip; header is not retained, so applications that need that information should; instead use raw inflate, see inflateInit2() below, or inflateBack() and; perform their own processing of the gzip header and trailer. When processing; gzip-wrapped deflate data, strm->adler32 is set to the CRC-32 of the output; producted so far. The CRC-32 is checked against the gzip trailer. inflate() returns Z_OK if some progre",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:6932,Availability,recover,recovery,6932," Adler-32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the Adler-32 checksum of all output produced so far (that is,; total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described; below. At the end of the stream, inflate() checks that its computed adler32; checksum is equal to that saved by the compressor and returns Z_STREAM_END; only if the checksum is correct. inflate() can decompress and check either zlib-wrapped or gzip-wrapped; deflate data. The header type is detected automatically, if requested when; initializing with inflateInit2(). Any information contained in the gzip; header is not retained, so applications that need that information should; instead use raw inflate, see inflateInit2() below, or inflateBack() and; perform their own processing of the gzip header and trailer. When processing; gzip-wrapped deflate data, strm->adler32 is set to the CRC-32 of the output; producted so far. The CRC-32 is checked against the gzip trailer. inflate() returns Z_OK if some progress has been made (more input processed; or more output produced), Z_STREAM_END if the end of the compressed data has; been reached and all uncompressed output has been produced, Z_NEED_DICT if a; preset dictionary is needed at this point, Z_DATA_ERROR if the input data was; corrupted (input stream not conforming to the zlib format or incorrect check; value), Z_STREAM_ERROR if the stream structure was inconsistent (for example; next_in or next_out was Z_NULL), Z_MEM_ERROR if there was not enough memory,; Z_BUF_ERROR if no progress is possible or if there was not enough room in the; output buffer when Z_FINISH is used. Note that Z_BUF_ERROR is not fatal, and; inflate() can be called again with more input and more output space to; continue decompressing. If Z_DATA_ERROR is returned, the application may; then call inflateSync() to look for a good compression block if a partial; recovery of the data is desired.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:390,Deployability,update,update,390,"/*; inflate decompresses as much data as possible, and stops when the input; buffer becomes empty or the output buffer becomes full. It may introduce; some output latency (reading input without producing any output) except when; forced to flush. The detailed semantics are as follows. inflate performs one or both of the; following actions:. - Decompress more input starting at next_in and update next_in and avail_in; accordingly. If not all input can be processed (because there is not; enough room in the output buffer), next_in is updated and processing will; resume at this point for the next call of inflate(). - Provide more output starting at next_out and update next_out and avail_out; accordingly. inflate() provides as much output as possible, until there is; no more input data or no more space in the output buffer (see below about; the flush parameter). Before the call of inflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming more; output, and updating the next_* and avail_* values accordingly. The; application can consume the uncompressed output when it wants, for example; when the output buffer is full (avail_out == 0), or after each call of; inflate(). If inflate returns Z_OK and with zero avail_out, it must be; called again after making room in the output buffer because there might be; more output pending. The flush parameter of inflate() can be Z_NO_FLUSH, Z_SYNC_FLUSH, Z_FINISH,; Z_BLOCK, or Z_TREES. Z_SYNC_FLUSH requests that inflate() flush as much; output as possible to the output buffer. Z_BLOCK requests that inflate(); stop if and when it gets to the next deflate block boundary. When decoding; the zlib or gzip format, this will cause inflate() to return immediately; after the header and before the first block. When doing a raw inflate,; inflate() will go ahead and process the first block, and will return when it; gets to the end of that block, or when it runs out of data. The Z_BLO",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:535,Deployability,update,updated,535,"/*; inflate decompresses as much data as possible, and stops when the input; buffer becomes empty or the output buffer becomes full. It may introduce; some output latency (reading input without producing any output) except when; forced to flush. The detailed semantics are as follows. inflate performs one or both of the; following actions:. - Decompress more input starting at next_in and update next_in and avail_in; accordingly. If not all input can be processed (because there is not; enough room in the output buffer), next_in is updated and processing will; resume at this point for the next call of inflate(). - Provide more output starting at next_out and update next_out and avail_out; accordingly. inflate() provides as much output as possible, until there is; no more input data or no more space in the output buffer (see below about; the flush parameter). Before the call of inflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming more; output, and updating the next_* and avail_* values accordingly. The; application can consume the uncompressed output when it wants, for example; when the output buffer is full (avail_out == 0), or after each call of; inflate(). If inflate returns Z_OK and with zero avail_out, it must be; called again after making room in the output buffer because there might be; more output pending. The flush parameter of inflate() can be Z_NO_FLUSH, Z_SYNC_FLUSH, Z_FINISH,; Z_BLOCK, or Z_TREES. Z_SYNC_FLUSH requests that inflate() flush as much; output as possible to the output buffer. Z_BLOCK requests that inflate(); stop if and when it gets to the next deflate block boundary. When decoding; the zlib or gzip format, this will cause inflate() to return immediately; after the header and before the first block. When doing a raw inflate,; inflate() will go ahead and process the first block, and will return when it; gets to the end of that block, or when it runs out of data. The Z_BLO",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:664,Deployability,update,update,664,"/*; inflate decompresses as much data as possible, and stops when the input; buffer becomes empty or the output buffer becomes full. It may introduce; some output latency (reading input without producing any output) except when; forced to flush. The detailed semantics are as follows. inflate performs one or both of the; following actions:. - Decompress more input starting at next_in and update next_in and avail_in; accordingly. If not all input can be processed (because there is not; enough room in the output buffer), next_in is updated and processing will; resume at this point for the next call of inflate(). - Provide more output starting at next_out and update next_out and avail_out; accordingly. inflate() provides as much output as possible, until there is; no more input data or no more space in the output buffer (see below about; the flush parameter). Before the call of inflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming more; output, and updating the next_* and avail_* values accordingly. The; application can consume the uncompressed output when it wants, for example; when the output buffer is full (avail_out == 0), or after each call of; inflate(). If inflate returns Z_OK and with zero avail_out, it must be; called again after making room in the output buffer because there might be; more output pending. The flush parameter of inflate() can be Z_NO_FLUSH, Z_SYNC_FLUSH, Z_FINISH,; Z_BLOCK, or Z_TREES. Z_SYNC_FLUSH requests that inflate() flush as much; output as possible to the output buffer. Z_BLOCK requests that inflate(); stop if and when it gets to the next deflate block boundary. When decoding; the zlib or gzip format, this will cause inflate() to return immediately; after the header and before the first block. When doing a raw inflate,; inflate() will go ahead and process the first block, and will return when it; gets to the end of that block, or when it runs out of data. The Z_BLO",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:4130,Energy Efficiency,reduce,reduces,4130,"lows the caller to determine the length of the; deflate block header for later use in random access within a deflate block.; 256 is added to the value of strm->data_type when inflate() returns; immediately after reaching the end of the deflate block header. inflate() should normally be called until it returns Z_STREAM_END or an; error. However if all decompression is to be performed in a single step (a; single call of inflate), the parameter flush should be set to Z_FINISH. In; this case all pending input is processed and all pending output is flushed;; avail_out must be large enough to hold all of the uncompressed data for the; operation to complete. (The size of the uncompressed data may have been; saved by the compressor for this purpose.) The use of Z_FINISH is not; required to perform an inflation in one step. However it may be used to; inform inflate that a faster approach can be used for the single inflate(); call. Z_FINISH also informs inflate to not maintain a sliding window if the; stream completes, which reduces inflate's memory footprint. If the stream; does not complete, either because not all of the stream is provided or not; enough output space is provided, then a sliding window will be allocated and; inflate() can be called again to continue the operation as if Z_NO_FLUSH had; been used. In this implementation, inflate() always flushes as much output as; possible to the output buffer, and always uses the faster approach on the; first call. So the effects of the flush parameter in this implementation are; on the return value of inflate() as noted below, when inflate() returns early; when Z_BLOCK or Z_TREES is used, and when inflate() avoids the allocation of; memory for a sliding window when Z_FINISH is used. If a preset dictionary is needed after this call (see inflateSetDictionary; below), inflate sets strm->adler to the Adler-32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the Adler-",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:4320,Energy Efficiency,allocate,allocated,4320,"mmediately after reaching the end of the deflate block header. inflate() should normally be called until it returns Z_STREAM_END or an; error. However if all decompression is to be performed in a single step (a; single call of inflate), the parameter flush should be set to Z_FINISH. In; this case all pending input is processed and all pending output is flushed;; avail_out must be large enough to hold all of the uncompressed data for the; operation to complete. (The size of the uncompressed data may have been; saved by the compressor for this purpose.) The use of Z_FINISH is not; required to perform an inflation in one step. However it may be used to; inform inflate that a faster approach can be used for the single inflate(); call. Z_FINISH also informs inflate to not maintain a sliding window if the; stream completes, which reduces inflate's memory footprint. If the stream; does not complete, either because not all of the stream is provided or not; enough output space is provided, then a sliding window will be allocated and; inflate() can be called again to continue the operation as if Z_NO_FLUSH had; been used. In this implementation, inflate() always flushes as much output as; possible to the output buffer, and always uses the faster approach on the; first call. So the effects of the flush parameter in this implementation are; on the return value of inflate() as noted below, when inflate() returns early; when Z_BLOCK or Z_TREES is used, and when inflate() avoids the allocation of; memory for a sliding window when Z_FINISH is used. If a preset dictionary is needed after this call (see inflateSetDictionary; below), inflate sets strm->adler to the Adler-32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the Adler-32 checksum of all output produced so far (that is,; total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described; below. At the end of the stream, inflate() checks that its com",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:5465,Integrability,wrap,wrapped,5465,"ways flushes as much output as; possible to the output buffer, and always uses the faster approach on the; first call. So the effects of the flush parameter in this implementation are; on the return value of inflate() as noted below, when inflate() returns early; when Z_BLOCK or Z_TREES is used, and when inflate() avoids the allocation of; memory for a sliding window when Z_FINISH is used. If a preset dictionary is needed after this call (see inflateSetDictionary; below), inflate sets strm->adler to the Adler-32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the Adler-32 checksum of all output produced so far (that is,; total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described; below. At the end of the stream, inflate() checks that its computed adler32; checksum is equal to that saved by the compressor and returns Z_STREAM_END; only if the checksum is correct. inflate() can decompress and check either zlib-wrapped or gzip-wrapped; deflate data. The header type is detected automatically, if requested when; initializing with inflateInit2(). Any information contained in the gzip; header is not retained, so applications that need that information should; instead use raw inflate, see inflateInit2() below, or inflateBack() and; perform their own processing of the gzip header and trailer. When processing; gzip-wrapped deflate data, strm->adler32 is set to the CRC-32 of the output; producted so far. The CRC-32 is checked against the gzip trailer. inflate() returns Z_OK if some progress has been made (more input processed; or more output produced), Z_STREAM_END if the end of the compressed data has; been reached and all uncompressed output has been produced, Z_NEED_DICT if a; preset dictionary is needed at this point, Z_DATA_ERROR if the input data was; corrupted (input stream not conforming to the zlib format or incorrect check; value), Z_STREAM_ERROR if the stream structure was inconsisten",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:5481,Integrability,wrap,wrapped,5481,"ways flushes as much output as; possible to the output buffer, and always uses the faster approach on the; first call. So the effects of the flush parameter in this implementation are; on the return value of inflate() as noted below, when inflate() returns early; when Z_BLOCK or Z_TREES is used, and when inflate() avoids the allocation of; memory for a sliding window when Z_FINISH is used. If a preset dictionary is needed after this call (see inflateSetDictionary; below), inflate sets strm->adler to the Adler-32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the Adler-32 checksum of all output produced so far (that is,; total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described; below. At the end of the stream, inflate() checks that its computed adler32; checksum is equal to that saved by the compressor and returns Z_STREAM_END; only if the checksum is correct. inflate() can decompress and check either zlib-wrapped or gzip-wrapped; deflate data. The header type is detected automatically, if requested when; initializing with inflateInit2(). Any information contained in the gzip; header is not retained, so applications that need that information should; instead use raw inflate, see inflateInit2() below, or inflateBack() and; perform their own processing of the gzip header and trailer. When processing; gzip-wrapped deflate data, strm->adler32 is set to the CRC-32 of the output; producted so far. The CRC-32 is checked against the gzip trailer. inflate() returns Z_OK if some progress has been made (more input processed; or more output produced), Z_STREAM_END if the end of the compressed data has; been reached and all uncompressed output has been produced, Z_NEED_DICT if a; preset dictionary is needed at this point, Z_DATA_ERROR if the input data was; corrupted (input stream not conforming to the zlib format or incorrect check; value), Z_STREAM_ERROR if the stream structure was inconsisten",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:5870,Integrability,wrap,wrapped,5870,"see inflateSetDictionary; below), inflate sets strm->adler to the Adler-32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the Adler-32 checksum of all output produced so far (that is,; total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described; below. At the end of the stream, inflate() checks that its computed adler32; checksum is equal to that saved by the compressor and returns Z_STREAM_END; only if the checksum is correct. inflate() can decompress and check either zlib-wrapped or gzip-wrapped; deflate data. The header type is detected automatically, if requested when; initializing with inflateInit2(). Any information contained in the gzip; header is not retained, so applications that need that information should; instead use raw inflate, see inflateInit2() below, or inflateBack() and; perform their own processing of the gzip header and trailer. When processing; gzip-wrapped deflate data, strm->adler32 is set to the CRC-32 of the output; producted so far. The CRC-32 is checked against the gzip trailer. inflate() returns Z_OK if some progress has been made (more input processed; or more output produced), Z_STREAM_END if the end of the compressed data has; been reached and all uncompressed output has been produced, Z_NEED_DICT if a; preset dictionary is needed at this point, Z_DATA_ERROR if the input data was; corrupted (input stream not conforming to the zlib format or incorrect check; value), Z_STREAM_ERROR if the stream structure was inconsistent (for example; next_in or next_out was Z_NULL), Z_MEM_ERROR if there was not enough memory,; Z_BUF_ERROR if no progress is possible or if there was not enough room in the; output buffer when Z_FINISH is used. Note that Z_BUF_ERROR is not fatal, and; inflate() can be called again with more input and more output space to; continue decompressing. If Z_DATA_ERROR is returned, the application may; then call inflateSync() to look for a good com",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:163,Performance,latency,latency,163,"/*; inflate decompresses as much data as possible, and stops when the input; buffer becomes empty or the output buffer becomes full. It may introduce; some output latency (reading input without producing any output) except when; forced to flush. The detailed semantics are as follows. inflate performs one or both of the; following actions:. - Decompress more input starting at next_in and update next_in and avail_in; accordingly. If not all input can be processed (because there is not; enough room in the output buffer), next_in is updated and processing will; resume at this point for the next call of inflate(). - Provide more output starting at next_out and update next_out and avail_out; accordingly. inflate() provides as much output as possible, until there is; no more input data or no more space in the output buffer (see below about; the flush parameter). Before the call of inflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming more; output, and updating the next_* and avail_* values accordingly. The; application can consume the uncompressed output when it wants, for example; when the output buffer is full (avail_out == 0), or after each call of; inflate(). If inflate returns Z_OK and with zero avail_out, it must be; called again after making room in the output buffer because there might be; more output pending. The flush parameter of inflate() can be Z_NO_FLUSH, Z_SYNC_FLUSH, Z_FINISH,; Z_BLOCK, or Z_TREES. Z_SYNC_FLUSH requests that inflate() flush as much; output as possible to the output buffer. Z_BLOCK requests that inflate(); stop if and when it gets to the next deflate block boundary. When decoding; the zlib or gzip format, this will cause inflate() to return immediately; after the header and before the first block. When doing a raw inflate,; inflate() will go ahead and process the first block, and will return when it; gets to the end of that block, or when it runs out of data. The Z_BLO",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:293,Performance,perform,performs,293,"/*; inflate decompresses as much data as possible, and stops when the input; buffer becomes empty or the output buffer becomes full. It may introduce; some output latency (reading input without producing any output) except when; forced to flush. The detailed semantics are as follows. inflate performs one or both of the; following actions:. - Decompress more input starting at next_in and update next_in and avail_in; accordingly. If not all input can be processed (because there is not; enough room in the output buffer), next_in is updated and processing will; resume at this point for the next call of inflate(). - Provide more output starting at next_out and update next_out and avail_out; accordingly. inflate() provides as much output as possible, until there is; no more input data or no more space in the output buffer (see below about; the flush parameter). Before the call of inflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming more; output, and updating the next_* and avail_* values accordingly. The; application can consume the uncompressed output when it wants, for example; when the output buffer is full (avail_out == 0), or after each call of; inflate(). If inflate returns Z_OK and with zero avail_out, it must be; called again after making room in the output buffer because there might be; more output pending. The flush parameter of inflate() can be Z_NO_FLUSH, Z_SYNC_FLUSH, Z_FINISH,; Z_BLOCK, or Z_TREES. Z_SYNC_FLUSH requests that inflate() flush as much; output as possible to the output buffer. Z_BLOCK requests that inflate(); stop if and when it gets to the next deflate block boundary. When decoding; the zlib or gzip format, this will cause inflate() to return immediately; after the header and before the first block. When doing a raw inflate,; inflate() will go ahead and process the first block, and will return when it; gets to the end of that block, or when it runs out of data. The Z_BLO",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3475,Performance,perform,performed,3475,"ll of the uncompressed; data from that block has been written to strm->next_out. The number of; unused bits may in general be greater than seven, except when bit 7 of; data_type is set, in which case the number of unused bits will be less than; eight. data_type is set as noted here every time inflate() returns for all; flush options, and so can be used to determine the amount of currently; consumed input in bits. The Z_TREES option behaves as Z_BLOCK does, but it also returns when the; end of each deflate block header is reached, before any actual data in that; block is decoded. This allows the caller to determine the length of the; deflate block header for later use in random access within a deflate block.; 256 is added to the value of strm->data_type when inflate() returns; immediately after reaching the end of the deflate block header. inflate() should normally be called until it returns Z_STREAM_END or an; error. However if all decompression is to be performed in a single step (a; single call of inflate), the parameter flush should be set to Z_FINISH. In; this case all pending input is processed and all pending output is flushed;; avail_out must be large enough to hold all of the uncompressed data for the; operation to complete. (The size of the uncompressed data may have been; saved by the compressor for this purpose.) The use of Z_FINISH is not; required to perform an inflation in one step. However it may be used to; inform inflate that a faster approach can be used for the single inflate(); call. Z_FINISH also informs inflate to not maintain a sliding window if the; stream completes, which reduces inflate's memory footprint. If the stream; does not complete, either because not all of the stream is provided or not; enough output space is provided, then a sliding window will be allocated and; inflate() can be called again to continue the operation as if Z_NO_FLUSH had; been used. In this implementation, inflate() always flushes as much output as; possible to the",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3892,Performance,perform,perform,3892," currently; consumed input in bits. The Z_TREES option behaves as Z_BLOCK does, but it also returns when the; end of each deflate block header is reached, before any actual data in that; block is decoded. This allows the caller to determine the length of the; deflate block header for later use in random access within a deflate block.; 256 is added to the value of strm->data_type when inflate() returns; immediately after reaching the end of the deflate block header. inflate() should normally be called until it returns Z_STREAM_END or an; error. However if all decompression is to be performed in a single step (a; single call of inflate), the parameter flush should be set to Z_FINISH. In; this case all pending input is processed and all pending output is flushed;; avail_out must be large enough to hold all of the uncompressed data for the; operation to complete. (The size of the uncompressed data may have been; saved by the compressor for this purpose.) The use of Z_FINISH is not; required to perform an inflation in one step. However it may be used to; inform inflate that a faster approach can be used for the single inflate(); call. Z_FINISH also informs inflate to not maintain a sliding window if the; stream completes, which reduces inflate's memory footprint. If the stream; does not complete, either because not all of the stream is provided or not; enough output space is provided, then a sliding window will be allocated and; inflate() can be called again to continue the operation as if Z_NO_FLUSH had; been used. In this implementation, inflate() always flushes as much output as; possible to the output buffer, and always uses the faster approach on the; first call. So the effects of the flush parameter in this implementation are; on the return value of inflate() as noted below, when inflate() returns early; when Z_BLOCK or Z_TREES is used, and when inflate() avoids the allocation of; memory for a sliding window when Z_FINISH is used. If a preset dictionary is needed af",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:5787,Performance,perform,perform,5787," when Z_BLOCK or Z_TREES is used, and when inflate() avoids the allocation of; memory for a sliding window when Z_FINISH is used. If a preset dictionary is needed after this call (see inflateSetDictionary; below), inflate sets strm->adler to the Adler-32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the Adler-32 checksum of all output produced so far (that is,; total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described; below. At the end of the stream, inflate() checks that its computed adler32; checksum is equal to that saved by the compressor and returns Z_STREAM_END; only if the checksum is correct. inflate() can decompress and check either zlib-wrapped or gzip-wrapped; deflate data. The header type is detected automatically, if requested when; initializing with inflateInit2(). Any information contained in the gzip; header is not retained, so applications that need that information should; instead use raw inflate, see inflateInit2() below, or inflateBack() and; perform their own processing of the gzip header and trailer. When processing; gzip-wrapped deflate data, strm->adler32 is set to the CRC-32 of the output; producted so far. The CRC-32 is checked against the gzip trailer. inflate() returns Z_OK if some progress has been made (more input processed; or more output produced), Z_STREAM_END if the end of the compressed data has; been reached and all uncompressed output has been produced, Z_NEED_DICT if a; preset dictionary is needed at this point, Z_DATA_ERROR if the input data was; corrupted (input stream not conforming to the zlib format or incorrect check; value), Z_STREAM_ERROR if the stream structure was inconsistent (for example; next_in or next_out was Z_NULL), Z_MEM_ERROR if there was not enough memory,; Z_BUF_ERROR if no progress is possible or if there was not enough room in the; output buffer when Z_FINISH is used. Note that Z_BUF_ERROR is not fatal, and; inflate() ca",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:4776,Safety,avoid,avoids,4776,"ressed data for the; operation to complete. (The size of the uncompressed data may have been; saved by the compressor for this purpose.) The use of Z_FINISH is not; required to perform an inflation in one step. However it may be used to; inform inflate that a faster approach can be used for the single inflate(); call. Z_FINISH also informs inflate to not maintain a sliding window if the; stream completes, which reduces inflate's memory footprint. If the stream; does not complete, either because not all of the stream is provided or not; enough output space is provided, then a sliding window will be allocated and; inflate() can be called again to continue the operation as if Z_NO_FLUSH had; been used. In this implementation, inflate() always flushes as much output as; possible to the output buffer, and always uses the faster approach on the; first call. So the effects of the flush parameter in this implementation are; on the return value of inflate() as noted below, when inflate() returns early; when Z_BLOCK or Z_TREES is used, and when inflate() avoids the allocation of; memory for a sliding window when Z_FINISH is used. If a preset dictionary is needed after this call (see inflateSetDictionary; below), inflate sets strm->adler to the Adler-32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the Adler-32 checksum of all output produced so far (that is,; total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described; below. At the end of the stream, inflate() checks that its computed adler32; checksum is equal to that saved by the compressor and returns Z_STREAM_END; only if the checksum is correct. inflate() can decompress and check either zlib-wrapped or gzip-wrapped; deflate data. The header type is detected automatically, if requested when; initializing with inflateInit2(). Any information contained in the gzip; header is not retained, so applications that need that information should; i",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:5523,Safety,detect,detected,5523,"pproach on the; first call. So the effects of the flush parameter in this implementation are; on the return value of inflate() as noted below, when inflate() returns early; when Z_BLOCK or Z_TREES is used, and when inflate() avoids the allocation of; memory for a sliding window when Z_FINISH is used. If a preset dictionary is needed after this call (see inflateSetDictionary; below), inflate sets strm->adler to the Adler-32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the Adler-32 checksum of all output produced so far (that is,; total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described; below. At the end of the stream, inflate() checks that its computed adler32; checksum is equal to that saved by the compressor and returns Z_STREAM_END; only if the checksum is correct. inflate() can decompress and check either zlib-wrapped or gzip-wrapped; deflate data. The header type is detected automatically, if requested when; initializing with inflateInit2(). Any information contained in the gzip; header is not retained, so applications that need that information should; instead use raw inflate, see inflateInit2() below, or inflateBack() and; perform their own processing of the gzip header and trailer. When processing; gzip-wrapped deflate data, strm->adler32 is set to the CRC-32 of the output; producted so far. The CRC-32 is checked against the gzip trailer. inflate() returns Z_OK if some progress has been made (more input processed; or more output produced), Z_STREAM_END if the end of the compressed data has; been reached and all uncompressed output has been produced, Z_NEED_DICT if a; preset dictionary is needed at this point, Z_DATA_ERROR if the input data was; corrupted (input stream not conforming to the zlib format or incorrect check; value), Z_STREAM_ERROR if the stream structure was inconsistent (for example; next_in or next_out was Z_NULL), Z_MEM_ERROR if there was not enough memory",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:6932,Safety,recover,recovery,6932," Adler-32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the Adler-32 checksum of all output produced so far (that is,; total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described; below. At the end of the stream, inflate() checks that its computed adler32; checksum is equal to that saved by the compressor and returns Z_STREAM_END; only if the checksum is correct. inflate() can decompress and check either zlib-wrapped or gzip-wrapped; deflate data. The header type is detected automatically, if requested when; initializing with inflateInit2(). Any information contained in the gzip; header is not retained, so applications that need that information should; instead use raw inflate, see inflateInit2() below, or inflateBack() and; perform their own processing of the gzip header and trailer. When processing; gzip-wrapped deflate data, strm->adler32 is set to the CRC-32 of the output; producted so far. The CRC-32 is checked against the gzip trailer. inflate() returns Z_OK if some progress has been made (more input processed; or more output produced), Z_STREAM_END if the end of the compressed data has; been reached and all uncompressed output has been produced, Z_NEED_DICT if a; preset dictionary is needed at this point, Z_DATA_ERROR if the input data was; corrupted (input stream not conforming to the zlib format or incorrect check; value), Z_STREAM_ERROR if the stream structure was inconsistent (for example; next_in or next_out was Z_NULL), Z_MEM_ERROR if there was not enough memory,; Z_BUF_ERROR if no progress is possible or if there was not enough room in the; output buffer when Z_FINISH is used. Note that Z_BUF_ERROR is not fatal, and; inflate() can be called again with more input and more output space to; continue decompressing. If Z_DATA_ERROR is returned, the application may; then call inflateSync() to look for a good compression block if a partial; recovery of the data is desired.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3192,Security,access,access,3192,"sed bits in the last byte taken from strm->next_in, plus 64 if; inflate() is currently decoding the last block in the deflate stream, plus; 128 if inflate() returned immediately after decoding an end-of-block code or; decoding the complete header up to just before the first byte of the deflate; stream. The end-of-block will not be indicated until all of the uncompressed; data from that block has been written to strm->next_out. The number of; unused bits may in general be greater than seven, except when bit 7 of; data_type is set, in which case the number of unused bits will be less than; eight. data_type is set as noted here every time inflate() returns for all; flush options, and so can be used to determine the amount of currently; consumed input in bits. The Z_TREES option behaves as Z_BLOCK does, but it also returns when the; end of each deflate block header is reached, before any actual data in that; block is decoded. This allows the caller to determine the length of the; deflate block header for later use in random access within a deflate block.; 256 is added to the value of strm->data_type when inflate() returns; immediately after reaching the end of the deflate block header. inflate() should normally be called until it returns Z_STREAM_END or an; error. However if all decompression is to be performed in a single step (a; single call of inflate), the parameter flush should be set to Z_FINISH. In; this case all pending input is processed and all pending output is flushed;; avail_out must be large enough to hold all of the uncompressed data for the; operation to complete. (The size of the uncompressed data may have been; saved by the compressor for this purpose.) The use of Z_FINISH is not; required to perform an inflation in one step. However it may be used to; inform inflate that a faster approach can be used for the single inflate(); call. Z_FINISH also informs inflate to not maintain a sliding window if the; stream completes, which reduces inflate's memory fo",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:4978,Security,checksum,checksum,4978,"lso informs inflate to not maintain a sliding window if the; stream completes, which reduces inflate's memory footprint. If the stream; does not complete, either because not all of the stream is provided or not; enough output space is provided, then a sliding window will be allocated and; inflate() can be called again to continue the operation as if Z_NO_FLUSH had; been used. In this implementation, inflate() always flushes as much output as; possible to the output buffer, and always uses the faster approach on the; first call. So the effects of the flush parameter in this implementation are; on the return value of inflate() as noted below, when inflate() returns early; when Z_BLOCK or Z_TREES is used, and when inflate() avoids the allocation of; memory for a sliding window when Z_FINISH is used. If a preset dictionary is needed after this call (see inflateSetDictionary; below), inflate sets strm->adler to the Adler-32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the Adler-32 checksum of all output produced so far (that is,; total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described; below. At the end of the stream, inflate() checks that its computed adler32; checksum is equal to that saved by the compressor and returns Z_STREAM_END; only if the checksum is correct. inflate() can decompress and check either zlib-wrapped or gzip-wrapped; deflate data. The header type is detected automatically, if requested when; initializing with inflateInit2(). Any information contained in the gzip; header is not retained, so applications that need that information should; instead use raw inflate, see inflateInit2() below, or inflateBack() and; perform their own processing of the gzip header and trailer. When processing; gzip-wrapped deflate data, strm->adler32 is set to the CRC-32 of the output; producted so far. The CRC-32 is checked against the gzip trailer. inflate() returns Z_OK if some progre",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:5103,Security,checksum,checksum,5103,"lso informs inflate to not maintain a sliding window if the; stream completes, which reduces inflate's memory footprint. If the stream; does not complete, either because not all of the stream is provided or not; enough output space is provided, then a sliding window will be allocated and; inflate() can be called again to continue the operation as if Z_NO_FLUSH had; been used. In this implementation, inflate() always flushes as much output as; possible to the output buffer, and always uses the faster approach on the; first call. So the effects of the flush parameter in this implementation are; on the return value of inflate() as noted below, when inflate() returns early; when Z_BLOCK or Z_TREES is used, and when inflate() avoids the allocation of; memory for a sliding window when Z_FINISH is used. If a preset dictionary is needed after this call (see inflateSetDictionary; below), inflate sets strm->adler to the Adler-32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the Adler-32 checksum of all output produced so far (that is,; total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described; below. At the end of the stream, inflate() checks that its computed adler32; checksum is equal to that saved by the compressor and returns Z_STREAM_END; only if the checksum is correct. inflate() can decompress and check either zlib-wrapped or gzip-wrapped; deflate data. The header type is detected automatically, if requested when; initializing with inflateInit2(). Any information contained in the gzip; header is not retained, so applications that need that information should; instead use raw inflate, see inflateInit2() below, or inflateBack() and; perform their own processing of the gzip header and trailer. When processing; gzip-wrapped deflate data, strm->adler32 is set to the CRC-32 of the output; producted so far. The CRC-32 is checked against the gzip trailer. inflate() returns Z_OK if some progre",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:5309,Security,checksum,checksum,5309,"ed and; inflate() can be called again to continue the operation as if Z_NO_FLUSH had; been used. In this implementation, inflate() always flushes as much output as; possible to the output buffer, and always uses the faster approach on the; first call. So the effects of the flush parameter in this implementation are; on the return value of inflate() as noted below, when inflate() returns early; when Z_BLOCK or Z_TREES is used, and when inflate() avoids the allocation of; memory for a sliding window when Z_FINISH is used. If a preset dictionary is needed after this call (see inflateSetDictionary; below), inflate sets strm->adler to the Adler-32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the Adler-32 checksum of all output produced so far (that is,; total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described; below. At the end of the stream, inflate() checks that its computed adler32; checksum is equal to that saved by the compressor and returns Z_STREAM_END; only if the checksum is correct. inflate() can decompress and check either zlib-wrapped or gzip-wrapped; deflate data. The header type is detected automatically, if requested when; initializing with inflateInit2(). Any information contained in the gzip; header is not retained, so applications that need that information should; instead use raw inflate, see inflateInit2() below, or inflateBack() and; perform their own processing of the gzip header and trailer. When processing; gzip-wrapped deflate data, strm->adler32 is set to the CRC-32 of the output; producted so far. The CRC-32 is checked against the gzip trailer. inflate() returns Z_OK if some progress has been made (more input processed; or more output produced), Z_STREAM_END if the end of the compressed data has; been reached and all uncompressed output has been produced, Z_NEED_DICT if a; preset dictionary is needed at this point, Z_DATA_ERROR if the input data was; corrupte",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:5397,Security,checksum,checksum,5397,"ed and; inflate() can be called again to continue the operation as if Z_NO_FLUSH had; been used. In this implementation, inflate() always flushes as much output as; possible to the output buffer, and always uses the faster approach on the; first call. So the effects of the flush parameter in this implementation are; on the return value of inflate() as noted below, when inflate() returns early; when Z_BLOCK or Z_TREES is used, and when inflate() avoids the allocation of; memory for a sliding window when Z_FINISH is used. If a preset dictionary is needed after this call (see inflateSetDictionary; below), inflate sets strm->adler to the Adler-32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the Adler-32 checksum of all output produced so far (that is,; total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described; below. At the end of the stream, inflate() checks that its computed adler32; checksum is equal to that saved by the compressor and returns Z_STREAM_END; only if the checksum is correct. inflate() can decompress and check either zlib-wrapped or gzip-wrapped; deflate data. The header type is detected automatically, if requested when; initializing with inflateInit2(). Any information contained in the gzip; header is not retained, so applications that need that information should; instead use raw inflate, see inflateInit2() below, or inflateBack() and; perform their own processing of the gzip header and trailer. When processing; gzip-wrapped deflate data, strm->adler32 is set to the CRC-32 of the output; producted so far. The CRC-32 is checked against the gzip trailer. inflate() returns Z_OK if some progress has been made (more input processed; or more output produced), Z_STREAM_END if the end of the compressed data has; been reached and all uncompressed output has been produced, Z_NEED_DICT if a; preset dictionary is needed at this point, Z_DATA_ERROR if the input data was; corrupte",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:564,Usability,resume,resume,564,"/*; inflate decompresses as much data as possible, and stops when the input; buffer becomes empty or the output buffer becomes full. It may introduce; some output latency (reading input without producing any output) except when; forced to flush. The detailed semantics are as follows. inflate performs one or both of the; following actions:. - Decompress more input starting at next_in and update next_in and avail_in; accordingly. If not all input can be processed (because there is not; enough room in the output buffer), next_in is updated and processing will; resume at this point for the next call of inflate(). - Provide more output starting at next_out and update next_out and avail_out; accordingly. inflate() provides as much output as possible, until there is; no more input data or no more space in the output buffer (see below about; the flush parameter). Before the call of inflate(), the application should ensure that at least; one of the actions is possible, by providing more input and/or consuming more; output, and updating the next_* and avail_* values accordingly. The; application can consume the uncompressed output when it wants, for example; when the output buffer is full (avail_out == 0), or after each call of; inflate(). If inflate returns Z_OK and with zero avail_out, it must be; called again after making room in the output buffer because there might be; more output pending. The flush parameter of inflate() can be Z_NO_FLUSH, Z_SYNC_FLUSH, Z_FINISH,; Z_BLOCK, or Z_TREES. Z_SYNC_FLUSH requests that inflate() flush as much; output as possible to the output buffer. Z_BLOCK requests that inflate(); stop if and when it gets to the next deflate block boundary. When decoding; the zlib or gzip format, this will cause inflate() to return immediately; after the header and before the first block. When doing a raw inflate,; inflate() will go ahead and process the first block, and will return when it; gets to the end of that block, or when it runs out of data. The Z_BLO",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:256,Availability,error,error,256,"/*; All dynamically allocated data structures for this stream are freed.; This function discards any unprocessed input and does not flush any pending; output. inflateEnd returns Z_OK if success, Z_STREAM_ERROR if the stream state; was inconsistent. In the error case, msg may be set but then points to a; static string (which must not be deallocated).; */; /* Advanced functions */; /*; The following functions are needed only in some special applications.; */; /*; ZEXTERN int ZEXPORT deflateInit2 OF((z_streamp strm,; int level,; int method,; int windowBits,; int memLevel,; int strategy));. This is another version of deflateInit with more compression options. The; fields next_in, zalloc, zfree and opaque must be initialized before by the; caller. The method parameter is the compression method. It must be Z_DEFLATED in; this version of the library. The windowBits parameter is the base two logarithm of the window size; (the size of the history buffer). It should be in the range 8..15 for this; version of the library. Larger values of this parameter result in better; compression at the expense of memory usage. The default value is 15 if; deflateInit is used instead. windowBits can also be -8..-15 for raw deflate. In this case, -windowBits; determines the window size. deflate() will then generate raw deflate data; with no zlib header or trailer, and will not compute an adler32 check value. windowBits can also be greater than 15 for optional gzip encoding. Add; 16 to windowBits to write a simple gzip header and trailer around the; compressed data instead of a zlib wrapper. The gzip header will have no; file name, no extra data, no comment, no modification time (set to zero), no; header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but is; slow and",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3495,Availability,error,error,3495,"e gzip header will have no; file name, no extra data, no comment, no modification time (set to zero), no; header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but is; slow and reduces compression ratio; memLevel=9 uses maximum memory for; optimal speed. The default value is 8. See zconf.h for total memory usage; as a function of windowBits and memLevel. The strategy parameter is used to tune the compression algorithm. Use the; value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a; filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no; string match), or Z_RLE to limit match distances to one (run-length; encoding). Filtered data consists mostly of small values with a somewhat; random distribution. In this case, the compression algorithm is tuned to; compress them better. The effect of Z_FILTERED is to force more Huffman; coding and less string matching; it is somewhat intermediate between; Z_DEFAULT_STRATEGY and Z_HUFFMAN_ONLY. Z_RLE is designed to be almost as; fast as Z_HUFFMAN_ONLY, but give better compression for PNG image data. The; strategy parameter only affects the compression ratio but not the; correctness of the compressed output even if it is not set appropriately.; Z_FIXED prevents the use of dynamic Huffman codes, allowing for a simpler; decoder for special applications. deflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_STREAM_ERROR if any parameter is invalid (such as an invalid; method), or Z_VERSION_ERROR if the zlib library version (zlib_version) is; incompatible with the version assumed by the caller (ZLIB_VERSION). msg is; set to null if there is no error message. deflateInit2 does not perform any; compression: this will be done by deflate().; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:20,Energy Efficiency,allocate,allocated,20,"/*; All dynamically allocated data structures for this stream are freed.; This function discards any unprocessed input and does not flush any pending; output. inflateEnd returns Z_OK if success, Z_STREAM_ERROR if the stream state; was inconsistent. In the error case, msg may be set but then points to a; static string (which must not be deallocated).; */; /* Advanced functions */; /*; The following functions are needed only in some special applications.; */; /*; ZEXTERN int ZEXPORT deflateInit2 OF((z_streamp strm,; int level,; int method,; int windowBits,; int memLevel,; int strategy));. This is another version of deflateInit with more compression options. The; fields next_in, zalloc, zfree and opaque must be initialized before by the; caller. The method parameter is the compression method. It must be Z_DEFLATED in; this version of the library. The windowBits parameter is the base two logarithm of the window size; (the size of the history buffer). It should be in the range 8..15 for this; version of the library. Larger values of this parameter result in better; compression at the expense of memory usage. The default value is 15 if; deflateInit is used instead. windowBits can also be -8..-15 for raw deflate. In this case, -windowBits; determines the window size. deflate() will then generate raw deflate data; with no zlib header or trailer, and will not compute an adler32 check value. windowBits can also be greater than 15 for optional gzip encoding. Add; 16 to windowBits to write a simple gzip header and trailer around the; compressed data instead of a zlib wrapper. The gzip header will have no; file name, no extra data, no comment, no modification time (set to zero), no; header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but is; slow and",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1907,Energy Efficiency,allocate,allocated,1907,"arithm of the window size; (the size of the history buffer). It should be in the range 8..15 for this; version of the library. Larger values of this parameter result in better; compression at the expense of memory usage. The default value is 15 if; deflateInit is used instead. windowBits can also be -8..-15 for raw deflate. In this case, -windowBits; determines the window size. deflate() will then generate raw deflate data; with no zlib header or trailer, and will not compute an adler32 check value. windowBits can also be greater than 15 for optional gzip encoding. Add; 16 to windowBits to write a simple gzip header and trailer around the; compressed data instead of a zlib wrapper. The gzip header will have no; file name, no extra data, no comment, no modification time (set to zero), no; header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but is; slow and reduces compression ratio; memLevel=9 uses maximum memory for; optimal speed. The default value is 8. See zconf.h for total memory usage; as a function of windowBits and memLevel. The strategy parameter is used to tune the compression algorithm. Use the; value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a; filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no; string match), or Z_RLE to limit match distances to one (run-length; encoding). Filtered data consists mostly of small values with a somewhat; random distribution. In this case, the compression algorithm is tuned to; compress them better. The effect of Z_FILTERED is to force more Huffman; coding and less string matching; it is somewhat intermediate between; Z_DEFAULT_STRATEGY and Z_HUFFMAN_ONLY. Z_RLE is designed to be almost as; fast as Z_HUFFMAN_ONLY, but give better compression for PN",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:2002,Energy Efficiency,reduce,reduces,2002,"e library. Larger values of this parameter result in better; compression at the expense of memory usage. The default value is 15 if; deflateInit is used instead. windowBits can also be -8..-15 for raw deflate. In this case, -windowBits; determines the window size. deflate() will then generate raw deflate data; with no zlib header or trailer, and will not compute an adler32 check value. windowBits can also be greater than 15 for optional gzip encoding. Add; 16 to windowBits to write a simple gzip header and trailer around the; compressed data instead of a zlib wrapper. The gzip header will have no; file name, no extra data, no comment, no modification time (set to zero), no; header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but is; slow and reduces compression ratio; memLevel=9 uses maximum memory for; optimal speed. The default value is 8. See zconf.h for total memory usage; as a function of windowBits and memLevel. The strategy parameter is used to tune the compression algorithm. Use the; value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a; filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no; string match), or Z_RLE to limit match distances to one (run-length; encoding). Filtered data consists mostly of small values with a somewhat; random distribution. In this case, the compression algorithm is tuned to; compress them better. The effect of Z_FILTERED is to force more Huffman; coding and less string matching; it is somewhat intermediate between; Z_DEFAULT_STRATEGY and Z_HUFFMAN_ONLY. Z_RLE is designed to be almost as; fast as Z_HUFFMAN_ONLY, but give better compression for PNG image data. The; strategy parameter only affects the compression ratio but not the; correctness of the compressed ",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1582,Integrability,wrap,wrapper,1582,"; int method,; int windowBits,; int memLevel,; int strategy));. This is another version of deflateInit with more compression options. The; fields next_in, zalloc, zfree and opaque must be initialized before by the; caller. The method parameter is the compression method. It must be Z_DEFLATED in; this version of the library. The windowBits parameter is the base two logarithm of the window size; (the size of the history buffer). It should be in the range 8..15 for this; version of the library. Larger values of this parameter result in better; compression at the expense of memory usage. The default value is 15 if; deflateInit is used instead. windowBits can also be -8..-15 for raw deflate. In this case, -windowBits; determines the window size. deflate() will then generate raw deflate data; with no zlib header or trailer, and will not compute an adler32 check value. windowBits can also be greater than 15 for optional gzip encoding. Add; 16 to windowBits to write a simple gzip header and trailer around the; compressed data instead of a zlib wrapper. The gzip header will have no; file name, no extra data, no comment, no modification time (set to zero), no; header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but is; slow and reduces compression ratio; memLevel=9 uses maximum memory for; optimal speed. The default value is 8. See zconf.h for total memory usage; as a function of windowBits and memLevel. The strategy parameter is used to tune the compression algorithm. Use the; value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a; filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no; string match), or Z_RLE to limit match distances to one (run-length; encoding). Filtered data consists mostly of small valu",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3501,Integrability,message,message,3501,"e gzip header will have no; file name, no extra data, no comment, no modification time (set to zero), no; header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but is; slow and reduces compression ratio; memLevel=9 uses maximum memory for; optimal speed. The default value is 8. See zconf.h for total memory usage; as a function of windowBits and memLevel. The strategy parameter is used to tune the compression algorithm. Use the; value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a; filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no; string match), or Z_RLE to limit match distances to one (run-length; encoding). Filtered data consists mostly of small values with a somewhat; random distribution. In this case, the compression algorithm is tuned to; compress them better. The effect of Z_FILTERED is to force more Huffman; coding and less string matching; it is somewhat intermediate between; Z_DEFAULT_STRATEGY and Z_HUFFMAN_ONLY. Z_RLE is designed to be almost as; fast as Z_HUFFMAN_ONLY, but give better compression for PNG image data. The; strategy parameter only affects the compression ratio but not the; correctness of the compressed output even if it is not set appropriately.; Z_FIXED prevents the use of dynamic Huffman codes, allowing for a simpler; decoder for special applications. deflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_STREAM_ERROR if any parameter is invalid (such as an invalid; method), or Z_VERSION_ERROR if the zlib library version (zlib_version) is; incompatible with the version assumed by the caller (ZLIB_VERSION). msg is; set to null if there is no error message. deflateInit2 does not perform any; compression: this will be done by deflate().; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:2216,Performance,tune,tune,2216,"aw deflate. In this case, -windowBits; determines the window size. deflate() will then generate raw deflate data; with no zlib header or trailer, and will not compute an adler32 check value. windowBits can also be greater than 15 for optional gzip encoding. Add; 16 to windowBits to write a simple gzip header and trailer around the; compressed data instead of a zlib wrapper. The gzip header will have no; file name, no extra data, no comment, no modification time (set to zero), no; header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but is; slow and reduces compression ratio; memLevel=9 uses maximum memory for; optimal speed. The default value is 8. See zconf.h for total memory usage; as a function of windowBits and memLevel. The strategy parameter is used to tune the compression algorithm. Use the; value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a; filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no; string match), or Z_RLE to limit match distances to one (run-length; encoding). Filtered data consists mostly of small values with a somewhat; random distribution. In this case, the compression algorithm is tuned to; compress them better. The effect of Z_FILTERED is to force more Huffman; coding and less string matching; it is somewhat intermediate between; Z_DEFAULT_STRATEGY and Z_HUFFMAN_ONLY. Z_RLE is designed to be almost as; fast as Z_HUFFMAN_ONLY, but give better compression for PNG image data. The; strategy parameter only affects the compression ratio but not the; correctness of the compressed output even if it is not set appropriately.; Z_FIXED prevents the use of dynamic Huffman codes, allowing for a simpler; decoder for special applications. deflateInit2 returns Z_OK if success, Z_MEM_",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:2615,Performance,tune,tuned,2615,"e gzip header will have no; file name, no extra data, no comment, no modification time (set to zero), no; header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but is; slow and reduces compression ratio; memLevel=9 uses maximum memory for; optimal speed. The default value is 8. See zconf.h for total memory usage; as a function of windowBits and memLevel. The strategy parameter is used to tune the compression algorithm. Use the; value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a; filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no; string match), or Z_RLE to limit match distances to one (run-length; encoding). Filtered data consists mostly of small values with a somewhat; random distribution. In this case, the compression algorithm is tuned to; compress them better. The effect of Z_FILTERED is to force more Huffman; coding and less string matching; it is somewhat intermediate between; Z_DEFAULT_STRATEGY and Z_HUFFMAN_ONLY. Z_RLE is designed to be almost as; fast as Z_HUFFMAN_ONLY, but give better compression for PNG image data. The; strategy parameter only affects the compression ratio but not the; correctness of the compressed output even if it is not set appropriately.; Z_FIXED prevents the use of dynamic Huffman codes, allowing for a simpler; decoder for special applications. deflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_STREAM_ERROR if any parameter is invalid (such as an invalid; method), or Z_VERSION_ERROR if the zlib library version (zlib_version) is; incompatible with the version assumed by the caller (ZLIB_VERSION). msg is; set to null if there is no error message. deflateInit2 does not perform any; compression: this will be done by deflate().; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3532,Performance,perform,perform,3532,"e gzip header will have no; file name, no extra data, no comment, no modification time (set to zero), no; header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but is; slow and reduces compression ratio; memLevel=9 uses maximum memory for; optimal speed. The default value is 8. See zconf.h for total memory usage; as a function of windowBits and memLevel. The strategy parameter is used to tune the compression algorithm. Use the; value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a; filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no; string match), or Z_RLE to limit match distances to one (run-length; encoding). Filtered data consists mostly of small values with a somewhat; random distribution. In this case, the compression algorithm is tuned to; compress them better. The effect of Z_FILTERED is to force more Huffman; coding and less string matching; it is somewhat intermediate between; Z_DEFAULT_STRATEGY and Z_HUFFMAN_ONLY. Z_RLE is designed to be almost as; fast as Z_HUFFMAN_ONLY, but give better compression for PNG image data. The; strategy parameter only affects the compression ratio but not the; correctness of the compressed output even if it is not set appropriately.; Z_FIXED prevents the use of dynamic Huffman codes, allowing for a simpler; decoder for special applications. deflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_STREAM_ERROR if any parameter is invalid (such as an invalid; method), or Z_VERSION_ERROR if the zlib library version (zlib_version) is; incompatible with the version assumed by the caller (ZLIB_VERSION). msg is; set to null if there is no error message. deflateInit2 does not perform any; compression: this will be done by deflate().; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:2345,Safety,predict,predictor,2345,"l not compute an adler32 check value. windowBits can also be greater than 15 for optional gzip encoding. Add; 16 to windowBits to write a simple gzip header and trailer around the; compressed data instead of a zlib wrapper. The gzip header will have no; file name, no extra data, no comment, no modification time (set to zero), no; header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but is; slow and reduces compression ratio; memLevel=9 uses maximum memory for; optimal speed. The default value is 8. See zconf.h for total memory usage; as a function of windowBits and memLevel. The strategy parameter is used to tune the compression algorithm. Use the; value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a; filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no; string match), or Z_RLE to limit match distances to one (run-length; encoding). Filtered data consists mostly of small values with a somewhat; random distribution. In this case, the compression algorithm is tuned to; compress them better. The effect of Z_FILTERED is to force more Huffman; coding and less string matching; it is somewhat intermediate between; Z_DEFAULT_STRATEGY and Z_HUFFMAN_ONLY. Z_RLE is designed to be almost as; fast as Z_HUFFMAN_ONLY, but give better compression for PNG image data. The; strategy parameter only affects the compression ratio but not the; correctness of the compressed output even if it is not set appropriately.; Z_FIXED prevents the use of dynamic Huffman codes, allowing for a simpler; decoder for special applications. deflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_STREAM_ERROR if any parameter is invalid (such as an invalid; method), or Z_VERSION_ERROR if the zlib library ve",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:897,Testability,log,logarithm,897,"/*; All dynamically allocated data structures for this stream are freed.; This function discards any unprocessed input and does not flush any pending; output. inflateEnd returns Z_OK if success, Z_STREAM_ERROR if the stream state; was inconsistent. In the error case, msg may be set but then points to a; static string (which must not be deallocated).; */; /* Advanced functions */; /*; The following functions are needed only in some special applications.; */; /*; ZEXTERN int ZEXPORT deflateInit2 OF((z_streamp strm,; int level,; int method,; int windowBits,; int memLevel,; int strategy));. This is another version of deflateInit with more compression options. The; fields next_in, zalloc, zfree and opaque must be initialized before by the; caller. The method parameter is the compression method. It must be Z_DEFLATED in; this version of the library. The windowBits parameter is the base two logarithm of the window size; (the size of the history buffer). It should be in the range 8..15 for this; version of the library. Larger values of this parameter result in better; compression at the expense of memory usage. The default value is 15 if; deflateInit is used instead. windowBits can also be -8..-15 for raw deflate. In this case, -windowBits; determines the window size. deflate() will then generate raw deflate data; with no zlib header or trailer, and will not compute an adler32 check value. windowBits can also be greater than 15 for optional gzip encoding. Add; 16 to windowBits to write a simple gzip header and trailer around the; compressed data instead of a zlib wrapper. The gzip header will have no; file name, no extra data, no comment, no modification time (set to zero), no; header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but is; slow and",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1505,Usability,simpl,simple,1505,"; int method,; int windowBits,; int memLevel,; int strategy));. This is another version of deflateInit with more compression options. The; fields next_in, zalloc, zfree and opaque must be initialized before by the; caller. The method parameter is the compression method. It must be Z_DEFLATED in; this version of the library. The windowBits parameter is the base two logarithm of the window size; (the size of the history buffer). It should be in the range 8..15 for this; version of the library. Larger values of this parameter result in better; compression at the expense of memory usage. The default value is 15 if; deflateInit is used instead. windowBits can also be -8..-15 for raw deflate. In this case, -windowBits; determines the window size. deflate() will then generate raw deflate data; with no zlib header or trailer, and will not compute an adler32 check value. windowBits can also be greater than 15 for optional gzip encoding. Add; 16 to windowBits to write a simple gzip header and trailer around the; compressed data instead of a zlib wrapper. The gzip header will have no; file name, no extra data, no comment, no modification time (set to zero), no; header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but is; slow and reduces compression ratio; memLevel=9 uses maximum memory for; optimal speed. The default value is 8. See zconf.h for total memory usage; as a function of windowBits and memLevel. The strategy parameter is used to tune the compression algorithm. Use the; value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a; filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no; string match), or Z_RLE to limit match distances to one (run-length; encoding). Filtered data consists mostly of small valu",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3127,Usability,simpl,simpler,3127,"e gzip header will have no; file name, no extra data, no comment, no modification time (set to zero), no; header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but is; slow and reduces compression ratio; memLevel=9 uses maximum memory for; optimal speed. The default value is 8. See zconf.h for total memory usage; as a function of windowBits and memLevel. The strategy parameter is used to tune the compression algorithm. Use the; value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a; filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no; string match), or Z_RLE to limit match distances to one (run-length; encoding). Filtered data consists mostly of small values with a somewhat; random distribution. In this case, the compression algorithm is tuned to; compress them better. The effect of Z_FILTERED is to force more Huffman; coding and less string matching; it is somewhat intermediate between; Z_DEFAULT_STRATEGY and Z_HUFFMAN_ONLY. Z_RLE is designed to be almost as; fast as Z_HUFFMAN_ONLY, but give better compression for PNG image data. The; strategy parameter only affects the compression ratio but not the; correctness of the compressed output even if it is not set appropriately.; Z_FIXED prevents the use of dynamic Huffman codes, allowing for a simpler; decoder for special applications. deflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_STREAM_ERROR if any parameter is invalid (such as an invalid; method), or Z_VERSION_ERROR if the zlib library version (zlib_version) is; incompatible with the version assumed by the caller (ZLIB_VERSION). msg is; set to null if there is no error message. deflateInit2 does not perform any; compression: this will be done by deflate().; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1092,Integrability,Depend,Depending,1092," deflateReset, and before any call of deflate. When doing raw deflate, this; function must be called either before any call of deflate, or immediately; after the completion of a deflate block, i.e. after all input has been; consumed and all output has been delivered when using any of the flush; options Z_BLOCK, Z_PARTIAL_FLUSH, Z_SYNC_FLUSH, or Z_FULL_FLUSH. The; compressor and decompressor must use exactly the same dictionary (see; inflateSetDictionary). The dictionary should consist of strings (byte sequences) that are likely; to be encountered later in the data to be compressed, with the most commonly; used strings preferably put towards the end of the dictionary. Using a; dictionary is most useful when the data to be compressed is short and can be; predicted with good accuracy; the data can then be compressed better than; with the default empty dictionary. Depending on the size of the compression data structures selected by; deflateInit or deflateInit2, a part of the dictionary may in effect be; discarded, for example if the dictionary is larger than the window size; provided in deflateInit or deflateInit2. Thus the strings most likely to be; useful should be put at the end of the dictionary, not at the front. In; addition, the current implementation of deflate will use at most the window; size minus 262 bytes of the provided dictionary. Upon return of this function, strm->adler is set to the adler32 value; of the dictionary; the decompressor may later use this value to determine; which dictionary has been used by the compressor. (The adler32 value; applies to the whole dictionary even if only a subset of the dictionary is; actually used by the compressor.) If a raw deflate was requested, then the; adler32 value is not computed and strm->adler is not set. deflateSetDictionary returns Z_OK if success, or Z_STREAM_ERROR if a; parameter is invalid (e.g. dictionary being Z_NULL) or the stream state is; inconsistent (for example if deflate has already been called for",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:2312,Performance,perform,perform,2312,"fter the completion of a deflate block, i.e. after all input has been; consumed and all output has been delivered when using any of the flush; options Z_BLOCK, Z_PARTIAL_FLUSH, Z_SYNC_FLUSH, or Z_FULL_FLUSH. The; compressor and decompressor must use exactly the same dictionary (see; inflateSetDictionary). The dictionary should consist of strings (byte sequences) that are likely; to be encountered later in the data to be compressed, with the most commonly; used strings preferably put towards the end of the dictionary. Using a; dictionary is most useful when the data to be compressed is short and can be; predicted with good accuracy; the data can then be compressed better than; with the default empty dictionary. Depending on the size of the compression data structures selected by; deflateInit or deflateInit2, a part of the dictionary may in effect be; discarded, for example if the dictionary is larger than the window size; provided in deflateInit or deflateInit2. Thus the strings most likely to be; useful should be put at the end of the dictionary, not at the front. In; addition, the current implementation of deflate will use at most the window; size minus 262 bytes of the provided dictionary. Upon return of this function, strm->adler is set to the adler32 value; of the dictionary; the decompressor may later use this value to determine; which dictionary has been used by the compressor. (The adler32 value; applies to the whole dictionary even if only a subset of the dictionary is; actually used by the compressor.) If a raw deflate was requested, then the; adler32 value is not computed and strm->adler is not set. deflateSetDictionary returns Z_OK if success, or Z_STREAM_ERROR if a; parameter is invalid (e.g. dictionary being Z_NULL) or the stream state is; inconsistent (for example if deflate has already been called for this stream; or if not at a block boundary for raw deflate). deflateSetDictionary does; not perform any compression: this will be done by deflate().; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:982,Safety,predict,predicted,982,"/*; Initializes the compression dictionary from the given byte sequence; without producing any compressed output. When using the zlib format, this; function must be called immediately after deflateInit, deflateInit2 or; deflateReset, and before any call of deflate. When doing raw deflate, this; function must be called either before any call of deflate, or immediately; after the completion of a deflate block, i.e. after all input has been; consumed and all output has been delivered when using any of the flush; options Z_BLOCK, Z_PARTIAL_FLUSH, Z_SYNC_FLUSH, or Z_FULL_FLUSH. The; compressor and decompressor must use exactly the same dictionary (see; inflateSetDictionary). The dictionary should consist of strings (byte sequences) that are likely; to be encountered later in the data to be compressed, with the most commonly; used strings preferably put towards the end of the dictionary. Using a; dictionary is most useful when the data to be compressed is short and can be; predicted with good accuracy; the data can then be compressed better than; with the default empty dictionary. Depending on the size of the compression data structures selected by; deflateInit or deflateInit2, a part of the dictionary may in effect be; discarded, for example if the dictionary is larger than the window size; provided in deflateInit or deflateInit2. Thus the strings most likely to be; useful should be put at the end of the dictionary, not at the front. In; addition, the current implementation of deflate will use at most the window; size minus 262 bytes of the provided dictionary. Upon return of this function, strm->adler is set to the adler32 value; of the dictionary; the decompressor may later use this value to determine; which dictionary has been used by the compressor. (The adler32 value; applies to the whole dictionary even if only a subset of the dictionary is; actually used by the compressor.) If a raw deflate was requested, then the; adler32 value is not computed and strm->adler is n",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:349,Availability,avail,available,349,"/*; Dynamically update the compression level and compression strategy. The; interpretation of level and strategy is as in deflateInit2. This can be; used to switch between compression and straight copy of the input data, or; to switch to a different kind of input data requiring a different strategy.; If the compression level is changed, the input available so far is; compressed with the old level (and may be flushed); the new level will take; effect only at the next call of deflate(). Before the call of deflateParams, the stream state must be set as for; a call of deflate(), since the currently available input may have to be; compressed and flushed. In particular, strm->avail_out must be non-zero. deflateParams returns Z_OK if success, Z_STREAM_ERROR if the source; stream state was inconsistent or if a parameter was invalid, Z_BUF_ERROR if; strm->avail_out was zero.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:602,Availability,avail,available,602,"/*; Dynamically update the compression level and compression strategy. The; interpretation of level and strategy is as in deflateInit2. This can be; used to switch between compression and straight copy of the input data, or; to switch to a different kind of input data requiring a different strategy.; If the compression level is changed, the input available so far is; compressed with the old level (and may be flushed); the new level will take; effect only at the next call of deflate(). Before the call of deflateParams, the stream state must be set as for; a call of deflate(), since the currently available input may have to be; compressed and flushed. In particular, strm->avail_out must be non-zero. deflateParams returns Z_OK if success, Z_STREAM_ERROR if the source; stream state was inconsistent or if a parameter was invalid, Z_BUF_ERROR if; strm->avail_out was zero.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:16,Deployability,update,update,16,"/*; Dynamically update the compression level and compression strategy. The; interpretation of level and strategy is as in deflateInit2. This can be; used to switch between compression and straight copy of the input data, or; to switch to a different kind of input data requiring a different strategy.; If the compression level is changed, the input available so far is; compressed with the old level (and may be flushed); the new level will take; effect only at the next call of deflate(). Before the call of deflateParams, the stream state must be set as for; a call of deflate(), since the currently available input may have to be; compressed and flushed. In particular, strm->avail_out must be non-zero. deflateParams returns Z_OK if success, Z_STREAM_ERROR if the source; stream state was inconsistent or if a parameter was invalid, Z_BUF_ERROR if; strm->avail_out was zero.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:9,Performance,tune,tune,9,"/*; Fine tune deflate's internal compression parameters. This should only be; used by someone who understands the algorithm used by zlib's deflate for; searching for the best matching string, and even then only by the most; fanatic optimizer trying to squeeze out the last compressed bit for their; specific input data. Read the deflate.c source code for the meaning of the; max_lazy, good_length, nice_length, and max_chain parameters. deflateTune() can be called after deflateInit() or deflateInit2(), and; returns Z_OK on success, or Z_STREAM_ERROR for an invalid deflate stream.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:232,Performance,optimiz,optimizer,232,"/*; Fine tune deflate's internal compression parameters. This should only be; used by someone who understands the algorithm used by zlib's deflate for; searching for the best matching string, and even then only by the most; fanatic optimizer trying to squeeze out the last compressed bit for their; specific input data. Read the deflate.c source code for the meaning of the; max_lazy, good_length, nice_length, and max_chain parameters. deflateTune() can be called after deflateInit() or deflateInit2(), and; returns Z_OK on success, or Z_STREAM_ERROR for an invalid deflate stream.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:222,Energy Efficiency,allocate,allocate,222,"/*; deflateBound() returns an upper bound on the compressed size after; deflation of sourceLen bytes. It must be called after deflateInit() or; deflateInit2(), and after deflateSetHeader(), if used. This would be used; to allocate an output buffer for deflation in a single pass, and so would be; called before deflate(). If that first deflate() call is provided the; sourceLen input bytes, an output buffer allocated to the size returned by; deflateBound(), and the flush value Z_FINISH, then deflate() is guaranteed; to return Z_STREAM_END. Note that it is possible for the compressed size to; be larger than the value returned by deflateBound() if flush options other; than Z_FINISH or Z_NO_FLUSH are used.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:408,Energy Efficiency,allocate,allocated,408,"/*; deflateBound() returns an upper bound on the compressed size after; deflation of sourceLen bytes. It must be called after deflateInit() or; deflateInit2(), and after deflateSetHeader(), if used. This would be used; to allocate an output buffer for deflation in a single pass, and so would be; called before deflate(). If that first deflate() call is provided the; sourceLen input bytes, an output buffer allocated to the size returned by; deflateBound(), and the flush value Z_FINISH, then deflate() is guaranteed; to return Z_STREAM_END. Note that it is possible for the compressed size to; be larger than the value returned by deflateBound() if flush options other; than Z_FINISH or Z_NO_FLUSH are used.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:123,Availability,avail,available,123,"/*; deflatePending() returns the number of bytes and bits of output that have; been generated, but not yet provided in the available output. The bytes not; provided would be due to the available output space having being consumed.; The number of bits of output not provided are between 0 and 7, where they; await more bits to join them in order to fill out a full byte. If pending; or bits are Z_NULL, then those values are not set. deflatePending returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:185,Availability,avail,available,185,"/*; deflatePending() returns the number of bytes and bits of output that have; been generated, but not yet provided in the available output. The bytes not; provided would be due to the available output space having being consumed.; The number of bits of output not provided are between 0 and 7, where they; await more bits to join them in order to fill out a full byte. If pending; or bits are Z_NULL, then those values are not set. deflatePending returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:595,Availability,avail,available,595,"/*; deflateSetHeader() provides gzip header information for when a gzip; stream is requested by deflateInit2(). deflateSetHeader() may be called; after deflateInit2() or deflateReset() and before the first call of; deflate(). The text, time, os, extra field, name, and comment information; in the provided gz_header structure are written to the gzip header (xflag is; ignored -- the extra flags are set according to the compression level). The; caller must assure that, if not Z_NULL, name and comment are terminated with; a zero byte, and that if extra is not Z_NULL, that extra_len bytes are; available there. If hcrc is true, a gzip header crc is included. Note that; the current versions of the command-line version of gzip (up through version; 1.3.x) do not support header crc's, and will report that it is a ""multi-part; gzip file"" and give up. If deflateSetHeader is not used, the default gzip header has text false,; the time set to zero, and os set to 255, with no extra, name, or comment; fields. The gzip header is returned to the default state by deflateReset(). deflateSetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateInit2 OF((z_streamp strm,; int windowBits));. This is another version of inflateInit with an extra parameter. The; fields next_in, avail_in, zalloc, zfree and opaque must be initialized; before by the caller. The windowBits parameter is the base two logarithm of the maximum window; size (the size of the history buffer). It should be in the range 8..15 for; this version of the library. The default value is 15 if inflateInit is used; instead. windowBits must be greater than or equal to the windowBits value; provided to deflateInit2() while compressing, or it must be equal to 15 if; deflateInit2() was not used. If a compressed stream with a larger window; size is given as input, inflate() will return with the error code; Z_DATA_ERROR instead of trying to allocate a larger wind",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1933,Availability,error,error,1933,"alse,; the time set to zero, and os set to 255, with no extra, name, or comment; fields. The gzip header is returned to the default state by deflateReset(). deflateSetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateInit2 OF((z_streamp strm,; int windowBits));. This is another version of inflateInit with an extra parameter. The; fields next_in, avail_in, zalloc, zfree and opaque must be initialized; before by the caller. The windowBits parameter is the base two logarithm of the maximum window; size (the size of the history buffer). It should be in the range 8..15 for; this version of the library. The default value is 15 if inflateInit is used; instead. windowBits must be greater than or equal to the windowBits value; provided to deflateInit2() while compressing, or it must be equal to 15 if; deflateInit2() was not used. If a compressed stream with a larger window; size is given as input, inflate() will return with the error code; Z_DATA_ERROR instead of trying to allocate a larger window. windowBits can also be zero to request that inflate use the window size in; the zlib header of the compressed stream. windowBits can also be -8..-15 for raw inflate. In this case, -windowBits; determines the window size. inflate() will then process raw deflate data,; not looking for a zlib or gzip header, not generating a check value, and not; looking for any check values for comparison at the end of the stream. This; is for use with other formats that use the deflate compressed data format; such as zip. Those formats provide their own check values. If a custom; format is developed using the raw deflate format for compressed data, it is; recommended that a check value such as an adler32 or a crc32 be applied to; the uncompressed data as is done in the zlib, gzip, and zip formats. For; most applications, the zlib format should be used as is. Note that comments; above on the use in deflateInit2() appli",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3589,Availability,error,error,3589,"rger window. windowBits can also be zero to request that inflate use the window size in; the zlib header of the compressed stream. windowBits can also be -8..-15 for raw inflate. In this case, -windowBits; determines the window size. inflate() will then process raw deflate data,; not looking for a zlib or gzip header, not generating a check value, and not; looking for any check values for comparison at the end of the stream. This; is for use with other formats that use the deflate compressed data format; such as zip. Those formats provide their own check values. If a custom; format is developed using the raw deflate format for compressed data, it is; recommended that a check value such as an adler32 or a crc32 be applied to; the uncompressed data as is done in the zlib, gzip, and zip formats. For; most applications, the zlib format should be used as is. Note that comments; above on the use in deflateInit2() applies to the magnitude of windowBits. windowBits can also be greater than 15 for optional gzip decoding. Add; 32 to windowBits to enable zlib and gzip decoding with automatic header; detection, or add 16 to decode only the gzip format (the zlib format will; return a Z_DATA_ERROR). If a gzip stream is being decoded, strm->adler is a; crc32 instead of an adler32. inflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_VERSION_ERROR if the zlib library version is incompatible with the; version assumed by the caller, or Z_STREAM_ERROR if the parameters are; invalid, such as a null pointer to the structure. msg is set to null if; there is no error message. inflateInit2 does not perform any decompression; apart from possibly reading the zlib header if present: actual decompression; will be done by inflate(). (So next_in and avail_in may be modified, but; next_out and avail_out are unused and unchanged.) The current implementation; of inflateInit2() does not process any header information -- that is; deferred until inflate() is called.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1979,Energy Efficiency,allocate,allocate,1979,"alse,; the time set to zero, and os set to 255, with no extra, name, or comment; fields. The gzip header is returned to the default state by deflateReset(). deflateSetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateInit2 OF((z_streamp strm,; int windowBits));. This is another version of inflateInit with an extra parameter. The; fields next_in, avail_in, zalloc, zfree and opaque must be initialized; before by the caller. The windowBits parameter is the base two logarithm of the maximum window; size (the size of the history buffer). It should be in the range 8..15 for; this version of the library. The default value is 15 if inflateInit is used; instead. windowBits must be greater than or equal to the windowBits value; provided to deflateInit2() while compressing, or it must be equal to 15 if; deflateInit2() was not used. If a compressed stream with a larger window; size is given as input, inflate() will return with the error code; Z_DATA_ERROR instead of trying to allocate a larger window. windowBits can also be zero to request that inflate use the window size in; the zlib header of the compressed stream. windowBits can also be -8..-15 for raw inflate. In this case, -windowBits; determines the window size. inflate() will then process raw deflate data,; not looking for a zlib or gzip header, not generating a check value, and not; looking for any check values for comparison at the end of the stream. This; is for use with other formats that use the deflate compressed data format; such as zip. Those formats provide their own check values. If a custom; format is developed using the raw deflate format for compressed data, it is; recommended that a check value such as an adler32 or a crc32 be applied to; the uncompressed data as is done in the zlib, gzip, and zip formats. For; most applications, the zlib format should be used as is. Note that comments; above on the use in deflateInit2() appli",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3595,Integrability,message,message,3595,"rger window. windowBits can also be zero to request that inflate use the window size in; the zlib header of the compressed stream. windowBits can also be -8..-15 for raw inflate. In this case, -windowBits; determines the window size. inflate() will then process raw deflate data,; not looking for a zlib or gzip header, not generating a check value, and not; looking for any check values for comparison at the end of the stream. This; is for use with other formats that use the deflate compressed data format; such as zip. Those formats provide their own check values. If a custom; format is developed using the raw deflate format for compressed data, it is; recommended that a check value such as an adler32 or a crc32 be applied to; the uncompressed data as is done in the zlib, gzip, and zip formats. For; most applications, the zlib format should be used as is. Note that comments; above on the use in deflateInit2() applies to the magnitude of windowBits. windowBits can also be greater than 15 for optional gzip decoding. Add; 32 to windowBits to enable zlib and gzip decoding with automatic header; detection, or add 16 to decode only the gzip format (the zlib format will; return a Z_DATA_ERROR). If a gzip stream is being decoded, strm->adler is a; crc32 instead of an adler32. inflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_VERSION_ERROR if the zlib library version is incompatible with the; version assumed by the caller, or Z_STREAM_ERROR if the parameters are; invalid, such as a null pointer to the structure. msg is set to null if; there is no error message. inflateInit2 does not perform any decompression; apart from possibly reading the zlib header if present: actual decompression; will be done by inflate(). (So next_in and avail_in may be modified, but; next_out and avail_out are unused and unchanged.) The current implementation; of inflateInit2() does not process any header information -- that is; deferred until inflate() is called.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3626,Performance,perform,perform,3626,"rger window. windowBits can also be zero to request that inflate use the window size in; the zlib header of the compressed stream. windowBits can also be -8..-15 for raw inflate. In this case, -windowBits; determines the window size. inflate() will then process raw deflate data,; not looking for a zlib or gzip header, not generating a check value, and not; looking for any check values for comparison at the end of the stream. This; is for use with other formats that use the deflate compressed data format; such as zip. Those formats provide their own check values. If a custom; format is developed using the raw deflate format for compressed data, it is; recommended that a check value such as an adler32 or a crc32 be applied to; the uncompressed data as is done in the zlib, gzip, and zip formats. For; most applications, the zlib format should be used as is. Note that comments; above on the use in deflateInit2() applies to the magnitude of windowBits. windowBits can also be greater than 15 for optional gzip decoding. Add; 32 to windowBits to enable zlib and gzip decoding with automatic header; detection, or add 16 to decode only the gzip format (the zlib format will; return a Z_DATA_ERROR). If a gzip stream is being decoded, strm->adler is a; crc32 instead of an adler32. inflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_VERSION_ERROR if the zlib library version is incompatible with the; version assumed by the caller, or Z_STREAM_ERROR if the parameters are; invalid, such as a null pointer to the structure. msg is set to null if; there is no error message. inflateInit2 does not perform any decompression; apart from possibly reading the zlib header if present: actual decompression; will be done by inflate(). (So next_in and avail_in may be modified, but; next_out and avail_out are unused and unchanged.) The current implementation; of inflateInit2() does not process any header information -- that is; deferred until inflate() is called.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3098,Safety,detect,detection,3098,"rger window. windowBits can also be zero to request that inflate use the window size in; the zlib header of the compressed stream. windowBits can also be -8..-15 for raw inflate. In this case, -windowBits; determines the window size. inflate() will then process raw deflate data,; not looking for a zlib or gzip header, not generating a check value, and not; looking for any check values for comparison at the end of the stream. This; is for use with other formats that use the deflate compressed data format; such as zip. Those formats provide their own check values. If a custom; format is developed using the raw deflate format for compressed data, it is; recommended that a check value such as an adler32 or a crc32 be applied to; the uncompressed data as is done in the zlib, gzip, and zip formats. For; most applications, the zlib format should be used as is. Note that comments; above on the use in deflateInit2() applies to the magnitude of windowBits. windowBits can also be greater than 15 for optional gzip decoding. Add; 32 to windowBits to enable zlib and gzip decoding with automatic header; detection, or add 16 to decode only the gzip format (the zlib format will; return a Z_DATA_ERROR). If a gzip stream is being decoded, strm->adler is a; crc32 instead of an adler32. inflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_VERSION_ERROR if the zlib library version is incompatible with the; version assumed by the caller, or Z_STREAM_ERROR if the parameters are; invalid, such as a null pointer to the structure. msg is set to null if; there is no error message. inflateInit2 does not perform any decompression; apart from possibly reading the zlib header if present: actual decompression; will be done by inflate(). (So next_in and avail_in may be modified, but; next_out and avail_out are unused and unchanged.) The current implementation; of inflateInit2() does not process any header information -- that is; deferred until inflate() is called.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1467,Testability,log,logarithm,1467,"LL, name and comment are terminated with; a zero byte, and that if extra is not Z_NULL, that extra_len bytes are; available there. If hcrc is true, a gzip header crc is included. Note that; the current versions of the command-line version of gzip (up through version; 1.3.x) do not support header crc's, and will report that it is a ""multi-part; gzip file"" and give up. If deflateSetHeader is not used, the default gzip header has text false,; the time set to zero, and os set to 255, with no extra, name, or comment; fields. The gzip header is returned to the default state by deflateReset(). deflateSetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateInit2 OF((z_streamp strm,; int windowBits));. This is another version of inflateInit with an extra parameter. The; fields next_in, avail_in, zalloc, zfree and opaque must be initialized; before by the caller. The windowBits parameter is the base two logarithm of the maximum window; size (the size of the history buffer). It should be in the range 8..15 for; this version of the library. The default value is 15 if inflateInit is used; instead. windowBits must be greater than or equal to the windowBits value; provided to deflateInit2() while compressing, or it must be equal to 15 if; deflateInit2() was not used. If a compressed stream with a larger window; size is given as input, inflate() will return with the error code; Z_DATA_ERROR instead of trying to allocate a larger window. windowBits can also be zero to request that inflate use the window size in; the zlib header of the compressed stream. windowBits can also be -8..-15 for raw inflate. In this case, -windowBits; determines the window size. inflate() will then process raw deflate data,; not looking for a zlib or gzip header, not generating a check value, and not; looking for any check values for comparison at the end of the stream. This; is for use with other formats that use the deflate comp",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1014,Performance,perform,perform,1014,"/*; Initializes the decompression dictionary from the given uncompressed byte; sequence. This function must be called immediately after a call of inflate,; if that call returned Z_NEED_DICT. The dictionary chosen by the compressor; can be determined from the adler32 value returned by that call of inflate.; The compressor and decompressor must use exactly the same dictionary (see; deflateSetDictionary). For raw inflate, this function can be called at any; time to set the dictionary. If the provided dictionary is smaller than the; window and there is already data in the window, then the provided dictionary; will amend what's there. The application must insure that the dictionary; that was used for compression is provided. inflateSetDictionary returns Z_OK if success, Z_STREAM_ERROR if a; parameter is invalid (e.g. dictionary being Z_NULL) or the stream state is; inconsistent, Z_DATA_ERROR if the given dictionary doesn't match the; expected one (incorrect adler32 value). inflateSetDictionary does not; perform any decompression: this will be done by subsequent calls of; inflate().; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:158,Availability,avail,available,158,"/*; Skips invalid compressed data until a possible full flush point (see above; for the description of deflate with Z_FULL_FLUSH) can be found, or until all; available input is skipped. No output is provided. inflateSync searches for a 00 00 FF FF pattern in the compressed data.; All full flush points have this pattern, but not all occurrences of this; pattern are full flush points. inflateSync returns Z_OK if a possible full flush point has been found,; Z_BUF_ERROR if no more input was provided, Z_DATA_ERROR if no flush point; has been found, or Z_STREAM_ERROR if the stream structure was inconsistent.; In the success case, the application may save the current current value of; total_in which indicates where valid compressed data was found. In the; error case, the application may repeatedly call inflateSync, providing more; input each time, until success or end of the input data.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:759,Availability,error,error,759,"/*; Skips invalid compressed data until a possible full flush point (see above; for the description of deflate with Z_FULL_FLUSH) can be found, or until all; available input is skipped. No output is provided. inflateSync searches for a 00 00 FF FF pattern in the compressed data.; All full flush points have this pattern, but not all occurrences of this; pattern are full flush points. inflateSync returns Z_OK if a possible full flush point has been found,; Z_BUF_ERROR if no more input was provided, Z_DATA_ERROR if no flush point; has been found, or Z_STREAM_ERROR if the stream structure was inconsistent.; In the success case, the application may save the current current value of; total_in which indicates where valid compressed data was found. In the; error case, the application may repeatedly call inflateSync, providing more; input each time, until success or end of the input data.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:115,Security,access,accessing,115,"/*; Sets the destination stream as a complete copy of the source stream. This function can be useful when randomly accessing a large stream. The; first pass through the stream can periodically record the inflate state,; allowing restarting inflate at those points when randomly accessing the; stream. inflateCopy returns Z_OK if success, Z_MEM_ERROR if there was not; enough memory, Z_STREAM_ERROR if the source stream state was inconsistent; (such as zalloc being Z_NULL). msg is left unchanged in both source and; destination.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:278,Security,access,accessing,278,"/*; Sets the destination stream as a complete copy of the source stream. This function can be useful when randomly accessing a large stream. The; first pass through the stream can periodically record the inflate state,; allowing restarting inflate at those points when randomly accessing the; stream. inflateCopy returns Z_OK if success, Z_MEM_ERROR if there was not; enough memory, Z_STREAM_ERROR if the source stream state was inconsistent; (such as zalloc being Z_NULL). msg is left unchanged in both source and; destination.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:81,Integrability,wrap,wrap,81,"/*; This function is the same as inflateReset, but it also permits changing; the wrap and window size requests. The windowBits parameter is interpreted; the same as it is for inflateInit2. inflateReset2 returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent (such as zalloc or state being Z_NULL), or if; the windowBits parameter is invalid.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:657,Usability,clear,clear,657,"/*; This function inserts bits in the inflate input stream. The intent is; that this function is used to start inflating at a bit position in the; middle of a byte. The provided bits will be used before any bytes are used; from next_in. This function should only be used with raw inflate, and; should be used before the first inflate() call after inflateInit2() or; inflateReset(). bits must be less than or equal to 16, and that many of the; least significant bits of value will be inserted in the input. If bits is negative, then the input stream bit buffer is emptied. Then; inflatePrime() can be called again to put bits in the buffer. This is used; to clear out bits leftover after feeding inflate a block description prior; to feeding inflate codes. inflatePrime returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:167,Availability,down,down,167,"/*; This function returns two values, one in the lower 16 bits of the return; value, and the other in the remaining upper bits, obtained by shifting the; return value down 16 bits. If the upper value is -1 and the lower value is; zero, then inflate() is currently decoding information outside of a block.; If the upper value is -1 and the lower value is non-zero, then inflate is in; the middle of a stored block, with the lower value equaling the number of; bytes from the input remaining to copy. If the upper value is not -1, then; it is the number of bits back from the current bit position in the input of; the code (literal or length/distance pair) currently being processed. In; that case the lower value is the number of bytes already emitted for that; code. A code is being processed if inflate is waiting for more input to complete; decoding of the code, or if it has completed decoding but is waiting for; more output space to write the literal or match data. inflateMark() is used to mark locations in the input data for random; access, which may be at bit positions, and to note those cases where the; output of a code may span boundaries of random access blocks. The current; location in the input stream can be determined from avail_in and data_type; as noted in the description for the Z_BLOCK flush parameter for inflate. inflateMark returns the value noted above or -1 << 16 if the provided; source stream state was inconsistent.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1041,Security,access,access,1041,"/*; This function returns two values, one in the lower 16 bits of the return; value, and the other in the remaining upper bits, obtained by shifting the; return value down 16 bits. If the upper value is -1 and the lower value is; zero, then inflate() is currently decoding information outside of a block.; If the upper value is -1 and the lower value is non-zero, then inflate is in; the middle of a stored block, with the lower value equaling the number of; bytes from the input remaining to copy. If the upper value is not -1, then; it is the number of bits back from the current bit position in the input of; the code (literal or length/distance pair) currently being processed. In; that case the lower value is the number of bytes already emitted for that; code. A code is being processed if inflate is waiting for more input to complete; decoding of the code, or if it has completed decoding but is waiting for; more output space to write the literal or match data. inflateMark() is used to mark locations in the input data for random; access, which may be at bit positions, and to note those cases where the; output of a code may span boundaries of random access blocks. The current; location in the input stream can be determined from avail_in and data_type; as noted in the description for the Z_BLOCK flush parameter for inflate. inflateMark returns the value noted above or -1 << 16 if the provided; source stream state was inconsistent.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1162,Security,access,access,1162,"/*; This function returns two values, one in the lower 16 bits of the return; value, and the other in the remaining upper bits, obtained by shifting the; return value down 16 bits. If the upper value is -1 and the lower value is; zero, then inflate() is currently decoding information outside of a block.; If the upper value is -1 and the lower value is non-zero, then inflate is in; the middle of a stored block, with the lower value equaling the number of; bytes from the input remaining to copy. If the upper value is not -1, then; it is the number of bits back from the current bit position in the input of; the code (literal or length/distance pair) currently being processed. In; that case the lower value is the number of bytes already emitted for that; code. A code is being processed if inflate is waiting for more input to complete; decoding of the code, or if it has completed decoding but is waiting for; more output space to write the literal or match data. inflateMark() is used to mark locations in the input data for random; access, which may be at bit positions, and to note those cases where the; output of a code may span boundaries of random access blocks. The current; location in the input stream can be determined from avail_in and data_type; as noted in the description for the Z_BLOCK flush parameter for inflate. inflateMark returns the value noted above or -1 << 16 if the provided; source stream state was inconsistent.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1685,Energy Efficiency,allocate,allocated,1685,"er; contents. hcrc is set to true if there is a header CRC. (The header CRC; was valid if done is set to one.) If extra is not Z_NULL, then extra_max; contains the maximum number of bytes to write to extra. Once done is true,; extra_len contains the actual extra field length, and extra contains the; extra field, or that field truncated if extra_max is less than extra_len.; If name is not Z_NULL, then up to name_max characters are written there,; terminated with a zero unless the length is greater than name_max. If; comment is not Z_NULL, then up to comm_max characters are written there,; terminated with a zero unless the length is greater than comm_max. When any; of extra, name, or comment are not Z_NULL and the respective field is not; present in the header, then that field is set to Z_NULL to signal its; absence. This allows the use of deflateSetHeader() with the returned; structure to duplicate the header. However if those fields are set to; allocated memory, then the application will need to save those pointers; elsewhere so that they can be eventually freed. If inflateGetHeader is not used, then the header information is simply; discarded. The header is always checked for validity, including the header; CRC if present. inflateReset() will reset the process to discard the header; information. The application would need to call inflateGetHeader() again to; retrieve the header from the next gzip stream. inflateGetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateBackInit OF((z_streamp strm, int windowBits,; unsigned char FAR *window));. Initialize the internal stream state for decompression using inflateBack(); calls. The fields zalloc, zfree and opaque in strm must be initialized; before the call. If zalloc and zfree are Z_NULL, then the default library-; derived memory allocation routines are used. windowBits is the base two; logarithm of the window size, in the range 8..15. window ",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3181,Energy Efficiency,allocate,allocated,3181,"aracters are written there,; terminated with a zero unless the length is greater than comm_max. When any; of extra, name, or comment are not Z_NULL and the respective field is not; present in the header, then that field is set to Z_NULL to signal its; absence. This allows the use of deflateSetHeader() with the returned; structure to duplicate the header. However if those fields are set to; allocated memory, then the application will need to save those pointers; elsewhere so that they can be eventually freed. If inflateGetHeader is not used, then the header information is simply; discarded. The header is always checked for validity, including the header; CRC if present. inflateReset() will reset the process to discard the header; information. The application would need to call inflateGetHeader() again to; retrieve the header from the next gzip stream. inflateGetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateBackInit OF((z_streamp strm, int windowBits,; unsigned char FAR *window));. Initialize the internal stream state for decompression using inflateBack(); calls. The fields zalloc, zfree and opaque in strm must be initialized; before the call. If zalloc and zfree are Z_NULL, then the default library-; derived memory allocation routines are used. windowBits is the base two; logarithm of the window size, in the range 8..15. window is a caller; supplied buffer of that size. Except for special applications where it is; assured that deflate was used with small window sizes, windowBits must be 15; and a 32K byte window must be supplied to be able to decompress general; deflate streams. See inflateBack() for the usage of these routines. inflateBackInit will return Z_OK on success, Z_STREAM_ERROR if any of; the parameters are invalid, Z_MEM_ERROR if the internal state could not be; allocated, or Z_VERSION_ERROR if the version of the library does not match; the version of the header file.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:2623,Integrability,rout,routines,2623,"aracters are written there,; terminated with a zero unless the length is greater than comm_max. When any; of extra, name, or comment are not Z_NULL and the respective field is not; present in the header, then that field is set to Z_NULL to signal its; absence. This allows the use of deflateSetHeader() with the returned; structure to duplicate the header. However if those fields are set to; allocated memory, then the application will need to save those pointers; elsewhere so that they can be eventually freed. If inflateGetHeader is not used, then the header information is simply; discarded. The header is always checked for validity, including the header; CRC if present. inflateReset() will reset the process to discard the header; information. The application would need to call inflateGetHeader() again to; retrieve the header from the next gzip stream. inflateGetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateBackInit OF((z_streamp strm, int windowBits,; unsigned char FAR *window));. Initialize the internal stream state for decompression using inflateBack(); calls. The fields zalloc, zfree and opaque in strm must be initialized; before the call. If zalloc and zfree are Z_NULL, then the default library-; derived memory allocation routines are used. windowBits is the base two; logarithm of the window size, in the range 8..15. window is a caller; supplied buffer of that size. Except for special applications where it is; assured that deflate was used with small window sizes, windowBits must be 15; and a 32K byte window must be supplied to be able to decompress general; deflate streams. See inflateBack() for the usage of these routines. inflateBackInit will return Z_OK on success, Z_STREAM_ERROR if any of; the parameters are invalid, Z_MEM_ERROR if the internal state could not be; allocated, or Z_VERSION_ERROR if the version of the library does not match; the version of the header file.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3024,Integrability,rout,routines,3024,"aracters are written there,; terminated with a zero unless the length is greater than comm_max. When any; of extra, name, or comment are not Z_NULL and the respective field is not; present in the header, then that field is set to Z_NULL to signal its; absence. This allows the use of deflateSetHeader() with the returned; structure to duplicate the header. However if those fields are set to; allocated memory, then the application will need to save those pointers; elsewhere so that they can be eventually freed. If inflateGetHeader is not used, then the header information is simply; discarded. The header is always checked for validity, including the header; CRC if present. inflateReset() will reset the process to discard the header; information. The application would need to call inflateGetHeader() again to; retrieve the header from the next gzip stream. inflateGetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateBackInit OF((z_streamp strm, int windowBits,; unsigned char FAR *window));. Initialize the internal stream state for decompression using inflateBack(); calls. The fields zalloc, zfree and opaque in strm must be initialized; before the call. If zalloc and zfree are Z_NULL, then the default library-; derived memory allocation routines are used. windowBits is the base two; logarithm of the window size, in the range 8..15. window is a caller; supplied buffer of that size. Except for special applications where it is; assured that deflate was used with small window sizes, windowBits must be 15; and a 32K byte window must be supplied to be able to decompress general; deflate streams. See inflateBack() for the usage of these routines. inflateBackInit will return Z_OK on success, Z_STREAM_ERROR if any of; the parameters are invalid, Z_MEM_ERROR if the internal state could not be; allocated, or Z_VERSION_ERROR if the version of the library does not match; the version of the header file.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:2670,Testability,log,logarithm,2670,"aracters are written there,; terminated with a zero unless the length is greater than comm_max. When any; of extra, name, or comment are not Z_NULL and the respective field is not; present in the header, then that field is set to Z_NULL to signal its; absence. This allows the use of deflateSetHeader() with the returned; structure to duplicate the header. However if those fields are set to; allocated memory, then the application will need to save those pointers; elsewhere so that they can be eventually freed. If inflateGetHeader is not used, then the header information is simply; discarded. The header is always checked for validity, including the header; CRC if present. inflateReset() will reset the process to discard the header; information. The application would need to call inflateGetHeader() again to; retrieve the header from the next gzip stream. inflateGetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateBackInit OF((z_streamp strm, int windowBits,; unsigned char FAR *window));. Initialize the internal stream state for decompression using inflateBack(); calls. The fields zalloc, zfree and opaque in strm must be initialized; before the call. If zalloc and zfree are Z_NULL, then the default library-; derived memory allocation routines are used. windowBits is the base two; logarithm of the window size, in the range 8..15. window is a caller; supplied buffer of that size. Except for special applications where it is; assured that deflate was used with small window sizes, windowBits must be 15; and a 32K byte window must be supplied to be able to decompress general; deflate streams. See inflateBack() for the usage of these routines. inflateBackInit will return Z_OK on success, Z_STREAM_ERROR if any of; the parameters are invalid, Z_MEM_ERROR if the internal state could not be; allocated, or Z_VERSION_ERROR if the version of the library does not match; the version of the header file.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1870,Usability,simpl,simply,1870,"is not Z_NULL, then extra_max; contains the maximum number of bytes to write to extra. Once done is true,; extra_len contains the actual extra field length, and extra contains the; extra field, or that field truncated if extra_max is less than extra_len.; If name is not Z_NULL, then up to name_max characters are written there,; terminated with a zero unless the length is greater than name_max. If; comment is not Z_NULL, then up to comm_max characters are written there,; terminated with a zero unless the length is greater than comm_max. When any; of extra, name, or comment are not Z_NULL and the respective field is not; present in the header, then that field is set to Z_NULL to signal its; absence. This allows the use of deflateSetHeader() with the returned; structure to duplicate the header. However if those fields are set to; allocated memory, then the application will need to save those pointers; elsewhere so that they can be eventually freed. If inflateGetHeader is not used, then the header information is simply; discarded. The header is always checked for validity, including the header; CRC if present. inflateReset() will reset the process to discard the header; information. The application would need to call inflateGetHeader() again to; retrieve the header from the next gzip stream. inflateGetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateBackInit OF((z_streamp strm, int windowBits,; unsigned char FAR *window));. Initialize the internal stream state for decompression using inflateBack(); calls. The fields zalloc, zfree and opaque in strm must be initialized; before the call. If zalloc and zfree are Z_NULL, then the default library-; derived memory allocation routines are used. windowBits is the base two; logarithm of the window size, in the range 8..15. window is a caller; supplied buffer of that size. Except for special applications where it is; assured that deflate was used wi",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1559,Availability,error,error,1559,"t until inflateBack() returns. inflateBackInit() must be called first to allocate the internal state; and to initialize the state with the user-provided window buffer.; inflateBack() may then be used multiple times to inflate a complete, raw; deflate stream with each call. inflateBackEnd() is then called to free the; allocated state. A raw deflate stream is one with no zlib or gzip header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects only; the raw deflate stream to decompress. This is different from the normal; behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the uncompressed data buf[0..len-1]. out(); should return zero on success, or non-zero on failure. If out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provid",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1827,Availability,avail,available,1827,"p header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects only; the raw deflate stream to decompress. This is different from the normal; behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the uncompressed data buf[0..len-1]. out(); should return zero on success, or non-zero on failure. If out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provided input on the first call by; setting strm->next_in and strm->avail_in. If that input is exhausted, then; in() will be called. Therefore strm->next_in must be initialized before; calling inflateBack(). If strm->next_in is Z_NULL, then in() will be called; immediately for input. If strm->next_in is not Z_NULL, then strm->avail_in; must also be initialized, and then if strm->avail_",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1930,Availability,error,error,1930,"p header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects only; the raw deflate stream to decompress. This is different from the normal; behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the uncompressed data buf[0..len-1]. out(); should return zero on success, or non-zero on failure. If out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provided input on the first call by; setting strm->next_in and strm->avail_in. If that input is exhausted, then; in() will be called. Therefore strm->next_in must be initialized before; calling inflateBack(). If strm->next_in is Z_NULL, then in() will be called; immediately for input. If strm->next_in is not Z_NULL, then strm->avail_in; must also be initialized, and then if strm->avail_",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:2085,Availability,failure,failure,2085,"iler on its own, hence this routine expects only; the raw deflate stream to decompress. This is different from the normal; behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the uncompressed data buf[0..len-1]. out(); should return zero on success, or non-zero on failure. If out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provided input on the first call by; setting strm->next_in and strm->avail_in. If that input is exhausted, then; in() will be called. Therefore strm->next_in must be initialized before; calling inflateBack(). If strm->next_in is Z_NULL, then in() will be called; immediately for input. If strm->next_in is not Z_NULL, then strm->avail_in; must also be initialized, and then if strm->avail_in is not zero, input will; initially be taken from strm->next_in[0 .. strm->avail_in - 1]. The in_desc and out_desc parameters of inflateBack() is passed as the; first parameter of in() and o",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:2156,Availability,error,error,2156," stream to decompress. This is different from the normal; behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the uncompressed data buf[0..len-1]. out(); should return zero on success, or non-zero on failure. If out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provided input on the first call by; setting strm->next_in and strm->avail_in. If that input is exhausted, then; in() will be called. Therefore strm->next_in must be initialized before; calling inflateBack(). If strm->next_in is Z_NULL, then in() will be called; immediately for input. If strm->next_in is not Z_NULL, then strm->avail_in; must also be initialized, and then if strm->avail_in is not zero, input will; initially be taken from strm->next_in[0 .. strm->avail_in - 1]. The in_desc and out_desc parameters of inflateBack() is passed as the; first parameter of in() and out() respectively when they are called. These; descriptors can be ",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3491,Availability,error,error,3491,"out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provided input on the first call by; setting strm->next_in and strm->avail_in. If that input is exhausted, then; in() will be called. Therefore strm->next_in must be initialized before; calling inflateBack(). If strm->next_in is Z_NULL, then in() will be called; immediately for input. If strm->next_in is not Z_NULL, then strm->avail_in; must also be initialized, and then if strm->avail_in is not zero, input will; initially be taken from strm->next_in[0 .. strm->avail_in - 1]. The in_desc and out_desc parameters of inflateBack() is passed as the; first parameter of in() and out() respectively when they are called. These; descriptors can be optionally used to pass any information that the caller-; supplied in() and out() functions need to do their job. On return, inflateBack() will set strm->next_in and strm->avail_in to; pass back any unused input that was provided by the last in() call. The; return values of inflateBack() can be Z_STREAM_END on success, Z_BUF_ERROR; if in() or out() returned an error, Z_DATA_ERROR if there was a format error; in the deflate stream (in which case strm->msg is set to indicate the nature; of the error), or Z_STREAM_ERROR if the stream was not properly initialized.; In the case of Z_BUF_ERROR, an input or output error can be distinguished; using strm->next_in which will be Z_NULL only if in() returned an error. If; strm->next_in is not Z_NULL, then the Z_BUF_ERROR was due to out() returning; non-zero. (in() will always be called before out(), so strm->next_in is; assured to be defined if out() returns non-zero.) Note that inflateBack(); cannot return Z_OK.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3533,Availability,error,error,3533,"out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provided input on the first call by; setting strm->next_in and strm->avail_in. If that input is exhausted, then; in() will be called. Therefore strm->next_in must be initialized before; calling inflateBack(). If strm->next_in is Z_NULL, then in() will be called; immediately for input. If strm->next_in is not Z_NULL, then strm->avail_in; must also be initialized, and then if strm->avail_in is not zero, input will; initially be taken from strm->next_in[0 .. strm->avail_in - 1]. The in_desc and out_desc parameters of inflateBack() is passed as the; first parameter of in() and out() respectively when they are called. These; descriptors can be optionally used to pass any information that the caller-; supplied in() and out() functions need to do their job. On return, inflateBack() will set strm->next_in and strm->avail_in to; pass back any unused input that was provided by the last in() call. The; return values of inflateBack() can be Z_STREAM_END on success, Z_BUF_ERROR; if in() or out() returned an error, Z_DATA_ERROR if there was a format error; in the deflate stream (in which case strm->msg is set to indicate the nature; of the error), or Z_STREAM_ERROR if the stream was not properly initialized.; In the case of Z_BUF_ERROR, an input or output error can be distinguished; using strm->next_in which will be Z_NULL only if in() returned an error. If; strm->next_in is not Z_NULL, then the Z_BUF_ERROR was due to out() returning; non-zero. (in() will always be called before out(), so strm->next_in is; assured to be defined if out() returns non-zero.) Note that inflateBack(); cannot return Z_OK.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3625,Availability,error,error,3625,"out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provided input on the first call by; setting strm->next_in and strm->avail_in. If that input is exhausted, then; in() will be called. Therefore strm->next_in must be initialized before; calling inflateBack(). If strm->next_in is Z_NULL, then in() will be called; immediately for input. If strm->next_in is not Z_NULL, then strm->avail_in; must also be initialized, and then if strm->avail_in is not zero, input will; initially be taken from strm->next_in[0 .. strm->avail_in - 1]. The in_desc and out_desc parameters of inflateBack() is passed as the; first parameter of in() and out() respectively when they are called. These; descriptors can be optionally used to pass any information that the caller-; supplied in() and out() functions need to do their job. On return, inflateBack() will set strm->next_in and strm->avail_in to; pass back any unused input that was provided by the last in() call. The; return values of inflateBack() can be Z_STREAM_END on success, Z_BUF_ERROR; if in() or out() returned an error, Z_DATA_ERROR if there was a format error; in the deflate stream (in which case strm->msg is set to indicate the nature; of the error), or Z_STREAM_ERROR if the stream was not properly initialized.; In the case of Z_BUF_ERROR, an input or output error can be distinguished; using strm->next_in which will be Z_NULL only if in() returned an error. If; strm->next_in is not Z_NULL, then the Z_BUF_ERROR was due to out() returning; non-zero. (in() will always be called before out(), so strm->next_in is; assured to be defined if out() returns non-zero.) Note that inflateBack(); cannot return Z_OK.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3743,Availability,error,error,3743,"out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provided input on the first call by; setting strm->next_in and strm->avail_in. If that input is exhausted, then; in() will be called. Therefore strm->next_in must be initialized before; calling inflateBack(). If strm->next_in is Z_NULL, then in() will be called; immediately for input. If strm->next_in is not Z_NULL, then strm->avail_in; must also be initialized, and then if strm->avail_in is not zero, input will; initially be taken from strm->next_in[0 .. strm->avail_in - 1]. The in_desc and out_desc parameters of inflateBack() is passed as the; first parameter of in() and out() respectively when they are called. These; descriptors can be optionally used to pass any information that the caller-; supplied in() and out() functions need to do their job. On return, inflateBack() will set strm->next_in and strm->avail_in to; pass back any unused input that was provided by the last in() call. The; return values of inflateBack() can be Z_STREAM_END on success, Z_BUF_ERROR; if in() or out() returned an error, Z_DATA_ERROR if there was a format error; in the deflate stream (in which case strm->msg is set to indicate the nature; of the error), or Z_STREAM_ERROR if the stream was not properly initialized.; In the case of Z_BUF_ERROR, an input or output error can be distinguished; using strm->next_in which will be Z_NULL only if in() returned an error. If; strm->next_in is not Z_NULL, then the Z_BUF_ERROR was due to out() returning; non-zero. (in() will always be called before out(), so strm->next_in is; assured to be defined if out() returns non-zero.) Note that inflateBack(); cannot return Z_OK.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3837,Availability,error,error,3837,"out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provided input on the first call by; setting strm->next_in and strm->avail_in. If that input is exhausted, then; in() will be called. Therefore strm->next_in must be initialized before; calling inflateBack(). If strm->next_in is Z_NULL, then in() will be called; immediately for input. If strm->next_in is not Z_NULL, then strm->avail_in; must also be initialized, and then if strm->avail_in is not zero, input will; initially be taken from strm->next_in[0 .. strm->avail_in - 1]. The in_desc and out_desc parameters of inflateBack() is passed as the; first parameter of in() and out() respectively when they are called. These; descriptors can be optionally used to pass any information that the caller-; supplied in() and out() functions need to do their job. On return, inflateBack() will set strm->next_in and strm->avail_in to; pass back any unused input that was provided by the last in() call. The; return values of inflateBack() can be Z_STREAM_END on success, Z_BUF_ERROR; if in() or out() returned an error, Z_DATA_ERROR if there was a format error; in the deflate stream (in which case strm->msg is set to indicate the nature; of the error), or Z_STREAM_ERROR if the stream was not properly initialized.; In the case of Z_BUF_ERROR, an input or output error can be distinguished; using strm->next_in which will be Z_NULL only if in() returned an error. If; strm->next_in is not Z_NULL, then the Z_BUF_ERROR was due to out() returning; non-zero. (in() will always be called before out(), so strm->next_in is; assured to be defined if out() returns non-zero.) Note that inflateBack(); cannot return Z_OK.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:132,Energy Efficiency,efficient,efficient,132,"/*; inflateBack() does a raw inflate with a single call using a call-back; interface for input and output. This is potentially more efficient than; inflate() for file i/o applications, in that it avoids copying between the; output and the sliding window by simply making the window itself the output; buffer. inflate() can be faster on modern CPUs when used with large; buffers. inflateBack() trusts the application to not change the output; buffer passed by the output function, at least until inflateBack() returns. inflateBackInit() must be called first to allocate the internal state; and to initialize the state with the user-provided window buffer.; inflateBack() may then be used multiple times to inflate a complete, raw; deflate stream with each call. inflateBackEnd() is then called to free the; allocated state. A raw deflate stream is one with no zlib or gzip header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects only; the raw deflate stream to decompress. This is different from the normal; behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the un",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:560,Energy Efficiency,allocate,allocate,560,"/*; inflateBack() does a raw inflate with a single call using a call-back; interface for input and output. This is potentially more efficient than; inflate() for file i/o applications, in that it avoids copying between the; output and the sliding window by simply making the window itself the output; buffer. inflate() can be faster on modern CPUs when used with large; buffers. inflateBack() trusts the application to not change the output; buffer passed by the output function, at least until inflateBack() returns. inflateBackInit() must be called first to allocate the internal state; and to initialize the state with the user-provided window buffer.; inflateBack() may then be used multiple times to inflate a complete, raw; deflate stream with each call. inflateBackEnd() is then called to free the; allocated state. A raw deflate stream is one with no zlib or gzip header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects only; the raw deflate stream to decompress. This is different from the normal; behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the un",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:806,Energy Efficiency,allocate,allocated,806,"/*; inflateBack() does a raw inflate with a single call using a call-back; interface for input and output. This is potentially more efficient than; inflate() for file i/o applications, in that it avoids copying between the; output and the sliding window by simply making the window itself the output; buffer. inflate() can be faster on modern CPUs when used with large; buffers. inflateBack() trusts the application to not change the output; buffer passed by the output function, at least until inflateBack() returns. inflateBackInit() must be called first to allocate the internal state; and to initialize the state with the user-provided window buffer.; inflateBack() may then be used multiple times to inflate a complete, raw; deflate stream with each call. inflateBackEnd() is then called to free the; allocated state. A raw deflate stream is one with no zlib or gzip header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects only; the raw deflate stream to decompress. This is different from the normal; behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the un",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:75,Integrability,interface,interface,75,"/*; inflateBack() does a raw inflate with a single call using a call-back; interface for input and output. This is potentially more efficient than; inflate() for file i/o applications, in that it avoids copying between the; output and the sliding window by simply making the window itself the output; buffer. inflate() can be faster on modern CPUs when used with large; buffers. inflateBack() trusts the application to not change the output; buffer passed by the output function, at least until inflateBack() returns. inflateBackInit() must be called first to allocate the internal state; and to initialize the state with the user-provided window buffer.; inflateBack() may then be used multiple times to inflate a complete, raw; deflate stream with each call. inflateBackEnd() is then called to free the; allocated state. A raw deflate stream is one with no zlib or gzip header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects only; the raw deflate stream to decompress. This is different from the normal; behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the un",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:897,Integrability,rout,routine,897,"/*; inflateBack() does a raw inflate with a single call using a call-back; interface for input and output. This is potentially more efficient than; inflate() for file i/o applications, in that it avoids copying between the; output and the sliding window by simply making the window itself the output; buffer. inflate() can be faster on modern CPUs when used with large; buffers. inflateBack() trusts the application to not change the output; buffer passed by the output function, at least until inflateBack() returns. inflateBackInit() must be called first to allocate the internal state; and to initialize the state with the user-provided window buffer.; inflateBack() may then be used multiple times to inflate a complete, raw; deflate stream with each call. inflateBackEnd() is then called to free the; allocated state. A raw deflate stream is one with no zlib or gzip header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects only; the raw deflate stream to decompress. This is different from the normal; behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the un",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1090,Integrability,rout,routine,1090,"terface for input and output. This is potentially more efficient than; inflate() for file i/o applications, in that it avoids copying between the; output and the sliding window by simply making the window itself the output; buffer. inflate() can be faster on modern CPUs when used with large; buffers. inflateBack() trusts the application to not change the output; buffer passed by the output function, at least until inflateBack() returns. inflateBackInit() must be called first to allocate the internal state; and to initialize the state with the user-provided window buffer.; inflateBack() may then be used multiple times to inflate a complete, raw; deflate stream with each call. inflateBackEnd() is then called to free the; allocated state. A raw deflate stream is one with no zlib or gzip header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects only; the raw deflate stream to decompress. This is different from the normal; behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the uncompressed data buf[0..len-1]. out(); should return zero on success, or non-",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1437,Integrability,rout,routines,1437,"t until inflateBack() returns. inflateBackInit() must be called first to allocate the internal state; and to initialize the state with the user-provided window buffer.; inflateBack() may then be used multiple times to inflate a complete, raw; deflate stream with each call. inflateBackEnd() is then called to free the; allocated state. A raw deflate stream is one with no zlib or gzip header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects only; the raw deflate stream to decompress. This is different from the normal; behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the uncompressed data buf[0..len-1]. out(); should return zero on success, or non-zero on failure. If out() returns; non-zero, inflateBack() will return with an error. Neither in() nor out(); are permitted to change the contents of the window provided to; inflateBackInit(), which is also the buffer that out() uses to write from.; The length written by out() will be at most the window size. Any non-zero; amount of input may be provided by in(). For convenience, inflateBack() can be provid",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:196,Safety,avoid,avoids,196,"/*; inflateBack() does a raw inflate with a single call using a call-back; interface for input and output. This is potentially more efficient than; inflate() for file i/o applications, in that it avoids copying between the; output and the sliding window by simply making the window itself the output; buffer. inflate() can be faster on modern CPUs when used with large; buffers. inflateBack() trusts the application to not change the output; buffer passed by the output function, at least until inflateBack() returns. inflateBackInit() must be called first to allocate the internal state; and to initialize the state with the user-provided window buffer.; inflateBack() may then be used multiple times to inflate a complete, raw; deflate stream with each call. inflateBackEnd() is then called to free the; allocated state. A raw deflate stream is one with no zlib or gzip header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects only; the raw deflate stream to decompress. This is different from the normal; behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the un",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:257,Usability,simpl,simply,257,"/*; inflateBack() does a raw inflate with a single call using a call-back; interface for input and output. This is potentially more efficient than; inflate() for file i/o applications, in that it avoids copying between the; output and the sliding window by simply making the window itself the output; buffer. inflate() can be faster on modern CPUs when used with large; buffers. inflateBack() trusts the application to not change the output; buffer passed by the output function, at least until inflateBack() returns. inflateBackInit() must be called first to allocate the internal state; and to initialize the state with the user-provided window buffer.; inflateBack() may then be used multiple times to inflate a complete, raw; deflate stream with each call. inflateBackEnd() is then called to free the; allocated state. A raw deflate stream is one with no zlib or gzip header or trailer.; This routine would normally be used in a utility that reads zip or gzip; files and writes out uncompressed files. The utility would decode the; header and process the trailer on its own, hence this routine expects only; the raw deflate stream to decompress. This is different from the normal; behavior of inflate(), which expects either a zlib or gzip header and; trailer around the deflate stream. inflateBack() uses two subroutines supplied by the caller that are then; called by inflateBack() for input and output. inflateBack() calls those; routines until it reads a complete deflate stream and writes out all of the; uncompressed data, or until it encounters an error. The function's; parameters and return types are defined above in the in_func and out_func; typedefs. inflateBack() will call in(in_desc, &buf) which should return the; number of bytes of provided input, and a pointer to that input in buf. If; there is no input available, in() must return zero--buf is ignored in that; case--and inflateBack() will return a buffer error. inflateBack() will call; out(out_desc, buf, len) to write the un",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:15,Energy Efficiency,allocate,allocated,15,"/*; All memory allocated by inflateBackInit() is freed. inflateBackEnd() returns Z_OK on success, or Z_STREAM_ERROR if the stream; state was inconsistent.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:444,Safety,safe,safe,444,"/* Return flags indicating compile-time options. Type sizes, two bits each, 00 = 16 bits, 01 = 32, 10 = 64, 11 = other:; 1.0: size of uInt; 3.2: size of uLong; 5.4: size of voidpf (pointer); 7.6: size of z_off_t. Compiler, assembler, and debug options:; 8: DEBUG; 9: ASMV or ASMINF -- use ASM code; 10: ZLIB_WINAPI -- exported functions use the WINAPI calling convention; 11: 0 (reserved). One-time table building (smaller code, but not thread-safe if true):; 12: BUILDFIXED -- build static block decoding tables when needed; 13: DYNAMIC_CRC_TABLE -- build CRC calculation tables when needed; 14,15: 0 (reserved). Library content (indicates missing functionality):; 16: NO_GZCOMPRESS -- gz* functions cannot compress (to avoid linking; deflate code when not needed); 17: NO_GZIP -- deflate can't write gzip streams, and inflate can't detect; and decode gzip streams (to avoid linking crc code); 18-19: 0 (reserved). Operation variations (changes in library functionality):; 20: PKZIP_BUG_WORKAROUND -- slightly more permissive inflate; 21: FASTEST -- deflate algorithm with only one, lowest compression level; 22,23: 0 (reserved). The sprintf variant used by gzprintf (zero is best):; 24: 0 = vs*, 1 = s* -- 1 means limited to 20 arguments after the format; 25: 0 = *nprintf, 1 = *printf -- 1 means gzprintf() not secure!; 26: 0 = returns value, 1 = void -- 1 means inferred string length returned. Remainder:; 27-31: 0 (reserved); */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:721,Safety,avoid,avoid,721,"/* Return flags indicating compile-time options. Type sizes, two bits each, 00 = 16 bits, 01 = 32, 10 = 64, 11 = other:; 1.0: size of uInt; 3.2: size of uLong; 5.4: size of voidpf (pointer); 7.6: size of z_off_t. Compiler, assembler, and debug options:; 8: DEBUG; 9: ASMV or ASMINF -- use ASM code; 10: ZLIB_WINAPI -- exported functions use the WINAPI calling convention; 11: 0 (reserved). One-time table building (smaller code, but not thread-safe if true):; 12: BUILDFIXED -- build static block decoding tables when needed; 13: DYNAMIC_CRC_TABLE -- build CRC calculation tables when needed; 14,15: 0 (reserved). Library content (indicates missing functionality):; 16: NO_GZCOMPRESS -- gz* functions cannot compress (to avoid linking; deflate code when not needed); 17: NO_GZIP -- deflate can't write gzip streams, and inflate can't detect; and decode gzip streams (to avoid linking crc code); 18-19: 0 (reserved). Operation variations (changes in library functionality):; 20: PKZIP_BUG_WORKAROUND -- slightly more permissive inflate; 21: FASTEST -- deflate algorithm with only one, lowest compression level; 22,23: 0 (reserved). The sprintf variant used by gzprintf (zero is best):; 24: 0 = vs*, 1 = s* -- 1 means limited to 20 arguments after the format; 25: 0 = *nprintf, 1 = *printf -- 1 means gzprintf() not secure!; 26: 0 = returns value, 1 = void -- 1 means inferred string length returned. Remainder:; 27-31: 0 (reserved); */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:834,Safety,detect,detect,834,"/* Return flags indicating compile-time options. Type sizes, two bits each, 00 = 16 bits, 01 = 32, 10 = 64, 11 = other:; 1.0: size of uInt; 3.2: size of uLong; 5.4: size of voidpf (pointer); 7.6: size of z_off_t. Compiler, assembler, and debug options:; 8: DEBUG; 9: ASMV or ASMINF -- use ASM code; 10: ZLIB_WINAPI -- exported functions use the WINAPI calling convention; 11: 0 (reserved). One-time table building (smaller code, but not thread-safe if true):; 12: BUILDFIXED -- build static block decoding tables when needed; 13: DYNAMIC_CRC_TABLE -- build CRC calculation tables when needed; 14,15: 0 (reserved). Library content (indicates missing functionality):; 16: NO_GZCOMPRESS -- gz* functions cannot compress (to avoid linking; deflate code when not needed); 17: NO_GZIP -- deflate can't write gzip streams, and inflate can't detect; and decode gzip streams (to avoid linking crc code); 18-19: 0 (reserved). Operation variations (changes in library functionality):; 20: PKZIP_BUG_WORKAROUND -- slightly more permissive inflate; 21: FASTEST -- deflate algorithm with only one, lowest compression level; 22,23: 0 (reserved). The sprintf variant used by gzprintf (zero is best):; 24: 0 = vs*, 1 = s* -- 1 means limited to 20 arguments after the format; 25: 0 = *nprintf, 1 = *printf -- 1 means gzprintf() not secure!; 26: 0 = returns value, 1 = void -- 1 means inferred string length returned. Remainder:; 27-31: 0 (reserved); */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:870,Safety,avoid,avoid,870,"/* Return flags indicating compile-time options. Type sizes, two bits each, 00 = 16 bits, 01 = 32, 10 = 64, 11 = other:; 1.0: size of uInt; 3.2: size of uLong; 5.4: size of voidpf (pointer); 7.6: size of z_off_t. Compiler, assembler, and debug options:; 8: DEBUG; 9: ASMV or ASMINF -- use ASM code; 10: ZLIB_WINAPI -- exported functions use the WINAPI calling convention; 11: 0 (reserved). One-time table building (smaller code, but not thread-safe if true):; 12: BUILDFIXED -- build static block decoding tables when needed; 13: DYNAMIC_CRC_TABLE -- build CRC calculation tables when needed; 14,15: 0 (reserved). Library content (indicates missing functionality):; 16: NO_GZCOMPRESS -- gz* functions cannot compress (to avoid linking; deflate code when not needed); 17: NO_GZIP -- deflate can't write gzip streams, and inflate can't detect; and decode gzip streams (to avoid linking crc code); 18-19: 0 (reserved). Operation variations (changes in library functionality):; 20: PKZIP_BUG_WORKAROUND -- slightly more permissive inflate; 21: FASTEST -- deflate algorithm with only one, lowest compression level; 22,23: 0 (reserved). The sprintf variant used by gzprintf (zero is best):; 24: 0 = vs*, 1 = s* -- 1 means limited to 20 arguments after the format; 25: 0 = *nprintf, 1 = *printf -- 1 means gzprintf() not secure!; 26: 0 = returns value, 1 = void -- 1 means inferred string length returned. Remainder:; 27-31: 0 (reserved); */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1314,Security,secur,secure,1314,"/* Return flags indicating compile-time options. Type sizes, two bits each, 00 = 16 bits, 01 = 32, 10 = 64, 11 = other:; 1.0: size of uInt; 3.2: size of uLong; 5.4: size of voidpf (pointer); 7.6: size of z_off_t. Compiler, assembler, and debug options:; 8: DEBUG; 9: ASMV or ASMINF -- use ASM code; 10: ZLIB_WINAPI -- exported functions use the WINAPI calling convention; 11: 0 (reserved). One-time table building (smaller code, but not thread-safe if true):; 12: BUILDFIXED -- build static block decoding tables when needed; 13: DYNAMIC_CRC_TABLE -- build CRC calculation tables when needed; 14,15: 0 (reserved). Library content (indicates missing functionality):; 16: NO_GZCOMPRESS -- gz* functions cannot compress (to avoid linking; deflate code when not needed); 17: NO_GZIP -- deflate can't write gzip streams, and inflate can't detect; and decode gzip streams (to avoid linking crc code); 18-19: 0 (reserved). Operation variations (changes in library functionality):; 20: PKZIP_BUG_WORKAROUND -- slightly more permissive inflate; 21: FASTEST -- deflate algorithm with only one, lowest compression level; 22,23: 0 (reserved). The sprintf variant used by gzprintf (zero is best):; 24: 0 = vs*, 1 = s* -- 1 means limited to 20 arguments after the format; 25: 0 = *nprintf, 1 = *printf -- 1 means gzprintf() not secure!; 26: 0 = returns value, 1 = void -- 1 means inferred string length returned. Remainder:; 27-31: 0 (reserved); */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:141,Integrability,interface,interface,141,"/* utility functions */; /*; The following utility functions are implemented on top of the basic; stream-oriented functions. To simplify the interface, some default options; are assumed (compression level and memory usage, standard memory allocation; functions). The source code of these utility functions can be modified if; you need special options.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:128,Usability,simpl,simplify,128,"/* utility functions */; /*; The following utility functions are implemented on top of the basic; stream-oriented functions. To simplify the interface, some default options; are assumed (compression level and memory usage, standard memory allocation; functions). The source code of these utility functions can be modified if; you need special options.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:180,Energy Efficiency,allocate,allocate,180,/*; compressBound() returns an upper bound on the compressed size after; compress() or compress2() on sourceLen bytes. It would be used before a; compress() or compress2() call to allocate the destination buffer.; */,MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:965,Integrability,interface,interface,965,"/*; Decompresses the source buffer into the destination buffer. sourceLen is; the byte length of the source buffer. Upon entry, destLen is the total size; of the destination buffer, which must be large enough to hold the entire; uncompressed data. (The size of the uncompressed data must have been saved; previously by the compressor and transmitted to the decompressor by some; mechanism outside the scope of this compression library.) Upon exit, destLen; is the actual size of the uncompressed buffer. uncompress returns Z_OK if success, Z_MEM_ERROR if there was not; enough memory, Z_BUF_ERROR if there was not enough room in the output; buffer, or Z_DATA_ERROR if the input data was corrupted or incomplete. In; the case where there is not enough room, uncompress() will fill the output; buffer with the uncompressed data up to that point.; */; /* gzip file access functions */; /*; This library supports reading and writing files in gzip (.gz) format with; an interface similar to that of stdio, using the functions that start with; ""gz"". The gzip format is different from the zlib format. gzip is a gzip; wrapper, documented in RFC 1952, wrapped around a deflate stream.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1111,Integrability,wrap,wrapper,1111,"/*; Decompresses the source buffer into the destination buffer. sourceLen is; the byte length of the source buffer. Upon entry, destLen is the total size; of the destination buffer, which must be large enough to hold the entire; uncompressed data. (The size of the uncompressed data must have been saved; previously by the compressor and transmitted to the decompressor by some; mechanism outside the scope of this compression library.) Upon exit, destLen; is the actual size of the uncompressed buffer. uncompress returns Z_OK if success, Z_MEM_ERROR if there was not; enough memory, Z_BUF_ERROR if there was not enough room in the output; buffer, or Z_DATA_ERROR if the input data was corrupted or incomplete. In; the case where there is not enough room, uncompress() will fill the output; buffer with the uncompressed data up to that point.; */; /* gzip file access functions */; /*; This library supports reading and writing files in gzip (.gz) format with; an interface similar to that of stdio, using the functions that start with; ""gz"". The gzip format is different from the zlib format. gzip is a gzip; wrapper, documented in RFC 1952, wrapped around a deflate stream.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1144,Integrability,wrap,wrapped,1144,"/*; Decompresses the source buffer into the destination buffer. sourceLen is; the byte length of the source buffer. Upon entry, destLen is the total size; of the destination buffer, which must be large enough to hold the entire; uncompressed data. (The size of the uncompressed data must have been saved; previously by the compressor and transmitted to the decompressor by some; mechanism outside the scope of this compression library.) Upon exit, destLen; is the actual size of the uncompressed buffer. uncompress returns Z_OK if success, Z_MEM_ERROR if there was not; enough memory, Z_BUF_ERROR if there was not enough room in the output; buffer, or Z_DATA_ERROR if the input data was corrupted or incomplete. In; the case where there is not enough room, uncompress() will fill the output; buffer with the uncompressed data up to that point.; */; /* gzip file access functions */; /*; This library supports reading and writing files in gzip (.gz) format with; an interface similar to that of stdio, using the functions that start with; ""gz"". The gzip format is different from the zlib format. gzip is a gzip; wrapper, documented in RFC 1952, wrapped around a deflate stream.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:862,Security,access,access,862,"/*; Decompresses the source buffer into the destination buffer. sourceLen is; the byte length of the source buffer. Upon entry, destLen is the total size; of the destination buffer, which must be large enough to hold the entire; uncompressed data. (The size of the uncompressed data must have been saved; previously by the compressor and transmitted to the decompressor by some; mechanism outside the scope of this compression library.) Upon exit, destLen; is the actual size of the uncompressed buffer. uncompress returns Z_OK if success, Z_MEM_ERROR if there was not; enough memory, Z_BUF_ERROR if there was not enough room in the output; buffer, or Z_DATA_ERROR if the input data was corrupted or incomplete. In; the case where there is not enough room, uncompress() will fill the output; buffer with the uncompressed data up to that point.; */; /* gzip file access functions */; /*; This library supports reading and writing files in gzip (.gz) format with; an interface similar to that of stdio, using the functions that start with; ""gz"". The gzip format is different from the zlib format. gzip is a gzip; wrapper, documented in RFC 1952, wrapped around a deflate stream.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:780,Availability,error,error,780,"/* semi-opaque gzip file descriptor */; /*; ZEXTERN gzFile ZEXPORT gzopen OF((const char *path, const char *mode));. Opens a gzip (.gz) file for reading or writing. The mode parameter is as; in fopen (""rb"" or ""wb"") but can also include a compression level (""wb9"") or; a strategy: 'f' for filtered data as in ""wb6f"", 'h' for Huffman-only; compression as in ""wb1h"", 'R' for run-length encoding as in ""wb1R"", or 'F'; for fixed code compression as in ""wb9F"". (See the description of; deflateInit2 for more information about the strategy parameter.) 'T' will; request transparent writing or appending with no compression and not using; the gzip format. ""a"" can be used instead of ""w"" to request that the gzip stream that will; be written be appended to the file. ""+"" will result in an error, since; reading and writing to the same gzip file is not supported. The addition of; ""x"" when writing will create the file exclusively, which fails if the file; already exists. On systems that support it, the addition of ""e"" when; reading or writing will set the flag to close the file on an execve() call. These functions, as well as gzip, will read and decode a sequence of gzip; streams in a file. The append function of gzopen() can be used to create; such a file. (Also see gzflush() for another way to do this.) When; appending, gzopen does not test whether the file begins with a gzip stream,; nor does it look for the end of the gzip streams to begin appending. gzopen; will simply append a gzip stream to the existing file. gzopen can be used to read a file which is not in gzip format; in this; case gzread will directly read from the file without decompression. When; reading, this will be detected automatically by looking for the magic two-; byte gzip header. gzopen returns NULL if the file could not be opened, if there was; insufficient memory to allocate the gzFile state, or if an invalid mode was; specified (an 'r', 'w', or 'a' was not provided, or '+' was provided).; errno can be checked to de",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1849,Energy Efficiency,allocate,allocate,1849,"nst char *path, const char *mode));. Opens a gzip (.gz) file for reading or writing. The mode parameter is as; in fopen (""rb"" or ""wb"") but can also include a compression level (""wb9"") or; a strategy: 'f' for filtered data as in ""wb6f"", 'h' for Huffman-only; compression as in ""wb1h"", 'R' for run-length encoding as in ""wb1R"", or 'F'; for fixed code compression as in ""wb9F"". (See the description of; deflateInit2 for more information about the strategy parameter.) 'T' will; request transparent writing or appending with no compression and not using; the gzip format. ""a"" can be used instead of ""w"" to request that the gzip stream that will; be written be appended to the file. ""+"" will result in an error, since; reading and writing to the same gzip file is not supported. The addition of; ""x"" when writing will create the file exclusively, which fails if the file; already exists. On systems that support it, the addition of ""e"" when; reading or writing will set the flag to close the file on an execve() call. These functions, as well as gzip, will read and decode a sequence of gzip; streams in a file. The append function of gzopen() can be used to create; such a file. (Also see gzflush() for another way to do this.) When; appending, gzopen does not test whether the file begins with a gzip stream,; nor does it look for the end of the gzip streams to begin appending. gzopen; will simply append a gzip stream to the existing file. gzopen can be used to read a file which is not in gzip format; in this; case gzread will directly read from the file without decompression. When; reading, this will be detected automatically by looking for the magic two-; byte gzip header. gzopen returns NULL if the file could not be opened, if there was; insufficient memory to allocate the gzFile state, or if an invalid mode was; specified (an 'r', 'w', or 'a' was not provided, or '+' was provided).; errno can be checked to determine if the reason gzopen failed was that the; file could not be opened.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1687,Safety,detect,detected,1687,"nst char *path, const char *mode));. Opens a gzip (.gz) file for reading or writing. The mode parameter is as; in fopen (""rb"" or ""wb"") but can also include a compression level (""wb9"") or; a strategy: 'f' for filtered data as in ""wb6f"", 'h' for Huffman-only; compression as in ""wb1h"", 'R' for run-length encoding as in ""wb1R"", or 'F'; for fixed code compression as in ""wb9F"". (See the description of; deflateInit2 for more information about the strategy parameter.) 'T' will; request transparent writing or appending with no compression and not using; the gzip format. ""a"" can be used instead of ""w"" to request that the gzip stream that will; be written be appended to the file. ""+"" will result in an error, since; reading and writing to the same gzip file is not supported. The addition of; ""x"" when writing will create the file exclusively, which fails if the file; already exists. On systems that support it, the addition of ""e"" when; reading or writing will set the flag to close the file on an execve() call. These functions, as well as gzip, will read and decode a sequence of gzip; streams in a file. The append function of gzopen() can be used to create; such a file. (Also see gzflush() for another way to do this.) When; appending, gzopen does not test whether the file begins with a gzip stream,; nor does it look for the end of the gzip streams to begin appending. gzopen; will simply append a gzip stream to the existing file. gzopen can be used to read a file which is not in gzip format; in this; case gzread will directly read from the file without decompression. When; reading, this will be detected automatically by looking for the magic two-; byte gzip header. gzopen returns NULL if the file could not be opened, if there was; insufficient memory to allocate the gzFile state, or if an invalid mode was; specified (an 'r', 'w', or 'a' was not provided, or '+' was provided).; errno can be checked to determine if the reason gzopen failed was that the; file could not be opened.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1337,Testability,test,test,1337,"nst char *path, const char *mode));. Opens a gzip (.gz) file for reading or writing. The mode parameter is as; in fopen (""rb"" or ""wb"") but can also include a compression level (""wb9"") or; a strategy: 'f' for filtered data as in ""wb6f"", 'h' for Huffman-only; compression as in ""wb1h"", 'R' for run-length encoding as in ""wb1R"", or 'F'; for fixed code compression as in ""wb9F"". (See the description of; deflateInit2 for more information about the strategy parameter.) 'T' will; request transparent writing or appending with no compression and not using; the gzip format. ""a"" can be used instead of ""w"" to request that the gzip stream that will; be written be appended to the file. ""+"" will result in an error, since; reading and writing to the same gzip file is not supported. The addition of; ""x"" when writing will create the file exclusively, which fails if the file; already exists. On systems that support it, the addition of ""e"" when; reading or writing will set the flag to close the file on an execve() call. These functions, as well as gzip, will read and decode a sequence of gzip; streams in a file. The append function of gzopen() can be used to create; such a file. (Also see gzflush() for another way to do this.) When; appending, gzopen does not test whether the file begins with a gzip stream,; nor does it look for the end of the gzip streams to begin appending. gzopen; will simply append a gzip stream to the existing file. gzopen can be used to read a file which is not in gzip format; in this; case gzread will directly read from the file without decompression. When; reading, this will be detected automatically by looking for the magic two-; byte gzip header. gzopen returns NULL if the file could not be opened, if there was; insufficient memory to allocate the gzFile state, or if an invalid mode was; specified (an 'r', 'w', or 'a' was not provided, or '+' was provided).; errno can be checked to determine if the reason gzopen failed was that the; file could not be opened.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1469,Usability,simpl,simply,1469,"nst char *path, const char *mode));. Opens a gzip (.gz) file for reading or writing. The mode parameter is as; in fopen (""rb"" or ""wb"") but can also include a compression level (""wb9"") or; a strategy: 'f' for filtered data as in ""wb6f"", 'h' for Huffman-only; compression as in ""wb1h"", 'R' for run-length encoding as in ""wb1R"", or 'F'; for fixed code compression as in ""wb9F"". (See the description of; deflateInit2 for more information about the strategy parameter.) 'T' will; request transparent writing or appending with no compression and not using; the gzip format. ""a"" can be used instead of ""w"" to request that the gzip stream that will; be written be appended to the file. ""+"" will result in an error, since; reading and writing to the same gzip file is not supported. The addition of; ""x"" when writing will create the file exclusively, which fails if the file; already exists. On systems that support it, the addition of ""e"" when; reading or writing will set the flag to close the file on an execve() call. These functions, as well as gzip, will read and decode a sequence of gzip; streams in a file. The append function of gzopen() can be used to create; such a file. (Also see gzflush() for another way to do this.) When; appending, gzopen does not test whether the file begins with a gzip stream,; nor does it look for the end of the gzip streams to begin appending. gzopen; will simply append a gzip stream to the existing file. gzopen can be used to read a file which is not in gzip format; in this; case gzread will directly read from the file without decompression. When; reading, this will be detected automatically by looking for the magic two-; byte gzip header. gzopen returns NULL if the file could not be opened, if there was; insufficient memory to allocate the gzFile state, or if an invalid mode was; specified (an 'r', 'w', or 'a' was not provided, or '+' was provided).; errno can be checked to determine if the reason gzopen failed was that the; file could not be opened.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:899,Energy Efficiency,allocate,allocate,899,"/*; gzdopen associates a gzFile with the file descriptor fd. File descriptors; are obtained from calls like open, dup, creat, pipe or fileno (if the file; has been previously opened with fopen). The mode parameter is as in gzopen. The next call of gzclose on the returned gzFile will also close the file; descriptor fd, just like fclose(fdopen(fd, mode)) closes the file descriptor; fd. If you want to keep fd open, use fd = dup(fd_keep); gz = gzdopen(fd,; mode);. The duplicated descriptor should be saved to avoid a leak, since; gzdopen does not close fd if it fails. If you are using fileno() to get the; file descriptor from a FILE *, then you will have to use dup() to avoid; double-close()ing the file descriptor. Both gzclose() and fclose() will; close the associated file descriptor, so they need to have different file; descriptors. gzdopen returns NULL if there was insufficient memory to allocate the; gzFile state, if an invalid mode was specified (an 'r', 'w', or 'a' was not; provided, or '+' was provided), or if fd is -1. The file descriptor is not; used until the next gz* read, write, seek, or close operation, so gzdopen; will not detect if fd is invalid (unless fd is -1).; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:510,Safety,avoid,avoid,510,"/*; gzdopen associates a gzFile with the file descriptor fd. File descriptors; are obtained from calls like open, dup, creat, pipe or fileno (if the file; has been previously opened with fopen). The mode parameter is as in gzopen. The next call of gzclose on the returned gzFile will also close the file; descriptor fd, just like fclose(fdopen(fd, mode)) closes the file descriptor; fd. If you want to keep fd open, use fd = dup(fd_keep); gz = gzdopen(fd,; mode);. The duplicated descriptor should be saved to avoid a leak, since; gzdopen does not close fd if it fails. If you are using fileno() to get the; file descriptor from a FILE *, then you will have to use dup() to avoid; double-close()ing the file descriptor. Both gzclose() and fclose() will; close the associated file descriptor, so they need to have different file; descriptors. gzdopen returns NULL if there was insufficient memory to allocate the; gzFile state, if an invalid mode was specified (an 'r', 'w', or 'a' was not; provided, or '+' was provided), or if fd is -1. The file descriptor is not; used until the next gz* read, write, seek, or close operation, so gzdopen; will not detect if fd is invalid (unless fd is -1).; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:674,Safety,avoid,avoid,674,"/*; gzdopen associates a gzFile with the file descriptor fd. File descriptors; are obtained from calls like open, dup, creat, pipe or fileno (if the file; has been previously opened with fopen). The mode parameter is as in gzopen. The next call of gzclose on the returned gzFile will also close the file; descriptor fd, just like fclose(fdopen(fd, mode)) closes the file descriptor; fd. If you want to keep fd open, use fd = dup(fd_keep); gz = gzdopen(fd,; mode);. The duplicated descriptor should be saved to avoid a leak, since; gzdopen does not close fd if it fails. If you are using fileno() to get the; file descriptor from a FILE *, then you will have to use dup() to avoid; double-close()ing the file descriptor. Both gzclose() and fclose() will; close the associated file descriptor, so they need to have different file; descriptors. gzdopen returns NULL if there was insufficient memory to allocate the; gzFile state, if an invalid mode was specified (an 'r', 'w', or 'a' was not; provided, or '+' was provided), or if fd is -1. The file descriptor is not; used until the next gz* read, write, seek, or close operation, so gzdopen; will not detect if fd is invalid (unless fd is -1).; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1150,Safety,detect,detect,1150,"/*; gzdopen associates a gzFile with the file descriptor fd. File descriptors; are obtained from calls like open, dup, creat, pipe or fileno (if the file; has been previously opened with fopen). The mode parameter is as in gzopen. The next call of gzclose on the returned gzFile will also close the file; descriptor fd, just like fclose(fdopen(fd, mode)) closes the file descriptor; fd. If you want to keep fd open, use fd = dup(fd_keep); gz = gzdopen(fd,; mode);. The duplicated descriptor should be saved to avoid a leak, since; gzdopen does not close fd if it fails. If you are using fileno() to get the; file descriptor from a FILE *, then you will have to use dup() to avoid; double-close()ing the file descriptor. Both gzclose() and fclose() will; close the associated file descriptor, so they need to have different file; descriptors. gzdopen returns NULL if there was insufficient memory to allocate the; gzFile state, if an invalid mode was specified (an 'r', 'w', or 'a' was not; provided, or '+' was provided), or if fd is -1. The file descriptor is not; used until the next gz* read, write, seek, or close operation, so gzdopen; will not detect if fd is invalid (unless fd is -1).; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:680,Availability,failure,failure,680,"/*; Set the internal buffer size used by this library's functions. The; default buffer size is 8192 bytes. This function must be called after; gzopen() or gzdopen(), and before any other calls that read or write the; file. The buffer memory allocation is always deferred to the first read or; write. Two buffers are allocated, either both of the specified size when; writing, or one of the specified size and the other twice that size when; reading. A larger buffer size of, for example, 64K or 128K bytes will; noticeably increase the speed of decompression (reading). The new buffer size also affects the maximum length for gzprintf(). gzbuffer() returns 0 on success, or -1 on failure, such as being called; too late.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:316,Energy Efficiency,allocate,allocated,316,"/*; Set the internal buffer size used by this library's functions. The; default buffer size is 8192 bytes. This function must be called after; gzopen() or gzdopen(), and before any other calls that read or write the; file. The buffer memory allocation is always deferred to the first read or; write. Two buffers are allocated, either both of the specified size when; writing, or one of the specified size and the other twice that size when; reading. A larger buffer size of, for example, 64K or 128K bytes will; noticeably increase the speed of decompression (reading). The new buffer size also affects the maximum length for gzprintf(). gzbuffer() returns 0 on success, or -1 on failure, such as being called; too late.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:16,Deployability,update,update,16,"/*; Dynamically update the compression level or strategy. See the description; of deflateInit2 for the meaning of these parameters. gzsetparams returns Z_OK if success, or Z_STREAM_ERROR if the file was not; opened for writing.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:552,Availability,error,error,552,"/*; Reads the given number of uncompressed bytes from the compressed file. If; the input file is not in gzip format, gzread copies the given number of; bytes into the buffer directly from the file. After reaching the end of a gzip stream in the input, gzread will continue; to read, looking for another gzip stream. Any number of gzip streams may be; concatenated in the input file, and will all be decompressed by gzread().; If something other than a gzip stream is encountered after a gzip stream,; that remaining trailing garbage is ignored (and no error is returned). gzread can be used to read a gzip file that is being concurrently written.; Upon reaching the end of the input, gzread will return with the available; data. If the error code returned by gzerror is Z_OK or Z_BUF_ERROR, then; gzclearerr can be used to clear the end of file indicator in order to permit; gzread to be tried again. Z_OK indicates that a gzip stream was completed; on the last gzread. Z_BUF_ERROR indicates that the input file ended in the; middle of a gzip stream. Note that gzread does not return -1 in the event; of an incomplete gzip stream. This error is deferred until gzclose(), which; will return Z_BUF_ERROR if the last gzread ended in the middle of a gzip; stream. Alternatively, gzerror can be used before gzclose to detect this; case. gzread returns the number of uncompressed bytes actually read, less than; len for end of file, or -1 for error.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:712,Availability,avail,available,712,"/*; Reads the given number of uncompressed bytes from the compressed file. If; the input file is not in gzip format, gzread copies the given number of; bytes into the buffer directly from the file. After reaching the end of a gzip stream in the input, gzread will continue; to read, looking for another gzip stream. Any number of gzip streams may be; concatenated in the input file, and will all be decompressed by gzread().; If something other than a gzip stream is encountered after a gzip stream,; that remaining trailing garbage is ignored (and no error is returned). gzread can be used to read a gzip file that is being concurrently written.; Upon reaching the end of the input, gzread will return with the available; data. If the error code returned by gzerror is Z_OK or Z_BUF_ERROR, then; gzclearerr can be used to clear the end of file indicator in order to permit; gzread to be tried again. Z_OK indicates that a gzip stream was completed; on the last gzread. Z_BUF_ERROR indicates that the input file ended in the; middle of a gzip stream. Note that gzread does not return -1 in the event; of an incomplete gzip stream. This error is deferred until gzclose(), which; will return Z_BUF_ERROR if the last gzread ended in the middle of a gzip; stream. Alternatively, gzerror can be used before gzclose to detect this; case. gzread returns the number of uncompressed bytes actually read, less than; len for end of file, or -1 for error.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:736,Availability,error,error,736,"/*; Reads the given number of uncompressed bytes from the compressed file. If; the input file is not in gzip format, gzread copies the given number of; bytes into the buffer directly from the file. After reaching the end of a gzip stream in the input, gzread will continue; to read, looking for another gzip stream. Any number of gzip streams may be; concatenated in the input file, and will all be decompressed by gzread().; If something other than a gzip stream is encountered after a gzip stream,; that remaining trailing garbage is ignored (and no error is returned). gzread can be used to read a gzip file that is being concurrently written.; Upon reaching the end of the input, gzread will return with the available; data. If the error code returned by gzerror is Z_OK or Z_BUF_ERROR, then; gzclearerr can be used to clear the end of file indicator in order to permit; gzread to be tried again. Z_OK indicates that a gzip stream was completed; on the last gzread. Z_BUF_ERROR indicates that the input file ended in the; middle of a gzip stream. Note that gzread does not return -1 in the event; of an incomplete gzip stream. This error is deferred until gzclose(), which; will return Z_BUF_ERROR if the last gzread ended in the middle of a gzip; stream. Alternatively, gzerror can be used before gzclose to detect this; case. gzread returns the number of uncompressed bytes actually read, less than; len for end of file, or -1 for error.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1136,Availability,error,error,1136,"/*; Reads the given number of uncompressed bytes from the compressed file. If; the input file is not in gzip format, gzread copies the given number of; bytes into the buffer directly from the file. After reaching the end of a gzip stream in the input, gzread will continue; to read, looking for another gzip stream. Any number of gzip streams may be; concatenated in the input file, and will all be decompressed by gzread().; If something other than a gzip stream is encountered after a gzip stream,; that remaining trailing garbage is ignored (and no error is returned). gzread can be used to read a gzip file that is being concurrently written.; Upon reaching the end of the input, gzread will return with the available; data. If the error code returned by gzerror is Z_OK or Z_BUF_ERROR, then; gzclearerr can be used to clear the end of file indicator in order to permit; gzread to be tried again. Z_OK indicates that a gzip stream was completed; on the last gzread. Z_BUF_ERROR indicates that the input file ended in the; middle of a gzip stream. Note that gzread does not return -1 in the event; of an incomplete gzip stream. This error is deferred until gzclose(), which; will return Z_BUF_ERROR if the last gzread ended in the middle of a gzip; stream. Alternatively, gzerror can be used before gzclose to detect this; case. gzread returns the number of uncompressed bytes actually read, less than; len for end of file, or -1 for error.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1437,Availability,error,error,1437,"/*; Reads the given number of uncompressed bytes from the compressed file. If; the input file is not in gzip format, gzread copies the given number of; bytes into the buffer directly from the file. After reaching the end of a gzip stream in the input, gzread will continue; to read, looking for another gzip stream. Any number of gzip streams may be; concatenated in the input file, and will all be decompressed by gzread().; If something other than a gzip stream is encountered after a gzip stream,; that remaining trailing garbage is ignored (and no error is returned). gzread can be used to read a gzip file that is being concurrently written.; Upon reaching the end of the input, gzread will return with the available; data. If the error code returned by gzerror is Z_OK or Z_BUF_ERROR, then; gzclearerr can be used to clear the end of file indicator in order to permit; gzread to be tried again. Z_OK indicates that a gzip stream was completed; on the last gzread. Z_BUF_ERROR indicates that the input file ended in the; middle of a gzip stream. Note that gzread does not return -1 in the event; of an incomplete gzip stream. This error is deferred until gzclose(), which; will return Z_BUF_ERROR if the last gzread ended in the middle of a gzip; stream. Alternatively, gzerror can be used before gzclose to detect this; case. gzread returns the number of uncompressed bytes actually read, less than; len for end of file, or -1 for error.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:625,Performance,concurren,concurrently,625,"/*; Reads the given number of uncompressed bytes from the compressed file. If; the input file is not in gzip format, gzread copies the given number of; bytes into the buffer directly from the file. After reaching the end of a gzip stream in the input, gzread will continue; to read, looking for another gzip stream. Any number of gzip streams may be; concatenated in the input file, and will all be decompressed by gzread().; If something other than a gzip stream is encountered after a gzip stream,; that remaining trailing garbage is ignored (and no error is returned). gzread can be used to read a gzip file that is being concurrently written.; Upon reaching the end of the input, gzread will return with the available; data. If the error code returned by gzerror is Z_OK or Z_BUF_ERROR, then; gzclearerr can be used to clear the end of file indicator in order to permit; gzread to be tried again. Z_OK indicates that a gzip stream was completed; on the last gzread. Z_BUF_ERROR indicates that the input file ended in the; middle of a gzip stream. Note that gzread does not return -1 in the event; of an incomplete gzip stream. This error is deferred until gzclose(), which; will return Z_BUF_ERROR if the last gzread ended in the middle of a gzip; stream. Alternatively, gzerror can be used before gzclose to detect this; case. gzread returns the number of uncompressed bytes actually read, less than; len for end of file, or -1 for error.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1313,Safety,detect,detect,1313,"/*; Reads the given number of uncompressed bytes from the compressed file. If; the input file is not in gzip format, gzread copies the given number of; bytes into the buffer directly from the file. After reaching the end of a gzip stream in the input, gzread will continue; to read, looking for another gzip stream. Any number of gzip streams may be; concatenated in the input file, and will all be decompressed by gzread().; If something other than a gzip stream is encountered after a gzip stream,; that remaining trailing garbage is ignored (and no error is returned). gzread can be used to read a gzip file that is being concurrently written.; Upon reaching the end of the input, gzread will return with the available; data. If the error code returned by gzerror is Z_OK or Z_BUF_ERROR, then; gzclearerr can be used to clear the end of file indicator in order to permit; gzread to be tried again. Z_OK indicates that a gzip stream was completed; on the last gzread. Z_BUF_ERROR indicates that the input file ended in the; middle of a gzip stream. Note that gzread does not return -1 in the event; of an incomplete gzip stream. This error is deferred until gzclose(), which; will return Z_BUF_ERROR if the last gzread ended in the middle of a gzip; stream. Alternatively, gzerror can be used before gzclose to detect this; case. gzread returns the number of uncompressed bytes actually read, less than; len for end of file, or -1 for error.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:823,Usability,clear,clear,823,"/*; Reads the given number of uncompressed bytes from the compressed file. If; the input file is not in gzip format, gzread copies the given number of; bytes into the buffer directly from the file. After reaching the end of a gzip stream in the input, gzread will continue; to read, looking for another gzip stream. Any number of gzip streams may be; concatenated in the input file, and will all be decompressed by gzread().; If something other than a gzip stream is encountered after a gzip stream,; that remaining trailing garbage is ignored (and no error is returned). gzread can be used to read a gzip file that is being concurrently written.; Upon reaching the end of the input, gzread will return with the available; data. If the error code returned by gzerror is Z_OK or Z_BUF_ERROR, then; gzclearerr can be used to clear the end of file indicator in order to permit; gzread to be tried again. Z_OK indicates that a gzip stream was completed; on the last gzread. Z_BUF_ERROR indicates that the input file ended in the; middle of a gzip stream. Note that gzread does not return -1 in the event; of an incomplete gzip stream. This error is deferred until gzclose(), which; will return Z_BUF_ERROR if the last gzread ended in the middle of a gzip; stream. Alternatively, gzerror can be used before gzclose to detect this; case. gzread returns the number of uncompressed bytes actually read, less than; len for end of file, or -1 for error.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:151,Availability,error,error,151,/*; Writes the given number of uncompressed bytes into the compressed file.; gzwrite returns the number of uncompressed bytes written or 0 in case of; error.; */,MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:208,Availability,error,error,208,"/*; Converts, formats, and writes the arguments to the compressed file under; control of the format string, as in fprintf. gzprintf returns the number of; uncompressed bytes actually written, or 0 in case of error. The number of; uncompressed bytes written is limited to 8191, or one less than the buffer; size given to gzbuffer(). The caller should assure that this limit is not; exceeded. If it is exceeded, then gzprintf() will return an error (0) with; nothing written. In this case, there may also be a buffer overflow with; unpredictable consequences, which is possible only if zlib was compiled with; the insecure functions sprintf() or vsprintf() because the secure snprintf(); or vsnprintf() functions were not available. This can be determined using; zlibCompileFlags().; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:441,Availability,error,error,441,"/*; Converts, formats, and writes the arguments to the compressed file under; control of the format string, as in fprintf. gzprintf returns the number of; uncompressed bytes actually written, or 0 in case of error. The number of; uncompressed bytes written is limited to 8191, or one less than the buffer; size given to gzbuffer(). The caller should assure that this limit is not; exceeded. If it is exceeded, then gzprintf() will return an error (0) with; nothing written. In this case, there may also be a buffer overflow with; unpredictable consequences, which is possible only if zlib was compiled with; the insecure functions sprintf() or vsprintf() because the secure snprintf(); or vsnprintf() functions were not available. This can be determined using; zlibCompileFlags().; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:720,Availability,avail,available,720,"/*; Converts, formats, and writes the arguments to the compressed file under; control of the format string, as in fprintf. gzprintf returns the number of; uncompressed bytes actually written, or 0 in case of error. The number of; uncompressed bytes written is limited to 8191, or one less than the buffer; size given to gzbuffer(). The caller should assure that this limit is not; exceeded. If it is exceeded, then gzprintf() will return an error (0) with; nothing written. In this case, there may also be a buffer overflow with; unpredictable consequences, which is possible only if zlib was compiled with; the insecure functions sprintf() or vsprintf() because the secure snprintf(); or vsnprintf() functions were not available. This can be determined using; zlibCompileFlags().; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:667,Security,secur,secure,667,"/*; Converts, formats, and writes the arguments to the compressed file under; control of the format string, as in fprintf. gzprintf returns the number of; uncompressed bytes actually written, or 0 in case of error. The number of; uncompressed bytes written is limited to 8191, or one less than the buffer; size given to gzbuffer(). The caller should assure that this limit is not; exceeded. If it is exceeded, then gzprintf() will return an error (0) with; nothing written. In this case, there may also be a buffer overflow with; unpredictable consequences, which is possible only if zlib was compiled with; the insecure functions sprintf() or vsprintf() because the secure snprintf(); or vsnprintf() functions were not available. This can be determined using; zlibCompileFlags().; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:177,Availability,error,error,177,"/*; Writes the given null-terminated string to the compressed file, excluding; the terminating null character. gzputs returns the number of characters written, or -1 in case of error.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:467,Availability,error,error,467,"/*; Reads bytes from the compressed file until len-1 characters are read, or a; newline character is read and transferred to buf, or an end-of-file; condition is encountered. If any characters are read or if len == 1, the; string is terminated with a null character. If no characters are read due; to an end-of-file or len < 1, then the buffer is left untouched. gzgets returns buf which is a null-terminated string, or it returns NULL; for end-of-file or in case of error. If there was an error, the contents at; buf are indeterminate.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:490,Availability,error,error,490,"/*; Reads bytes from the compressed file until len-1 characters are read, or a; newline character is read and transferred to buf, or an end-of-file; condition is encountered. If any characters are read or if len == 1, the; string is terminated with a null character. If no characters are read due; to an end-of-file or len < 1, then the buffer is left untouched. gzgets returns buf which is a null-terminated string, or it returns NULL; for end-of-file or in case of error. If there was an error, the contents at; buf are indeterminate.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:132,Availability,error,error,132,"/*; Writes c, converted to an unsigned char, into the compressed file. gzputc; returns the value that was written, or -1 in case of error.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:103,Availability,error,error,103,"/*; Reads one byte from the compressed file. gzgetc returns this byte or -1; in case of end of file or error. This is implemented as a macro for speed.; As such, it does not do all of the checking the other functions do. I.e.; it does not check to see if file is NULL, nor whether the structure file; points to has been clobbered or not.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:196,Availability,failure,failure,196,"/*; Push one character back onto the stream to be read as the first character; on the next read. At least one character of push-back is allowed.; gzungetc() returns the character pushed, or -1 on failure. gzungetc() will; fail if c is -1, and may fail if a character has been pushed but not read; yet. If gzungetc is used immediately after gzopen or gzdopen, at least the; output buffer size of pushed characters is allowed. (See gzbuffer above.); The pushed character will be discarded if the stream is repositioned with; gzseek() or gzrewind().; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:140,Availability,error,error,140,"/*; Flushes all pending output into the compressed file. The parameter flush; is as in the deflate() function. The return value is the zlib error number; (see function gzerror below). gzflush is only permitted when writing. If the flush parameter is Z_FINISH, the remaining data is written and the; gzip stream is completed in the output. If gzwrite() is called again, a new; gzip stream will be started in the output. gzread() is able to read such; concatented gzip streams. gzflush should be called only when strictly necessary because it will; degrade compression if called too often.; */; /*; ZEXTERN z_off_t ZEXPORT gzseek OF((gzFile file,; z_off_t offset, int whence));. Sets the starting position for the next gzread or gzwrite on the given; compressed file. The offset represents a number of bytes in the; uncompressed data stream. The whence parameter is defined as in lseek(2);; the value SEEK_END is not supported. If the file is opened for reading, this function is emulated but can be; extremely slow. If the file is opened for writing, only forward seeks are; supported; gzseek then compresses a sequence of zeroes up to the new; starting position. gzseek returns the resulting offset location as measured in bytes from; the beginning of the uncompressed stream, or -1 in case of error, in; particular if the file is opened for writing and the new starting position; would be before the current position.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1294,Availability,error,error,1294,"/*; Flushes all pending output into the compressed file. The parameter flush; is as in the deflate() function. The return value is the zlib error number; (see function gzerror below). gzflush is only permitted when writing. If the flush parameter is Z_FINISH, the remaining data is written and the; gzip stream is completed in the output. If gzwrite() is called again, a new; gzip stream will be started in the output. gzread() is able to read such; concatented gzip streams. gzflush should be called only when strictly necessary because it will; degrade compression if called too often.; */; /*; ZEXTERN z_off_t ZEXPORT gzseek OF((gzFile file,; z_off_t offset, int whence));. Sets the starting position for the next gzread or gzwrite on the given; compressed file. The offset represents a number of bytes in the; uncompressed data stream. The whence parameter is defined as in lseek(2);; the value SEEK_END is not supported. If the file is opened for reading, this function is emulated but can be; extremely slow. If the file is opened for writing, only forward seeks are; supported; gzseek then compresses a sequence of zeroes up to the new; starting position. gzseek returns the resulting offset location as measured in bytes from; the beginning of the uncompressed stream, or -1 in case of error, in; particular if the file is opened for writing and the new starting position; would be before the current position.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:929,Availability,error,error,929,"/*; Rewinds the given file. This function is supported only for reading. gzrewind(file) is equivalent to (int)gzseek(file, 0L, SEEK_SET); */; /*; ZEXTERN z_off_t ZEXPORT gztell OF((gzFile file));. Returns the starting position for the next gzread or gzwrite on the given; compressed file. This position represents a number of bytes in the; uncompressed data stream, and is zero when starting, even if appending or; reading a gzip stream from the middle of a file using gzdopen(). gztell(file) is equivalent to gzseek(file, 0L, SEEK_CUR); */; /*; ZEXTERN z_off_t ZEXPORT gzoffset OF((gzFile file));. Returns the current offset in the file being read or written. This offset; includes the count of bytes that precede the gzip stream, for example when; appending or when using gzdopen() for reading. When reading, the offset; does not include as yet unused buffered input. This information can be used; for a progress indicator. On error, gzoffset() returns -1.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:699,Safety,detect,detected,699,"/*; Returns true (1) if the end-of-file indicator has been set while reading,; false (0) otherwise. Note that the end-of-file indicator is set only if the; read tried to go past the end of the input, but came up short. Therefore,; just like feof(), gzeof() may return false even if there is no more data to; read, in the event that the last read request was for the exact number of; bytes remaining in the input file. This will happen if the input file size; is an exact multiple of the buffer size. If gzeof() returns true, then the read functions will return no more data,; unless the end-of-file indicator is reset by gzclearerr() and the input file; has grown since the previous end of file was detected.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:325,Energy Efficiency,allocate,allocated,325,"/*; Returns true (1) if file is being copied directly while reading, or false; (0) if file is a gzip stream being decompressed. If the input file is empty, gzdirect() will return true, since the input; does not contain a gzip stream. If gzdirect() is used immediately after gzopen() or gzdopen() it will; cause buffers to be allocated to allow reading the file to determine if it; is a gzip file. Therefore if gzbuffer() is used, it should be called before; gzdirect(). When writing, gzdirect() returns true (1) if transparent writing was; requested (""wT"" for the gzopen() mode), or false (0) otherwise. (Note:; gzdirect() is not needed when writing. Transparent writing must be; explicitly requested, so the application already knows the answer. When; linking statically, using gzdirect() will include all of the zlib code for; gzip file reading and decompression, which may not be desired.); */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:446,Availability,error,error,446,"/*; Flushes all pending output if necessary, closes the compressed file and; deallocates the (de)compression state. Note that once file is closed, you; cannot call gzerror with file, since its structures have been deallocated.; gzclose must not be called more than once on the same file, just as free; must not be called more than once on the same allocation. gzclose will return Z_STREAM_ERROR if file is not valid, Z_ERRNO on a; file operation error, Z_MEM_ERROR if out of memory, Z_BUF_ERROR if the; last read ended in the middle of a gzip stream, or Z_OK on success.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:193,Safety,avoid,avoid,193,"/*; Same as gzclose(), but gzclose_r() is only for use when reading, and; gzclose_w() is only for use when writing or appending. The advantage to; using these instead of gzclose() is that they avoid linking in zlib; compression or decompression code that is not used when only reading or only; writing respectively. If gzclose() is used, then both compression and; decompression code will be included the application when linking to a static; zlib library.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:16,Availability,error,error,16,"/*; Returns the error message for the last error which occurred on the given; compressed file. errnum is set to zlib error number. If an error occurred; in the file system and not in the compression library, errnum is set to; Z_ERRNO and the application may consult errno to get the exact error code. The application must not modify the returned string. Future calls to; this function may invalidate the previously returned string. If file is; closed, then the string previously returned by gzerror will no longer be; available. gzerror() should be used to distinguish errors from end-of-file for those; functions above that do not distinguish those cases in their return values.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:43,Availability,error,error,43,"/*; Returns the error message for the last error which occurred on the given; compressed file. errnum is set to zlib error number. If an error occurred; in the file system and not in the compression library, errnum is set to; Z_ERRNO and the application may consult errno to get the exact error code. The application must not modify the returned string. Future calls to; this function may invalidate the previously returned string. If file is; closed, then the string previously returned by gzerror will no longer be; available. gzerror() should be used to distinguish errors from end-of-file for those; functions above that do not distinguish those cases in their return values.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:117,Availability,error,error,117,"/*; Returns the error message for the last error which occurred on the given; compressed file. errnum is set to zlib error number. If an error occurred; in the file system and not in the compression library, errnum is set to; Z_ERRNO and the application may consult errno to get the exact error code. The application must not modify the returned string. Future calls to; this function may invalidate the previously returned string. If file is; closed, then the string previously returned by gzerror will no longer be; available. gzerror() should be used to distinguish errors from end-of-file for those; functions above that do not distinguish those cases in their return values.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:137,Availability,error,error,137,"/*; Returns the error message for the last error which occurred on the given; compressed file. errnum is set to zlib error number. If an error occurred; in the file system and not in the compression library, errnum is set to; Z_ERRNO and the application may consult errno to get the exact error code. The application must not modify the returned string. Future calls to; this function may invalidate the previously returned string. If file is; closed, then the string previously returned by gzerror will no longer be; available. gzerror() should be used to distinguish errors from end-of-file for those; functions above that do not distinguish those cases in their return values.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:289,Availability,error,error,289,"/*; Returns the error message for the last error which occurred on the given; compressed file. errnum is set to zlib error number. If an error occurred; in the file system and not in the compression library, errnum is set to; Z_ERRNO and the application may consult errno to get the exact error code. The application must not modify the returned string. Future calls to; this function may invalidate the previously returned string. If file is; closed, then the string previously returned by gzerror will no longer be; available. gzerror() should be used to distinguish errors from end-of-file for those; functions above that do not distinguish those cases in their return values.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:518,Availability,avail,available,518,"/*; Returns the error message for the last error which occurred on the given; compressed file. errnum is set to zlib error number. If an error occurred; in the file system and not in the compression library, errnum is set to; Z_ERRNO and the application may consult errno to get the exact error code. The application must not modify the returned string. Future calls to; this function may invalidate the previously returned string. If file is; closed, then the string previously returned by gzerror will no longer be; available. gzerror() should be used to distinguish errors from end-of-file for those; functions above that do not distinguish those cases in their return values.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:569,Availability,error,errors,569,"/*; Returns the error message for the last error which occurred on the given; compressed file. errnum is set to zlib error number. If an error occurred; in the file system and not in the compression library, errnum is set to; Z_ERRNO and the application may consult errno to get the exact error code. The application must not modify the returned string. Future calls to; this function may invalidate the previously returned string. If file is; closed, then the string previously returned by gzerror will no longer be; available. gzerror() should be used to distinguish errors from end-of-file for those; functions above that do not distinguish those cases in their return values.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:22,Integrability,message,message,22,"/*; Returns the error message for the last error which occurred on the given; compressed file. errnum is set to zlib error number. If an error occurred; in the file system and not in the compression library, errnum is set to; Z_ERRNO and the application may consult errno to get the exact error code. The application must not modify the returned string. Future calls to; this function may invalidate the previously returned string. If file is; closed, then the string previously returned by gzerror will no longer be; available. gzerror() should be used to distinguish errors from end-of-file for those; functions above that do not distinguish those cases in their return values.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:15,Availability,error,error,15,/*; Clears the error and end-of-file flags for file. This is analogous to the; clearerr() function in stdio. This is useful for continuing to read a gzip; file that is being written concurrently.; */,MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:182,Performance,concurren,concurrently,182,/*; Clears the error and end-of-file flags for file. This is analogous to the; clearerr() function in stdio. This is useful for continuing to read a gzip; file that is being written concurrently.; */,MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:4,Usability,Clear,Clears,4,/*; Clears the error and end-of-file flags for file. This is analogous to the; clearerr() function in stdio. This is useful for continuing to read a gzip; file that is being written concurrently.; */,MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:79,Usability,clear,clearerr,79,/*; Clears the error and end-of-file flags for file. This is analogous to the; clearerr() function in stdio. This is useful for continuing to read a gzip; file that is being written concurrently.; */,MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:18,Security,checksum,checksum,18,/* !Z_SOLO */; /* checksum functions */; /*; These functions are not related to compression but are exported; anyway because they might be useful in applications using the compression; library.; */,MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:222,Availability,reliab,reliable,222,"/*; Update a running Adler-32 checksum with the bytes buf[0..len-1] and; return the updated checksum. If buf is Z_NULL, this function returns the; required initial value for the checksum. An Adler-32 checksum is almost as reliable as a CRC32 but can be computed; much faster. Usage example:. uLong adler = adler32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; adler = adler32(adler, buffer, length);; }; if (adler != original_adler) error();; */; /*; ZEXTERN uLong ZEXPORT adler32_combine OF((uLong adler1, uLong adler2,; z_off_t len2));. Combine two Adler-32 checksums into one. For two sequences of bytes, seq1; and seq2 with lengths len1 and len2, Adler-32 checksums were calculated for; each, adler1 and adler2. adler32_combine() returns the Adler-32 checksum of; seq1 and seq2 concatenated, requiring only adler1, adler2, and len2. Note; that the z_off_t type (like off_t) is a signed integer. If len2 is; negative, the result has no meaning or utility.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:450,Availability,error,error,450,"/*; Update a running Adler-32 checksum with the bytes buf[0..len-1] and; return the updated checksum. If buf is Z_NULL, this function returns the; required initial value for the checksum. An Adler-32 checksum is almost as reliable as a CRC32 but can be computed; much faster. Usage example:. uLong adler = adler32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; adler = adler32(adler, buffer, length);; }; if (adler != original_adler) error();; */; /*; ZEXTERN uLong ZEXPORT adler32_combine OF((uLong adler1, uLong adler2,; z_off_t len2));. Combine two Adler-32 checksums into one. For two sequences of bytes, seq1; and seq2 with lengths len1 and len2, Adler-32 checksums were calculated for; each, adler1 and adler2. adler32_combine() returns the Adler-32 checksum of; seq1 and seq2 concatenated, requiring only adler1, adler2, and len2. Note; that the z_off_t type (like off_t) is a signed integer. If len2 is; negative, the result has no meaning or utility.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:4,Deployability,Update,Update,4,"/*; Update a running Adler-32 checksum with the bytes buf[0..len-1] and; return the updated checksum. If buf is Z_NULL, this function returns the; required initial value for the checksum. An Adler-32 checksum is almost as reliable as a CRC32 but can be computed; much faster. Usage example:. uLong adler = adler32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; adler = adler32(adler, buffer, length);; }; if (adler != original_adler) error();; */; /*; ZEXTERN uLong ZEXPORT adler32_combine OF((uLong adler1, uLong adler2,; z_off_t len2));. Combine two Adler-32 checksums into one. For two sequences of bytes, seq1; and seq2 with lengths len1 and len2, Adler-32 checksums were calculated for; each, adler1 and adler2. adler32_combine() returns the Adler-32 checksum of; seq1 and seq2 concatenated, requiring only adler1, adler2, and len2. Note; that the z_off_t type (like off_t) is a signed integer. If len2 is; negative, the result has no meaning or utility.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:84,Deployability,update,updated,84,"/*; Update a running Adler-32 checksum with the bytes buf[0..len-1] and; return the updated checksum. If buf is Z_NULL, this function returns the; required initial value for the checksum. An Adler-32 checksum is almost as reliable as a CRC32 but can be computed; much faster. Usage example:. uLong adler = adler32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; adler = adler32(adler, buffer, length);; }; if (adler != original_adler) error();; */; /*; ZEXTERN uLong ZEXPORT adler32_combine OF((uLong adler1, uLong adler2,; z_off_t len2));. Combine two Adler-32 checksums into one. For two sequences of bytes, seq1; and seq2 with lengths len1 and len2, Adler-32 checksums were calculated for; each, adler1 and adler2. adler32_combine() returns the Adler-32 checksum of; seq1 and seq2 concatenated, requiring only adler1, adler2, and len2. Note; that the z_off_t type (like off_t) is a signed integer. If len2 is; negative, the result has no meaning or utility.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:30,Security,checksum,checksum,30,"/*; Update a running Adler-32 checksum with the bytes buf[0..len-1] and; return the updated checksum. If buf is Z_NULL, this function returns the; required initial value for the checksum. An Adler-32 checksum is almost as reliable as a CRC32 but can be computed; much faster. Usage example:. uLong adler = adler32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; adler = adler32(adler, buffer, length);; }; if (adler != original_adler) error();; */; /*; ZEXTERN uLong ZEXPORT adler32_combine OF((uLong adler1, uLong adler2,; z_off_t len2));. Combine two Adler-32 checksums into one. For two sequences of bytes, seq1; and seq2 with lengths len1 and len2, Adler-32 checksums were calculated for; each, adler1 and adler2. adler32_combine() returns the Adler-32 checksum of; seq1 and seq2 concatenated, requiring only adler1, adler2, and len2. Note; that the z_off_t type (like off_t) is a signed integer. If len2 is; negative, the result has no meaning or utility.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:92,Security,checksum,checksum,92,"/*; Update a running Adler-32 checksum with the bytes buf[0..len-1] and; return the updated checksum. If buf is Z_NULL, this function returns the; required initial value for the checksum. An Adler-32 checksum is almost as reliable as a CRC32 but can be computed; much faster. Usage example:. uLong adler = adler32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; adler = adler32(adler, buffer, length);; }; if (adler != original_adler) error();; */; /*; ZEXTERN uLong ZEXPORT adler32_combine OF((uLong adler1, uLong adler2,; z_off_t len2));. Combine two Adler-32 checksums into one. For two sequences of bytes, seq1; and seq2 with lengths len1 and len2, Adler-32 checksums were calculated for; each, adler1 and adler2. adler32_combine() returns the Adler-32 checksum of; seq1 and seq2 concatenated, requiring only adler1, adler2, and len2. Note; that the z_off_t type (like off_t) is a signed integer. If len2 is; negative, the result has no meaning or utility.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:178,Security,checksum,checksum,178,"/*; Update a running Adler-32 checksum with the bytes buf[0..len-1] and; return the updated checksum. If buf is Z_NULL, this function returns the; required initial value for the checksum. An Adler-32 checksum is almost as reliable as a CRC32 but can be computed; much faster. Usage example:. uLong adler = adler32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; adler = adler32(adler, buffer, length);; }; if (adler != original_adler) error();; */; /*; ZEXTERN uLong ZEXPORT adler32_combine OF((uLong adler1, uLong adler2,; z_off_t len2));. Combine two Adler-32 checksums into one. For two sequences of bytes, seq1; and seq2 with lengths len1 and len2, Adler-32 checksums were calculated for; each, adler1 and adler2. adler32_combine() returns the Adler-32 checksum of; seq1 and seq2 concatenated, requiring only adler1, adler2, and len2. Note; that the z_off_t type (like off_t) is a signed integer. If len2 is; negative, the result has no meaning or utility.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:200,Security,checksum,checksum,200,"/*; Update a running Adler-32 checksum with the bytes buf[0..len-1] and; return the updated checksum. If buf is Z_NULL, this function returns the; required initial value for the checksum. An Adler-32 checksum is almost as reliable as a CRC32 but can be computed; much faster. Usage example:. uLong adler = adler32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; adler = adler32(adler, buffer, length);; }; if (adler != original_adler) error();; */; /*; ZEXTERN uLong ZEXPORT adler32_combine OF((uLong adler1, uLong adler2,; z_off_t len2));. Combine two Adler-32 checksums into one. For two sequences of bytes, seq1; and seq2 with lengths len1 and len2, Adler-32 checksums were calculated for; each, adler1 and adler2. adler32_combine() returns the Adler-32 checksum of; seq1 and seq2 concatenated, requiring only adler1, adler2, and len2. Note; that the z_off_t type (like off_t) is a signed integer. If len2 is; negative, the result has no meaning or utility.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:577,Security,checksum,checksums,577,"/*; Update a running Adler-32 checksum with the bytes buf[0..len-1] and; return the updated checksum. If buf is Z_NULL, this function returns the; required initial value for the checksum. An Adler-32 checksum is almost as reliable as a CRC32 but can be computed; much faster. Usage example:. uLong adler = adler32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; adler = adler32(adler, buffer, length);; }; if (adler != original_adler) error();; */; /*; ZEXTERN uLong ZEXPORT adler32_combine OF((uLong adler1, uLong adler2,; z_off_t len2));. Combine two Adler-32 checksums into one. For two sequences of bytes, seq1; and seq2 with lengths len1 and len2, Adler-32 checksums were calculated for; each, adler1 and adler2. adler32_combine() returns the Adler-32 checksum of; seq1 and seq2 concatenated, requiring only adler1, adler2, and len2. Note; that the z_off_t type (like off_t) is a signed integer. If len2 is; negative, the result has no meaning or utility.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:677,Security,checksum,checksums,677,"/*; Update a running Adler-32 checksum with the bytes buf[0..len-1] and; return the updated checksum. If buf is Z_NULL, this function returns the; required initial value for the checksum. An Adler-32 checksum is almost as reliable as a CRC32 but can be computed; much faster. Usage example:. uLong adler = adler32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; adler = adler32(adler, buffer, length);; }; if (adler != original_adler) error();; */; /*; ZEXTERN uLong ZEXPORT adler32_combine OF((uLong adler1, uLong adler2,; z_off_t len2));. Combine two Adler-32 checksums into one. For two sequences of bytes, seq1; and seq2 with lengths len1 and len2, Adler-32 checksums were calculated for; each, adler1 and adler2. adler32_combine() returns the Adler-32 checksum of; seq1 and seq2 concatenated, requiring only adler1, adler2, and len2. Note; that the z_off_t type (like off_t) is a signed integer. If len2 is; negative, the result has no meaning or utility.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:772,Security,checksum,checksum,772,"/*; Update a running Adler-32 checksum with the bytes buf[0..len-1] and; return the updated checksum. If buf is Z_NULL, this function returns the; required initial value for the checksum. An Adler-32 checksum is almost as reliable as a CRC32 but can be computed; much faster. Usage example:. uLong adler = adler32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; adler = adler32(adler, buffer, length);; }; if (adler != original_adler) error();; */; /*; ZEXTERN uLong ZEXPORT adler32_combine OF((uLong adler1, uLong adler2,; z_off_t len2));. Combine two Adler-32 checksums into one. For two sequences of bytes, seq1; and seq2 with lengths len1 and len2, Adler-32 checksums were calculated for; each, adler1 and adler2. adler32_combine() returns the Adler-32 checksum of; seq1 and seq2 concatenated, requiring only adler1, adler2, and len2. Note; that the z_off_t type (like off_t) is a signed integer. If len2 is; negative, the result has no meaning or utility.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:455,Availability,error,error,455,"/*; Update a running CRC-32 with the bytes buf[0..len-1] and return the; updated CRC-32. If buf is Z_NULL, this function returns the required; initial value for the crc. Pre- and post-conditioning (one's complement) is; performed within this function so it shouldn't be done by the application. Usage example:. uLong crc = crc32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; crc = crc32(crc, buffer, length);; }; if (crc != original_crc) error();; */; /*; ZEXTERN uLong ZEXPORT crc32_combine OF((uLong crc1, uLong crc2, z_off_t len2));. Combine two CRC-32 check values into one. For two sequences of bytes,; seq1 and seq2 with lengths len1 and len2, CRC-32 check values were; calculated for each, crc1 and crc2. crc32_combine() returns the CRC-32; check value of seq1 and seq2 concatenated, requiring only crc1, crc2, and; len2.; */; /* various hacks, don't look :) */; /* deflateInit and inflateInit are macros to allow checking the zlib version; * and the compiler's view of z_stream:; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:4,Deployability,Update,Update,4,"/*; Update a running CRC-32 with the bytes buf[0..len-1] and return the; updated CRC-32. If buf is Z_NULL, this function returns the required; initial value for the crc. Pre- and post-conditioning (one's complement) is; performed within this function so it shouldn't be done by the application. Usage example:. uLong crc = crc32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; crc = crc32(crc, buffer, length);; }; if (crc != original_crc) error();; */; /*; ZEXTERN uLong ZEXPORT crc32_combine OF((uLong crc1, uLong crc2, z_off_t len2));. Combine two CRC-32 check values into one. For two sequences of bytes,; seq1 and seq2 with lengths len1 and len2, CRC-32 check values were; calculated for each, crc1 and crc2. crc32_combine() returns the CRC-32; check value of seq1 and seq2 concatenated, requiring only crc1, crc2, and; len2.; */; /* various hacks, don't look :) */; /* deflateInit and inflateInit are macros to allow checking the zlib version; * and the compiler's view of z_stream:; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:73,Deployability,update,updated,73,"/*; Update a running CRC-32 with the bytes buf[0..len-1] and return the; updated CRC-32. If buf is Z_NULL, this function returns the required; initial value for the crc. Pre- and post-conditioning (one's complement) is; performed within this function so it shouldn't be done by the application. Usage example:. uLong crc = crc32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; crc = crc32(crc, buffer, length);; }; if (crc != original_crc) error();; */; /*; ZEXTERN uLong ZEXPORT crc32_combine OF((uLong crc1, uLong crc2, z_off_t len2));. Combine two CRC-32 check values into one. For two sequences of bytes,; seq1 and seq2 with lengths len1 and len2, CRC-32 check values were; calculated for each, crc1 and crc2. crc32_combine() returns the CRC-32; check value of seq1 and seq2 concatenated, requiring only crc1, crc2, and; len2.; */; /* various hacks, don't look :) */; /* deflateInit and inflateInit are macros to allow checking the zlib version; * and the compiler's view of z_stream:; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:220,Performance,perform,performed,220,"/*; Update a running CRC-32 with the bytes buf[0..len-1] and return the; updated CRC-32. If buf is Z_NULL, this function returns the required; initial value for the crc. Pre- and post-conditioning (one's complement) is; performed within this function so it shouldn't be done by the application. Usage example:. uLong crc = crc32(0L, Z_NULL, 0);. while (read_buffer(buffer, length) != EOF) {; crc = crc32(crc, buffer, length);; }; if (crc != original_crc) error();; */; /*; ZEXTERN uLong ZEXPORT crc32_combine OF((uLong crc1, uLong crc2, z_off_t len2));. Combine two CRC-32 check values into one. For two sequences of bytes,; seq1 and seq2 with lengths len1 and len2, CRC-32 check values were; calculated for each, crc1 and crc2. crc32_combine() returns the CRC-32; check value of seq1 and seq2 concatenated, requiring only crc1, crc2, and; len2.; */; /* various hacks, don't look :) */; /* deflateInit and inflateInit are macros to allow checking the zlib version; * and the compiler's view of z_stream:; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:50,Security,expose,exposed,50,"/* gzgetc() macro and its supporting function and exposed data structure. Note; * that the real internal state is much larger than the exposed structure.; * This abbreviated structure exposes just enough for the gzgetc() macro. The; * user should not mess with these exposed elements, since their names or; * behavior could change in the future, perhaps even capriciously. They can; * only be used by the gzgetc() macro. You have been warned.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:135,Security,expose,exposed,135,"/* gzgetc() macro and its supporting function and exposed data structure. Note; * that the real internal state is much larger than the exposed structure.; * This abbreviated structure exposes just enough for the gzgetc() macro. The; * user should not mess with these exposed elements, since their names or; * behavior could change in the future, perhaps even capriciously. They can; * only be used by the gzgetc() macro. You have been warned.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:184,Security,expose,exposes,184,"/* gzgetc() macro and its supporting function and exposed data structure. Note; * that the real internal state is much larger than the exposed structure.; * This abbreviated structure exposes just enough for the gzgetc() macro. The; * user should not mess with these exposed elements, since their names or; * behavior could change in the future, perhaps even capriciously. They can; * only be used by the gzgetc() macro. You have been warned.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:267,Security,expose,exposed,267,"/* gzgetc() macro and its supporting function and exposed data structure. Note; * that the real internal state is much larger than the exposed structure.; * This abbreviated structure exposes just enough for the gzgetc() macro. The; * user should not mess with these exposed elements, since their names or; * behavior could change in the future, perhaps even capriciously. They can; * only be used by the gzgetc() macro. You have been warned.; */",MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3,Usability,undo,undocumented,3,/* undocumented functions */,MatchSource.CODE_COMMENT,builtins/zlib/zlib.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.h:37,Deployability,configurat,configuration,37,"/* zutil.h -- internal interface and configuration of the compression library; * Copyright (C) 1995-2013 Jean-loup Gailly.; * For conditions of distribution and use, see copyright notice in zlib.h; */; /* WARNING: this file should *not* be used by applications. It is; part of the implementation of the compression library and is; subject to change. Applications should only use zlib.h.; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,builtins/zlib/zutil.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.h:23,Integrability,interface,interface,23,"/* zutil.h -- internal interface and configuration of the compression library; * Copyright (C) 1995-2013 Jean-loup Gailly.; * For conditions of distribution and use, see copyright notice in zlib.h; */; /* WARNING: this file should *not* be used by applications. It is; part of the implementation of the compression library and is; subject to change. Applications should only use zlib.h.; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,builtins/zlib/zutil.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.h:37,Modifiability,config,configuration,37,"/* zutil.h -- internal interface and configuration of the compression library; * Copyright (C) 1995-2013 Jean-loup Gailly.; * For conditions of distribution and use, see copyright notice in zlib.h; */; /* WARNING: this file should *not* be used by applications. It is; part of the implementation of the compression library and is; subject to change. Applications should only use zlib.h.; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,builtins/zlib/zutil.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.h:49,Safety,avoid,avoid,49,/* indexed by 2-zlib_error */; /* (size given to avoid silly warnings with Visual C++) */,MatchSource.CODE_COMMENT,builtins/zlib/zutil.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.h:10,Integrability,depend,dependencies,10,/* target dependencies */,MatchSource.CODE_COMMENT,builtins/zlib/zutil.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:9,Integrability,Depend,Dependencies,9,/*====== Dependencies ======*/,MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:83,Performance,load,load,83,"/* It isn't required but allows to generate better code, saving a function pointer load from the IAT and an indirect jump.*/",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:525,Availability,error,error,525,"/*! ZDICT_trainFromBuffer():; * Train a dictionary from an array of samples.; * Redirect towards ZDICT_optimizeTrainFromBuffer_fastCover() single-threaded, with d=8, steps=4,; * f=20, and accel=1.; * Samples must be stored concatenated in a single flat buffer `samplesBuffer`,; * supplied with an array of sizes `samplesSizes`, providing the size of each sample, in order.; * The resulting dictionary will be saved into `dictBuffer`.; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * Note: Dictionary training will fail if there are not enough samples to construct a; * dictionary, or if most of the samples are too small (< 8 bytes being the lower limit).; * If dictionary training fails, you should use zstd without a dictionary, as the dictionary; * would've been ineffective anyways. If you believe your samples would benefit from a dictionary; * please open an issue with details, and we can look into it.; * Note: ZDICT_trainFromBuffer()'s memory usage is about 6 MB.; * Tips: In general, a reasonable dictionary has a size of ~ 100 KB.; * It's possible to select smaller or larger size, just by specifying `dictBufferCapacity`.; * In general, it's recommended to provide a few thousands samples, though this can vary a lot.; * It's recommended that total size of all samples be about ~x100 times the target size of dictionary.; */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:550,Testability,test,tested,550,"/*! ZDICT_trainFromBuffer():; * Train a dictionary from an array of samples.; * Redirect towards ZDICT_optimizeTrainFromBuffer_fastCover() single-threaded, with d=8, steps=4,; * f=20, and accel=1.; * Samples must be stored concatenated in a single flat buffer `samplesBuffer`,; * supplied with an array of sizes `samplesSizes`, providing the size of each sample, in order.; * The resulting dictionary will be saved into `dictBuffer`.; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * Note: Dictionary training will fail if there are not enough samples to construct a; * dictionary, or if most of the samples are too small (< 8 bytes being the lower limit).; * If dictionary training fails, you should use zstd without a dictionary, as the dictionary; * would've been ineffective anyways. If you believe your samples would benefit from a dictionary; * please open an issue with details, and we can look into it.; * Note: ZDICT_trainFromBuffer()'s memory usage is about 6 MB.; * Tips: In general, a reasonable dictionary has a size of ~ 100 KB.; * It's possible to select smaller or larger size, just by specifying `dictBufferCapacity`.; * In general, it's recommended to provide a few thousands samples, though this can vary a lot.; * It's recommended that total size of all samples be about ~x100 times the target size of dictionary.; */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:4,Performance,optimiz,optimize,4,/*< optimize for a specific zstd compression level; 0 means default */,MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:49,Availability,error,errors,49,/*< Write log to stderr; 0 = none (default); 1 = errors; 2 = progression; 3 = details; 4 = debug; */,MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:10,Testability,log,log,10,/*< Write log to stderr; 0 = none (default); 1 = errors; 2 = progression; 3 = details; 4 = debug; */,MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:1519,Availability,error,error,1519,"/*! ZDICT_finalizeDictionary():; * Given a custom content as a basis for dictionary, and a set of samples,; * finalize dictionary by adding headers and statistics according to the zstd; * dictionary format.; *; * Samples must be stored concatenated in a flat buffer `samplesBuffer`,; * supplied with an array of sizes `samplesSizes`, providing the size of each; * sample in order. The samples are used to construct the statistics, so they; * should be representative of what you will compress with this dictionary.; *; * The compression level can be set in `parameters`. You should pass the; * compression level you expect to use in production. The statistics for each; * compression level differ, so tuning the dictionary for the compression level; * can help quite a bit.; *; * You can set an explicit dictionary ID in `parameters`, or allow us to pick; * a random dictionary ID for you, but we can't guarantee no collisions.; *; * The dstDictBuffer and the dictContent may overlap, and the content will be; * appended to the end of the header. If the header + the content doesn't fit in; * maxDictSize the beginning of the content is truncated to make room, since it; * is presumed that the most profitable content is at the end of the dictionary,; * since that is the cheapest to reference.; *; * `dictContentSize` must be >= ZDICT_CONTENTSIZE_MIN bytes.; * `maxDictSize` must be >= max(dictContentSize, ZSTD_DICTSIZE_MIN).; *; * @return: size of dictionary stored into `dstDictBuffer` (<= `maxDictSize`),; * or an error code, which can be tested by ZDICT_isError().; * Note: ZDICT_finalizeDictionary() will push notifications into stderr if; * instructed to, using notificationLevel>0.; * NOTE: This function currently may fail in several edge cases including:; * * Not enough samples; * * Samples are uncompressible; * * Samples are all exactly the same; */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:1544,Testability,test,tested,1544,"/*! ZDICT_finalizeDictionary():; * Given a custom content as a basis for dictionary, and a set of samples,; * finalize dictionary by adding headers and statistics according to the zstd; * dictionary format.; *; * Samples must be stored concatenated in a flat buffer `samplesBuffer`,; * supplied with an array of sizes `samplesSizes`, providing the size of each; * sample in order. The samples are used to construct the statistics, so they; * should be representative of what you will compress with this dictionary.; *; * The compression level can be set in `parameters`. You should pass the; * compression level you expect to use in production. The statistics for each; * compression level differ, so tuning the dictionary for the compression level; * can help quite a bit.; *; * You can set an explicit dictionary ID in `parameters`, or allow us to pick; * a random dictionary ID for you, but we can't guarantee no collisions.; *; * The dstDictBuffer and the dictContent may overlap, and the content will be; * appended to the end of the header. If the header + the content doesn't fit in; * maxDictSize the beginning of the content is truncated to make room, since it; * is presumed that the most profitable content is at the end of the dictionary,; * since that is the cheapest to reference.; *; * `dictContentSize` must be >= ZDICT_CONTENTSIZE_MIN bytes.; * `maxDictSize` must be >= max(dictContentSize, ZSTD_DICTSIZE_MIN).; *; * @return: size of dictionary stored into `dstDictBuffer` (<= `maxDictSize`),; * or an error code, which can be tested by ZDICT_isError().; * Note: ZDICT_finalizeDictionary() will push notifications into stderr if; * instructed to, using notificationLevel>0.; * NOTE: This function currently may fail in several edge cases including:; * * Not enough samples; * * Samples are uncompressible; * * Samples are all exactly the same; */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:38,Availability,error,error,38,/**< extracts dictID; @return zero if error (not a valid dictionary) */,MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:44,Availability,error,error,44,/* returns dict header size; returns a ZSTD error code on failure */,MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:58,Availability,failure,failure,58,/* returns dict header size; returns a ZSTD error code on failure */,MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:35,Performance,optimiz,optimization,35,/* Number of steps : Only used for optimization : 0 means default (40) : Higher means more parameters checked */,MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:91,Performance,optimiz,optimization,91,/* Number of threads : constraint: 0 < nbThreads : 1 means single-threaded : Only used for optimization : Ignored if ZSTD_MULTITHREAD is not defined */,MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:58,Performance,optimiz,optimization,58,"/* Percentage of samples used for training: Only used for optimization : the first nbSamples * splitPoint samples will be used to training, the last nbSamples * (1 - splitPoint) samples will be used for testing, 0 means default (1.0), 1.0 when all samples are used for both training and testing */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:203,Testability,test,testing,203,"/* Percentage of samples used for training: Only used for optimization : the first nbSamples * splitPoint samples will be used to training, the last nbSamples * (1 - splitPoint) samples will be used for testing, 0 means default (1.0), 1.0 when all samples are used for both training and testing */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:287,Testability,test,testing,287,"/* Percentage of samples used for training: Only used for optimization : the first nbSamples * splitPoint samples will be used to training, the last nbSamples * (1 - splitPoint) samples will be used for testing, 0 means default (1.0), 1.0 when all samples are used for both training and testing */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:3,Testability,log,log,3,/* log of size of frequency array : constraint: 0 < f <= 31 : 1 means default(20)*/,MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:35,Performance,optimiz,optimization,35,/* Number of steps : Only used for optimization : 0 means default (40) : Higher means more parameters checked */,MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:91,Performance,optimiz,optimization,91,/* Number of threads : constraint: 0 < nbThreads : 1 means single-threaded : Only used for optimization : Ignored if ZSTD_MULTITHREAD is not defined */,MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:58,Performance,optimiz,optimization,58,"/* Percentage of samples used for training: Only used for optimization : the first nbSamples * splitPoint samples will be used to training, the last nbSamples * (1 - splitPoint) samples will be used for testing, 0 means default (0.75), 1.0 when all samples are used for both training and testing */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:203,Testability,test,testing,203,"/* Percentage of samples used for training: Only used for optimization : the first nbSamples * splitPoint samples will be used to training, the last nbSamples * (1 - splitPoint) samples will be used for testing, 0 means default (0.75), 1.0 when all samples are used for both training and testing */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:288,Testability,test,testing,288,"/* Percentage of samples used for training: Only used for optimization : the first nbSamples * splitPoint samples will be used to training, the last nbSamples * (1 - splitPoint) samples will be used for testing, 0 means default (0.75), 1.0 when all samples are used for both training and testing */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:437,Availability,error,error,437,"/*! ZDICT_trainFromBuffer_cover():; * Train a dictionary from an array of samples using the COVER algorithm.; * Samples must be stored concatenated in a single flat buffer `samplesBuffer`,; * supplied with an array of sizes `samplesSizes`, providing the size of each sample, in order.; * The resulting dictionary will be saved into `dictBuffer`.; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * See ZDICT_trainFromBuffer() for details on failure modes.; * Note: ZDICT_trainFromBuffer_cover() requires about 9 bytes of memory for each input byte.; * Tips: In general, a reasonable dictionary has a size of ~ 100 KB.; * It's possible to select smaller or larger size, just by specifying `dictBufferCapacity`.; * In general, it's recommended to provide a few thousands samples, though this can vary a lot.; * It's recommended that total size of all samples be about ~x100 times the target size of dictionary.; */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:537,Availability,failure,failure,537,"/*! ZDICT_trainFromBuffer_cover():; * Train a dictionary from an array of samples using the COVER algorithm.; * Samples must be stored concatenated in a single flat buffer `samplesBuffer`,; * supplied with an array of sizes `samplesSizes`, providing the size of each sample, in order.; * The resulting dictionary will be saved into `dictBuffer`.; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * See ZDICT_trainFromBuffer() for details on failure modes.; * Note: ZDICT_trainFromBuffer_cover() requires about 9 bytes of memory for each input byte.; * Tips: In general, a reasonable dictionary has a size of ~ 100 KB.; * It's possible to select smaller or larger size, just by specifying `dictBufferCapacity`.; * In general, it's recommended to provide a few thousands samples, though this can vary a lot.; * It's recommended that total size of all samples be about ~x100 times the target size of dictionary.; */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:462,Testability,test,tested,462,"/*! ZDICT_trainFromBuffer_cover():; * Train a dictionary from an array of samples using the COVER algorithm.; * Samples must be stored concatenated in a single flat buffer `samplesBuffer`,; * supplied with an array of sizes `samplesSizes`, providing the size of each sample, in order.; * The resulting dictionary will be saved into `dictBuffer`.; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * See ZDICT_trainFromBuffer() for details on failure modes.; * Note: ZDICT_trainFromBuffer_cover() requires about 9 bytes of memory for each input byte.; * Tips: In general, a reasonable dictionary has a size of ~ 100 KB.; * It's possible to select smaller or larger size, just by specifying `dictBufferCapacity`.; * In general, it's recommended to provide a few thousands samples, though this can vary a lot.; * It's recommended that total size of all samples be about ~x100 times the target size of dictionary.; */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:746,Availability,error,error,746,"/*! ZDICT_optimizeTrainFromBuffer_cover():; * The same requirements as above hold for all the parameters except `parameters`.; * This function tries many parameter combinations and picks the best parameters.; * `*parameters` is filled with the best parameters found,; * dictionary constructed with those parameters is stored in `dictBuffer`.; *; * All of the parameters d, k, steps are optional.; * If d is non-zero then we don't check multiple values of d, otherwise we check d = {6, 8}.; * if steps is zero it defaults to its default value.; * If k is non-zero then we don't check multiple values of k, otherwise we check steps values in [50, 2000].; *; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * On success `*parameters` contains the parameters selected.; * See ZDICT_trainFromBuffer() for details on failure modes.; * Note: ZDICT_optimizeTrainFromBuffer_cover() requires about 8 bytes of memory for each input byte and additionally another 5 bytes of memory for each byte of memory for each thread.; */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:908,Availability,failure,failure,908,"/*! ZDICT_optimizeTrainFromBuffer_cover():; * The same requirements as above hold for all the parameters except `parameters`.; * This function tries many parameter combinations and picks the best parameters.; * `*parameters` is filled with the best parameters found,; * dictionary constructed with those parameters is stored in `dictBuffer`.; *; * All of the parameters d, k, steps are optional.; * If d is non-zero then we don't check multiple values of d, otherwise we check d = {6, 8}.; * if steps is zero it defaults to its default value.; * If k is non-zero then we don't check multiple values of k, otherwise we check steps values in [50, 2000].; *; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * On success `*parameters` contains the parameters selected.; * See ZDICT_trainFromBuffer() for details on failure modes.; * Note: ZDICT_optimizeTrainFromBuffer_cover() requires about 8 bytes of memory for each input byte and additionally another 5 bytes of memory for each byte of memory for each thread.; */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:771,Testability,test,tested,771,"/*! ZDICT_optimizeTrainFromBuffer_cover():; * The same requirements as above hold for all the parameters except `parameters`.; * This function tries many parameter combinations and picks the best parameters.; * `*parameters` is filled with the best parameters found,; * dictionary constructed with those parameters is stored in `dictBuffer`.; *; * All of the parameters d, k, steps are optional.; * If d is non-zero then we don't check multiple values of d, otherwise we check d = {6, 8}.; * if steps is zero it defaults to its default value.; * If k is non-zero then we don't check multiple values of k, otherwise we check steps values in [50, 2000].; *; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * On success `*parameters` contains the parameters selected.; * See ZDICT_trainFromBuffer() for details on failure modes.; * Note: ZDICT_optimizeTrainFromBuffer_cover() requires about 8 bytes of memory for each input byte and additionally another 5 bytes of memory for each byte of memory for each thread.; */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:562,Availability,error,error,562,"/*! ZDICT_trainFromBuffer_fastCover():; * Train a dictionary from an array of samples using a modified version of COVER algorithm.; * Samples must be stored concatenated in a single flat buffer `samplesBuffer`,; * supplied with an array of sizes `samplesSizes`, providing the size of each sample, in order.; * d and k are required.; * All other parameters are optional, will use default values if not provided; * The resulting dictionary will be saved into `dictBuffer`.; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * See ZDICT_trainFromBuffer() for details on failure modes.; * Note: ZDICT_trainFromBuffer_fastCover() requires 6 * 2^f bytes of memory.; * Tips: In general, a reasonable dictionary has a size of ~ 100 KB.; * It's possible to select smaller or larger size, just by specifying `dictBufferCapacity`.; * In general, it's recommended to provide a few thousands samples, though this can vary a lot.; * It's recommended that total size of all samples be about ~x100 times the target size of dictionary.; */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:662,Availability,failure,failure,662,"/*! ZDICT_trainFromBuffer_fastCover():; * Train a dictionary from an array of samples using a modified version of COVER algorithm.; * Samples must be stored concatenated in a single flat buffer `samplesBuffer`,; * supplied with an array of sizes `samplesSizes`, providing the size of each sample, in order.; * d and k are required.; * All other parameters are optional, will use default values if not provided; * The resulting dictionary will be saved into `dictBuffer`.; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * See ZDICT_trainFromBuffer() for details on failure modes.; * Note: ZDICT_trainFromBuffer_fastCover() requires 6 * 2^f bytes of memory.; * Tips: In general, a reasonable dictionary has a size of ~ 100 KB.; * It's possible to select smaller or larger size, just by specifying `dictBufferCapacity`.; * In general, it's recommended to provide a few thousands samples, though this can vary a lot.; * It's recommended that total size of all samples be about ~x100 times the target size of dictionary.; */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:587,Testability,test,tested,587,"/*! ZDICT_trainFromBuffer_fastCover():; * Train a dictionary from an array of samples using a modified version of COVER algorithm.; * Samples must be stored concatenated in a single flat buffer `samplesBuffer`,; * supplied with an array of sizes `samplesSizes`, providing the size of each sample, in order.; * d and k are required.; * All other parameters are optional, will use default values if not provided; * The resulting dictionary will be saved into `dictBuffer`.; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * See ZDICT_trainFromBuffer() for details on failure modes.; * Note: ZDICT_trainFromBuffer_fastCover() requires 6 * 2^f bytes of memory.; * Tips: In general, a reasonable dictionary has a size of ~ 100 KB.; * It's possible to select smaller or larger size, just by specifying `dictBufferCapacity`.; * In general, it's recommended to provide a few thousands samples, though this can vary a lot.; * It's recommended that total size of all samples be about ~x100 times the target size of dictionary.; */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:893,Availability,error,error,893,"/*! ZDICT_optimizeTrainFromBuffer_fastCover():; * The same requirements as above hold for all the parameters except `parameters`.; * This function tries many parameter combinations (specifically, k and d combinations); * and picks the best parameters. `*parameters` is filled with the best parameters found,; * dictionary constructed with those parameters is stored in `dictBuffer`.; * All of the parameters d, k, steps, f, and accel are optional.; * If d is non-zero then we don't check multiple values of d, otherwise we check d = {6, 8}.; * if steps is zero it defaults to its default value.; * If k is non-zero then we don't check multiple values of k, otherwise we check steps values in [50, 2000].; * If f is zero, default value of 20 is used.; * If accel is zero, default value of 1 is used.; *; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * On success `*parameters` contains the parameters selected.; * See ZDICT_trainFromBuffer() for details on failure modes.; * Note: ZDICT_optimizeTrainFromBuffer_fastCover() requires about 6 * 2^f bytes of memory for each thread.; */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:1055,Availability,failure,failure,1055,"/*! ZDICT_optimizeTrainFromBuffer_fastCover():; * The same requirements as above hold for all the parameters except `parameters`.; * This function tries many parameter combinations (specifically, k and d combinations); * and picks the best parameters. `*parameters` is filled with the best parameters found,; * dictionary constructed with those parameters is stored in `dictBuffer`.; * All of the parameters d, k, steps, f, and accel are optional.; * If d is non-zero then we don't check multiple values of d, otherwise we check d = {6, 8}.; * if steps is zero it defaults to its default value.; * If k is non-zero then we don't check multiple values of k, otherwise we check steps values in [50, 2000].; * If f is zero, default value of 20 is used.; * If accel is zero, default value of 1 is used.; *; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * On success `*parameters` contains the parameters selected.; * See ZDICT_trainFromBuffer() for details on failure modes.; * Note: ZDICT_optimizeTrainFromBuffer_fastCover() requires about 6 * 2^f bytes of memory for each thread.; */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:918,Testability,test,tested,918,"/*! ZDICT_optimizeTrainFromBuffer_fastCover():; * The same requirements as above hold for all the parameters except `parameters`.; * This function tries many parameter combinations (specifically, k and d combinations); * and picks the best parameters. `*parameters` is filled with the best parameters found,; * dictionary constructed with those parameters is stored in `dictBuffer`.; * All of the parameters d, k, steps, f, and accel are optional.; * If d is non-zero then we don't check multiple values of d, otherwise we check d = {6, 8}.; * if steps is zero it defaults to its default value.; * If k is non-zero then we don't check multiple values of k, otherwise we check steps values in [50, 2000].; * If f is zero, default value of 20 is used.; * If accel is zero, default value of 1 is used.; *; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * On success `*parameters` contains the parameters selected.; * See ZDICT_trainFromBuffer() for details on failure modes.; * Note: ZDICT_optimizeTrainFromBuffer_fastCover() requires about 6 * 2^f bytes of memory for each thread.; */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:500,Availability,error,error,500,"/*! ZDICT_trainFromBuffer_legacy():; * Train a dictionary from an array of samples.; * Samples must be stored concatenated in a single flat buffer `samplesBuffer`,; * supplied with an array of sizes `samplesSizes`, providing the size of each sample, in order.; * The resulting dictionary will be saved into `dictBuffer`.; * `parameters` is optional and can be provided with values set to 0 to mean ""default"".; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * See ZDICT_trainFromBuffer() for details on failure modes.; * Tips: In general, a reasonable dictionary has a size of ~ 100 KB.; * It's possible to select smaller or larger size, just by specifying `dictBufferCapacity`.; * In general, it's recommended to provide a few thousands samples, though this can vary a lot.; * It's recommended that total size of all samples be about ~x100 times the target size of dictionary.; * Note: ZDICT_trainFromBuffer_legacy() will send notifications into stderr if instructed to, using notificationLevel>0.; */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:600,Availability,failure,failure,600,"/*! ZDICT_trainFromBuffer_legacy():; * Train a dictionary from an array of samples.; * Samples must be stored concatenated in a single flat buffer `samplesBuffer`,; * supplied with an array of sizes `samplesSizes`, providing the size of each sample, in order.; * The resulting dictionary will be saved into `dictBuffer`.; * `parameters` is optional and can be provided with values set to 0 to mean ""default"".; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * See ZDICT_trainFromBuffer() for details on failure modes.; * Tips: In general, a reasonable dictionary has a size of ~ 100 KB.; * It's possible to select smaller or larger size, just by specifying `dictBufferCapacity`.; * In general, it's recommended to provide a few thousands samples, though this can vary a lot.; * It's recommended that total size of all samples be about ~x100 times the target size of dictionary.; * Note: ZDICT_trainFromBuffer_legacy() will send notifications into stderr if instructed to, using notificationLevel>0.; */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h:525,Testability,test,tested,525,"/*! ZDICT_trainFromBuffer_legacy():; * Train a dictionary from an array of samples.; * Samples must be stored concatenated in a single flat buffer `samplesBuffer`,; * supplied with an array of sizes `samplesSizes`, providing the size of each sample, in order.; * The resulting dictionary will be saved into `dictBuffer`.; * `parameters` is optional and can be provided with values set to 0 to mean ""default"".; * @return: size of dictionary stored into `dictBuffer` (<= `dictBufferCapacity`); * or an error code, which can be tested with ZDICT_isError().; * See ZDICT_trainFromBuffer() for details on failure modes.; * Tips: In general, a reasonable dictionary has a size of ~ 100 KB.; * It's possible to select smaller or larger size, just by specifying `dictBufferCapacity`.; * In general, it's recommended to provide a few thousands samples, though this can vary a lot.; * It's recommended that total size of all samples be about ~x100 times the target size of dictionary.; * Note: ZDICT_trainFromBuffer_legacy() will send notifications into stderr if instructed to, using notificationLevel>0.; */",MatchSource.CODE_COMMENT,builtins/zstd/zdict.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zdict.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:10,Integrability,Depend,Dependency,10,/* ====== Dependency ======*/,MatchSource.CODE_COMMENT,builtins/zstd/zstd.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:83,Performance,load,load,83,"/* It isn't required but allows to generate better code, saving a function pointer load from the IAT and an indirect jump.*/",MatchSource.CODE_COMMENT,builtins/zstd/zstd.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:599,Modifiability,extend,extend,599,"/*******************************************************************************; Introduction. zstd, short for Zstandard, is a fast lossless compression algorithm, targeting; real-time compression scenarios at zlib-level and better compression ratios.; The zstd compression library provides in-memory compression and decompression; functions. The library supports regular compression levels from 1 up to ZSTD_maxCLevel(),; which is currently 22. Levels >= 20, labeled `--ultra`, should be used with; caution, as they require more memory. The library also offers negative; compression levels, which extend the range of speed vs. ratio preferences.; The lower the level, the faster the speed (at the cost of compression). Compression can be done in:; - a single step (described as Simple API); - a single step, reusing a context (described as Explicit context); - unbounded multiple steps (described as Streaming compression). The compression ratio achievable on small data can be highly improved using; a dictionary. Dictionary compression can be performed in:; - a single step (described as Simple dictionary API); - a single step, reusing a dictionary (described as Bulk-processing; dictionary API). Advanced experimental functions can be accessed using; `#define ZSTD_STATIC_LINKING_ONLY` before including zstd.h. Advanced experimental APIs should never be used with a dynamically-linked; library. They are not ""stable""; their definitions or signatures may change in; the future. Only static linking is allowed.; *******************************************************************************/; /*------ Version ------*/",MatchSource.CODE_COMMENT,builtins/zstd/zstd.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h
https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:1047,Performance,perform,performed,1047,"/*******************************************************************************; Introduction. zstd, short for Zstandard, is a fast lossless compression algorithm, targeting; real-time compression scenarios at zlib-level and better compression ratios.; The zstd compression library provides in-memory compression and decompression; functions. The library supports regular compression levels from 1 up to ZSTD_maxCLevel(),; which is currently 22. Levels >= 20, labeled `--ultra`, should be used with; caution, as they require more memory. The library also offers negative; compression levels, which extend the range of speed vs. ratio preferences.; The lower the level, the faster the speed (at the cost of compression). Compression can be done in:; - a single step (described as Simple API); - a single step, reusing a context (described as Explicit context); - unbounded multiple steps (described as Streaming compression). The compression ratio achievable on small data can be highly improved using; a dictionary. Dictionary compression can be performed in:; - a single step (described as Simple dictionary API); - a single step, reusing a dictionary (described as Bulk-processing; dictionary API). Advanced experimental functions can be accessed using; `#define ZSTD_STATIC_LINKING_ONLY` before including zstd.h. Advanced experimental APIs should never be used with a dynamically-linked; library. They are not ""stable""; their definitions or signatures may change in; the future. Only static linking is allowed.; *******************************************************************************/; /*------ Version ------*/",MatchSource.CODE_COMMENT,builtins/zstd/zstd.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h
