quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Energy Efficiency,/// Return the smallest possible amount of storage that might be allocated; /// starting from the beginning of an object of a particular class.; ///; /// This may be smaller than sizeof(RD) if RD has virtual base classes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGClass.cpp:65,allocate,allocated,65,interpreter/llvm-project/clang/lib/CodeGen/CGClass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGClass.cpp,1,['allocate'],['allocated']
Energy Efficiency,/// Return the stage for a scheduled instruction. Return -1 if; /// the instruction has not been scheduled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h:27,schedul,scheduled,27,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,2,['schedul'],['scheduled']
Energy Efficiency,"/// Return the stage that MI is scheduled in, or -1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h:32,schedul,scheduled,32,interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h,1,['schedul'],['scheduled']
Energy Efficiency,"/// Return the start of the list of BundleOpInfo instances associated; /// with this OperandBundleUser.; ///; /// OperandBundleUser uses the descriptor area co-allocated with the host User; /// to store some meta information about which operands are ""normal"" operands,; /// and which ones belong to some operand bundle.; ///; /// The layout of an operand bundle user is; ///; /// +-----------uint32_t End-------------------------------------+; /// | |; /// | +--------uint32_t Begin--------------------+ |; /// | | | |; /// ^ ^ v v; /// |------|------|----|----|----|----|----|---------|----|---------|----|-----; /// | BOI0 | BOI1 | .. | DU | U0 | U1 | .. | BOI0_U0 | .. | BOI1_U0 | .. | Un; /// |------|------|----|----|----|----|----|---------|----|---------|----|-----; /// v v ^ ^; /// | | | |; /// | +--------uint32_t Begin------------+ |; /// | |; /// +-----------uint32_t End-----------------------------+; ///; ///; /// BOI0, BOI1 ... are descriptions of operand bundles in this User's use; /// list. These descriptions are installed and managed by this class, and; /// they're all instances of OperandBundleUser<T>::BundleOpInfo.; ///; /// DU is an additional descriptor installed by User's 'operator new' to keep; /// track of the 'BOI0 ... BOIN' co-allocation. OperandBundleUser does not; /// access or modify DU in any way, it's an implementation detail private to; /// User.; ///; /// The regular Use& vector for the User starts at U0. The operand bundle; /// uses are part of the Use& vector, just like normal uses. In the diagram; /// above, the operand bundle uses start at BOI0_U0. Each instance of; /// BundleOpInfo has information about a contiguous set of uses constituting; /// an operand bundle, and the total set of operand bundle uses themselves; /// form a contiguous set of uses (i.e. there are no gaps between uses; /// corresponding to individual operand bundles).; ///; /// This class does not know the location of the set of operand bundle uses; /// within the use list ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/InstrTypes.h:160,allocate,allocated,160,interpreter/llvm-project/llvm/include/llvm/IR/InstrTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/InstrTypes.h,1,['allocate'],['allocated']
Energy Efficiency,/// Return the total amount of memory allocated for managing selectors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/IdentifierTable.h:38,allocate,allocated,38,interpreter/llvm-project/clang/include/clang/Basic/IdentifierTable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/IdentifierTable.h,1,['allocate'],['allocated']
Energy Efficiency,/// Return the total amount of physical memory allocated for representing; /// AST nodes and type information.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTContext.h:47,allocate,allocated,47,interpreter/llvm-project/clang/include/clang/AST/ASTContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTContext.h,1,['allocate'],['allocated']
Energy Efficiency,/// Return the type that is being allocated by the instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h:34,allocate,allocated,34,interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,1,['allocate'],['allocated']
Energy Efficiency,"/// Return true for pseudo instructions that don't consume any; /// machine resources in their current form. These are common cases that the; /// scheduler should consider free, rather than conservatively handling them; /// as instructions with no itinerary.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h:146,schedul,scheduler,146,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,1,['schedul'],['scheduler']
Energy Efficiency,"/// Return true if each element of the vector value \p V is poisoned or equal to; /// every other non-poisoned element. If an index element is specified, either; /// every element of the vector is poisoned or the element at that index is not; /// poisoned and equal to every other non-poisoned element.; /// This may be more powerful than the related getSplatValue() because it is; /// not limited by finding a scalar source value to a splatted vector.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/VectorUtils.h:325,power,powerful,325,interpreter/llvm-project/llvm/include/llvm/Analysis/VectorUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/VectorUtils.h,1,['power'],['powerful']
Energy Efficiency,/// Return true if inserting a scalar into a variable element of an undef; /// vector is more efficiently handled by splatting the scalar instead.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:94,efficient,efficiently,94,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,1,['efficient'],['efficiently']
Energy Efficiency,/// Return true if it is beneficial to convert a load of a constant to; /// just the constant itself.; /// On some targets it might be more efficient to use a combination of; /// arithmetic instructions to materialize the constant instead of loading it; /// from a constant pool.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:140,efficient,efficient,140,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,1,['efficient'],['efficient']
Energy Efficiency,/// Return true if it is profitable to reduce a load to a smaller type.; /// Example: (i16 (trunc (i32 (load x))) -> i16 load x,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:39,reduce,reduce,39,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,1,['reduce'],['reduce']
Energy Efficiency,/// Return true if target supports reassociation of instructions in machine; /// combiner pass to reduce register pressure for a given BB.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h:98,reduce,reduce,98,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,1,['reduce'],['reduce']
Energy Efficiency,/// Return true if the argument is a power of two > 0 (64 bit edition.),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MathExtras.h:37,power,power,37,interpreter/llvm-project/llvm/include/llvm/Support/MathExtras.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MathExtras.h,1,['power'],['power']
Energy Efficiency,/// Return true if the argument is a power of two > 0.; /// Ex. isPowerOf2_32(0x00100000U) == true (32 bit edition.),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MathExtras.h:37,power,power,37,interpreter/llvm-project/llvm/include/llvm/Support/MathExtras.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MathExtras.h,1,['power'],['power']
Energy Efficiency,"/// Return true if the control flow in \p RPOTraversal is irreducible.; ///; /// This is a generic implementation to detect CFG irreducibility based on loop; /// info analysis. It can be used for any kind of CFG (Loop, MachineLoop,; /// Function, MachineFunction, etc.) by providing an RPO traversal (\p; /// RPOTraversal) and the loop info analysis (\p LI) of the CFG. This utility; /// function is only recommended when loop info analysis is available. If loop; /// info analysis isn't available, please, don't compute it explicitly for this; /// purpose. There are more efficient ways to detect CFG irreducibility that; /// don't require recomputing loop info analysis (e.g., T1/T2 or Tarjan's; /// algorithm).; ///; /// Requirements:; /// 1) GraphTraits must be implemented for NodeT type. It is used to access; /// NodeT successors.; // 2) \p RPOTraversal must be a valid reverse post-order traversal of the; /// target CFG with begin()/end() iterator interfaces.; /// 3) \p LI must be a valid LoopInfoBase that contains up-to-date loop; /// analysis information of the CFG.; ///; /// This algorithm uses the information about reducible loop back-edges already; /// computed in \p LI. When a back-edge is found during the RPO traversal, the; /// algorithm checks whether the back-edge is one of the reducible back-edges in; /// loop info. If it isn't, the CFG is irreducible. For example, for the CFG; /// below (canonical irreducible graph) loop info won't contain any loop, so the; /// algorithm will return that the CFG is irreducible when checking the B <-; /// -> C back-edge.; ///; /// (A->B, A->C, B->C, C->B, C->D); /// A; /// / \; /// B<- ->C; /// |; /// D; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CFG.h:573,efficient,efficient,573,interpreter/llvm-project/llvm/include/llvm/Analysis/CFG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CFG.h,1,['efficient'],['efficient']
Energy Efficiency,"/// Return true if the following transform is beneficial:; /// fold (conv (load x)) -> (load (conv*)x); /// On architectures that don't natively support some vector loads; /// efficiently, casting the load to a smaller vector of larger types and; /// loading is more efficient, however, this can be undone by optimizations in; /// dag combiner.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:176,efficient,efficiently,176,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,2,['efficient'],"['efficient', 'efficiently']"
Energy Efficiency,/// Return true if the given SDNode can be copied during scheduling; /// even if it has glue.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h:57,schedul,scheduling,57,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// Return true if the given value is known to have exactly one bit set when; /// defined. For vectors return true if every element is known to be a power; /// of two when defined. Supports values with integer or pointer type and; /// vectors of integers. If 'OrZero' is set, then return true if the given; /// value is either a power of two or zero.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ValueTracking.h:149,power,power,149,interpreter/llvm-project/llvm/include/llvm/Analysis/ValueTracking.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ValueTracking.h,2,['power'],['power']
Energy Efficiency,/// Return true if the given value is known to have exactly one; /// bit set when defined. For vectors return true if every element is known to; /// be a power of two when defined. Supports values with integer or pointer; /// types and vectors of integers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp:154,power,power,154,interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,1,['power'],['power']
Energy Efficiency,/// Return true if the instruction is scheduled at the specified stage.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h:38,schedul,scheduled,38,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,1,['schedul'],['scheduled']
Energy Efficiency,"/// Return true if the instruction may have side effects.; ///; /// Side effects are:; /// * Writing to memory.; /// * Unwinding.; /// * Not returning (e.g. an infinite loop).; ///; /// Note that this does not consider malloc and alloca to have side; /// effects because the newly allocated memory is completely invisible to; /// instructions which don't use the returned value. For cases where this; /// matters, isSafeToSpeculativelyExecute may be more appropriate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instruction.h:281,allocate,allocated,281,interpreter/llvm-project/llvm/include/llvm/IR/Instruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instruction.h,1,['allocate'],['allocated']
Energy Efficiency,/// Return true if the loop kernel has been scheduled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h:44,schedul,scheduled,44,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,1,['schedul'],['scheduled']
Energy Efficiency,"/// Return true if the loop strength reduce pass should make; /// Instruction* based TTI queries to isLegalAddressingMode(). This is; /// needed on SystemZ, where e.g. a memcpy can only have a 12 bit unsigned; /// immediate offset and no index register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h:37,reduce,reduce,37,interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,1,['reduce'],['reduce']
Energy Efficiency,/// Return true if the object was pre-allocated into the local block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h:38,allocate,allocated,38,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,1,['allocate'],['allocated']
Energy Efficiency,/// Return true if the proposed schedule should used. Otherwise return; /// false to not pipeline the loop. This function should be used to ensure; /// that pipelined loops meet target-specific quality heuristics.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h:32,schedul,schedule,32,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,1,['schedul'],['schedule']
Energy Efficiency,/// Return true if the re-scheduling will put the given instruction too close; /// to the defs of its register dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp:26,schedul,scheduling,26,interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,1,['schedul'],['scheduling']
Energy Efficiency,/// Return true if the scheduled Phi has a loop carried operand.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:23,schedul,scheduled,23,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['schedul'],['scheduled']
Energy Efficiency,/// Return true if the set contains any qualifiers which require an ExtQuals; /// node to be allocated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h:93,allocate,allocated,93,interpreter/llvm-project/clang/include/clang/AST/Type.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h,1,['allocate'],['allocated']
Energy Efficiency,/// Return true if the size is a power-of-two number of bytes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ValueTypes.h:33,power,power-of-two,33,interpreter/llvm-project/llvm/include/llvm/CodeGen/ValueTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ValueTypes.h,1,['power'],['power-of-two']
Energy Efficiency,/// Return true if the specified instruction is in the Inst list.; ///; /// The Insts list is the one passed into the constructor. Clients should; /// implement this with a more efficient version if possible.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdater.h:178,efficient,efficient,178,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdater.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/SSAUpdater.h,1,['efficient'],['efficient']
Energy Efficiency,"/// Return true if the target should transform:; /// (X & Y) == Y ---> (~X & Y) == 0; /// (X & Y) != Y ---> (~X & Y) != 0; ///; /// This may be profitable if the target has a bitwise and-not operation that; /// sets comparison flags. A target may want to limit the transformation based; /// on the type of Y or if Y is a constant.; ///; /// Note that the transform will not occur if Y is known to be a power-of-2; /// because a mask and compare of a single bit can be handled by inverting the; /// predicate, for example:; /// (X & 8) == 8 ---> (X & 8) != 0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:402,power,power-of-,402,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,1,['power'],['power-of-']
Energy Efficiency,"/// Return true if this instruction requires custom insertion support; /// when the DAG scheduler is inserting it into a machine basic block. If; /// this is true for the instruction, it basically means that it is a pseudo; /// instruction used at SelectionDAG time that is expanded out into magic code; /// by the target when MachineInstrs are formed.; ///; /// If this is true, the TargetLoweringInfo::InsertAtEndOfBasicBlock method; /// is used to insert this into the MachineBasicBlock.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrDesc.h:88,schedul,scheduler,88,interpreter/llvm-project/llvm/include/llvm/MC/MCInstrDesc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrDesc.h,1,['schedul'],['scheduler']
Energy Efficiency,"/// Return true if this instruction requires; /// custom insertion support when the DAG scheduler is inserting it into a; /// machine basic block. If this is true for the instruction, it basically; /// means that it is a pseudo instruction used at SelectionDAG time that is; /// expanded out into magic code by the target when MachineInstrs are formed.; ///; /// If this is true, the TargetLoweringInfo::InsertAtEndOfBasicBlock method; /// is used to insert this into the MachineBasicBlock.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineInstr.h:88,schedul,scheduler,88,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineInstr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineInstr.h,1,['schedul'],['scheduler']
Energy Efficiency,"/// Return true if this is a 2-address instruction which can be changed; /// into a 3-address instruction if needed. Doing this transformation can be; /// profitable in the register allocator, because it means that the; /// instruction can use a 2-address form if possible, but degrade into a less; /// efficient form if the source and dest register cannot be assigned to the; /// same register. For example, this allows the x86 backend to turn a ""shl; /// reg, 3"" instruction into an LEA instruction, which is the same speed as; /// the shift but has bigger code size.; ///; /// If this returns true, then the target must implement the; /// TargetInstrInfo::convertToThreeAddress method for this instruction, which; /// is allowed to fail if the transformation isn't valid for this specific; /// instruction (e.g. shl reg, 4 on x86).; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrDesc.h:303,efficient,efficient,303,interpreter/llvm-project/llvm/include/llvm/MC/MCInstrDesc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrDesc.h,1,['efficient'],['efficient']
Energy Efficiency,"/// Return true if this is a 2-address instruction; /// which can be changed into a 3-address instruction if needed. Doing this; /// transformation can be profitable in the register allocator, because it; /// means that the instruction can use a 2-address form if possible, but; /// degrade into a less efficient form if the source and dest register cannot; /// be assigned to the same register. For example, this allows the x86; /// backend to turn a ""shl reg, 3"" instruction into an LEA instruction, which; /// is the same speed as the shift but has bigger code size.; ///; /// If this returns true, then the target must implement the; /// TargetInstrInfo::convertToThreeAddress method for this instruction, which; /// is allowed to fail if the transformation isn't valid for this specific; /// instruction (e.g. shl reg, 4 on x86).; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineInstr.h:303,efficient,efficient,303,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineInstr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineInstr.h,1,['efficient'],['efficient']
Energy Efficiency,/// Return true if this is a smallvector which has not had dynamic; /// memory allocated for it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h:79,allocate,allocated,79,interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h,1,['allocate'],['allocated']
Energy Efficiency,"/// Return true if this is a smallvector which has not had dynamic; /// memory allocated for it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx:79,allocate,allocated,79,math/vecops/inc/ROOT/RVec.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx,1,['allocate'],['allocated']
Energy Efficiency,/// Return true if this is powerpc long double.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Type.h:27,power,powerpc,27,interpreter/llvm-project/llvm/include/llvm/IR/Type.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Type.h,1,['power'],['powerpc']
Energy Efficiency,/// Return true if this machine model data for all instructions with a; /// scheduling class (itinerary class or SchedRW list).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h:76,schedul,scheduling,76,interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,1,['schedul'],['scheduling']
Energy Efficiency,/// Return true if this machine model includes an instruction-level; /// scheduling model or cycle-to-cycle itinerary data.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSchedule.h:73,schedul,scheduling,73,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSchedule.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// Return true if this machine model includes an instruction-level; /// scheduling model.; ///; /// This is more detailed than the course grain IssueWidth and default; /// latency properties, but separate from the per-cycle itinerary data.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSchedule.h:73,schedul,scheduling,73,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSchedule.h,1,['schedul'],['scheduling']
Energy Efficiency,/// Return true if this machine model includes cycle-to-cycle itinerary; /// data.; ///; /// This models scheduling at each stage in the processor pipeline.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSchedule.h:105,schedul,scheduling,105,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSchedule.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// Return true if this operand (which must be a chain) reaches the; /// specified operand without crossing any side-effecting instructions.; /// In practice, this looks through token factors and non-volatile loads.; /// In order to remain efficient, this only; /// looks a couple of nodes in, it does not do an exhaustive search.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAGNodes.h:240,efficient,efficient,240,interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAGNodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAGNodes.h,1,['efficient'],['efficient']
Energy Efficiency,/// Return true if we believe it is correct and profitable to reduce the; /// load node to a smaller type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.h:62,reduce,reduce,62,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.h,1,['reduce'],['reduce']
Energy Efficiency,"/// Return true if we can evaluate the specified expression tree as type Ty; /// instead of its larger type, and arrive with the same value.; /// This is used by code that tries to eliminate truncates.; ///; /// Ty will always be a type smaller than V. We should return true if trunc(V); /// can be computed by computing V in the smaller type. If V is an instruction,; /// then trunc(inst(x,y)) can be computed as inst(trunc(x),trunc(y)), which only; /// makes sense if x and y can be efficiently truncated.; ///; /// This function works on both vectors and scalars.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp:485,efficient,efficiently,485,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp,1,['efficient'],['efficiently']
Energy Efficiency,"/// Return true if we can prove that the given load (which is assumed to be; /// within the specified loop) would access only dereferenceable memory, and; /// be properly aligned on every iteration of the specified loop regardless of; /// its placement within the loop. (i.e. does not require predication beyond; /// that required by the header itself and could be hoisted into the header; /// if desired.) This is more powerful than the variants above when the; /// address loaded from is analyzeable by SCEV.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/Loads.h:420,power,powerful,420,interpreter/llvm-project/llvm/include/llvm/Analysis/Loads.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/Loads.h,1,['power'],['powerful']
Energy Efficiency,/// Return true if we can simplify X / Y to 0. Remainder can adapt that answer; /// to simplify X % Y to X.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:61,adapt,adapt,61,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['adapt'],['adapt']
Energy Efficiency,"/// Return true of the given instruction should not be included in a scheduling; /// region.; ///; /// MachineScheduler does not currently support scheduling across calls. To; /// handle calls, the DAG builder needs to be modified to create register; /// anti/output dependencies on the registers clobbered by the call's regmask; /// operand. In PreRA scheduling, the stack pointer adjustment already prevents; /// scheduling across calls. In PostRA scheduling, we need the isCall to enforce; /// the boundary, but there would be no benefit to postRA scheduling across; /// calls this late anyway.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:69,schedul,scheduling,69,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,6,['schedul'],['scheduling']
Energy Efficiency,/// Return true only if vscale must be a power of two.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:41,power,power,41,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,1,['power'],['power']
Energy Efficiency,"/// Return value of buffer fraction applied in FFT calculation array beyond either; /// end of the observable domain to reduce cyclical effects",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFFTConvPdf.h:120,reduce,reduce,120,roofit/roofitcore/inc/RooFFTConvPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFFTConvPdf.h,1,['reduce'],['reduce']
Energy Efficiency,"/// Returns a bitset indexed by physical register number indicating if a; /// register is a special register that has particular uses and should be; /// considered unavailable at all times, e.g. stack pointer, return address.; /// A reserved register:; /// - is not allocatable; /// - is considered always live; /// - is ignored by liveness tracking; /// It is often necessary to reserve the super registers of a reserved; /// register as well, to avoid them getting allocated indirectly. You may use; /// markSuperRegs() and checkAllSuperRegsMarked() in this case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h:467,allocate,allocated,467,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h,1,['allocate'],['allocated']
Energy Efficiency,/// Returns a fresh newly allocated DIELoc.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.h:26,allocate,allocated,26,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.h,1,['allocate'],['allocated']
Energy Efficiency,/// Returns a label for an SUnit node in a visualization of the ScheduleDAG.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:64,Schedul,ScheduleDAG,64,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['Schedul'],['ScheduleDAG']
Energy Efficiency,"/// Returns a pointer to a newly allocated MemoryBuffer that contains the; /// object which corresponds with Module M, or 0 if an object is not; /// available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ObjectCache.h:33,allocate,allocated,33,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ObjectCache.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ObjectCache.h,1,['allocate'],['allocated']
Energy Efficiency,"/// Returns a thread strategy for tasks requiring significant memory or other; /// resources. To be used for workloads where hardware_concurrency() proves to; /// be less efficient. Avoid this strategy if doing lots of I/O. Currently; /// based on physical cores, if available for the host system, otherwise falls; /// back to hardware_concurrency(). Returns 1 when LLVM is configured with; /// LLVM_ENABLE_THREADS = OFF.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Threading.h:171,efficient,efficient,171,interpreter/llvm-project/llvm/include/llvm/Support/Threading.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Threading.h,1,['efficient'],['efficient']
Energy Efficiency,/// Returns an LLVM function to call for initializing loop bounds using OpenMP; /// dynamic scheduling depending on `type`. Only i32 and i64 are supported by; /// the runtime. Always interpret integers as unsigned similarly to; /// CanonicalLoopInfo.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp:92,schedul,scheduling,92,interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,1,['schedul'],['scheduling']
Energy Efficiency,/// Returns an LLVM function to call for updating the next loop using OpenMP; /// dynamic scheduling depending on `type`. Only i32 and i64 are supported by; /// the runtime. Always interpret integers as unsigned similarly to; /// CanonicalLoopInfo.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp:90,schedul,scheduling,90,interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,1,['schedul'],['scheduling']
Energy Efficiency,/// Returns an equivalent of a SETCC node but with the result the same width as; /// the inputs. This can also be used for SELECT_CC if either the true or false; /// values is a power of two while the other is zero.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:178,power,power,178,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,1,['power'],['power']
Energy Efficiency,/// Returns an iterator to the bottom of the current scheduling region.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h:53,schedul,scheduling,53,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h,1,['schedul'],['scheduling']
Energy Efficiency,/// Returns an iterator to the top of the current scheduling region.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h:50,schedul,scheduling,50,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h,1,['schedul'],['scheduling']
Energy Efficiency,/// Returns single number reflecting benefit of scheduling SU; /// in the current cycle.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp:48,schedul,scheduling,48,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"/// Returns the allocated size, including metadata.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/Descriptor.h:16,allocate,allocated,16,interpreter/llvm-project/clang/lib/AST/Interp/Descriptor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/Descriptor.h,1,['allocate'],['allocated']
Energy Efficiency,/// Returns the descriptor co-allocated with this User instance.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/User.h:30,allocate,allocated,30,interpreter/llvm-project/llvm/include/llvm/IR/User.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/User.h,2,['allocate'],['allocated']
Energy Efficiency,"/// Returns the instruction in the bundle, which can be used as a base point; /// for scheduling. Usually it is the last instruction in the bundle, except; /// for the case when all operands are external (in this case, it is the first; /// instruction in the list).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:86,schedul,scheduling,86,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['schedul'],['scheduling']
Energy Efficiency,/// Returns the largest integral power of two no greater than Value if Value is; /// nonzero. Returns 0 otherwise.; ///; /// Ex. bit_floor(5) == 4.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/bit.h:33,power,power,33,interpreter/llvm-project/llvm/include/llvm/ADT/bit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/bit.h,1,['power'],['power']
Energy Efficiency,/// Returns the latency value for the scheduling class.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h:38,schedul,scheduling,38,interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,1,['schedul'],['scheduling']
Energy Efficiency,/// Returns the maximum forwarding delay for register reads dependent on; /// writes of scheduling class WriteResourceIdx.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h:88,schedul,scheduling,88,interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,1,['schedul'],['scheduling']
Energy Efficiency,/// Returns the most reduced version of the original testcase,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/TestRunner.h:21,reduce,reduced,21,interpreter/llvm-project/llvm/tools/llvm-reduce/TestRunner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/TestRunner.h,1,['reduce'],['reduced']
Energy Efficiency,/// Returns the next power of two (in 64-bits) that is strictly greater than A.; /// Returns zero on overflow.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MathExtras.h:21,power,power,21,interpreter/llvm-project/llvm/include/llvm/Support/MathExtras.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MathExtras.h,1,['power'],['power']
Energy Efficiency,/// Returns the number of buckets to allocate to ensure that the DenseMap can; /// accommodate \p NumEntries without need to grow().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/DenseMap.h:37,allocate,allocate,37,interpreter/llvm-project/llvm/include/llvm/ADT/DenseMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/DenseMap.h,2,['allocate'],['allocate']
Energy Efficiency,/// Returns the number of bytes allocated for operands and header.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Metadata.h:32,allocate,allocated,32,interpreter/llvm-project/llvm/include/llvm/IR/Metadata.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Metadata.h,1,['allocate'],['allocated']
Energy Efficiency,"/// Returns the number of columns needed to format; /// \p RemainingTokenColumns, assuming that Split is within the range measured; /// by \p RemainingTokenColumns, and that the whitespace in Split is reduced; /// to a single space.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/BreakableToken.h:201,reduce,reduced,201,interpreter/llvm-project/clang/lib/Format/BreakableToken.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/BreakableToken.h,1,['reduce'],['reduced']
Energy Efficiency,/// Returns the number of deallocaton actions in the given AllocActions array.; ///; /// This can be useful if clients want to pre-allocate room for deallocation; /// actions with the rest of their memory.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/AllocationActions.h:131,allocate,allocate,131,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/AllocationActions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/AllocationActions.h,1,['allocate'],['allocate']
Energy Efficiency,"/// Returns the power of two which is greater than or equal to the given value.; /// Essentially, it is a ceil operation across the domain of powers of two.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MathExtras.h:16,power,power,16,interpreter/llvm-project/llvm/include/llvm/Support/MathExtras.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MathExtras.h,2,['power'],"['power', 'powers']"
Energy Efficiency,"/// Returns the preferred order for allocating registers from this register; /// class in MF. The raw order comes directly from the .td file and may; /// include reserved registers that are not allocatable.; /// Register allocators should also make sure to allocate; /// callee-saved registers only after all the volatiles are used. The; /// RegisterClassInfo class provides filtered allocation orders with; /// callee-saved registers moved to the end.; ///; /// The MachineFunction argument can be used to tune the allocatable; /// registers based on the characteristics of the function, subtarget, or; /// other criteria.; ///; /// By default, this method returns all registers in the class.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h:257,allocate,allocate,257,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h,1,['allocate'],['allocate']
Energy Efficiency,"/// Returns the raw, allocated address, which is not necessarily; /// the address of the object itself. It is casted to default; /// address space for address space agnostic languages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h:21,allocate,allocated,21,interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.h,1,['allocate'],['allocated']
Energy Efficiency,/// Returns the representative MachineInstr for this SUnit. This may be used; /// during post-regalloc scheduling.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:103,schedul,scheduling,103,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['schedul'],['scheduling']
Energy Efficiency,/// Returns the representative SDNode for this SUnit. This may be used; /// during pre-regalloc scheduling.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:96,schedul,scheduling,96,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['schedul'],['scheduling']
Energy Efficiency,/// Returns the size of the currently allocated portion of the stack.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CallingConvLower.h:38,allocate,allocated,38,interpreter/llvm-project/llvm/include/llvm/CodeGen/CallingConvLower.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CallingConvLower.h,1,['allocate'],['allocated']
Energy Efficiency,/// Returns the size of the fixed object area (allocated next to sp on entry); /// On Win64 this may include a var args area and an UnwindHelp object for EH.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:47,allocate,allocated,47,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['allocate'],['allocated']
Energy Efficiency,"/// Returns the size of the trailing data, if an object were; /// allocated with the given counts (The counts are in the same order; /// as the template arguments). This does not include the size of the; /// base object. The template arguments must be the same as those; /// used in the class; they are supplied here redundantly only so; /// that it's clear what the counts are counting in callers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TrailingObjects.h:66,allocate,allocated,66,interpreter/llvm-project/llvm/include/llvm/Support/TrailingObjects.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TrailingObjects.h,1,['allocate'],['allocated']
Energy Efficiency,/// Returns the smallest integral power of two no smaller than Value if Value is; /// nonzero. Returns 1 otherwise.; ///; /// Ex. bit_ceil(5) == 8.; ///; /// The return value is undefined if the input is larger than the largest power; /// of two representable in T.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/bit.h:34,power,power,34,interpreter/llvm-project/llvm/include/llvm/ADT/bit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/bit.h,2,['power'],['power']
Energy Efficiency,"/// Returns the total number of required to allocate all segments (with each; /// segment padded out to page size) for all standard segments, and all; /// finalize segments.; ///; /// This is a convenience function for the common case where the segments will; /// be allocated contiguously.; ///; /// This function will return an error if any segment has an alignment that; /// is higher than a page.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/JITLinkMemoryManager.h:44,allocate,allocate,44,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/JITLinkMemoryManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/JITLinkMemoryManager.h,2,['allocate'],"['allocate', 'allocated']"
Energy Efficiency,"/// Returns the total size of an object if it were allocated with the; /// given trailing object counts. This is the same as; /// additionalSizeToAlloc, except it *does* include the size of the base; /// object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TrailingObjects.h:51,allocate,allocated,51,interpreter/llvm-project/llvm/include/llvm/Support/TrailingObjects.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TrailingObjects.h,1,['allocate'],['allocated']
Energy Efficiency,"/// Returns true if Lhs should take priority over Rhs.; ///; /// This method is used by class Scheduler to select the ""best"" ready; /// instruction to issue to the underlying pipelines.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h:94,Schedul,Scheduler,94,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,1,['Schedul'],['Scheduler']
Energy Efficiency,/// Returns true if Reg1 and Reg2 cannot be paired using a ldp/stp instruction.; /// WindowsCFI requires that only consecutive registers can be paired.; /// LR and FP need to be allocated together when the frame needs to save; /// the frame-record. This means any other register pairing with LR is invalid.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:178,allocate,allocated,178,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['allocate'],['allocated']
Energy Efficiency,"/// Returns true if is legal to hoist or sink this instruction disregarding the; /// possible introduction of faults. Reasoning about potential faulting; /// instructions is the responsibility of the caller since it is challenging to; /// do efficiently from within this routine.; /// \p TargetExecutesOncePerLoop is true only when it is guaranteed that the; /// target executes at most once per execution of the loop body. This is used; /// to assess the legality of duplicating atomic loads. Generally, this is; /// true when moving out of loop and not true when moving into loops.; /// If \p ORE is set use it to emit optimization remarks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopUtils.h:242,efficient,efficiently,242,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/LoopUtils.h,1,['efficient'],['efficiently']
Energy Efficiency,"/// Returns true if it is ready for scheduling, i.e. it has no more; /// unscheduled depending instructions/bundles.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:36,schedul,scheduling,36,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['schedul'],['scheduling']
Energy Efficiency,/// Returns true if machine scheduler should be enabled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMSubtarget.h:28,schedul,scheduler,28,interpreter/llvm-project/llvm/lib/Target/ARM/ARMSubtarget.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMSubtarget.h,1,['schedul'],['scheduler']
Energy Efficiency,/// Returns true if the current cycle plus remaning latency is greater than; /// the critical path in the scheduling region.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:106,schedul,scheduling,106,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,1,['schedul'],['scheduling']
Energy Efficiency,/// Returns true if the given vector is a power of 2.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineValueType.h:42,power,power,42,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineValueType.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineValueType.h,2,['power'],['power']
Energy Efficiency,/// Returns true if the stack slot holes in the fixed and callee-save stack; /// area should be used when allocating other stack locations to reduce stack; /// size.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetFrameLowering.h:142,reduce,reduce,142,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetFrameLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetFrameLowering.h,1,['reduce'],['reduce']
Energy Efficiency,/// Returns true if the target wants the LocalStackAllocation pass to be run; /// and virtual base registers used for more efficient stack access.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h:123,efficient,efficient,123,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h,1,['efficient'],['efficient']
Energy Efficiency,/// Returns true if the two given memory operations should be scheduled; /// adjacent.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.h:62,schedul,scheduled,62,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.h,1,['schedul'],['scheduled']
Energy Efficiency,"/// Returns true if the two given memory operations should be scheduled; /// adjacent. Note that you have to add:; /// DAG->addMutation(createLoadClusterDAGMutation(DAG->TII, DAG->TRI));; /// or; /// DAG->addMutation(createStoreClusterDAGMutation(DAG->TII, DAG->TRI));; /// to TargetPassConfig::createMachineScheduler() to have an effect.; ///; /// \p BaseOps1 and \p BaseOps2 are memory operands of two memory operations.; /// \p Offset1 and \p Offset2 are the byte offsets for the memory; /// operations.; /// \p OffsetIsScalable1 and \p OffsetIsScalable2 indicate if the offset is; /// scaled by a runtime quantity.; /// \p ClusterSize is the number of operations in the resulting load/store; /// cluster if this hook returns true.; /// \p NumBytes is the number of bytes that will be loaded from all the; /// clustered loads if this hook returns true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h:62,schedul,scheduled,62,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,1,['schedul'],['scheduled']
Energy Efficiency,"/// Returns true if this LEA uses base and index registers, and the base; /// register is known to be inefficient for the subtarget.; // TODO: use a variant scheduling class to model the latency profile; // of LEA instructions, and implement this logic as a scheduling predicate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupLEAs.cpp:157,schedul,scheduling,157,interpreter/llvm-project/llvm/lib/Target/X86/X86FixupLEAs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupLEAs.cpp,2,['schedul'],['scheduling']
Energy Efficiency,"/// Returns whether the object performed allocations.; ///; /// If APValues are constructed via placement new, \c needsCleanup(); /// indicates whether the destructor must be called in order to correctly; /// free all allocated memory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/APValue.h:218,allocate,allocated,218,interpreter/llvm-project/clang/include/clang/AST/APValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/APValue.h,1,['allocate'],['allocated']
Energy Efficiency,/// Returns whether this instance allocated memory.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h:34,allocate,allocated,34,interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h,1,['allocate'],['allocated']
Energy Efficiency,"/// Rewrite a previously scheduled instruction to use the register value; /// from the new instruction. Make sure the instruction occurs in the; /// basic block, and we don't change the uses in the new instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:25,schedul,scheduled,25,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,1,['schedul'],['scheduled']
Energy Efficiency,"/// Rewrite the Phi values in the specified block to use the mappings; /// from the initial operand. Once the Phi is scheduled, we switch; /// to using the loop value instead of the Phi value, so those names; /// do not need to be rewritten.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:117,schedul,scheduled,117,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,1,['schedul'],['scheduled']
Energy Efficiency,"/// RewriteRope is a ""strong"" string class, designed to make insertions and; /// deletions in the middle of the string nearly constant time (really, they are; /// O(log N), but with a very low constant factor).; ///; /// The implementation of this datastructure is a conceptual linear sequence of; /// RopePiece elements. Each RopePiece represents a view on a separately; /// allocated and reference counted string. This means that splitting a very; /// long string can be done in constant time by splitting a RopePiece that; /// references the whole string into two rope pieces that reference each half.; /// Once split, another string can be inserted in between the two halves by; /// inserting a RopePiece in between the two others. All of this is very; /// inexpensive: it takes time proportional to the number of RopePieces, not the; /// length of the strings they represent.; ///; /// While a linear sequences of RopePieces is the conceptual model, the actual; /// implementation captures them in an adapted B+ Tree. Using a B+ tree (which; /// is a tree that keeps the values in the leaves and has where each node; /// contains a reasonable number of pointers to children/values) allows us to; /// maintain efficient operation when the RewriteRope contains a *huge* number; /// of RopePieces. The basic idea of the B+ Tree is that it allows us to find; /// the RopePiece corresponding to some offset very efficiently, and it; /// automatically balances itself on insertions of RopePieces (which can happen; /// for both insertions and erases of string ranges).; ///; /// The one wrinkle on the theory is that we don't attempt to keep the tree; /// properly balanced when erases happen. Erases of string data can both insert; /// new RopePieces (e.g. when the middle of some other rope piece is deleted,; /// which results in two rope pieces, which is just like an insert) or it can; /// reduce the number of RopePieces maintained by the B+Tree. In the case when; /// the number of RopePieces is",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp:376,allocate,allocated,376,interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp,2,"['adapt', 'allocate']","['adapted', 'allocated']"
Energy Efficiency,/// Rewrites the kernel block in-place to adhere to the given schedule.; /// KernelRewriter holds all of the state required to perform the rewriting.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:62,schedul,schedule,62,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,1,['schedul'],['schedule']
Energy Efficiency,/// RoundUpToPowerOfTwo - This is a helper template that rounds N up to the next; /// power of two (which means N itself if N is already a power of two).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallPtrSet.h:86,power,power,86,interpreter/llvm-project/llvm/include/llvm/ADT/SmallPtrSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallPtrSet.h,2,['power'],['power']
Energy Efficiency,"/// RoundUpToPowerOfTwoH - If N is not a power of two, increase it. This is a; /// helper template used to implement RoundUpToPowerOfTwo.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallPtrSet.h:41,power,power,41,interpreter/llvm-project/llvm/include/llvm/ADT/SmallPtrSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallPtrSet.h,1,['power'],['power']
Energy Efficiency,"/// Rounds the bit-width of the given integer EVT up to the nearest power of; /// two (and at least to eight), and returns the integer EVT with that; /// number of bits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ValueTypes.h:68,power,power,68,interpreter/llvm-project/llvm/include/llvm/CodeGen/ValueTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ValueTypes.h,1,['power'],['power']
Energy Efficiency,/// Run - perform scheduling.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp:18,schedul,scheduling,18,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp,2,['schedul'],['scheduling']
Energy Efficiency,"/// Run checkers for dead symbols.; ///; /// Notifies checkers when symbols become dead. For example, this allows; /// checkers to aggressively clean up/reduce the checker state and produce; /// precise diagnostics.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/CheckerManager.h:153,reduce,reduce,153,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/CheckerManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/CheckerManager.h,1,['reduce'],['reduce']
Energy Efficiency,"/// Run instruction simplification across each instruction in the function.; ///; /// Instruction simplification has useful constraints in some contexts:; /// - It will never introduce *new* instructions.; /// - There is no need to iterate to a fixed point.; ///; /// Many passes use instruction simplification as a library facility, but it may; /// also be useful (in tests and other contexts) to have access to this very; /// restricted transform at a pass granularity. However, for a much more; /// powerful and comprehensive peephole optimization engine, see the; /// `instcombine` pass instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/InstSimplifyPass.h:502,power,powerful,502,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/InstSimplifyPass.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/InstSimplifyPass.h,1,['power'],['powerful']
Energy Efficiency,"/// Run numeric integrations using RooRombergIntegrator and ROOT's adaptive integrator. Ensure that; /// they reach the requested precision.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRombergIntegrator.cxx:67,adapt,adaptive,67,roofit/roofitcore/test/testRooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooRombergIntegrator.cxx,1,['adapt'],['adaptive']
Energy Efficiency,"/// Run some code with ""sufficient"" stack space. (Currently, at least 256K is; /// guaranteed). Produces a warning if we're low on stack space and allocates; /// more in that case. Use this in code that may recurse deeply (for example,; /// in template instantiation) to avoid stack overflow.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:147,allocate,allocates,147,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['allocate'],['allocates']
Energy Efficiency,"/// Runs the Delta Debugging algorithm, splits the code into chunks and; /// reduces the amount of chunks that are considered interesting by the; /// given test. The number of chunks is determined by a preliminary run of the; /// reduction pass where no change must be made to the module.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/Delta.cpp:77,reduce,reduces,77,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/Delta.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/Delta.cpp,1,['reduce'],['reduces']
Energy Efficiency,"/// SDLSearch: Search for Static Device Library; /// The search for SDL bitcode files is consistent with how static host; /// libraries are discovered. That is, the -l option triggers a search for; /// files in a set of directories called the LINKPATH. The host library search; /// procedure looks for a specific filename in the LINKPATH. The filename for; /// a host library is lib<libname>.a or lib<libname>.so. For SDLs, there is an; /// ordered-set of filenames that are searched. We call this ordered-set of; /// filenames as SEARCH-ORDER. Since an SDL can either be device-type specific,; /// architecture specific, or generic across all architectures, a naming; /// convention and search order is used where the file name embeds the; /// architecture name <arch-name> (nvptx or amdgcn) and the GPU device type; /// <device-name> such as sm_30 and gfx906. <device-name> is absent in case of; /// device-independent SDLs. To reduce congestion in host library directories,; /// the search first looks for files in the “libdevice” subdirectory. SDLs that; /// are bc files begin with the prefix “lib”.; ///; /// Machine-code SDLs can also be managed as an archive (*.a file). The; /// convention has been to use the prefix “lib”. To avoid confusion with host; /// archive libraries, we use prefix ""libbc-"" for the bitcode SDL archives.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/CommonArgs.cpp:930,reduce,reduce,930,interpreter/llvm-project/clang/lib/Driver/ToolChains/CommonArgs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/CommonArgs.cpp,1,['reduce'],['reduce']
Energy Efficiency,"/// Sample-based profile reader.; ///; /// Each profile contains sample counts for all the functions; /// executed. Inside each function, statements are annotated with the; /// collected samples on all the instructions associated with that; /// statement.; ///; /// For this to produce meaningful data, the program needs to be; /// compiled with some debug information (at minimum, line numbers:; /// -gline-tables-only). Otherwise, it will be impossible to match IR; /// instructions to the line numbers collected by the profiler.; ///; /// From the profile file, we are interested in collecting the; /// following information:; ///; /// * A list of functions included in the profile (mangled names).; ///; /// * For each function F:; /// 1. The total number of samples collected in F.; ///; /// 2. The samples collected at each line in F. To provide some; /// protection against source code shuffling, line numbers should; /// be relative to the start of the function.; ///; /// The reader supports two file formats: text and binary. The text format; /// is useful for debugging and testing, while the binary format is more; /// compact and I/O efficient. They can both be used interchangeably.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProfReader.h:1147,efficient,efficient,1147,interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProfReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProfReader.h,1,['efficient'],['efficient']
Energy Efficiency,"/// Save this GSYM file into segments that are roughly \a SegmentSize in size.; ///; /// When segemented GSYM files are saved to disk, they will use \a Path as a; /// prefix and then have the first function info address appended to the path; /// when each segment is saved. Each segmented GSYM file has a only the; /// strings and files that are needed to save the function infos that are in; /// each segment. These smaller files are easy to compress and download; /// separately and allow for efficient lookups with very large GSYM files and; /// segmenting them allows servers to download only the segments that are; /// needed.; ///; /// \param Path The path prefix to use when saving the GSYM files.; /// \param ByteOrder The endianness to use when saving the file.; /// \param SegmentSize The size in bytes to segment the GSYM file into.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/GsymCreator.h:495,efficient,efficient,495,interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/GsymCreator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/GsymCreator.h,1,['efficient'],['efficient']
Energy Efficiency,"/// Scalar ops always have equal or better analysis/performance/power than; /// the vector equivalent, so this always makes sense if the scalar op is; /// supported.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.h:64,power,power,64,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.h,1,['power'],['power']
Energy Efficiency,"/// Schedule - Order nodes according to selected style, filling; /// in the Sequence member.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.h:4,Schedul,Schedule,4,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.h,1,['Schedul'],['Schedule']
Energy Efficiency,/// Schedule - Schedule the DAG using list scheduling.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:4,Schedul,Schedule,4,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,3,"['Schedul', 'schedul']","['Schedule', 'scheduling']"
Energy Efficiency,/// Schedule - Schedule the instruction range using list scheduling.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp:4,Schedul,Schedule,4,interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,6,"['Schedul', 'schedul']","['Schedule', 'scheduling']"
Energy Efficiency,/// Schedule - This is called back from ScheduleDAGInstrs::Run() when it's; /// time to do some work.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/VLIWMachineScheduler.h:4,Schedul,Schedule,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/VLIWMachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/VLIWMachineScheduler.h,2,['Schedul'],"['Schedule', 'ScheduleDAGInstrs']"
Energy Efficiency,/// Schedule based on the ILP metric.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:4,Schedul,Schedule,4,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,1,['Schedul'],['Schedule']
Energy Efficiency,/// Schedule pass P for execution. Make sure that passes required by; /// P are run before P is run. Update analysis info maintained by; /// the manager. Remove dead passes. This is a recursive function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h:4,Schedul,Schedule,4,interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManagers.h,2,['Schedul'],['Schedule']
Energy Efficiency,/// Schedule types for 'omp for' loops (these enumerators are taken from; /// the enum sched_type in kmp.h).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:4,Schedul,Schedule,4,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['Schedul'],['Schedule']
Energy Efficiency,/// ScheduleDAGMI has scheduled an instruction - tell HazardRec; /// about it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h:4,Schedul,ScheduleDAGMI,4,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h,2,"['Schedul', 'schedul']","['ScheduleDAGMI', 'scheduled']"
Energy Efficiency,/// ScheduleDAGMI is an implementation of ScheduleDAGInstrs that simply; /// schedules machine instructions according to the given MachineSchedStrategy; /// without much extra book-keeping. This is the common functionality between; /// PreRA and PostRA MachineScheduler.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:4,Schedul,ScheduleDAGMI,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,3,"['Schedul', 'schedul']","['ScheduleDAGInstrs', 'ScheduleDAGMI', 'schedules']"
Energy Efficiency,/// ScheduleDAGMILive is an implementation of ScheduleDAGInstrs that schedules; /// machine instructions while updating LiveIntervals and tracking regpressure.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:4,Schedul,ScheduleDAGMILive,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,3,"['Schedul', 'schedul']","['ScheduleDAGInstrs', 'ScheduleDAGMILive', 'schedules']"
Energy Efficiency,"/// ScheduleDAGSDNodes - A ScheduleDAG for scheduling SDNode-based DAGs.; ///; /// Edges between SUnits are initially based on edges in the SelectionDAG,; /// and additional edges can be added by the schedulers as heuristics.; /// SDNodes such as Constants, Registers, and a few others that are not; /// interesting to schedulers are not allocated SUnits.; ///; /// SDNodes with MVT::Glue operands are grouped along with the flagged; /// nodes into a single SUnit so that they are scheduled together.; ///; /// SDNode-based scheduling graphs do not use SDep::Anti or SDep::Output; /// edges. Physical register dependence information is not carried in; /// the DAG and must be handled explicitly by schedulers.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.h:4,Schedul,ScheduleDAGSDNodes,4,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.h,9,"['Schedul', 'allocate', 'schedul']","['ScheduleDAG', 'ScheduleDAGSDNodes', 'allocated', 'scheduled', 'schedulers', 'scheduling']"
Energy Efficiency,"/// ScheduleNodeBottomUp - Add the node to the schedule. Decrement the pending; /// count of its predecessors. If a predecessor pending count is zero, add it to; /// the Available queue.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp:4,Schedul,ScheduleNodeBottomUp,4,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,4,"['Schedul', 'schedul']","['ScheduleNodeBottomUp', 'schedule']"
Energy Efficiency,"/// ScheduleNodeTopDown - Add the node to the schedule. Decrement the pending; /// count of its successors. If a successor pending count is zero, add it to; /// the Available queue.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp:4,Schedul,ScheduleNodeTopDown,4,interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,2,"['Schedul', 'schedul']","['ScheduleNodeTopDown', 'schedule']"
Energy Efficiency,/// Scheduler callback to notify that a new subtree is scheduled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:4,Schedul,Scheduler,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,4,"['Schedul', 'schedul']","['Scheduler', 'scheduled']"
Energy Efficiency,/// Scheduler callback to update SubtreeConnectLevels when a tree is; /// initially scheduled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDFS.h:4,Schedul,Scheduler,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDFS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDFS.h,2,"['Schedul', 'schedul']","['Scheduler', 'scheduled']"
Energy Efficiency,/// Scheduling class.; ///; /// Each instruction description will be mapped to a scheduling class. There are; /// four types of classes:; ///; /// 1) An explicitly defined itinerary class with ItinClassDef set.; /// Writes and ReadDefs are empty. ProcIndices contains 0 for any processor.; ///; /// 2) An implied class with a list of SchedWrites and SchedReads that are; /// defined in an instruction definition and which are common across all; /// subtargets. ProcIndices contains 0 for any processor.; ///; /// 3) An implied class with a list of InstRW records that map instructions to; /// SchedWrites and SchedReads per-processor. InstrClassMap should map the same; /// instructions to this class. ProcIndices contains all the processors that; /// provided InstrRW records for this class. ItinClassDef or Writes/Reads may; /// still be defined for processors with no InstRW entry.; ///; /// 4) An inferred class represents a variant of another class that may be; /// resolved at runtime. ProcIndices contains the set of processors that may; /// require the class. ProcIndices are propagated through SchedClasses as; /// variants are expanded. Multiple SchedClasses may be inferred from an; /// itinerary class. Each inherits the processor index from the ItinRW record; /// that mapped the itinerary class to the variant Writes or Reads.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenSchedule.h:4,Schedul,Scheduling,4,interpreter/llvm-project/llvm/utils/TableGen/CodeGenSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenSchedule.h,2,"['Schedul', 'schedul']","['Scheduling', 'scheduling']"
Energy Efficiency,/// Scheduling customization.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCSubtarget.h:4,Schedul,Scheduling,4,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCSubtarget.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCSubtarget.h,1,['Schedul'],['Scheduling']
Energy Efficiency,/// Scheduling data for loop-based OpenMP directives.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/OpenMPKinds.h:4,Schedul,Scheduling,4,interpreter/llvm-project/clang/include/clang/Basic/OpenMPKinds.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/OpenMPKinds.h,1,['Schedul'],['Scheduling']
Energy Efficiency,/// Scheduling dependency. This represents one direction of an edge in the; /// scheduling DAG.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:4,Schedul,Scheduling,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,2,"['Schedul', 'schedul']","['Scheduling', 'scheduling']"
Energy Efficiency,/// Scheduling unit. This is a node in the scheduling DAG.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:4,Schedul,Scheduling,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,2,"['Schedul', 'schedul']","['Scheduling', 'scheduling']"
Energy Efficiency,/// ScopeCache - Cache scopes to reduce malloc traffic.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Parse/Parser.h:33,reduce,reduce,33,interpreter/llvm-project/clang/include/clang/Parse/Parser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Parse/Parser.h,1,['reduce'],['reduce']
Energy Efficiency,"/// See if the comparison instruction can be converted; /// into something more efficient. E.g., on ARM most instructions can set the; /// flags register, obviating the need for a separate CMP.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h:80,efficient,efficient,80,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,1,['efficient'],['efficient']
Energy Efficiency,/// Select constant vector splats whose value is a power of 2.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelDAGToDAG.h:51,power,power,51,interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelDAGToDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelDAGToDAG.h,2,['power'],['power']
Energy Efficiency,/// Select constant vector splats whose value is the inverse of a; /// power of 2.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelDAGToDAG.h:71,power,power,71,interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelDAGToDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsISelDAGToDAG.h,2,['power'],['power']
Energy Efficiency,"/// SelectAddressEVXRegReg - Given the specified addressed, check to see if; /// it can be more efficiently represented as [r+imm].",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h:96,efficient,efficiently,96,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,1,['efficient'],['efficiently']
Energy Efficiency,"/// SelectAddressRegReg - Given the specified addressed, check to see if it; /// can be more efficiently represented as [r+imm]. If \p EncodingAlignment; /// is non-zero, only accept displacement which is not suitable for [r+imm].; /// Returns false if it can be represented by [r+imm], which are preferred.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h:93,efficient,efficiently,93,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,1,['efficient'],['efficiently']
Energy Efficiency,"/// SelectAddressRegReg - Given the specified addressed, check to see if it; /// can be represented as an indexed [r+r] operation. Returns false if it; /// can be more efficiently represented as [r+imm]. If \p EncodingAlignment is; /// non-zero and N can be represented by a base register plus a signed 16-bit; /// displacement, make a more precise judgement by checking (displacement % \p; /// EncodingAlignment).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:168,efficient,efficiently,168,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['efficient'],['efficiently']
Energy Efficiency,/// SelectBFE - Look for instruction sequences that can be made more efficient; /// by using the 'bfe' (bit-field extract) PTX instruction,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:69,efficient,efficient,69,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp,1,['efficient'],['efficient']
Energy Efficiency,/// SemaBuiltinConstantArgPower2 - Check if argument ArgNum of TheCall is a; /// constant expression representing a power of 2.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:116,power,power,116,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['power'],['power']
Energy Efficiency,"/// Set IsAcyclicLatencyLimited if the acyclic path is longer than the cyclic; /// critical path by more cycles than it takes to drain the instruction buffer.; /// We estimate an upper bounds on in-flight instructions as:; ///; /// CyclesPerIteration = max( CyclicPath, Loop-Resource-Height ); /// InFlightIterations = AcyclicPath / CyclesPerIteration; /// InFlightResources = InFlightIterations * LoopResources; ///; /// TODO: Check execution resources in addition to IssueCount.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:129,drain,drain,129,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,1,['drain'],['drain']
Energy Efficiency,/// Set and fetch the bit that shows whether FPFeatures needs to be; /// allocated in Trailing Storage,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h:73,allocate,allocated,73,interpreter/llvm-project/clang/include/clang/AST/Expr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h,1,['allocate'],['allocated']
Energy Efficiency,"/// Set as the page source's scheduler for parallel page decompression if IMT is on; /// Needs to be destructed after the pages source is destructed (an thus be declared before)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleReader.hxx:29,schedul,scheduler,29,tree/ntuple/v7/inc/ROOT/RNTupleReader.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleReader.hxx,1,['schedul'],['scheduler']
Energy Efficiency,/// Set if the nonmonotonic schedule modifier was present.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:28,schedul,schedule,28,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['schedul'],['schedule']
Energy Efficiency,/// Set location of the first schedule modifier.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:30,schedul,schedule,30,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['schedul'],['schedule']
Energy Efficiency,/// Set location of the second schedule modifier.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:31,schedul,schedule,31,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['schedul'],['schedule']
Energy Efficiency,"/// Set of register units that are used in the current instruction, and so; /// cannot be allocated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocFast.cpp:90,allocate,allocated,90,interpreter/llvm-project/llvm/lib/CodeGen/RegAllocFast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocFast.cpp,1,['allocate'],['allocated']
Energy Efficiency,/// Set schedule kind start location.; ///; /// \param KLoc Schedule kind location.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:8,schedul,schedule,8,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,4,"['Schedul', 'schedul']","['Schedule', 'schedule']"
Energy Efficiency,/// Set schedule kind.; ///; /// \param K Schedule kind.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:8,schedul,schedule,8,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,4,"['Schedul', 'schedul']","['Schedule', 'schedule']"
Energy Efficiency,/// Set schedule modifier location.; ///; /// \param M Schedule modifier location.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:8,schedul,schedule,8,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,2,"['Schedul', 'schedul']","['Schedule', 'schedule']"
Energy Efficiency,"/// Set the 'ProcessAllSections' flag.; ///; /// If set to true, all sections in each object file will be allocated using; /// the memory manager, rather than just the sections required for execution.; ///; /// This is kludgy, and may be removed in the future.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:106,allocate,allocated,106,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h,1,['allocate'],['allocated']
Energy Efficiency,/// Set the CandPolicy given a scheduling zone given the current resources and; /// latencies inside and outside the zone.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:31,schedul,scheduling,31,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,1,['schedul'],['scheduling']
Energy Efficiency,/// Set the Maximum Initiation Interval for this schedule attempt.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h:49,schedul,schedule,49,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,1,['schedul'],['schedule']
Energy Efficiency,/// Set the Minimum Initiation Interval for this schedule attempt.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h:49,schedul,schedule,49,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,1,['schedul'],['schedule']
Energy Efficiency,/// Set the first schedule modifier.; ///; /// \param M Schedule modifier.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:18,schedul,schedule,18,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,2,"['Schedul', 'schedul']","['Schedule', 'schedule']"
Energy Efficiency,/// Set the initiation interval for this schedule.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h:41,schedul,schedule,41,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,1,['schedul'],['schedule']
Energy Efficiency,"/// Set the number of operands on a GlobalVariable.; ///; /// GlobalVariable always allocates space for a single operands, but; /// doesn't always use it.; ///; /// FIXME: As that the number of operands is used to find the start of; /// the allocated memory in operator delete, we need to always think we have; /// 1 operand before delete.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/User.h:84,allocate,allocates,84,interpreter/llvm-project/llvm/include/llvm/IR/User.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/User.h,2,['allocate'],"['allocated', 'allocates']"
Energy Efficiency,/// Set the second schedule modifier.; ///; /// \param M Schedule modifier.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:19,schedul,schedule,19,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,2,"['Schedul', 'schedul']","['Schedule', 'schedule']"
Energy Efficiency,/// Set to true if a valid pipelined schedule is found for the loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h:37,schedul,schedule,37,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,1,['schedul'],['schedule']
Energy Efficiency,"/// Sets a new range for the bulk. If there is enough capacity, the fValues array will be reused.; /// Otherwise a new array is allocated. After reset, fMaskAvail is false for all values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RFieldBase.hxx:128,allocate,allocated,128,tree/ntuple/v7/inc/ROOT/RFieldBase.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RFieldBase.hxx,1,['allocate'],['allocated']
Energy Efficiency,/// Sets all instruction in the scheduling region to un-scheduled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:32,schedul,scheduling,32,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,2,['schedul'],"['scheduled', 'scheduling']"
Energy Efficiency,/// Setup the sections into which counters and bitmaps are allocated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp:59,allocate,allocated,59,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,1,['allocate'],['allocated']
Energy Efficiency,/// Should we continue evaluation as much as possible after encountering a; /// construct which can't be reduced to a value?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:105,reduce,reduced,105,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['reduce'],['reduced']
Energy Efficiency,"/// ShouldPreferAnother - This callback may be invoked if getHazardType; /// returns NoHazard. If, even though there is no hazard, it would be better to; /// schedule another available instruction, this callback should return true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleHazardRecognizer.h:158,schedul,schedule,158,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleHazardRecognizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleHazardRecognizer.h,1,['schedul'],['schedule']
Energy Efficiency,/// Similar to createMachineScheduler but used when postRA machine scheduling; /// is enabled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h:67,schedul,scheduling,67,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetPassConfig.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// Simple callback implementation. Marshaller and function are provided.; ///; /// This class wraps a function of arbitrary signature and a marshaller; /// function into a MatcherDescriptor.; /// The marshaller is in charge of taking the VariantValue arguments, checking; /// their types, unpacking them and calling the underlying function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ASTMatchers/Dynamic/Marshallers.h:218,charge,charge,218,interpreter/llvm-project/clang/lib/ASTMatchers/Dynamic/Marshallers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ASTMatchers/Dynamic/Marshallers.h,1,['charge'],['charge']
Energy Efficiency,/// Simple memory allocation for ScheduleData.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:33,Schedul,ScheduleData,33,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['Schedul'],['ScheduleData']
Energy Efficiency,/// SimplifyCFG reducer - This works by calling SimplifyCFG on each basic block; /// in the program.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/CrashDebugger.cpp:16,reduce,reducer,16,interpreter/llvm-project/llvm/tools/bugpoint/CrashDebugger.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/CrashDebugger.cpp,1,['reduce'],['reducer']
Energy Efficiency,/// Single cost function reflecting benefit of scheduling SU; /// in the current cycle.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ResourcePriorityQueue.h:47,schedul,scheduling,47,interpreter/llvm-project/llvm/include/llvm/CodeGen/ResourcePriorityQueue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ResourcePriorityQueue.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// Single linked list of all memory instructions (e.g. load, store, call); /// in the block - until the end of the scheduling region.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:116,schedul,scheduling,116,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['schedul'],['scheduling']
Energy Efficiency,/// Single point to compute overall scheduling cost.; /// TODO: More heuristics will be used soon.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp:36,schedul,scheduling,36,interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"/// Sink addressing mode computation immediate before MemoryInst if doing so; /// can be done without increasing register pressure. The need for the; /// register pressure constraint means this can end up being an all or nothing; /// decision for all uses of the same addressing computation.; ///; /// Load and Store Instructions often have addressing modes that can do; /// significant amounts of computation. As such, instruction selection will try; /// to get the load or store to do as much computation as possible for the; /// program. The problem is that isel can only see within a single block. As; /// such, we sink as much legal addressing mode work into the block as possible.; ///; /// This method is used to optimize both load/store and inline asms with memory; /// operands. It's also used to sink addressing computations feeding into cold; /// call sites into their (cold) basic block.; ///; /// The motivation for handling sinking into cold blocks is that doing so can; /// both enable other address mode sinking (by satisfying the register pressure; /// constraint above), and reduce register pressure globally (by removing the; /// addressing mode computation from the fast path entirely.).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:1093,reduce,reduce,1093,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['reduce'],['reduce']
Energy Efficiency,"/// Sink the given CmpInst into user blocks to reduce the number of virtual; /// registers that must be created and coalesced. This is a clear win except on; /// targets with multiple condition code registers (PowerPC), where it might; /// lose; some adjustment may be wanted there.; ///; /// Return true if any changes are made.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:47,reduce,reduce,47,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,2,"['Power', 'reduce']","['PowerPC', 'reduce']"
Energy Efficiency,/// Size in bytes of the group segment memory required by a workgroup.; /// This value does not include any dynamically allocated group segment memory; /// that may be added when the kernel is dispatched. Required.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/AMDGPUMetadata.h:120,allocate,allocated,120,interpreter/llvm-project/llvm/include/llvm/Support/AMDGPUMetadata.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/AMDGPUMetadata.h,1,['allocate'],['allocated']
Energy Efficiency,/// Size of the pre-allocated local frame block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h:20,allocate,allocated,20,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,1,['allocate'],['allocated']
Energy Efficiency,/// SkipWhitespace - Efficiently skip over a series of whitespace characters.; /// Update BufferPtr to point to the next non-whitespace character and return.; ///; /// This method forms a token and returns true if KeepWhitespaceMode is enabled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Lexer.cpp:21,Efficient,Efficiently,21,interpreter/llvm-project/clang/lib/Lex/Lexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Lexer.cpp,1,['Efficient'],['Efficiently']
Energy Efficiency,"/// Small helper that resolves and caches file paths. This helps reduce the; /// number of calls to realpath which is expensive. We assume the input are; /// files, and cache the realpath of their parent. This way we can quickly; /// resolve different files under the same path.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinkerDeclContext.h:65,reduce,reduce,65,interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinkerDeclContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinkerDeclContext.h,1,['reduce'],['reduce']
Energy Efficiency,/// SmallPtrSet - This class implements a set which is optimized for holding; /// SmallSize or less elements. This internally rounds up SmallSize to the next; /// power of two if it is not already a power of two. See the comments above; /// SmallPtrSetImplBase for details of the algorithm.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallPtrSet.h:163,power,power,163,interpreter/llvm-project/llvm/include/llvm/ADT/SmallPtrSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallPtrSet.h,2,['power'],['power']
Energy Efficiency,"/// SmallPtrSetImplBase - This is the common code shared among all the; /// SmallPtrSet<>'s, which is almost everything. SmallPtrSet has two modes, one; /// for small and one for large sets.; ///; /// Small sets use an array of pointers allocated in the SmallPtrSet object,; /// which is treated as a simple array of pointers. When a pointer is added to; /// the set, the array is scanned to see if the element already exists, if not; /// the element is 'pushed back' onto the array. If we run out of space in the; /// array, we grow into the 'large set' case. SmallSet should be used when the; /// sets are often small. In this case, no memory allocation is used, and only; /// light-weight and cache-efficient scanning is used.; ///; /// Large sets use a classic exponentially-probed hash table. Empty buckets are; /// represented with an illegal pointer value (-1) to allow null pointers to be; /// inserted. Tombstones are represented with another illegal pointer value; /// (-2), to allow deletion. The hash table is resized when the table is 3/4 or; /// more. When this happens, the table is doubled in size.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallPtrSet.h:237,allocate,allocated,237,interpreter/llvm-project/llvm/include/llvm/ADT/SmallPtrSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallPtrSet.h,2,"['allocate', 'efficient']","['allocated', 'efficient']"
Energy Efficiency,"/// SmallVector-backed MemoryBuffer instance.; ///; /// This class enables efficient construction of MemoryBuffers from SmallVector; /// instances. This is useful for MCJIT and Orc, where object files are streamed; /// into SmallVectors, then inspected using ObjectFile (which takes a; /// MemoryBuffer).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/SmallVectorMemoryBuffer.h:75,efficient,efficient,75,interpreter/llvm-project/llvm/include/llvm/Support/SmallVectorMemoryBuffer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/SmallVectorMemoryBuffer.h,1,['efficient'],['efficient']
Energy Efficiency,"/// Smart pointer class that efficiently represents Objective-C method; /// names.; ///; /// This class will either point to an IdentifierInfo or a; /// MultiKeywordSelector (which is private). This enables us to optimize; /// selectors that take no arguments and selectors that take 1 argument, which; /// accounts for 78% of all selectors in Cocoa.h.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/IdentifierTable.h:29,efficient,efficiently,29,interpreter/llvm-project/clang/include/clang/Basic/IdentifierTable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/IdentifierTable.h,1,['efficient'],['efficiently']
Energy Efficiency,"/// Smart pointer for the return type of actions; /**; \class ROOT::RDF::RResultPtr; \ingroup dataframe; \brief A wrapper around the result of RDataFrame actions able to trigger calculations lazily.; \tparam T Type of the action result. A smart pointer which allows to access the result of a RDataFrame action. The; methods of the encapsulated object can be accessed via the arrow operator.; Upon invocation of the arrow operator or dereferencing (`operator*`), the; loop on the events and calculations of all scheduled actions are executed; if needed.; It is possible to iterate on the result proxy if the proxied object is a collection.; ~~~{.cpp}; for (auto& myItem : myResultProxy) { ... };; ~~~; If iteration is not supported by the type of the proxied object, a compilation error is thrown. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RResultPtr.hxx:510,schedul,scheduled,510,tree/dataframe/inc/ROOT/RResultPtr.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RResultPtr.hxx,1,['schedul'],['scheduled']
Energy Efficiency,"/// Some scheduler, e.g. hybrid, can switch to different scheduling heuristics; /// for different nodes. This function returns the preference (or none) for; /// the given node.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:9,schedul,scheduler,9,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,2,['schedul'],"['scheduler', 'scheduling']"
Energy Efficiency,"/// Sometimes, it is possible for the target; /// to tell, even without aliasing information, that two MIs access different; /// memory addresses. This function returns true if two MIs access different; /// memory addresses and false otherwise.; ///; /// Assumes any physical registers used to compute addresses have the same; /// value for both instructions. (This is the most useful assumption for; /// post-RA scheduling.); ///; /// See also MachineInstr::mayAlias, which is implemented on top of this; /// function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h:413,schedul,scheduling,413,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// SparseSet - Fast set implementation for objects that can be identified by; /// small unsigned keys.; ///; /// SparseSet allocates memory proportional to the size of the key universe, so; /// it is not recommended for building composite data structures. It is useful; /// for algorithms that require a single set with fast operations.; ///; /// Compared to DenseSet and DenseMap, SparseSet provides constant-time fast; /// clear() and iteration as fast as a vector. The find(), insert(), and; /// erase() operations are all constant time, and typically faster than a hash; /// table. The iteration order doesn't depend on numerical key values, it only; /// depends on the order of insert() and erase() operations. When no elements; /// have been erased, the iteration order is the insertion order.; ///; /// Compared to BitVector, SparseSet<unsigned> uses 8x-40x more memory, but; /// offers constant-time clear() and size() operations as well as fast; /// iteration independent on the size of the universe.; ///; /// SparseSet contains a dense vector holding all the objects and a sparse; /// array holding indexes into the dense vector. Most of the memory is used by; /// the sparse array which is the size of the key universe. The SparseT; /// template parameter provides a space/speed tradeoff for sets holding many; /// elements.; ///; /// When SparseT is uint32_t, find() only touches 2 cache lines, but the sparse; /// array uses 4 x Universe bytes.; ///; /// When SparseT is uint8_t (the default), find() touches up to 2+[N/256] cache; /// lines, but the sparse array is 4x smaller. N is the number of elements in; /// the set.; ///; /// For sets that may grow to thousands of elements, SparseT should be set to; /// uint16_t or uint32_t.; ///; /// @tparam ValueT The type of objects in the set.; /// @tparam KeyFunctorT A functor that computes an unsigned index from KeyT.; /// @tparam SparseT An unsigned integer type. See above.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SparseSet.h:124,allocate,allocates,124,interpreter/llvm-project/llvm/include/llvm/ADT/SparseSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SparseSet.h,1,['allocate'],['allocates']
Energy Efficiency,/// Specialization - reduce amount of casting.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Constants.h:21,reduce,reduce,21,interpreter/llvm-project/llvm/include/llvm/IR/Constants.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Constants.h,1,['reduce'],['reduce']
Energy Efficiency,"/// Specialize the getType() method to always return a FixedVectorType,; /// which reduces the amount of casting needed in parts of the compiler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Constants.h:83,reduce,reduces,83,interpreter/llvm-project/llvm/include/llvm/IR/Constants.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Constants.h,2,['reduce'],['reduces']
Energy Efficiency,"/// Specialize the getType() method to always return an ArrayType,; /// which reduces the amount of casting needed in parts of the compiler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Constants.h:78,reduce,reduces,78,interpreter/llvm-project/llvm/include/llvm/IR/Constants.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Constants.h,2,['reduce'],['reduces']
Energy Efficiency,"/// Specialize the getType() method to always return an PointerType,; /// which reduces the amount of casting needed in parts of the compiler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Constants.h:80,reduce,reduces,80,interpreter/llvm-project/llvm/include/llvm/IR/Constants.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Constants.h,1,['reduce'],['reduces']
Energy Efficiency,"/// Specialize the getType() method to always return an TargetExtType,; /// which reduces the amount of casting needed in parts of the compiler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Constants.h:82,reduce,reduces,82,interpreter/llvm-project/llvm/include/llvm/IR/Constants.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Constants.h,1,['reduce'],['reduces']
Energy Efficiency,"/// Specialized YAMLIO scalar type for representing a binary blob.; ///; /// A typical use case would be to represent the content of a section in a; /// binary file.; /// This class has custom YAMLIO traits for convenient reading and writing.; /// It renders as a string of hex digits in a YAML file.; /// For example, it might render as `DEADBEEFCAFEBABE` (YAML does not; /// require the quotation marks, so for simplicity when outputting they are; /// omitted).; /// When reading, any string whose content is an even number of hex digits; /// will be accepted.; /// For example, all of the following are acceptable:; /// `DEADBEEF`, `""DeADbEeF""`, `""\x44EADBEEF""` (Note: '\x44' == 'D'); ///; /// A significant advantage of using this class is that it never allocates; /// temporary strings or buffers for any of its functionality.; ///; /// Example:; ///; /// The YAML mapping:; /// \code; /// Foo: DEADBEEFCAFEBABE; /// \endcode; ///; /// Could be modeled in YAMLIO by the struct:; /// \code; /// struct FooHolder {; /// BinaryRef Foo;; /// };; /// namespace llvm {; /// namespace yaml {; /// template <>; /// struct MappingTraits<FooHolder> {; /// static void mapping(IO &IO, FooHolder &FH) {; /// IO.mapRequired(""Foo"", FH.Foo);; /// }; /// };; /// } // end namespace yaml; /// } // end namespace llvm; /// \endcode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ObjectYAML/YAML.h:758,allocate,allocates,758,interpreter/llvm-project/llvm/include/llvm/ObjectYAML/YAML.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ObjectYAML/YAML.h,1,['allocate'],['allocates']
Energy Efficiency,"/// Specify the cost of a register definition in terms of number of physical; /// register allocated at register renaming stage. For example, AMD Jaguar.; /// natively supports 128-bit data types, and operations on 256-bit registers; /// (i.e. YMM registers) are internally split into two COPs (complex operations); /// and each COP updates a physical register. Basically, on Jaguar, a YMM; /// register write effectively consumes two physical registers. That means,; /// the cost of a YMM write in the BtVer2 model is 2.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h:91,allocate,allocated,91,interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,1,['allocate'],['allocated']
Energy Efficiency,"/// Specify the latency in cpu cycles for a particular scheduling class and def; /// index. -1 indicates an invalid latency. Heuristics would typically consider; /// an instruction with invalid latency to have infinite latency. Also identify; /// the WriteResources of this def. When the operand expands to a sequence of; /// writes, this ID is the last write in the sequence.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h:55,schedul,scheduling,55,interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// Specify the number of cycles allowed after instruction issue before a; /// particular use operand reads its registers. This effectively reduces the; /// write's latency. Here we allow negative cycles for corner cases where; /// latency increases. This rule only applies when the entry's WriteResource; /// matches the write's WriteResource.; ///; /// MCReadAdvanceEntries are sorted first by operand index (UseIdx), then by; /// WriteResourceIdx.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h:140,reduce,reduces,140,interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,1,['reduce'],['reduces']
Energy Efficiency,/// Specify the target scheduling preference.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:23,schedul,scheduling,23,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// Speculate a conditional basic block flattening the CFG.; ///; /// Note that this is a very risky transform currently. Speculating; /// instructions like this is most often not desirable. Instead, there is an MI; /// pass which can do it with full awareness of the resource constraints.; /// However, some cases are ""obvious"" and we should do directly. An example of; /// this is speculating a single, reasonably cheap instruction.; ///; /// There is only one distinct advantage to flattening the CFG at the IR level:; /// it makes very common but simplistic optimizations such as are common in; /// instcombine and the DAG combiner more powerful by removing CFG edges and; /// modeling their effects with easier to reason about SSA value graphs.; ///; ///; /// An illustration of this transform is turning this IR:; /// \code; /// BB:; /// %cmp = icmp ult %x, %y; /// br i1 %cmp, label %EndBB, label %ThenBB; /// ThenBB:; /// %sub = sub %x, %y; /// br label BB2; /// EndBB:; /// %phi = phi [ %sub, %ThenBB ], [ 0, %EndBB ]; /// ...; /// \endcode; ///; /// Into this IR:; /// \code; /// BB:; /// %cmp = icmp ult %x, %y; /// %sub = sub %x, %y; /// %cond = select i1 %cmp, 0, %sub; /// ...; /// \endcode; ///; /// \returns true if the conditional block is removed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:641,power,powerful,641,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,1,['power'],['powerful']
Energy Efficiency,"/// Split a vector type into two parts. The first part is a power of two; /// vector. The second part is whatever is left over, and is a scalar if it; /// would otherwise be a 1-vector.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.h:60,power,power,60,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.h,1,['power'],['power']
Energy Efficiency,/// StackSlotColoring - This pass performs stack coloring and merging.; /// It merges disjoint allocas to reduce the stack size.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h:106,reduce,reduce,106,interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,1,['reduce'],['reduce']
Energy Efficiency,/// Standard memory should be allocated by the allocator and then deallocated; /// when the deallocate method is called for the finalized allocation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/MemoryFlags.h:30,allocate,allocated,30,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/MemoryFlags.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/Shared/MemoryFlags.h,1,['allocate'],['allocated']
Energy Efficiency,/// Start location of the schedule ind in source code.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:26,schedul,schedule,26,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['schedul'],['schedule']
Energy Efficiency,/// Start location of the schedule kind in source code.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:26,schedul,schedule,26,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,1,['schedul'],['schedule']
Energy Efficiency,/// StartBlock - Initialize register live-range state for scheduling in; /// this block.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp:58,schedul,scheduling,58,interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"/// Static allocated buffer for the stream, used by the raw_ostream class. The; /// buffer is sized to hold the content of a physical record.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/GOFFObjectWriter.cpp:11,allocate,allocated,11,interpreter/llvm-project/llvm/lib/MC/GOFFObjectWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/GOFFObjectWriter.cpp,1,['allocate'],['allocated']
Energy Efficiency,/// StaticAllocaMap - Keep track of frame indices for fixed sized allocas in; /// the entry block. This allows the allocas to be efficiently referenced; /// anywhere in the function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/FunctionLoweringInfo.h:129,efficient,efficiently,129,interpreter/llvm-project/llvm/include/llvm/CodeGen/FunctionLoweringInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/FunctionLoweringInfo.h,1,['efficient'],['efficiently']
Energy Efficiency,/// Status of an instruction's critical resource consumption.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:49,consumption,consumption,49,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['consumption'],['consumption']
Energy Efficiency,"/// Storage for either the bit-width, the in-class initializer, or; /// both (via InitAndBitWidth), or the captured variable length array bound.; ///; /// If the storage kind is ISK_InClassCopyInit or; /// ISK_InClassListInit, but the initializer is null, then this; /// field has an in-class initializer that has not yet been parsed; /// and attached.; // FIXME: Tail-allocate this to reduce the size of FieldDecl in the; // overwhelmingly common case that we have none of these things.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:369,allocate,allocate,369,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,2,"['allocate', 'reduce']","['allocate', 'reduce']"
Energy Efficiency,"/// Store the effects of a change in pressure on things that MI scheduler cares; /// about.; ///; /// Excess records the value of the largest difference in register units beyond; /// the target's pressure limits across the affected pressure sets, where; /// largest is defined as the absolute value of the difference. Negative; /// ExcessUnits indicates a reduction in pressure that had already exceeded the; /// target's limits.; ///; /// CriticalMax records the largest increase in the tracker's max pressure that; /// exceeds the critical limit for some pressure set determined by the client.; ///; /// CurrentMax records the largest increase in the tracker's max pressure that; /// exceeds the current limit for some pressure set determined by the client.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterPressure.h:64,schedul,scheduler,64,interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterPressure.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RegisterPressure.h,1,['schedul'],['scheduler']
Energy Efficiency,"/// StoredNameKind represent the kind of name that is actually stored in the; /// upper bits of the Ptr field. This is only used internally.; ///; /// NameKind, StoredNameKind, and DeclarationNameExtra::ExtraKind; /// must satisfy the following properties. These properties enable; /// efficient conversion between the various kinds.; ///; /// * The first seven enumerators of StoredNameKind must have the same; /// numerical value as the first seven enumerators of NameKind.; /// This enable efficient conversion between the two enumerations; /// in the usual case.; ///; /// * The enumerations values of DeclarationNameExtra::ExtraKind must start; /// at zero, and correspond to the numerical value of the first non-inline; /// enumeration values of NameKind minus an offset. This makes conversion; /// between DeclarationNameExtra::ExtraKind and NameKind possible with; /// a single addition/substraction.; ///; /// * The enumeration values of Selector::IdentifierInfoFlag must correspond; /// to the relevant enumeration values of StoredNameKind.; /// More specifically:; /// * ZeroArg == StoredObjCZeroArgSelector,; /// * OneArg == StoredObjCOneArgSelector,; /// * MultiArg == StoredDeclarationNameExtra; ///; /// * PtrMask must mask the low 3 bits of Ptr.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclarationName.h:286,efficient,efficient,286,interpreter/llvm-project/clang/include/clang/AST/DeclarationName.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclarationName.h,2,['efficient'],['efficient']
Energy Efficiency,/// Stores extra instruction information inline or allocates as ExtraInfo; /// based on the number of pointers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineInstr.h:51,allocate,allocates,51,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineInstr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineInstr.h,1,['allocate'],['allocates']
Energy Efficiency,"/// Stream adapter for standard library input streams.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/stream.h:11,adapt,adapter,11,geom/geom/inc/bvh/v2/stream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/stream.h,1,['adapt'],['adapter']
Energy Efficiency,"/// Stream adapter for standard library output streams.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/stream.h:11,adapt,adapter,11,geom/geom/inc/bvh/v2/stream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/bvh/v2/stream.h,1,['adapt'],['adapter']
Energy Efficiency,"/// StringMap - This is an unconventional map that is specialized for handling; /// keys that are ""strings"", which are basically ranges of bytes. This does some; /// funky memory allocation and hashing things to make it extremely efficient,; /// storing the string data *after* the value in the map.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/StringMap.h:230,efficient,efficient,230,interpreter/llvm-project/llvm/include/llvm/ADT/StringMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/StringMap.h,1,['efficient'],['efficient']
Energy Efficiency,"/// Structure with information about how a bitfield should be accessed.; ///; /// Often we layout a sequence of bitfields as a contiguous sequence of bits.; /// When the AST record layout does this, we represent it in the LLVM IR's type; /// as either a sequence of i8 members or a byte array to reserve the number of; /// bytes touched without forcing any particular alignment beyond the basic; /// character alignment.; ///; /// Then accessing a particular bitfield involves converting this byte array; /// into a single integer of that size (i24 or i40 -- may not be power-of-two; /// size), loading it, and shifting and masking to extract the particular; /// subsequence of bits which make up that particular bitfield. This structure; /// encodes the information used to construct the extraction code sequences.; /// The CGRecordLayout also has a field index which encodes which byte-sequence; /// this bitfield falls within. Let's assume the following C struct:; ///; /// struct S {; /// char a, b, c;; /// unsigned bits : 3;; /// unsigned more_bits : 4;; /// unsigned still_more_bits : 7;; /// };; ///; /// This will end up as the following LLVM type. The first array is the; /// bitfield, and the second is the padding out to a 4-byte alignment.; ///; /// %t = type { i8, i8, i8, i8, i8, [3 x i8] }; ///; /// When generating code to access more_bits, we'll generate something; /// essentially like this:; ///; /// define i32 @foo(%t* %base) {; /// %0 = gep %t* %base, i32 0, i32 3; /// %2 = load i8* %1; /// %3 = lshr i8 %2, 3; /// %4 = and i8 %3, 15; /// %5 = zext i8 %4 to i32; /// ret i32 %i; /// }; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGRecordLayout.h:570,power,power-of-two,570,interpreter/llvm-project/clang/lib/CodeGen/CGRecordLayout.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGRecordLayout.h,1,['power'],['power-of-two']
Energy Efficiency,/// Summarize the scheduling resources required for an instruction of a; /// particular scheduling class.; ///; /// Defined as an aggregate struct for creating tables with initializer lists.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h:18,schedul,scheduling,18,interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,2,['schedul'],['scheduling']
Energy Efficiency,"/// Support class for static dtor execution. For hosted (in-process) JITs; /// only!; ///; /// If a __cxa_atexit function isn't found C++ programs that use static; /// destructors will fail to link. However, we don't want to use the host; /// process's __cxa_atexit, because it will schedule JIT'd destructors to run; /// after the JIT has been torn down, which is no good. This class makes it easy; /// to override __cxa_atexit (and the related __dso_handle).; ///; /// To use, clients should manually call searchOverrides from their symbol; /// resolver. This should generally be done after attempting symbol resolution; /// inside the JIT, but before searching the host process's symbol table. When; /// the client determines that destructors should be run (generally at JIT; /// teardown or after a return from main), the runDestructors method should be; /// called.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/ExecutionUtils.h:283,schedul,schedule,283,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/ExecutionUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/Orc/ExecutionUtils.h,1,['schedul'],['schedule']
Energy Efficiency,/// Support for OpenMP 4.5 monotonic and nonmonotonic schedule modifiers.; /// Set if the monotonic schedule modifier was present.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:54,schedul,schedule,54,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,2,['schedul'],['schedule']
Energy Efficiency,"/// Swap *this and other.; ///; /// Very efficient; swaps the `fImpl` pointers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:41,efficient,efficient,41,hist/histv7/inc/ROOT/RHist.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx,1,['efficient'],['efficient']
Energy Efficiency,"/// Swap two histograms.; ///; /// Very efficient; swaps the `fImpl` pointers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:40,efficient,efficient,40,hist/histv7/inc/ROOT/RHist.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx,1,['efficient'],['efficient']
Energy Efficiency,"/// SwitchInst ctor - Create a new switch instruction, specifying a value to; /// switch on and a default destination. The number of additional cases can; /// be specified here to make memory allocation more efficient. This; /// constructor also autoinserts at the end of the specified BasicBlock.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Instructions.cpp:208,efficient,efficient,208,interpreter/llvm-project/llvm/lib/IR/Instructions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Instructions.cpp,1,['efficient'],['efficient']
Energy Efficiency,"/// SwitchInst ctor - Create a new switch instruction, specifying a value to; /// switch on and a default destination. The number of additional cases can; /// be specified here to make memory allocation more efficient. This; /// constructor can also autoinsert before another instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Instructions.cpp:208,efficient,efficient,208,interpreter/llvm-project/llvm/lib/IR/Instructions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Instructions.cpp,1,['efficient'],['efficient']
Energy Efficiency,"/// Symbol resolution interface.; ///; /// Allows symbol flags and addresses to be looked up by name.; /// Symbol queries are done in bulk (i.e. you request resolution of a set of; /// symbols, rather than a single one) to reduce IPC overhead in the case of; /// remote JITing, and expose opportunities for parallel compilation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITSymbol.h:223,reduce,reduce,223,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITSymbol.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITSymbol.h,1,['reduce'],['reduce']
Energy Efficiency,/// SystemZHazardRecognizer maintains the state for one MBB during scheduling.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h:67,schedul,scheduling,67,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// TODO(jblomer): should be an efficient index structure that allows; /// - random insert; /// - random delete; /// - searching by page",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RPagePool.hxx:32,efficient,efficient,32,tree/ntuple/v7/inc/ROOT/RPagePool.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RPagePool.hxx,1,['efficient'],['efficient']
Energy Efficiency,"/// TODO: For all Allocas, maybe allocate an array.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FuzzMutate/RandomIRBuilder.cpp:33,allocate,allocate,33,interpreter/llvm-project/llvm/lib/FuzzMutate/RandomIRBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FuzzMutate/RandomIRBuilder.cpp,1,['allocate'],['allocate']
Energy Efficiency,/// TODO: Revisit next line: big copy with ERMSB on march >= haswell are very; /// efficient.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86SelectionDAGInfo.cpp:83,efficient,efficient,83,interpreter/llvm-project/llvm/lib/Target/X86/X86SelectionDAGInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86SelectionDAGInfo.cpp,1,['efficient'],['efficient']
Energy Efficiency,/// TODO: allocate a new stack memory.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FuzzMutate/RandomIRBuilder.cpp:10,allocate,allocate,10,interpreter/llvm-project/llvm/lib/FuzzMutate/RandomIRBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FuzzMutate/RandomIRBuilder.cpp,1,['allocate'],['allocate']
Energy Efficiency,/// Target can subclass this hook to select a different DAG scheduler.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h:60,schedul,scheduler,60,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h,1,['schedul'],['scheduler']
Energy Efficiency,"/// Targets may override this function to provide custom SDIV lowering for; /// power-of-2 denominators. If the target returns an empty SDValue, LLVM; /// assumes SDIV is expensive and replaces it with a series of other integer; /// operations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:80,power,power-of-,80,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,1,['power'],['power-of-']
Energy Efficiency,"/// Targets may override this function to provide custom SREM lowering for; /// power-of-2 denominators. If the target returns an empty SDValue, LLVM; /// assumes SREM is expensive and replaces it with a series of other integer; /// operations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:80,power,power-of-,80,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,1,['power'],['power-of-']
Energy Efficiency,"/// Temporary store for deleted instructions. Instructions will be deleted; /// eventually when the BoUpSLP is destructed. The deferral is required to; /// ensure that there are no incorrect collisions in the AliasCache, which; /// can happen if a new instruction is allocated at the same address as a; /// previously deleted instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:267,allocate,allocated,267,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['allocate'],['allocated']
Energy Efficiency,"/// TentativeParsingAction - An object that is used as a kind of ""tentative; /// parsing transaction"". It gets instantiated to mark the token position and; /// after the token consumption is done, Commit() or Revert() is called to; /// either ""commit the consumed tokens"" or revert to the previously marked; /// token position. Example:; ///; /// TentativeParsingAction TPA(*this);; /// ConsumeToken();; /// ....; /// TPA.Revert();; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Parse/Parser.h:176,consumption,consumption,176,interpreter/llvm-project/clang/include/clang/Parse/Parser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Parse/Parser.h,1,['consumption'],['consumption']
Energy Efficiency,/// Test if V is always a pointer to allocated and suitably aligned memory for; /// a simple load or store.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/Loads.cpp:37,allocate,allocated,37,interpreter/llvm-project/llvm/lib/Analysis/Loads.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/Loads.cpp,1,['allocate'],['allocated']
Energy Efficiency,/// Test if the given instruction is in a position to be optimized; /// with a tail-call. This roughly means that it's in a block with; /// a return and there's nothing that needs to be scheduled; /// between it and the return.; ///; /// This function only tests target-independent requirements.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Analysis.h:186,schedul,scheduled,186,interpreter/llvm-project/llvm/include/llvm/CodeGen/Analysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Analysis.h,2,['schedul'],['scheduled']
Energy Efficiency,/// Test if the given instruction should be considered a scheduling boundary.; /// This primarily includes labels and terminators.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h:57,schedul,scheduling,57,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,2,['schedul'],['scheduling']
Energy Efficiency,"/// Test if there is a dominating equivalence condition for the; /// two operands. If there is, try to reduce the binary operation; /// between the two operands.; /// Example: Op0 - Op1 --> 0 when Op0 == Op1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:103,reduce,reduce,103,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,1,['reduce'],['reduce']
Energy Efficiency,/// Test whether the given two constants can be allocated the same constant pool; /// entry referenced by \param A.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineFunction.cpp:48,allocate,allocated,48,interpreter/llvm-project/llvm/lib/CodeGen/MachineFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineFunction.cpp,1,['allocate'],['allocated']
Energy Efficiency,/// Test whether this can be lowered with a single SHUFPS instruction.; ///; /// This is used to disable more specialized lowerings when the shufps lowering; /// will happen to be efficient.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:180,efficient,efficient,180,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['efficient'],['efficient']
Energy Efficiency,"/// Tests if a value is a call or invoke to a library function that; /// allocates memory (either malloc, calloc, or strdup like).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h:73,allocate,allocates,73,interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h,2,['allocate'],['allocates']
Energy Efficiency,/// Tests if a value is a call or invoke to a library function that; /// allocates memory similar to malloc or calloc.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h:73,allocate,allocates,73,interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h,2,['allocate'],['allocates']
Energy Efficiency,/// Tests if a value is a call or invoke to a library function that; /// allocates memory via new.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h:73,allocate,allocates,73,interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h,2,['allocate'],['allocates']
Energy Efficiency,"/// Tests if a value is a call or invoke to a library function that; /// allocates or reallocates memory (either malloc, calloc, realloc, or strdup; /// like).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h:73,allocate,allocates,73,interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h,2,['allocate'],['allocates']
Energy Efficiency,"/// Tests if this a weak dependence. Weak dependencies are considered DAG; /// edges for height computation and other heuristics, but do not force; /// ordering. Breaking a weak edge may require the scheduler to compensate,; /// for example by inserting a copy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:199,schedul,scheduler,199,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['schedul'],['scheduler']
Energy Efficiency,/// Tests whether the target 32-bit PowerPC uses Secure PLT.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h:36,Power,PowerPC,36,interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h,1,['Power'],['PowerPC']
Energy Efficiency,/// Tests whether the target 64-bit PowerPC big endian ABI is ELFv2.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h:36,Power,PowerPC,36,interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h,1,['Power'],['PowerPC']
Energy Efficiency,/// Tests whether the target is 32-bit PowerPC (little and big endian).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h:39,Power,PowerPC,39,interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h,1,['Power'],['PowerPC']
Energy Efficiency,/// Tests whether the target is 64-bit PowerPC (little and big endian).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h:39,Power,PowerPC,39,interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h,1,['Power'],['PowerPC']
Energy Efficiency,/// Tests whether the target is PowerPC (32- or 64-bit LE or BE).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h:32,Power,PowerPC,32,interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TargetParser/Triple.h,1,['Power'],['PowerPC']
Energy Efficiency,"/// The ""base"" type of an extended qualifiers type (\c ExtQuals) or; /// a self-referential pointer (for \c Type).; ///; /// This pointer allows an efficient mapping from a QualType to its; /// underlying type pointer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h:148,efficient,efficient,148,interpreter/llvm-project/clang/include/clang/AST/Type.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h,1,['efficient'],['efficient']
Energy Efficiency,"/// The ""main"" function for implementing Swing Modulo Scheduling.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:54,Schedul,Scheduling,54,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['Schedul'],['Scheduling']
Energy Efficiency,"/// The AddressRanges class helps normalize address range collections.; /// This class keeps a sorted vector of AddressRange objects and can perform; /// insertions and searches efficiently. Intersecting([100,200), [150,300)); /// and adjacent([100,200), [200,300)) address ranges are combined during; /// insertion.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/AddressRanges.h:178,efficient,efficiently,178,interpreter/llvm-project/llvm/include/llvm/ADT/AddressRanges.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/AddressRanges.h,1,['efficient'],['efficiently']
Energy Efficiency,"/// The AddressRangesBase class presents the base functionality for the; /// normalized address ranges collection. This class keeps a sorted vector; /// of AddressRange-like objects and can perform searches efficiently.; /// The address ranges are always sorted and never contain any invalid,; /// empty or intersected address ranges.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/AddressRanges.h:207,efficient,efficiently,207,interpreter/llvm-project/llvm/include/llvm/ADT/AddressRanges.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/AddressRanges.h,1,['efficient'],['efficiently']
Energy Efficiency,"/// The CGRecordLowering is responsible for lowering an ASTRecordLayout to an; /// llvm::Type. Some of the lowering is straightforward, some is not. Here we; /// detail some of the complexities and weirdnesses here.; /// * LLVM does not have unions - Unions can, in theory be represented by any; /// llvm::Type with correct size. We choose a field via a specific heuristic; /// and add padding if necessary.; /// * LLVM does not have bitfields - Bitfields are collected into contiguous; /// runs and allocated as a single storage type for the run. ASTRecordLayout; /// contains enough information to determine where the runs break. Microsoft; /// and Itanium follow different rules and use different codepaths.; /// * It is desired that, when possible, bitfields use the appropriate iN type; /// when lowered to llvm types. For example unsigned x : 24 gets lowered to; /// i24. This isn't always possible because i24 has storage size of 32 bit; /// and if it is possible to use that extra byte of padding we must use; /// [i8 x 3] instead of i24. The function clipTailPadding does this.; /// C++ examples that require clipping:; /// struct { int a : 24; char b; }; // a must be clipped, b goes at offset 3; /// struct A { int a : 24; }; // a must be clipped because a struct like B; // could exist: struct B : A { char b; }; // b goes at offset 3; /// * Clang ignores 0 sized bitfields and 0 sized bases but *not* zero sized; /// fields. The existing asserts suggest that LLVM assumes that *every* field; /// has an underlying storage type. Therefore empty structures containing; /// zero sized subobjects such as empty records or zero sized arrays still get; /// a zero sized (empty struct) storage type.; /// * Clang reads the complete type rather than the base type when generating; /// code to access fields. Bitfields in tail position with tail padding may; /// be clipped in the base class but not the complete class (we may discover; /// that the tail padding is not used in the complete class.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp:500,allocate,allocated,500,interpreter/llvm-project/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp,1,['allocate'],['allocated']
Energy Efficiency,/// The CGSCC analysis manager.; ///; /// See the documentation for the AnalysisManager template for detail; /// documentation. This type serves as a convenient way to refer to this; /// construct in the adaptors and proxies used to integrate this into the larger; /// pass manager infrastructure.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h:204,adapt,adaptors,204,interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/CGSCCPassManager.h,1,['adapt'],['adaptors']
Energy Efficiency,"/// The CXCodeCompleteResults structure we allocate internally;; /// the client only sees the initial CXCodeCompleteResults structure.; ///; /// Normally, clients of CXString shouldn't care whether or not a CXString is; /// managed by a pool or by explicitly malloc'ed memory. But; /// AllocatedCXCodeCompleteResults outlives the CXTranslationUnit, so we can; /// not rely on the StringPool in the TU.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndexCodeCompletion.cpp:43,allocate,allocate,43,interpreter/llvm-project/clang/tools/libclang/CIndexCodeCompletion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndexCodeCompletion.cpp,2,"['Allocate', 'allocate']","['AllocatedCXCodeCompleteResults', 'allocate']"
Energy Efficiency,"/// The DeltaTree class is a multiway search tree (BTree) structure with some; /// fancy features. B-Trees are generally more memory and cache efficient; /// than binary trees, because they store multiple keys/values in each node.; ///; /// DeltaTree implements a key/value mapping from FileIndex to Delta, allowing; /// fast lookup by FileIndex. However, an added (important) bonus is that it; /// can also efficiently tell us the full accumulated delta for a specific; /// file offset as well, without traversing the whole tree.; ///; /// The nodes of the tree are made up of instances of two classes:; /// DeltaTreeNode and DeltaTreeInteriorNode. The later subclasses the; /// former and adds children pointers. Each node knows the full delta of all; /// entries (recursively) contained inside of it, which allows us to get the; /// full delta implied by a whole subtree in constant time.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/DeltaTree.cpp:143,efficient,efficient,143,interpreter/llvm-project/clang/lib/Rewrite/DeltaTree.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/DeltaTree.cpp,2,['efficient'],"['efficient', 'efficiently']"
Energy Efficiency,"/// The ID of the scheduling region. For a new vectorization iteration this; /// is incremented which ""removes"" all ScheduleData from the region.; /// Make sure that the initial SchedulingRegionID is greater than the; /// initial SchedulingRegionID in ScheduleData (which is 0).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:18,schedul,scheduling,18,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,5,"['Schedul', 'schedul']","['ScheduleData', 'SchedulingRegionID', 'scheduling']"
Energy Efficiency,"/// The MD5 checksum, if there is one. Non-owning pointer to data allocated; /// in MCContext.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCDwarf.h:66,allocate,allocated,66,interpreter/llvm-project/llvm/include/llvm/MC/MCDwarf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCDwarf.h,1,['allocate'],['allocated']
Energy Efficiency,"/// The MachineFrameInfo class represents an abstract stack frame until; /// prolog/epilog code is inserted. This class is key to allowing stack frame; /// representation optimizations, such as frame pointer elimination. It also; /// allows more mundane (but still important) optimizations, such as reordering; /// of abstract objects on the stack frame.; ///; /// To support this, the class assigns unique integer identifiers to stack; /// objects requested clients. These identifiers are negative integers for; /// fixed stack objects (such as arguments passed on the stack) or nonnegative; /// for objects that may be reordered. Instructions which refer to stack; /// objects use a special MO_FrameIndex operand to represent these frame; /// indexes.; ///; /// Because this class keeps track of all references to the stack frame, it; /// knows when a variable sized object is allocated on the stack. This is the; /// sole condition which prevents frame pointer elimination, which is an; /// important optimization on register-poor architectures. Because original; /// variable sized alloca's in the source program are the only source of; /// variable sized stack objects, it is safe to decide whether there will be; /// any variable sized objects before all stack objects are known (for; /// example, register allocator spill code never needs variable sized; /// objects).; ///; /// When prolog/epilog code emission is performed, the final stack frame is; /// built and the machine instructions are modified to refer to the actual; /// stack offsets of the object, eliminating all MO_FrameIndex operands from; /// the program.; ///; /// Abstract Stack Frame Information",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h:879,allocate,allocated,879,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,1,['allocate'],['allocated']
Energy Efficiency,/// The Microsoft bitfield layout rule allocates discrete storage; /// units of the field's formal type and only combines adjacent; /// fields of the same formal type. We want to emit a layout with; /// these discrete storage units instead of combining them into a; /// continuous run.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp:39,allocate,allocates,39,interpreter/llvm-project/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGRecordLayoutBuilder.cpp,1,['allocate'],['allocates']
Energy Efficiency,"/// The PhiNodes we're adding.; ///; /// That map is used to simplify some Phi nodes as we iterate over it, so; /// it should have deterministic iterators. We could use a MapVector, but; /// since we already maintain a map from BasicBlock* to a stable numbering; /// (BBNumbers), the DenseMap is more efficient (also supports removal).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp:301,efficient,efficient,301,interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp,1,['efficient'],['efficient']
Energy Efficiency,/// The SMS algorithm consists of the following main steps:; /// 1. Computation and analysis of the dependence graph.; /// 2. Ordering of the nodes (instructions).; /// 3. Attempt to Schedule the loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:183,Schedul,Schedule,183,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['Schedul'],['Schedule']
Energy Efficiency,/// The VPValue of the vector value to be reduced.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h:42,reduce,reduced,42,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h,1,['reduce'],['reduced']
Energy Efficiency,/// The accelerator tables are designed to allow efficient random access; /// (using a symbol name as a key) into debug info by providing an index of the; /// debug info DIEs. This class implements the common functionality of Apple and; /// DWARF 5 accelerator tables.; /// TODO: Generalize the rest of the AppleAcceleratorTable interface and move it; /// to this class.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFAcceleratorTable.h:49,efficient,efficient,49,interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFAcceleratorTable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/DWARF/DWARFAcceleratorTable.h,1,['efficient'],['efficient']
Energy Efficiency,/// The action that the merge action adapts.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/FrontendActions.h:37,adapt,adapts,37,interpreter/llvm-project/clang/include/clang/Frontend/FrontendActions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/FrontendActions.h,1,['adapt'],['adapts']
Energy Efficiency,"/// The actual data that's stored, as a doubly-linked list implemented via; /// indices into the DenseVector. The doubly linked list is implemented; /// circular in Prev indices, and INVALID-terminated in Next indices. This; /// provides efficient access to list tails. These nodes can also be; /// tombstones, in which case they are actually nodes in a single-linked; /// freelist of recyclable slots.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SparseMultiSet.h:238,efficient,efficient,238,interpreter/llvm-project/llvm/include/llvm/ADT/SparseMultiSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SparseMultiSet.h,1,['efficient'],['efficient']
Energy Efficiency,"/// The adaptor from a function pass to a loop pass computes these analyses and; /// makes them available to the loop passes ""for free"". Each loop pass is; /// expected to update these analyses if necessary to ensure they're; /// valid after it runs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAnalysisManager.h:8,adapt,adaptor,8,interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAnalysisManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAnalysisManager.h,1,['adapt'],['adaptor']
Energy Efficiency,"/// The allocated type-source information, as written in the source.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprCXX.h:8,allocate,allocated,8,interpreter/llvm-project/clang/include/clang/AST/ExprCXX.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ExprCXX.h,1,['allocate'],['allocated']
Energy Efficiency,/// The allocating expression; used for diagnostics. Either a CXXNewExpr; /// or a CallExpr (the latter is for direct calls to operator new inside; /// std::allocator<T>::allocate).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:171,allocate,allocate,171,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['allocate'],['allocate']
Energy Efficiency,"/// The allocator position in the current chunk, which is the last entry; /// of ScheduleDataChunks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:81,Schedul,ScheduleDataChunks,81,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['Schedul'],['ScheduleDataChunks']
Energy Efficiency,"/// The allocator used to allocate fBuffer. Can be null if the buffer doesn't need to be freed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RPage.hxx:26,allocate,allocate,26,tree/ntuple/v7/inc/ROOT/RPage.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RPage.hxx,1,['allocate'],['allocate']
Energy Efficiency,"/// The allocator used to allocate memory, e.g. for `AbstractAttribute`s.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:26,allocate,allocate,26,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['allocate'],['allocate']
Energy Efficiency,"/// The allocator used to allocate memory, e.g. for `FunctionInfo`s.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:26,allocate,allocate,26,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['allocate'],['allocate']
Energy Efficiency,/// The allocator used to allocate new code-completion strings.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:26,allocate,allocate,26,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['allocate'],['allocate']
Energy Efficiency,/// The amount of group segment memory required by a work-group in; /// bytes. This does not include any dynamically allocated group; /// segment memory that may be added when the kernel is; /// dispatched.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDKernelCodeT.h:117,allocate,allocated,117,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDKernelCodeT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDKernelCodeT.h,1,['allocate'],['allocated']
Energy Efficiency,/// The beginning of the range to be scheduled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h:37,schedul,scheduled,37,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h,1,['schedul'],['scheduled']
Energy Efficiency,/// The bytes of the subsection. Only non-empty if Subsection is null.; /// FIXME: Reduce the size of this.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/CodeView/DebugSubsectionRecord.h:83,Reduce,Reduce,83,interpreter/llvm-project/llvm/include/llvm/DebugInfo/CodeView/DebugSubsectionRecord.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/CodeView/DebugSubsectionRecord.h,1,['Reduce'],['Reduce']
Energy Efficiency,/// The call that allocates the memory.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:18,allocate,allocates,18,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['allocate'],['allocates']
Energy Efficiency,"/// The combination of sra[wd]i and addze used to implemented signed; /// integer division by a power of 2. The first operand is the dividend,; /// and the second is the constant shift amount (representing the; /// divisor).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h:96,power,power,96,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,1,['power'],['power']
Energy Efficiency,"/// The construction site - the statement that triggered the construction; /// for one of its parts. For instance, stack variable declaration statement; /// triggers construction of itself or its elements if it's an array,; /// new-expression triggers construction of the newly allocated object(s).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:278,allocate,allocated,278,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,1,['allocate'],['allocated']
Energy Efficiency,"/// The copy ctor does not allow copies where source object has either; /// a non-NULL Buffer or SourceLineCache. Ownership of allocated memory; /// is not transferred, so this is a logical error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/SourceManager.h:127,allocate,allocated,127,interpreter/llvm-project/clang/include/clang/Basic/SourceManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/SourceManager.h,1,['allocate'],['allocated']
Energy Efficiency,/// The current size of the scheduling region.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:28,schedul,scheduling,28,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"/// The dependence stack is used to track dependences during an; /// `AbstractAttribute::update` call. As `AbstractAttribute::update` can be; /// recursive we might have multiple vectors of dependences in here. The stack; /// size, should be adjusted according to the expected recursion depth and the; /// inner dependence vector size to the expected number of dependences per; /// abstract attribute. Since the inner vectors are actually allocated on the; /// stack we can be generous with their size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:439,allocate,allocated,439,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['allocate'],['allocated']
Energy Efficiency,"/// The dwarf file and directory tables from the dwarf .file directive.; /// We now emit a line table for each compile unit. To reduce the prologue; /// size of each line table, the files and directories used by each compile; /// unit are separated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCContext.h:128,reduce,reduce,128,interpreter/llvm-project/llvm/include/llvm/MC/MCContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCContext.h,1,['reduce'],['reduce']
Energy Efficiency,/// The end of the range to be scheduled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h:31,schedul,scheduled,31,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h,1,['schedul'],['scheduled']
Energy Efficiency,/// The entity being initialized is an object (or array of; /// objects) allocated via new.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Initialization.h:73,allocate,allocated,73,interpreter/llvm-project/clang/include/clang/Sema/Initialization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Initialization.h,1,['allocate'],['allocated']
Energy Efficiency,/// The first instruction _after_ the scheduling region.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:38,schedul,scheduling,38,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['schedul'],['scheduling']
Energy Efficiency,/// The first instruction of the scheduling region.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:33,schedul,scheduling,33,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['schedul'],['scheduling']
Energy Efficiency,/// The first memory accessing instruction in the scheduling region; /// (can be null).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:50,schedul,scheduling,50,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['schedul'],['scheduling']
Energy Efficiency,/// The first record ID allocated to the extensions themselves.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h:24,allocate,allocated,24,interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/ASTBitCodes.h,1,['allocate'],['allocated']
Energy Efficiency,"/// The fixpoint analysis framework that orchestrates the attribute deduction.; ///; /// The Attributor provides a general abstract analysis framework (guided; /// fixpoint iteration) as well as helper functions for the deduction of; /// (LLVM-IR) attributes. However, also other code properties can be deduced,; /// propagated, and ultimately manifested through the Attributor framework. This; /// is particularly useful if these properties interact with attributes and a; /// co-scheduled deduction allows to improve the solution. Even if not, thus if; /// attributes/properties are completely isolated, they should use the; /// Attributor framework to reduce the number of fixpoint iteration frameworks; /// in the code base. Note that the Attributor design makes sure that isolated; /// attributes are not impacted, in any way, by others derived at the same time; /// if there is no cross-reasoning performed.; ///; /// The public facing interface of the Attributor is kept simple and basically; /// allows abstract attributes to one thing, query abstract attributes; /// in-flight. There are two reasons to do this:; /// a) The optimistic state of one abstract attribute can justify an; /// optimistic state of another, allowing to framework to end up with an; /// optimistic (=best possible) fixpoint instead of one based solely on; /// information in the IR.; /// b) This avoids reimplementing various kinds of lookups, e.g., to check; /// for existing IR attributes, in favor of a single lookups interface; /// provided by an abstract attribute subclass.; ///; /// NOTE: The mechanics of adding a new ""concrete"" abstract attribute are; /// described in the file comment.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:481,schedul,scheduled,481,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,2,"['reduce', 'schedul']","['reduce', 'scheduled']"
Energy Efficiency,"/// The following stacks are used with dataTraverseStmtPre() and; /// dataTraverseStmtPost() to track the depth of nested logical operators in a; /// boolean expression in a function. The ultimate purpose is to keep track; /// of the number of leaf-level conditions in the boolean expression so that a; /// profile bitmap can be allocated based on that number.; ///; /// The stacks are also used to find error cases and notify the user. A; /// standard logical operator nest for a boolean expression could be in a form; /// similar to this: ""x = a && b && c && (d || f)""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenPGO.cpp:329,allocate,allocated,329,interpreter/llvm-project/clang/lib/CodeGen/CodeGenPGO.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenPGO.cpp,1,['allocate'],['allocated']
Energy Efficiency,/// The following two functions generate expressions for the loop lower; /// and upper bounds in case of static and dynamic (dispatch) schedule; /// of the associated 'for' or 'distribute' loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:135,schedul,schedule,135,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['schedul'],['schedule']
Energy Efficiency,"/// The function is a secondary interface to the LLVM Assembly Parser. It parses; /// an ASCII string that (presumably) contains LLVM Assembly code. It returns a; /// Module (intermediate representation) with the corresponding features. Note; /// that this does not verify that the generated Module is valid, so you should; /// run the verifier after parsing the file to check that it is okay.; /// Parse LLVM Assembly from a string; /// \param AsmString The string containing assembly; /// \param Err Error result info.; /// \param Context Context in which to allocate globals info.; /// \param Slots The optional slot mapping that will be initialized during; /// parsing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/AsmParser/Parser.h:561,allocate,allocate,561,interpreter/llvm-project/llvm/include/llvm/AsmParser/Parser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/AsmParser/Parser.h,1,['allocate'],['allocate']
Energy Efficiency,/// The functions which may allocate the data. These are tracked to reduce; /// the false alarm rate.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MacOSKeychainAPIChecker.cpp:28,allocate,allocate,28,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MacOSKeychainAPIChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MacOSKeychainAPIChecker.cpp,2,"['allocate', 'reduce']","['allocate', 'reduce']"
Energy Efficiency,/// The goal of this scheduling strategy is to maximize ILP for a single wave; /// (i.e. latency hiding).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.h:21,schedul,scheduling,21,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.h,1,['schedul'],['scheduling']
Energy Efficiency,/// The goal of this scheduling strategy is to maximize kernel occupancy (i.e.; /// maximum number of waves per simd).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.h:21,schedul,scheduling,21,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.h,1,['schedul'],['scheduling']
Energy Efficiency,/// The head of a linked list of all SCEVUnknown values that have been; /// allocated. This is used by releaseMemory to locate them all and call; /// their destructors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolution.h:76,allocate,allocated,76,interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolution.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/ScalarEvolution.h,1,['allocate'],['allocated']
Energy Efficiency,"/// The header that is coallocated with an MDNode along with its ""small""; /// operands. It is located immediately before the main body of the node.; /// The operands are in turn located immediately before the header.; /// For resizable MDNodes, the space for the storage vector is also allocated; /// immediately before the header, overlapping with the operands.; /// Explicity set alignment because bitfields by default have an; /// alignment of 1 on z/OS.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Metadata.h:286,allocate,allocated,286,interpreter/llvm-project/llvm/include/llvm/IR/Metadata.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Metadata.h,1,['allocate'],['allocated']
Energy Efficiency,/// The index of the first temporary variable allocated to this operand. The; /// number of allocated temporaries can be found with; /// countRendererFns().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelMatchTable.h:46,allocate,allocated,46,interpreter/llvm-project/llvm/utils/TableGen/GlobalISelMatchTable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelMatchTable.h,2,['allocate'],['allocated']
Energy Efficiency,/// The initial async function context size. The fields of which are reserved; /// for use by the frontend. The frame will be allocated as a tail of this; /// context.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroInstr.h:126,allocate,allocated,126,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroInstr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroInstr.h,1,['allocate'],['allocated']
Energy Efficiency,/// The initiation interval (II) for the schedule.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h:41,schedul,schedule,41,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,1,['schedul'],['schedule']
Energy Efficiency,"/// The instances of the Type class are immutable: once they are created,; /// they are never changed. Also note that only one instance of a particular; /// type is ever created. Thus seeing if two types are equal is a matter of; /// doing a trivial pointer comparison. To enforce that no two equal instances; /// are created, Type instances can only be created via static factory methods; /// in class Type and in derived classes. Once allocated, Types are never; /// free'd.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Type.h:437,allocate,allocated,437,interpreter/llvm-project/llvm/include/llvm/IR/Type.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Type.h,1,['allocate'],['allocated']
Energy Efficiency,"/// The instructions to be generated, in total order. Cycle provides a partial; /// order; the total order within cycles has been decided by the schedule; /// producer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h:145,schedul,schedule,145,interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h,1,['schedul'],['schedule']
Energy Efficiency,"/// The interface of a task scheduler to schedule page (de)compression tasks",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx:28,schedul,scheduler,28,tree/ntuple/v7/inc/ROOT/RPageStorage.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx,2,['schedul'],"['schedule', 'scheduler']"
Energy Efficiency,/// The kind of result that is tail-allocated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h:36,allocate,allocated,36,interpreter/llvm-project/clang/include/clang/AST/Stmt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h,1,['allocate'],['allocated']
Energy Efficiency,"/// The l-value was an access to a declared entity or something; /// equivalently strong, like the address of an array allocated by a; /// language runtime.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGValue.h:119,allocate,allocated,119,interpreter/llvm-project/clang/lib/CodeGen/CGValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGValue.h,1,['allocate'],['allocated']
Energy Efficiency,/// The last memory accessing instruction in the scheduling region; /// (can be null).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:49,schedul,scheduling,49,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"/// The lifetime of a temporary bound to this entity probably ends too soon,; /// because the entity is allocated in a new-expression.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:104,allocate,allocated,104,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['allocate'],['allocated']
Energy Efficiency,/// The list of stack objects allocated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h:30,allocate,allocated,30,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,1,['allocate'],['allocated']
Energy Efficiency,"/// The location of the export info inside the binary is described by; /// LC_DYLD_INFO load command. The symbols exported by a dylib are encoded in a; /// trie. This is a compact representation that factors out common prefixes. It; /// also reduces LINKEDIT pages in RAM because it encodes all information (name,; /// address, flags) in one small, contiguous range. The export area is a stream; /// of nodes. The first node sequentially is the start node for the trie. Nodes; /// for a symbol start with a uleb128 that is the length of the exported symbol; /// information for the string so far. If there is no exported symbol, the node; /// starts with a zero byte. If there is exported info, it follows the length.; /// First is a uleb128 containing flags. Normally, it is followed by; /// a uleb128 encoded offset which is location of the content named; /// by the symbol from the mach_header for the image. If the flags; /// is EXPORT_SYMBOL_FLAGS_REEXPORT, then following the flags is; /// a uleb128 encoded library ordinal, then a zero terminated; /// UTF8 string. If the string is zero length, then the symbol; /// is re-export from the specified dylib with the same name.; /// If the flags is EXPORT_SYMBOL_FLAGS_STUB_AND_RESOLVER, then following; /// the flags is two uleb128s: the stub offset and the resolver offset.; /// The stub is used by non-lazy pointers. The resolver is used; /// by lazy pointers and must be called to get the actual address to use.; /// After the optional exported symbol information is a byte of; /// how many edges (0-255) that this node has leaving it,; /// followed by each edge.; /// Each edge is a zero terminated UTF8 of the addition chars; /// in the symbol, followed by a uleb128 offset for the node that; /// edge points to.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ObjCopy/MachO/MachOObject.h:242,reduce,reduces,242,interpreter/llvm-project/llvm/lib/ObjCopy/MachO/MachOObject.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ObjCopy/MachO/MachOObject.h,1,['reduce'],['reduces']
Energy Efficiency,/// The loop analysis manager.; ///; /// See the documentation for the AnalysisManager template for detail; /// documentation. This typedef serves as a convenient way to refer to this; /// construct in the adaptors and proxies used to integrate this into the larger; /// pass manager infrastructure.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAnalysisManager.h:206,adapt,adaptors,206,interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAnalysisManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopAnalysisManager.h,1,['adapt'],['adaptors']
Energy Efficiency,/// The maximum byte alignment of variables used by the kernel in; /// the specified memory segment. Expressed as a power of two. Must; /// be at least HSA_POWERTWO_16.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDKernelCodeT.h:116,power,power,116,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDKernelCodeT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDKernelCodeT.h,1,['power'],['power']
Energy Efficiency,/// The maximum initiation interval between iterations for this schedule.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h:64,schedul,schedule,64,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,1,['schedul'],['schedule']
Energy Efficiency,/// The maximum size allowed for the scheduling region.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:37,schedul,scheduling,37,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['schedul'],['scheduling']
Energy Efficiency,/// The maximum size for the cache directory in bytes. A value over the amount; /// of available space on the disk will be reduced to the amount of available; /// space. A value of 0 disables the absolute size-based pruning.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CachePruning.h:123,reduce,reduced,123,interpreter/llvm-project/llvm/include/llvm/Support/CachePruning.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CachePruning.h,1,['reduce'],['reduced']
Energy Efficiency,/// The memory allocator used to allocate new IRInstructionData.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/IROutliner.h:33,allocate,allocate,33,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/IROutliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/IROutliner.h,1,['allocate'],['allocate']
Energy Efficiency,/// The memory allocator used to allocate the CodeExtractors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/IROutliner.h:33,allocate,allocate,33,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/IROutliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/IROutliner.h,1,['allocate'],['allocate']
Energy Efficiency,/// The memory allocator used to allocate the OutlinableRegions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/IROutliner.h:33,allocate,allocate,33,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/IROutliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/IROutliner.h,1,['allocate'],['allocate']
Energy Efficiency,/// The minimum initiation interval between iterations for this schedule.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h:64,schedul,schedule,64,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,1,['schedul'],['schedule']
Energy Efficiency,"/// The mobility function, which the number of slots in which; /// an instruction may be scheduled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h:89,schedul,scheduled,89,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,1,['schedul'],['scheduled']
Energy Efficiency,/// The number of bytes allocated so far for each of the bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/LowerTypeTests.h:24,allocate,allocated,24,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/LowerTypeTests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/LowerTypeTests.h,1,['allocate'],['allocated']
Energy Efficiency,"/// The number of dependencies minus the number of dependencies of scheduled; /// instructions. As soon as this is zero, the instruction/bundle gets ready; /// for scheduling.; /// Note that this is negative as long as Dependencies is not calculated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:67,schedul,scheduled,67,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,2,['schedul'],"['scheduled', 'scheduling']"
Energy Efficiency,/// The number of instructions scheduled so far. Used to cut off the; /// scheduler at the point determined by misched-cutoff.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:31,schedul,scheduled,31,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,2,['schedul'],"['scheduled', 'scheduler']"
Energy Efficiency,/// The number of micro operations that can be scheduled at a cycle.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h:47,schedul,scheduled,47,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,1,['schedul'],['scheduled']
Energy Efficiency,/// The number of operands actually allocated. NumOperands is; /// the number actually in use.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h:36,allocate,allocated,36,interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,3,['allocate'],['allocated']
Energy Efficiency,"/// The number of parameters in the list, which are tail-allocated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclObjC.h:57,allocate,allocated,57,interpreter/llvm-project/clang/include/clang/AST/DeclObjC.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclObjC.h,1,['allocate'],['allocated']
Energy Efficiency,"/// The number of scheduled micro operations for each slot. Micro operations; /// are assumed to be scheduled one per cycle, starting with the cycle in; /// which the instruction is scheduled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h:18,schedul,scheduled,18,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,3,['schedul'],['scheduled']
Energy Efficiency,/// The number of stages for a Phi is a little different than other; /// instructions. The minimum value computed in RegToStageDiff is 1; /// because we assume the Phi is needed for at least 1 iteration.; /// This is not the case if the loop value is scheduled prior to the; /// Phi in the same stage. This function returns the number of stages; /// or iterations needed between the Phi definition and any uses.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h:251,schedul,scheduled,251,interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h,1,['schedul'],['scheduled']
Energy Efficiency,/// The number of stages in this schedule (Max(Stage) + 1).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h:33,schedul,schedule,33,interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h,1,['schedul'],['schedule']
Energy Efficiency,"/// The page sink's parallel page compression scheduler if IMT is on.; /// Needs to be destructed after the page sink (in the fill context) is destructed and so declared before.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleWriter.hxx:46,schedul,scheduler,46,tree/ntuple/v7/inc/ROOT/RNTupleWriter.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RNTupleWriter.hxx,1,['schedul'],['scheduler']
Energy Efficiency,/// The pass manager to schedule RegionPasses.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/RegionPass.h:24,schedul,schedule,24,interpreter/llvm-project/llvm/include/llvm/Analysis/RegionPass.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/RegionPass.h,1,['schedul'],['schedule']
Energy Efficiency,/// The position of the initial element of the page in the Data vector.; /// Pages are allocated contiguously in the Data vector.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/PagedVector.h:87,allocate,allocated,87,interpreter/llvm-project/llvm/include/llvm/ADT/PagedVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/PagedVector.h,1,['allocate'],['allocated']
Energy Efficiency,/// The power exponent for the distance-based locality.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/CodeLayout.h:8,power,power,8,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/CodeLayout.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/CodeLayout.h,1,['power'],['power']
Energy Efficiency,"/// The prolog/epilog code inserter calculates the final stack; /// offsets for all of the fixed size objects, updating the Objects list; /// above. It then updates StackSize to contain the number of bytes that need; /// to be allocated on entry to the function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h:227,allocate,allocated,227,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,1,['allocate'],['allocated']
Energy Efficiency,/// The ready-list for scheduling (only used for the dry-run).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:23,schedul,scheduling,23,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['schedul'],['scheduling']
Energy Efficiency,/// The reduced value generated to replace the old instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/AggressiveInstCombineInternal.h:8,reduce,reduced,8,interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/AggressiveInstCombineInternal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/AggressiveInstCombineInternal.h,1,['reduce'],['reduced']
Energy Efficiency,"/// The region for all the non-static global variables.; ///; /// This class is further split into subclasses for efficient implementation of; /// invalidating a set of related global values as is done in; /// RegionStoreManager::invalidateRegions (instead of finding all the dependent; /// globals, we invalidate the whole parent region).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:114,efficient,efficient,114,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h,1,['efficient'],['efficient']
Energy Efficiency,"/// The root of the given SubtreeID was just scheduled. For all subtrees; /// connected to this tree, record the depth of the connection so that the; /// nearest connected subtrees can be prioritized.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:45,schedul,scheduled,45,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,1,['schedul'],['scheduled']
Energy Efficiency,/// The schedule. Null SUnit*'s represent noop instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp:8,schedul,schedule,8,interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,2,['schedul'],['schedule']
Energy Efficiency,/// The second source operand is known to be a power of 2.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp:47,power,power,47,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp,1,['power'],['power']
Energy Efficiency,"/// The set of ""injected"" template arguments used within this; /// template.; ///; /// This pointer refers to the template arguments (there are as; /// many template arguments as template parameters) for the; /// template, and is allocated lazily, since most templates do not; /// require the use of this information.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclTemplate.h:230,allocate,allocated,230,interpreter/llvm-project/clang/include/clang/AST/DeclTemplate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclTemplate.h,1,['allocate'],['allocated']
Energy Efficiency,/// The set of all distinct functions. Use the insert() and remove() methods; /// to modify it. The map allows efficient lookup and deferring of Functions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MergeFunctions.cpp:111,efficient,efficient,111,interpreter/llvm-project/llvm/lib/Transforms/IPO/MergeFunctions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MergeFunctions.cpp,1,['efficient'],['efficient']
Energy Efficiency,/// The set of argument packs we've allocated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Template.h:36,allocate,allocated,36,interpreter/llvm-project/clang/include/clang/Sema/Template.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Template.h,1,['allocate'],['allocated']
Energy Efficiency,/// The set of available SUs to schedule next.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h:32,schedul,schedule,32,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h,1,['schedul'],['schedule']
Energy Efficiency,/// The size as it was allocated. This is always greater or equal to the; /// size that was originally requested.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Memory.h:23,allocate,allocated,23,interpreter/llvm-project/llvm/include/llvm/Support/Memory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Memory.h,2,['allocate'],['allocated']
Energy Efficiency,/// The size of a ScheduleData array in ScheduleDataChunks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:18,Schedul,ScheduleData,18,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,2,['Schedul'],"['ScheduleData', 'ScheduleDataChunks']"
Energy Efficiency,"/// The size of a small buffer that can be allocated on the stack to store iterator-specific information",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h:43,allocate,allocated,43,core/cont/inc/TVirtualCollectionProxy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TVirtualCollectionProxy.h,1,['allocate'],['allocated']
Energy Efficiency,"/// The size of an allocated array is represented by a Capacity instance.; ///; /// This class is much smaller than a size_t, and it provides methods to work; /// with the set of legal array capacities.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ArrayRecycler.h:19,allocate,allocated,19,interpreter/llvm-project/llvm/include/llvm/Support/ArrayRecycler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ArrayRecycler.h,1,['allocate'],['allocated']
Energy Efficiency,/// The size of the currently allocated portion of the stack.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CallLowering.h:30,allocate,allocated,30,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CallLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CallLowering.h,1,['allocate'],['allocated']
Energy Efficiency,"/// The size of the inline storage of an RVec.; /// Our policy is to allocate at least 8 elements (or more if they all fit into one cacheline); /// unless the size of the buffer with 8 elements would be over a certain maximum size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx:69,allocate,allocate,69,math/vecops/inc/ROOT/RVec.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx,1,['allocate'],['allocate']
Energy Efficiency,/// The slabs allocated so far.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Allocator.h:14,allocate,allocated,14,interpreter/llvm-project/llvm/include/llvm/Support/Allocator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Allocator.h,1,['allocate'],['allocated']
Energy Efficiency,/// The source code of the file. Non-owning reference to data allocated in; /// MCContext.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCDwarf.h:62,allocate,allocated,62,interpreter/llvm-project/llvm/include/llvm/MC/MCDwarf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCDwarf.h,1,['allocate'],['allocated']
Energy Efficiency,/// The standard DAG builder does not normally include terminators as DAG; /// nodes because it does not create the necessary dependencies to prevent; /// reordering. A specialized scheduler can override; /// TargetInstrInfo::isSchedulingBoundary then enable this flag to indicate; /// it has taken responsibility for scheduling the terminator correctly.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h:181,schedul,scheduler,181,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h,2,['schedul'],"['scheduler', 'scheduling']"
Energy Efficiency,/// The target scheduling preference: shortest possible total cycles or lowest; /// register usage.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:15,schedul,scheduling,15,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// The template arguments as written in the sources, if provided.; /// FIXME: Normally null; tail-allocate this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclTemplate.h:99,allocate,allocate,99,interpreter/llvm-project/clang/include/clang/AST/DeclTemplate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclTemplate.h,1,['allocate'],['allocate']
Energy Efficiency,/// The total amount of space allocated for this section. This includes the; /// section size and the maximum amount of space that the stubs can occupy.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h:30,allocate,allocated,30,interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/RuntimeDyld/RuntimeDyldImpl.h,1,['allocate'],['allocated']
Energy Efficiency,"/// The tracking of resources here are quite similar to the common; /// code use of a critical resource. However, z13 differs in the way; /// that it has two processor sides which may be interesting to; /// model in the future (a work in progress).; /// Counters for the number of uops scheduled per processor; /// resource.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h:286,schedul,scheduled,286,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h,1,['schedul'],['scheduled']
Energy Efficiency,/// The value of this heap-allocated object.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:27,allocate,allocated,27,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['allocate'],['allocated']
Energy Efficiency,"/// The virtual directories that we have allocated.; ///; /// For each virtual file (e.g. foo/bar/baz.cpp), we add all of its parent; /// directories (foo/ and foo/bar/) here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/FileManager.h:41,allocate,allocated,41,interpreter/llvm-project/clang/include/clang/Basic/FileManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/FileManager.h,1,['allocate'],['allocated']
Energy Efficiency,/// The virtual files that we have allocated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/FileManager.h:35,allocate,allocated,35,interpreter/llvm-project/clang/include/clang/Basic/FileManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/FileManager.h,1,['allocate'],['allocated']
Energy Efficiency,/// These are the different kinds of scheduling dependencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:37,schedul,scheduling,37,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// These function return the interval used by a resource in bottom and top; /// scheduling.; ///; /// Consider an instruction that uses resources X0, X1 and X2 as follows:; ///; /// X0 X1 X1 X2 +--------+-------------+--------------+; /// |Resource|AcquireAtCycle|ReleaseAtCycle|; /// +--------+-------------+--------------+; /// | X0 | 0 | 1 |; /// +--------+-------------+--------------+; /// | X1 | 1 | 3 |; /// +--------+-------------+--------------+; /// | X2 | 3 | 4 |; /// +--------+-------------+--------------+; ///; /// If we can schedule the instruction at cycle C, we need to; /// compute the interval of the resource as follows:; ///; /// # TOP DOWN SCHEDULING; ///; /// Cycles scheduling flows to the _right_, in the same direction; /// of time.; ///; /// C 1 2 3 4 5 ...; /// ------|------|------|------|------|------|----->; /// X0 X1 X1 X2 ---> direction of time; /// X0 [C, C+1); /// X1 [C+1, C+3); /// X2 [C+3, C+4); ///; /// Therefore, the formula to compute the interval for a resource; /// of an instruction that can be scheduled at cycle C in top-down; /// scheduling is:; ///; /// [C+AcquireAtCycle, C+ReleaseAtCycle); ///; ///; /// # BOTTOM UP SCHEDULING; ///; /// Cycles scheduling flows to the _left_, in opposite direction; /// of time.; ///; /// In bottom up scheduling, the scheduling happens in opposite; /// direction to the execution of the cycles of the; /// instruction. When the instruction is scheduled at cycle `C`,; /// the resources are allocated in the past relative to `C`:; ///; /// 2 1 C -1 -2 -3 -4 -5 ...; /// <-----|------|------|------|------|------|------|------|---; /// X0 X1 X1 X2 ---> direction of time; /// X0 (C+1, C]; /// X1 (C, C-2]; /// X2 (C-2, C-3]; ///; /// Therefore, the formula to compute the interval for a resource; /// of an instruction that can be scheduled at cycle C in bottom-up; /// scheduling is:; ///; /// [C-ReleaseAtCycle+1, C-AcquireAtCycle+1); ///; ///; /// NOTE: In both cases, the number of cycles booked by a; /// resou",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:81,schedul,scheduling,81,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,4,"['SCHEDUL', 'schedul']","['SCHEDULING', 'schedule', 'scheduling']"
Energy Efficiency,/// This GV is a pointer root. Loop over all users of the global and clean up; /// any that obviously don't assign the global a value that isn't dynamically; /// allocated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp:162,allocate,allocated,162,interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,1,['allocate'],['allocated']
Energy Efficiency,/// This ScheduleData is in the current scheduling region if this matches; /// the current SchedulingRegionID of BlockScheduling.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:9,Schedul,ScheduleData,9,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,3,"['Schedul', 'schedul']","['ScheduleData', 'SchedulingRegionID', 'scheduling']"
Energy Efficiency,/// This allocates space for the specified virtual register to be held on the; /// stack.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocFast.cpp:9,allocate,allocates,9,interpreter/llvm-project/llvm/lib/CodeGen/RegAllocFast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocFast.cpp,2,['allocate'],['allocates']
Energy Efficiency,/// This allocator pointer is in charge of creating the IRInstructionDataList; /// so it is not deallocated until whatever external tool is using it is done; /// with the information.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h:33,charge,charge,33,interpreter/llvm-project/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h,1,['charge'],['charge']
Energy Efficiency,/// This allocator pointer is in charge of holding on to the IRInstructionData; /// so it is not deallocated until whatever external tool is using it is done; /// with the information.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h:33,charge,charge,33,interpreter/llvm-project/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IRSimilarityIdentifier.h,1,['charge'],['charge']
Energy Efficiency,/// This boolean keeps track of whether any variable; /// sized objects have been allocated yet.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h:82,allocate,allocated,82,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,1,['allocate'],['allocated']
Energy Efficiency,/// This callback is invoked when a new block of instructions is about to be; /// scheduled. The hazard state is set to an initialized state.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHazardRecognizer.h:82,schedul,scheduled,82,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHazardRecognizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHazardRecognizer.h,1,['schedul'],['scheduled']
Energy Efficiency,"/// This callback is invoked when an instruction is emitted to be scheduled,; /// to advance the hazard state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHazardRecognizer.h:66,schedul,scheduled,66,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHazardRecognizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHazardRecognizer.h,1,['schedul'],['scheduled']
Energy Efficiency,"/// This callback is invoked whenever the next top-down instruction to be; /// scheduled cannot issue in the current cycle, either because of latency; /// or resource conflicts. This should increment the internal state of the; /// hazard recognizer so that previously ""Hazard"" instructions will now not; /// be hazards.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHazardRecognizer.h:79,schedul,scheduled,79,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHazardRecognizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHazardRecognizer.h,1,['schedul'],['scheduled']
Energy Efficiency,"/// This callback may be invoked if getHazardType returns NoHazard. If, even; /// though there is no hazard, it would be better to schedule another; /// available instruction, this callback should return true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHazardRecognizer.h:131,schedul,schedule,131,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHazardRecognizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHazardRecognizer.h,1,['schedul'],['schedule']
Energy Efficiency,/// This class allows targets to optionally customize the logic that resolves; /// scheduling class IDs. Targets can use information encoded in Instrument; /// objects to make more informed scheduling decisions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h:83,schedul,scheduling,83,interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h,2,['schedul'],['scheduling']
Energy Efficiency,"/// This class builds the dependence graph for the instructions in a loop,; /// and attempts to schedule the instructions using the SMS algorithm.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h:96,schedul,schedule,96,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,1,['schedul'],['schedule']
Energy Efficiency,/// This class consists of common code factored out of the SmallVector class to; /// reduce code duplication based on the SmallVector 'N' template parameter.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h:85,reduce,reduce,85,interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h,1,['reduce'],['reduce']
Energy Efficiency,"/// This class consists of common code factored out of the SmallVector class to; /// reduce code duplication based on the SmallVector 'N' template parameter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx:85,reduce,reduce,85,math/vecops/inc/ROOT/RVec.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx,1,['reduce'],['reduce']
Energy Efficiency,"/// This class define an interface similar to the LTOCodeGenerator, but adapted; /// for ThinLTO processing.; /// The ThinLTOCodeGenerator is not intended to be reuse for multiple; /// compilation: the model is that the client adds modules to the generator and; /// ask to perform the ThinLTO optimizations / codegen, and finally destroys the; /// codegenerator.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h:72,adapt,adapted,72,interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/LTO/legacy/ThinLTOCodeGenerator.h,1,['adapt'],['adapted']
Energy Efficiency,"/// This class encapsulates a set of symbols equal to each other.; ///; /// The main idea of the approach requiring such classes is in narrowing; /// and sharing constraints between symbols within the class. Also we can; /// conclude that there is no practical need in storing constraints for; /// every member of the class separately.; ///; /// Main terminology:; ///; /// * ""Equivalence class"" is an object of this class, which can be efficiently; /// compared to other classes. It represents the whole class without; /// storing the actual in it. The members of the class however can be; /// retrieved from the state.; ///; /// * ""Class members"" are the symbols corresponding to the class. This means; /// that A == B for every member symbols A and B from the class. Members of; /// each class are stored in the state.; ///; /// * ""Trivial class"" is a class that has and ever had only one same symbol.; ///; /// * ""Merge operation"" merges two classes into one. It is the main operation; /// to produce non-trivial classes.; /// If, at some point, we can assume that two symbols from two distinct; /// classes are equal, we can merge these classes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp:437,efficient,efficiently,437,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RangeConstraintManager.cpp,1,['efficient'],['efficiently']
Energy Efficiency,/// This class gives a tree-like API to the DenseMap that stores the; /// DeclContext objects. It holds the BumpPtrAllocator where these objects will; /// be allocated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinkerDeclContext.h:158,allocate,allocated,158,interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinkerDeclContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DWARFLinker/Classic/DWARFLinkerDeclContext.h,1,['allocate'],['allocated']
Energy Efficiency,/// This class holds the mapping between values and value numbers. It is used; /// as an efficient mechanism to determine the expression-wise equivalence of; /// two values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/GVN.h:89,efficient,efficient,89,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/GVN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/GVN.h,1,['efficient'],['efficient']
Energy Efficiency,"/// This class implements a layout algorithm for globals referenced by bit sets; /// that tries to keep members of small bit sets together. This can; /// significantly reduce bit set sizes in many cases.; ///; /// It works by assembling fragments of layout from sets of referenced globals.; /// Each set of referenced globals causes the algorithm to create a new; /// fragment, which is assembled by appending each referenced global in the set; /// into the fragment. If a referenced global has already been referenced by an; /// fragment created earlier, we instead delete that fragment and append its; /// contents into the fragment we are assembling.; ///; /// By starting with the smallest fragments, we minimize the size of the; /// fragments that are copied into larger fragments. This is most intuitively; /// thought about when considering the case where the globals are virtual tables; /// and the bit sets represent their derived classes: in a single inheritance; /// hierarchy, the optimum layout would involve a depth-first search of the; /// class hierarchy (and in fact the computed layout ends up looking a lot like; /// a DFS), but a naive DFS would not work well in the presence of multiple; /// inheritance. This aspect of the algorithm ends up fitting smaller; /// hierarchies inside larger ones where that would be beneficial.; ///; /// For example, consider this class hierarchy:; ///; /// A B; /// \ / | \; /// C D E; ///; /// We have five bit sets: bsA (A, C), bsB (B, C, D, E), bsC (C), bsD (D) and; /// bsE (E). If we laid out our objects by DFS traversing B followed by A, our; /// layout would be {B, C, D, E, A}. This is optimal for bsB as it needs to; /// cover the only 4 objects in its hierarchy, but not for bsA as it needs to; /// cover 5 objects, i.e. the entire layout. Our algorithm proceeds as follows:; ///; /// Add bsC, fragments {{C}}; /// Add bsD, fragments {{C}, {D}}; /// Add bsE, fragments {{C}, {D}, {E}}; /// Add bsA, fragments {{A, C}, {D}, {E}}; /// Add",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/LowerTypeTests.h:168,reduce,reduce,168,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/LowerTypeTests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/LowerTypeTests.h,1,['reduce'],['reduce']
Energy Efficiency,"/// This class is a batch walker of all MemoryUse's in the program, and points; /// their defining access at the thing that actually clobbers them. Because it; /// is a batch walker that touches everything, it does not operate like the; /// other walkers. This walker is basically performing a top-down SSA renaming; /// pass, where the version stack is used as the cache. This enables it to be; /// significantly more time and memory efficient than using the regular walker,; /// which is walking bottom-up.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp:435,efficient,efficient,435,interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSA.cpp,1,['efficient'],['efficient']
Energy Efficiency,"/// This class is a pass that identifies similarity in a Module, extracts; /// instances of the similarity, and then consolidating the similar regions; /// in an effort to reduce code size. It uses the IRSimilarityIdentifier pass; /// to identify the similar regions of code, and then extracts the similar; /// sections into a single function. See the above for an example as to; /// how code is extracted and consolidated into a single function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/IROutliner.h:172,reduce,reduce,172,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/IROutliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/IROutliner.h,1,['reduce'],['reduce']
Energy Efficiency,"/// This class is a shared cache, that caches the 'stat' and 'open' calls to the; /// underlying real file system, and the scanned preprocessor directives of; /// files.; ///; /// It is sharded based on the hash of the key to reduce the lock contention for; /// the worker threads.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/DependencyScanning/DependencyScanningFilesystem.h:226,reduce,reduce,226,interpreter/llvm-project/clang/include/clang/Tooling/DependencyScanning/DependencyScanningFilesystem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/DependencyScanning/DependencyScanningFilesystem.h,1,['reduce'],['reduce']
Energy Efficiency,/// This class is a simple list of T structures. It keeps elements as; /// pre-allocated groups to save memory for each element's next pointer.; /// It allocates internal data using specified per-thread BumpPtrAllocator.; /// Method add() can be called asynchronously.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/ArrayList.h:79,allocate,allocated,79,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/ArrayList.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/ArrayList.h,2,['allocate'],"['allocated', 'allocates']"
Energy Efficiency,"/// This class is a wrapper to associative container MapT<KeyT, ValueT> using; /// the hash value of the original key as the new key. This greatly improves the; /// performance of insert and query operations especially when hash values of; /// keys are available a priori, and reduces memory usage if KeyT has a large; /// size.; /// All keys with the same hash value are considered equivalent (i.e. hash; /// collision is silently ignored). Given such feature this class should only be; /// used where it does not affect compilation correctness, for example, when; /// loading a sample profile. The original key is not stored, so if the user; /// needs to preserve it, it should be stored in the mapped type.; /// Assuming the hashing algorithm is uniform, we use the formula; /// 1 - Permute(n, k) / n ^ k where n is the universe size and k is number of; /// elements chosen at random to calculate the probability of collision. With; /// 1,000,000 entries the probability is negligible:; /// 1 - (2^64)!/((2^64-1000000)!*(2^64)^1000000) ~= 3*10^-8.; /// Source: https://en.wikipedia.org/wiki/Birthday_problem; ///; /// \param MapT The underlying associative container type.; /// \param KeyT The original key type, which requires the implementation of; /// llvm::hash_value(KeyT).; /// \param ValueT The original mapped type, which has the same requirement as; /// the underlying container.; /// \param MapTArgs Additional template parameters passed to the underlying; /// container.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/HashKeyMap.h:277,reduce,reduces,277,interpreter/llvm-project/llvm/include/llvm/ProfileData/HashKeyMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/HashKeyMap.h,1,['reduce'],['reduces']
Energy Efficiency,"/// This class provides the basic blocks traversal order used by passes like; /// ReachingDefAnalysis and ExecutionDomainFix.; /// It identifies basic blocks that are part of loops and should to be visited; /// twice and returns efficient traversal order for all the blocks.; ///; /// We want to visit every instruction in every basic block in order to update; /// it's execution domain or collect clearance information. However, for the; /// clearance calculation, we need to know clearances from all predecessors; /// (including any backedges), therfore we need to visit some blocks twice.; /// As an example, consider the following loop.; ///; ///; /// PH -> A -> B (xmm<Undef> -> xmm<Def>) -> C -> D -> EXIT; /// ^ |; /// +----------------------------------+; ///; /// The iteration order this pass will return is as follows:; /// Optimized: PH A B C A' B' C' D; ///; /// The basic block order is constructed as follows:; /// Once we finish processing some block, we update the counters in MBBInfos; /// and re-process any successors that are now 'done'.; /// We call a block that is ready for its final round of processing `done`; /// (isBlockDone), e.g. when all predecessor information is known.; ///; /// Note that a naive traversal order would be to do two complete passes over; /// all basic blocks/instructions, the first for recording clearances, the; /// second for updating clearance based on backedges.; /// However, for functions without backedges, or functions with a lot of; /// straight-line code, and a small loop, that would be a lot of unnecessary; /// work (since only the BBs that are part of the loop require two passes).; ///; /// E.g., the naive iteration order for the above exmple is as follows:; /// Naive: PH A B C D A' B' C' D'; ///; /// In the optimized approach we avoid processing D twice, because we; /// can entirely process the predecessors before getting to D.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LoopTraversal.h:229,efficient,efficient,229,interpreter/llvm-project/llvm/include/llvm/CodeGen/LoopTraversal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LoopTraversal.h,1,['efficient'],['efficient']
Energy Efficiency,/// This class provides the information for the PowerPC target legalizer for; /// GlobalISel.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCLegalizerInfo.h:48,Power,PowerPC,48,interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCLegalizerInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCLegalizerInfo.h,1,['Power'],['PowerPC']
Energy Efficiency,"/// This class represents a function that is read from a sample profile. It; /// comes with two forms: a string or a hash code. The latter form is the 64-bit; /// MD5 of the function name for efficient storage supported by ExtBinary; /// profile format, and when reading the profile, this class can represent it; /// without converting it to a string first.; /// When representing a hash code, we utilize the LengthOrHashCode field to; /// store it, and Name is set to null. When representing a string, it is same as; /// StringRef.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/FunctionId.h:192,efficient,efficient,192,interpreter/llvm-project/llvm/include/llvm/ProfileData/FunctionId.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/FunctionId.h,1,['efficient'],['efficient']
Energy Efficiency,"/// This class represents an Apple concept known as a 'header map'. To the; /// \#include file resolution process, it basically acts like a directory of; /// symlinks to files. Its advantages are that it is dense and more efficient; /// to create and process than a directory of symlinks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/HeaderMap.h:222,efficient,efficient,222,interpreter/llvm-project/clang/include/clang/Lex/HeaderMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/HeaderMap.h,1,['efficient'],['efficient']
Energy Efficiency,"/// This class represents the scheduled code. The main data structure is a; /// map from scheduled cycle to instructions. During scheduling, the; /// data structure explicitly represents all stages/iterations. When; /// the algorithm finshes, the schedule is collapsed into a single stage,; /// which represents instructions from different loop iterations.; ///; /// The SMS algorithm allows negative values for cycles, so the first cycle; /// in the schedule is the smallest cycle value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h:30,schedul,scheduled,30,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,5,['schedul'],"['schedule', 'scheduled', 'scheduling']"
Energy Efficiency,"/// This class should be specialized by any integral type that converts; /// to/from a YAML scalar where there is a one-to-one mapping between; /// in-memory values and a string in YAML. For example:; ///; /// struct ScalarEnumerationTraits<Colors> {; /// static void enumeration(IO &io, Colors &value) {; /// io.enumCase(value, ""red"", cRed);; /// io.enumCase(value, ""blue"", cBlue);; /// io.enumCase(value, ""green"", cGreen);; /// }; /// };",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/YAMLTraits.h:408,green,green,408,interpreter/llvm-project/llvm/include/llvm/Support/YAMLTraits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/YAMLTraits.h,1,['green'],['green']
Energy Efficiency,/// This class tracks both per-statepoint and per-selectiondag information.; /// For each statepoint it tracks locations of it's gc valuess (incoming and; /// relocated) and list of gcreloc calls scheduled for visiting (this is; /// used for a debug mode consistency check only). The spill slot tracking; /// works in concert with information in FunctionLoweringInfo.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.h:196,schedul,scheduled,196,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.h,1,['schedul'],['scheduled']
Energy Efficiency,"/// This class tracks which instructions are in-flight (i.e., dispatched but not; /// retired) in the OoO backend.; //; /// This class checks on every cycle if/which instructions can be retired.; /// Instructions are retired in program order.; /// In the event of an instruction being retired, the pipeline that owns; /// this RetireControlUnit (RCU) gets notified.; ///; /// On instruction retired, register updates are all architecturally; /// committed, and any physicall registers previously allocated for the; /// retired instruction are freed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RetireControlUnit.h:496,allocate,allocated,496,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RetireControlUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/RetireControlUnit.h,1,['allocate'],['allocated']
Energy Efficiency,/// This class works in conjunction with the post-RA scheduler to rename; /// registers to break register anti-dependencies (WAR hazards).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AntiDepBreaker.h:53,schedul,scheduler,53,interpreter/llvm-project/llvm/include/llvm/CodeGen/AntiDepBreaker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AntiDepBreaker.h,1,['schedul'],['scheduler']
Energy Efficiency,"/// This constraint moves clones into clone groups of type II by comparing them.; ///; /// Clones that aren't type II clones are moved into separate clone groups.; /// In contrast to the RecursiveCloneTypeIIHashConstraint, all clones in a clone; /// group are guaranteed to be type II clones of each other, but it is too; /// slow to efficiently handle large amounts of clones.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h:334,efficient,efficiently,334,interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CloneDetection.h,1,['efficient'],['efficiently']
Energy Efficiency,/// This contains all DAGCombine rules which reduce two values combined by; /// an And operation to a single value. This makes them reusable in the context; /// of visitSELECT(). Rules involving constants are not included as; /// visitSELECT() already handles those cases.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:45,reduce,reduce,45,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['reduce'],['reduce']
Energy Efficiency,/// This contains all DAGCombine rules which reduce two values combined by; /// an Or operation to a single value \see visitANDLike().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:45,reduce,reduce,45,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['reduce'],['reduce']
Energy Efficiency,/// This creates a temporary file with createUniqueFile and schedules it for; /// deletion with sys::RemoveFileOnSignal.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FileSystem.h:60,schedul,schedules,60,interpreter/llvm-project/llvm/include/llvm/Support/FileSystem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FileSystem.h,1,['schedul'],['schedules']
Energy Efficiency,/// This enum describes the various reasons to allocate pages from; /// allocateMappedMemory.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h:47,allocate,allocate,47,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h,2,['allocate'],"['allocate', 'allocateMappedMemory']"
Energy Efficiency,"/// This folds:; /// select (icmp eq (and X, C1)), TC, FC; /// iff C1 is a power 2 and the difference between TC and FC is a power-of-2.; /// To something like:; /// (shr (and (X, C1)), (log2(C1) - log2(TC-FC))) + FC; /// Or:; /// (shl (and (X, C1)), (log2(TC-FC) - log2(C1))) + FC; /// With some variations depending if FC is larger than TC, or the shift; /// isn't needed, or the bit widths don't match.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp:75,power,power,75,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,2,['power'],"['power', 'power-of-']"
Energy Efficiency,"/// This function attempts to reduce the length of the specified list while; /// still maintaining the ""test"" property. This is the core of the ""work""; /// that bugpoint does.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ListReducer.h:30,reduce,reduce,30,interpreter/llvm-project/llvm/tools/bugpoint/ListReducer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/ListReducer.h,1,['reduce'],['reduce']
Energy Efficiency,"/// This function detects the AVG pattern between vectors of unsigned i8/i16,; /// which is c = (a + b + 1) / 2, and replace this operation with the efficient; /// ISD::AVGCEILU (AVG) instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:149,efficient,efficient,149,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['efficient'],['efficient']
Energy Efficiency,"/// This function emits a helper that gathers Reduce lists from the first; /// lane of every active warp to lanes in the first warp.; ///; /// void inter_warp_copy_func(void* reduce_data, num_warps); /// shared smem[warp_size];; /// For all data entries D in reduce_data:; /// sync; /// If (I am the first lane in each warp); /// Copy my local D to smem[warp_id]; /// sync; /// if (I am the first warp); /// Copy smem[thread_id] to my local D",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:46,Reduce,Reduce,46,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['Reduce'],['Reduce']
Energy Efficiency,"/// This function emits a helper that reduces all the reduction variables from; /// the team into the provided global buffer for the reduction variables.; ///; /// void global_to_list_reduce_func(void *buffer, int Idx, void *reduce_data); /// void *GlobPtrs[];; /// GlobPtrs[0] = (void*)&buffer.D0[Idx];; /// ...; /// GlobPtrs[N] = (void*)&buffer.DN[Idx];; /// reduce_function(reduce_data, GlobPtrs);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:38,reduce,reduces,38,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['reduce'],['reduces']
Energy Efficiency,"/// This function emits a helper that reduces all the reduction variables from; /// the team into the provided global buffer for the reduction variables.; ///; /// void list_to_global_reduce_func(void *buffer, int Idx, void *reduce_data); /// void *GlobPtrs[];; /// GlobPtrs[0] = (void*)&buffer.D0[Idx];; /// ...; /// GlobPtrs[N] = (void*)&buffer.DN[Idx];; /// reduce_function(GlobPtrs, reduce_data);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:38,reduce,reduces,38,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['reduce'],['reduces']
Energy Efficiency,"/// This function folds patterns produced by lowering of reduce idioms, such as; /// llvm.vector.reduce.and which are lowered into instruction chains. This code; /// attempts to generate fewer number of scalar comparisons instead of vector; /// comparisons when possible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:57,reduce,reduce,57,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,2,['reduce'],['reduce']
Energy Efficiency,"/// This function implements the Delta Debugging algorithm, it receives a; /// number of Targets (e.g. Functions, Instructions, Basic Blocks, etc.) and; /// splits them in half; these chunks of targets are then tested while ignoring; /// one chunk, if a chunk is proven to be uninteresting (i.e. fails the test); /// it is removed from consideration. The algorithm will attempt to split the; /// Chunks in half and start the process again until it can't split chunks; /// anymore.; ///; /// This function is intended to be called by each specialized delta pass (e.g.; /// RemoveFunctions) and receives three key parameters:; /// * Test: The main TestRunner instance which is used to run the provided; /// interesting-ness test, as well as to store and access the reduced Program.; /// * ExtractChunksFromModule: A function used to tailor the main program so it; /// only contains Targets that are inside Chunks of the given iteration.; /// Note: This function is implemented by each specialized Delta pass; ///; /// Other implementations of the Delta Debugging algorithm can also be found in; /// the CReduce, Delta, and Lithium projects.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/Delta.h:763,reduce,reduced,763,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/Delta.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/Delta.h,1,['reduce'],['reduced']
Energy Efficiency,"/// This function is a main interface to the LLVM Assembly Parser. It parses; /// an ASCII file that (presumably) contains LLVM Assembly code, including; /// a module summary. It returns a Module (intermediate representation) and; /// a ModuleSummaryIndex with the corresponding features. Note that this does; /// not verify that the generated Module or Index are valid, so you should; /// run the verifier after parsing the file to check that they are okay.; /// Parse LLVM Assembly from a file; /// \param Filename The name of the file to parse; /// \param Err Error result info.; /// \param Context Context in which to allocate globals info.; /// \param Slots The optional slot mapping that will be initialized during; /// parsing.; /// \param DataLayoutCallback Override datalayout in the llvm assembly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/AsmParser/Parser.h:622,allocate,allocate,622,interpreter/llvm-project/llvm/include/llvm/AsmParser/Parser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/AsmParser/Parser.h,1,['allocate'],['allocate']
Energy Efficiency,"/// This function is a main interface to the LLVM Assembly Parser. It parses; /// an ASCII file that (presumably) contains LLVM Assembly code. It returns a; /// Module (intermediate representation) with the corresponding features. Note; /// that this does not verify that the generated Module is valid, so you should; /// run the verifier after parsing the file to check that it is okay.; /// Parse LLVM Assembly from a file; /// \param Filename The name of the file to parse; /// \param Err Error result info.; /// \param Context Context in which to allocate globals info.; /// \param Slots The optional slot mapping that will be initialized during; /// parsing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/AsmParser/Parser.h:551,allocate,allocate,551,interpreter/llvm-project/llvm/include/llvm/AsmParser/Parser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/AsmParser/Parser.h,1,['allocate'],['allocate']
Energy Efficiency,"/// This function takes a virtual register computed by a phi node and replaces; /// it with a slot in the stack frame, allocated via alloca. The phi node is; /// deleted and it returns the pointer to the alloca inserted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Local.h:119,allocate,allocated,119,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Local.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Local.h,1,['allocate'],['allocated']
Energy Efficiency,"/// This function takes a virtual register computed by an Instruction and; /// replaces it with a slot in the stack frame, allocated via alloca.; /// This allows the CFG to be changed around without fear of invalidating the; /// SSA information for the value. It returns the pointer to the alloca inserted; /// to create a stack slot for X.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Local.h:123,allocate,allocated,123,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Local.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/Local.h,1,['allocate'],['allocated']
Energy Efficiency,/// This heuristic is used if DFA scheduling is not desired; /// for some VLIW platform.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp:34,schedul,scheduling,34,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"/// This indicates the ""cost"" of the ""representative"" register class for each; /// ValueType. The cost is used by the scheduler to approximate register; /// pressure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:118,schedul,scheduler,118,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,1,['schedul'],['scheduler']
Energy Efficiency,"/// This indicates the ""representative"" register class to use for each; /// ValueType the target supports natively. This information is used by the; /// scheduler to track register pressure. By default, the representative; /// register class is the largest legal super-reg register class of the; /// register class of the specified type. e.g. On x86, i8, i16, and i32's; /// representative class would be GR32.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:153,schedul,scheduler,153,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,1,['schedul'],['scheduler']
Energy Efficiency,"/// This intrinisc is one of the two SHA512 message scheduling instructions.; /// The intrinsic performs an intermediate calculation for the next four; /// SHA512 message qwords. The calculated results are stored in \a dst.; ///; /// \headerfile <immintrin.h>; ///; /// \code; /// __m256i _mm256_sha512msg1_epi64(__m256i __A, __m128i __B); /// \endcode; ///; /// This intrinsic corresponds to the \c VSHA512MSG1 instruction.; ///; /// \param __A; /// A 256-bit vector of [4 x long long].; /// \param __B; /// A 128-bit vector of [2 x long long].; /// \returns; /// A 256-bit vector of [4 x long long].; ///; /// \code{.operation}; /// DEFINE ROR64(qword, n) {; /// 	count := n % 64; /// 	dest := (qword >> count) | (qword << (64 - count)); /// 	RETURN dest; /// }; /// DEFINE SHR64(qword, n) {; /// 	RETURN qword >> n; /// }; /// DEFINE s0(qword):; /// 	RETURN ROR64(qword,1) ^ ROR64(qword, 8) ^ SHR64(qword, 7); /// }; /// W[4] := __B.qword[0]; /// W[3] := __A.qword[3]; /// W[2] := __A.qword[2]; /// W[1] := __A.qword[1]; /// W[0] := __A.qword[0]; /// dst.qword[3] := W[3] + s0(W[4]); /// dst.qword[2] := W[2] + s0(W[3]); /// dst.qword[1] := W[1] + s0(W[2]); /// dst.qword[0] := W[0] + s0(W[1]); /// dst[MAX:256] := 0; /// \endcode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/sha512intrin.h:52,schedul,scheduling,52,interpreter/llvm-project/clang/lib/Headers/sha512intrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/sha512intrin.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// This intrinisc is one of the two SHA512 message scheduling instructions.; /// The intrinsic performs the final calculation for the next four SHA512; /// message qwords. The calculated results are stored in \a dst.; ///; /// \headerfile <immintrin.h>; ///; /// \code; /// __m256i _mm256_sha512msg2_epi64(__m256i __A, __m256i __B); /// \endcode; ///; /// This intrinsic corresponds to the \c VSHA512MSG2 instruction.; ///; /// \param __A; /// A 256-bit vector of [4 x long long].; /// \param __B; /// A 256-bit vector of [4 x long long].; /// \returns; /// A 256-bit vector of [4 x long long].; ///; /// \code{.operation}; /// DEFINE ROR64(qword, n) {; /// 	count := n % 64; /// 	dest := (qword >> count) | (qword << (64 - count)); /// 	RETURN dest; /// }; /// DEFINE SHR64(qword, n) {; /// 	RETURN qword >> n; /// }; /// DEFINE s1(qword) {; /// 	RETURN ROR64(qword,19) ^ ROR64(qword, 61) ^ SHR64(qword, 6); /// }; /// W[14] := __B.qword[2]; /// W[15] := __B.qword[3]; /// W[16] := __A.qword[0] + s1(W[14]); /// W[17] := __A.qword[1] + s1(W[15]); /// W[18] := __A.qword[2] + s1(W[16]); /// W[19] := __A.qword[3] + s1(W[17]); /// dst.qword[3] := W[19]; /// dst.qword[2] := W[18]; /// dst.qword[1] := W[17]; /// dst.qword[0] := W[16]; /// dst[MAX:256] := 0; /// \endcode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/sha512intrin.h:52,schedul,scheduling,52,interpreter/llvm-project/clang/lib/Headers/sha512intrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/sha512intrin.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// This intrinisc is one of the two SM3 message scheduling intrinsics. The; /// intrinsic performs an initial calculation for the next four SM3 message; /// words. The calculated results are stored in \a dst.; ///; /// \headerfile <immintrin.h>; ///; /// \code; /// __m128i _mm_sm3msg1_epi32(__m128i __A, __m128i __B, __m128i __C); /// \endcode; ///; /// This intrinsic corresponds to the \c VSM3MSG1 instruction.; ///; /// \param __A; /// A 128-bit vector of [4 x int].; /// \param __B; /// A 128-bit vector of [4 x int].; /// \param __C; /// A 128-bit vector of [4 x int].; /// \returns; /// A 128-bit vector of [4 x int].; ///; /// \code{.operation}; /// DEFINE ROL32(dword, n) {; /// 	count := n % 32; /// 	dest := (dword << count) | (dword >> (32 - count)); /// 	RETURN dest; /// }; /// DEFINE P1(x) {; /// 	RETURN x ^ ROL32(x, 15) ^ ROL32(x, 23); /// }; /// W[0] := __C.dword[0]; /// W[1] := __C.dword[1]; /// W[2] := __C.dword[2]; /// W[3] := __C.dword[3]; /// W[7] := __A.dword[0]; /// W[8] := __A.dword[1]; /// W[9] := __A.dword[2]; /// W[10] := __A.dword[3]; /// W[13] := __B.dword[0]; /// W[14] := __B.dword[1]; /// W[15] := __B.dword[2]; /// TMP0 := W[7] ^ W[0] ^ ROL32(W[13], 15); /// TMP1 := W[8] ^ W[1] ^ ROL32(W[14], 15); /// TMP2 := W[9] ^ W[2] ^ ROL32(W[15], 15); /// TMP3 := W[10] ^ W[3]; /// dst.dword[0] := P1(TMP0); /// dst.dword[1] := P1(TMP1); /// dst.dword[2] := P1(TMP2); /// dst.dword[3] := P1(TMP3); /// dst[MAX:128] := 0; /// \endcode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/sm3intrin.h:49,schedul,scheduling,49,interpreter/llvm-project/clang/lib/Headers/sm3intrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/sm3intrin.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// This intrinisc is one of the two SM3 message scheduling intrinsics. The; /// intrinsic performs the final calculation for the next four SM3 message; /// words. The calculated results are stored in \a dst.; ///; /// \headerfile <immintrin.h>; ///; /// \code; /// __m128i _mm_sm3msg2_epi32(__m128i __A, __m128i __B, __m128i __C); /// \endcode; ///; /// This intrinsic corresponds to the \c VSM3MSG2 instruction.; ///; /// \param __A; /// A 128-bit vector of [4 x int].; /// \param __B; /// A 128-bit vector of [4 x int].; /// \param __C; /// A 128-bit vector of [4 x int].; /// \returns; /// A 128-bit vector of [4 x int].; ///; /// \code{.operation}; /// DEFINE ROL32(dword, n) {; /// 	count := n % 32; /// 	dest := (dword << count) | (dword >> (32-count)); /// 	RETURN dest; /// }; /// WTMP[0] := __A.dword[0]; /// WTMP[1] := __A.dword[1]; /// WTMP[2] := __A.dword[2]; /// WTMP[3] := __A.dword[3]; /// W[3] := __B.dword[0]; /// W[4] := __B.dword[1]; /// W[5] := __B.dword[2]; /// W[6] := __B.dword[3]; /// W[10] := __C.dword[0]; /// W[11] := __C.dword[1]; /// W[12] := __C.dword[2]; /// W[13] := __C.dword[3]; /// W[16] := ROL32(W[3], 7) ^ W[10] ^ WTMP[0]; /// W[17] := ROL32(W[4], 7) ^ W[11] ^ WTMP[1]; /// W[18] := ROL32(W[5], 7) ^ W[12] ^ WTMP[2]; /// W[19] := ROL32(W[6], 7) ^ W[13] ^ WTMP[3]; /// W[19] := W[19] ^ ROL32(W[16], 6) ^ ROL32(W[16], 15) ^ ROL32(W[16], 30); /// dst.dword[0] := W[16]; /// dst.dword[1] := W[17]; /// dst.dword[2] := W[18]; /// dst.dword[3] := W[19]; /// dst[MAX:128] := 0; /// \endcode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/sm3intrin.h:49,schedul,scheduling,49,interpreter/llvm-project/clang/lib/Headers/sm3intrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/sm3intrin.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// This is a 'bitvector' (really, a variable-sized bit array), optimized for; /// the case when the array is small. It contains one pointer-sized field, which; /// is directly used as a plain collection of bits when possible, or as a; /// pointer to a larger heap-allocated array when necessary. This allows normal; /// ""small"" cases to be fast without losing generality for large inputs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallBitVector.h:265,allocate,allocated,265,interpreter/llvm-project/llvm/include/llvm/ADT/SmallBitVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallBitVector.h,1,['allocate'],['allocated']
Energy Efficiency,"/// This is a compact (memory-size-wise) fragment for holding an encoded; /// instruction (non-relaxable) that has no fixups registered. When applicable,; /// it can be used instead of MCDataFragment and lead to lower memory; /// consumption.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCFragment.h:230,consumption,consumption,230,interpreter/llvm-project/llvm/include/llvm/MC/MCFragment.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCFragment.h,1,['consumption'],['consumption']
Energy Efficiency,/// This is a helper for \a grow() that's out of line to reduce code; /// duplication. This function will report a fatal error if it can't grow at; /// least to \p MinSize.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h:57,reduce,reduce,57,interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h,1,['reduce'],['reduce']
Energy Efficiency,"/// This is a helper function of LowerToHorizontalOp().; /// This function checks that the build_vector \p N in input implements a; /// 128-bit partial horizontal operation on a 256-bit vector, but that operation; /// may not match the layout of an x86 256-bit horizontal instruction.; /// In other words, if this returns true, then some extraction/insertion will; /// be required to produce a valid horizontal instruction.; ///; /// Parameter \p Opcode defines the kind of horizontal operation to match.; /// For example, if \p Opcode is equal to ISD::ADD, then this function; /// checks if \p N implements a horizontal arithmetic add; if instead \p Opcode; /// is equal to ISD::SUB, then this function checks if this is a horizontal; /// arithmetic sub.; ///; /// This function only analyzes elements of \p N whose indices are; /// in range [BaseIdx, LastIdx).; ///; /// TODO: This function was originally used to match both real and fake partial; /// horizontal operations, but the index-matching logic is incorrect for that.; /// See the corrected implementation in isHopBuildVector(). Can we reduce this; /// code because it is only used for partial h-op matching now?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:1097,reduce,reduce,1097,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['reduce'],['reduce']
Energy Efficiency,/// This is a minimal scheduler strategy. The main difference between this; /// and the GenericScheduler is that GCNSchedStrategy uses different; /// heuristics to determine excess/critical pressure sets.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.h:22,schedul,scheduler,22,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.h,1,['schedul'],['scheduler']
Energy Efficiency,/// This is a new instruction. Allocate a new UniqueMachineInstr and; /// Insert.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CSEInfo.cpp:31,Allocate,Allocate,31,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CSEInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CSEInfo.cpp,1,['Allocate'],['Allocate']
Energy Efficiency,"/// This is a simple memory manager which implements the methods called by; /// the RuntimeDyld class to allocate memory for section-based loading of; /// objects, usually those generated by the MCJIT execution engine.; ///; /// This memory manager allocates all section memory as read-write. The; /// RuntimeDyld will copy JITed section memory into these allocated blocks; /// and perform any necessary linking and relocations.; ///; /// Any client using this memory manager MUST ensure that section-specific; /// page permissions have been applied before attempting to execute functions; /// in the JITed object. Permissions can be applied either by calling; /// MCJIT::finalizeObject or by calling SectionMemoryManager::finalizeMemory; /// directly. Clients of MCJIT should call MCJIT::finalizeObject.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h:105,allocate,allocate,105,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h,3,['allocate'],"['allocate', 'allocated', 'allocates']"
Energy Efficiency,"/// This is a used by the pre-regalloc scheduler to determine (in conjunction; /// with areLoadsFromSameBasePtr) if two loads should be scheduled together.; /// On some targets if two loads are loading from; /// addresses in the same cache line, it's better if they are scheduled; /// together. This function takes two integers that represent the load offsets; /// from the common base address. It returns true if it decides it's desirable; /// to schedule the two loads together. ""NumLoads"" is the number of loads that; /// have already been scheduled after Load1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h:39,schedul,scheduler,39,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,5,['schedul'],"['schedule', 'scheduled', 'scheduler']"
Energy Efficiency,"/// This is all of the cached information for one basic block. It contains; /// the per-value lattice elements, as well as a separate set for; /// overdefined values to reduce memory usage. Additionally pointers; /// dereferenced in the block are cached for nullability queries.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp:169,reduce,reduce,169,interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LazyValueInfo.cpp,1,['reduce'],['reduce']
Energy Efficiency,/// This is an extension point for target-specific MCExpr subclasses to; /// implement.; ///; /// NOTE: All subclasses are required to have trivial destructors because; /// MCExprs are bump pointer allocated and not destructed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCExpr.h:198,allocate,allocated,198,interpreter/llvm-project/llvm/include/llvm/MC/MCExpr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCExpr.h,1,['allocate'],['allocated']
Energy Efficiency,/// This is an implementation of the grow() method which only works; /// on POD-like data types and is out of line to reduce code duplication.; /// This function will report a fatal error if it cannot increase capacity.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h:118,reduce,reduce,118,interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SmallVector.h,1,['reduce'],['reduce']
Energy Efficiency,"/// This is an implementation of the grow() method which only works; /// on POD-like data types and is out of line to reduce code duplication.; /// This function will report a fatal error if it cannot increase capacity.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx:118,reduce,reduce,118,math/vecops/inc/ROOT/RVec.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx,1,['reduce'],['reduce']
Energy Efficiency,/// This is normally called from the main scheduler loop but may also be invoked; /// by the scheduling strategy to perform additional code motion.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:42,schedul,scheduler,42,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,2,['schedul'],"['scheduler', 'scheduling']"
Energy Efficiency,"/// This is the resource with the greatest queue, which the; /// scheduler tries to avoid.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h:65,schedul,scheduler,65,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h,1,['schedul'],['scheduler']
Energy Efficiency,"/// This is true if this TokenLexer allocated the Tokens; /// array, and thus needs to free it when destroyed. For simple object-like; /// macros (for example) we just point into the token buffer of the macro; /// definition, we don't make a copy of it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/TokenLexer.h:36,allocate,allocated,36,interpreter/llvm-project/clang/include/clang/Lex/TokenLexer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/TokenLexer.h,1,['allocate'],['allocated']
Energy Efficiency,/// This is used by the post-RA scheduler (SchedulePostRAList.cpp). The; /// post-RA version of misched uses CreateTargetMIHazardRecognizer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp:32,schedul,scheduler,32,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInstrInfo.cpp,2,"['Schedul', 'schedul']","['SchedulePostRAList', 'scheduler']"
Energy Efficiency,/// This is used by the pre-regalloc scheduler to determine if two loads are; /// loading from the same base address. It should only return true if the base; /// pointers are the same and the only differences between the two addresses; /// are the offset. It also returns the offsets by reference.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h:37,schedul,scheduler,37,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetInstrInfo.h,1,['schedul'],['scheduler']
Energy Efficiency,"/// This is used for non static scheduled types and when the ordered; /// clause is present on the loop construct.; /// Depending on the loop schedule, it is necessary to call some runtime; /// routine before start of the OpenMP loop to get the loop upper / lower; /// bounds \a LB and \a UB and stride \a ST.; ///; /// \param CGF Reference to current CodeGenFunction.; /// \param Loc Clang source location.; /// \param ScheduleKind Schedule kind, specified by the 'schedule' clause.; /// \param IVSize Size of the iteration variable in bits.; /// \param IVSigned Sign of the iteration variable.; /// \param Ordered true if loop is ordered, false otherwise.; /// \param DispatchValues struct containing llvm values for lower bound, upper; /// bound, and chunk expression.; /// For the default (nullptr) value, the chunk 1 will be used.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h:32,schedul,scheduled,32,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h,5,"['Schedul', 'schedul']","['Schedule', 'ScheduleKind', 'schedule', 'scheduled']"
Energy Efficiency,"/// This is used to represent a portion of an LLVM function in a low-level; /// Data Dependence DAG representation suitable for instruction selection.; /// This DAG is constructed as the first step of instruction selection in order; /// to allow implementation of machine specific optimizations; /// and code simplifications.; ///; /// The representation used by the SelectionDAG is a target-independent; /// representation, which has some similarities to the GCC RTL representation,; /// but is significantly more simple, powerful, and is a graph form instead of a; /// linear form.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h:523,power,powerful,523,interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h,1,['power'],['powerful']
Energy Efficiency,"/// This limit is currently not defined in any header and any call to; /// `daos_oclass_id2name()` within DAOS uses a stack-allocated buffer; /// whose length varies from 16 to 50, e.g. `https://github.com/daos-stack/daos/blob/master/src/utils/daos_dfs_hdlr.c#L78`.; /// As discussed with the development team, 64 is a reasonable limit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RDaos.hxx:124,allocate,allocated,124,tree/ntuple/v7/inc/ROOT/RDaos.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RDaos.hxx,1,['allocate'],['allocated']
Energy Efficiency,"/// This method allocates a block of memory that is suitable for loading; /// dynamically generated code (e.g. JIT). An attempt to allocate; /// \p NumBytes bytes of virtual memory is made.; /// \p NearBlock may point to an existing allocation in which case; /// an attempt is made to allocate more memory near the existing block.; /// The actual allocated address is not guaranteed to be near the requested; /// address.; /// \p Flags is used to set the initial protection flags for the block; /// of the memory.; /// \p EC [out] returns an object describing any error that occurs.; ///; /// This method may allocate more than the number of bytes requested. The; /// actual number of bytes allocated is indicated in the returned; /// MemoryBlock.; ///; /// The start of the allocated block must be aligned with the; /// system allocation granularity (64K on Windows, page size on Linux).; /// If the address following \p NearBlock is not so aligned, it will be; /// rounded up to the next allocation granularity boundary.; ///; /// \r a non-null MemoryBlock if the function was successful,; /// otherwise a null MemoryBlock is with \p EC describing the error.; ///; /// Allocate mapped memory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Memory.h:16,allocate,allocates,16,interpreter/llvm-project/llvm/include/llvm/Support/Memory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Memory.h,8,"['Allocate', 'allocate']","['Allocate', 'allocate', 'allocated', 'allocates']"
Energy Efficiency,"/// This method attempts to allocate \p NumBytes bytes of virtual memory for; /// \p Purpose. \p NearBlock may point to an existing allocation, in which; /// case an attempt is made to allocate more memory near the existing block.; /// The actual allocated address is not guaranteed to be near the requested; /// address. \p Flags is used to set the initial protection flags for the; /// block of the memory. \p EC [out] returns an object describing any error; /// that occurs.; ///; /// This method may allocate more than the number of bytes requested. The; /// actual number of bytes allocated is indicated in the returned; /// MemoryBlock.; ///; /// The start of the allocated block must be aligned with the system; /// allocation granularity (64K on Windows, page size on Linux). If the; /// address following \p NearBlock is not so aligned, it will be rounded up; /// to the next allocation granularity boundary.; ///; /// \r a non-null MemoryBlock if the function was successful, otherwise a; /// null MemoryBlock with \p EC describing the error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h:28,allocate,allocate,28,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h,6,['allocate'],"['allocate', 'allocated']"
Energy Efficiency,/// This method can be overriden by targets to modify the mca::Instruction; /// object after it has been lowered from the MCInst.; /// This is generally a less disruptive alternative to modifying the; /// scheduling model.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h:205,schedul,scheduling,205,interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// This method is called when object loading is complete and section page; /// permissions can be applied. It is up to the memory manager implementation; /// to decide whether or not to act on this method. The memory manager will; /// typically allocate all sections as read-write and then apply specific; /// permissions when this method is called. Code sections cannot be executed; /// until this function has been called. In addition, any cache coherency; /// operations needed to reliably use the memory are also performed.; ///; /// Returns true if an error occurred, false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/RuntimeDyld.h:246,allocate,allocate,246,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/RuntimeDyld.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/RuntimeDyld.h,1,['allocate'],['allocate']
Energy Efficiency,"/// This method looks for groups of shuffles acting on binops, of the form:; /// %x = shuffle ...; /// %y = shuffle ...; /// %a = binop %x, %y; /// %b = binop %x, %y; /// shuffle %a, %b, selectmask; /// We may, especially if the shuffle is wider than legal, be able to convert; /// the shuffle to a form where only parts of a and b need to be computed. On; /// architectures with no obvious ""select"" shuffle, this can reduce the total; /// number of operations if the target reports them as cheaper.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp:418,reduce,reduce,418,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,1,['reduce'],['reduce']
Energy Efficiency,/// This method may be implemented by targets that want to run passes after; /// prolog-epilog insertion and before the second instruction scheduling pass.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h:139,schedul,scheduling,139,interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CodeGenPassBuilder.h,2,['schedul'],['scheduling']
Energy Efficiency,/// This method provides fast access to all the subexpressions of; /// a CallExpr without going through the slower virtual child_iterator; /// interface. This provides efficient reverse iteration of the; /// subexpressions. This is currently used for CFG construction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h:168,efficient,efficient,168,interpreter/llvm-project/clang/include/clang/AST/Expr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h,1,['efficient'],['efficient']
Energy Efficiency,"/// This method releases a block of memory that was allocated with the; /// allocateMappedMemory method. It should not be used to release any memory; /// block allocated any other way.; /// \p Block describes the memory to be released.; ///; /// \r error_success if the function was successful, or an error_code; /// describing the failure if an error occurred.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h:52,allocate,allocated,52,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h,3,['allocate'],"['allocateMappedMemory', 'allocated']"
Energy Efficiency,"/// This method releases a block of memory that was allocated with the; /// allocateMappedMemory method. It should not be used to release any; /// memory block allocated any other way.; /// \p Block describes the memory to be released.; ///; /// \r error_success if the function was successful, or an error_code; /// describing the failure if an error occurred.; ///; /// Release mapped memory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Memory.h:52,allocate,allocated,52,interpreter/llvm-project/llvm/include/llvm/Support/Memory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Memory.h,3,['allocate'],"['allocateMappedMemory', 'allocated']"
Energy Efficiency,"/// This method sets the protection flags for a block of memory to the state; /// specified by \p Flags. The behavior is not specified if the memory was; /// not allocated using the allocateMappedMemory method.; /// \p Block describes the memory block to be protected.; /// \p Flags specifies the new protection state to be assigned to the block.; ///; /// If \p Flags is MF_WRITE, the actual behavior varies with the operating; /// system (i.e. MF_READ | MF_WRITE on Windows) and the target architecture; /// (i.e. MF_WRITE -> MF_READ | MF_WRITE on i386).; ///; /// \r error_success if the function was successful, or an error_code; /// describing the failure if an error occurred.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h:162,allocate,allocated,162,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h,2,['allocate'],"['allocateMappedMemory', 'allocated']"
Energy Efficiency,"/// This method sets the protection flags for a block of memory to the; /// state specified by /p Flags. The behavior is not specified if the; /// memory was not allocated using the allocateMappedMemory method.; /// \p Block describes the memory block to be protected.; /// \p Flags specifies the new protection state to be assigned to the block.; ///; /// If \p Flags is MF_WRITE, the actual behavior varies; /// with the operating system (i.e. MF_READ | MF_WRITE on Windows) and the; /// target architecture (i.e. MF_WRITE -> MF_READ | MF_WRITE on i386).; ///; /// \r error_success if the function was successful, or an error_code; /// describing the failure if an error occurred.; ///; /// Set memory protection state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Memory.h:162,allocate,allocated,162,interpreter/llvm-project/llvm/include/llvm/Support/Memory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Memory.h,2,['allocate'],"['allocateMappedMemory', 'allocated']"
Energy Efficiency,"/// This method will do fixpoint iteration until fixpoint or the; /// maximum iteration count is reached.; ///; /// If the maximum iteration count is reached, This method will; /// indicate pessimistic fixpoint on attributes that transitively depend; /// on attributes that were scheduled for an update.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:279,schedul,scheduled,279,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h,1,['schedul'],['scheduled']
Energy Efficiency,/// This overload provides a more efficient implementation of; /// FindAvailableLoadedValue() for the case where we are not interested in; /// finding the closest clobbering instruction if no available load is found.; /// This overload cannot be used to scan across multiple blocks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/Loads.h:34,efficient,efficient,34,interpreter/llvm-project/llvm/include/llvm/Analysis/Loads.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/Loads.h,1,['efficient'],['efficient']
Energy Efficiency,"/// This overload will be used when the hazard recognizer is being used; /// by a non-scheduling pass, which does not use SUnits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleHazardRecognizer.h:86,schedul,scheduling,86,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleHazardRecognizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleHazardRecognizer.h,2,['schedul'],['scheduling']
Energy Efficiency,/// This pass compress instructions from EVEX space to legacy/VEX/EVEX space when; /// possible in order to reduce code size or facilitate HW decoding.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86.h:108,reduce,reduce,108,interpreter/llvm-project/llvm/lib/Target/X86/X86.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86.h,1,['reduce'],['reduce']
Energy Efficiency,"/// This pass converts a legalized DAG into a AMDGPU-specific; // DAG, ready for instruction scheduling.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelDAGToDAG.cpp:93,schedul,scheduling,93,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelDAGToDAG.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"/// This pass converts a legalized DAG into a ARC-specific DAG, ready for; /// instruction scheduling.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARC/ARCISelDAGToDAG.cpp:91,schedul,scheduling,91,interpreter/llvm-project/llvm/lib/Target/ARC/ARCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARC/ARCISelDAGToDAG.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"/// This pass converts a legalized DAG into a M68k-specific DAG, ready for; /// instruction scheduling.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68k.h:92,schedul,scheduling,92,interpreter/llvm-project/llvm/lib/Target/M68k/M68k.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68k.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// This pass converts a legalized DAG into a M68k-specific DAG,; /// ready for instruction scheduling.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelDAGToDAG.cpp:92,schedul,scheduling,92,interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelDAGToDAG.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"/// This pass converts a legalized DAG into a R600-specific; // DAG, ready for instruction scheduling.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600ISelDAGToDAG.cpp:91,schedul,scheduling,91,interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600ISelDAGToDAG.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"/// This pass converts a legalized DAG into a WebAssembly-specific DAG, ready; /// for instruction scheduling.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelDAGToDAG.cpp:99,schedul,scheduling,99,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelDAGToDAG.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"/// This pass converts a legalized DAG into a X86-specific DAG, ready for; /// instruction scheduling.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86.h:91,schedul,scheduling,91,interpreter/llvm-project/llvm/lib/Target/X86/X86.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// This pass converts a legalized DAG into a X86-specific DAG,; /// ready for instruction scheduling.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp:91,schedul,scheduling,91,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"/// This placement form of operator new[] uses the ASTContext's allocator for; /// obtaining memory.; ///; /// We intentionally avoid using a nothrow specification here so that the calls; /// to this operator will not perform a null check on the result -- the; /// underlying allocator never returns null pointers.; ///; /// Usage looks like this (assuming there's an ASTContext 'Context' in scope):; /// @code; /// // Default alignment (8); /// char *data = new (Context) char[10];; /// // Specific alignment; /// char *data = new (Context, 4) char[10];; /// @endcode; /// Memory allocated through this placement new[] operator does not need to be; /// explicitly freed, as ASTContext will free all of this memory when it gets; /// destroyed. Please note that you cannot use delete on the pointer.; ///; /// @param Bytes The number of bytes to allocate. Calculated by the compiler.; /// @param C The ASTContext that provides the allocator.; /// @param Alignment The alignment of the allocated memory (if the underlying; /// allocator supports it).; /// @return The allocated memory. Could be nullptr.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTContext.h:581,allocate,allocated,581,interpreter/llvm-project/clang/include/clang/AST/ASTContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTContext.h,4,['allocate'],"['allocate', 'allocated']"
Energy Efficiency,"/// This placement form of operator new[] uses the MCContext's allocator for; /// obtaining memory. It is a non-throwing new[], which means that it returns; /// null on error.; /// Usage looks like this (assuming there's an MCContext 'Context' in scope):; /// \code; /// // Default alignment (8); /// char *data = new (Context) char[10];; /// // Specific alignment; /// char *data = new (Context, 4) char[10];; /// \endcode; /// Please note that you cannot use delete on the pointer; it must be; /// deallocated using an explicit destructor call followed by; /// \c Context.Deallocate(Ptr).; ///; /// \param Bytes The number of bytes to allocate. Calculated by the compiler.; /// \param C The MCContext that provides the allocator.; /// \param Alignment The alignment of the allocated memory (if the underlying; /// allocator supports it).; /// \return The allocated memory. Could be NULL.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCContext.h:637,allocate,allocate,637,interpreter/llvm-project/llvm/include/llvm/MC/MCContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCContext.h,3,['allocate'],"['allocate', 'allocated']"
Energy Efficiency,"/// This represents '#pragma omp allocate ...' directive.; /// For example, in the following, the default allocator is used for both 'a'; /// and 'A::b':; ///; /// \code; /// int a;; /// #pragma omp allocate(a); /// struct A {; /// static int b;; /// #pragma omp allocate(b); /// };; /// \endcode; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclOpenMP.h:33,allocate,allocate,33,interpreter/llvm-project/clang/include/clang/AST/DeclOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclOpenMP.h,3,['allocate'],['allocate']
Energy Efficiency,/// This represents 'allocator' clause in the '#pragma omp ...'; /// directive.; ///; /// \code; /// #pragma omp allocate(a) allocator(omp_default_mem_alloc); /// \endcode; /// In this example directive '#pragma omp allocate' has simple 'allocator'; /// clause with the allocator 'omp_default_mem_alloc'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:113,allocate,allocate,113,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,2,['allocate'],['allocate']
Energy Efficiency,"/// This represents 'schedule' clause in the '#pragma omp ...' directive.; ///; /// \code; /// #pragma omp for schedule(static, 3); /// \endcode; /// In this example directive '#pragma omp for' has 'schedule' clause with; /// arguments 'static' and '3'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:21,schedul,schedule,21,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,3,['schedul'],['schedule']
Energy Efficiency,"/// This represents a set of MVTs. Since the underlying type for the MVT; /// is uint8_t, there are at most 256 values. To reduce the number of memory; /// allocations and deallocations, represent the set as a sequence of bits.; /// To reduce the allocations even further, make MachineValueTypeSet own; /// the storage and use std::array as the bit container.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.h:123,reduce,reduce,123,interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.h,2,['reduce'],['reduce']
Energy Efficiency,/// This represents clause 'allocate' in the '#pragma omp ...' directives.; ///; /// \code; /// #pragma omp parallel private(a) allocate(omp_default_mem_alloc :a); /// \endcode; /// In this example directive '#pragma omp parallel' has clause 'private'; /// and clause 'allocate' for the variable 'a'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:28,allocate,allocate,28,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,3,['allocate'],['allocate']
Energy Efficiency,/// This represents the 'align' clause in the '#pragma omp allocate'; /// directive.; ///; /// \code; /// #pragma omp allocate(a) allocator(omp_default_mem_alloc) align(8); /// \endcode; /// In this example directive '#pragma omp allocate' has simple 'allocator'; /// clause with the allocator 'omp_default_mem_alloc' and align clause with; /// value of 8.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:59,allocate,allocate,59,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,3,['allocate'],['allocate']
Energy Efficiency,"/// This routine notifies the Scheduler that a new cycle just started.; ///; /// It notifies the underlying ResourceManager that a new cycle just started.; /// Vector `Freed` is populated with resourceRef related to resources that; /// have changed in state, and that are now available to new instructions.; /// Instructions executed are added to vector Executed, while vector Ready is; /// populated with instructions that have become ready in this new cycle.; /// Vector Pending is popluated by instructions that have transitioned through; /// the pending stat during this cycle. The Pending and Ready sets may not be; /// disjoint. An instruction is allowed to transition from the WAIT state to; /// the READY state (going through the PENDING state) within a single cycle.; /// That means, instructions may appear in both the Pending and Ready set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h:30,Schedul,Scheduler,30,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,1,['Schedul'],['Scheduler']
Energy Efficiency,/// This struct is a compact representation of a valid (non-zero power of two); /// alignment.; /// It is suitable for use as static global constants.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Alignment.h:65,power,power,65,interpreter/llvm-project/llvm/include/llvm/Support/Alignment.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Alignment.h,1,['power'],['power']
Energy Efficiency,/// This struct is a compact representation of a valid (power of two) or; /// undefined (0) alignment.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Alignment.h:56,power,power,56,interpreter/llvm-project/llvm/include/llvm/Support/Alignment.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Alignment.h,1,['power'],['power']
Energy Efficiency,"/// This turns an int alignment (which must be a power of 2) into the; /// form used internally in Attribute.; /// This call has no effect if Align is 0.; /// Deprecated, use the version using a MaybeAlign.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Attributes.h:49,power,power,49,interpreter/llvm-project/llvm/include/llvm/IR/Attributes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Attributes.h,1,['power'],['power']
Energy Efficiency,"/// This turns an int stack alignment (which must be a power of 2) into; /// the form used internally in Attribute.; /// This call has no effect if Align is 0.; /// Deprecated, use the version using a MaybeAlign.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Attributes.h:55,power,power,55,interpreter/llvm-project/llvm/include/llvm/IR/Attributes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Attributes.h,1,['power'],['power']
Energy Efficiency,"/// Thread-safe allocator adaptor. Uses a spin lock on the assumption that; /// contention here is extremely rare.; ///; /// TODO: Using a spin lock on every allocation can be quite expensive when; /// contention is high. Since this is mainly used for BumpPtrAllocator and; /// SpecificBumpPtrAllocator, it'd be better to have a specific thread-safe; /// BumpPtrAllocator implementation that only use a fair lock when allocating a; /// new slab but otherwise using atomic and be lock-free.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ThreadSafeAllocator.h:26,adapt,adaptor,26,interpreter/llvm-project/llvm/include/llvm/Support/ThreadSafeAllocator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ThreadSafeAllocator.h,1,['adapt'],['adaptor']
Energy Efficiency,"/// Throw an InvalidDerefException if the Arg pointer is invalid.; ///\param Interp: The interpreter that has compiled the code.; ///\param Expr: The expression corresponding determining the pointer value.; ///\param Arg: The pointer to be checked.; ///\returns void*, const-cast from Arg, to reduce the complexity in the; /// calling AST nodes, at the expense of possibly doing a; /// T* -> const void* -> const_cast<void*> -> T* round trip.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Exception.cpp:293,reduce,reduce,293,interpreter/cling/lib/Interpreter/Exception.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Exception.cpp,1,['reduce'],['reduce']
Energy Efficiency,"/// Token - This structure provides full information about a lexed token.; /// It is not intended to be space efficient, it is intended to return as much; /// information as possible about each returned token. This is expected to be; /// compressed into a smaller form if memory footprint is important.; ///; /// The parser can create a special ""annotation token"" representing a stream of; /// tokens that were parsed and semantically resolved, e.g.: ""foo::MyClass<int>""; /// can be represented by a single typename annotation token that carries; /// information about the SourceRange of the tokens and the type object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Token.h:110,efficient,efficient,110,interpreter/llvm-project/clang/include/clang/Lex/Token.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Token.h,1,['efficient'],['efficient']
Energy Efficiency,"/// Tokenizes a Windows command line while attempting to avoid copies. If no; /// quoting or escaping was used, this produces substrings of the original; /// string. If a token requires unquoting, it will be allocated with the; /// StringSaver.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h:208,allocate,allocated,208,interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,1,['allocate'],['allocated']
Energy Efficiency,"/// Top-level MachineScheduler pass driver.; ///; /// Visit blocks in function order. Divide each block into scheduling regions; /// and visit them bottom-up. Visiting regions bottom-up is not required, but is; /// consistent with the DAG builder, which traverses the interior of the; /// scheduling regions bottom-up.; ///; /// This design avoids exposing scheduling boundaries to the DAG builder,; /// simplifying the DAG builder's support for ""special"" target instructions.; /// At the same time the design allows target schedulers to operate across; /// scheduling boundaries, for example to bundle the boundary instructions; /// without reordering them. This creates complexity, because the target; /// scheduler must update the RegionBegin and RegionEnd positions cached by; /// ScheduleDAGInstrs whenever adding or removing instructions. A much simpler; /// design would be to split blocks at scheduling boundaries, but LLVM has a; /// general bias against block splitting purely for implementation simplicity.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:109,schedul,scheduling,109,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,8,"['Schedul', 'schedul']","['ScheduleDAGInstrs', 'scheduler', 'schedulers', 'scheduling']"
Energy Efficiency,/// Track local uses of virtual registers. These uses are gathered by the DAG; /// builder and may be consulted by the scheduler to avoid iterating an entire; /// vreg use list.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h:119,schedul,scheduler,119,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h,1,['schedul'],['scheduler']
Energy Efficiency,/// Track the top-level decls which appeared in an ASTUnit which was loaded; /// from a source file.; //; // FIXME: This is just an optimization hack to avoid deserializing large parts; // of a PCH file when using the Index library on an ASTUnit loaded from; // source. In the long term we should make the Index library use efficient and; // more scalable search mechanisms.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/ASTUnit.h:324,efficient,efficient,324,interpreter/llvm-project/clang/include/clang/Frontend/ASTUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/ASTUnit.h,1,['efficient'],['efficient']
Energy Efficiency,/// Transform a multiply by a power-of-2 value to a left shift.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CombinerHelper.h:30,power,power-of-,30,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CombinerHelper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CombinerHelper.h,1,['power'],['power-of-']
Energy Efficiency,/// Transparently provide more efficient getOperand methods.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Constants.h:31,efficient,efficient,31,interpreter/llvm-project/llvm/include/llvm/IR/Constants.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Constants.h,23,['efficient'],['efficient']
Energy Efficiency,"/// Tries to reduce a pattern that arises when calculating the remainder of the; /// Euclidean division. When the divisor is a power of two and is guaranteed not; /// to be negative, a signed remainder can be folded with a bitwise and.; ///; /// (x % n) < 0 ? (x % n) + n : (x % n); /// -> x & (n - 1)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp:13,reduce,reduce,13,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,2,"['power', 'reduce']","['power', 'reduce']"
Energy Efficiency,"/// Tries to transform switch of powers of two to reduce switch range.; /// For example, switch like:; /// switch (C) { case 1: case 2: case 64: case 128: }; /// will be transformed to:; /// switch (count_trailing_zeros(C)) { case 0: case 1: case 6: case 7: }; ///; /// This transformation allows better lowering and could allow transforming into; /// a lookup table.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:33,power,powers,33,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,2,"['power', 'reduce']","['powers', 'reduce']"
Energy Efficiency,"/// Trivial adaptor that maps from a module to its functions.; ///; /// Designed to allow composition of a FunctionPass(Manager) and; /// a ModulePassManager, by running the FunctionPass(Manager) over every; /// function in the module.; ///; /// Function passes run within this adaptor can rely on having exclusive access; /// to the function they are run over. They should not read or modify any other; /// functions! Other threads or systems may be manipulating other functions in; /// the module, and so their state should never be relied on.; /// FIXME: Make the above true for all of LLVM's actual passes, some still; /// violate this principle.; ///; /// Function passes can also read the module containing the function, but they; /// should not modify that module outside of the use lists of various globals.; /// For example, a function pass is not permitted to add functions to the; /// module.; /// FIXME: Make the above true for all of LLVM's actual passes, some still; /// violate this principle.; ///; /// Note that although function passes can access module analyses, module; /// analyses are not invalidated while the function passes are running, so they; /// may be stale. Function analyses will not be stale.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h:12,adapt,adaptor,12,interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h,2,['adapt'],['adaptor']
Energy Efficiency,/// True if .align is to be used for alignment. Only power-of-two; /// alignment is supported.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h:53,power,power-of-two,53,interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h,1,['power'],['power-of-two']
Energy Efficiency,/// True if an instruction with four reg operands have been scheduled into; /// the current decoder group.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h:60,schedul,scheduled,60,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h,1,['schedul'],['scheduled']
Energy Efficiency,"/// True if subtarget inserts the final scheduling pass on its own.; ///; /// Branch relaxation, which must happen after block placement, can; /// on some targets (e.g. SystemZ) expose additional post-RA; /// scheduling opportunities.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Target/TargetMachine.h:40,schedul,scheduling,40,interpreter/llvm-project/llvm/include/llvm/Target/TargetMachine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Target/TargetMachine.h,2,['schedul'],['scheduling']
Energy Efficiency,/// True if the allocated type was expressed as a parenthesized type-id.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h:16,allocate,allocated,16,interpreter/llvm-project/clang/include/clang/AST/Stmt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h,1,['allocate'],['allocated']
Energy Efficiency,/// True if the machine scheduler should disable the TLI preference; /// for preRA scheduling with the source level scheduler.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h:24,schedul,scheduler,24,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h,3,['schedul'],"['scheduler', 'scheduling']"
Energy Efficiency,/// True if the pending Q should be checked/updated before scheduling another; /// instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:59,schedul,scheduling,59,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// True if the register allocator should use the allocation orders exactly as; /// written in the tablegen descriptions, false if it should allocate; /// the specified physical register later if is it callee-saved.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h:141,allocate,allocate,141,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h,1,['allocate'],['allocate']
Energy Efficiency,"/// True if the subtarget should enable joining global copies.; ///; /// By default this is enabled if the machine scheduler is enabled, but; /// can be overridden.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h:115,schedul,scheduler,115,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h,1,['schedul'],['scheduler']
Energy Efficiency,"/// True if the subtarget should run MachineScheduler after aggressive; /// coalescing.; ///; /// This currently replaces the SelectionDAG scheduler with the ""source"" order; /// scheduler (though see below for an option to turn this off and use the; /// TargetLowering preference). It does not yet disable the postRA scheduler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h:139,schedul,scheduler,139,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h,3,['schedul'],['scheduler']
Energy Efficiency,/// True if the subtarget should run a machine scheduler after register; /// allocation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h:47,schedul,scheduler,47,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h,1,['schedul'],['scheduler']
Energy Efficiency,/// True if the subtarget should run a scheduler after register allocation.; ///; /// By default this queries the PostRAScheduling bit in the scheduling model; /// which is the preferred way to influence this.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h:39,schedul,scheduler,39,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSubtargetInfo.h,2,['schedul'],"['scheduler', 'scheduling']"
Energy Efficiency,/// True if the subtarget should run a scheduler after register; /// allocation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSubtarget.h:39,schedul,scheduler,39,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSubtarget.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSubtarget.h,1,['schedul'],['scheduler']
Energy Efficiency,/// True if the target should use Back-Skip-Back scheduling. This is the; /// default for V60.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSubtarget.h:49,schedul,scheduling,49,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSubtarget.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSubtarget.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// True if the target uses physical regs (as nearly all targets do). False; /// for stack machines such as WebAssembly and other virtual-register; /// machines. If true, all vregs must be allocated before PEI. If false, then; /// callee-save register spilling and scavenging are not needed or used. If; /// false, implicitly defined registers will still be assumed to be physical; /// registers, except that variadic defs will be allocated vregs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Target/TargetMachine.h:189,allocate,allocated,189,interpreter/llvm-project/llvm/include/llvm/Target/TargetMachine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Target/TargetMachine.h,2,['allocate'],['allocated']
Energy Efficiency,/// True if this instruction is scheduled (or considered as scheduled in the; /// dry-run).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:32,schedul,scheduled,32,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,2,['schedul'],['scheduled']
Energy Efficiency,"/// True if this member expression used a nested-name-specifier to; /// refer to the member, e.g., ""x->Base::f"", or found its member via; /// a using declaration. When true, a MemberExprNameQualifier; /// structure is allocated immediately after the MemberExpr.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h:218,allocate,allocated,218,interpreter/llvm-project/clang/include/clang/AST/Stmt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h,1,['allocate'],['allocated']
Energy Efficiency,/// True if this symbol is named. A named symbol will have a pointer to the; /// name allocated in the bytes immediately prior to the MCSymbol.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSymbol.h:86,allocate,allocated,86,interpreter/llvm-project/llvm/include/llvm/MC/MCSymbol.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSymbol.h,1,['allocate'],['allocated']
Energy Efficiency,/// True iff the specified MMO index has a size (rounded to bytes) that is not a; /// power of 2.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h:86,power,power,86,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h,1,['power'],['power']
Energy Efficiency,"/// True iff the specified MMO index has a size that is not an even byte size,; /// or that even byte size is not a power of 2.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h:116,power,power,116,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h,1,['power'],['power']
Energy Efficiency,/// True iff the specified type index is a scalar or vector whose element size; /// is not a power of 2.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h:93,power,power,93,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h,1,['power'],['power']
Energy Efficiency,/// True iff the specified type index is a scalar whose size is not a power of; /// 2.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h:70,power,power,70,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h,1,['power'],['power']
Energy Efficiency,/// True iff the specified type index is a vector whose element count is not a; /// power of 2.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h:84,power,power,84,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h,1,['power'],['power']
Energy Efficiency,"/// Try to calculate arithmetic and shuffle op costs for reduction intrinsics.; /// We're assuming that reduction operation are performing the following way:; ///; /// %val1 = shufflevector<n x t> %val, <n x t> %undef,; /// <n x i32> <i32 n/2, i32 n/2 + 1, ..., i32 n, i32 undef, ..., i32 undef>; /// \----------------v-------------/ \----------v------------/; /// n/2 elements n/2 elements; /// %red1 = op <n x t> %val, <n x t> val1; /// After this operation we have a vector %red1 where only the first n/2; /// elements are meaningful, the second n/2 elements are undefined and can be; /// dropped. All other operations are actually working with the vector of; /// length n/2, not n, though the real vector length is still n.; /// %val2 = shufflevector<n x t> %red1, <n x t> %undef,; /// <n x i32> <i32 n/4, i32 n/4 + 1, ..., i32 n/2, i32 undef, ..., i32 undef>; /// \----------------v-------------/ \----------v------------/; /// n/4 elements 3*n/4 elements; /// %red2 = op <n x t> %red1, <n x t> val2 - working with the vector of; /// length n/2, the resulting vector has length n/4 etc.; ///; /// The cost model should take into account that the actual length of the; /// vector is reduced on each iteration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/BasicTTIImpl.h:1187,reduce,reduced,1187,interpreter/llvm-project/llvm/include/llvm/CodeGen/BasicTTIImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/BasicTTIImpl.h,1,['reduce'],['reduced']
Energy Efficiency,/// Try to detect a recurrence that the value of the induction variable is; /// always a power of two (or zero).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp:89,power,power,89,interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,1,['power'],['power']
Energy Efficiency,"/// Try to find existing copies of the incoming values in stack slots used for; /// statepoint spilling. If we can find a spill slot for the incoming value,; /// mark that slot as allocated, and reuse the same slot for this safepoint.; /// This helps to avoid series of loads and stores that only serve to reshuffle; /// values on the stack between calls.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.cpp:180,allocate,allocated,180,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/StatepointLowering.cpp,1,['allocate'],['allocated']
Energy Efficiency,"/// Try to find horizontal reduction or otherwise, collect instructions; /// for postponed vectorization attempts.; /// \a P if not null designates phi node the reduction is fed into; /// (with reduction operators \a Root or one of its operands, in a basic block; /// \a BB).; /// \returns true if a horizontal reduction was matched and reduced.; /// \returns false if \a V is null or not an instruction,; /// or a horizontal reduction was not matched or not possible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/SLPVectorizer.h:337,reduce,reduced,337,interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/SLPVectorizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/SLPVectorizer.h,1,['reduce'],['reduced']
Energy Efficiency,"/// Try to fold ((icmp X u< P) & (icmp(X & M) != M)) or ((icmp X s> -1) &; /// (icmp(X & M) != M)) into (icmp X u< M). Where P is a power of 2, M < P, and; /// M is a contiguous shifted mask starting at the right most significant zero; /// bit in P. SGT is supported as when P is the largest representable power of; /// 2, an earlier optimization converts the expression into (icmp X s> -1).; /// Parameter P supports masking using undef/poison in either scalar or vector; /// values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:132,power,power,132,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,2,['power'],['power']
Energy Efficiency,"/// Try to fold (icmp(A & B) == 0) & (icmp(A & D) != E) into (icmp A u< D) iff; /// B is a contiguous set of ones starting from the most significant bit; /// (negative power of 2), D and E are equal, and D is a contiguous set of ones; /// starting at the most significant zero bit in B. Parameter B supports masking; /// using undef/poison in either scalar or vector values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:168,power,power,168,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,1,['power'],['power']
Energy Efficiency,"/// Try to lower a vector shuffle as a zero extension on any microarch.; ///; /// This routine will try to do everything in its power to cleverly lower; /// a shuffle which happens to match the pattern of a zero extend. It doesn't; /// check for the profitability of this lowering, it tries to aggressively; /// match this pattern. It will use all of the micro-architectural details it; /// can to emit an efficient lowering. It handles both blends with all-zero; /// inputs to explicitly zero-extend and undef-lanes (sometimes undef due to; /// masking out later).; ///; /// The reason we have dedicated lowering for zext-style shuffles is that they; /// are both incredibly common and often quite performance sensitive.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:128,power,power,128,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,2,"['efficient', 'power']","['efficient', 'power']"
Energy Efficiency,/// Try to lower as a blend of elements from two inputs followed by; /// a single-input permutation.; ///; /// This matches the pattern where we can blend elements from two inputs and; /// then reduce the shuffle to a single-input permutation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:194,reduce,reduce,194,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['reduce'],['reduce']
Energy Efficiency,/// Try to lower as an unpack of elements from two inputs followed by; /// a single-input permutation.; ///; /// This matches the pattern where we can unpack elements from two inputs and; /// then reduce the shuffle to a single-input (wider) permutation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:197,reduce,reduce,197,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['reduce'],['reduce']
Energy Efficiency,/// Try to lower insertion of a single element into a zero vector.; ///; /// This is a common pattern that we have especially efficient patterns to lower; /// across all subtarget feature sets.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:126,efficient,efficient,126,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['efficient'],['efficient']
Energy Efficiency,"/// Try to make (and/or setcc (LL, LR), setcc (RL, RR)) more efficient.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:61,efficient,efficient,61,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['efficient'],['efficient']
Energy Efficiency,"/// Try to reduce a funnel/rotate pattern that includes a compare and select; /// into a funnel shift intrinsic. Example:; /// rotl32(a, b) --> (b == 0 ? a : ((a >> (32 - b)) | (a << b))); /// --> call llvm.fshl.i32(a, a, b); /// fshl32(a, b, c) --> (c == 0 ? a : ((b >> (32 - c)) | (a << c))); /// --> call llvm.fshl.i32(a, b, c); /// fshr32(a, b, c) --> (c == 0 ? b : ((a >> (32 - c)) | (b << c))); /// --> call llvm.fshr.i32(a, b, c)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp:11,reduce,reduce,11,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,1,['reduce'],['reduce']
Energy Efficiency,"/// Try to reduce extract element costs by converting scalar binops to vector; /// binops followed by extract.; /// bo (ext0 V0, C), (ext1 V1, C)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp:11,reduce,reduce,11,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,1,['reduce'],['reduce']
Energy Efficiency,"/// Try to reduce extract element costs by converting scalar compares to vector; /// compares followed by extract.; /// cmp (ext0 V0, C), (ext1 V1, C)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp:11,reduce,reduce,11,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VectorCombine.cpp,1,['reduce'],['reduce']
Energy Efficiency,/// Try to reduce signed division by power-of-2 to an arithmetic shift right.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp:11,reduce,reduce,11,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAddSub.cpp,2,"['power', 'reduce']","['power-of-', 'reduce']"
Energy Efficiency,/// Try to schedule the node at the specified StartCycle and continue; /// until the node is schedule or the EndCycle is reached. This function; /// returns true if the node is scheduled. This routine may search either; /// forward or backward for a place to insert the instruction based upon; /// the relative values of StartCycle and EndCycle.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:11,schedul,schedule,11,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,3,['schedul'],"['schedule', 'scheduled']"
Energy Efficiency,/// Try to shrink a sdiv/srem's width down to the smallest power of two that's; /// sufficient to contain its operands.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/CorrelatedValuePropagation.cpp:59,power,power,59,interpreter/llvm-project/llvm/lib/Transforms/Scalar/CorrelatedValuePropagation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/CorrelatedValuePropagation.cpp,1,['power'],['power']
Energy Efficiency,/// Try to shrink a udiv/urem's width down to the smallest power of two that's; /// sufficient to contain its operands.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/CorrelatedValuePropagation.cpp:59,power,power,59,interpreter/llvm-project/llvm/lib/Transforms/Scalar/CorrelatedValuePropagation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/CorrelatedValuePropagation.cpp,1,['power'],['power']
Energy Efficiency,"/// Try to transform a switch that has ""holes"" in it to a contiguous sequence; /// of cases.; ///; /// A switch such as: switch(i) {case 5: case 9: case 13: case 17:} can be; /// range-reduced to: switch ((i-5) / 4) {case 0: case 1: case 2: case 3:}.; ///; /// This converts a sparse switch into a dense switch which allows better; /// lowering and could also allow transforming into a lookup table.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:185,reduce,reduced,185,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,1,['reduce'],['reduced']
Energy Efficiency,"/// TryAnnotateTypeOrScopeToken - If the current token position is on a; /// typename (possibly qualified in C++) or a C++ scope specifier not followed; /// by a typename, TryAnnotateTypeOrScopeToken will replace one or more tokens; /// with a single annotation token representing the typename or C++ scope; /// respectively.; /// This simplifies handling of C++ scope specifiers and allows efficient; /// backtracking without the need to re-parse and resolve nested-names and; /// typenames.; /// It will mainly be called when we expect to treat identifiers as typenames; /// (if they are typenames). For example, in C we do not expect identifiers; /// inside expressions to be treated as typenames so it will not be called; /// for expressions in C.; /// The benefit for C/ObjC is that a typename will be annotated and; /// Actions.getTypeName will not be needed to be called again (e.g. getTypeName; /// will not be called twice, once to check whether we have a declaration; /// specifier, and another one to get the actual type inside; /// ParseDeclarationSpecifiers).; ///; /// This returns true if an error occurred.; ///; /// Note that this routine emits an error if you call it with ::new or ::delete; /// as the current tokens, so only call it in contexts where these are invalid.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/Parser.cpp:391,efficient,efficient,391,interpreter/llvm-project/clang/lib/Parse/Parser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/Parser.cpp,1,['efficient'],['efficient']
Energy Efficiency,"/// Turn off crash debugging features; ///; /// Crash is expected, so disable crash reports and symbolization to reduce; /// output clutter and avoid potentially slow symbolization.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/llvm-reduce.cpp:113,reduce,reduce,113,interpreter/llvm-project/llvm/tools/llvm-reduce/llvm-reduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/llvm-reduce.cpp,1,['reduce'],['reduce']
Energy Efficiency,"/// Twine - A lightweight data structure for efficiently representing the; /// concatenation of temporary values as strings.; ///; /// A Twine is a kind of rope, it represents a concatenated string using a; /// binary-tree, where the string is the preorder of the nodes. Since the; /// Twine can be efficiently rendered into a buffer when its result is used,; /// it avoids the cost of generating temporary values for intermediate string; /// results -- particularly in cases when the Twine result is never; /// required. By explicitly tracking the type of leaf nodes, we can also avoid; /// the creation of temporary strings for conversions operations (such as; /// appending an integer to a string).; ///; /// A Twine is not intended for use directly and should not be stored, its; /// implementation relies on the ability to store pointers to temporary stack; /// objects which may be deallocated at the end of a statement. Twines should; /// only be used as const references in arguments, when an API wishes; /// to accept possibly-concatenated strings.; ///; /// Twines support a special 'null' value, which always concatenates to form; /// itself, and renders as an empty string. This can be returned from APIs to; /// effectively nullify any concatenations performed on the result.; ///; /// \b Implementation; ///; /// Given the nature of a Twine, it is not possible for the Twine's; /// concatenation method to construct interior nodes; the result must be; /// represented inside the returned value. For this reason a Twine object; /// actually holds two values, the left- and right-hand sides of a; /// concatenation. We also have nullary Twine objects, which are effectively; /// sentinel values that represent empty strings.; ///; /// Thus, a Twine can effectively have zero, one, or two children. The \see; /// isNullary(), \see isUnary(), and \see isBinary() predicates exist for; /// testing the number of children.; ///; /// We maintain a number of invariants on Twine objects (FIXME: ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Twine.h:45,efficient,efficiently,45,interpreter/llvm-project/llvm/include/llvm/ADT/Twine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Twine.h,2,['efficient'],['efficiently']
Energy Efficiency,/// TwoAddressInstruction - This pass reduces two-address instructions to; /// use two operands. This destroys SSA information but it is desired by; /// register allocators.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h:38,reduce,reduces,38,interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,1,['reduce'],['reduces']
Energy Efficiency,"/// Types for recording sets of variable fragments that overlap. For a given; /// local variable, we record all other fragments of that variable that could; /// overlap it, to reduce search time.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h:176,reduce,reduce,176,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.h,1,['reduce'],['reduce']
Energy Efficiency,"/// UnscheduleNodeBottomUp - Remove the node from the schedule, update its and; /// its predecessor states to reflect the change.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:54,schedul,schedule,54,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['schedul'],['schedule']
Energy Efficiency,"/// Update live intervals for instructions in a range of iterators. It is; /// intended for use after target hooks that may insert or remove; /// instructions, and is only efficient for a small number of instructions.; ///; /// OrigRegs is a vector of registers that were originally used by the; /// instructions in the range between the two iterators.; ///; /// Currently, the only changes that are supported are simple removal; /// and addition of uses.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveIntervals.h:172,efficient,efficient,172,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveIntervals.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveIntervals.h,1,['efficient'],['efficient']
Energy Efficiency,"/// Update liveness information to account for the current; /// instruction, which will not be scheduled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AntiDepBreaker.h:95,schedul,scheduled,95,interpreter/llvm-project/llvm/include/llvm/CodeGen/AntiDepBreaker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AntiDepBreaker.h,3,['schedul'],['scheduled']
Energy Efficiency,/// Update of LowerBound for statically scheduled 'omp for' loops.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:40,schedul,scheduled,40,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['schedul'],['scheduled']
Energy Efficiency,/// Update of LowerBound for statically scheduled omp loops for; /// outer loop in combined constructs (e.g. 'distribute parallel for'),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:40,schedul,scheduled,40,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['schedul'],['scheduled']
Energy Efficiency,/// Update of UpperBound for statically scheduled 'omp for' loops.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:40,schedul,scheduled,40,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['schedul'],['scheduled']
Energy Efficiency,/// Update of UpperBound for statically scheduled omp loops for; /// outer loop in combined constructs (e.g. 'distribute parallel for'),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:40,schedul,scheduled,40,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['schedul'],['scheduled']
Energy Efficiency,/// Update scheduler DAG and queues after scheduling an instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:11,schedul,scheduler,11,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,2,['schedul'],"['scheduler', 'scheduling']"
Energy Efficiency,/// Update scheduler queues after scheduling an instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:11,schedul,scheduler,11,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,2,['schedul'],"['scheduler', 'scheduling']"
Energy Efficiency,"/// Update section-specific memory permissions and other attributes.; ///; /// This method is called when object loading is complete and section page; /// permissions can be applied. It is up to the memory manager implementation; /// to decide whether or not to act on this method. The memory manager will; /// typically allocate all sections as read-write and then apply specific; /// permissions when this method is called. Code sections cannot be executed; /// until this function has been called. In addition, any cache coherency; /// operations needed to reliably use the memory are also performed.; ///; /// \returns true if an error occurred, false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h:321,allocate,allocate,321,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/SectionMemoryManager.h,1,['allocate'],['allocate']
Energy Efficiency,/// Update the PressureDiff array for liveness after scheduling this; /// instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:53,schedul,scheduling,53,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"/// Update the RefState to reflect the new memory allocation.; /// The optional \p RetVal parameter specifies the newly allocated pointer; /// value; if unspecified, the value of expression \p E is used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:120,allocate,allocated,120,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,1,['allocate'],['allocated']
Energy Efficiency,/// Update the allocation call to record type of allocated memory.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp:49,allocate,allocated,49,interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/MemProfContextDisambiguation.cpp,1,['allocate'],['allocated']
Energy Efficiency,"/// Update the branch weights of an exiting block of a peeled-off loop; /// iteration.; /// Let F is a weight of the edge to continue (fallthrough) into the loop.; /// Let E is a weight of the edge to an exit.; /// F/(F+E) is a probability to go to loop and E/(F+E) is a probability to; /// go to exit.; /// Then, Estimated ExitCount = F / E.; /// For I-th (counting from 0) peeled off iteration we set the weights for; /// the peeled exit as (EC - I, 1). It gives us reasonable distribution,; /// The probability to go to exit 1/(EC-I) increases. At the same time; /// the estimated exit count in the remainder loop reduces by I.; /// To avoid dealing with division rounding we can just multiple both part; /// of weights to E and use weight as (F - I * E, E).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp:617,reduce,reduces,617,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp,1,['reduce'],['reduces']
Energy Efficiency,"/// Update the level indent to adapt to the given \p Line.; ///; /// When a line is not formatted, we move the subsequent lines on the same; /// level to the same indent.; /// Note that \c nextLine must have been called before this method.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp:31,adapt,adapt,31,interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp,1,['adapt'],['adapt']
Energy Efficiency,"/// Update the phi dependences to the DAG because ScheduleDAGInstrs no longer; /// processes dependences for PHIs. This function adds true dependences; /// from a PHI to a use, and a loop carried dependence from the use to the; /// PHI. The loop carried dependence is represented as an anti dependence; /// edge. This function also removes chain dependences between unrelated; /// PHIs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:50,Schedul,ScheduleDAGInstrs,50,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['Schedul'],['ScheduleDAGInstrs']
Energy Efficiency,"/// Update the scheduler state by emitting (non-scheduled) instructions; /// up to, but not including, NextBegin.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h:15,schedul,scheduler,15,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h,2,['schedul'],"['scheduled', 'scheduler']"
Energy Efficiency,"/// Update the scheduler's state after scheduling a node. This is the same node; /// that was just returned by pickNode(). However, ScheduleDAGMILive needs to; /// update it's state based on the current cycle before MachineSchedStrategy; /// does.; ///; /// FIXME: Eventually, we may bundle physreg copies rather than rescheduling; /// them here. See comments in biasPhysReg.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:15,schedul,scheduler,15,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,3,"['Schedul', 'schedul']","['ScheduleDAGMILive', 'scheduler', 'scheduling']"
Energy Efficiency,"/// Update the scheduler's state after scheduling a node. This is the same node; /// that was just returned by pickNode(). However, VLIWMachineScheduler needs; /// to update it's state based on the current cycle before MachineSchedStrategy; /// does.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp:15,schedul,scheduler,15,interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp,2,['schedul'],"['scheduler', 'scheduling']"
Energy Efficiency,/// Update the size of an existing stream. This will allocate or deallocate; /// blocks as needed to match the requested size. This can fail if `CanGrow`; /// was set to false when initializing the `MSFBuilder`.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/MSF/MSFBuilder.h:53,allocate,allocate,53,interpreter/llvm-project/llvm/include/llvm/DebugInfo/MSF/MSFBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/MSF/MSFBuilder.h,1,['allocate'],['allocate']
Energy Efficiency,"/// Updates the number of available free registers, returns; /// true if any registers were allocated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp:92,allocate,allocated,92,interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,1,['allocate'],['allocated']
Energy Efficiency,"/// Use SparseSet as a SparseMap by relying on the fact that it never; /// compares ValueT's, only unsigned keys. This allows the set to be cleared; /// between scheduling regions in constant time as long as ValueT does not; /// require a destructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h:161,schedul,scheduling,161,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h,1,['schedul'],['scheduling']
Energy Efficiency,/// Use a SparseMultiSet to track physical registers. Storage is only; /// allocated once for the pass. It can be cleared in constant time and reused; /// without any frees.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h:75,allocate,allocated,75,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h,1,['allocate'],['allocated']
Energy Efficiency,/// Use a set of temporal profile traces to create a list of balanced; /// partitioning function nodes used by BalancedPartitioning to generate a; /// function order that reduces page faults during startup,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/InstrProf.h:171,reduce,reduces,171,interpreter/llvm-project/llvm/include/llvm/ProfileData/InstrProf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/InstrProf.h,1,['reduce'],['reduces']
Energy Efficiency,"/// Use automatic scanning, i.e. adaptive",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HypoTestInverter.h:33,adapt,adaptive,33,roofit/roostats/inc/RooStats/HypoTestInverter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HypoTestInverter.h,1,['adapt'],['adaptive']
Energy Efficiency,"/// Use bitwise logic to make pairs of compares more efficient. For example:; /// and (seteq A, B), (seteq C, D) --> seteq (or (xor A, B), (xor C, D)), 0; /// This should be true when it takes more than one instruction to lower; /// setcc (cmp+set on x86 scalar), when bitwise ops are faster than logic on; /// condition bits (crand on PowerPC), and/or when reducing cmp+br is a win.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:53,efficient,efficient,53,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,2,"['Power', 'efficient']","['PowerPC', 'efficient']"
Energy Efficiency,"/// Use predicate only to mask operations on data in the loop.; /// When the VL is not known to be a power-of-2, this method requires a; /// runtime overflow check for the i + VL in the loop because it compares the; /// scalar induction variable against the tripcount rounded up by VL which may; /// overflow. When the VL is a power-of-2, both the increment and uprounded; /// tripcount will overflow to 0, which does not require a runtime check; /// since the loop is exited when the loop induction variable equals the; /// uprounded trip-count, which are both 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h:101,power,power-of-,101,interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,2,['power'],['power-of-']
Energy Efficiency,/// Use this method to allocate a new UniqueMachineInstr for MI and insert it; /// into the CSEMap. MI should return true for shouldCSE(MI->getOpcode()),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CSEInfo.h:23,allocate,allocate,23,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CSEInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CSEInfo.h,1,['allocate'],['allocate']
Energy Efficiency,"/// Used by IntegerLiteral/FloatingLiteral/EnumConstantDecl to store the; /// numeric without leaking memory.; ///; /// For large floats/integers, APFloat/APInt will allocate memory from the heap; /// to represent these numbers. Unfortunately, when we use a BumpPtrAllocator; /// to allocate IntegerLiteral/FloatingLiteral nodes the memory associated with; /// the APFloat/APInt values will never get freed. APNumericStorage uses; /// ASTContext's allocator for memory allocation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/APNumericStorage.h:166,allocate,allocate,166,interpreter/llvm-project/clang/include/clang/AST/APNumericStorage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/APNumericStorage.h,2,['allocate'],['allocate']
Energy Efficiency,"/// Used by the unit tests to drain the queue of clusters to be preloaded",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RClusterPool.hxx:30,drain,drain,30,tree/ntuple/v7/inc/ROOT/RClusterPool.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/inc/ROOT/RClusterPool.hxx,1,['drain'],['drain']
Energy Efficiency,/// Used to allocate access sets.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:12,allocate,allocate,12,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['allocate'],['allocate']
Energy Efficiency,/// Used to allocate elements in the FoldingSets below.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclarationName.h:12,allocate,allocate,12,interpreter/llvm-project/clang/include/clang/AST/DeclarationName.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclarationName.h,1,['allocate'],['allocate']
Energy Efficiency,/// Used to allocate nodes to. All are destroyed without calling their; /// destructor when the document is destroyed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/YAMLParser.h:12,allocate,allocate,12,interpreter/llvm-project/llvm/include/llvm/Support/YAMLParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/YAMLParser.h,1,['allocate'],['allocate']
Energy Efficiency,"/// Used with the \c MONITOR instruction to wait while the processor is in; /// the monitor event pending state. Data stored in the monitored address; /// range, or an interrupt, causes the processor to exit the pending state.; ///; /// The \c MWAIT instruction can be used in kernel mode, and in other modes if; /// MSR <c> C001_0015h[MonMwaitUserEn] </c> is set.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the \c MWAIT instruction.; ///; /// \param __extensions; /// Optional extensions for the monitoring state, which can vary by; /// processor.; /// \param __hints; /// Optional hints for the monitoring state, which can vary by processor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/pmmintrin.h:21,MONITOR,MONITOR,21,interpreter/llvm-project/clang/lib/Headers/pmmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/pmmintrin.h,5,"['MONITOR', 'monitor']","['MONITOR', 'monitor', 'monitored', 'monitoring']"
Energy Efficiency,"/// Used with the \c MONITORX instruction to wait while the processor is in; /// the monitor event pending state. Data stored in the monitored address; /// range, or an interrupt, causes the processor to exit the pending state.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the \c MWAITX instruction.; ///; /// \param __extensions; /// Optional extensions for the monitoring state, which can vary by; /// processor.; /// \param __hints; /// Optional hints for the monitoring state, which can vary by processor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/mwaitxintrin.h:21,MONITOR,MONITORX,21,interpreter/llvm-project/clang/lib/Headers/mwaitxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/mwaitxintrin.h,5,"['MONITOR', 'monitor']","['MONITORX', 'monitor', 'monitored', 'monitoring']"
Energy Efficiency,/// Utility function used for debugging to print the schedule.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:53,schedul,schedule,53,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,1,['schedul'],['schedule']
Energy Efficiency,"/// VPlan models a candidate for vectorization, encoding various decisions take; /// to produce efficient output IR, including which branches, basic-blocks and; /// output IR instructions to generate, and their cost. VPlan holds a; /// Hierarchical-CFG of VPBasicBlocks and VPRegionBlocks rooted at an Entry; /// VPBasicBlock.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h:96,efficient,efficient,96,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlan.h,1,['efficient'],['efficient']
Energy Efficiency,/// Value handle that asserts if the Value is deleted.; ///; /// This is a Value Handle that points to a value and asserts out if the value; /// is destroyed while the handle is still live. This is very useful for; /// catching dangling pointer bugs and other things which can be non-obvious.; /// One particularly useful place to use this is as the Key of a map. Dangling; /// pointer bugs often lead to really subtle bugs that only occur if another; /// object happens to get allocated to the same address as the old one. Using; /// an AssertingVH ensures that an assert is triggered as soon as the bad; /// delete occurs.; ///; /// Note that an AssertingVH handle does *not* follow values across RAUW; /// operations. This means that RAUW's need to explicitly update the; /// AssertingVH's as it moves. This is required because in non-assert mode this; /// class turns into a trivial wrapper around a pointer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ValueHandle.h:478,allocate,allocated,478,interpreter/llvm-project/llvm/include/llvm/IR/ValueHandle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ValueHandle.h,1,['allocate'],['allocated']
Energy Efficiency,/// Value handle that poisons itself if the Value is deleted.; ///; /// This is a Value Handle that points to a value and poisons itself if the; /// value is destroyed while the handle is still live. This is very useful for; /// catching dangling pointer bugs where an \c AssertingVH cannot be used; /// because the dangling handle needs to outlive the value without ever being; /// used.; ///; /// One particularly useful place to use this is as the Key of a map. Dangling; /// pointer bugs often lead to really subtle bugs that only occur if another; /// object happens to get allocated to the same address as the old one. Using; /// a PoisoningVH ensures that an assert is triggered if looking up a new value; /// in the map finds a handle from the old value.; ///; /// Note that a PoisoningVH handle does *not* follow values across RAUW; /// operations. This means that RAUW's need to explicitly update the; /// PoisoningVH's as it moves. This is required because in non-assert mode this; /// class turns into a trivial wrapper around a pointer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ValueHandle.h:579,allocate,allocated,579,interpreter/llvm-project/llvm/include/llvm/IR/ValueHandle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/ValueHandle.h,1,['allocate'],['allocated']
Energy Efficiency,"/// Value of the chunk for the static_chunked scheduled loop. For the; /// default (nullptr) value, the chunk 1 will be used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h:46,schedul,scheduled,46,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h,1,['schedul'],['scheduled']
Energy Efficiency,"/// Value wrapper in the Metadata hierarchy.; ///; /// This is a custom value handle that allows other metadata to refer to; /// classes in the Value hierarchy.; ///; /// Because of full uniquing support, each value is only wrapped by a single \a; /// ValueAsMetadata object, so the lookup maps are far more efficient than; /// those using ValueHandleBase.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Metadata.h:308,efficient,efficient,308,interpreter/llvm-project/llvm/include/llvm/IR/Metadata.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Metadata.h,1,['efficient'],['efficient']
Energy Efficiency,"/// ValueTypes are data types that can actually be held in registers.; /// All variables and expressions must have a value type.; /// Pointer types are further subdivided into the various heap-allocated; /// types, such as functions, records, etc.; /// Structured types that are passed by value (e.g. complex numbers); /// require special handling; they use BT_ValueRef, and size ST_0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:193,allocate,allocated,193,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,1,['allocate'],['allocated']
Energy Efficiency,"/// Variant of the getType() method to always return an IntegerType, which; /// reduces the amount of casting needed in parts of the compiler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Constants.h:80,reduce,reduces,80,interpreter/llvm-project/llvm/include/llvm/IR/Constants.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Constants.h,1,['reduce'],['reduces']
Energy Efficiency,"/// Vectorcall calling convention has special handling for vector types or; /// HVA for 32 bit arch.; /// For HVAs actual XMM registers are allocated on the second pass.; /// For vector types, actual XMM registers are allocated on the first pass.; /// \return true if registers were allocated and false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CallingConv.cpp:140,allocate,allocated,140,interpreter/llvm-project/llvm/lib/Target/X86/X86CallingConv.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CallingConv.cpp,3,['allocate'],['allocated']
Energy Efficiency,"/// Vectorcall calling convention has special handling for vector types or; /// HVA for 64 bit arch.; /// For HVAs shadow registers might be allocated on the first pass; /// and actual XMM registers are allocated on the second pass.; /// For vector types, actual XMM registers are allocated on the first pass.; /// \return true if registers were allocated and false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CallingConv.cpp:141,allocate,allocated,141,interpreter/llvm-project/llvm/lib/Target/X86/X86CallingConv.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CallingConv.cpp,4,['allocate'],['allocated']
Energy Efficiency,/// Verifies that all SUnits were scheduled and that their state is; /// consistent. Returns the number of scheduled SUnits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:34,schedul,scheduled,34,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,2,['schedul'],['scheduled']
Energy Efficiency,/// VerifyScheduledSequence - Verify that all SUnits are scheduled and; /// consistent with the Sequence of scheduled instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.h:57,schedul,scheduled,57,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.h,2,['schedul'],['scheduled']
Energy Efficiency,/// VerifyScheduledSequence - Verify that all SUnits were scheduled and that; /// their state is consistent with the nodes listed in Sequence.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp:58,schedul,scheduled,58,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp,1,['schedul'],['scheduled']
Energy Efficiency,/// Version of AllocateReg with extra register to be shadowed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CallingConvLower.h:15,Allocate,AllocateReg,15,interpreter/llvm-project/llvm/include/llvm/CodeGen/CallingConvLower.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CallingConvLower.h,1,['Allocate'],['AllocateReg']
Energy Efficiency,/// Version of AllocateReg with list of registers to be shadowed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CallingConvLower.h:15,Allocate,AllocateReg,15,interpreter/llvm-project/llvm/include/llvm/CodeGen/CallingConvLower.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CallingConvLower.h,1,['Allocate'],['AllocateReg']
Energy Efficiency,"/// Version of AllocateStack with list of extra registers to be shadowed.; /// Note that, unlike AllocateReg, this shadows ALL of the shadow registers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CallingConvLower.h:15,Allocate,AllocateStack,15,interpreter/llvm-project/llvm/include/llvm/CodeGen/CallingConvLower.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CallingConvLower.h,2,['Allocate'],"['AllocateReg', 'AllocateStack']"
Energy Efficiency,"/// Wavefront size expressed as a power of two. Must be a power of 2; /// in range 1..64 inclusive. Used to support runtime query that; /// obtains wavefront size, which may be used by application to; /// allocated dynamic group memory and set the dispatch work-group; /// size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDKernelCodeT.h:34,power,power,34,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDKernelCodeT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDKernelCodeT.h,3,"['allocate', 'power']","['allocated', 'power']"
Energy Efficiency,/// We allocate segment objects frequently. Allocate them upfront and dispose; /// at the end of a traversal rather than hammering the system allocator.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Automaton.h:7,allocate,allocate,7,interpreter/llvm-project/llvm/include/llvm/Support/Automaton.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Automaton.h,2,"['Allocate', 'allocate']","['Allocate', 'allocate']"
Energy Efficiency,/// We allocate space for string data out of a buffer of size AllocChunkSize.; /// This keeps track of how much space is left.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteRope.h:7,allocate,allocate,7,interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteRope.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteRope.h,1,['allocate'],['allocate']
Energy Efficiency,"/// We are building a shuffle to create V, which is a sequence of insertelement,; /// extractelement pairs. If PermittedRHS is set, then we must either use it or; /// not rely on the second vector source. Return a std::pair containing the; /// left and right vectors of the proposed shuffle (or 0), and set the Mask; /// parameter as required.; ///; /// Note: we intentionally don't try to fold earlier shuffles since they have; /// often been chosen carefully to be efficiently implementable on the target.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp:467,efficient,efficiently,467,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp,1,['efficient'],['efficiently']
Energy Efficiency,"/// We can encode up to four bits in the low bits of a; /// type pointer, but there are many more type qualifiers that we want; /// to be able to apply to an arbitrary type. Therefore we have this; /// struct, intended to be heap-allocated and used by QualType to; /// store qualifiers.; ///; /// The current design tags the 'const', 'restrict', and 'volatile' qualifiers; /// in three low bits on the QualType pointer; a fourth bit records whether; /// the pointer is an ExtQuals node. The extended qualifiers (address spaces,; /// Objective-C GC attributes) are much more rare.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h:230,allocate,allocated,230,interpreter/llvm-project/clang/include/clang/AST/Type.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Type.h,1,['allocate'],['allocated']
Energy Efficiency,"/// We generally act like all llvm Instructions have a range of DPValues; /// attached to them, but in reality sometimes we don't allocate the DPMarker; /// to save time and memory, but still have to return ranges of DPValues. When; /// we need to describe such an unallocated DPValue range, use this static; /// markers range instead. This will bite us if someone tries to insert a; /// DPValue in that range, but they should be using the Official (TM) API for; /// that.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugProgramInstruction.h:130,allocate,allocate,130,interpreter/llvm-project/llvm/include/llvm/IR/DebugProgramInstruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DebugProgramInstruction.h,1,['allocate'],['allocate']
Energy Efficiency,/// We override the schedule function in ScheduleDAGInstrs to implement the; /// scheduling part of the Swing Modulo Scheduling algorithm.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:20,schedul,schedule,20,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,4,"['Schedul', 'schedul']","['ScheduleDAGInstrs', 'Scheduling', 'schedule', 'scheduling']"
Energy Efficiency,"/// We want to put the allocas whose lifetime-ranges are not overlapped; /// into one slot of coroutine frame.; /// Consider the example at:https://bugs.llvm.org/show_bug.cgi?id=45566; ///; /// cppcoro::task<void> alternative_paths(bool cond) {; /// if (cond) {; /// big_structure a;; /// process(a);; /// co_await something();; /// } else {; /// big_structure b;; /// process2(b);; /// co_await something();; /// }; /// }; ///; /// We want to put variable a and variable b in the same slot to; /// reduce the size of coroutine frame.; ///; /// This function use StackLifetime algorithm to partition the AllocaInsts in; /// Spills to non-overlapped sets in order to put Alloca in the same; /// non-overlapped set into the same slot in the Coroutine Frame. Then add; /// field for the allocas in the same non-overlapped set by using the largest; /// type as the field type.; ///; /// Side Effects: Because We sort the allocas, the order of allocas in the; /// frame may be different with the order in the source code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp:499,reduce,reduce,499,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp,1,['reduce'],['reduce']
Energy Efficiency,"/// We want to turn:; /// (select (icmp eq (and X, C1), 0), Y, (BinOp Y, C2)); /// into:; /// IF C2 u>= C1; /// (BinOp Y, (shl (and X, C1), C3)); /// ELSE; /// (BinOp Y, (lshr (and X, C1), C3)); /// iff:; /// 0 on the RHS is the identity value (i.e add, xor, shl, etc...); /// C1 and C2 are both powers of 2; /// where:; /// IF C2 u>= C1; /// C3 = Log(C2) - Log(C1); /// ELSE; /// C3 = Log(C1) - Log(C2); ///; /// This transform handles cases where:; /// 1. The icmp predicate is inverted; /// 2. The select operands are reversed; /// 3. The magnitude of C2 and C1 are flipped",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp:296,power,powers,296,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineSelect.cpp,1,['power'],['powers']
Energy Efficiency,"/// When ResultKind == ConstantResultStorageKind::APValue, true if the; /// ASTContext will cleanup the tail-allocated APValue.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h:109,allocate,allocated,109,interpreter/llvm-project/clang/include/clang/AST/Stmt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h,1,['allocate'],['allocated']
Energy Efficiency,"/// When ResultKind == ConstantResultStorageKind::Int64, true if the; /// tail-allocated integer is unsigned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h:79,allocate,allocated,79,interpreter/llvm-project/clang/include/clang/AST/Stmt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h,1,['allocate'],['allocated']
Energy Efficiency,/// When ResultKind == ConstantResultStorageKind::Int64. the BitWidth of the; /// tail-allocated integer. 7 bits because it is the minimal number of bits; /// to represent a value from 0 to 64 (the size of the tail-allocated; /// integer).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h:87,allocate,allocated,87,interpreter/llvm-project/clang/include/clang/AST/Stmt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Stmt.h,2,['allocate'],['allocated']
Energy Efficiency,"/// When adding a pass manager pass that has the same type as this pass; /// manager, simply move the passes over. This is because we don't have use; /// cases rely on executing nested pass managers. Doing this could reduce; /// implementation complexity and avoid potential invalidation issues that may; /// happen with nested pass managers of the same type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h:217,reduce,reduce,217,interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassManager.h,1,['reduce'],['reduce']
Energy Efficiency,"/// When all predecessor dependencies have been resolved, free this node for; /// top-down scheduling.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:91,schedul,scheduling,91,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// When all successor dependencies have been resolved, free this node for; /// bottom-up scheduling.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:90,schedul,scheduling,90,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// When an MBB was split during scheduling, update the; /// references that need to refer to the last resulting block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h:33,schedul,scheduling,33,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.h,1,['schedul'],['scheduling']
Energy Efficiency,"/// When dealing with dispatch schedules (e.g. dynamic, guided) we do not; /// consider the lower and upper bound expressions generated by the; /// worksharing loop support, but we use 0 and the iteration space size as; /// constants",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:31,schedul,schedules,31,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['schedul'],['schedules']
Energy Efficiency,"/// When is record layout allowed to allocate objects in the tail; /// padding of a base class?; ///; /// This decision cannot be changed without breaking platform ABI; /// compatibility. In ISO C++98, tail padding reuse was only permitted for; /// non-POD base classes, but that restriction was removed retroactively by; /// DR 43, and tail padding reuse is always permitted in all de facto C++; /// language modes. However, many platforms use a variant of the old C++98; /// rule for compatibility.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetCXXABI.h:37,allocate,allocate,37,interpreter/llvm-project/clang/include/clang/Basic/TargetCXXABI.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetCXXABI.h,1,['allocate'],['allocate']
Energy Efficiency,"/// When one formula uses a superset of the registers of another formula, it; /// won't help reduce register pressure (though it may not necessarily hurt; /// register pressure); remove it to simplify the system.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:93,reduce,reduce,93,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,1,['reduce'],['reduce']
Energy Efficiency,"/// When regcall calling convention compiled to 32 bit arch, special treatment; /// is required for 64 bit masks.; /// The value should be assigned to two GPRs.; /// \return true if registers were allocated and false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CallingConv.cpp:197,allocate,allocated,197,interpreter/llvm-project/llvm/lib/Target/X86/X86CallingConv.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CallingConv.cpp,1,['allocate'],['allocated']
Energy Efficiency,"/// When the operands of vector mul are extended from smaller size values,; /// like i8 and i16, the type of mul may be shrinked to generate more; /// efficient code. Two typical patterns are handled:; /// Pattern1:; /// %2 = sext/zext <N x i8> %1 to <N x i32>; /// %4 = sext/zext <N x i8> %3 to <N x i32>; // or %4 = build_vector <N x i32> %C1, ..., %CN (%C1..%CN are constants); /// %5 = mul <N x i32> %2, %4; ///; /// Pattern2:; /// %2 = zext/sext <N x i16> %1 to <N x i32>; /// %4 = zext/sext <N x i16> %3 to <N x i32>; /// or %4 = build_vector <N x i32> %C1, ..., %CN (%C1..%CN are constants); /// %5 = mul <N x i32> %2, %4; ///; /// There are four mul shrinking modes:; /// If %2 == sext32(trunc8(%2)), i.e., the scalar value range of %2 is; /// -128 to 128, and the scalar value range of %4 is also -128 to 128,; /// generate pmullw+sext32 for it (MULS8 mode).; /// If %2 == zext32(trunc8(%2)), i.e., the scalar value range of %2 is; /// 0 to 255, and the scalar value range of %4 is also 0 to 255,; /// generate pmullw+zext32 for it (MULU8 mode).; /// If %2 == sext32(trunc16(%2)), i.e., the scalar value range of %2 is; /// -32768 to 32767, and the scalar value range of %4 is also -32768 to 32767,; /// generate pmullw+pmulhw for it (MULS16 mode).; /// If %2 == zext32(trunc16(%2)), i.e., the scalar value range of %2 is; /// 0 to 65535, and the scalar value range of %4 is also 0 to 65535,; /// generate pmullw+pmulhuw for it (MULU16 mode).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:151,efficient,efficient,151,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['efficient'],['efficient']
Energy Efficiency,"/// When there are many registers for expressions like A, A+1, A+2, etc.,; /// allocate a single register for them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:79,allocate,allocate,79,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,1,['allocate'],['allocate']
Energy Efficiency,"/// When verifying a basic block, keep track of all of the; /// instructions we have seen so far.; ///; /// This allows us to do efficient dominance checks for the case when an; /// instruction has an operand that is an instruction in the same block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Verifier.cpp:129,efficient,efficient,129,interpreter/llvm-project/llvm/lib/IR/Verifier.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Verifier.cpp,1,['efficient'],['efficient']
Energy Efficiency,"/// When writing a profile with size limit, user may want to use a different; /// strategy to reduce function count other than dropping functions with fewest; /// samples first. In this case a class implementing the same interfaces should; /// be provided to SampleProfileWriter::writeWithSizeLimit().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProfWriter.h:94,reduce,reduce,94,interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProfWriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProfWriter.h,1,['reduce'],['reduce']
Energy Efficiency,/// Whether AtomicExpandPass should automatically insert fences and reduce; /// ordering for this atomic. This should be true for most architectures with; /// weak memory ordering. Defaults to false.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:68,reduce,reduce,68,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,1,['reduce'],['reduce']
Energy Efficiency,/// Whether target defaults to the `power` alignment rules of AIX.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h:36,power,power,36,interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,1,['power'],['power']
Energy Efficiency,"/// Whether the full name of this module is equal to joining; /// \p nameParts with "".""s.; ///; /// This is more efficient than getFullModuleName().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Module.h:113,efficient,efficient,113,interpreter/llvm-project/clang/include/clang/Basic/Module.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Module.h,1,['efficient'],['efficient']
Energy Efficiency,"/// Whether the given entry is the head of the list. List heads's previous; /// pointers are to the tail of the list, allowing for efficient access to the; /// list tail. D must be a valid entry node.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SparseMultiSet.h:131,efficient,efficient,131,interpreter/llvm-project/llvm/include/llvm/ADT/SparseMultiSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SparseMultiSet.h,1,['efficient'],['efficient']
Energy Efficiency,"/// Whether the local object blob needs to be allocated together. If not,; /// PEI should ignore the isPreAllocated flags on the stack objects and; /// just allocate them normally.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h:46,allocate,allocated,46,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,2,['allocate'],"['allocate', 'allocated']"
Energy Efficiency,/// Whether this constructor has a trail-allocated explicit specifier.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h:41,allocate,allocated,41,interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclBase.h,1,['allocate'],['allocated']
Energy Efficiency,"/// Whether this local variable could be allocated in the return; /// slot of its function, enabling the named return value optimization; /// (NRVO).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h:41,allocate,allocated,41,interpreter/llvm-project/clang/include/clang/AST/Decl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Decl.h,1,['allocate'],['allocated']
Energy Efficiency,/// Widen the scalar or vector element type to the next power of two that is; /// at least MinSize. No effect if the scalar size is a power of two.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h:56,power,power,56,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h,2,['power'],['power']
Energy Efficiency,/// Widen the scalar to the next power of two that is at least MinSize.; /// No effect if the type is not a scalar or is a power of two.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h:33,power,power,33,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h,2,['power'],['power']
Energy Efficiency,/// Widen the scalar type or vector element type for the given type index to the; /// next power of 2.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h:91,power,power,91,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h,1,['power'],['power']
Energy Efficiency,/// Widen the vector up to the next power of two using INSERT_SUBVECTOR.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h:36,power,power,36,interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SelectionDAG.h,2,['power'],['power']
Energy Efficiency,/// Widens the length of the given vector EVT up to the nearest power of 2; /// and returns that type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ValueTypes.h:64,power,power,64,interpreter/llvm-project/llvm/include/llvm/CodeGen/ValueTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ValueTypes.h,1,['power'],['power']
Energy Efficiency,/// Widens the length of the given vector MVT up to the nearest power of 2; /// and returns that type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineValueType.h:64,power,power,64,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineValueType.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineValueType.h,1,['power'],['power']
Energy Efficiency,"/// Windows CE ARM, PowerPC, SH3, SH4",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h:20,Power,PowerPC,20,interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCAsmInfo.h,1,['Power'],['PowerPC']
Energy Efficiency,"/// With the goal of alternating processor sides for stalling (FPd); /// ops, return true if it seems good to schedule an FPd op next.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h:110,schedul,schedule,110,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h,1,['schedul'],['schedule']
Energy Efficiency,/// Wrap a non-scheduled instruction in an SU and emit it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h:15,schedul,scheduled,15,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h,1,['schedul'],['scheduled']
Energy Efficiency,/// Write a GlobalValue VST to the module. The purpose of this data structure is; /// to allow clients to efficiently find the function body.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp:106,efficient,efficiently,106,interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,1,['efficient'],['efficiently']
Energy Efficiency,"/// Write the new expression and new location ops for the dbg.value. If possible; /// reduce the szie of the dbg.value intrinsic by omitting DIArglist. This; /// can be omitted if:; /// 1. There is only a single location, refenced by a single DW_OP_llvm_arg.; /// 2. The DW_OP_LLVM_arg is the first operand in the expression.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:86,reduce,reduce,86,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,1,['reduce'],['reduce']
Energy Efficiency,"/// X86 can reduce the bytes of NOP by padding instructions with prefixes to; /// get a better peformance in some cases. Here, we determine which prefix is; /// the most suitable.; ///; /// If the instruction has a segment override prefix, use the existing one.; /// If the target is 64-bit, use the CS.; /// If the target is 32-bit,; /// - If the instruction has a ESP/EBP base register, use SS.; /// - Otherwise use DS.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86AsmBackend.cpp:12,reduce,reduce,12,interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86AsmBackend.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86AsmBackend.cpp,1,['reduce'],['reduce']
Energy Efficiency,"/// \brief Allocate storage as needed by the type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h:11,Allocate,Allocate,11,interpreter/cling/include/cling/Interpreter/Value.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h,1,['Allocate'],['Allocate']
Energy Efficiency,"/// \brief Assert in case of an unsupported type. Outlined to reduce include; /// dependencies.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h:62,reduce,reduce,62,interpreter/cling/include/cling/Interpreter/Value.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h,1,['reduce'],['reduce']
Energy Efficiency,/// \brief Indicates the indent should be reduced by the length of the; /// operator.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h:42,reduce,reduced,42,interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.h,1,['reduce'],['reduced']
Energy Efficiency,"/// \brief Sets the offset mode for evaluation.; ///; /// This function sets the offset mode for evaluation to the specified mode.; /// It updates the offset mode for both CPU and CUDA evaluation contexts.; ///; /// \param mode The offset mode to be set.; ///; /// \note This function marks reducer nodes as dirty if the offset mode is; /// changed, because only reducer nodes can use offsetting.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx:291,reduce,reducer,291,roofit/roofitcore/src/RooFit/Evaluator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/Evaluator.cxx,2,['reduce'],['reducer']
Energy Efficiency,"/// \brief Sets the output value with an offset.; ///; /// This function sets the output value with an offset for the given argument.; /// It should only be used in reducer nodes. Depending on the current; /// OffsetMode, the result will either be just the value, the value minus the; /// offset, of just the offset.; ///; /// \param arg Pointer to the RooAbsArg object.; /// \param val The value to be set.; /// \param offset The offset value.; ///; /// \throws std::runtime_error if the argument is not a reducer node.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/EvalContext.cxx:165,reduce,reducer,165,roofit/roofitcore/src/RooFit/EvalContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFit/EvalContext.cxx,2,['reduce'],['reducer']
Energy Efficiency,"/// \brief The value's type, stored as opaque void* to reduce; /// dependencies.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h:55,reduce,reduce,55,interpreter/cling/include/cling/Interpreter/Value.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Value.h,1,['reduce'],['reduce']
Energy Efficiency,"/// \cond ROOFIT_INTERNAL; /*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGrid.cxx; \class RooGrid; \ingroup Roofitcore. Utility class for RooMCIntegrator which; implements an adaptive multi-dimensional Monte Carlo numerical; integration, following the VEGAS algorithm.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx:838,adapt,adaptive,838,roofit/roofitcore/src/RooGrid.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGrid.cxx,1,['adapt'],['adaptive']
Energy Efficiency,"/// \deprecated Will be removed in ROOT 6.36. Please implement this functionality by calling RooAbsData::reduce on the Markov Chain's RooDataSet*; /// (obtained using MarkovChain::GetAsConstDataSet)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MarkovChain.cxx:105,reduce,reduce,105,roofit/roostats/src/MarkovChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MarkovChain.cxx,1,['reduce'],['reduce']
Energy Efficiency,"/// \deprecated Will be removed in ROOT 6.36. Please implement this functionality by calling RooAbsData::reduce on the Markov Chain's RooDataSet*; /// (obtained using MarkovChain::GetAsConstDataSet), and then obtaining its binned clone.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MarkovChain.cxx:105,reduce,reduce,105,roofit/roostats/src/MarkovChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MarkovChain.cxx,1,['reduce'],['reduce']
Energy Efficiency,"/// \name Vector Predication Information; /// @{; /// Whether the target supports the %evl parameter of VP intrinsic efficiently; /// in hardware, for the given opcode and type/alignment. (see LLVM Language; /// Reference - ""Vector Predication Intrinsics"").; /// Use of %evl is discouraged when that is not the case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h:117,efficient,efficiently,117,interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,1,['efficient'],['efficiently']
Energy Efficiency,"/// \p IsReentry specifes whether or not this is a reentry into the; /// IGroupLPDAGMutation. Since there may be multiple scheduling passes on the; /// same scheduling region (e.g. pre and post-RA scheduling / multiple; /// scheduling ""phases""), we can reenter this mutation framework more than once; /// for a given region.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp:122,schedul,scheduling,122,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,4,['schedul'],['scheduling']
Energy Efficiency,"/// \param Lane lane of the operands under analysis.; /// \param OpIdx operand index in \p Lane lane we're looking the best; /// candidate for.; /// \param Idx operand index of the current candidate value.; /// \returns The additional score due to possible broadcasting of the; /// elements in the lane. It is more profitable to have power-of-2 unique; /// elements in the lane, it will be vectorized with higher probability; /// after removing duplicates. Currently the SLP vectorizer supports only; /// vectorization of the power-of-2 number of unique scalars.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:334,power,power-of-,334,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,2,['power'],['power-of-']
Energy Efficiency,"/// \return An upper bound for the vectorization factors for both; /// fixed and scalable vectorization, where the minimum-known number of; /// elements is a power-of-2 larger than zero. If scalable vectorization is; /// disabled or unsupported, then the scalable part will be equal to; /// ElementCount::getScalable(0).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:158,power,power-of-,158,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['power'],['power-of-']
Energy Efficiency,"/// \return true if the specified list of values has only one instruction that; /// requires scheduling, false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:93,schedul,scheduling,93,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['schedul'],['scheduling']
Energy Efficiency,/// \return true if vscale is known to be a power of 2,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h:44,power,power,44,interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/TargetTransformInfo.h,1,['power'],['power']
Energy Efficiency,/// \returns The number of registers allocated for \p FI.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600FrameLowering.cpp:37,allocate,allocated,37,interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600FrameLowering.cpp,1,['allocate'],['allocated']
Energy Efficiency,"/// \returns the log base 2 of this APInt if its an exact power of two, -1; /// otherwise",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h:58,power,power,58,interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/APInt.h,1,['power'],['power']
Energy Efficiency,/// \returns true if \p BB is reachable through only uniform branches.; /// XXX - Is there a more efficient way to find this?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUUnifyDivergentExitNodes.cpp:98,efficient,efficient,98,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUUnifyDivergentExitNodes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUUnifyDivergentExitNodes.cpp,1,['efficient'],['efficient']
Energy Efficiency,/// \{; /// Cache of macro expanders to reduce malloc traffic.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h:40,reduce,reduce,40,interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Preprocessor.h,1,['reduce'],['reduce']
Energy Efficiency,"/// \}; /// Clear all the members of this MachineFunction, but the ones used; /// to initialize again the MachineFunction.; /// More specifically, this deallocates all the dynamically allocated; /// objects and get rid of all the XXXInfo data structure, but keep; /// unchanged the references to Fn, Target, MMI, and FunctionNumber.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h:184,allocate,allocated,184,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,1,['allocate'],['allocated']
Energy Efficiency,"/// \}; /// Collect debug info quality metrics for an entire DIContext.; ///; /// Do the impossible and reduce the quality of the debug info down to a few; /// numbers. The idea is to condense the data into numbers that can be tracked; /// over time to identify trends in newer compiler versions and gauge the effect; /// of particular optimizations. The raw numbers themselves are not particularly; /// useful, only the delta between compiling the same program with different; /// compilers is.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp:104,reduce,reduce,104,interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,1,['reduce'],['reduce']
Energy Efficiency,/// __builtin_va_list as defined by the Power ABI:; /// https://www.power.org; /// /resources/downloads/Power-Arch-32-bit-ABI-supp-1.0-Embedded.pdf,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h:40,Power,Power,40,interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,3,"['Power', 'power']","['Power', 'Power-Arch-', 'power']"
Energy Efficiency,"/// adapter for packed arrays (to SMatrix indexing conventions)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/CholeskyDecomp.h:4,adapt,adapter,4,math/smatrix/inc/Math/CholeskyDecomp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/CholeskyDecomp.h,1,['adapt'],['adapter']
Energy Efficiency,"/// adaptive sampling algorithm to speed up interval calculation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/NeymanConstruction.h:4,adapt,adaptive,4,roofit/roostats/inc/RooStats/NeymanConstruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/NeymanConstruction.h,1,['adapt'],['adaptive']
Energy Efficiency,"/// add - Creates a new immutable set that contains all of the values; /// of the original set with the addition of the specified value. If; /// the original set already included the value, then the original set is; /// returned and no memory is allocated. The time and space complexity; /// of this operation is logarithmic in the size of the original set.; /// The memory allocated to represent the set is released when the; /// factory object that created the set is destroyed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h:246,allocate,allocated,246,interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h,2,['allocate'],['allocated']
Energy Efficiency,"/// adjustPriorityOfUnscheduledPreds - One of the predecessors of SU was just; /// scheduled. If SU is not itself available, then there is at least one; /// predecessor node that has not been scheduled yet. If SU has exactly ONE; /// unscheduled predecessor, we want to increase its priority: it getting; /// scheduled will make this node available, so it is better than some other; /// node of the same priority that will not make a node available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp:83,schedul,scheduled,83,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp,3,['schedul'],['scheduled']
Energy Efficiency,/// areLoadsFromSameBasePtr - This is used by the pre-regalloc scheduler to; /// determine if two loads are loading from the same base address. It should; /// only return true if the base pointers are the same and the only differences; /// between the two addresses is the offset. It also returns the offsets by; /// reference.; ///; /// FIXME: remove this in favor of the MachineInstr interface once pre-RA-sched; /// is permanently disabled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:63,schedul,scheduler,63,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,1,['schedul'],['scheduler']
Energy Efficiency,/// areLoadsFromSameBasePtr - This is used by the pre-regalloc scheduler to; /// determine if two loads are loading from the same base address. It should; /// only return true if the base pointers are the same and the only; /// differences between the two addresses is the offset. It also returns the; /// offsets by reference.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.h:63,schedul,scheduler,63,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.h,1,['schedul'],['scheduler']
Energy Efficiency,/// areLoadsFromSameBasePtr - This is used by the pre-regalloc scheduler; /// to determine if two loads are loading from the same base address. It; /// should only return true if the base pointers are the same and the; /// only differences between the two addresses are the offset. It also returns; /// the offsets by reference.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.h:63,schedul,scheduler,63,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.h,1,['schedul'],['scheduler']
Energy Efficiency,/// arg_operands - iteration adapter for range-for loops.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/InstrTypes.h:29,adapt,adapter,29,interpreter/llvm-project/llvm/include/llvm/IR/InstrTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/InstrTypes.h,2,['adapt'],['adapter']
Energy Efficiency,/// canCauseFpMLxStall - Return true if an instruction of the specified opcode; /// will cause stalls when scheduled after (within 4-cycle window) a fp; /// MLA / MLS instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.h:107,schedul,scheduled,107,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.h,1,['schedul'],['scheduled']
Energy Efficiency,/// canClobberReachingPhysRegUse - True if SU would clobber one of it's; /// successor's explicit physregs whose definition can reach DepSU.; /// i.e. DepSU should not be scheduled above SU.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:171,schedul,scheduled,171,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['schedul'],['scheduled']
Energy Efficiency,/// capacity - Return the total number of elements in the currently allocated; /// buffer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Support/BumpVector.h:68,allocate,allocated,68,interpreter/llvm-project/clang/include/clang/Analysis/Support/BumpVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Support/BumpVector.h,2,['allocate'],['allocated']
Energy Efficiency,"/// changeVectorFPCCToAArch64CC - Convert a DAG fp condition code to an AArch64; /// CC usable with the vector instructions. Fewer operations are available; /// without a real NZCV register, so we have to use less efficient combinations; /// to get the same effect.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:214,efficient,efficient,214,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['efficient'],['efficient']
Energy Efficiency,/// closestSucc - Returns the scheduled cycle of the successor which is; /// closest to the current cycle.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNILPSched.cpp:30,schedul,scheduled,30,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNILPSched.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNILPSched.cpp,1,['schedul'],['scheduled']
Energy Efficiency,"/// createAArch64ISelDag - This pass converts a legalized DAG into a; /// AArch64-specific DAG, ready for instruction scheduling.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:118,schedul,scheduling,118,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"/// createARMISelDag - This pass converts a legalized DAG into a; /// ARM-specific DAG, ready for instruction scheduling.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp:110,schedul,scheduling,110,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelDAGToDAG.cpp,1,['schedul'],['scheduling']
Energy Efficiency,/// createBURRListDAGScheduler - This creates a bottom up register usage; /// reduction list scheduler.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h:93,schedul,scheduler,93,interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h,1,['schedul'],['scheduler']
Energy Efficiency,"/// createDAGLinearizer - This creates a ""no-scheduling"" scheduler which; /// linearize the DAG using topological order.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h:45,schedul,scheduling,45,interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h,2,['schedul'],"['scheduler', 'scheduling']"
Energy Efficiency,"/// createDeadDef - Make sure the range has a value defined at Def.; /// If one already exists, return it. Otherwise allocate a new value and; /// add liveness for a dead def.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveInterval.h:117,allocate,allocate,117,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveInterval.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveInterval.h,1,['allocate'],['allocate']
Energy Efficiency,/// createDefaultScheduler - This creates an instruction scheduler appropriate; /// for the target.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h:57,schedul,scheduler,57,interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h,1,['schedul'],['scheduler']
Energy Efficiency,/// createDwarfEHPass - This pass mulches exception handling code into a form; /// adapted to code generation. Required if using dwarf exception handling.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h:83,adapt,adapted,83,interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,1,['adapt'],['adapted']
Energy Efficiency,"/// createFastDAGScheduler - This creates a ""fast"" scheduler.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h:51,schedul,scheduler,51,interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h,1,['schedul'],['scheduler']
Energy Efficiency,"/// createHexagonISelDag - This pass converts a legalized DAG into a; /// Hexagon-specific DAG, ready for instruction scheduling.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp:118,schedul,scheduling,118,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp,1,['schedul'],['scheduling']
Energy Efficiency,/// createHybridListDAGScheduler - This creates a bottom up register pressure; /// aware list scheduler that make use of latency information to avoid stalls; /// for long latency instructions in low register pressure mode. In high; /// register pressure mode it schedules to reduce register pressure.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h:94,schedul,scheduler,94,interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h,3,"['reduce', 'schedul']","['reduce', 'scheduler', 'schedules']"
Energy Efficiency,/// createILPListDAGScheduler - This creates a bottom up register pressure; /// aware list scheduler that tries to increase instruction level parallelism; /// in low register pressure mode. In high register pressure mode it schedules; /// to reduce register pressure.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h:91,schedul,scheduler,91,interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h,3,"['reduce', 'schedul']","['reduce', 'scheduler', 'schedules']"
Energy Efficiency,"/// createMSP430ISelDag - This pass converts a legalized DAG into a; /// MSP430-specific DAG, ready for instruction scheduling.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430ISelDAGToDAG.cpp:116,schedul,scheduling,116,interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/MSP430/MSP430ISelDAGToDAG.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"/// createNVPTXISelDag - This pass converts a legalized DAG into a; /// NVPTX-specific DAG, ready for instruction scheduling.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp:114,schedul,scheduling,114,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelDAGToDAG.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"/// createPPCISelDag - This pass converts a legalized DAG into a; /// PowerPC-specific DAG, ready for instruction scheduling.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:70,Power,PowerPC-specific,70,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,2,"['Power', 'schedul']","['PowerPC-specific', 'scheduling']"
Energy Efficiency,/// createSjLjEHPreparePass - This pass adapts exception handling code to use; /// the GCC-style builtin setjmp/longjmp (sjlj) to handling EH control flow.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h:40,adapt,adapts,40,interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,1,['adapt'],['adapts']
Energy Efficiency,/// createSourceListDAGScheduler - This creates a bottom up list scheduler that; /// schedules nodes in source code order when possible.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h:65,schedul,scheduler,65,interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h,2,['schedul'],"['scheduler', 'schedules']"
Energy Efficiency,"/// createSparcISelDag - This pass converts a legalized DAG into a; /// SPARC-specific DAG, ready for instruction scheduling.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Sparc/SparcISelDAGToDAG.cpp:114,schedul,scheduling,114,interpreter/llvm-project/llvm/lib/Target/Sparc/SparcISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Sparc/SparcISelDAGToDAG.cpp,1,['schedul'],['scheduling']
Energy Efficiency,/// createSpillSlot - Allocate a spill slot for RC from MFI.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/VirtRegMap.h:22,Allocate,Allocate,22,interpreter/llvm-project/llvm/include/llvm/CodeGen/VirtRegMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/VirtRegMap.h,1,['Allocate'],['Allocate']
Energy Efficiency,"/// createVEISelDag - This pass converts a legalized DAG into a; /// VE-specific DAG, ready for instruction scheduling.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEISelDAGToDAG.cpp:108,schedul,scheduling,108,interpreter/llvm-project/llvm/lib/Target/VE/VEISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEISelDAGToDAG.cpp,1,['schedul'],['scheduling']
Energy Efficiency,/// createVLIWDAGScheduler - Scheduler for VLIW targets. This creates top down; /// DFA driven list scheduler with clustering heuristic to control; /// register pressure.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h:29,Schedul,Scheduler,29,interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h,2,"['Schedul', 'schedul']","['Scheduler', 'scheduler']"
Energy Efficiency,/// createWasmEHPass - This pass adapts exception handling code to use; /// WebAssembly's exception handling scheme.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h:33,adapt,adapts,33,interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/Passes.h,1,['adapt'],['adapts']
Energy Efficiency,"/// createXCoreISelDag - This pass converts a legalized DAG into a; /// XCore-specific DAG, ready for instruction scheduling.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/XCore/XCoreISelDAGToDAG.cpp:114,schedul,scheduling,114,interpreter/llvm-project/llvm/lib/Target/XCore/XCoreISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/XCore/XCoreISelDAGToDAG.cpp,1,['schedul'],['scheduling']
Energy Efficiency,/// debugCodeGeneratorCrash - This method is called when the code generator; /// crashes on an input. It attempts to reduce the input as much as possible; /// while still causing the code generator to crash.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/BugDriver.h:117,reduce,reduce,117,interpreter/llvm-project/llvm/tools/bugpoint/BugDriver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/BugDriver.h,2,['reduce'],['reduce']
Energy Efficiency,/// dump the scheduled Sequence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:13,schedul,scheduled,13,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['schedul'],['scheduled']
Energy Efficiency,/// dumpSchedule - dump the scheduled Sequence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp:28,schedul,scheduled,28,interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,1,['schedul'],['scheduled']
Energy Efficiency,"/// emitFrameOffset - Emit instructions as needed to set DestReg to SrcReg; /// plus Offset. This is intended to be used from within the prolog/epilog; /// insertion (PEI) pass, where a virtual scratch register may be allocated; /// if necessary, to be replaced by the scavenger at the end of PEI.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.h:218,allocate,allocated,218,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.h,1,['allocate'],['allocated']
Energy Efficiency,"/// emitPrologue - Push callee-saved registers onto the stack, which; /// automatically adjust the stack pointer. Adjust the stack pointer to allocate; /// space for local variables. Also emit labels used by the exception handler to; /// generate the exception handling frames.; /*; Here's a gist of what gets emitted:. ; Establish frame pointer, if needed; [if needs FP]; push %rbp; .cfi_def_cfa_offset 16; .cfi_offset %rbp, -16; .seh_pushreg %rpb; mov %rsp, %rbp; .cfi_def_cfa_register %rbp. ; Spill general-purpose registers; [for all callee-saved GPRs]; pushq %<reg>; [if not needs FP]; .cfi_def_cfa_offset (offset from RETADDR); .seh_pushreg %<reg>. ; If the required stack alignment > default stack alignment; ; rsp needs to be re-aligned. This creates a ""re-alignment gap""; ; of unknown size in the stack frame.; [if stack needs re-alignment]; and $MASK, %rsp. ; Allocate space for locals; [if target is Windows and allocated space > 4096 bytes]; ; Windows needs special care for allocations larger; ; than one page.; mov $NNN, %rax; call ___chkstk_ms/___chkstk; sub %rax, %rsp; [else]; sub $NNN, %rsp. [if needs FP]; .seh_stackalloc (size of XMM spill slots); .seh_setframe %rbp, SEHFrameOffset ; = size of all spill slots; [else]; .seh_stackalloc NNN. ; Spill XMMs; ; Note, that while only Windows 64 ABI specifies XMMs as callee-preserved,; ; they may get spilled on any platform, if the current function; ; calls @llvm.eh.unwind.init; [if needs FP]; [for all callee-saved XMM registers]; movaps %<xmm reg>, -MMM(%rbp); [for all callee-saved XMM registers]; .seh_savexmm %<xmm reg>, (-MMM + SEHFrameOffset); ; i.e. the offset relative to (%rbp - SEHFrameOffset); [else]; [for all callee-saved XMM registers]; movaps %<xmm reg>, KKK(%rsp); [for all callee-saved XMM registers]; .seh_savexmm %<xmm reg>, KKK. .seh_endprologue. [if needs base pointer]; mov %rsp, %rbx; [if needs to restore base pointer]; mov %rsp, -MMM(%rbp). ; Emit CFI info; [if needs FP]; [for all callee-saved registers]; .",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp:142,allocate,allocate,142,interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp,3,"['Allocate', 'allocate']","['Allocate', 'allocate', 'allocated']"
Energy Efficiency,"/// enterRegion - Called back from MachineScheduler::runOnMachineFunction after; /// crossing a scheduling boundary. [begin, end) includes all instructions in; /// the region, including the boundary itself and single-instruction regions; /// that don't get scheduled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:96,schedul,scheduling,96,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,2,['schedul'],"['scheduled', 'scheduling']"
Energy Efficiency,"/// enterRegion - Called back from PostMachineScheduler::runOnMachineFunction; /// after crossing a scheduling boundary. [begin, end) includes all instructions; /// in the region, including the boundary itself and single-instruction regions; /// that don't get scheduled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:100,schedul,scheduling,100,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,2,['schedul'],"['scheduled', 'scheduling']"
Energy Efficiency,"/// equals - Check for string equality, this is more efficient than; /// compare() when the relative ordering of inequal strings isn't needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/StringRef.h:53,efficient,efficient,53,interpreter/llvm-project/llvm/include/llvm/ADT/StringRef.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/StringRef.h,1,['efficient'],['efficient']
Energy Efficiency,"/// establishNestingLevels - Examines the loop nesting of the Src and Dst; /// instructions and establishes their shared loops. Sets the variables; /// CommonLevels, SrcLevels, and MaxLevels.; /// The source and destination instructions needn't be contained in the same; /// loop. The routine establishNestingLevels finds the level of most deeply; /// nested loop that contains them both, CommonLevels. An instruction that's; /// not contained in a loop is at level = 0. MaxLevels is equal to the level; /// of the source plus the level of the destination, minus CommonLevels.; /// This lets us allocate vectors MaxLevels in length, with room for every; /// distinct loop referenced in both the source and destination subscripts.; /// The variable SrcLevels is the nesting depth of the source instruction.; /// It's used to help calculate distinct loops referenced by the destination.; /// Here's the map from loops to levels:; /// 0 - unused; /// 1 - outermost common loop; /// ... - other common loops; /// CommonLevels - innermost common loop; /// ... - loops containing Src but not Dst; /// SrcLevels - innermost loop containing Src but not Dst; /// ... - loops containing Dst but not Src; /// MaxLevels - innermost loop containing Dst but not Src; /// Consider the follow code fragment:; /// for (a = ...) {; /// for (b = ...) {; /// for (c = ...) {; /// for (d = ...) {; /// A[] = ...;; /// }; /// }; /// for (e = ...) {; /// for (f = ...) {; /// for (g = ...) {; /// ... = A[];; /// }; /// }; /// }; /// }; /// }; /// If we're looking at the possibility of a dependence between the store; /// to A (the Src) and the load from A (the Dst), we'll note that they; /// have 2 loops in common, so CommonLevels will equal 2 and the direction; /// vector for Result will have 2 entries. SrcLevels = 4 and MaxLevels = 7.; /// A map from loop names to level indices would look like; /// a - 1; /// b - 2 = CommonLevels; /// c - 3; /// d - 4 = SrcLevels; /// e - 5; /// f - 6; /// g - 7 = MaxLevels",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:595,allocate,allocate,595,interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h,1,['allocate'],['allocate']
Energy Efficiency,"/// evaluate the function (re-implement for being more efficient)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedParamFunction.h:55,efficient,efficient,55,math/mathcore/inc/Math/WrappedParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedParamFunction.h,1,['efficient'],['efficient']
Energy Efficiency,"/// fill a correlation matrix elements using a generic symmetric matrix class implementing operator(i,j); /// the matrix must be previously allocates with right size (npar * npar)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h:140,allocate,allocates,140,math/mathcore/inc/Fit/FitResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h,1,['allocate'],['allocates']
Energy Efficiency,"/// fill covariance matrix elements using a generic matrix class implementing operator(i,j); /// the matrix must be previously allocates with right size (npar * npar)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h:127,allocate,allocates,127,math/mathcore/inc/Fit/FitResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h,1,['allocate'],['allocates']
Energy Efficiency,"/// find size of next chunk to allocate (in a hopefully smart way)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.cxx:31,allocate,allocate,31,roofit/roofitcore/src/BidirMMapPipe.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.cxx,2,['allocate'],['allocate']
Energy Efficiency,/// forceUnitLatencies - Register-pressure-reducing scheduling doesn't; /// need actual latency information but the hybrid scheduler does.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:52,schedul,scheduling,52,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,2,['schedul'],"['scheduler', 'scheduling']"
Energy Efficiency,/// forceUnitLatencies - The fast scheduler doesn't care about real latencies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp:34,schedul,scheduler,34,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,1,['schedul'],['scheduler']
Energy Efficiency,"/// getAsAlign - Returns Quantity as a valid llvm::Align,; /// Beware llvm::Align assumes power of two 8-bit bytes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/CharUnits.h:90,power,power,90,interpreter/llvm-project/clang/include/clang/AST/CharUnits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/CharUnits.h,1,['power'],['power']
Energy Efficiency,"/// getAsMaybeAlign - Returns Quantity as a valid llvm::Align or; /// std::nullopt, Beware llvm::MaybeAlign assumes power of two 8-bit; /// bytes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/CharUnits.h:116,power,power,116,interpreter/llvm-project/clang/include/clang/AST/CharUnits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/CharUnits.h,1,['power'],['power']
Energy Efficiency,/// getCopyFromRegs - If there was virtual register allocated for the value V; /// emit CopyFromReg of the specified type Ty. Return empty SDValue() otherwise.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:52,allocate,allocated,52,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['allocate'],['allocated']
Energy Efficiency,"/// getDwarfFile - takes a file name and number to place in the dwarf file and; /// directory tables. If the file number has already been allocated it is an; /// error and zero is returned and the client reports the error, else the; /// allocated file number is returned. The file numbers may be in any order.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCContext.cpp:138,allocate,allocated,138,interpreter/llvm-project/llvm/lib/MC/MCContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCContext.cpp,2,['allocate'],['allocated']
Energy Efficiency,"/// getEditBuffer - This is like getRewriteBufferFor, but always returns a; /// buffer, and allows you to write on it directly. This is useful if you; /// want efficient low-level access to apis for scribbling on one specific; /// FileID's buffer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/Rewriter.h:160,efficient,efficient,160,interpreter/llvm-project/clang/include/clang/Rewrite/Core/Rewriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/Rewriter.h,1,['efficient'],['efficient']
Energy Efficiency,"/// getFirstUnallocated - Return the index of the first unallocated register; /// in the set, or Regs.size() if they are all allocated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CallingConvLower.h:125,allocate,allocated,125,interpreter/llvm-project/llvm/include/llvm/CodeGen/CallingConvLower.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CallingConvLower.h,1,['allocate'],['allocated']
Energy Efficiency,/// getFrameInfo - Return the frame info object for the current function.; /// This object contains information about objects allocated on the stack; /// frame of the current function in an abstract way.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h:126,allocate,allocated,126,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,1,['allocate'],['allocated']
Energy Efficiency,/// getLinkageSize - Return the size of the PowerPC ABI linkage area.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.h:44,Power,PowerPC,44,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.h,1,['Power'],['PowerPC']
Energy Efficiency,"/// getLocationOfByte - Return a source location that points to the specified; /// byte of this string literal.; ///; /// Strings are amazingly complex. They can be formed from multiple tokens and; /// can have escape sequences in them in addition to the usual trigraph and; /// escaped newline business. This routine handles this complexity.; ///; /// The *StartToken sets the first token to be searched in this function and; /// the *StartTokenByteOffset is the byte offset of the first token. Before; /// returning, it updates the *StartToken to the TokNo of the token being found; /// and sets *StartTokenByteOffset to the byte offset of the token in the; /// string.; /// Using these two parameters can reduce the time complexity from O(n^2) to; /// O(n) if one wants to get the location of byte for all the tokens in a; /// string.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Expr.cpp:708,reduce,reduce,708,interpreter/llvm-project/clang/lib/AST/Expr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Expr.cpp,1,['reduce'],['reduce']
Energy Efficiency,"/// getMachineMemOperand - Allocate a new MachineMemOperand by copying; /// an existing one, adjusting by an offset and using the given size.; /// MachineMemOperands are owned by the MachineFunction and need not be; /// explicitly deallocated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h:27,Allocate,Allocate,27,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,1,['Allocate'],['Allocate']
Energy Efficiency,"/// getMachineMemOperand - Allocate a new MachineMemOperand by copying; /// an existing one, replacing only the MachinePointerInfo and size.; /// MachineMemOperands are owned by the MachineFunction and need not be; /// explicitly deallocated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h:27,Allocate,Allocate,27,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,1,['Allocate'],['Allocate']
Energy Efficiency,/// getMachineMemOperand - Allocate a new MachineMemOperand.; /// MachineMemOperands are owned by the MachineFunction and need not be; /// explicitly deallocated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h:27,Allocate,Allocate,27,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,1,['Allocate'],['Allocate']
Energy Efficiency,/// getMemoryforGV - Allocate memory for a global variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h:21,Allocate,Allocate,21,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/ExecutionEngine.h,1,['Allocate'],['Allocate']
Energy Efficiency,"/// getMinGlobalAlign - Return the minimum alignment of a global variable,; /// unless its alignment is explicitly reduced via attributes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h:115,reduce,reduced,115,interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,1,['reduce'],['reduced']
Energy Efficiency,/// getNumBlockIDs - Return the number of MBB ID's allocated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h:51,allocate,allocated,51,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,1,['allocate'],['allocated']
Energy Efficiency,"/// getOperandLatency - Compute and return the use operand latency of a given; /// pair of def and use.; /// In most cases, the static scheduling itinerary was enough to determine the; /// operand latency. But it may not be possible for instructions with variable; /// number of defs / uses.; ///; /// This is a raw interface to the itinerary that may be directly overriden by; /// a target. Use computeOperandLatency to get the best estimate of latency.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp:135,schedul,scheduling,135,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp,2,['schedul'],['scheduling']
Energy Efficiency,"/// getOrCreateJumpTableInfo - Get the JumpTableInfo for this function, if it; /// does already exist, allocate one.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h:103,allocate,allocate,103,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFunction.h,1,['allocate'],['allocate']
Energy Efficiency,"/// getRegNumForOperand - some operands use different numbering schemes; /// for the same registers. For example, a VSX instruction may have any of; /// vs0-vs63 allocated whereas an Altivec instruction could only have; /// vs32-vs63 allocated (numbered as v0-v31). This function returns the actual; /// register number needed for the opcode/operand number combination.; /// The operand number argument will be useful when we need to extend this; /// to instructions that use both Altivec and VSX numbering (for different; /// operands).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp:162,allocate,allocated,162,interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp,4,['allocate'],['allocated']
Energy Efficiency,"/// getRewrittenText - Return the rewritten form of the text in the specified; /// range. If the start or end of the range was unrewritable or if they are; /// in different buffers, this returns an empty string.; ///; /// Note that this method is not particularly efficient.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/Rewriter.h:264,efficient,efficient,264,interpreter/llvm-project/clang/include/clang/Rewrite/Core/Rewriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/Rewriter.h,3,['efficient'],['efficient']
Energy Efficiency,"/// getSpelling - This method is used to get the spelling of a token into a; /// preallocated buffer, instead of as an std::string. The caller is required; /// to allocate enough space for the token, which is guaranteed to be at least; /// Tok.getLength() bytes long. The actual length of the token is returned.; ///; /// Note that this method may do two possible things: it may either fill in; /// the buffer specified with characters, or it may *change the input pointer*; /// to point to a constant buffer with the data already in it (avoiding a; /// copy). The caller is not allowed to modify the returned buffer pointer; /// if an internal buffer is returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Lexer.cpp:163,allocate,allocate,163,interpreter/llvm-project/clang/lib/Lex/Lexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Lexer.cpp,1,['allocate'],['allocate']
Energy Efficiency,"/// getSpelling - This method is used to get the spelling of a token into a; /// preallocated buffer, instead of as an std::string. The caller is required; /// to allocate enough space for the token, which is guaranteed to be at least; /// Tok.getLength() bytes long. The length of the actual result is returned.; ///; /// Note that this method may do two possible things: it may either fill in; /// the buffer specified with characters, or it may *change the input pointer*; /// to point to a constant buffer with the data already in it (avoiding a; /// copy). The caller is not allowed to modify the returned buffer pointer; /// if an internal buffer is returned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Lexer.h:163,allocate,allocate,163,interpreter/llvm-project/clang/include/clang/Lex/Lexer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/Lexer.h,1,['allocate'],['allocate']
Energy Efficiency,"/// grow - double the size of the allocated memory, guaranteeing space for at; /// least one more element or MinSize if specified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Support/BumpVector.h:34,allocate,allocated,34,interpreter/llvm-project/clang/include/clang/Analysis/Support/BumpVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Support/BumpVector.h,2,['allocate'],['allocated']
Energy Efficiency,"/// hasLazyArguments/CheckLazyArguments - The argument list of a function is; /// built on demand, so that the list isn't allocated until the first client; /// needs it. The hasLazyArguments predicate returns true if the arg list; /// hasn't been set up yet.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Function.h:122,allocate,allocated,122,interpreter/llvm-project/llvm/include/llvm/IR/Function.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Function.h,1,['allocate'],['allocated']
Energy Efficiency,/// hasOnlyLiveOutUses - Return true if SU has only value successors that are; /// CopyToReg to a virtual register. This SU def is probably a liveout and; /// it has no other use. It should be scheduled closer to the terminator.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:193,schedul,scheduled,193,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['schedul'],['scheduled']
Energy Efficiency,"/// if the 'for' loop has a dispatch schedule (e.g. dynamic, guided) then; /// we need to use the LB and UB expressions generated by the worksharing; /// code generation support, whereas in non combined situations we would; /// just emit 0 and the LastIteration expression; /// This function is necessary due to the difference of the LB and UB; /// types for the RT emission routines for 'for_static_init' and; /// 'for_dispatch_init'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:37,schedul,schedule,37,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['schedul'],['schedule']
Energy Efficiency,"/// im2col : efficient function to re-arrange input data of convolution to a matrix; /// that can be used by BLAS; /// Use trick to loop on each element of filtered region first and follow input data layout; /// By doing this reads and writes are of consecutive data in memory and one gains in efficiency; /// The resulting matrix will be already transposed and can be used directly in BLAS; /// since output will be a matrix : (channels*kernel_h*kernel_w , output_h*output_w); /// Example: with an input matrix; /// a1 a2 a3; /// b1 b2 b3 and a 2x2 kernel (k1,k2,k3,k4) and padding 1 :; /// c1 c2 c3; /// outpout will be a matrix (4 x 16); /// the routine will follow output order :; // first all elements which will be operated by k1 then k2 then k3; /// -> ( 0 0 0 0 0 a1 a2 a3 0 b1 b2 b3 0 c1 c2 c3 ) all elements for k1; /// ( 0 0 0 0 a1 a2 a3 0 b1 b2 b3 0 c1 c2 c3 0 ) for k2; /// ( 0 a1 a2 a3 0 b1 b2 b3 0 c1 c2 c3 0 0 0 0 ) for k3; /// ( a1 a2 a3 0 b1 b2 b3 0 c1 c2 c3 0 0 0 0 0 ) for k4; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/inc/TMVA/SOFIE_common.hxx:13,efficient,efficient,13,tmva/sofie/inc/TMVA/SOFIE_common.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/inc/TMVA/SOFIE_common.hxx,1,['efficient'],['efficient']
Energy Efficiency,"/// init - Initialize this MemoryBuffer as a reference to externally allocated; /// memory, memory that we know is already null terminated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/MemoryBuffer.cpp:69,allocate,allocated,69,interpreter/llvm-project/llvm/lib/Support/MemoryBuffer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/MemoryBuffer.cpp,1,['allocate'],['allocated']
Energy Efficiency,/// isAllocated - Return true if the specified register (or an alias) is; /// allocated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CallingConvLower.h:78,allocate,allocated,78,interpreter/llvm-project/llvm/include/llvm/CodeGen/CallingConvLower.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CallingConvLower.h,1,['allocate'],['allocated']
Energy Efficiency,"/// isIntegerConstantExpr - this recursive routine will test if an expression is; /// an integer constant expression.; /// FIXME: Pass up a reason why! Invalid operation in i-c-e, division by zero,; /// comma, etc; // CheckICE - This function does the fundamental ICE checking: the returned; // ICEDiag contains an ICEKind indicating whether the expression is an ICE,; // and a (possibly null) SourceLocation indicating the location of the problem.; //; // Note that to reduce code duplication, this helper does no evaluation; // itself; the caller checks whether the expression is evaluatable, and; // in the rare cases where CheckICE actually cares about the evaluated; // value, it calls into Evaluate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:470,reduce,reduce,470,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['reduce'],['reduce']
Energy Efficiency,/// isNullPointerConstant - C99 6.3.2.3p3 - Test if this reduces down to; /// a Null pointer constant. The return value can further distinguish the; /// kind of NULL pointer constant that was detected.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h:57,reduce,reduces,57,interpreter/llvm-project/clang/include/clang/AST/Expr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/Expr.h,1,['reduce'],['reduces']
Energy Efficiency,/// isPassiveNode - Return true if the node is a non-scheduled leaf.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.h:53,schedul,scheduled,53,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.h,1,['schedul'],['scheduled']
Energy Efficiency,/// isPowerOfTwo - Test whether the quantity is a power of two.; /// Zero is not a power of two.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/CharUnits.h:50,power,power,50,interpreter/llvm-project/clang/include/clang/AST/CharUnits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/CharUnits.h,2,['power'],['power']
Energy Efficiency,"/// isProfitableToHoist - Check if it is profitable to hoist instruction; /// \p I to its dominator block.; /// For example, it is not profitable if \p I and it's only user can form a; /// FMA instruction, because Powerpc prefers FMADD.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h:214,Power,Powerpc,214,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.h,1,['Power'],['Powerpc']
Energy Efficiency,/// isSchedulingBoundary - Overrides the isSchedulingBoundary from; ///	Codegen/TargetInstrInfo.cpp to make it capable of identifying ENDBR; /// intructions and prevent it from being re-scheduled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.h:186,schedul,scheduled,186,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.h,1,['schedul'],['scheduled']
Energy Efficiency,/// isSchedulingBoundary - Test if the given instruction should be; /// considered a scheduling boundary. This primarily includes labels; /// and terminators.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp:85,schedul,scheduling,85,interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetInstrInfo.cpp,1,['schedul'],['scheduling']
Energy Efficiency,/// isTokenSpecial - True if this token requires special consumption methods.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Parse/Parser.h:57,consumption,consumption,57,interpreter/llvm-project/clang/include/clang/Parse/Parser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Parse/Parser.h,1,['consumption'],['consumption']
Energy Efficiency,/// iteration adapter for range-for loops.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h:14,adapt,adapter,14,interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,2,['adapt'],['adapter']
Energy Efficiency,/// listScheduleTopDown - The main loop of list scheduling for top-down; /// schedulers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp:48,schedul,scheduling,48,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,2,['schedul'],"['schedulers', 'scheduling']"
Energy Efficiency,"/// minimum no of toys in tails for adaptive sampling; /// (taking weights into account, therefore double); /// Default: 0.0 which means no adaptive sampling",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ToyMCSampler.h:36,adapt,adaptive,36,roofit/roostats/inc/RooStats/ToyMCSampler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ToyMCSampler.h,2,['adapt'],['adaptive']
Energy Efficiency,/// notifyObjectLoaded - Called after an object has had its sections allocated; /// and addresses assigned to all symbols. Note: Section memory will not have; /// been relocated yet. notifyFunctionLoaded will not be called for; /// individual functions in the object.; ///; /// ELF-specific information; /// The ObjectImage contains the generated object image; /// with section headers updated to reflect the address at which sections; /// were loaded and with relocations performed in-place on debug sections.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITEventListener.h:69,allocate,allocated,69,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITEventListener.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITEventListener.h,1,['allocate'],['allocated']
Energy Efficiency,"/// pop_back - It allows LiveRangeEdit users to drop new registers.; /// The context is when an original def instruction of a register is; /// dead after rematerialization, we still want to keep it for following; /// rematerializations. We save the def instruction in DeadRemats,; /// and replace the original dst register with a new dummy register so; /// the live range of original dst register can be shrinked normally.; /// We don't want to allocate phys register for the dummy register, so; /// we want to drop it from the NewRegs set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeEdit.h:445,allocate,allocate,445,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeEdit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveRangeEdit.h,1,['allocate'],['allocate']
Energy Efficiency,"/// postMerge - Implement the X86_64 ABI post merging algorithm.; ///; /// Post merger cleanup, reduces a malformed Hi and Lo pair to; /// final MEMORY or SSE classes when necessary.; ///; /// \param AggregateSize - The size of the current aggregate in; /// the classification process.; ///; /// \param Lo - The classification for the parts of the type; /// residing in the low word of the containing object.; ///; /// \param Hi - The classification for the parts of the type; /// residing in the higher words of the containing object.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp:96,reduce,reduces,96,interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,1,['reduce'],['reduces']
Energy Efficiency,/// range adapter for GC transition arguments,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h:10,adapt,adapter,10,interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h,1,['adapt'],['adapter']
Energy Efficiency,/// range adapter for actual call arguments,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h:10,adapt,adapter,10,interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h,1,['adapt'],['adapter']
Energy Efficiency,/// range adapter for gc arguments,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h:10,adapt,adapter,10,interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h,1,['adapt'],['adapter']
Energy Efficiency,/// range adapter for vm state arguments,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h:10,adapt,adapter,10,interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Statepoint.h,1,['adapt'],['adapter']
Energy Efficiency,/// raw_os_ostream - A raw_ostream that writes to an std::ostream. This is a; /// simple adaptor class. It does not check for output errors; clients should; /// use the underlying stream to detect errors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_os_ostream.h:89,adapt,adaptor,89,interpreter/llvm-project/llvm/include/llvm/Support/raw_os_ostream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_os_ostream.h,1,['adapt'],['adaptor']
Energy Efficiency,"/// reachesChainWithoutSideEffects - Return true if this operand (which must; /// be a chain) reaches the specified operand without crossing any; /// side-effecting instructions on any chain path. In practice, this looks; /// through token factors and non-volatile loads. In order to remain efficient,; /// this only looks a couple of nodes in, it does not do an exhaustive search.; ///; /// Note that we only need to examine chains when we're searching for; /// side-effects; SelectionDAG requires that all side-effects are represented; /// by chains, even if another operand would force a specific ordering. This; /// constraint is necessary to allow transformations like splitting loads.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:291,efficient,efficient,291,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,1,['efficient'],['efficient']
Energy Efficiency,"/// remove - Creates a new immutable set that contains all of the values; /// of the original set with the exception of the specified value. If; /// the original set did not contain the value, the original set is; /// returned and no memory is allocated. The time and space complexity; /// of this operation is logarithmic in the size of the original set.; /// The memory allocated to represent the set is released when the; /// factory object that created the set is destroyed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h:244,allocate,allocated,244,interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ImmutableSet.h,2,['allocate'],['allocated']
Energy Efficiency,/// reserve - Increase the number of buckets such that adding the; /// EltCount-th node won't cause a rebucket operation. reserve is permitted; /// to allocate more space than requested by EltCount.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/FoldingSet.h:151,allocate,allocate,151,interpreter/llvm-project/llvm/include/llvm/ADT/FoldingSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/FoldingSet.h,1,['allocate'],['allocate']
Energy Efficiency,"/// reset - Efficiently reset a range of bits in [I, E)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/BitVector.h:12,Efficient,Efficiently,12,interpreter/llvm-project/llvm/include/llvm/ADT/BitVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/BitVector.h,1,['Efficient'],['Efficiently']
Energy Efficiency,"/// run - Execute all of the passes scheduled for execution. Keep track of; /// whether any of the passes modifies the function, and if so, return true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopPass.cpp:36,schedul,scheduled,36,interpreter/llvm-project/llvm/lib/Analysis/LoopPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopPass.cpp,2,['schedul'],['scheduled']
Energy Efficiency,"/// run - Execute all of the passes scheduled for execution. Keep track of; /// whether any of the passes modifies the module, and if so, return true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopPass.h:36,schedul,scheduled,36,interpreter/llvm-project/llvm/include/llvm/Analysis/LoopPass.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopPass.h,7,['schedul'],['scheduled']
Energy Efficiency,"/// run - Execute all of the passes scheduled for execution. Keep; /// track of whether any of the passes modifies the function, and if; /// so, return true.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManager.h:36,schedul,scheduled,36,interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/LegacyPassManager.h,2,['schedul'],['scheduled']
Energy Efficiency,/// runOnMachineFunction - Reduce subregister inserts and extracts to register; /// copies.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ExpandPostRAPseudos.cpp:27,Reduce,Reduce,27,interpreter/llvm-project/llvm/lib/CodeGen/ExpandPostRAPseudos.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ExpandPostRAPseudos.cpp,1,['Reduce'],['Reduce']
Energy Efficiency,"/// schedule - Called back from MachineScheduler::runOnMachineFunction; /// after setting up the current scheduling region. [RegionBegin, RegionEnd); /// only includes instructions that have DAG nodes, not scheduling boundaries.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp:4,schedul,schedule,4,interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp,3,['schedul'],"['schedule', 'scheduling']"
Energy Efficiency,"/// schedule - Called back from MachineScheduler::runOnMachineFunction; /// after setting up the current scheduling region. [RegionBegin, RegionEnd); /// only includes instructions that have DAG nodes, not scheduling boundaries.; ///; /// This is a skeletal driver, with all the functionality pushed into helpers,; /// so that it can be easily extended by experimental schedulers. Generally,; /// implementing MachineSchedStrategy should be sufficient to implement a new; /// scheduling algorithm. However, if a scheduler further subclasses; /// ScheduleDAGMILive then it will want to override this virtual method in order; /// to update any specialized state.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:4,schedul,schedule,4,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,7,"['Schedul', 'schedul']","['ScheduleDAGMILive', 'schedule', 'scheduler', 'schedulers', 'scheduling']"
Energy Efficiency,"/// scheduleNodeTopDown - Add the node to the schedule. Decrement the pending; /// count of its successors. If a successor pending count is zero, add it to; /// the Available queue.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp:4,schedul,scheduleNodeTopDown,4,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,2,['schedul'],"['schedule', 'scheduleNodeTopDown']"
Energy Efficiency,/// scheduledNode - Main resource tracking point.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ResourcePriorityQueue.h:4,schedul,scheduledNode,4,interpreter/llvm-project/llvm/include/llvm/CodeGen/ResourcePriorityQueue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ResourcePriorityQueue.h,1,['schedul'],['scheduledNode']
Energy Efficiency,"/// set - Efficiently set a range of bits in [I, E)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/BitVector.h:10,Efficient,Efficiently,10,interpreter/llvm-project/llvm/include/llvm/ADT/BitVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/BitVector.h,1,['Efficient'],['Efficiently']
Energy Efficiency,/// setUseLocalStackAllocationBlock - Set whether the local allocation blob; /// should be allocated together or let PEI allocate the locals in it; /// directly.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h:91,allocate,allocated,91,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineFrameInfo.h,2,['allocate'],"['allocate', 'allocated']"
Energy Efficiency,/// setupFunctionContext - Allocate the function context on the stack and fill; /// it with all of the data that we know at this point.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SjLjEHPrepare.cpp:27,Allocate,Allocate,27,interpreter/llvm-project/llvm/lib/CodeGen/SjLjEHPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SjLjEHPrepare.cpp,1,['Allocate'],['Allocate']
Energy Efficiency,"/// shouldScheduleLoadsNear - This is a used by the pre-regalloc scheduler to; /// determine (in conjunction with areLoadsFromSameBasePtr) if two loads should; /// be scheduled togther. On some targets if two loads are loading from; /// addresses in the same cache line, it's better if they are scheduled; /// together. This function takes two integers that represent the load offsets; /// from the common base address. It returns true if it decides it's desirable; /// to schedule the two loads together. ""NumLoads"" is the number of loads that; /// have already been scheduled after Load1.; ///; /// FIXME: remove this in favor of the MachineInstr interface once pre-RA-sched; /// is permanently disabled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp:65,schedul,scheduler,65,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.cpp,5,['schedul'],"['schedule', 'scheduled', 'scheduler']"
Energy Efficiency,"/// shouldScheduleLoadsNear - This is a used by the pre-regalloc scheduler to; /// determine (in conjunction with areLoadsFromSameBasePtr) if two loads; /// should be scheduled togther. On some targets if two loads are loading from; /// addresses in the same cache line, it's better if they are scheduled; /// together. This function takes two integers that represent the load offsets; /// from the common base address. It returns true if it decides it's desirable; /// to schedule the two loads together. ""NumLoads"" is the number of loads that; /// have already been scheduled after Load1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.h:65,schedul,scheduler,65,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseInstrInfo.h,10,['schedul'],"['schedule', 'scheduled', 'scheduler']"
Energy Efficiency,"/// simple-declaration: [C99 6.7: declaration] [C++ 7p1: dcl.dcl]; /// declaration-specifiers init-declarator-list[opt] ';'; /// [C++11] attribute-specifier-seq decl-specifier-seq[opt]; /// init-declarator-list ';'; ///[C90/C++]init-declarator-list ';' [TODO]; /// [OMP] threadprivate-directive; /// [OMP] allocate-directive [TODO]; ///; /// for-range-declaration: [C++11 6.5p1: stmt.ranged]; /// attribute-specifier-seq[opt] type-specifier-seq declarator; ///; /// If RequireSemi is false, this does not check for a ';' at the end of the; /// declaration. If it is true, it checks for and eats it.; ///; /// If FRI is non-null, we might be parsing a for-range-declaration instead; /// of a simple-declaration. If we find that we are, we also parse the; /// for-range-initializer, and place it here.; ///; /// DeclSpecStart is used when decl-specifiers are parsed before parsing; /// the Declaration. The SourceLocation for this Decl is set to; /// DeclSpecStart if DeclSpecStart is non-null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp:306,allocate,allocate-directive,306,interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,1,['allocate'],['allocate-directive']
Energy Efficiency,/// startBlock - Initialize register live-range state for scheduling in; /// this block.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp:58,schedul,scheduling,58,interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"/// stringForContext - Returns a string containing the name of a particular; /// InstructionContext, usually for diagnostic purposes.; ///; /// @param insnContext - The instruction class to transform to a string.; /// @return - A statically-allocated string constant that contains the; /// name of the instruction class.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/X86DisassemblerTables.cpp:241,allocate,allocated,241,interpreter/llvm-project/llvm/utils/TableGen/X86DisassemblerTables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/X86DisassemblerTables.cpp,1,['allocate'],['allocated']
Energy Efficiency,"/// stringForDecisionType - Returns a statically-allocated string corresponding; /// to a particular decision type.; ///; /// @param dt - The decision type.; /// @return - A pointer to the statically-allocated string (e.g.,; /// ""MODRM_ONEENTRY"" for MODRM_ONEENTRY).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/X86DisassemblerTables.cpp:49,allocate,allocated,49,interpreter/llvm-project/llvm/utils/TableGen/X86DisassemblerTables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/X86DisassemblerTables.cpp,2,['allocate'],['allocated']
Energy Efficiency,"/// this is more complicated than the generic; /// User::allocHungoffUses, because we have to allocate Uses for the incoming; /// values and pointers to the incoming blocks, all in one allocation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSA.h:94,allocate,allocate,94,interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSA.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemorySSA.h,1,['allocate'],['allocate']
Energy Efficiency,"/// true if fReducedResult can be reduced with a new result, false until we have produced one result",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TMPWorkerTree.h:34,reduce,reduced,34,tree/treeplayer/inc/TMPWorkerTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TMPWorkerTree.h,1,['reduce'],['reduced']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////////////////////; /// Almost a no-op, many slots can in fact reduce the performance due to thread synchronization.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RSqliteDS.cxx:141,reduce,reduce,141,tree/dataframe/src/RSqliteDS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RSqliteDS.cxx,1,['reduce'],['reduce']
Energy Efficiency,"/////////////////////////////////////////////////////////////////////////////////////////; /// Determine final boundaries and number of bins for histograms created in power-of-2; /// autobin mode.; ///; /// Return kTRUE if compatible, updating fNewXaxis accordingly; return kFALSE if something; /// wrong.; ///; /// The histograms are not merge-compatible if; ///; /// 1. have different variable-size bins; /// 2. larger bin size is not an integer multiple of the smaller one; /// 3. the final estimated range is smalle then the bin size; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1Merger.cxx:167,power,power-of-,167,hist/hist/src/TH1Merger.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1Merger.cxx,1,['power'],['power-of-']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; // //; // From now on we have the methods concerning the unzipping part of the cache //; // //; ////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////////; /// Read the logical record header from the buffer buf.; /// That must be the pointer tho the header part not the object by itself and; /// must contain data of at least maxbytes; /// Returns nread;; ///; /// In output arguments:; ///; /// - nbytes : number of bytes in record; /// if negative, this is a deleted record; /// if 0, cannot read record, wrong value of argument first; /// - objlen : uncompressed object size; /// - keylen : length of logical record header; ///; /// Note that the arguments objlen and keylen are returned only; /// if maxbytes >=16; /// Note: This was adapted from TFile... so some things dont apply",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:924,adapt,adapted,924,tree/tree/src/TTreeCacheUnzip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx,1,['adapt'],['adapted']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// ### Basic initialization of FOAM invoked by the user. Mandatory!; ///; /// This method starts the process of the cell build-up.; /// User must invoke Initialize with two arguments or Initialize without arguments.; /// This is done BEFORE generating first MC event and AFTER allocating FOAM object; /// and resetting (optionally) its internal parameters/switches.; /// The overall operational scheme of the FOAM is the following:; ///; /// \image html foam_schema2.png width=600; ///; /// ### This method invokes several other methods:; ///; /// InitCells initializes memory storage for cells and begins exploration process; /// from the root cell. The empty cells are allocated/filled using CellFill.; /// The procedure Grow which loops over cells, picks up the cell with the biggest; /// ``driver integral'', see Computer Physics Communications 152 152 (2003) 55 for explanations,; /// with the help of PeekMax procedure. The chosen cell is split using Divide.; /// Subsequently, the procedure Explore called by the Divide; /// (and by InitCells for the root cell) does the most important; /// job in the FOAM object build-up: it performs a small MC run for each; /// newly allocated daughter cell.; /// Explore calculates how profitable the future split of the cell will be; /// and defines the optimal cell division geometry with the help of Carver or Varedu; /// procedures, for maximum weight or variance optimization respectively.; /// All essential results of the exploration are written into; /// the explored cell object. At the very end of the foam build-up,; /// Finally, MakeActiveList is invoked to create a list of pointers to; /// all active cells, for the purpose of the quick access during the MC generation.; /// The procedure Explore employs MakeAlpha to generate random coordinates; /// inside a given cell with the uniform distribution.; /// The above sequence of the procedure calls is depicte",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx:754,allocate,allocated,754,math/foam/src/TFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// - B0 : _tag == -1; /// - B0bar : _tag == +1; /// - rho+ : _rhoQ == +1; /// - rho- : _rhoQ == -1; /// - the charge correction factor ""_correctQ"" serves to implement misidentified charges",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:193,charge,charge,193,roofit/roofit/src/RooNonCPEigenDecay.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx,2,['charge'],"['charge', 'charges']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// @param[in] numthreads Number of threads to use. If not specified or; /// set to zero, the number of threads is automatically; /// decided by the implementation. Any other value is; /// used as a hint.; ///; /// ROOT must be built with the compilation flag `imt=ON` for this feature to be available.; /// The following objects and methods automatically take advantage of; /// multi-threading if a call to `EnableImplicitMT` has been made before usage:; ///; /// - RDataFrame internally runs the event-loop by parallelizing over clusters of entries; /// - TTree::GetEntry reads multiple branches in parallel; /// - TTree::FlushBaskets writes multiple baskets to disk in parallel; /// - TTreeCacheUnzip decompresses the baskets contained in a TTreeCache in parallel; /// - THx::Fit performs in parallel the evaluation of the objective function over the data; /// - TMVA::DNN trains the deep neural networks in parallel; /// - TMVA::BDT trains the classifier in parallel and multiclass BDTs are evaluated in parallel; ///; /// EnableImplicitMT calls in turn EnableThreadSafety.; /// The 'numthreads' parameter allows to control the number of threads to; /// be used by the implicit multi-threading. However, this parameter is just; /// a hint for ROOT: it will try to satisfy the request if the execution; /// scenario allows it. For example, if ROOT is configured to use an external; /// scheduler, setting a value for 'numthreads' might not have any effect.; /// The maximum number of threads can be influenced by the environment; /// variable `ROOT_MAX_THREADS`: `export ROOT_MAX_THREADS=2` will try to set; /// the maximum number of active threads to 2, if the scheduling library; /// (such as tbb) ""permits"".; ///; /// \note Use `DisableImplicitMT()` to disable multi-threading (some locks will remain in place as; /// described in EnableThreadSafety()). `EnableImplicitMT(1)` creates a thread-pool of size 1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx:1471,schedul,scheduler,1471,core/base/src/TROOT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TROOT.cxx,2,['schedul'],"['scheduler', 'scheduling']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// A function for creating a rotation matrix that rotates a vector called; /// ""from"" into another vector called ""to"".; /// Input : from[3], to[3] which both must be *normalized* non-zero vectors; /// Output: mtx[3][3] -- a 3x3 matrix in column-major form; ///; /// Authors: Tomas Möller, John Hughes; /// ""Efficiently Building a Matrix to Rotate One Vector to Another""; /// Journal of Graphics Tools, 4(4):1-4, 1999",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrans.cxx:390,Efficient,Efficiently,390,graf3d/eve/src/TEveTrans.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrans.cxx,2,['Efficient'],['Efficiently']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Activate (on == TRUE) or deactivate (on == FALSE) all sockets; /// monitored by 'mon'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:153,monitor,monitored,153,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['monitor'],['monitored']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Adaption of the AdaBoost to regression problems (see H.Drucker 1997).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:86,Adapt,Adaption,86,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['Adapt'],['Adaption']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Add a bad slave server to the bad slave list and remove it from; /// the active list and from the two monitor objects. Assume that the work; /// done by this worker was lost and ask packerizer to reassign it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:188,monitor,monitor,188,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['monitor'],['monitor']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Add a new TExec object to the list of Execs.; ///; /// When an event occurs in the pad (mouse click, etc) the list of C++ commands; /// in the list of Execs are executed via TPad::AutoExec.; ///; /// When a pad event occurs (mouse move, click, etc) all the commands; /// contained in the fExecs list are executed in the order found in the list.; ///; /// This facility is activated by default. It can be deactivated by using; /// the canvas ""Option"" menu.; ///; /// The following examples of TExec commands are provided in the tutorials:; /// macros exec1.C and exec2.C.; ///; /// ### Example1 of use of exec1.C; ///; /// ~~~ {.cpp}; /// Root > TFile f(""hsimple.root""); /// Root > hpx.Draw(); /// Root > c1.AddExec(""ex1"","".x exec1.C""); /// ~~~; ///; /// At this point you can use the mouse to click on the contour of; /// the histogram hpx. When the mouse is clicked, the bin number and its; /// contents are printed.; ///; /// ### Example2 of use of exec1.C; ///; /// ~~~ {.cpp}; /// Root > TFile f(""hsimple.root""); /// Root > hpxpy.Draw(); /// Root > c1.AddExec(""ex2"","".x exec2.C""); /// ~~~; ///; /// When moving the mouse in the canvas, a second canvas shows the; /// projection along X of the bin corresponding to the Y position; /// of the mouse. The resulting histogram is fitted with a gaussian.; /// A ""dynamic"" line shows the current bin position in Y.; /// This more elaborated example can be used as a starting point; /// to develop more powerful interactive applications exploiting the C++; /// interpreter as a development engine.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:1535,power,powerful,1535,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['power'],['powerful']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Add all objects from collection col to this collection.; /// Implemented for more efficient rehashing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:168,efficient,efficient,168,core/cont/src/THashTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx,1,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Add jet cone.; /// parameters are :; /// - (eta,phi) : of the center/leading particle; /// - (reta, rphi) : radius of cone in eta-phi space; /// - length : length of the cone; /// - if cylinder is set and length is adapted to cylinder.; /// - if length is given, it will be used as scalar factor; /// - if cylinder is not set, length is used as length of the cone; /// Returns 0 on success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveJetCone.cxx:301,adapt,adapted,301,graf3d/eve/src/TEveJetCone.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveJetCone.cxx,2,['adapt'],['adapted']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Add jet cone.; /// parameters are :; /// - (eta,phi) : of the center/leading particle; /// - cone_r : cone radius in eta-phi space; /// - length : length of the cone; /// - if cylinder is set and length is adapted to cylinder.; /// - if length is given, it will be used as scalar factor; /// - if cylinder is not set, length is used as length of the cone; /// Return 0 on success.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveJetCone.cxx:292,adapt,adapted,292,graf3d/eve/src/TEveJetCone.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveJetCone.cxx,2,['adapt'],['adapted']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Add slave with socket s to the bad slave list and remove if from; /// the active list and from the two monitor objects.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:189,monitor,monitor,189,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['monitor'],['monitor']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Add socket to the monitor's active list. If interest=kRead then we; /// want to monitor the socket for read readiness, if interest=kWrite; /// then we monitor the socket for write readiness, if interest=kRead|kWrite; /// then we monitor both read and write readiness.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx:104,monitor,monitor,104,net/net/src/TMonitor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx,4,['monitor'],['monitor']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Advertise capability to determine maximum value of function for given set of; /// observables. If no direct generator method is provided, this information; /// will assist the accept/reject generator to operate more efficiently as; /// it can skip the initial trial sampling phase to empirically find the function; /// maximum",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:302,efficient,efficiently,302,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['efficient'],['efficiently']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocate a block of memory, that later can be resized using; /// TStorage::ReAlloc().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStorage.cxx:86,Allocate,Allocate,86,core/base/src/TStorage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStorage.cxx,1,['Allocate'],['Allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocate a new memory chunk and register it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveChunkManager.cxx:86,Allocate,Allocate,86,graf3d/eve/src/TEveChunkManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveChunkManager.cxx,2,['Allocate'],['Allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocate and fill work buffer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:86,Allocate,Allocate,86,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,1,['Allocate'],['Allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocate and prepare for incremental filling.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttBBox.cxx:86,Allocate,Allocate,86,core/base/src/TAttBBox.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttBBox.cxx,1,['Allocate'],['Allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocate arrays.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:86,Allocate,Allocate,86,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,1,['Allocate'],['Allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocate buffers for statement parameters/ result fields.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLStatement.cxx:86,Allocate,Allocate,86,sql/mysql/src/TMySQLStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLStatement.cxx,4,['Allocate'],['Allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocate color in colormap. If we are on an <= 8 plane machine; /// we will use XAllocColor. If we are on a >= 15 (15, 16 or 24) plane; /// true color machine we will calculate the pixel value using:; /// for 15 and 16 bit true colors have 6 bits precision per color however; /// only the 5 most significant bits are used in the color index.; /// Except for 16 bits where green uses all 6 bits. I.e.:; /// 15 bits = rrrrrgggggbbbbb; /// 16 bits = rrrrrggggggbbbbb; /// for 24 bits each r, g and b are represented by 8 bits.; ///; /// Since all colors are set with a max of 65535 (16 bits) per r, g, b; /// we just right shift them by 10, 11 and 10 bits for 16 planes, and; /// (10, 10, 10 for 15 planes) and by 8 bits for 24 planes.; /// Returns kFALSE in case color allocation failed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:86,Allocate,Allocate,86,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,2,"['Allocate', 'green']","['Allocate', 'green']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocate color in colormap. If we are on an <= 8 plane machine; /// we will use XAllocColor. If we are on a >= 15 (15, 16 or 24) plane; /// true color machine we will calculate the pixel value using:; /// for 15 and 16 bit true colors have 6 bits precision per color however; /// only the 5 most significant bits are used in the color index.; /// Except for 16 bits where green uses all 6 bits. I.e.:; /// ~~~ {.cpp}; /// 15 bits = rrrrrgggggbbbbb; /// 16 bits = rrrrrggggggbbbbb; /// ~~~; /// for 24 bits each r, g and b are represented by 8 bits.; ///; /// Since all colors are set with a max of 65535 (16 bits) per r, g, b; /// we just right shift them by 10, 11 and 10 bits for 16 planes, and; /// (10, 10, 10 for 15 planes) and by 8 bits for 24 planes.; /// Returns kFALSE in case color allocation failed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx:86,Allocate,Allocate,86,graf2d/x11/src/TGX11.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx,2,"['Allocate', 'green']","['Allocate', 'green']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocate internal data structures for `newsize` points.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:86,Allocate,Allocate,86,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,1,['Allocate'],['Allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocate internal data structures for `size` points.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx:86,Allocate,Allocate,86,hist/hist/src/TGraphAsymmErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphAsymmErrors.cxx,2,['Allocate'],['Allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocate new attribute with specified name length and value length",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx:86,Allocate,Allocate,86,io/xml/src/TXMLEngine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx,1,['Allocate'],['Allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocate new matrix. Arguments are number of rows, columns, row lowerbound (0 default); /// and column lowerbound (0 default), 0 initialization flag and number of non-zero; /// elements (only relevant for sparse format).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx:86,Allocate,Allocate,86,math/matrix/src/TMatrixTSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx,1,['Allocate'],['Allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocate new matrix. Arguments are number of rows, columns, row; /// lowerbound (0 default) and column lowerbound (0 default).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixT.cxx:86,Allocate,Allocate,86,math/matrix/src/TMatrixT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixT.cxx,2,['Allocate'],['Allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocate new vector. Arguments are number of rows and row; /// lowerbound (0 default).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TVectorT.cxx:86,Allocate,Allocate,86,math/matrix/src/TVectorT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TVectorT.cxx,1,['Allocate'],['Allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocate space for the appropriate number of non-zeros in the matrices",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpDataSparse.cxx:86,Allocate,Allocate,86,math/quadp/src/TQpDataSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpDataSparse.cxx,1,['Allocate'],['Allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocate system color by name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx:86,Allocate,Allocate,86,gui/guihtml/src/TGHtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx,1,['Allocate'],['Allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocate system color by value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx:86,Allocate,Allocate,86,gui/guihtml/src/TGHtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx,1,['Allocate'],['Allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocate the needed space.; /// For associative collection, this returns a TStaging object that; /// need to be deleted manually __or__ returned by calling Commit(TStaging*)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TGenCollectionProxy.cxx:86,Allocate,Allocate,86,io/io/src/TGenCollectionProxy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TGenCollectionProxy.cxx,1,['Allocate'],['Allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocates a read-only colormap entry corresponding to the closest RGB; /// value supported by the hardware. If no cell could be allocated it; /// returns kFALSE, otherwise kTRUE.; ///; /// The pixel value is set to default. Let system think we could allocate; /// color.; ///; /// \param [in] cmap the colormap; /// \param [in] color specifies and returns the values actually used in the cmap",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:86,Allocate,Allocates,86,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,3,"['Allocate', 'allocate']","['Allocates', 'allocate', 'allocated']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocates all necessary data structures used for replaying; /// What is allocated here is deleted in destructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx:86,Allocate,Allocates,86,gui/recorder/src/TRecorder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx,2,"['Allocate', 'allocate']","['Allocates', 'allocated']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocates and Fills a NULL terminated buffer of length Len+1 with; /// Len random characters.; /// Return pointer to the buffer (to be deleted by the caller); /// Opt = 0 any non dangerous char; /// 1 letters and numbers (upper and lower case); /// 2 hex characters (upper and lower case); /// 3 crypt like [a-zA-Z0-9./]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:86,Allocate,Allocates,86,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['Allocate'],['Allocates']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocates and fills a 0 terminated buffer of length len+1 with; /// len random characters.; /// Returns pointer to the buffer (to be deleted by the caller); /// opt = 0 any non dangerous char; /// 1 letters and numbers (upper and lower case); /// 2 hex characters (upper and lower case)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx:86,Allocate,Allocates,86,net/auth/src/TAuthenticate.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/TAuthenticate.cxx,1,['Allocate'],['Allocates']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocates new xml node with specified name length",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx:86,Allocate,Allocates,86,io/xml/src/TXMLEngine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx,1,['Allocate'],['Allocates']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Allocates the memory needed for an drawable.; ///; /// \param [in] width the width of the image, in pixels; /// \param [in] height the height of the image, in pixels",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:86,Allocate,Allocates,86,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['Allocate'],['Allocates']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Assignment from another RooAbsCategory. This will use the *state name*; /// of the other object to set the corresponding state. This is less efficient; /// then directly assigning the state index.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCategoryLValue.cxx:227,efficient,efficient,227,roofit/roofitcore/src/RooAbsCategoryLValue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCategoryLValue.cxx,1,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Auxiliary function to get the next power of 2 integer value larger then n; ///; /// Used by the autobin power of 2 algorithm",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:121,power,power,121,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['power'],['power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Auxiliary function to get the power of 2 next (larger) or previous (smaller); /// a given x; ///; /// next = kTRUE : next larger; /// next = kFALSE : previous smaller; ///; /// Used by the autobin power of 2 algorithm",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:116,power,power,116,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['power'],['power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Bind result column to buffer. Allocate buffer of appropriate type",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCStatement.cxx:116,Allocate,Allocate,116,sql/odbc/src/TODBCStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCStatement.cxx,1,['Allocate'],['Allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Buffer-based estimate of the histogram range using the power of 2 algorithm.; ///; /// Used by the autobin power of 2 algorithm.; ///; /// Works on arguments (min and max from fBuffer) and internal inputs: fXmin,; /// fXmax, NBinsX (from fXaxis), ...; /// Result save internally in fXaxis.; ///; /// Overloaded by TH2 and TH3.; ///; /// Return -1 if internal inputs are inconsistent, 0 otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:141,power,power,141,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,2,['power'],['power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Build Index array for names in varexp.; /// This will allocated a C style array of TString and Ints",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:140,allocate,allocated,140,tree/treeplayer/src/TSelectorDraw.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Build polygons from the set of buffer segments.; /// First creates a segment pool according to reduced and projected points; /// and then build polygons from the pool.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEvePolygonSetProjected.cxx:181,reduce,reduced,181,graf3d/eve/src/TEvePolygonSetProjected.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEvePolygonSetProjected.cxx,2,['reduce'],['reduced']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Calculate B * (*this) * B^T , final matrix will be (nrowsb x nrowsb); /// This is a similarity transform when B is orthogonal . It is more; /// efficient than applying the actual multiplication because this; /// routine realizes that the final matrix is symmetric .",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSym.cxx:230,efficient,efficient,230,math/matrix/src/TMatrixTSym.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSym.cxx,2,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Calculate B^T * (*this) * B , final matrix will be (ncolsb x ncolsb); /// It is more efficient than applying the actual multiplication because this; /// routine realizes that the final matrix is symmetric .",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSym.cxx:171,efficient,efficient,171,math/matrix/src/TMatrixTSym.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSym.cxx,1,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Calculate and return reduced chi-squared between a curve and a histogram.; ///; /// \param[in] curvename Name of the curve or nullptr for last curve; /// \param[in] histname Name of the histogram to compare to or nullptr for last added histogram; /// \param[in] nFitParam If non-zero, reduce the number of degrees of freedom by this; /// number. This means that the curve was fitted to the data with nFitParam floating; /// parameters, which needs to be reflected in the calculation of \f$\chi^2 / \mathrm{ndf}\f$.; ///; /// \return \f$ \chi^2 / \mathrm{ndf} \f$ between the plotted curve and the data.; ///; /// \note The \f$ \chi^2 \f$ is calculated between a *plot of the original distribution* and the data.; /// It therefore has more rounding errors than directly calculating the \f$ \chi^2 \f$ from a PDF or; /// function. To do this, use RooAbsReal::createChi2(RooDataHist&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&, const RooCmdArg&).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:107,reduce,reduced,107,roofit/roofitcore/src/RooPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx,2,['reduce'],"['reduce', 'reduced']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Calculate determinant det = d1*TMath::Power(2.,d2)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompLU.cxx:124,Power,Power,124,math/matrix/src/TDecompLU.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompLU.cxx,1,['Power'],['Power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Calculate the n-th stage of refinement of the extended trapezoidal; /// summation rule. This is the most efficient rule for a well behaved; /// integrands that can be evaluated over its entire range, including the; /// endpoints.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:191,efficient,efficient,191,roofit/roofitcore/src/RooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx,1,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Calculate the principal components from the original data vector; /// x, and return it in p (function extracted from TPrincipal::X2P); /// It's the users responsibility to make sure that both x and p are; /// of the right size (i.e., memory must be allocated for p)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariablePCATransform.cxx:335,allocate,allocated,335,tmva/tmva/src/VariablePCATransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariablePCATransform.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Calculate the principal components from the original data vector; /// x, and return it in p.; ///; /// It's the users responsibility to make sure that both x and p are; /// of the right size (i.e., memory must be allocated for p).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx:299,allocate,allocated,299,hist/hist/src/TPrincipal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Calculate x as a function of nTest of the most significant; /// principal components p, and return it in x.; /// It's the users responsibility to make sure that both x and p are; /// of the right size (i.e., memory must be allocated for x).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx:309,allocate,allocated,309,hist/hist/src/TPrincipal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TPrincipal.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Calculates the Kolmogorov distribution function,; ///; /// \f[; /// P(z) = 2 \sum_{j=1}^{\infty} (-1)^{j-1} e^{-2 j^2 z^2}; /// \f]; ///; /// which gives the probability that Kolmogorov's test statistic will exceed; /// the value z assuming the null hypothesis. This gives a very powerful; /// test for comparing two one-dimensional distributions.; /// see, for example, Eadie et al, ""statistical Methods in Experimental; /// Physics', pp 269-270).; ///; /// This function returns the confidence level for the null hypothesis, where:; /// - \f$ z = dn \sqrt{n} \f$, and; /// - \f$ dn \f$ is the maximum deviation between a hypothetical distribution; /// function and an experimental distribution with; /// - \f$ n \f$ events; ///; /// NOTE: To compare two experimental distributions with m and n events,; /// use \f$ z = \sqrt{m n/(m+n)) dn} \f$; ///; /// Accuracy: The function is far too accurate for any imaginable application.; /// Probabilities less than \f$ 10^{-15} \f$ are returned as zero.; /// However, remember that the formula is only valid for ""large"" n.; ///; /// Theta function inversion formula is used for z <= 1; ///; /// This function was translated by Rene Brun from PROBKL in CERNLIB.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:366,power,powerful,366,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['power'],['powerful']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Change MINUIT strategy to istrat. Accepted codes; /// are 0,1,2 and represent MINUIT strategies for dealing; /// most efficiently with fast FCNs (0), expensive FCNs (2); /// and 'intermediate' FCNs (1)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:204,efficient,efficiently,204,roofit/roofitcore/src/RooMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx,1,['efficient'],['efficiently']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Check if required auth method is allowed for 'Host'.; /// If 'yes', returns 0, if 'no', returns 1, the number of allowed; /// methods in NumAllow, and the codes of the allowed methods (in order; /// of preference) in AllowMeth. Memory for AllowMeth must be allocated; /// outside. Directives read from (in decreasing order of priority):; /// $ROOTDAEMONRC, $HOME/.rootdaemonrc (privately startd daemons only); /// or $ROOTETCDIR/system.rootdaemonrc.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:343,allocate,allocated,343,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Cleanup the monitor object. Does not delete sockets being monitored.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx:98,monitor,monitor,98,net/net/src/TMonitor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx,2,['monitor'],"['monitor', 'monitored']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Clear string and make sure it has a capacity of nc.; /// \warning If nc > MaxSize(), then Fatal() is raised, and only MaxSize(); /// elements are allocated if Fatal does not abort; /// \return Resulting allocated capacity (after clamping, if needed)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TString.cxx:232,allocate,allocated,232,core/base/src/TString.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TString.cxx,2,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Clear the clones array. Only use this routine when your objects don't; /// allocate memory since it will not call the object dtors.; /// However, if the class in the TClonesArray implements the function; /// Clear(Option_t *option) and if option = ""C"" the function Clear(); /// is called for all objects in the array. In the function Clear(), one; /// can delete objects or dynamic arrays allocated in the class.; /// This procedure is much faster than calling TClonesArray::Delete().; /// When the option starts with ""C+"", eg ""C+xyz"" the objects in the array; /// are in turn cleared with the option ""xyz""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:161,allocate,allocate,161,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,2,['allocate'],"['allocate', 'allocated']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Clear the clones array. Use this routine when your objects allocate; /// memory (e.g. objects inheriting from TNamed or containing TStrings; /// allocate memory). If not you better use Clear() since if is faster.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:145,allocate,allocate,145,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,2,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Clip polygon using the Sutherland-Hodgman algorithm.; ///; /// \param[in] n Number of points in the polygon to; /// be clipped; /// \param[in] x,y Polygon x[n], y[n] do be clipped vertices; /// \param[in] xclipl,yclipb,xclipr,yclipt Clipping boundary; /// \param[out] nn Number of points in xc and yc; /// \param[out] xc,yc Clipped polygon vertices. The Int_t; /// returned by this function is; /// the number of points in the clipped; /// polygon. These vectors must; /// be allocated by the calling function.; /// A size of 2*n for each is; /// enough.; ///; /// Sutherland and Hodgman's polygon-clipping algorithm uses a divide-and-conquer; /// strategy: It solves a series of simple and identical problems that, when; /// combined, solve the overall problem. The simple problem is to clip a polygon; /// against a single infinite clip edge. Four clip edges, each defining one boundary; /// of the clip rectangle, successively clip a polygon against a clip rectangle.; ///; /// Steps of Sutherland-Hodgman's polygon-clipping algorithm:; ///; /// * Polygons can be clipped against each edge of the window one at a time.; /// Windows/edge intersections, if any, are easy to find since the X or Y coordinates; /// are already known.; /// * Vertices which are kept after clipping against one window edge are saved for; /// clipping against the remaining edges.; /// * Note that the number of vertices usually changes and will often increases.; ///; /// The clip boundary determines a visible and invisible region. The edges from; /// vertex i to vertex i+1 can be one of four types:; ///; /// * Case 1 : Wholly inside visible region - save endpoint; /// * Case 2 : Exit visible region - save the intersection; /// * Case 3 : Wholly outside visible region - save nothing; /// * Case 4 : Enter visible region - save intersection and endpoint",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:562,allocate,allocated,562,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Closes all signal-slot connections; /// Frees all memory allocated in constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx:143,allocate,allocated,143,gui/recorder/src/TRecorder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Common initialization for all constructors.; /// This is a private function called to allocate the memory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPie.cxx:172,allocate,allocate,172,graf2d/graf/src/TPie.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPie.cxx,1,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Computation of Voigt function (normalised).; /// Voigt is a convolution of the two functions:; /// \f[; /// gauss(xx) = \frac{1}{(\sqrt{2\pi} sigma)} e^{\frac{xx^{2}}{(2 sigma{^2})}}; /// \f]; /// and; /// \f[; /// lorentz(xx) = \frac{ \frac{1}{\pi} \frac{lg}{2} }{ (xx^{2} + \frac{lg^{2}}{4}) }; /// \f]; /// \.; ///; /// The Voigt function is known to be the real part of Faddeeva function also; /// called complex error function [2].; ///; /// The algorithm was developed by J. Humlicek [1].; /// This code is based on fortran code presented by R. J. Wells [2].; /// Translated and adapted by Miha D. Puc; ///; /// To calculate the Faddeeva function with relative error less than 10^(-r).; /// r can be set by the user subject to the constraints 2 <= r <= 5.; ///; /// - [1] J. Humlicek, JQSRT, 21, 437 (1982).; /// - [2] [R.J. Wells ""Rapid Approximation to the Voigt/Faddeeva Function and its Derivatives"" JQSRT 62 (1999), pp 29-48.](http://www-atm.physics.ox.ac.uk/user/wells/voigt.html)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:671,adapt,adapted,671,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['adapt'],['adapted']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Compute multiple values of Power distribution.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPowerSum.cxx:113,Power,Power,113,roofit/roofit/src/RooPowerSum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPowerSum.cxx,1,['Power'],['Power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Compute the area inside this TCutG; /// The algorithm uses Stoke's theorem over the border of the closed polygon.; /// Just as a reminder: Stoke's theorem reduces a surface integral; /// to a line integral over the border of the surface integral.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCutG.cxx:241,reduce,reduces,241,graf2d/graf/src/TCutG.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCutG.cxx,1,['reduce'],['reduces']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Compute the center x,y of this TCutG; /// The algorithm uses Stoke's theorem over the border of the closed polygon.; /// Just as a reminder: Stoke's theorem reduces a surface integral; /// to a line integral over the border of the surface integral.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCutG.cxx:243,reduce,reduces,243,graf2d/graf/src/TCutG.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCutG.cxx,1,['reduce'],['reduces']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Construct N-dimensional kernel estimation p.d.f. in observables 'varList'; /// from dataset 'data'. Options can be; ///; /// - 'a' = Use adaptive kernels (width varies with local event density); /// - 'm' = Mirror data points over observable boundaries. Improves modeling; /// behavior at edges for distributions that are not close to zero; /// at edge; /// - 'd' = Debug flag; /// - 'v' = Verbose flag; ///; /// The parameter rho (default = 1) provides an overall scale factor that can; /// be applied to the bandwidth calculated for each kernel. The nSigma parameter; /// determines the size of the box that is used to search for contributing kernels; /// around a given point in observable space. The nSigma parameters is used; /// in case of non-adaptive bandwidths and for the 1st non-adaptive pass for; /// the calculation of adaptive keys p.d.f.s.; ///; /// The optional weight arguments allows to specify an observable or function; /// expression in observables that specifies the weight of each event.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:223,adapt,adaptive,223,roofit/roofit/src/RooNDKeysPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx,4,['adapt'],['adaptive']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Construct a new RooBinSamplingPdf.; /// \param[in] name A name to identify this object.; /// \param[in] title Title (for e.g. plotting); /// \param[in] observable Observable to integrate over (the one that is binned).; /// \param[in] inputPdf A PDF whose bins should be sampled with higher precision.; /// \param[in] epsilon Relative precision for the integrator, which is used to sample the bins.; /// Note that ROOT's default is to use an adaptive integrator, which in its first iteration usually reaches; /// relative precision of 1.E-4 or better. Therefore, asking for lower precision rarely has an effect.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:527,adapt,adaptive,527,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['adapt'],['adaptive']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Constructor allocate.; ///; /// Note: This function should be called only from the constructor; /// since it does not delete previously existing arrays.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphErrors.cxx:98,allocate,allocate,98,hist/hist/src/TGraphErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphErrors.cxx,1,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Constructor allocating the memory buffer.; ///; /// \param size: size of the buffer to be allocated. A value of -1 means that; /// no allocation should happen, leaving fBuffer and fSize at 0.; ///; /// \param previous: previous TMemBlock, used to set up the linked list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMemFile.cxx:176,allocate,allocated,176,io/io/src/TMemFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMemFile.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Constructor for a palette with numPoints anchor points.; /// It allocates the memory but does not set any colors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TAttImage.cxx:150,allocate,allocates,150,graf2d/graf/src/TAttImage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TAttImage.cxx,1,['allocate'],['allocates']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of a data set from (part of) an existing data; /// set. The dimensions of the data set are defined by the 'vars'; /// RooArgSet, which can be identical to 'dset' dimensions, or a; /// subset thereof. The 'cutVar' formula variable is used to select; /// the subset of data points to be copied. For subsets without; /// selection on the data points, or involving cuts operating; /// exclusively and directly on the data set dimensions, the; /// equivalent constructor with a string based cut expression is; /// recommended.; ///; /// For most uses the RooAbsData::reduce() wrapper function, which; /// uses this constructor, is the most convenient way to create a; /// subset of an existing data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:660,reduce,reduce,660,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,1,['reduce'],['reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of a data set from (part of) an existing data; /// set. The dimensions of the data set are defined by the 'vars'; /// RooArgSet, which can be identical to 'dset' dimensions, or a; /// subset thereof. The 'cuts' string is an optional RooFormula; /// expression and can be used to select the subset of the data; /// points in 'dset' to be copied. The cut expression can refer to; /// any variable in the source dataset. For cuts involving variables; /// other than those contained in the source data set, such as; /// intermediate formula objects, use the equivalent constructor; /// accepting RooFormulaVar reference as cut specification.; ///; /// For most uses the RooAbsData::reduce() wrapper function, which; /// uses this constructor, is the most convenient way to create a; /// subset of an existing data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:776,reduce,reduce,776,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,1,['reduce'],['reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of matrix applying a specific operation to two prototypes.; /// Example: TMatrixT<Element> a(10,12), b(12,5); ...; TMatrixT<Element> c(a, TMatrixT::kMult, b);; /// Supported operations are: kMult (a*b), kTransposeMult (a'*b), kInvMult (a^(-1)*b); /// Whenever kInvMult is invoked and b is not squared, additional memory is allocated for a^(-1)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixT.cxx:421,allocate,allocated,421,math/matrix/src/TMatrixT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixT.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Constructor of matrix applying a specific operation to two prototypes.; /// Example: TMatrixT<Element> a(10,12), b(12,5); ...; TMatrixT<Element> c(a, TMatrixT::kMult, b);; /// Supported operations are: kMult (a*b), kTransposeMult (a'*b), kInvMult (a^(-1)*b);; /// Whenever kInvMult is invoked and b is not squared, additional memory is allocated for a^(-1)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixT.cxx:422,allocate,allocated,422,math/matrix/src/TMatrixT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixT.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Constructor with a `TF1` to map axis values.; ///; /// \note The function `func` (with name `funcname`) is not defined in the user's; /// coordinate space, but in the new TGaxis space. If `x` is the original axis,; /// `w` the new axis, and `w = f(x)` (for example, `f` is a calibration function; /// converting ADC channels `x` to energy `w`), then `func` must be supplied as; /// `f^{-1}(w)`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx:418,energy,energy,418,graf2d/graf/src/TGaxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx,1,['energy'],['energy']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Constructor. Allocates the array with a size given by level.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:99,Allocate,Allocates,99,geom/geom/src/TGeoBranchArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx,1,['Allocate'],['Allocates']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Convert map by label to map by index for more efficient internal use",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCompositeDataStore.cxx:132,efficient,efficient,132,roofit/roofitcore/src/RooCompositeDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCompositeDataStore.cxx,2,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Count allocated memory, increase member counters, find child nodes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/src/TStructViewer.cxx:92,allocate,allocated,92,graf3d/gviz3d/src/TStructViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/src/TStructViewer.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create a THashList object. Capacity is the initial hashtable capacity; /// (i.e. number of slots), by default kInitHashTableCapacity = 17, and; /// rehash is the value at which a rehash will be triggered. I.e. when the; /// average size of the linked lists at a slot becomes longer than rehash; /// then the hashtable will be resized and refilled to reduce the collision; /// rate to about 1. The higher the collision rate, i.e. the longer the; /// linked lists, the longer lookup will take. If rehash=0 the table will; /// NOT automatically be rehashed. Use Rehash() for manual rehashing.; ///; /// WARNING !!!; /// If the name of an object in the HashList is modified, The hashlist; /// must be Rehashed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:436,reduce,reduce,436,core/cont/src/THashList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx,1,['reduce'],['reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create a THashTable object. Capacity is the initial hashtable capacity; /// (i.e. number of slots), by default kInitHashTableCapacity = 17, and; /// rehashlevel is the value at which a rehash will be triggered. I.e. when; /// the average size of the linked lists at a slot becomes longer than; /// rehashlevel then the hashtable will be resized and refilled to reduce; /// the collision rate to about 1. The higher the collision rate, i.e. the; /// longer the linked lists, the longer lookup will take. If rehashlevel=0; /// the table will NOT automatically be rehashed. Use Rehash() for manual; /// rehashing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:447,reduce,reduce,447,core/cont/src/THashTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx,1,['reduce'],['reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create a TKey object of specified size.; ///; /// If externFile!=0, key will be allocated in specified file, otherwise file; /// of mother directory will be used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TKey.cxx:166,allocate,allocated,166,io/io/src/TKey.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TKey.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create a crystal ball shape with symmetric Gaussian core and asymmetric tails (just like `RooDSCBShape`).; ///; /// \param name Name that identifies the PDF in computations.; /// \param title Title for plotting.; /// \param x The variable of the PDF.; /// \param x0 Location parameter of the Gaussian component.; /// \param sigmaLR Width parameter of the Gaussian component.; /// \param alphaL Location of transition to a power law on the left, in standard deviations away from the mean.; /// \param nL Exponent of power-law tail on the left.; /// \param alphaR Location of transition to a power law on the right, in standard deviations away from the mean.; /// \param nR Exponent of power-law tail on the right.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:508,power,power,508,roofit/roofit/src/RooCrystalBall.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx,4,['power'],"['power', 'power-law']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create a crystal ball shape with symmetric Gaussian core and only a tail on; /// one side (just like `RooCBShape`) or two symmetric tails (like `RooSDSCBShape`).; ///; /// \param name Name that identifies the PDF in computations.; /// \param title Title for plotting.; /// \param x The variable of the PDF.; /// \param x0 Location parameter of the Gaussian component.; /// \param sigmaLR Width parameter of the Gaussian component.; /// \param alpha Location of transition to a power law, in standard deviations away from the mean.; /// \param n Exponent of power-law tail.; /// \param doubleSided Whether the tail is only on one side or on both sides",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:563,power,power,563,roofit/roofit/src/RooCrystalBall.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx,2,['power'],"['power', 'power-law']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create a dithered version of the color map and lightness images for; /// display modes with reduced number of colors. The Floyd-Steinberg error; /// diffusion dithering algorithm is used.; /// This routine is called in PseudoColor modes only.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorDialog.cxx:178,reduce,reduced,178,gui/gui/src/TGColorDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorDialog.cxx,1,['reduce'],['reduced']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create a file descriptor event handler. If mask=kRead then we; /// want to monitor the file for read readiness, if mask=kWrite; /// then we monitor the file for write readiness, if mask=kRead|kWrite; /// then we monitor both read and write readiness.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSysEvtHandler.cxx:161,monitor,monitor,161,core/base/src/TSysEvtHandler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TSysEvtHandler.cxx,3,['monitor'],['monitor']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create a global function invocation environment base on a TFunction object.; /// To execute the function call TMethodCall::Execute(...).; /// This two step method is much more efficient than calling for; /// every invocation TInterpreter::Execute(...).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:262,efficient,efficient,262,core/meta/src/TMethodCall.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx,1,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create a global function invocation environment. The parameter; /// string has the form: ""\""aap\"", 3, 4,35"". To execute the; /// function call TMethodCall::Execute(...).; /// This two step method is much more efficient than calling for; /// every invocation TInterpreter::Execute(...).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:295,efficient,efficient,295,core/meta/src/TMethodCall.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx,1,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create a method invocation environment for a specific class, method and; /// parameters. The parameter string has the form: ""\""aap\"", 3, 4.35"".; /// To execute the method call TMethodCall::Execute(object,...).; /// This two step method is much more efficient than calling for; /// every invocation TInterpreter::Execute(...).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:335,efficient,efficient,335,core/meta/src/TMethodCall.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx,1,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create a monitor object. If mainloop is true the monitoring will be; /// done in the main event loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx:95,monitor,monitor,95,net/net/src/TMonitor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx,2,['monitor'],"['monitor', 'monitoring']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create a new TTree BranchElement.; ///; /// ## WARNING about this new function; ///; /// This function is designed to replace the internal; /// implementation of the old TTree::Branch (whose implementation; /// has been moved to BranchOld).; ///; /// NOTE: The 'Bronch' method supports only one possible calls; /// signature (where the object type has to be specified; /// explicitly and the address must be the address of a pointer).; /// For more flexibility use 'Branch'. Use Bronch only in (rare); /// cases (likely to be legacy cases) where both the new and old; /// implementation of Branch needs to be used at the same time.; ///; /// This function is far more powerful than the old Branch; /// function. It supports the full C++, including STL and has; /// the same behaviour in split or non-split mode. classname does; /// not have to derive from TObject. The function is based on; /// the new TStreamerInfo.; ///; /// Build a TBranchElement for an object of class classname.; ///; /// addr is the address of a pointer to an object of class; /// classname. The class dictionary must be available (ClassDef; /// in class header).; ///; /// Note: See the comments in TBranchElement::SetAddress() for a more; /// detailed discussion of the meaning of the addr parameter.; ///; /// This option requires access to the library where the; /// corresponding class is defined. Accessing one single data; /// member in the object implies reading the full object.; ///; /// By default the branch buffers are stored in the same file as the Tree.; /// use TBranch::SetFile to specify a different file; ///; /// IMPORTANT NOTE about branch names:; ///; /// And in general, in case two or more master branches contain subbranches; /// with identical names, one must add a ""."" (dot) character at the end; /// of the master branch name. This will force the name of the subbranches; /// to be of the form `master.subbranch` ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:754,power,powerful,754,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['power'],['powerful']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create a new TTree BranchObject.; ///; /// Build a TBranchObject for an object of class classname.; /// addobj is the address of a pointer to an object of class classname.; /// IMPORTANT: classname must derive from TObject.; /// The class dictionary must be available (ClassDef in class header).; ///; /// This option requires access to the library where the corresponding class; /// is defined. Accessing one single data member in the object implies; /// reading the full object.; /// See the next Branch constructor for a more efficient storage; /// in case the entry consists of arrays of identical objects.; ///; /// By default the branch buffers are stored in the same file as the Tree.; /// use TBranch::SetFile to specify a different file; ///; /// IMPORTANT NOTE about branch names:; ///; /// And in general, in case two or more master branches contain subbranches; /// with identical names, one must add a ""."" (dot) character at the end; /// of the master branch name. This will force the name of the subbranches; /// to be of the form `master.subbranch` instead of simply `subbranch`.; /// This situation happens when the top level object; /// has two or more members referencing the same class.; /// For example, if a Tree has two branches B1 and B2 corresponding; /// to objects of the same class MyClass, one can do:; /// ~~~ {.cpp}; /// tree.Branch(""B1."",""MyClass"",&b1,8000,1);; /// tree.Branch(""B2."",""MyClass"",&b2,8000,1);; /// ~~~; /// if MyClass has 3 members a,b,c, the two instructions above will generate; /// subbranches called B1.a, B1.b ,B1.c, B2.a, B2.b, B2.c; ///; /// bufsize is the buffer size in bytes for this branch; /// The default value is 32000 bytes and should be ok for most cases.; /// You can specify a larger value (e.g. 256000) if your Tree is not split; /// and each entry is large (Megabytes); /// A small value for bufsize is optimum if you intend to access; /// the entrie",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:615,efficient,efficient,615,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create a power law in the variable `x`.; /// \param[in] name Name of the PDF; /// \param[in] title Title for plotting the PDF; /// \param[in] x The variable of the polynomial; /// \param[in] coefList The coefficients \f$ a_i \f$; /// \param[in] expList The exponentials \f$ b_i \f$; /// \f[; /// \sum_{i=0}^{n} a_{i} * x^{b_{i}}; /// \f]; ///; /// This means that; /// \code{.cpp}; /// RooPowerSum powl(""pow"", ""pow"", x, RooArgList(a1, a2), RooArgList(b1,b2)); /// \endcode; /// computes; /// \f[; /// \mathrm{pol}(x) = a1 * x^b1 + a2 * x^b2; /// \f]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPowerSum.cxx:95,power,power,95,roofit/roofit/src/RooPowerSum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooPowerSum.cxx,1,['power'],['power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create a reduced copy of this dataset. The caller takes ownership of the returned dataset; ///; /// The following optional named arguments are accepted; /// <table>; /// <tr><td> `SelectVars(const RooArgSet& vars)` <td> Only retain the listed observables in the output dataset; /// <tr><td> `Cut(const char* expression)` <td> Only retain event surviving the given cut expression.; /// <tr><td> `Cut(const RooFormulaVar& expr)` <td> Only retain event surviving the given cut formula.; /// <tr><td> `CutRange(const char* name)` <td> Only retain events inside range with given name. Multiple CutRange; /// arguments may be given to select multiple ranges.; /// Note that this will also consider the variables that are not selected by SelectVars().; /// <tr><td> `EventRange(int lo, int hi)` <td> Only retain events with given sequential event numbers; /// <tr><td> `Name(const char* name)` <td> Give specified name to output dataset; /// <tr><td> `Title(const char* name)` <td> Give specified title to output dataset; /// </table>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:95,reduce,reduced,95,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['reduce'],['reduced']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create a string to hold the given URI. Memory to hold the string is; /// allocated with new[] and must be freed by the calling function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlUri.cxx:159,allocate,allocated,159,gui/guihtml/src/TGHtmlUri.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlUri.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create a subset of the data set by applying the given cut on the data points.; /// The 'cutVar' formula variable is used to select the subset of data points to be; /// retained in the reduced data collection.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:270,reduce,reduced,270,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['reduce'],['reduced']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create a subset of the data set by applying the given cut on the data points.; /// The cut expression can refer to any variable in the data set. For cuts involving; /// other variables, such as intermediate formula objects, use the equivalent; /// reduce method specifying the as a RooFormulVar reference.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:334,reduce,reduce,334,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['reduce'],['reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create a subset of the data set by applying the given cut on the data points; /// and reducing the dimensions to the specified set.; ///; /// The 'cutVar' formula variable is used to select the subset of data points to be; /// retained in the reduced data collection.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:329,reduce,reduced,329,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['reduce'],['reduced']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create a subset of the data set by applying the given cut on the data points; /// and reducing the dimensions to the specified set.; ///; /// The cut expression can refer to any variable in the data set. For cuts involving; /// other variables, such as intermediate formula objects, use the equivalent; /// reduce method specifying the as a RooFormulVar reference.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:393,reduce,reduce,393,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['reduce'],['reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create an Ntuple.; ///; /// The parameter varlist describes the list of the ntuple variables; /// separated by a colon:; ///; /// Example: `x:y:z:energy`; ///; /// For each variable in the list a separate branch is created.; ///; /// NOTE:; /// - Use TTree to create branches with variables of different data types.; /// - Use TTree when the number of branches is large (> 100).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TNtuple.cxx:232,energy,energy,232,tree/tree/src/TNtuple.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TNtuple.cxx,2,['energy'],['energy']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create an XImage structure and allocate memory for it",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/Rotated.cxx:117,allocate,allocate,117,graf2d/x11/src/Rotated.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/Rotated.cxx,1,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create an interface adaptor f(vars) that binds us to the specified variables; /// (in arbitrary order). For example, calling bindVars({x1,x3}) on an object; /// F(x1,x2,x3,x4) returns an object f(x1,x3) that is evaluated using the; /// current values of x2 and x4. The caller takes ownership of the returned adaptor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:106,adapt,adaptor,106,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['adapt'],['adaptor']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create simple input dialog.; ///; /// It is important to know that the case where the constructor in; /// which all the variables are initialized to their default values is; /// only used for the TBrowser to inspect on the classes. For normal; /// use the only variable that should be free is options.; ///; /// Variables prompt, defval are the content of the input dialog while; /// retstr has to be initialized to a char[256]. In case these are not; /// initialized, they will show default values while retstr will be; /// automatically allocated by the dialog. However this will make; /// impossible to retrieve the value entered by the dialog.; ///; /// To see TGInputDialog in use see:; /// $ROOTSYS/tutorials/testInputDialog.cxx",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGInputDialog.cxx:625,allocate,allocated,625,gui/gui/src/TGInputDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGInputDialog.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Create tracking medium; ///; /// - numed tracking medium number assigned; /// - name tracking medium name; /// - nmat material number; /// - isvol sensitive volume flag; /// - ifield magnetic field; /// - fieldm max. field value (kilogauss); /// - tmaxfd max. angle due to field (deg/step); /// - stemax max. step allowed; /// - deemax max. fraction of energy lost in a step; /// - epsil tracking precision (cm); /// - stmin min. step due to continuous processes (cm); ///; /// - ifield = 0 if no magnetic field; ifield = -1 if user decision in guswim;; /// - ifield = 1 if tracking performed with g3rkuta; ifield = 2 if tracking; /// performed with g3helix; ifield = 3 if tracking performed with g3helx3.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBuilder.cxx:439,energy,energy,439,geom/geom/src/TGeoBuilder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBuilder.cxx,2,['energy'],['energy']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// CreateWidget.; /// Static function called prior to widget construction,; /// I've extracted this code from ctors to make WIN32/X11; /// separation simpler and because of gInterpreter usage.; /// new, TGLContext can throw; /// std::bad_alloc and std::runtime_error. Before try block, the only; /// resource allocated is pointed by fWindowIndex (InitWindow cannot throw).; /// In try block (and after successful constraction); /// resources are controlled by std::auto_ptrs and dtor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLWidget.cxx:392,allocate,allocated,392,graf3d/gl/src/TGLWidget.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLWidget.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Creates the fully parametrized crystal ball shape with asymmetric Gaussian core and asymmetric tails.; ///; /// \param name Name that identifies the PDF in computations.; /// \param title Title for plotting.; /// \param x The variable of the PDF.; /// \param x0 Location parameter of the Gaussian component.; /// \param sigmaL Width parameter of the left side of the Gaussian component.; /// \param sigmaR Width parameter of the right side of the Gaussian component.; /// \param alphaL Location of transition to a power law on the left, in standard deviations away from the mean.; /// \param nL Exponent of power-law tail on the left.; /// \param alphaR Location of transition to a power law on the right, in standard deviations away from the mean.; /// \param nR Exponent of power-law tail on the right.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:600,power,power,600,roofit/roofit/src/RooCrystalBall.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx,4,['power'],"['power', 'power-law']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Creates the initial set of nuisance parameter points. It also refills the; /// set with new parameter points if called repeatedly. This helps with; /// adaptive sampling as the required number of nuisance parameter points; /// might increase during the run.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ToyMCSampler.cxx:238,adapt,adaptive,238,roofit/roostats/src/ToyMCSampler.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ToyMCSampler.cxx,1,['adapt'],['adaptive']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// De-allocate block of memory, that was allocated via TStorage::Alloc().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStorage.cxx:89,allocate,allocate,89,core/base/src/TStorage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStorage.cxx,2,['allocate'],"['allocate', 'allocated']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Define new text attributes for the label value ""labValue"". It allows to do a; /// fine tuning of the labels. All the attributes can be changed, even the; /// label text itself.; ///; /// \param[in] labValue Axis value to be changed; /// \param[in] labAngle New angle value; /// \param[in] labSize New size (0 erase the label); /// \param[in] labAlign New alignment value; /// \param[in] labColor New label color; /// \param[in] labFont New label font; /// \param[in] labText New label text; ///; /// #### Example:; ///; /// Begin_Macro(source); /// {; /// auto c = new TCanvas(""c1"",""Examples of TGaxis"",900,100);; /// c->Range(-6,-0.1,6,0.1);; /// auto *axis = new TGaxis(-5.5,0.,5.5,0.,0.0,100,510,""S"");; /// axis->SetName(""axis1"");; /// axis->SetTitle(""Axis Title"");; /// axis->SetTitleSize(0.2);; /// axis->SetLabelSize(0.2);; /// axis->SetTickSize(0.15);; /// axis->SetTitleColor(kBlue);; /// axis->SetTitleFont(42);; /// axis->ChangeLabelByValue(0., -1, -1, -1, kRed);; /// axis->ChangeLabelByValue(20., -1, 0);; /// axis->ChangeLabelByValue(40., 30.);; /// axis->ChangeLabelByValue(50., -1, -1, -1, kBlue, -1, ""blue for 50."");; /// axis->ChangeLabelByValue(90., -1, -1, -1, kGreen, -1, ""green for 90."");; /// axis->Draw();; /// }; /// End_Macro; ///; /// #### Notes:; ///; /// - If an attribute should not be changed just give the value ""-1"".; /// - To erase a label set labSize to 0; /// - If labText is not specified or is an empty string, the text label is not changed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx:1279,green,green,1279,graf2d/graf/src/TGaxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx,1,['green'],['green']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Define the color model used by TPostScript and TPDF (RGB or CMYK).; /// CMY and CMYK models are subtractive color models unlike RGB which is; /// additive. They are mainly used for printing purposes. CMY means Cyan Magenta; /// Yellow. To convert RGB to CMY it is enough to do: C=1-R, M=1-G and Y=1-B.; /// CMYK has one more component K (black). The conversion from RGB to CMYK is:; /// ~~~ {.cpp}; /// Double_t Black = TMath::Min(TMath::Min(1-Red,1-Green),1-Blue);; /// Double_t Cyan = (1-Red-Black)/(1-Black);; /// Double_t Magenta = (1-Green-Black)/(1-Black);; /// Double_t Yellow = (1-Blue-Black)/(1-Black);; /// ~~~; /// CMYK adds the black component which allows better quality for black; /// printing. PostScript and PDF support the CMYK model.; ///; /// - c = 0 means TPostScript and TPDF will use RGB color model (default); /// - c = 1 means TPostScript and TPDF will use CMYK color model",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStyle.cxx:536,Green,Green,536,core/base/src/TStyle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStyle.cxx,2,['Green'],"['Green', 'Green-Black']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Delete an array of families allocated GetFontFamilies() method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFont.cxx:114,allocate,allocated,114,gui/gui/src/TGFont.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFont.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Delete any object we may have allocated on a previous call to SetAddress.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:116,allocate,allocated,116,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Delete this object. Typically called as a command via the interpreter.; /// Normally use ""delete"" operator when object has been allocated on the heap.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:214,allocate,allocated,214,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Do the initialization that can only be done after the CINT dictionary has; /// been fully populated and can not be delayed efficiently.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:209,efficient,efficiently,209,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['efficient'],['efficiently']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Draw a Cell Array; ///; /// Drawing a PostScript Cell Array is in fact done thanks to three; /// procedures: CellArrayBegin, CellArrayFill, and CellArrayEnd.; ///; /// - CellArrayBegin: Initiate the Cell Array by writing the necessary; /// PostScript procedures and the initial values of the; /// required parameters. The input parameters are:; /// - W: number of boxes along the width.; /// - H: number of boxes along the height; /// - x1,x2,y1,y2: First box coordinates.; /// - CellArrayFill: Is called for each box of the Cell Array. The first; /// box is the top left one and the last box is the; /// bottom right one. The input parameters are the Red,; /// Green, and Blue components of the box colour. These; /// Levels are between 0 and 255.; /// - CellArrayEnd: Finishes the Cell Array.; ///; /// PostScript cannot handle arrays larger than 65535. So the Cell Array; /// is drawn in several pieces.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TPostScript.cxx:748,Green,Green,748,graf2d/postscript/src/TPostScript.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TPostScript.cxx,1,['Green'],['Green']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Draw rotate manipulator - axis rings drawn from attached; /// physical center, in plane defined by axis as normal, in red(X),; /// green(Y) and blue(Z), with white center sphere. If selected; /// widget (mouse over) this is drawn in active colour (yellow).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLRotateManip.cxx:217,green,green,217,graf3d/gl/src/TGLRotateManip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLRotateManip.cxx,1,['green'],['green']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Draw scale manipulator - tubes with box heads, in local axes of; /// attached shape, in red(X), green(Y) and blue(Z), with white center sphere.; /// If selected widget (mouse over) this is drawn in active colour (yellow).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScaleManip.cxx:182,green,green,182,graf3d/gl/src/TGLScaleManip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLScaleManip.cxx,1,['green'],['green']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Draw the overlap. One daughter will be blue, the other green,; /// extruding points red.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoOverlap.cxx:141,green,green,141,geom/geompainter/src/TGeoOverlap.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geompainter/src/TGeoOverlap.cxx,1,['green'],['green']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Draw translation manipulator - tubes with arrow heads, in local axes of; /// attached shape, in red(X), green(Y) and blue(Z), with white center sphere.; /// If selected widget (mouse over) this is drawn in active colour (yellow).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLTransManip.cxx:190,green,green,190,graf3d/gl/src/TGLTransManip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLTransManip.cxx,1,['green'],['green']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Dump the info of this TXTRU shape; /// Option:; /// - ""xy"" to get x-y information; /// - ""z"" to get z information; /// - ""alloc"" to show full allocated arrays (not just used values)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TXTRU.cxx:228,allocate,allocated,228,graf3d/g3d/src/TXTRU.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TXTRU.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Efficiently sets element (rown,coln) equal to val; /// Index bound checks can be deactivated by defining NDEBUG",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/inc/TMatrixT.h:86,Efficient,Efficiently,86,math/matrix/inc/TMatrixT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/inc/TMatrixT.h,2,['Efficient'],['Efficiently']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Elementary charge in \f$ C \f$ .",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TMath.h:97,charge,charge,97,math/mathcore/inc/TMath.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TMath.h,1,['charge'],['charge']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Elementary charge uncertainty.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TMath.h:97,charge,charge,97,math/mathcore/inc/TMath.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TMath.h,1,['charge'],['charge']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Estimates the error rate with the current set of parameters.; /// It calculates the area under the bkg rejection vs signal efficiency curve.; /// The value returned is 1-area.; /// This works but is less efficient than calculating the Risk using RiskPerf().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:290,efficient,efficient,290,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,1,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Expand or shrink the array to n elements and create the clone; /// objects by calling their default ctor. If n is less than the current size; /// the array is shrunk and the allocated space is freed.; /// This routine is typically used to create a clonesarray into which; /// one can directly copy object data without going via the; /// ""new (arr[i]) MyObj()"" (i.e. the vtbl is already set correctly).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:260,allocate,allocated,260,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Expand or shrink the array to n elements and create the clone; /// objects by calling their default ctor. If n is less than the current size; /// the array is shrunk but the allocated space is _not_ freed.; /// This routine is typically used to create a clonesarray into which; /// one can directly copy object data without going via the; /// ""new (arr[i]) MyObj()"" (i.e. the vtbl is already set correctly).; /// This is a simplified version of ExpandCreate used in the TTree mechanism.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:260,allocate,allocated,260,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Extract from opt information about output handling settings.; /// The understood keywords are:; /// of=`<file>`, outfile=`<file>` output file location; /// ds=`<dsname>`, dataset=`<dsname>` dataset name ('of' and 'ds' are; /// mutually exclusive,execution stops; /// if both are found); /// sft[=`<opt>`], savetofile[=`<opt>`] control saving to file; ///; /// For 'mvf', the `<opt>` integer has the following meaning:; /// `<opt>` = `<how>`*10 + `<force>`; /// `<force>` = 0 save to file if memory threshold is reached; /// (the memory threshold is set by the cluster; /// admin); in case an output file is defined, the; /// files are merged at the end;; /// 1 save results to file.; /// `<how>` = 0 save at the end of the query; /// 1 save results after each packet (to reduce the; /// loss in case of crash).; ///; /// Setting 'ds' automatically sets 'mvf=1'; it is still possible to set 'mvf=11'; /// to save results after each packet.; ///; /// The separator from the next option is either a ' ' or a ';'; ///; /// All recognized settings are removed from the input string opt.; /// If action == 0, set up the output file accordingly, if action == 1 clean related; /// output file settings.; /// If the final target file is local then 'target' is set to the final local path; /// when action == 0 and used to retrieve the file with TFile::Cp when action == 1.; ///; /// Output file settings are in the form; ///; /// `<previous_option>`of=name `<next_option>`; /// `<previous_option>`outfile=name,...;`<next_option>`; ///; /// The separator from the next option is either a ' ' or a ';'; /// Called interanally by TProof::Process.; ///; /// Returns 0 on success, -1 on error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:857,reduce,reduce,857,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['reduce'],['reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Extracts field value from statement.; /// First allocates 128 bytes for buffer.; /// If there is not enouth space, bigger buffer is allocated and; /// request is repeated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCRow.cxx:134,allocate,allocates,134,sql/odbc/src/TODBCRow.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCRow.cxx,2,['allocate'],"['allocated', 'allocates']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Fills in certain data into newly allocated cell",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoamCell.cxx:119,allocate,allocated,119,math/foam/src/TFoamCell.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoamCell.cxx,2,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Fills the ROCIntegral vs Itree from the testSample for the monitoring plots; /// during the training .. but using the testing events",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:145,monitor,monitoring,145,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['monitor'],['monitoring']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Find an object in this collection using the object's IsEqual(); /// member function. Requires a sequential scan till the object has; /// been found. Returns 0 if object is not found.; /// Typically this function is overridden by a more efficient version; /// in concrete collection classes (e.g. THashTable).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:322,efficient,efficient,322,core/cont/src/TCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx,2,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Find and allocate a color cell according to the color values specified; /// in the ColorStruct_t. If no cell could be allocated it returns kFALSE,; /// otherwise kTRUE.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:95,allocate,allocate,95,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,4,['allocate'],"['allocate', 'allocated']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Free all memory allocated by this object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2D.cxx:102,allocate,allocated,102,hist/hist/src/TGraph2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph2D.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Free allocated buffers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCStatement.cxx:91,allocate,allocated,91,sql/odbc/src/TODBCStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/odbc/src/TODBCStatement.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Free allocated colors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorDialog.cxx:91,allocate,allocated,91,gui/gui/src/TGColorDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorDialog.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Free space allocated for encryption keys",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:97,allocate,allocated,97,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Freeing of allocated memory",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx:97,allocate,allocated,97,gui/recorder/src/TRecorder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// General Sparse Matrix Multiplication (SpMM). This code is an adaptation of; /// Eigen SpMM implementation. This product is conservative, meaning that it; /// preserves the symbolic non zeros. Given lhs, rhs, it computes this = rhs * lhs.; /// Note, result matrix is only allocated when constr=1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx:147,adapt,adaptation,147,math/matrix/src/TMatrixTSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx,2,"['adapt', 'allocate']","['adaptation', 'allocated']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// General matrix addition. Replace this matrix with C such that C = A + B.; /// Note, matrix C is allocated for constr=1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx:182,allocate,allocated,182,math/matrix/src/TMatrixTSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx,2,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// General matrix multiplication. Replace this matrix with C such that C = A * B'.; /// Note, matrix C is allocated for constr=1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx:189,allocate,allocated,189,math/matrix/src/TMatrixTSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx,2,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// General matrix subtraction. Replace this matrix with C such that C = A - B.; /// Note, matrix C is allocated for constr=1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx:185,allocate,allocated,185,math/matrix/src/TMatrixTSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx,3,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Generate a random final state.; /// The function returns the un-normalized weight of the current event.; /// The TLorentzVector of each decay product can be obtained using GetDecay(n).; ///; /// Note that Momentum, Energy units are Gev/C, GeV",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TGenPhaseSpace.cxx:301,Energy,Energy,301,math/physics/src/TGenPhaseSpace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TGenPhaseSpace.cxx,1,['Energy'],['Energy']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Generate the file `<classname>MDF.cxx` which contains the; /// implementation of the method:; ///; /// `Double_t <classname>::%MDF(Double_t *x)`; ///; /// which does the same as TMultiDimFit::Eval. Please refer to this; /// method.; ///; /// Further, the public static members:; /// \code{.cpp}; /// Int_t <classname>::fgNVariables; /// Int_t <classname>::fgNCoefficients; /// Double_t <classname>::fgDMean; /// Double_t <classname>::fgXMean[] //[fgNVariables]; /// Double_t <classname>::fgXMin[] //[fgNVariables]; /// Double_t <classname>::fgXMax[] //[fgNVariables]; /// Double_t <classname>::fgCoefficient[] //[fgNCoeffficents]; /// Int_t <classname>::fgPower[] //[fgNCoeffficents*fgNVariables]; /// \endcode; ///; /// are initialized, and assumed to exist. The class declaration is; /// assumed to be in `<classname>.h` and assumed to be provided by the; /// user.; ///; /// \see TMultiDimFit::MakeRealCode for a list of options; ///; /// The minimal class definition is:; /// \code{.cpp}; /// class <classname> {; /// public:; /// Int_t <classname>::fgNVariables; // Number of variables; /// Int_t <classname>::fgNCoefficients; // Number of terms; /// Double_t <classname>::fgDMean; // Mean from training sample; /// Double_t <classname>::fgXMean[]; // Mean from training sample; /// Double_t <classname>::fgXMin[]; // Min from training sample; /// Double_t <classname>::fgXMax[]; // Max from training sample; /// Double_t <classname>::fgCoefficient[]; // Coefficients; /// Int_t <classname>::fgPower[]; // Function powers; ///; /// Double_t Eval(Double_t *x);; /// };; /// \endcode; ///; /// Whether the method `<classname>::%Eval` should be static or not, is; /// up to the user.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:1606,power,powers,1606,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['power'],['powers']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Get RGB values for orgcolors, add percent neutral to the RGB and; /// allocate fNewColors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx:156,allocate,allocate,156,graf2d/x11/src/TGX11.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx,1,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Get RGB values for orgcolors, add percent neutral to the RGB and; /// allocate new_colors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:156,allocate,allocate,156,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,1,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Get an object at index 'idx' that is guaranteed to have been constructed.; /// It might be either a freshly allocated object or one that had already been; /// allocated (and assumingly used). In the later case, it is the callers; /// responsibility to insure that the object is returned to a known state,; /// usually by calling the Clear method on the TClonesArray.; ///; /// Tests to see if the destructor has been called on the object.; /// If so, or if the object has never been constructed the class constructor is called using; /// New(). If not, return a pointer to the correct memory location.; /// This explicitly to deal with TObject classes that allocate memory; /// which will be reset (but not deallocated) in their Clear(); /// functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:194,allocate,allocated,194,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,3,['allocate'],"['allocate', 'allocated']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Get an object at index 'idx' that is guaranteed to have been constructed.; /// It might be either a freshly allocated object or one that had already been; /// allocated (and assumingly used). In the later case, the function Clear; /// will be called and passed the value of 'clear_options'; ///; /// Tests to see if the destructor has been called on the object.; /// If so, or if the object has never been constructed the class constructor is called using; /// New(). If not, return a pointer to the correct memory location.; /// This explicitly to deal with TObject classes that allocate memory; /// which will be reset (but not deallocated) in their Clear(); /// functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:194,allocate,allocated,194,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,3,['allocate'],"['allocate', 'allocated']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Get list of feedback objects. Connect a slot to this signal; /// to monitor the feedback object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:154,monitor,monitor,154,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['monitor'],['monitor']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Get next packet;; /// A meaningfull difference to TPacketizer is the fact that this; /// packetizer, for each worker, tries to predict whether the worker; /// will finish processing it's local files before the end of the query.; /// If yes, it allocates, to those workers, files from non-slave filenodes; /// or from slaves that are overloaded. The check is done every time a new; /// file needs to be assigned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx:330,allocate,allocates,330,proof/proofplayer/src/TPacketizerAdaptive.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPacketizerAdaptive.cxx,1,['allocate'],['allocates']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Get the bin index for the n dimensional coordinates coord,; /// allocate one if it doesn't exist yet and ""allocate"" is true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx:150,allocate,allocate,150,hist/hist/src/THnSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx,2,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Get the bin index for the n dimensional tuple addressed by ""name"",; /// allocate one if it doesn't exist yet and ""allocate"" is true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx:158,allocate,allocate,158,hist/hist/src/THnSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx,2,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Get the bin index for the n dimensional tuple x,; /// allocate one if it doesn't exist yet and ""allocate"" is true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx:140,allocate,allocate,140,hist/hist/src/THnSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx,2,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Get the processing priority for the group the user belongs too. This; /// priority is a number (0 - 100) determined by a scheduler (third; /// party process) based on some basic priority the group has, e.g.; /// we might want to give users in a specific group (e.g. promptana); /// a higher priority than users in other groups, and on the analysis; /// of historical logging data (i.e. usage of CPU by the group in a; /// previous time slot, as recorded in TPerfStats::WriteQueryLog()).; ///; /// Currently the group priority is obtained by a query in a SQL DB; /// table proofpriority, which has the format:; /// CREATE TABLE proofpriority (; /// id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,; /// group VARCHAR(32) NOT NULL,; /// priority INT; ///)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:207,schedul,scheduler,207,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['schedul'],['scheduler']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// GetN() returns the number of allocated cells if any.; /// GetN() > 0 shows how many cells; /// can be available via GetP() method.; /// GetN() == 0 then GetP() must return 0 as well",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TPoints3DABC.cxx:115,allocate,allocated,115,graf3d/g3d/src/TPoints3DABC.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TPoints3DABC.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Glue function between high-level syntax and low-level factory call to createArg:; /// Process a parsed call to create a pdf named `func`; ///; /// The func arg is interpreted as ClassName::ObjectName and the arglist is passed; /// verbatim to createArg. The received arglist is expected to be fully reduced (i.e.; /// all inline object creations must have been compiled)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:385,reduce,reduced,385,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,1,['reduce'],['reduced']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// If any part of the screen needs to be redrawn, then call this routine; /// with the values of a box (in window coordinates) that needs to be; /// redrawn. This routine will schedule an idle handler to do the redraw.; ///; /// The box coordinates are relative to the clipping window (fCanvas).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx:259,schedul,schedule,259,gui/guihtml/src/TGHtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx,1,['schedul'],['schedule']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// If in active in a monitor set ready state",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:104,monitor,monitor,104,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['monitor'],['monitor']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// If many identical generation requests; /// are needed, e.g. in toy MC studies, it is more efficient to use the prepareMultiGen()/generate(); /// combination than calling the standard generate() multiple times as; /// initialization overhead is only incurred once.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:176,efficient,efficient,176,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Implementation of RooAbsData virtual method that drives the RooAbsData::reduce() methods",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:158,reduce,reduce,158,roofit/roofitcore/src/RooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx,2,['reduce'],['reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Implementation to get information on point of graph at cursor position; /// Adapted from class TH1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:162,Adapt,Adapted,162,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,1,['Adapt'],['Adapted']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Incorporate the content of the received output list 'out' into the final; /// output list fOutput. The latter is created if not existing.; /// This method short cuts 'StoreOutput + MergeOutput' limiting the memory; /// consumption.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:305,consumption,consumption,305,proof/proofplayer/src/TProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx,1,['consumption'],['consumption']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Incorporate the received object 'obj' into the output list fOutput.; /// The latter is created if not existing.; /// This method short cuts 'StoreOutput + MergeOutput' optimizing the memory; /// consumption.; /// Returns -1 in case of error, 1 if the object has been merged into another; /// one (so that its ownership has not been taken and can be deleted), and 0; /// otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:281,consumption,consumption,281,proof/proofplayer/src/TProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx,1,['consumption'],['consumption']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Increment the bin content of the bin enclosing the given coordinates.; ///; /// \param[in] row Coordinates of the bin.; /// \param[in] wgt Increment by this weight.; /// \param[in] sumw2 Optionally, track the sum of squared weights. If a value > 0 or; /// a weight != 1. is passed for the first time, a vector for the squared weights will be allocated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:428,allocate,allocated,428,roofit/roofitcore/src/RooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Initialization procedure: allocate weights array, calculate; /// multipliers needed for N-space to 1-dim array jump table,; /// and fill the internal tree with all bin center coordinates",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:112,allocate,allocate,112,roofit/roofitcore/src/RooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx,1,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Initialize integrator allocate buffers and setup GSL workspace",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:108,allocate,allocate,108,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the function invocation environment. Necessary input; /// information: the function name and the parameter string of; /// the form ""\""aap\"", 3, 4.35"".; ///; /// To execute the method call TMethodCall::Execute(...).; /// This two step method is much more efficient than calling for; /// every invocation TInterpreter::Execute(...).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:351,efficient,efficient,351,core/meta/src/TMethodCall.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx,1,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the function invocation environment. Necessary input; /// information: the function name and the prototype string of; /// the form: ""char*,int,float"".; ///; /// To execute the method call TMethodCall::Execute(...).; /// This two step method is much more efficient than calling for; /// every invocation TInterpreter::Execute(...).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:351,efficient,efficient,351,core/meta/src/TMethodCall.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx,1,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the method invocation environment. Necessary input; /// information: the class, method name and the parameter string; /// of the form ""\""aap\"", 3, 4.35"".; ///; /// To execute the method call TMethodCall::Execute(object,...).; /// This two step method is much more efficient than calling for; /// every invocation TInterpreter::Execute(...).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:361,efficient,efficient,361,core/meta/src/TMethodCall.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx,1,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Initialize the method invocation environment. Necessary input; /// information: the class, method name and the prototype string of; /// the form: ""char*,int,float"".; ///; /// To execute the method call TMethodCall::Execute(object,...).; /// This two step method is much more efficient than calling for; /// every invocation TInterpreter::Execute(...).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx:361,efficient,efficient,361,core/meta/src/TMethodCall.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TMethodCall.cxx,1,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Initializes TRecorderRecording for recording; /// What is allocated here is deleted in destructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx:144,allocate,allocated,144,gui/recorder/src/TRecorder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/src/TRecorder.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Input:; /// - TLorentzVector &P: decay particle (Momentum, Energy units are Gev/C, GeV); /// - Int_t nt: number of decay products; /// - Double_t *mass: array of decay product masses; /// - Option_t *opt: default -> constant cross section; /// ""Fermi"" -> Fermi energy dependence; /// Return value:; /// - kTRUE: the decay is permitted by kinematics; /// - kFALSE: the decay is forbidden by kinematics; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TGenPhaseSpace.cxx:145,Energy,Energy,145,math/physics/src/TGenPhaseSpace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TGenPhaseSpace.cxx,2,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Internal method used by Initialize.; /// It initializes content of the newly allocated active cell.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx:163,allocate,allocated,163,math/foam/src/TFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Make a memory consumption graph for a worker",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressMemoryPlot.cxx:100,consumption,consumption,100,gui/sessionviewer/src/TProofProgressMemoryPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressMemoryPlot.cxx,1,['consumption'],['consumption']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Make a step from current point along the helix and compute new point, direction and angle; /// To reach a plane/ shape boundary, one has to:; /// 1. Compute the safety to the plane/boundary; /// 2. Define / update a helix according local field and particle state (position, direction, charge); /// 3. Compute the magnetic safety (maximum distance for which the field can be considered constant); /// 4. Call TGeoHelix::Step() having as argument the minimum between 1. and 3.; /// 5. Repeat from 1. until the step to be made is small enough.; /// 6. Add to the total step the distance along a straight line from the last point; /// to the plane/shape boundary",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx:371,charge,charge,371,geom/geom/src/TGeoHelix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx,1,['charge'],['charge']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Make an instance of the class which allocates the node array. To be; /// released using ReleaseInstance. If addr is non-zero, the user promised that; /// addr contains at least that many bytes: size_t needed = SizeOf(maxlevel);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:122,allocate,allocates,122,geom/geom/src/TGeoBranchArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx,2,['allocate'],['allocates']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Make self a distinct copy with capacity of at least tot, where tot cannot; /// be smaller than the current length. Preserve previous contents.; /// \warning If tot > MaxSize(), then Fatal() is raised and only MaxSize() elements are allocated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TString.cxx:318,allocate,allocated,318,core/base/src/TString.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TString.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Make sure the block size is a power of two, with a minimum of 32768.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFTP.cxx:116,power,power,116,net/net/src/TFTP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFTP.cxx,1,['power'],['power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Make the expected plot and the bands; /// nsig1 and nsig2 indicates the n-sigma value for the bands; /// if nsig1 = 0 no band is drawn (only expected value); /// if nsig2 > nsig1 (default is nsig1=1 and nsig2=2) the second band is also drawn; /// The first band is drawn in green while the second in yellow; /// THe return result is a TMultiGraph object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterPlot.cxx:360,green,green,360,roofit/roostats/src/HypoTestInverterPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterPlot.cxx,1,['green'],['green']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Matrix determinant det = d1*TMath::Power(2.,d2)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx:121,Power,Power,121,math/matrix/src/TDecompBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx,2,['Power'],['Power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Matrix determinant det = d1*TMath::Power(2.,d2) is square of diagProd; /// of cholesky factor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompChol.cxx:121,Power,Power,121,math/matrix/src/TDecompChol.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompChol.cxx,1,['Power'],['Power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Merge the files. If no output file was specified it will write into; /// the file ""FileMerger.root"" in the working directory. Returns true; /// on success, false in case of error.; /// The type is defined by the bit values in EPartialMergeType:; /// kRegular : normal merge, overwritting the output file; /// kIncremental : merge the input file with the content of the output file (if already exising) (default); /// kResetable : merge only the objects with a MergeAfterReset member function.; /// kNonResetable : merge only the objects without a MergeAfterReset member function.; /// kDelayWrite : delay the TFile write (to reduce the number of write when reusing the file); /// kAll : merge all type of objects (default); /// kAllIncremental : merge incrementally all type of objects.; /// kOnlyListed : merge only the objects specified in fObjectNames list; /// kSkipListed : skip objects specified in fObjectNames list; /// kKeepCompression: keep compression level unchanged for each input; ///; /// If the type is not set to kIncremental, the output file is deleted at the end of this operation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileMerger.cxx:711,reduce,reduce,711,io/io/src/TFileMerger.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileMerger.cxx,1,['reduce'],['reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Monitor progress / convergence aat each interior-point iteration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpSolverBase.cxx:86,Monitor,Monitor,86,math/quadp/src/TQpSolverBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpSolverBase.cxx,1,['Monitor'],['Monitor']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Move to a new position (ix, iy). The move is done in relative coordinates; /// which allows to have short numbers which decrease the size of the file.; /// This function use the full power of the SVG's paths by using the; /// horizontal and vertical move whenever it is possible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TSVG.cxx:269,power,power,269,graf2d/postscript/src/TSVG.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TSVG.cxx,1,['power'],['power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Normal constructor. The 1st and 2nd parameters are the name of the object; /// and its title.; ///; /// The number of points passed at this point is used to allocate the memory.; ///; /// Slices values are given as Double_t.; ///; /// The 4th elements is an array containing, in double precision format,; /// the value of each slice. It is also possible to specify the filled color; /// of each slice. If the color array is not specified the slices are colored; /// using a color sequence in the standard palette.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPie.cxx:243,allocate,allocate,243,graf2d/graf/src/TPie.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPie.cxx,1,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Number of effective entries of the histogram.; ///; /// \f[; /// neff = \frac{(\sum Weights )^2}{(\sum Weight^2 )}; /// \f]; ///; /// In case of an unweighted histogram this number is equivalent to the; /// number of entries of the histogram.; /// For a weighted histogram, this number corresponds to the hypothetical number of unweighted entries; /// a histogram would need to have the same statistical power as this weighted histogram.; /// Note: The underflow/overflow are included if one has set the TH1::StatOverFlows flag; /// and if the statistics has been computed at filling time.; /// If a range is set in the histogram the number is computed from the given range.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:490,power,power,490,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['power'],['power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Override setFCN to use the Adapter to Minuit2 FCN interface; /// To set the address of the minimization function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx:113,Adapt,Adapter,113,hist/hist/src/TBackCompFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx,1,['Adapt'],['Adapter']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// PRIVATE METHOD:; /// Calculate the control parameter from the passed powers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:155,power,powers,155,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['power'],['powers']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// PRIVATE METHOD:; /// Evaluate function with power p at variable value x",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:130,power,power,130,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['power'],['power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Packet event.; /// See WriteQueryLog for the descripition of the structure sent for monitoring; /// when fMonitorPerPacket is kTRUE.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx:170,monitor,monitoring,170,proof/proofplayer/src/TPerfStats.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx,1,['monitor'],['monitoring']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Parse string cname containing color name, like ""green"" or ""#00FF00"".; /// It returns a filled in ColorStruct_t. Returns kFALSE in case parsing; /// failed, kTRUE in case of success. On success, the ColorStruct_t; /// fRed, fGreen and fBlue fields are all filled in and the mask is set; /// for all three colors, but fPixel is not set.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:134,green,green,134,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,2,['green'],['green']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Perform an extensive sampling to find which type of voxelization is; /// most efficient.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVolume.cxx:164,efficient,efficient,164,geom/geom/src/TGeoVolume.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVolume.cxx,1,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Perform the back-transformation from the principal components; /// pc, and return x; /// It's the users responsibility to make sure that both x and pc are; /// of the right size (i.e., memory must be allocated for p)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariablePCATransform.cxx:286,allocate,allocated,286,tmva/tmva/src/VariablePCATransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariablePCATransform.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Point this branch at an object.; ///; /// For a sub-branch, addr is a pointer to the branch object.; ///; /// For a top-level branch the meaning of addr is as follows:; ///; /// If addr is zero, then we allocate a branch object; /// internally and the branch is the owner of the allocated; /// object, not the caller. However the caller may obtain; /// a pointer to the branch object with GetObject().; /// The pointer is reset to zero (nullptr) when the relevant; /// branch object is destroyed.; ///; /// Example:; /// ~~~ {.cpp}; /// branch->SetAddress(0);; /// Event* event = branch->GetObject();; /// ... Do some work.; /// ~~~; /// If addr is not zero, but the pointer addr points at is; /// zero, then we allocate a branch object and set the passed; /// pointer to point at the allocated object. The caller; /// owns the allocated object and is responsible for deleting; /// it when it is no longer needed.; ///; /// Example:; /// ~~~ {.cpp}; /// Event* event = 0;; /// branch->SetAddress(&event);; /// ... Do some work.; /// delete event;; /// event = 0;; /// ~~~; /// If addr is not zero and the pointer addr points at is; /// also not zero, then the caller has allocated a branch; /// object and is asking us to use it. The caller owns it; /// and must delete it when it is no longer needed.; ///; /// Example:; /// ~~~ {.cpp}; /// Event* event = new Event();; /// branch->SetAddress(&event);; /// ... Do some work.; /// delete event;; /// event = 0;; /// ~~~; /// These rules affect users of TTree::Branch(),; /// TTree::SetBranchAddress(), and TChain::SetBranchAddress(); /// as well because those routines call this one.; ///; /// An example of a tree with branches with objects allocated; /// and owned by us:; /// ~~~ {.cpp}; /// TFile* f1 = new TFile(""myfile_original.root"");; /// TTree* t1 = (TTree*) f->Get(""MyTree"");; /// TFile* f2 = new TFile(""myfile_copy.root"", ""recreate"");; /// TTree* t2 = t1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:289,allocate,allocate,289,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,5,['allocate'],"['allocate', 'allocated']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// PolyLine normal constructor without initialisation.; /// Allocates n points.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPolyLine.cxx:143,Allocate,Allocates,143,graf2d/graf/src/TPolyLine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TPolyLine.cxx,1,['Allocate'],['Allocates']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Positive charge means left-handed helix.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx:95,charge,charge,95,geom/geom/src/TGeoHelix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoHelix.cxx,1,['charge'],['charge']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Power function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:86,Power,Power,86,hist/spectrum/src/TSpectrumFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx,1,['Power'],['Power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Print information about the optimization process and monitor the convergence; /// status of thye algorithm",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TGondzioSolver.cxx:139,monitor,monitor,139,math/quadp/src/TGondzioSolver.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TGondzioSolver.cxx,2,['monitor'],['monitor']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Printout the memory record after merging object 'obj'; /// This record is used by the memory monitor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx:179,monitor,monitor,179,proof/proofplayer/src/TProofPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofPlayer.cxx,1,['monitor'],['monitor']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Private member function returning an empty string representation of; /// size capacity and containing nchar characters.; /// \warning If nchar > MaxSize(), then Fatal() is raised and only MaxSize() elements are allocated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TString.cxx:297,allocate,allocated,297,core/base/src/TString.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TString.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Process a list of high-level expression. The returned string a the reduced; /// expression list where all inline object creations have been executed and substituted; /// with the name of the created object; ///; /// - E.g. `{x(-10,10),s}` --> `{x,s}`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:153,reduce,reduced,153,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,1,['reduce'],['reduced']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Process a single high-level expression or list of; /// expressions. The returned string a the reduced expression where; /// all inline object creations have been executed and substituted; /// with the name of the created object; ///; /// - e.g. `RooGaussian::g(x,m,s)` --> `g`; /// - e.g. `{x(-10,10),s}` --> `{x,s}`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:180,reduce,reduced,180,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,1,['reduce'],['reduced']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Process a single high-level expression. The returned string a the reduced; /// expression where all inline object creations have been executed and substituted; /// with the name of the created object; ///; /// - e.g. `RooGaussian::g(x,m,s)` --> `g`; /// - e.g. `x[-10,10]` --> `x`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:152,reduce,reduced,152,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,1,['reduce'],['reduced']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Project and reduce buffer points.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEvePolygonSetProjected.cxx:98,reduce,reduce,98,graf3d/eve/src/TEvePolygonSetProjected.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEvePolygonSetProjected.cxx,2,['reduce'],['reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Propagate charged particle with momentum p to bounds.; /// It is expected that Update() with full-update was called before.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx:96,charge,charged,96,graf3d/eve/src/TEveTrackPropagator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx,2,['charge'],['charged']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Propagate charged particle with momentum p to line segment with point s and; /// vector r to the second point. It is expected that Update() with full-update; /// was called before. Returns kFALSE if hits bounds.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx:96,charge,charged,96,graf3d/eve/src/TEveTrackPropagator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx,2,['charge'],['charged']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Propagate charged particle with momentum p to vertex v.; /// It is expected that Update() with full-update was called before.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx:96,charge,charged,96,graf3d/eve/src/TEveTrackPropagator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveTrackPropagator.cxx,2,['charge'],['charged']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Purge lowest key cycles in a directory.; ///; /// By default, only the highest cycle of a key is kept. Keys for which; /// the ""KEEP"" flag has been set are not removed. See TKey::Keep().; /// NOTE: This does not reduce the size of a TFile--; /// the space is simply freed up to be overwritten.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx:298,reduce,reduce,298,io/io/src/TDirectoryFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx,1,['reduce'],['reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Read array of bools from the I/O buffer. Returns the number of; /// bools read. If argument is a 0 pointer then space will be; /// allocated for the array.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:217,allocate,allocated,217,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Read array of characters from the I/O buffer. Returns the number of; /// characters read. If argument is a 0 pointer then space will be; /// allocated for the array.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:227,allocate,allocated,227,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Read array of doubles (written as float) from the I/O buffer.; /// Returns the number of doubles read.; /// If argument is a 0 pointer then space will be allocated for the array.; /// see comments about Double32_t encoding at TBufferFile::WriteDouble32",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:240,allocate,allocated,240,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Read array of doubles from the I/O buffer. Returns the number of doubles; /// read. If argument is a 0 pointer then space will be allocated for the; /// array.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:216,allocate,allocated,216,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Read array of floats (written as truncated float) from the I/O buffer.; /// Returns the number of floats read.; /// If argument is a 0 pointer then space will be allocated for the array.; /// see comments about Float16_t encoding at TBufferFile::WriteFloat16",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:248,allocate,allocated,248,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Read array of floats from the I/O buffer. Returns the number of floats; /// read. If argument is a 0 pointer then space will be allocated for the; /// array.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:214,allocate,allocated,214,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Read array of ints from the I/O buffer. Returns the number of ints; /// read. If argument is a 0 pointer then space will be allocated for the; /// array.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:210,allocate,allocated,210,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Read array of long longs from the I/O buffer. Returns the number of; /// long longs read. If argument is a 0 pointer then space will be; /// allocated for the array.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:227,allocate,allocated,227,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Read array of longs from the I/O buffer. Returns the number of longs; /// read. If argument is a 0 pointer then space will be allocated for the; /// array.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:212,allocate,allocated,212,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Read array of shorts from the I/O buffer. Returns the number of shorts; /// read. If argument is a 0 pointer then space will be allocated for the; /// array.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:214,allocate,allocated,214,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Read string from I/O buffer. String is read till 0 character is; /// found or till max-1 characters are read (i.e. string s has max; /// bytes allocated). If max = -1 no check on number of character is; /// made, reading continues till 0 character is found.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx:229,allocate,allocated,229,io/io/src/TBufferFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TBufferFile.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Read the linked list of keys.; ///; /// Every directory has a linked list (fKeys). This linked list has been; /// written on the file via WriteKeys as a single data record.; ///; /// It is interesting to call this function in the following situation.; /// Assume another process1 is connecting this directory in Update mode; /// - Process1 is adding/updating objects in this directory; /// - You want to see the latest status from process1.; /// Example Process1:; /// ~~~{.cpp}; /// obj1.Write();; /// obj2.Write();; /// gDirectory->SaveSelf();; /// ~~~; ///; /// Example Process2:; /// ~~~{.cpp}; /// gDirectory->ReadKeys();; /// obj1->Draw();; /// ~~~; /// This is an efficient way (without opening/closing files) to view; /// the latest updates of a file being modified by another process; /// as it is typically the case in a data acquisition system.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx:757,efficient,efficient,757,io/io/src/TDirectoryFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TDirectoryFile.cxx,1,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Receive a buffer. Returns the newly allocated buffer, the length; /// of the buffer and message type in kind.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx:122,allocate,allocated,122,net/rpdutils/src/DaemonUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/DaemonUtils.cxx,2,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Reduce color-depth of an image and fills vector of ""scientific data""; /// [0...1]; ///; /// Colors are reduced by allocating color cells to most used colors first,; /// and then approximating other colors with those allocated.; ///; /// \param[in] max_colors - maximum size of the colormap.; /// \param[in] dither - number of bits to strip off the color data ( 0...7 ); /// \param[in] opaque_threshold - alpha channel threshold at which pixel should be treated as opaque",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASImage.cxx:86,Reduce,Reduce,86,graf2d/asimage/src/TASImage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASImage.cxx,3,"['Reduce', 'allocate', 'reduce']","['Reduce', 'allocated', 'reduced']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Reduce fractions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGraphPolargram.cxx:86,Reduce,Reduce,86,graf2d/graf/src/TGraphPolargram.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGraphPolargram.cxx,1,['Reduce'],['Reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Reduce the number of bins for the axis passed in the option to the number of bins having a label.; /// The method will remove only the extra bins existing after the last ""labeled"" bin.; /// Note that if there are ""un-labeled"" bins present between ""labeled"" bins they will not be removed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:86,Reduce,Reduce,86,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['Reduce'],['Reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Reduce the number of bins for this axis to the number of bins having a label.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx:86,Reduce,Reduce,86,hist/hist/src/TProfile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TProfile.cxx,3,['Reduce'],['Reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Reduce the storage used by the object to a minimun",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx:86,Reduce,Reduce,86,core/cont/src/TBits.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx,1,['Reduce'],['Reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Release ownership of any allocated objects.; ///; /// Note: This interface was added so that clone trees could; /// be told they do not own the allocated objects.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:111,allocate,allocated,111,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,2,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Release the allocated GL resources.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLFBO.cxx:98,allocate,allocated,98,graf3d/gl/src/TGLFBO.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLFBO.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Release the used monitor to be used, making sure to delete newly created; /// monitors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:103,monitor,monitor,103,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,2,['monitor'],"['monitor', 'monitors']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Releases the space allocated for the object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx:105,allocate,allocated,105,geom/geom/src/TGeoBranchArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBranchArray.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Remove a socket from the monitor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx:111,monitor,monitor,111,net/net/src/TMonitor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx,1,['monitor'],['monitor']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Remove all (key,value) pairs from the map AND delete the keys AND; /// values when they are allocated on the heap.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:178,allocate,allocated,178,core/cont/src/TMap.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Remove all (key,value) pairs from the map AND delete the keys; /// when they are allocated on the heap.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:167,allocate,allocated,167,core/cont/src/TMap.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Remove all (key,value) pairs from the map AND delete the values; /// when they are allocated on the heap.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:169,allocate,allocated,169,core/cont/src/TMap.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Remove all elements. This assumes removing of all elements can; /// be done more efficiently then looping over them and removing one; /// by one. This protected function performs the removal on the; /// level of REveElement.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveElement.cxx:167,efficient,efficiently,167,graf3d/eve7/src/REveElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveElement.cxx,1,['efficient'],['efficiently']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Remove all elements. This assumes removing of all elements can; /// be done more efficiently then looping over them and removing one; /// by one. This protected function performs the removal on the; /// level of TEveElement.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx:167,efficient,efficiently,167,graf3d/eve/src/TEveElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx,1,['efficient'],['efficiently']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Remove all elements. This assumes removing of all elements can; /// be done more efficiently then looping over them and removing; /// them one by one.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx:167,efficient,efficiently,167,graf3d/eve/src/TEveElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveElement.cxx,2,['efficient'],['efficiently']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Remove all sockets from the monitor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx:114,monitor,monitor,114,net/net/src/TMonitor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx,1,['monitor'],['monitor']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Reset the read basket TBuffer memory allocation if needed.; ///; /// This allows to reduce the number of memory allocation while avoiding to; /// always use the maximum size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBasket.cxx:170,reduce,reduce,170,tree/tree/src/TBasket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBasket.cxx,1,['reduce'],['reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Reset the write basket to the starting state. i.e. as it was after calling; /// the constructor (and potentially attaching a TBuffer.); /// Reduce memory used by fEntryOffset and the TBuffer if needed ..",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBasket.cxx:226,Reduce,Reduce,226,tree/tree/src/TBasket.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBasket.cxx,1,['Reduce'],['Reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve binning of this linear transformation. A RooLinearVar does not have its own; /// binnings but uses linearly transformed binnings of the input variable. If a given; /// binning exists on the input variable, it will also exist on this linear transformation,; /// and a binning adaptor object is created on the fly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx:370,adapt,adaptor,370,roofit/roofitcore/src/RooLinearVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinearVar.cxx,1,['adapt'],['adaptor']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve specific ROOT password from $HOME/fpw, if any.; /// To avoid problems with NFS-root-squashing, if 'root' changes temporarly the; /// uid/gid to those of the target user (usr).; /// If OK, returns pass length and fill 'pass' with the password, null-terminated.; /// ('pass' is allocated externally to contain max lpwmax bytes).; /// If the file does not exists, return 0 and an empty pass.; /// If any problems with the file occurs, return a negative; /// code, -2 indicating wrong file permissions.; /// If any problem with changing ugid's occurs, prints a warning trying anyhow; /// to read the password hash.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx:371,allocate,allocated,371,net/rpdutils/src/rpdutils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/rpdutils.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Return Greenwich apparent sidereal time (GAST) in hour-angle. Return; /// value will always be between 0 and 24 (hours). Sidereal time is most; /// accurately calculated from UT1. If fSec and fNanoSec are in UTC (which; /// they are by default), the optional argument UT1Offset can be supplied (in; /// milliseconds). If UT1Offset is not supplied, conversion has maximum error; /// of 1s. If offset is supplied error can be reduced to us level. Values for; /// UT1Offset can be found in IERS Bulletin B:; /// ftp://ftp.iers.org/products/eop/bulletinb/format_2009/; /// Equation of the equinoxes is given by USNO:; /// http://aa.usno.navy.mil/faq/docs/GAST.php",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:93,Green,Greenwich,93,core/base/src/TTimeStamp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx,2,"['Green', 'reduce']","['Greenwich', 'reduced']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Return Greenwich mean sidereal time (GMST) in hour-angle. Return value; /// will always be between 0 and 24 (hours). Sidereal time is most accurately; /// calculated from UT1. If fSec and fNanoSec are in UTC (which they are by; /// default), the optional argument UT1Offset can be supplied (in; /// milliseconds). If UT1Offset is not supplied, conversion has maximum error; /// of 1s. If offset is supplied error can be reduced to us level. Values for; /// UT1Offset can be found in IERS Bulletin B:; /// ftp://ftp.iers.org/products/eop/bulletinb/format_2009/; /// The conversion to sidereal time used here is given by; /// Aoki et. al. Astron. Astrophys. 105, 359-362 (1982); /// http://adsabs.harvard.edu/abs/1982A%26A...105..359A",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:93,Green,Greenwich,93,core/base/src/TTimeStamp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx,2,"['Green', 'reduce']","['Greenwich', 'reduced']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Return Integral of function between a and b using the given parameter values and; /// relative and absolute tolerance.; ///; /// The default integrator defined in ROOT::Math::IntegratorOneDimOptions::DefaultIntegrator() is used; /// If ROOT contains the MathMore library the default integrator is set to be; /// the adaptive ROOT::Math::GSLIntegrator (based on QUADPACK) or otherwise the; /// ROOT::Math::GaussIntegrator is used; /// See the reference documentation of these classes for more information about the; /// integration algorithms; /// To change integration algorithm just do :; /// ROOT::Math::IntegratorOneDimOptions::SetDefaultIntegrator(IntegratorName);; /// Valid integrator names are:; /// - Gauss : for ROOT::Math::GaussIntegrator; /// - GaussLegendre : for ROOT::Math::GaussLegendreIntegrator; /// - Adaptive : for ROOT::Math::GSLIntegrator adaptive method (QAG); /// - AdaptiveSingular : for ROOT::Math::GSLIntegrator adaptive singular method (QAGS); /// - NonAdaptive : for ROOT::Math::GSLIntegrator non adaptive (QNG); ///; /// In order to use the GSL integrators one needs to have the MathMore library installed; ///; /// Note 1:; ///; /// Values of the function f(x) at the interval end-points A and B are not; /// required. The subprogram may therefore be used when these values are; /// undefined.; ///; /// Note 2:; ///; /// Instead of TF1::Integral, you may want to use the combination of; /// TF1::CalcGaussLegendreSamplingPoints and TF1::IntegralFast.; /// See an example with the following script:; ///; /// ~~~ {.cpp}; /// void gint() {; /// TF1 *g = new TF1(""g"",""gaus"",-5,5);; /// g->SetParameters(1,0,1);; /// //default gaus integration method uses 6 points; /// //not suitable to integrate on a large domain; /// double r1 = g->Integral(0,5);; /// double r2 = g->Integral(0,1000);; ///; /// //try with user directives computing more points; /// Int_t np = 1000;; /// double *x=new",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:402,adapt,adaptive,402,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,6,"['Adapt', 'adapt']","['Adaptive', 'AdaptiveSingular', 'adaptive']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Return a RooHist (derives from TGraphAsymErrors) containing the residuals of a histogram.; /// The plotting range of the graph is adapted to the plotting range of the current plot.; ///; /// \param histname Name of the data histogram.; /// Passing an empty string or `nullptr` will create residuals of the last-plotted histogram.; /// \param curvename Name of the curve to compare to data.; /// Passing an empty string or `nullptr` will create residuals of the last-plotted curve.; /// \param normalize If true, the residuals are divided by the error; /// of the histogram, effectively returning a pull histogram.; /// \param useAverage If true, the histogram is compared with the curve averaged in each bin.; /// Otherwise, the curve is evaluated at the bin centres, which is not accurate for strongly curved distributions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:216,adapt,adapted,216,roofit/roofitcore/src/RooPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx,1,['adapt'],['adapted']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Return a histogram containing the asymmetry of this histogram with h2,; /// where the asymmetry is defined as:; ///; /// ~~~ {.cpp}; /// Asymmetry = (h1 - h2)/(h1 + h2) where h1 = this; /// ~~~; ///; /// works for 1D, 2D, etc. histograms; /// c2 is an optional argument that gives a relative weight between the two; /// histograms, and dc2 is the error on this weight. This is useful, for example,; /// when forming an asymmetry between two histograms from 2 different data sets that; /// need to be normalized to each other in some way. The function calculates; /// the errors assuming Poisson statistics on h1 and h2 (that is, dh = sqrt(h)).; ///; /// example: assuming 'h1' and 'h2' are already filled; ///; /// ~~~ {.cpp}; /// h3 = h1->GetAsymmetry(h2); /// ~~~; ///; /// then 'h3' is created and filled with the asymmetry between 'h1' and 'h2';; /// h1 and h2 are left intact.; ///; /// Note that it is the user's responsibility to manage the created histogram.; /// The name of the returned histogram will be `Asymmetry_nameOfh1-nameOfh2`; ///; /// code proposed by Jason Seely (seely@mit.edu) and adapted by R.Brun; ///; /// clone the histograms so top and bottom will have the; /// correct dimensions:; /// Sumw2 just makes sure the errors will be computed properly; /// when we form sums and ratios below.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:1190,adapt,adapted,1190,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['adapt'],['adapted']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated array of objects; /// of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:114,allocate,allocated,114,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,2,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated object of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:114,allocate,allocated,114,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,4,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to a newly allocated object of this class.; /// The class must have a default constructor. For meaning of; /// defConstructor, see TClass::IsCallingNew().; ///; /// If quiet is true, do no issue a message via Error on case; /// of problems, just return 0.; ///; /// The constructor actually called here can be customized by; /// using the rootcint pragma:; /// ~~~ {.cpp}; /// #pragma link C++ ioctortype UserClass;; /// ~~~; /// For example, with this pragma and a class named MyClass,; /// this method will called the first of the following 3; /// constructors which exists and is public:; /// ~~~ {.cpp}; /// MyClass(UserClass*);; /// MyClass(TRootIOCtor*);; /// MyClass(); // Or a constructor with all its arguments defaulted.; /// ~~~; ///; /// When more than one pragma ioctortype is used, the first seen as priority; /// For example with:; /// ~~~ {.cpp}; /// #pragma link C++ ioctortype UserClass1;; /// #pragma link C++ ioctortype UserClass2;; /// ~~~; /// We look in the following order:; /// ~~~ {.cpp}; /// MyClass(UserClass1*);; /// MyClass(UserClass2*);; /// MyClass(TRootIOCtor*);; /// MyClass(); // Or a constructor with all its arguments defaulted.; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:114,allocate,allocated,114,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Return a reduced covariance matrix (Note that Vred _is_ a simple sub-matrix of V,; /// row/columns are ordered to matched the convention given in input argument 'params'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:95,reduce,reduced,95,roofit/roofitcore/src/RooFitResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx,1,['reduce'],['reduced']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Return a reduced covariance matrix, which is calculated as; /// \f[; /// V_\mathrm{red} = \bar{V_{22}} = V_{11} - V_{12} \cdot V_{22}^{-1} \cdot V_{21},; /// \f]; /// where \f$ V_{11},V_{12},V_{21},V_{22} \f$ represent a block decomposition of the covariance matrix into observables that; /// are propagated (labeled by index '1') and that are not propagated (labeled by index '2'), and \f$ \bar{V_{22}} \f$; /// is the Shur complement of \f$ V_{22} \f$, calculated as shown above.; ///; /// (Note that \f$ V_\mathrm{red} \f$ is *not* a simple sub-matrix of \f$ V \f$)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx:95,reduce,reduced,95,roofit/roofitcore/src/RooFitResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFitResult.cxx,1,['reduce'],['reduced']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Return color index related to particle's energy.; ///Int_t ctable[11] = {2,50,46,45,44,43,42,41,21,19,5};",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootShower/MyEvent.cxx:127,energy,energy,127,test/RootShower/MyEvent.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootShower/MyEvent.cxx,1,['energy'],['energy']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Return local apparent sidereal time (LAST) in hour-angle, given a; /// longitude in degrees. Return value will always be between 0 and 24; /// (hours). Sidereal time is most accurately calculated from UT1. If fSec; /// and fNanoSec are in UTC (which they are by default), the optional; /// argument UT1Offset can be supplied (in milliseconds). If UT1Offset is not; /// supplied, conversion has maximum error of 1s. If offset is supplied error; /// can be reduced to us level. Values for UT1Offset can be found in IERS; /// Bulletin B: ftp://ftp.iers.org/products/eop/bulletinb/format_2009/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:541,reduce,reduced,541,core/base/src/TTimeStamp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx,1,['reduce'],['reduced']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Return local mean sidereal time (LMST) in hour-angle, given a longitude; /// in degrees. Return value will always be between 0 and 24 (hours).; /// Sidereal time is most accurately calculated from UT1. If fSec and; /// fNanoSec are in UTC (which they are by default), the optional argument; /// UT1Offset can be supplied (in milliseconds). If UT1Offset is not; /// supplied, conversion has maximum error of 1s. If offset is supplied error; /// can be reduced to us level. Values for UT1Offset can be found in IERS; /// Bulletin B: ftp://ftp.iers.org/products/eop/bulletinb/format_2009/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:537,reduce,reduced,537,core/base/src/TTimeStamp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx,1,['reduce'],['reduced']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Return pointer to object retrieved from shared memory.; ///; /// The object must; /// be deleted after use. If delObj is a pointer to a previously allocated; /// object it will be deleted. Returns 0 in case object with the given; /// name does not exist.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx:233,allocate,allocated,233,io/io/src/TMapFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMapFile.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Return sampling hint for making curves of (projections) of this function; /// as the recursive division strategy of RooCurve cannot deal efficiently; /// with the vertical lines that occur in a non-interpolated histogram",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:223,efficient,efficiently,223,roofit/histfactory/src/ParamHistFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx,8,['efficient'],['efficiently']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Return specialized context to efficiently generate toy events from RooAddModels.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx:116,efficient,efficiently,116,roofit/roofitcore/src/RooAddModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx,1,['efficient'],['efficiently']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Return specialized context to efficiently generate toy events from RooAddPdfs; /// return RooAbsPdf::genContext(vars,prototype,auxProto,verbose) ; // WVE DEBUG",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx:116,efficient,efficiently,116,roofit/roofitcore/src/RooAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddPdf.cxx,1,['efficient'],['efficiently']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Return specialized generator context for RooEffProds that implements generation; /// in a more efficient way than can be done for generic correlated products",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEffProd.cxx:181,efficient,efficient,181,roofit/roofitcore/src/RooEffProd.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEffProd.cxx,1,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Return the date & time as a string (ctime() format).; /// Copy result because it points to a statically allocated string.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDatime.cxx:190,allocate,allocated,190,core/base/src/TDatime.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDatime.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Return the date & time as a string.; ///; /// Result is pointer to a statically allocated string.; /// User should copy this into their own buffer before calling; /// this method again.; ///; /// Option ""l"" returns it in local zone format; /// (can be applied to default or compact format).; ///; /// Default format is RFC822 compliant:; /// ~~~ {.cpp}; /// ""Mon, 02 Jan 2001 18:11:12 +0000 (GMT) +999999999 nsec""; /// ""Mon, 02 Jan 2001 10:11:12 -0800 (PST) +999999999 nsec""; /// ~~~; ///; /// Option ""c"" compact is (almost) ISO 8601 compliant:; /// - ""2001-01-02 18:11:12.9999999999Z""; /// - ""2001-01-02 10:11:12.9999999999-0800"" if PST; /// * uses ""-"" as date separator as specified in ISO 8601; /// * uses ""."" rather than preferred "","" for decimal separator; /// * -HHMM is the difference between local and UTC (if behind, + if ahead).; ///; /// The ""-HHMM"" is replaced with ""Z"" if given as UTC.; /// To be strictly conforming it should use ""T"" instead of the; /// blank separating the date and time.; ///; /// Option ""2"" returns as {sec,nsec} integers.; ///; /// Option ""s"" returns ""2001-01-02 18:11:12"" with an implied UTC,; /// overrides ""l"" option.; ///; /// Internally uses a circular list of buffers to avoid problems; /// using AsString multiple times in a single statement.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:166,allocate,allocated,166,core/base/src/TTimeStamp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Return the index for fCurrentBinIndex.; /// If it doesn't exist then return -1, or allocate a new bin if allocate is set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx:169,allocate,allocate,169,hist/hist/src/THnSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx,2,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Return the matrix determinant as d1,d2 where det = d1*TMath::Power(2.0,d2)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixT.cxx:147,Power,Power,147,math/matrix/src/TMatrixT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixT.cxx,1,['Power'],['Power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Returns `x` raised to the power `y`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TMath.h:112,power,power,112,math/mathcore/inc/TMath.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TMath.h,5,['power'],['power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Returns a list with all active sockets. This list must be deleted; /// by the user. DO NOT call Delete() on this list as it will delete; /// the sockets that are still being used by the monitor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx:272,monitor,monitor,272,net/net/src/TMonitor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx,1,['monitor'],['monitor']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Returns a list with all de-active sockets. This list must be deleted; /// by the user. DO NOT call Delete() on this list as it will delete; /// the sockets that are still being used by the monitor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx:275,monitor,monitor,275,net/net/src/TMonitor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx,1,['monitor'],['monitor']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Returns in R G B the ncol colors of the palette used by the image.; /// The image pixels are changed to index values in these R G B arrays.; /// This produces a colormap with only the used colors (so even on displays; /// with more than 8 planes we will be able to create GIF's when the image; /// contains no more than 256 different colors). If it does contain more; /// colors we will have to use GIFquantize to reduce the number of colors.; /// The R G B arrays must be deleted by the caller.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:500,reduce,reduce,500,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,2,['reduce'],['reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Returns the base-e exponential function of x, which is e raised to the power `x`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TMath.h:157,power,power,157,math/mathcore/inc/TMath.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TMath.h,1,['power'],['power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Returns the raw IP address in host byte order. The highest; /// order byte position is in addr[0]. To be prepared for 64-bit; /// IP addresses an array of bytes is returned.; /// User must delete allocated memory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TInetAddress.cxx:282,allocate,allocated,282,core/base/src/TInetAddress.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TInetAddress.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Returns the result of multiplying `x` (the significant) by 2 raised to the power of `exp` (the exponent).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TMath.h:161,power,power,161,math/mathcore/inc/TMath.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/TMath.h,1,['power'],['power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Returns total size of allocated memory in bytes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/src/TStructNode.cxx:108,allocate,allocated,108,graf3d/gviz3d/src/TStructNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/src/TStructNode.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Rotate using the x-convention (Landau and Lifshitz, Goldstein, &c) by; /// doing the explicit rotations. This is slightly less efficient than; /// directly applying the rotation, but makes the code much clearer. My; /// presumption is that this code is not going to be a speed bottle neck.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRotation.cxx:213,efficient,efficient,213,math/physics/src/TRotation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRotation.cxx,1,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Saves the data and calculated bandwidths to a file,; /// as a record of what produced the PDF and to give a reduced; /// data set in order to facilitate re-calculation in the future.; /// \param[in] outputFile Name of the file where to store the data; /// \param[in] name Name of the tree which will contain the data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx:194,reduce,reduced,194,roofit/roofit/src/Roo2DKeysPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx,1,['reduce'],['reduced']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// See typedef void (*CopyIterator_t)(void *&dest, const void *source);; /// Copy the iterator source, into dest. dest should contain should contain the location of memory arena of size fgIteratorSize.; /// If the collection iterator are of that size or less, the iterator will be constructed in place in this location (new with placement); /// Otherwise the iterator will be allocated via a regular new and its address returned by modifying the value of dest.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TGenCollectionProxy.cxx:459,allocate,allocated,459,io/io/src/TGenCollectionProxy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TGenCollectionProxy.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// See typedef void (*CreateIterators_t)(void *collection, void *&begin_arena, void *&end_arena);; /// begin_arena and end_arena should contain the location of memory arena of size fgIteratorSize.; /// If the collection iterator are of that size or less, the iterators will be constructed in place in those location (new with placement); /// Otherwise the iterators will be allocated via a regular new and their address returned by modifying the value of begin_arena and end_arena.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TGenCollectionProxy.cxx:457,allocate,allocated,457,io/io/src/TGenCollectionProxy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TGenCollectionProxy.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Selection method. User can override this method for specialized; /// selection of acceptable functions in fit. Default is to select; /// all. This message is sent during the build-up of the function; /// candidates table once for each set of powers in; /// variables. Notice, that the argument array contains the powers; /// PLUS ONE. For example, to De select the function; /// f = x1^2 * x2^4 * x3^5,; /// this method should return kFALSE if given the argument; /// { 3, 4, 6 }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:328,power,powers,328,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,2,['power'],['powers']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Send 'summary' record for the table 'proofquerylog'.; ///; /// There are three versions of this record, corresponding the evolution; /// in time of the monitoring requirements.; ///; /// The default version 2 corresponds to the table created with the following command:; ///; /// CREATE TABLE proofquerylog (; /// id int(11) NOT NULL auto_increment,; /// proofuser varchar(32) NOT NULL,; /// proofgroup varchar(32) default NULL,; /// querybegin datetime default NULL,; /// queryend datetime default NULL,; /// walltime int(11) default NULL,; /// cputime float default NULL,; /// bytesread bigint(20) default NULL,; /// events bigint(20) default NULL,; /// totevents bigint(20) default NULL,; /// workers int(11) default NULL,; /// querytag varchar(64) NOT NULL,; /// vmemmxw bigint(20) default NULL,; /// rmemmxw bigint(20) default NULL,; /// vmemmxm bigint(20) default NULL,; /// rmemmxm bigint(20) default NULL,; /// numfiles int(11) default NULL,; /// missfiles int(11) default NULL,; /// status int(11) default NULL,; /// rootver varchar(32) NOT NULL,; /// PRIMARY KEY (id) );; ///; /// Version 1 corresponds to the table created with the following command:; /// ('user','begin','end' instead of 'proofuser', 'querybegin', 'queryend';; /// no 'status', 'missfiles', 'rootver'; 'dataset' field with name(s) of; /// processed dataset(s)); ///; /// CREATE TABLE proofquerylog (; /// id int(11) NOT NULL auto_increment,; /// user varchar(32) NOT NULL,; /// proofgroup varchar(32) default NULL,; /// begin datetime default NULL,; /// end datetime default NULL,; /// walltime int(11) default NULL,; /// cputime float default NULL,; /// bytesread bigint(20) default NULL,; /// events bigint(20) default NULL,; /// totevents bigint(20) default NULL,; /// workers int(11) default NULL,; /// querytag varchar(64) NOT NULL,; /// vmemmxw bigint(20) default NULL,; /// rmemmxw bigint(20) default NULL,; /// vmemmxm bigint(20",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx:238,monitor,monitoring,238,proof/proofplayer/src/TProofMonSenderSQL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TProofMonSenderSQL.cxx,1,['monitor'],['monitoring']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Send to the connected monitoring servers information related to this query.; /// The information is of three types: 'summary', 'dataset' and 'files'.; /// Actual 'table' formatting is done by the relevant sender, implementation of; /// TProofMonSender, where the details are given.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx:108,monitor,monitoring,108,proof/proofplayer/src/TPerfStats.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/src/TPerfStats.cxx,1,['monitor'],['monitoring']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Set actual value of odo meter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGSpeedo.cxx:110,meter,meter,110,gui/gui/src/TGSpeedo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGSpeedo.cxx,1,['meter'],['meter']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Set branch address to zero and free all allocated memory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:126,allocate,allocated,126,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Set color intensities for given color index.; /// cindex : color index; /// r,g,b : red, green, blue intensities between 0.0 and 1.0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx:175,green,green,175,graf2d/win32gdk/src/TGWin32.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/TGWin32.cxx,1,['green'],['green']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Set color intensities for given color index.; ///; /// \param [in] cindex : color index; /// \param [in] r,g,b : red, green, blue intensities between 0.0 and 1.0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx:204,green,green,204,graf2d/x11/src/TGX11.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/TGX11.cxx,1,['green'],['green']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Set color with its R G B components:; ///; /// - r: % of red in [0,1]; /// - g: % of green in [0,1]; /// - b: % of blue in [0,1]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TPDF.cxx:171,green,green,171,graf2d/postscript/src/TPDF.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TPDF.cxx,1,['green'],['green']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Set color with its R G B components; ///; /// - r: % of red in [0,1]; /// - g: % of green in [0,1]; /// - b: % of blue in [0,1]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TImageDump.cxx:170,green,green,170,graf2d/postscript/src/TImageDump.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TImageDump.cxx,2,['green'],['green']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Set color with its R G B components; ///; /// - r: % of red in [0,1]; /// --g: % of green in [0,1]; /// - b: % of blue in [0,1]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TSVG.cxx:170,green,green,170,graf2d/postscript/src/TSVG.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TSVG.cxx,1,['green'],['green']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Set interest mask for socket sock to interest. If the socket is not; /// in the active list move it or add it there.; /// If interest=kRead then we want to monitor the socket for read readiness,; /// if interest=kWrite then we monitor the socket for write readiness,; /// if interest=kRead|kWrite then we monitor both read and write readiness.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx:242,monitor,monitor,242,net/net/src/TMonitor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx,3,['monitor'],['monitor']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Set limit for maximal allocated memory for single parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLStatement.cxx:108,allocate,allocated,108,sql/mysql/src/TMySQLStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLStatement.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Set location of JSROOT to use with the server; ///; /// One could specify address like:; ///; /// * https://root.cern/js/7.6.0/; /// * https://jsroot.gsi.de/7.6.0/; ///; /// This allows to get new JSROOT features with old server,; /// reduce load on THttpServer instance, also startup time can be improved; /// When empty string specified (default), local copy of JSROOT is used (distributed with ROOT)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpServer.cxx:321,reduce,reduce,321,net/http/src/THttpServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/THttpServer.cxx,1,['reduce'],['reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Set manager and schedule its destruction after this for clean; /// operations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:102,schedul,schedule,102,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['schedul'],['schedule']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Set parameter type to be used as buffer.; /// Used in both setting data to database and retrieving data from data base.; /// Initialize proper MYSQL_BIND structure and allocate required buffers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLStatement.cxx:254,allocate,allocate,254,sql/mysql/src/TMySQLStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLStatement.cxx,1,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Set parameter type to be used as buffer.; /// Used in both setting data to database and retriving data from data base.; /// Initialize proper MYSQL_BIND structure and allocate required buffers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLStatement.cxx:253,allocate,allocate,253,sql/mysql/src/TMySQLStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLStatement.cxx,1,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Set surface property coefficients; ///; /// \param[in] qqa diffusion coefficient for diffused light [0.,1.]; /// \param[in] qqd diffusion coefficient for direct light [0.,1.]; /// \param[in] qqs diffusion coefficient for reflected light [0.,1.]; /// \param[in] nnqs power coefficient for reflected light (.GE.1); ///; /// Lightness model formula: Y = YD*QA + > YLi*(QD*cosNi+QS*cosRi); ///; /// \param[out] irep reply (0 - O.K, -1 error)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:352,power,power,352,hist/histpainter/src/TPainter3dAlgorithms.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx,1,['power'],['power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Set the AutoDelete bit.; ///; /// This function can be used to instruct Root in TBranchObject::ReadBasket; /// to not delete the object referenced by a branchobject before reading a; /// new entry. By default, the object is deleted.; /// - If autodel is true, this existing object will be deleted, a new object; /// created by the default constructor, then object->Streamer called.; /// - If autodel is false, the existing object is not deleted. Root assumes; /// that the user is taking care of deleting any internal object or array; /// This can be done in Streamer itself.; /// - If this branch has sub-branches, the function sets autodel for these; /// branches as well.; /// We STRONGLY suggest to activate this option by default when you create; /// the top level branch. This will make the read phase more efficient; /// because it minimizes the numbers of new/delete operations.; /// Once this option has been set and the Tree is written to a file, it is; /// not necessary to specify the option again when reading, unless you; /// want to set the opposite mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchObject.cxx:899,efficient,efficient,899,tree/tree/src/TBranchObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchObject.cxx,1,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Set the canvas scale in centimeters.; ///; /// This information is used by PostScript to set the page size.; ///; /// \param[in] xsize size of the canvas in centimeters along X; /// \param[in] ysize size of the canvas in centimeters along Y; ///; /// if xsize and ysize are not equal to 0, then the scale factors will; /// be computed to keep the ratio ysize/xsize independently of the canvas; /// size (parts of the physical canvas will be unused).; ///; /// if xsize = 0 and ysize is not zero, then xsize will be computed; /// to fit to the current canvas scale. If the canvas is resized,; /// a new value for xsize will be recomputed. In this case the aspect; /// ratio is not preserved.; ///; /// if both xsize = 0 and ysize = 0, then the scaling is automatic.; /// the largest dimension will be allocated a size of 20 centimeters.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx:886,allocate,allocated,886,graf2d/gpad/src/TCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Set the maximum power to be considered in the fit for each; /// variable. See also; /// <a href=""#TMultiDimFit:description"">class description</a>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:102,power,power,102,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['power'],['power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Set the row/column indices to the ""sum"" of matrices a and b; /// It is checked that enough space has been allocated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx:192,allocate,allocated,192,math/matrix/src/TMatrixTSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx,2,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Sets color intensities the specified color index ""cindex"".; ///; /// \param [in] cindex color index; /// \param [in] r, g, b the red, green, blue intensities between 0.0 and 1.0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx:220,green,green,220,core/base/src/TVirtualX.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualX.cxx,1,['green'],['green']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Sets total size of allocated memory in bytes to value ""size""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/src/TStructNode.cxx:105,allocate,allocated,105,graf3d/gviz3d/src/TStructNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gviz3d/src/TStructNode.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Simple recursive algorithm to find the permutations of; /// n natural numbers, not necessarily all distinct; /// adapted from CERNLIB routine PERMU.; /// The input array has to be initialised with a non descending; /// sequence. The method returns kFALSE when; /// all combinations are exhausted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:199,adapt,adapted,199,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['adapt'],['adapted']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Slot for charge.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoMaterialEditor.cxx:95,charge,charge,95,geom/geombuilder/src/TGeoMaterialEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geombuilder/src/TGeoMaterialEditor.cxx,1,['charge'],['charge']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Smooth array xx, translation of Hbook routine `hsmoof.F`.; /// Based on algorithm 353QH twice presented by J. Friedman; /// in [Proc. of the 1974 CERN School of Computing, Norway, 11-24 August, 1974](https://cds.cern.ch/record/186223).; /// See also Section 4.2 in [J. Friedman, Data Analysis Techniques for High Energy Physics](https://www.slac.stanford.edu/pubs/slacreports/reports16/slac-r-176.pdf).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:399,Energy,Energy,399,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['Energy'],['Energy']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Solve the quadratic programming problem as formulated through prob, store; /// the final solution in iterate->fX . Monitor the residuals during the iterations; /// through resid . The status is returned as defined in TQpSolverBase::ETerminationCode .",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TGondzioSolver.cxx:201,Monitor,Monitor,201,math/quadp/src/TGondzioSolver.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TGondzioSolver.cxx,2,['Monitor'],['Monitor']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Space is allocated for row/column indices and data, but the sparse structure; /// information has still to be set !",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx:95,allocate,allocated,95,math/matrix/src/TMatrixTSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx,2,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Space is allocated for row/column indices and data. Sparse row/column index; /// structure together with data is coming from the arrays, row, col and data, resp.; /// Here row, col and data are arrays of length nr (number of nonzero elements), i.e.; /// the matrix is stored in COO (coordinate) format. Note that the input arrays are; /// not passed as const since they will be modified !",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx:95,allocate,allocated,95,math/matrix/src/TMatrixTSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Space is allocated for row/column indices and data. Sparsity pattern is given by; /// column indices and row pointers from arrays col and rowptr, resp, while matrix; /// entries come from the array data. Arrays col and data are assumed to have length; /// nr (number of nonzero elements), while array rowptr has length (n+1), where; /// n=row_upb-row_lwb+1 is the number of rows.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx:95,allocate,allocated,95,math/matrix/src/TMatrixTSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Start of methods for the miss cache.; ////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////////; /// Enable / disable the miss cache.; ///; /// The first time this is called on a TTreeCache object, the corresponding; /// data structures will be allocated. Subsequent enable / disables will; /// simply turn the functionality on/off.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:436,allocate,allocated,436,tree/tree/src/TTreeCache.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Static function creating a color table with several connected linear gradients.; ///; /// - Number: The number of end point colors that will form the gradients.; /// Must be at least 2.; /// - Stops: Where in the whole table the end point colors should lie.; /// Each entry must be on [0, 1], each entry must be greater than; /// the previous entry.; /// - Red, Green, Blue: The end point color values.; /// Each entry must be on [0, 1]; /// - NColors: Total number of colors in the table. Must be at least 1.; /// - alpha: the opacity factor, between 0 and 1. Default is no transparency (1).; /// - setPalette: activate the newly created palette (true by default). If false,; /// the caller is in charge of calling TColor::SetPalette using the; /// return value of the function (first palette color index) and; /// reconstructing the Int_t palette[NColors+1] array.; ///; /// Returns a positive value (the index of the first color of the palette) on; /// success and -1 on error.; ///; /// The table is constructed by tracing lines between the given points in; /// RGB space. Each color value may have a value between 0 and 1. The; /// difference between consecutive ""Stops"" values gives the fraction of; /// space in the whole table that should be used for the interval between; /// the corresponding color values.; ///; /// Normally the first element of Stops should be 0 and the last should be 1.; /// If this is not true, fewer than NColors will be used in proportion with; /// the total interval between the first and last elements of Stops.; ///; /// This definition is similar to the povray-definition of gradient; /// color tables.; ///; /// For instance:; /// ~~~ {.cpp}; /// UInt_t Number = 3;; /// Double_t Red[3] = { 0.0, 1.0, 1.0 };; /// Double_t Green[3] = { 0.0, 0.0, 1.0 };; /// Double_t Blue[3] = { 1.0, 0.0, 1.0 };; /// Double_t Stops[3] = { 0.0, 0.4, 1.0 };; /// ~~~; /// This defines a table in",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:448,Green,Green,448,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,2,"['Green', 'charge']","['Green', 'charge']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Static function, copying the non-zero entries in the upper triangle to; /// array b . User should allocate enough memory for array b .",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompSparse.cxx:184,allocate,allocate,184,math/matrix/src/TDecompSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompSparse.cxx,1,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Static function; /// based on R function rPsort: adapted to C++ by Christian Stratowa; /// (R source file: R_sort.c by R Development Core Team (C) 1999-2001)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphSmooth.cxx:135,adapt,adapted,135,hist/hist/src/TGraphSmooth.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphSmooth.cxx,1,['adapt'],['adapted']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Static function; ///; /// Probably the most famous of the various map projections, the Mercator projection; /// takes its name from Mercator who presented it in 1569. It is a cylindrical, conformal projection; /// with no distortion along the equator.; /// The Mercator projection has been used extensively for world maps in which the distortion towards; /// the polar regions grows rather large, thus incorrectly giving the impression that, for example,; /// Greenland is larger than South America. In reality, the latter is about eight times the size of; /// Greenland. Also, the Former Soviet Union looks much bigger than Africa or South America. One may wonder; /// whether this illusion has had any influence on U.S. foreign policy.' (Source: GMT); /// code from Ernst-Jan Buis",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:546,Green,Greenland,546,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,2,['Green'],['Greenland']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Statistical test of compatibility in shape between; /// THIS histogram and h2, using Kolmogorov test.; /// Default: Ignore under- and overflow bins in comparison; ///; /// option is a character string to specify options; /// - ""U"" include Underflows in test; /// - ""O"" include Overflows; /// - ""N"" include comparison of normalizations; /// - ""D"" Put out a line of ""Debug"" printout; /// - ""M"" Return the Maximum Kolmogorov distance instead of prob; ///; /// The returned function value is the probability of test; /// (much less than one means NOT compatible); ///; /// The KS test uses the distance between the pseudo-CDF's obtained; /// from the histogram. Since in 2D the order for generating the pseudo-CDF is; /// arbitrary, two pairs of pseudo-CDF are used, one starting from the x axis the; /// other from the y axis and the maximum distance is the average of the two maximum; /// distances obtained.; ///; /// Code adapted by Rene Brun from original HBOOK routine HDIFF",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx:1008,adapt,adapted,1008,hist/hist/src/TH2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2.cxx,1,['adapt'],['adapted']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Sum matrix entries corresponding to the same matrix element (i,j). The reduced; /// extries remain dangling. It is assumed; /// that the arrays row, col and data are sorted with DoubleLexSort.; /// Note that the input arrays are not passed as const since they will be modified !",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx:157,reduce,reduced,157,math/matrix/src/TMatrixTSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSparse.cxx,1,['reduce'],['reduced']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Suppose an event occurs with probability _p_ per trial; /// Then the probability P of its occurring _k_ or more times; /// in _n_ trials is termed a cumulative binomial probability; /// the formula is:; /// ~~~ {cpp}; /// P = sum_from_j=k_to_n(TMath::Binomial (n, j)**TMath::Power (p, j)*TMath::Power (1-p, n-j); /// ~~~; /// For _n_ larger than 12 BetaIncomplete is a much better way; /// to evaluate the sum than would be the straightforward sum calculation; /// for _n_ smaller than 12 either method is acceptable (""Numerical Recipes""); ///; /// Note this function is not exactly implementing the cumulative or the complement of the cumulative of the; /// Binomial distrinution. It is equivalent to ROOT::Math::binomial_cdf_c(k-1,p,n); ///; /// \author Anna Kreshuk",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:361,Power,Power,361,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,2,['Power'],['Power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Switch ON/OFF the real-time logging facility. When this option is; /// ON, log messages from processing are sent back as they come, instead of; /// being sent back at the end in one go. This may help debugging or monitoring; /// in some cases, but, depending on the amount of log, it may have significant; /// consequencies on the load over the network, so it must be used with care.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:299,monitor,monitoring,299,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['monitor'],['monitoring']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// TODO --> adapt to variable,target,spectator selection; /// default transformation output; /// --> only indicate that transformation occurred",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx:95,adapt,adapt,95,tmva/tmva/src/VariableTransformBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx,1,['adapt'],['adapt']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// TODO --> adapt to variable,target,spectator selection; /// method to calculate minimum, maximum, mean, and RMS for all; /// variables used in the MVA",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx:95,adapt,adapt,95,tmva/tmva/src/VariableTransformBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx,1,['adapt'],['adapt']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// TODO --> adapt to variable,target,spectator selection; /// update min and max of a given variable (target) and a given transformation method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx:95,adapt,adapt,95,tmva/tmva/src/VariableTransformBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx,1,['adapt'],['adapt']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// TObject constructor. It sets the two data words of TObject to their; /// initial values. The unique ID is set to 0 and the status word is; /// set depending if the object is created on the stack or allocated; /// on the heap. Depending on the ROOT environment variable ""Root.ObjStat""; /// (see TEnv) the object is added to the global TObjectTable for; /// bookkeeping.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TObject.h:284,allocate,allocated,284,core/base/inc/TObject.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TObject.h,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// TQObject Constructor.; /// Comment:; /// - In order to minimize memory allocation fListOfSignals and; /// fListOfConnections are allocated only if it is neccesary; /// - When fListOfSignals/fListOfConnections are empty they will; /// be deleted",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TQObject.cxx:215,allocate,allocated,215,core/base/src/TQObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TQObject.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// TXMLDocument destructor.; /// Free the global variables that may; /// have been allocated by the parser.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLDocument.cxx:166,allocate,allocated,166,io/xmlparser/src/TXMLDocument.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xmlparser/src/TXMLDocument.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Tell all of our branches to drop their current objects and allocate new ones.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:145,allocate,allocate,145,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// The LANDAU function.; ///; /// mu is a location parameter and correspond approximately to the most probable value; /// and sigma is a scale parameter (not the sigma of the full distribution which is not defined); /// Note that for mu=0 and sigma=1 (default values) the exact location of the maximum of the distribution; /// (most proper value) is at x = -0.22278; /// This function has been adapted from the CERNLIB routine G110 denlan.; /// If norm=kTRUE (default is kFALSE) the result is divided by sigma",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:477,adapt,adapted,477,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['adapt'],['adapted']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// The area of an image displayed in a pad is defined by this function.; /// Note: the size on the screen is defined by the size of the pad.; /// The original image is not modified by this function.; /// If width or height is larger than the original image they are reduced to; /// the width and height of the image.; /// If the off values are too large (off + width > image width) than the off; /// values are decreased. For example: offX = image width - width; /// Note: the parameters are always relative to the original image not to the; /// size of an already zoomed image.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASImage.cxx:349,reduce,reduced,349,graf2d/asimage/src/TASImage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASImage.cxx,1,['reduce'],['reduced']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// The constructor creates TSpectrum2Transform object. Its sizes must be > than zero and must be power of 2.; /// It sets default transform type to be Cosine transform. Transform parameters can be changed using setter functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:180,power,power,180,hist/spectrum/src/TSpectrum2Transform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx,1,['power'],['power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// The rendering and layout routines should call this routine in order to; /// get a font structure. The iFont parameter specifies which of the N_FONT; /// fonts should be obtained. The font is allocated if necessary.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx:277,allocate,allocated,277,gui/guihtml/src/TGHtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtml.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// This function resolves the specified URI and returns the result in; /// a newly allocated string. The resolver algorithm specified in section; /// 5.2 of RFC 2396 is used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlUri.cxx:166,allocate,allocated,166,gui/guihtml/src/TGHtmlUri.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlUri.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters:; /// - xmin, xmax - fitting region; /// - numberIterations - # of desired iterations in the fit; /// - alpha - convergence coefficient, it should be positive number and <=1, for details see references; /// - statisticType - type of statistics, possible values kFitOptimChiCounts (chi square statistics with counts as weighting coefficients), kFitOptimChiFuncValues (chi square statistics with function values as weighting coefficients),kFitOptimMaxLikelihood; /// - alphaOptim - optimization of convergence algorithm, possible values kFitAlphaHalving, kFitAlphaOptimal; /// - power - possible values kFitPower2,4,6,8,10,12, for details see references. It applies only for Awmi fitting function.; /// - fitTaylor - order of Taylor expansion, possible values kFitTaylorOrderFirst, kFitTaylorOrderSecond. It applies only for Awmi fitting function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:715,power,power,715,hist/spectrum/src/TSpectrumFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx,1,['power'],['power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// This function sets the following fitting parameters:; /// - xmin, xmax, ymin, ymax - fitting region; /// - numberIterations - # of desired iterations in the fit; /// - alpha - convergence coefficient, it should be positive number and <=1, for details see references; /// - statisticType - type of statistics, possible values kFitOptimChiCounts (chi square statistics with counts as weighting coefficients), kFitOptimChiFuncValues (chi square statistics with function values as weighting coefficients),kFitOptimMaxLikelihood; /// - alphaOptim - optimization of convergence algorithm, possible values kFitAlphaHalving, kFitAlphaOptimal; /// - power - possible values kFitPower2,4,6,8,10,12, for details see references. It applies only for Awmi fitting function.; /// - fitTaylor - order of Taylor expansion, possible values kFitTaylorOrderFirst, kFitTaylorOrderSecond. It applies only for Awmi fitting function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:727,power,power,727,hist/spectrum/src/TSpectrum2Fit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx,1,['power'],['power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// This function was adapted from the TGraphAsymmErrors class.; /// See TGraphAsymmErrors::Divide for the documentation; ///; /// Only the first error dimension is affected.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx:104,adapt,adapted,104,hist/hist/src/TGraphMultiErrors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphMultiErrors.cxx,1,['adapt'],['adapted']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// This function will tile original image to specified size with offsets; /// requested, and then it will go though it and adjust hue, saturation and; /// value of those pixels that have specific hue, set by affected_hue/; /// affected_radius parameters. When affected_radius is greater then 180; /// entire image will be adjusted. Note that since grayscale colors have; /// no hue - the will not get adjusted. Only saturation and value will be; /// adjusted in gray pixels.; ///; /// Hue is measured as an angle on a 360 degree circle, The following is; /// relationship of hue values to regular color names :; /// - red - 0; /// - yellow - 60; /// - green - 120; /// - cyan - 180; /// - blue - 240; /// - magenta - 300; /// - red - 360; ///; /// All the hue values in parameters will be adjusted to fall within 0-360 range.; ///; /// \param[in] hue hue in degrees in range 0-360. This allows to limit; /// impact of color adjustment to affect only limited range of hues.; ///; /// \param[in] radius value in degrees to be used in order to; /// calculate the range of affected hues. Range is determined by; /// substracting and adding this value from/to affected_hue.; ///; /// \param[in] H value by which to change hues in affected range.; /// \param[in] S value by which to change saturation of the pixels in affected hue range.; /// \param[in] V value by which to change Value(brightness) of pixels in affected hue range.; ///; /// \param[in] x,y position on infinite surface tiled with original image, of the; /// left-top corner of the area to be used for new image.; ///; /// \param[in] width, height size of the area of the original image to be used for new image.; /// Default is current width, height of the image.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASImage.cxx:735,green,green,735,graf2d/asimage/src/TASImage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASImage.cxx,1,['green'],['green']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// This method specifies the color threshold used by GetColor to retrieve a color.; ///; /// \param[in] t Color threshold. By default is equal to 1./31. or 1./255.; /// depending on the number of available color planes.; ///; /// When GetColor is called, it scans the defined colors and compare them to the; /// requested color.; /// If the Red Green and Blue values passed to GetColor are Rr Gr Br; /// and Rd Gd Bd the values of a defined color. These two colors are considered equal; /// if (abs(Rr-Rd) < t & abs(Br-Bd) < t & abs(Br-Bd) < t). If this test passes,; /// the color defined by Rd Gd Bd is returned by GetColor.; ///; /// To make sure GetColor will return a color having exactly the requested; /// R G B values it is enough to specify a nul :; /// ~~~ {.cpp}; /// TColor::SetColorThreshold(0.);; /// ~~~; ///; /// To reset the color threshold to its default value it is enough to do:; /// ~~~ {.cpp}; /// TColor::SetColorThreshold(-1.);; /// ~~~",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:428,Green,Green,428,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,1,['Green'],['Green']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// This routine calculates the absolute (!) value of the determinant; /// |det| = d1*TMath::Power(2.,d2)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompQRH.cxx:175,Power,Power,175,math/matrix/src/TDecompQRH.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompQRH.cxx,1,['Power'],['Power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Toggle information displayed in Analog Meter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressDialog.cxx:125,Meter,Meter,125,gui/sessionviewer/src/TProofProgressDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/sessionviewer/src/TProofProgressDialog.cxx,1,['Meter'],['Meter']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Try to allocate first a palette of 64 colors. Used by the dithered; /// version of the color maps.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorDialog.cxx:93,allocate,allocate,93,gui/gui/src/TGColorDialog.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorDialog.cxx,1,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Unzips a ROOT specific buffer... by reading the header at the beginning.; /// returns the size of the inflated buffer or -1 if error; /// Note!! : If *dest == 0 we will allocate the buffer and it will be the; /// responsibility of the caller to free it... it is useful for example; /// to pass it to the creator of TBuffer; /// src is the original buffer with the record (header+compressed data); /// *dest is the inflated buffer (including the header)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:255,allocate,allocate,255,tree/tree/src/TTreeCacheUnzip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx,1,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Used to allocate a TObject on the heap (via TObject::operator new()).; /// Directly after this routine one can call (in the TObject ctor); /// TStorage::FilledByObjectAlloc() to find out if the just created object is on; /// the heap. This technique is necessary as there is one stack per thread; /// and we can not rely on comparison with the current stack memory position.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStorage.cxx:94,allocate,allocate,94,core/base/src/TStorage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStorage.cxx,1,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Used to allocate a TObject on the heap (via TObject::operator new(size_t,void*)); /// in position vp. vp is already allocated (maybe on heap, maybe on; /// stack) so just return.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStorage.cxx:94,allocate,allocate,94,core/base/src/TStorage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStorage.cxx,2,['allocate'],"['allocate', 'allocated']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Used to allocate array of TObject on the heap (via TObject::operator new[]()).; /// Unlike the 'singular' ObjectAlloc, we do not mark those object has being; /// allocated on the heap as they can not be individually deleted.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStorage.cxx:94,allocate,allocate,94,core/base/src/TStorage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStorage.cxx,2,['allocate'],"['allocate', 'allocated']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Variant of getAnalyticalIntegral that is also passed the normalization set; /// that should be applied to the integrand of which the integral is requested.; /// For certain operator p.d.f it is useful to overload this function rather; /// than analyticalIntegralWN() as the additional normalization information; /// may be useful in determining a more efficient decomposition of the; /// requested integral.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:438,efficient,efficient,438,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// We have to set kRawSize (unless already done) to allocate buffer space; /// before kRaw can be filled",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TShape.cxx:135,allocate,allocate,135,graf3d/g3d/src/TShape.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TShape.cxx,1,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// We try to read a buffer that has already been unzipped; /// Returns -1 in case of read failure, 0 in case it's not in the; /// cache and n>0 in case read from cache (number of bytes copied).; /// pos and len are the original values as were passed to ReadBuffer; /// but instead we will return the inflated buffer.; /// Note!! : If *buf == 0 we will allocate the buffer and it will be the; /// responsibility of the caller to free it... it is useful for example; /// to pass it to the creator of TBuffer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:435,allocate,allocate,435,tree/tree/src/TTreeCacheUnzip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx,1,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// We use Euclidian metric here. Might not be best or most efficient.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx:142,efficient,efficient,142,tmva/tmva/src/MethodPDERS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx,1,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// Write to disk all the basket that have not yet been individually written and; /// create an event cluster boundary (by default).; ///; /// If the caller wishes to flush the baskets but not create an event cluster,; /// then set create_cluster to false.; ///; /// If ROOT has IMT-mode enabled, this will launch multiple TBB tasks in parallel; /// via TThreadExecutor to do this operation; one per basket compression. If the; /// caller utilizes TBB also, care must be taken to prevent deadlocks.; ///; /// For example, let's say the caller holds mutex A and calls FlushBaskets; while; /// TBB is waiting for the ROOT compression tasks to complete, it may decide to; /// run another one of the user's tasks in this thread. If the second user task; /// tries to acquire A, then a deadlock will occur. The example call sequence; /// looks like this:; ///; /// - User acquires mutex A; /// - User calls FlushBaskets.; /// - ROOT launches N tasks and calls wait.; /// - TBB schedules another user task, T2.; /// - T2 tries to acquire mutex A.; ///; /// At this point, the thread will deadlock: the code may function with IMT-mode; /// disabled if the user assumed the legacy code never would run their own TBB; /// tasks.; ///; /// SO: users of TBB who want to enable IMT-mode should carefully review their; /// locking patterns and make sure they hold no coarse-grained application; /// locks when they invoke ROOT.; ///; /// Return the number of bytes written or -1 in case of write error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1054,schedul,schedules,1054,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['schedul'],['schedules']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// \brief Create a deep copy of the TChainIndex; /// \param[in] newname A new name for the index; ///; /// The new index is allocated on the heap without being managed. Also, it is; /// not attached to any tree. It is the responsibility of the caller to manage; /// its lifetime and attach it to a tree if necessary.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx:207,allocate,allocated,207,tree/treeplayer/src/TChainIndex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// \brief Create a deep copy of the TTreeIndex; /// \param[in] newname A new name for the index; ///; /// The new index is allocated on the heap without being managed. Also, it is; /// not attached to any tree. It is the responsibility of the caller to manage; /// its lifetime and attach it to a tree if necessary.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx:206,allocate,allocated,206,tree/treeplayer/src/TTreeIndex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// \brief Search a branch the name of which contains a "".""; /// \param[out] myLeaf The leaf identified by the name if found (can be untouched).; /// \param[out] branchActualType Dictionary associated to the type of the leaf (can be untouched).; /// \param[out] errMsg The error message (can be untouched).; /// \return The address of the branch if found, nullptr otherwise; /// This method allows to efficiently search for branches which have names which; /// contain ""dots"", for example ""w.v.a"" or ""v.a"".; /// Therefore, it allows to support names such as v.a where the branch was; /// created with this syntax:; /// ```{.cpp}; /// myTree->Branch(""v"", &v, ""a/I:b:/I""); /// ```; /// The method has some side effects, namely it can modify fSetupStatus, fProxy; /// and fStaticClassOffsets/fHaveStaticClassOffsets.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:483,efficient,efficiently,483,tree/treeplayer/src/TTreeReaderValue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx,1,['efficient'],['efficiently']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// \brief Usual Constructor.; /// The defBlockSize parameter defines the size of the blocks of memory allocated; /// when expanding the underlying TMemFileBuffer. If the value 0 is passed, the; /// default block size, fgDefaultBlockSize, is adopted.; /// See the TFile constructor for details.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMemFile.cxx:185,allocate,allocated,185,io/io/src/TMemFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TMemFile.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// algorithm adapted from code example in:; /// Marsaglia, G. and Tsang, W. W.; /// A Simple Method for Generating Gamma Variables; /// ACM Transactions on Mathematical Software, Vol. 26, No. 3, September 2000; ///; /// The speed of this algorithm depends on the speed of generating normal variates.; /// The algorithm is limited to \f$ \gamma \geq 0 \f$ !",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx:96,adapt,adapted,96,roofit/roofit/src/RooGamma.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx,1,['adapt'],['adapted']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// calculate the background efficiency for a given signal efficiency; ///; /// adapted by marc-olivier.bettler@cern.ch",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/OptimizeConfigParameters.cxx:162,adapt,adapted,162,tmva/tmva/src/OptimizeConfigParameters.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/OptimizeConfigParameters.cxx,1,['adapt'],['adapted']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// calculate the background rejection for a given signal efficiency; ///; /// adapted by marc-olivier.bettler@cern.ch",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/OptimizeConfigParameters.cxx:161,adapt,adapted,161,tmva/tmva/src/OptimizeConfigParameters.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/OptimizeConfigParameters.cxx,1,['adapt'],['adapted']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// check if there is any morphing power provided for the given coupling; /// morphing power is provided as soon as any two samples provide; /// different, non-zero values for this coupling",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:117,power,power,117,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,2,['power'],['power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// check if there is any morphing power provided for the given parameter; /// morphing power is provided as soon as any two samples provide different,; /// non-zero values for this parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:117,power,power,117,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,2,['power'],['power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// computation of discrimination power indicator for each variable; /// small values of ""fWith"" indicates little compactness of sig & of backgd; /// big values of ""fBetw"" indicates large separation between sig & backgd; ///; /// we want signal & backgd classes as compact and separated as possible; /// the discriminating power is then defined as the ration ""fBetw/fWith""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx:116,power,power,116,tmva/tmva/src/MethodFisher.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx,2,['power'],['power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// compute also average RMS values required for adaptive Gaussian",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx:131,adapt,adaptive,131,tmva/tmva/src/MethodPDERS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx,1,['adapt'],['adaptive']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// correct for the right/wrong charge...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx:114,charge,charge,114,roofit/roofit/src/RooNonCPEigenDecay.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNonCPEigenDecay.cxx,1,['charge'],['charge']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// declare SA options.; ///; /// - MaxCalls `<int>` maximum number of calls for simulated annealing; /// - TemperatureGradient `<float>` temperature gradient for simulated annealing; /// - UseAdaptiveTemperature `<bool>` use of adaptive temperature for simulated annealing; /// - InitialTemperature `<float>` initial temperature for simulated annealing; /// - MinTemperature `<float>` minimum temperature for simulated annealing; /// - Eps `<int>` number of epochs for simulated annealing; /// - NFunLoops `<int>` number of loops for simulated annealing; /// - NEps `<int>` number of epochs for simulated annealing",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SimulatedAnnealingFitter.cxx:311,adapt,adaptive,311,tmva/tmva/src/SimulatedAnnealingFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/SimulatedAnnealingFitter.cxx,1,['adapt'],['adaptive']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// define the options (their key words) that can be set in the option string.; ///; /// know options:; /// - VolumeRangeMode `<string>` Method to determine volume range; /// available values are:; /// - MinMax; /// - Unscaled; /// - RMS; /// - kNN; /// - Adaptive `<default>`; ///; /// - KernelEstimator `<string>` Kernel estimation function; /// available values are:; /// - Box `<default>`; /// - Sphere; /// - Teepee; /// - Gauss; /// - Sinc3; /// - Sinc5; /// - Sinc7; /// - Sinc9; /// - Sinc11; /// - Lanczos2; /// - Lanczos3; /// - Lanczos5; /// - Lanczos8; /// - Trim; ///; /// - DeltaFrac `<float>` Ratio of #%EventsMin/#%EventsMax for MinMax and RMS volume range; /// - NEventsMin `<int>` Minimum number of events for adaptive volume range; /// - NEventsMax `<int>` Maximum number of events for adaptive volume range; /// - MaxVIterations `<int>` Maximum number of iterations for adaptive volume range; /// - InitialScale `<float>` Initial scale for adaptive volume range; /// - GaussSigma `<float>` Width with respect to the volume size of Gaussian kernel estimator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx:338,Adapt,Adaptive,338,tmva/tmva/src/MethodPDERS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx,5,"['Adapt', 'adapt']","['Adaptive', 'adaptive']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// define the options (their key words) that can be set in the option string; ///; /// know options:; ///; /// PDFInterpol[ivar] `<string>` Spline0, Spline1, Spline2 `<default>`, Spline3, Spline5, KDE used to interpolate reference histograms; /// if no variable index is given, it is valid for ALL the variables; ///; /// - NSmooth `<int>` how often the input histos are smoothed; /// - MinNSmooth `<int>` min number of smoothing iterations, for bins with most data; /// - MaxNSmooth `<int>` max number of smoothing iterations, for bins with least data; /// - NAvEvtPerBin `<int>` minimum average number of events per PDF bin; /// - TransformOutput `<bool>` transform (often strongly peaked) likelihood output through sigmoid inversion; /// - fKDEtype `<KernelType>` type of the Kernel to use (1 is Gaussian); /// - fKDEiter `<KerneIter>` number of iterations (1 --> ""static KDE"", 2 --> ""adaptive KDE""); /// - fBorderMethod `<KernelBorder>` the method to take care about ""border"" effects (1=no treatment , 2=kernel renormalization, 3=sample mirroring)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDF.cxx:971,adapt,adaptive,971,tmva/tmva/src/PDF.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDF.cxx,1,['adapt'],['adaptive']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// display Fisher coefficients and discriminating power for each variable; /// check maximum length of variable name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx:133,power,power,133,tmva/tmva/src/MethodFisher.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx,1,['power'],['power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// fIter == 1 ---> nonadaptive KDE; /// fIter == 2 ---> adaptive KDE",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/KDEKernel.cxx:139,adapt,adaptive,139,tmva/tmva/src/KDEKernel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/KDEKernel.cxx,1,['adapt'],['adaptive']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// fill various monitoring histograms from information of the individual classifiers that; /// have been boosted.; /// of course.... this depends very much on the individual classifiers, and so far, only for; /// Decision Trees, this monitoring is actually implemented",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBoost.cxx:99,monitor,monitoring,99,tmva/tmva/src/MethodBoost.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBoost.cxx,2,['monitor'],['monitoring']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// frees allocated document data and deletes document itself",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx:92,allocate,allocated,92,io/xml/src/TXMLEngine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// get energy scale of the EFT expansion",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:90,energy,energy,90,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,1,['energy'],['energy']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// if size > fMaxSize allocate new arrays of 2*size points and copy iend first; /// points.; /// Return pointer to new arrays.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:105,allocate,allocate,105,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,1,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// if size*2 <= fMaxSize allocate new arrays of size points,; /// copy points [0,oend).; /// Return newarray (passed or new instance if it was zero; /// and allocations are needed)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx:108,allocate,allocate,108,hist/hist/src/TGraph.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraph.cxx,1,['allocate'],['allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// initialize the monitoring ntuple",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodRuleFit.cxx:101,monitor,monitoring,101,tmva/tmva/src/MethodRuleFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodRuleFit.cxx,1,['monitor'],['monitoring']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// normalises the binary-search tree to reduce the branch length and hence speed up the; /// search procedure (on average).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinarySearchTree.cxx:123,reduce,reduce,123,tmva/tmva/src/BinarySearchTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinarySearchTree.cxx,1,['reduce'],['reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// numberPeaks: number of fitted peaks (must be greater than zero); /// the constructor allocates arrays for all fitted parameters (peak positions,; /// amplitudes etc) and sets the member variables to their default values. One; /// can change these variables by member functions (setters) of TSpectrumFit class.; ///; /// Shape function of the fitted; /// peaks contains the two-dimensional symmetrical Gaussian two one-dimensional; /// symmetrical Gaussian ridges as well as non-symmetrical terms and background.; ///; /// \image html spectrum2fit_constructor_image001.gif",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:171,allocate,allocates,171,hist/spectrum/src/TSpectrum2Fit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx,1,['allocate'],['allocates']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// numberPeaks: number of fitted peaks (must be greater than zero); ///; /// the constructor allocates arrays for all fitted parameters (peak positions, amplitudes etc) and sets the member; /// variables to their default values. One can change these variables by member functions (setters) of TSpectrumFit class.; ///; /// Shape function of the fitted peaks is; ///; /// \image html spectrumfit_constructor_image001.gif; ///; /// where a represents vector of; /// fitted parameters (positions p(j), amplitudes A(j), sigma, relative amplitudes; /// T, S and slope B).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx:176,allocate,allocates,176,hist/spectrum/src/TSpectrumFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumFit.cxx,1,['allocate'],['allocates']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// power function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx:86,power,power,86,hist/spectrum/src/TSpectrum2Fit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Fit.cxx,1,['power'],['power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// reduce method count for method called name,; /// removing it from fMethodCounts once the count reaches 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx:86,reduce,reduce,86,html/src/TDocParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/TDocParser.cxx,1,['reduce'],['reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// release all memory, allocated from this node and; /// destroys node itself",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx:106,allocate,allocated,106,io/xml/src/TXMLEngine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx,1,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// set energy scale of the EFT expansion",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:90,energy,energy,90,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,1,['energy'],['energy']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// set the integration type (possible type are) :; ///; /// - 1D integration ( used when only one nuisance and when the posterior is scanned):; /// adaptive , gauss, nonadaptive; /// - multidim:; /// - ADAPTIVE, adaptive numerical integration; /// The parameter numIters (settable with SetNumIters) is the max number of function calls.; /// It can be reduced to make the integration faster but it will be difficult to reach the required tolerance; /// - VEGAS MC integration method based on importance sampling - numIters is number of function calls; /// Extra Vegas parameter can be set using IntegratorMultiDimOptions class; /// - MISER MC integration method based on stratified sampling; /// See also http://en.wikipedia.org/wiki/Monte_Carlo_integration for VEGAS and MISER description; /// - PLAIN simple MC integration method, where the max number of calls can be specified using SetNumIters(numIters); ///; /// Extra integration types are:; ///; /// - TOYMC:; /// evaluate posterior by generating toy MC for the nuisance parameters. It is a MC; /// integration, where the function is sampled according to the nuisance. It is convenient to use when all; /// the nuisance are uncorrelated and it is efficient to generate them; /// The toy are generated by default for each poi values; /// (this method has been proposed and provided by J.P Chou); /// - 1-TOYMC : same method as before but in this case the toys are generated only one time and then used for; /// each poi value. It can be convenient when the generation time is much larger than the evaluation time,; /// otherwise it is recommended to re-generate the toy for each poi scanned point of the posterior function; /// - ROOFIT:; /// use roofit default integration methods which will produce a nested integral (not recommended for more; /// than 1 nuisance parameters)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:231,adapt,adaptive,231,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,5,"['ADAPT', 'adapt', 'efficient', 'reduce']","['ADAPTIVE', 'adaptive', 'efficient', 'reduced']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// standard constructor; ///; /// option string: ""n_training_cycles:n_hidden_layers""; ///; /// default is: n_training_cycles = 5000, n_layers = 4; ///; /// * note that the number of hidden layers in the NN is:; /// n_hidden_layers = n_layers - 2; ///; /// * since there is one input and one output layer. The number of; /// nodes (neurons) is predefined to be:; ///; /// n_nodes[i] = nvars + 1 - i (where i=1..n_layers); ///; /// with nvars being the number of variables used in the NN.; ///; /// Hence, the default case is:; ///; /// n_neurons(layer 1 (input)) : nvars; /// n_neurons(layer 2 (hidden)): nvars-1; /// n_neurons(layer 3 (hidden)): nvars-1; /// n_neurons(layer 4 (out)) : 2; ///; /// This artificial neural network usually needs a relatively large; /// number of cycles to converge (8000 and more). Overtraining can; /// be efficiently tested by comparing the signal and background; /// output of the NN for the events that were used for training and; /// an independent data sample (with equal properties). If the separation; /// performance is significantly better for the training sample, the; /// NN interprets statistical effects, and is hence overtrained. In; /// this case, the number of cycles should be reduced, or the size; /// of the training sample increased.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx:921,efficient,efficiently,921,tmva/tmva/src/MethodCFMlpANN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx,2,"['efficient', 'reduce']","['efficiently', 'reduced']"
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// the constructor creates TSpectrumTransform object. Its size must be > than zero and must be power of 2.; /// It sets default transform type to be Cosine transform. Transform parameters can be changed using setter functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:178,power,power,178,hist/spectrum/src/TSpectrumTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx,1,['power'],['power']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// this function provides the ability to change the learning rate according to; /// the success of the last generations.; ///; /// Parameters:; ///; /// - int ofSteps : = if OF the number of STEPS given in this variable (ofSteps) the; /// rate of improvement has to be calculated; ///; /// using this function one can increase the stepSize of the mutation when we have; /// good success (to pass fast through the easy phase-space) and reduce the learning rate; /// if we are in a difficult ""territory"" of the phase-space.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ConvergenceTest.cxx:518,reduce,reduce,518,tmva/tmva/src/ConvergenceTest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ConvergenceTest.cxx,1,['reduce'],['reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// this function provides the ability to change the stepSize of a mutation according to; /// the success of the last generations.; ///; /// Parameters:; ///; /// - int ofSteps : = if OF the number of STEPS given in this variable (ofSteps); /// - int successSteps : >sucessSteps Generations could improve the result; /// - double factor : than multiply the stepSize ( spread ) by this factor; ///; /// (if ofSteps == successSteps nothing is changed, if ofSteps < successSteps, the spread; /// is divided by the factor); ///; /// using this function one can increase the stepSize of the mutation when we have; /// good success (to pass fast through the easy phase-space) and reduce the stepSize; /// if we are in a difficult ""territory"" of the phase-space.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticAlgorithm.cxx:756,reduce,reduce,756,tmva/tmva/src/GeneticAlgorithm.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticAlgorithm.cxx,1,['reduce'],['reduce']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// write histograms and PDFs to file for monitoring purposes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx:124,monitor,monitoring,124,tmva/tmva/src/MethodCuts.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx,2,['monitor'],['monitoring']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// write special monitoring histograms to file (here ntuple)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodRuleFit.cxx:100,monitor,monitoring,100,tmva/tmva/src/MethodRuleFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodRuleFit.cxx,1,['monitor'],['monitoring']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; /// write special monitoring histograms to file; /// dummy implementation here -----------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:100,monitor,monitoring,100,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,1,['monitor'],['monitoring']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; ///; /// Allocates memory for internal arrays. Called by TFumili::TFumili; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx:91,Allocate,Allocates,91,math/fumili/src/TFumili.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/src/TFumili.cxx,1,['Allocate'],['Allocates']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; ///; /// Log info to the monitoring server",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx:107,monitor,monitoring,107,proof/proof/src/TDataSetManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDataSetManager.cxx,1,['monitor'],['monitoring']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; ///; /// Particle definition normal constructor. If the particle is set to be; /// stable, the decay width parameter does have no meaning and can be set to; /// any value. The parameters granularity, LowerCutOff and HighCutOff are; /// used for the construction of the mean free path look up tables. The; /// granularity will be the number of logwise energy points for which the; /// mean free path will be calculated.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/src/TAttParticle.cxx:433,energy,energy,433,montecarlo/eg/src/TAttParticle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/src/TAttParticle.cxx,2,['energy'],['energy']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; ///Computes sample quantiles, corresponding to the given probabilities; ///; /// \param[in] x the data sample; /// \param[in] n its size; /// \param[out] quantiles computed quantiles are returned in there; /// \param[in] prob probabilities where to compute quantiles; /// \param[in] nprob size of prob array; /// \param[in] isSorted is the input array x sorted ?; /// \param[in] index parameter index; /// \param[in] type method to compute (from 1 to 9).; ///; /// #### NOTE:; /// When the input is not sorted, an array of integers of size n needs; /// to be allocated. It can be passed by the user in parameter index,; /// or, if not passed, it will be allocated inside the function; ///; /// ### Following types are provided:; /// - Discontinuous:; /// - type=1 - inverse of the empirical distribution function; /// - type=2 - like type 1, but with averaging at discontinuities; /// - type=3 - SAS definition: nearest even order statistic; /// - Piecewise linear continuous:; /// - In this case, sample quantiles can be obtained by linear interpolation; /// between the k-th order statistic and p(k).; /// -type=4 - linear interpolation of empirical cdf, p(k)=k/n;; /// - type=5 - a very popular definition, p(k) = (k-0.5)/n;; /// - type=6 - used by Minitab and SPSS, p(k) = k/(n+1);; /// - type=7 - used by S-Plus and R, p(k) = (k-1)/(n-1);; /// - type=8 - resulting sample quantiles are approximately median unbiased; /// regardless of the distribution of x. p(k) = (k-1/3)/(n+1/3);; /// - type=9 - resulting sample quantiles are approximately unbiased, when; /// the sample comes from Normal distribution. p(k)=(k-3/8)/(n+1/4);; ///; /// default type = 7; ///; /// ### References:; /// 1. Hyndman, R.J and Fan, Y, (1996) ""Sample quantiles in statistical packages""; /// American Statistician, 50, 361-365; /// 2. R Project documentation for the function quantile of package {stats}",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:641,allocate,allocated,641,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,2,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; ///For 1d transforms; ///Allocates memory for the input array, and, if inPlace = kFALSE, for the output array",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTComplex.cxx:107,Allocate,Allocates,107,math/fftw/src/TFFTComplex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTComplex.cxx,3,['Allocate'],['Allocates']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; ///For multidim. transforms; ///Allocates memory for the input array, and, if inPlace = kFALSE, for the output array",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTComplex.cxx:114,Allocate,Allocates,114,math/fftw/src/TFFTComplex.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTComplex.cxx,1,['Allocate'],['Allocates']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; ///Private function called when reference count is reduced.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLContext.cxx:133,reduce,reduced,133,graf3d/gl/src/TGLContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLContext.cxx,1,['reduce'],['reduced']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////////; ///[static utility function]/////////////////////////////; ///; /// creates a list containing the full path name for each file; /// in the (colon separated) string ""path1""; ///; /// memory is allocated with ""new"", so; /// whoever calls this function takes responsibility for deleting it.; ///; ///////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:274,allocate,allocated,274,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,1,['allocate'],['allocated']
Energy Efficiency,///////////////////////////////////////////////////////////////////////////////; // ILP scheduler port,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNIterativeScheduler.cpp:88,schedul,scheduler,88,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNIterativeScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNIterativeScheduler.cpp,1,['schedul'],['scheduler']
Energy Efficiency,///////////////////////////////////////////////////////////////////////////////; // Legacy MaxOccupancy Strategy; // Tries to increase occupancy applying minreg scheduler for a sequence of; // most demanding regions. Obtained schedules are saved as BestSchedule for a; // region.; // TargetOcc is the best achievable occupancy for a kernel.; // Returns better occupancy on success or current occupancy on fail.; // BestSchedules aren't deleted on fail.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNIterativeScheduler.cpp:161,schedul,scheduler,161,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNIterativeScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNIterativeScheduler.cpp,2,['schedul'],"['scheduler', 'schedules']"
Energy Efficiency,"///////////////////////////////////////////////////////////////////////////////; /// Convert strings like the following into byte counts; /// 5MB, 5 MB, 5M, 3.7GB, 123b, 456kB, 3.7GiB, 5MiB; /// with some amount of forgiveness baked into the parsing.; /// For this routine we use the official SI unit where the [i] is reserved; /// for the 'legacy' power of two units. 1KB = 1000 bytes, 1KiB = 1024 bytes.; /// \param str the string to be parsed; /// \param value will be updated with the result if and only if the parse is successful and does not overflow for the type of value.; /// \return return a EFromHumanReadableSize enum value indicating the success or failure of the parse.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/StringConv.hxx:349,power,power,349,core/base/inc/ROOT/StringConv.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/StringConv.hxx,1,['power'],['power']
Energy Efficiency,"///////////////////////////////////////////////////////////////////////////////; /// Retrieve the minimum and maximum values in the histogram; ///; /// This will not return a cached value and will always search the; /// histogram for the min and max values. The user can condition whether; /// or not to call this with the GetMinimumStored() and GetMaximumStored(); /// methods. If the cache is empty, then the value will be -1111. Users; /// can then use the SetMinimum() or SetMaximum() methods to cache the results.; /// For example, the following recipe will make efficient use of this method; /// and the cached minimum and maximum values.; //; /// \code{.cpp}; /// Double_t currentMin = pHist->GetMinimumStored();; /// Double_t currentMax = pHist->GetMaximumStored();; /// if ((currentMin == -1111) || (currentMax == -1111)) {; /// pHist->GetMinimumAndMaximum(currentMin, currentMax);; /// pHist->SetMinimum(currentMin);; /// pHist->SetMaximum(currentMax);; /// }; /// \endcode; ///; /// \param min reference to variable that will hold found minimum value; /// \param max reference to variable that will hold found maximum value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:568,efficient,efficient,568,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['efficient'],['efficient']
Energy Efficiency,"/////////////////////////////////////////////////////////////////////////////; /// Add to the group an item of work which will be ran asynchronously.; /// Adding many small items of work to the TTaskGroup is not efficient,; /// unless they run for long enough. If the work to be done is little, look; /// try to express nested parallelism or resort to other constructs such as; /// the TThreadExecutor.; /// Trying to add a work item to the group while it is in waiting state; /// makes the method block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TTaskGroup.cxx:212,efficient,efficient,212,core/imt/src/TTaskGroup.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TTaskGroup.cxx,1,['efficient'],['efficient']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////; /// Allocate more data for the buffer, preserving content",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx:82,Allocate,Allocate,82,io/xml/src/TXMLEngine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLEngine.cxx,1,['Allocate'],['Allocate']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////////; /// \brief Execute a user-defined reduce operation on the values of a column.; /// \tparam F The type of the reduce callable. Automatically deduced.; /// \tparam T The type of the column to apply the reduction to. Automatically deduced.; /// \param[in] f A callable with signature `T(T,T)`; /// \param[in] columnName The column to be reduced. If omitted, the first default column is used instead.; /// \param[in] redIdentity The reduced object of each thread is initialized to this value.; /// \return the reduced quantity wrapped in a RResultPtr.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// auto sumOfIntColWithOffset = d.Reduce([](int x, int y) { return x + y; }, ""intCol"", 42);; /// ~~~; /// See the description of the first Reduce overload for more information.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:112,reduce,reduce,112,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,7,"['Reduce', 'reduce']","['Reduce', 'reduce', 'reduced']"
Energy Efficiency,"///////////////////////////////////////////////////////////////////////////; // //; // default general problem formulation: //; // //; // minimize c' x + ( 1/2 ) x' * Q x ; //; // subject to A x = b ; //; // clo <= C x <= cup ; //; // xlo <= x <= xup ; //; // //; // The general linear equality constraints must have either an upper //; // or lower bound, but need not have both bounds. The variables may have//; // no bounds; an upper bound; a lower bound or both an upper and lower //; // bound. //; // //; // However, for many (possibly most) QP's, the matrices in the //; // formulation have structure that may be exploited to solve the //; // problem more efficiently. This abstract problem formulation contains //; // a setup such that one can derive and add special formulations . //; // The optimality conditions of the simple QP defined above are //; // follows: //; // //; // rQ = c + Q * x - A' * y - C' * z = 0 //; // rA = A * x - b = 0 //; // rC = C * x - s - d = 0 //; // r3 = S * z = 0 //; // s, z >= 0 //; // //; // Where rQ, rA, rC and r3 newly defined quantities known as residual //; // vectors and x, y, z and s are variables of used in solution of the //; // QPs. //; // //; ///////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/inc/TQpProbBase.h:661,efficient,efficiently,661,math/quadp/inc/TQpProbBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/inc/TQpProbBase.h,1,['efficient'],['efficiently']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; // //; // Bswapcpy //; // //; // Initial version: Apr 22, 2000 //; // //; // A set of inline byte swapping routines for arrays. //; // //; // The bswapcpy16() and bswapcpy32() routines are used for packing //; // arrays of basic types into a buffer in a byte swapped order. Use //; // of asm and the `bswap' opcode (available on i486 and up) reduces //; // byte swapping overhead on linux. //; // //; // Use of routines is similar to that of memcpy. //; // //; // ATTENTION: //; // //; // n - is a number of array elements to be copied and byteswapped. //; // (It is not the number of bytes!) //; // //; // Note: It is not safe to call these routines with n == 0. //; // //; // For arrays of short type (2 bytes in size) use bswapcpy16(). //; // For arrays of of 4-byte types (int, float) use bswapcpy32(). //; // //; // //; // Author: Alexandre V. Vaniachine <AVVaniachine@lbl.gov> //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/Bswapcpy.h:418,reduce,reduces,418,core/base/inc/Bswapcpy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/Bswapcpy.h,1,['reduce'],['reduces']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; // //; // TGLScaleManip //; // //; // Scale manipulator - attaches to physical shape and draws local axes //; // widgets with box heads. User can mouse over (turns yellow) and L //; // click/drag to scale along this axis. //; // Widgets use standard 3D package axes colours: X red, Y green, Z blue.//; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLScaleManip.h:360,green,green,360,graf3d/gl/inc/TGLScaleManip.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLScaleManip.h,1,['green'],['green']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; // //; // TGLTransManip //; // //; // Translation manipulator - attaches to physical shape and draws local //; // axes widgets with arrow heads. User can mouse over (turns yellow) and//; // L click/drag to translate along this axis. //; // Widgets use standard 3D package axes colours: X red, Y green, Z blue.//; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLTransManip.h:371,green,green,371,graf3d/gl/inc/TGLTransManip.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLTransManip.h,1,['green'],['green']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; // //; // TMap //; // //; // TMap implements an associative array of (key,value) pairs using a //; // hash table for efficient retrieval (therefore TMap does not conserve //; // the order of the entries). The hash value is calculated //; // using the value returned by the keys Hash() function. Both key and //; // value need to inherit from TObject. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TMap.h:193,efficient,efficient,193,core/cont/inc/TMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/inc/TMap.h,1,['efficient'],['efficient']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; // //; // TMatrixTCramerInv //; // //; // Encapsulate templates of Cramer Inversion routines. //; // //; // The 4x4, 5x5 and 6x6 are adapted from routines written by //; // Mark Fischler and Steven Haywood as part of the CLHEP package //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/inc/TMatrixTCramerInv.h:209,adapt,adapted,209,math/matrix/inc/TMatrixTCramerInv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/inc/TMatrixTCramerInv.h,1,['adapt'],['adapted']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; // //; // TMatrixTSymCramerInv //; // //; // Encapsulate templates of Cramer Inversion routines. //; // //; // The 4x4, 5x5 and 6x6 are adapted from routines written by //; // Mark Fischler and Steven Haywood as part of the CLHEP package //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/inc/TMatrixTSymCramerInv.h:212,adapt,adapted,212,math/matrix/inc/TMatrixTSymCramerInv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/inc/TMatrixTSymCramerInv.h,1,['adapt'],['adapted']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; // //; // TMonitor //; // //; // This class monitors activity on a number of network sockets. //; // The actual monitoring is done by TSystem::DispatchOneEvent(). //; // Typical usage: create a TMonitor object. Register a number of //; // TSocket objects and call TMonitor::Select(). Select() returns the //; // socket object which has data waiting. TSocket objects can be added, //; // removed, (temporary) enabled or disabled. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TMonitor.h:120,monitor,monitors,120,net/net/inc/TMonitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TMonitor.h,2,['monitor'],"['monitoring', 'monitors']"
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; // //; // TObjectSpy, TObjectRefSpy //; // //; // Monitors objects for deletion and reflects the deletion by reverting //; // the internal pointer to zero. When this pointer is zero we know the //; // object has been deleted. This avoids the unsafe TestBit(kNotDeleted) //; // hack. The spied object must have the kMustCleanup bit set otherwise //; // you will get an error. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h:126,Monitor,Monitors,126,core/gui/inc/TObjectSpy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/TObjectSpy.h,1,['Monitor'],['Monitors']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; // //; // TPackMgr //; // //; // The PROOF manager interacts with the PROOF server coordinator to //; // create or destroy a PROOF session, attach to or detach from //; // existing one, and to monitor any client activity on the cluster. //; // At most one manager instance per server is allowed. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TPackMgr.h:269,monitor,monitor,269,proof/proof/inc/TPackMgr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TPackMgr.h,1,['monitor'],['monitor']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; // //; // TProofMgr //; // //; // The PROOF manager interacts with the PROOF server coordinator to //; // create or destroy a PROOF session, attach to or detach from //; // existing one, and to monitor any client activity on the cluster. //; // At most one manager instance per server is allowed. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofMgr.h:270,monitor,monitor,270,proof/proof/inc/TProofMgr.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofMgr.h,1,['monitor'],['monitor']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; // //; // TProofMonSender //; // //; // Provides the interface for PROOF monitoring to different writers. //; // Allows to decouple the information sent from the backend. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSender.h:149,monitor,monitoring,149,proof/proofplayer/inc/TProofMonSender.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TProofMonSender.h,1,['monitor'],['monitoring']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; // //; // TProofQueryResult //; // //; // TQueryResult version adapted to PROOF neeeds. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofQueryResult.h:139,adapt,adapted,139,proof/proof/inc/TProofQueryResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofQueryResult.h,1,['adapt'],['adapted']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; // //; // TStatus //; // //; // This class holds the status of a ongoing operation and collects //; // error messages. It provides a Merge() operation allowing it to //; // be used in PROOF to monitor status in the slaves. //; // No messages indicates success. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatus.h:269,monitor,monitor,269,proof/proofplayer/inc/TStatus.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TStatus.h,1,['monitor'],['monitor']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// Class destructor.; /// This method is in charge of shutting down any remaining worker,; /// closing off connections and reap the terminated children processes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:121,charge,charge,121,core/multiproc/src/TMPClient.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx,1,['charge'],['charge']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// DeActivate a certain socket.; /// This does not remove it from the monitor: it will be reactivated by; /// the next call to Broadcast() (or possibly other methods that are; /// specified to do so).\n; /// A socket should be DeActivated when the corresponding; /// worker is done *for now* and we want to stop listening to this worker's; /// socket. If the worker is done *forever*, Remove() should be used instead.; /// \param s the socket to be deactivated",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:147,monitor,monitor,147,core/multiproc/src/TMPClient.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx,1,['monitor'],['monitor']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// Remove a certain socket from the monitor.; /// A socket should be Removed from the monitor when the; /// corresponding worker is done *forever*. For example HandleMPCode(); /// calls this method on sockets pertaining to workers which sent an; /// MPCode::kShutdownNotice.\n; /// If the worker is done *for now*, DeActivate should be used instead.; /// \param s the socket to be removed from the monitor fMon",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx:113,monitor,monitor,113,core/multiproc/src/TMPClient.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TMPClient.cxx,3,['monitor'],['monitor']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief ""Reduce"" an std::vector into a single object by passing a; /// function as the second argument defining the reduction operation.; ///; /// \param objs A vector of elements to combine.; /// \param redfunc Reduction function to combine the elements of the vector `objs`; /// \return A value result of combining the vector elements into a single object of the same type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx:88,Reduce,Reduce,88,core/base/inc/ROOT/TExecutorCRTP.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief ""Reduce"" an std::vector into a single object by using the object's Merge method.; ///; /// \param mergeObjs A vector of ROOT objects implementing the Merge method; /// \return An object result of merging the vector elements into one.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx:88,Reduce,Reduce,88,core/base/inc/ROOT/TExecutorCRTP.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief ""Reduce"" an std::vector into a single object in parallel by passing a; /// binary function as the second argument defining the reduction operation.; ///; /// \param objs A vector of elements to combine.; /// \param redfunc Binary reduction function to combine the elements of the vector `objs`.; /// \return A value result of combining the vector elements into a single object of the same type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:88,Reduce,Reduce,88,core/imt/inc/ROOT/TThreadExecutor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief ""Reduce"" in parallel an std::vector<double> into a single double value; ///; /// \param objs A vector of elements to combine.; /// \param redfunc Reduction function to combine the elements of the vector `objs`.; /// \return A value result of combining the vector elements into a single object of the same type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:88,Reduce,Reduce,88,core/imt/src/TThreadExecutor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief ""Reduce"" in parallel an std::vector<float> into a single float value; ///; /// \param objs A vector of elements to combine.; /// \param redfunc Reduction function to combine the elements of the vector `objs`.; /// \return A value result of combining the vector elements into a single object of the same type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:88,Reduce,Reduce,88,core/imt/src/TThreadExecutor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief ""Reduce"", sequentially, an std::vector into a single object; ///; /// \param objs A vector of elements to combine.; /// \param redfunc Reduction function to combine the elements of the vector `objs`.; /// \return A value result of combining the vector elements into a single object of the same type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:88,Reduce,Reduce,88,core/imt/inc/ROOT/TThreadExecutor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function `nTimes` (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results if the execution policy is multithreaded.; /// Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed as second argument as a parameter.; /// \param nTimes Number of times function should be called.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `const std::vector<T>` where T; /// is the output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:169,Reduce,Reduce,169,core/imt/inc/ROOT/TExecutor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function `nTimes` in parallel (Map) and accumulate the results into a single value (Reduce).; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,unsigned nTimes,R redfunc)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:181,Reduce,Reduce,181,core/imt/inc/ROOT/TThreadExecutor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx,2,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function in parallel over the elements of a vector (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results.; ///; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,ROOT::TSeq<INTEGER> args,R redfunc,unsigned nChunks)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:202,Reduce,Reduce,202,core/imt/inc/ROOT/TThreadExecutor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function in parallel over the elements of a vector (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results.; ///; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,std::vector<T> &args,R redfunc,unsigned nChunks)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:202,Reduce,Reduce,202,core/imt/inc/ROOT/TThreadExecutor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function in parallel over the elements of a vector (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results.; ///; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,std::vector<T> &args,R redfunc,unsigned nChunks).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx:202,Reduce,Reduce,202,core/multiproc/inc/ROOT/TProcessExecutor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function in parallel over the elements of a vector (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results.; ///; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,unsigned nTimes,R redfunc,unsigned nChunks)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:202,Reduce,Reduce,202,core/imt/inc/ROOT/TThreadExecutor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function in parallel over the elements of an immutable vector (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results.; ///; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,const std::vector<T> &args,R redfunc,unsigned nChunks)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:213,Reduce,Reduce,213,core/imt/inc/ROOT/TThreadExecutor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function in parallel over the elements of an immutable vector (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results.; ///; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,const std::vector<T> &args,R redfunc,unsigned nChunks).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx:213,Reduce,Reduce,213,core/multiproc/inc/ROOT/TProcessExecutor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/ROOT/TProcessExecutor.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function in parallel over the elements of an initializer_list (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results.; ///; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,std::initializer_list<T> args,R redfunc,unsigned nChunks)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:213,Reduce,Reduce,213,core/imt/inc/ROOT/TThreadExecutor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over a sequence of indexes (Map) and accumulate the results into a single value (Reduce).; /// Benefits from partial reduction into `nChunks` intermediate results if the execution policy is multithreaded.; /// Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed assecond argument as a parameter.; /// \param args Sequence of indexes to execute `func` on.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `std::vector<T>` where T is the; /// output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:187,Reduce,Reduce,187,core/imt/inc/ROOT/TExecutor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over a sequence of indexes (Map) and accumulate the results into a single value (Reduce).; ///; /// \param func Function to be executed. Must take an element of the sequence passed assecond argument as a parameter.; /// \param args Sequence of indexes to execute `func` on.; /// \param redfunc Reduction function to combine the results of the calls to `func`. Must return the same type as `func`.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx:187,Reduce,Reduce,187,core/base/inc/ROOT/TExecutorCRTP.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the TObject-inheriting elements of a vector (Map) and merge the objects into a single one (Reduce).; ///; /// \param func Function to be executed on the elements of the vector passed as second parameter.; /// \param args Vector of elements passed as an argument to `func`.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx:202,Reduce,Reduce,202,core/base/inc/ROOT/TExecutorCRTP.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the TObject-inheriting elements of an immutable vector (Map) and merge the objects into a single one (Reduce).; ///; /// \param func Function to be executed on the elements of the vector passed as second parameter.; /// \param args Immutable vector of elements passed as an argument to `func`.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx:213,Reduce,Reduce,213,core/base/inc/ROOT/TExecutorCRTP.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of a vector (Map) and accumulate the results into a single value (Reduce).; ///; /// \param func Function to be executed on the elements of the vector passed as second parameter.; /// \param args Vector of elements passed as an argument to `func`.; /// \param redfunc Reduction function to combine the results of the calls to `func`. Must return the same type as `func`.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx:190,Reduce,Reduce,190,core/base/inc/ROOT/TExecutorCRTP.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of a vector (Map) and accumulate the results into a single value; /// (Reduce). Benefits from partial reduction into `nChunks` intermediate results if the execution policy is; /// multithreaded. Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed assecond argument as a parameter.; /// \param args Vector of elements passed as an argument to `func`.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `const std::vector<T>` where T; /// is the output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:195,Reduce,Reduce,195,core/imt/inc/ROOT/TExecutor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of a vector in parallel (Map) and accumulate the results into a single value (Reduce).; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,std::vector<T> &args,R redfunc)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:202,Reduce,Reduce,202,core/imt/inc/ROOT/TThreadExecutor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of an immutable vector (Map) and accumulate the results into a single value (Reduce).; ///; /// \param func Function to be executed on the elements of the vector passed as second parameter.; /// \param args Immutable vector of elements passed as an argument to `func`.; /// \param redfunc Reduction function to combine the results of the calls to `func`. Must return the same type as `func`.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx:201,Reduce,Reduce,201,core/base/inc/ROOT/TExecutorCRTP.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of an immutable vector (Map) and accumulate the results into a single; /// value (Reduce). Benefits from partial reduction into `nChunks` intermediate results if the execution policy is; /// multithreaded. Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed assecond argument as a parameter.; /// \param args Immutable vector, whose elements are passed as an argument to `func`.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `const std::vector<T>` where T; /// is the output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:206,Reduce,Reduce,206,core/imt/inc/ROOT/TExecutor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of an immutable vector in parallel (Map) and accumulate the results into a single value (Reduce).; /// \copydetails ROOT::Internal::TExecutor::MapReduce(F func,const std::vector<T> &args,R redfunc)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:213,Reduce,Reduce,213,core/imt/inc/ROOT/TThreadExecutor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of an initializer_list (Map) and accumulate the results into a single value (Reduce).; ///; /// \param func Function to be executed on the elements of the initializer_list passed as second parameter.; /// \param args initializer_list for a vector to apply `func` on.; /// \param redfunc Reduction function to combine the results of the calls to `func`. Must return the same type as `func`.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx:201,Reduce,Reduce,201,core/base/inc/ROOT/TExecutorCRTP.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function over the elements of an initializer_list (Map) and accumulate the results into a single; /// value (Reduce). Benefits from partial reduction into `nChunks` intermediate results if the execution policy is; /// multithreaded. Otherwise, <b>it ignores the nChunks argument</b> and performs a normal MapReduce operation.; ///; /// \param func Function to be executed. Must take an element of the sequence passed as second argument as a parameter.; /// \param args initializer_list for a vector to apply `func` on.; /// \param redfunc Reduction function to combine the results of the calls to `func` into partial results, and these; /// into a final result. Must return the same type as `func` and should be callable with `const std::vector<T>` where T; /// is the output of `func`.; /// \param nChunks Number of chunks to split the input data for processing.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx:206,Reduce,Reduce,206,core/imt/inc/ROOT/TExecutor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TExecutor.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \brief Execute a function without arguments several times (Map) and accumulate the results into a single value (Reduce).; ///; /// \param func Function to be executed.; /// \param nTimes Number of times function should be called.; /// \return A vector with the results of the function calls.; /// \param redfunc Reduction function to combine the results of the calls to `func`. Must return the same type as `func`.; /// \return A value result of ""reducing"" the vector returned by the Map operation into a single object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx:192,Reduce,Reduce,192,core/base/inc/ROOT/TExecutorCRTP.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; /// \copydoc ROOT::Internal::TExecutor::Reduce(const std::vector<T> &objs,R redfunc)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx:116,Reduce,Reduce,116,core/imt/inc/ROOT/TThreadExecutor.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/inc/ROOT/TThreadExecutor.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::Internal::RTaskArenaWrapper; /// \ingroup Parallelism; /// \brief Wrapper over tbb::task_arena; ///; /// This class is a wrapper over tbb::task_arena, in order to keep; /// TBB away from ROOT's headers. We keep a single global instance to be; /// used by any parallel ROOT class with TBB as a backend.; ///; /// TThreadExecutor, IMT and any class relying on TBB will get a pointer; /// to the scheduler through `ROOT::Internal::GetGlobalTaskArena()`, which; /// will return areference to the only pointer to the TBB scheduler that; /// will be active in any ROOT Process.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] auto gTA = ROOT::Internal::GetGlobalTaskArena(nWorkers) //get a shared_ptr to the global arena and initialize; /// //it with nWorkers. Enable thread safety in ROOT; /// root[] gTA->TaskArenaSize() // Get the current size of the arena (number of worker threads); /// root[] gTA->Access() //std::unique_ptr to the internal tbb::task_arena for interacting directly with it (needed to; /// //call operations such as execute); /// root[] gTA->Access().max_concurrency() // call to tbb::task_arena::max_concurrency(); /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx:491,schedul,scheduler,491,core/imt/src/RTaskArena.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/RTaskArena.cxx,2,['schedul'],['scheduler']
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TThreadExecutor; /// \ingroup Parallelism; /// \brief This class provides a simple interface to execute the same task; /// multiple times in parallel threads, possibly with different arguments every; /// time.; ///; /// ### ROOT::TThreadExecutor::Map; /// This class inherits its interfaces from ROOT::TExecutorCRTP\n, adapting them for multithreaded; /// parallelism and extends them supporting:; /// * Parallel `Foreach` operations.; /// * Custom task granularity and partial reduction, by specifying reduction function; /// and the number of chunks as extra parameters for the Map call. This is specially useful; /// to reduce the size of intermediate results when dealing with a sizeable number of elements; /// in the input data.; ///; /// The two possible usages of the Map method are:\n; /// * Map(F func, unsigned nTimes): func is executed nTimes with no arguments; /// * Map(F func, T& args): func is executed on each element of the collection of arguments args; ///; /// For either signature, func is executed as many times as needed by a pool of; /// nThreads threads, where nThreads typically defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TThreadExecutor never; /// deletes what it returns, it simply forgets it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:417,adapt,adapting,417,core/imt/src/TThreadExecutor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx,2,"['adapt', 'reduce']","['adapting', 'reduce']"
Energy Efficiency,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPWorkerExecutor; ///; /// This class works together with TProcessExecutor to allow the execution of; /// functions in server processes. Depending on the exact task that the; /// worker is required to execute, a different version of the class; /// can be called.; ///; /// ### TMPWorkerExecutor<F, T, R>; /// The most general case, used by; /// TProcessExecutor::MapReduce(F func, T& args, R redfunc).; /// This worker is build with:; /// * a function of signature F (the one to be executed); /// * a collection of arguments of type T on which to apply the function; /// * a reduce function with signature R to be used to squash many; /// returned values together.; ///; /// ### Partial specializations; /// A few partial specializations are provided for less general cases:; /// * TMPWorkerExecutor<F, T, void> handles the case of a function that takes; /// one argument and does not perform reduce operations; /// (TProcessExecutor::Map(F func, T& args)).; /// * TMPWorkerExecutor<F, void, R> handles the case of a function that takes; /// no arguments, to be executed a specified amount of times, which; /// returned values are squashed together (reduced); /// (TProcessExecutor::Map(F func, unsigned nTimes, R redfunc)); /// * TMPWorkerExecutor<F, void, void> handles the case of a function that takes; /// no arguments and whose arguments are not ""reduced""; /// (TProcessExecutor::Map(F func, unsigned nTimes)); ///; /// Since all the important data are passed to TMPWorkerExecutor at construction; /// time, the kind of messages that client and workers have to exchange; /// are usually very simple.; ///; //////////////////////////////////////////////////////////////////////////; // Quick guide to TMPWorkerExecutor:; // For each TProcessExecutor::Map and TProcessExecutor::MapReduce signature; // there's a corresponding; // specialization of TMPWorkerExecutor:; // * Map(func, nTimes) --> TMPWorker",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h:668,reduce,reduce,668,core/multiproc/inc/TMPWorkerExecutor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h,2,['reduce'],['reduce']
Energy Efficiency,"/////////////////////////////////////////////////////////////////////////; // ALLOCATE SMALL LISTS //; // it is done globally, not for each cell, to save on allocation time //; /////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx:78,ALLOCATE,ALLOCATE,78,math/foam/src/TFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx,2,['ALLOCATE'],['ALLOCATE']
Energy Efficiency,"////////////////////////////////////////////////////////////////////////; /// scan a function wrt tau and determine the minimum; ///; /// \param[in] nPoint number of points to be scanned; /// \param[in] tauMin smallest tau value to study; /// \param[in] tauMax largest tau value to study; /// \param[out] scanResult the scanned function wrt log(tau); /// \param[in] mode 1st parameter for the scan function; /// \param[in] distribution 2nd parameter for the scan function; /// \param[in] projectionMode 3rd parameter for the scan function; /// \param[out] lCurvePlot for monitoring, shows the L-curve; /// \param[out] logTauXPlot for monitoring, L-curve(X) as a function of log(tau); /// \param[out] logTauYPlot for monitoring, L-curve(Y) as a function of log(tau); ///; /// Return value: the coordinate number on the curve <b>scanResult</b>; /// which corresponds to the minimum; /// <br/>; /// The function is scanned by repeating the following steps <b>nPoint</b>; /// times; /// <ol>; /// <li>Choose a value of tau</li>; /// <li>Perform the unfolding for this choice of tau, DoUnfold(tau)</li>; /// <li>Determinethe scan variable GetScanVariable()</li>; /// </ol>; /// The method GetScanVariable() defines scans of correlation; /// coefficients, where <b>mode</b> is chosen from the enum; /// EScanTauMode. In addition one may set <b>distribution</b>; /// and/or <b>projectionMode</b> to refine the calculation of; /// correlations (e.g. restrict the calcuation to the signal; /// distribution and/or exclude underflow and overflow bins).; /// See the documentation of GetScanVariable() for details.; /// Alternative scan variables may be defined by overriding the; /// GetScanVariable() method.; /// <br>; /// Automatic choice of scan range: if (tauMin,tauMax) do not; /// correspond to a valid tau range (e.g. tauMin=tauMax=0.0) then; /// the tau range is determined automatically. Use with care!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:571,monitor,monitoring,571,hist/unfold/src/TUnfoldDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx,3,['monitor'],['monitoring']
Energy Efficiency,"//////////////////////////////////////////////////////////////////; /// Rebin this histogram; ///; /// #### case 1 xbins=0; ///; /// If newname is blank (default), the current histogram is modified and; /// a pointer to it is returned.; ///; /// If newname is not blank, the current histogram is not modified, and a; /// new histogram is returned which is a Clone of the current histogram; /// with its name set to newname.; ///; /// The parameter ngroup indicates how many bins of this have to be merged; /// into one bin of the result.; ///; /// If the original histogram has errors stored (via Sumw2), the resulting; /// histograms has new errors correctly calculated.; ///; /// examples: if h1 is an existing TH1F histogram with 100 bins; ///; /// ~~~ {.cpp}; /// h1->Rebin(); //merges two bins in one in h1: previous contents of h1 are lost; /// h1->Rebin(5); //merges five bins in one in h1; /// TH1F *hnew = dynamic_cast<TH1F*>(h1->Rebin(5,""hnew"")); // creates a new histogram hnew; /// // merging 5 bins of h1 in one bin; /// ~~~; ///; /// NOTE: If ngroup is not an exact divider of the number of bins,; /// the top limit of the rebinned histogram is reduced; /// to the upper edge of the last bin that can make a complete; /// group. The remaining bins are added to the overflow bin.; /// Statistics will be recomputed from the new bin contents.; ///; /// #### case 2 xbins!=0; ///; /// A new histogram is created (you should specify newname).; /// The parameter ngroup is the number of variable size bins in the created histogram.; /// The array xbins must contain ngroup+1 elements that represent the low-edges; /// of the bins.; /// If the original histogram has errors stored (via Sumw2), the resulting; /// histograms has new errors correctly calculated.; ///; /// NOTE: The bin edges specified in xbins should correspond to bin edges; /// in the original histogram. If a bin edge in the new histogram is; /// in the middle of a bin in the original histogram, all entries in; /// the sp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:1173,reduce,reduced,1173,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['reduce'],['reduced']
Energy Efficiency,"////////////////////////////////////////////////////////; /// @param nclients - number of clients; /// @param test_mode; /// 0 - default config, no special threads; /// 1 - reduce http server timer; /// 2 - create special thread in THttpServer and use it; /// 3 - also create special thread for RWebWindow; /// 4 - directly use civetweb threads (only for experts); /// 10 - force longpoll socket with default config",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:173,reduce,reduce,173,tutorials/webgui/ping/ping.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx,1,['reduce'],['reduce']
Energy Efficiency,"////////////////////////////////////////////////////////; /// \brief Define a new column.; /// \param[in] name The name of the defined column.; /// \param[in] expression Function, lambda expression, functor class or any other callable object producing the defined value. Returns the value that will be assigned to the defined column.; /// \param[in] columns Names of the columns/branches in input to the producer function.; /// \return the first node of the computation graph for which the new quantity is defined.; ///; /// Define a column that will be visible from all subsequent nodes; /// of the functional chain. The `expression` is only evaluated for entries that pass; /// all the preceding filters.; /// A new variable is created called `name`, accessible as if it was contained; /// in the dataset from subsequent transformations/actions.; ///; /// Use cases include:; /// * caching the results of complex calculations for easy and efficient multiple access; /// * extraction of quantities of interest from complex objects; ///; /// An exception is thrown if the name of the new column is already in use in this branch of the computation graph.; ///; /// ### Example usage:; /// ~~~{.cpp}; /// // assuming a function with signature:; /// double myComplexCalculation(const RVec<float> &muon_pts);; /// // we can pass it directly to Define; /// auto df_with_define = df.Define(""newColumn"", myComplexCalculation, {""muon_pts""});; /// // alternatively, we can pass the body of the function as a string, as in Filter:; /// auto df_with_define = df.Define(""newColumn"", ""x*x + y*y"");; /// ~~~; ///; /// \note If the body of the string expression contains an explicit `return` statement (even if it is in a nested; /// scope), RDataFrame _will not_ add another one in front of the expression. So this will not work:; /// ~~~{.cpp}; /// df.Define(""x2"", ""Map(v, [](float e) { return e*e; })""); /// ~~~; /// but instead this will:; /// ~~~{.cpp}; /// df.Define(""x2"", ""return Map(v, [](float e) { return ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:982,efficient,efficient,982,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['efficient'],['efficient']
Energy Efficiency,"///////////////////////////////////////////////////; // //; // Scoped array - scope guard for an array. //; // Sometimes, I can not use std::vector, //; // for example, data is allocated in TGCocoa //; // and must be later freed in Objective-C code. //; // To make the code exception-safe, I still //; // have to care about memory, which is already //; // allocated. //; // //; ///////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h:177,allocate,allocated,177,core/macosx/inc/CocoaUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h,2,['allocate'],['allocated']
Energy Efficiency,"////////////////////////////////////////; /// This function computes, to an attempted specified accuracy, the value of; /// the integral; ///; /// \param[in] n Number of dimensions [2,15]; /// \param[in] a,b One-dimensional arrays of length >= N . On entry A[i], and B[i],; /// contain the lower and upper limits of integration, respectively.; /// \param[in] maxpts Maximum number of function evaluations to be allowed.; /// maxpts >= 2^n +2*n*(n+1) +1; /// if maxpts<minpts, maxpts is set to 10*minpts; /// \param[in] epsrel Specified relative accuracy.; /// \param[in] epsabs Specified absolute accuracy.; /// The integration algorithm will attempt to reach either the relative or the absolute accuracy.; /// In case the maximum function called is reached the algorithm will stop earlier without having reached; /// the desired accuracy; ///; /// \param[out] relerr Contains, on exit, an estimation of the relative accuracy of the result.; /// \param[out] nfnevl number of function evaluations performed.; /// \param[out] ifail; /// \parblock; /// 0 Normal exit. At least minpts and at most maxpts calls to the function were performed.; ///; /// 1 maxpts is too small for the specified accuracy eps. The result and relerr contain the values obtainable for the; /// specified value of maxpts.; ///; /// 3 n<2 or n>15; /// \endparblock; ///; /// Method:; ///; /// The default method used is the Genz-Mallik adaptive multidimensional algorithm; /// using the class ROOT::Math::AdaptiveIntegratorMultiDim (see the reference documentation of the class); ///; /// Other methods can be used by setting ROOT::Math::IntegratorMultiDimOptions::SetDefaultIntegrator(); /// to different integrators.; /// Other possible integrators are MC integrators based on the ROOT::Math::GSLMCIntegrator class; /// Possible methods are : Vegas, Miser or Plain; /// IN case of MC integration the accuracy is determined by the number of function calls, one should be; /// careful not to use a too large value of maxpts; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:1447,adapt,adaptive,1447,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,2,"['Adapt', 'adapt']","['AdaptiveIntegratorMultiDim', 'adaptive']"
Energy Efficiency,"///; /// Algorithm Versions.; /// Full Warp Reduce (argument value 0):; /// This algorithm assumes that all 32 lanes are active and gathers; /// data from these 32 lanes, producing a single resultant value.; /// Contiguous Partial Warp Reduce (argument value 1):; /// This algorithm assumes that only a *contiguous* subset of lanes; /// are active. This happens for the last warp in a parallel region; /// when the user specified num_threads is not an integer multiple of; /// 32. This contiguous subset always starts with the zeroth lane.; /// Partial Warp Reduce (argument value 2):; /// This algorithm gathers data from any number of lanes at any position.; /// All reduced values are stored in the lowest possible lane. The set; /// of problems every algorithm addresses is a super set of those; /// addressable by algorithms with a lower version number. Overhead; /// increases as algorithm version increases.; ///; /// Terminology; /// Reduce element:; /// Reduce element refers to the individual data field with primitive; /// data types to be combined and reduced across threads.; /// Reduce list:; /// Reduce list refers to a collection of local, thread-private; /// reduce elements.; /// Remote Reduce list:; /// Remote Reduce list refers to a collection of remote (relative to; /// the current thread) reduce elements.; ///; /// We distinguish between three states of threads that are important to; /// the implementation of this function.; /// Alive threads:; /// Threads in a warp executing the SIMT instruction, as distinguished from; /// threads that are inactive due to divergent control flow.; /// Active threads:; /// The minimal set of threads that has to be alive upon entry to this; /// function. The computation is correct iff active threads are alive.; /// Some threads are alive but they are not active because they do not; /// contribute to the computation in any useful manner. Turning them off; /// may introduce control flow overheads without any tangible benefits.; /// Ef",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:1193,Reduce,Reduce,1193,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,3,"['Reduce', 'reduce']","['Reduce', 'reduced']"
Energy Efficiency,"///; /// Design of OpenMP reductions on the GPU; ///; /// Consider a typical OpenMP program with one or more reduction; /// clauses:; ///; /// float foo;; /// double bar;; /// #pragma omp target teams distribute parallel for \; /// reduction(+:foo) reduction(*:bar); /// for (int i = 0; i < N; i++) {; /// foo += A[i]; bar *= B[i];; /// }; ///; /// where 'foo' and 'bar' are reduced across all OpenMP threads in; /// all teams. In our OpenMP implementation on the NVPTX device an; /// OpenMP team is mapped to a CUDA threadblock and OpenMP threads; /// within a team are mapped to CUDA threads within a threadblock.; /// Our goal is to efficiently aggregate values across all OpenMP; /// threads such that:; ///; /// - the compiler and runtime are logically concise, and; /// - the reduction is performed efficiently in a hierarchical; /// manner as follows: within OpenMP threads in the same warp,; /// across warps in a threadblock, and finally across teams on; /// the NVPTX device.; ///; /// Introduction to Decoupling; ///; /// We would like to decouple the compiler and the runtime so that the; /// latter is ignorant of the reduction variables (number, data types); /// and the reduction operators. This allows a simpler interface; /// and implementation while still attaining good performance.; ///; /// Pseudocode for the aforementioned OpenMP program generated by the; /// compiler is as follows:; ///; /// 1. Create private copies of reduction variables on each OpenMP; /// thread: 'foo_private', 'bar_private'; /// 2. Each OpenMP thread reduces the chunk of 'A' and 'B' assigned; /// to it and writes the result in 'foo_private' and 'bar_private'; /// respectively.; /// 3. Call the OpenMP runtime on the GPU to reduce within a team; /// and store the result on the team master:; ///; /// __kmpc_nvptx_parallel_reduce_nowait_v2(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn); ///; /// where:; /// struct ReduceData {; /// double *foo;; /// double *bar;; /// } reduceData; /// reduc",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:375,reduce,reduced,375,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,3,"['efficient', 'reduce']","['efficiently', 'reduced']"
Energy Efficiency,"///; /// We would like to decouple the compiler and the runtime so that the; /// latter is ignorant of the reduction variables (number, data types); /// and the reduction operators. This allows a simpler interface; /// and implementation while still attaining good performance.; ///; /// Pseudocode for the aforementioned OpenMP program generated by the; /// compiler is as follows:; ///; /// 1. Create private copies of reduction variables on each OpenMP; /// thread: 'foo_private', 'bar_private'; /// 2. Each OpenMP thread reduces the chunk of 'A' and 'B' assigned; /// to it and writes the result in 'foo_private' and 'bar_private'; /// respectively.; /// 3. Call the OpenMP runtime on the GPU to reduce within a team; /// and store the result on the team master:; ///; /// __kmpc_nvptx_parallel_reduce_nowait_v2(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn); ///; /// where:; /// struct ReduceData {; /// double *foo;; /// double *bar;; /// } reduceData; /// reduceData.foo = &foo_private; /// reduceData.bar = &bar_private; ///; /// 'shuffleReduceFn' and 'interWarpCpyFn' are pointers to two; /// auxiliary functions generated by the compiler that operate on; /// variables of type 'ReduceData'. They aid the runtime perform; /// algorithmic steps in a data agnostic manner.; ///; /// 'shuffleReduceFn' is a pointer to a function that reduces data; /// of type 'ReduceData' across two OpenMP threads (lanes) in the; /// same warp. It takes the following arguments as input:; ///; /// a. variable of type 'ReduceData' on the calling lane,; /// b. its lane_id,; /// c. an offset relative to the current lane_id to generate a; /// remote_lane_id. The remote lane contains the second; /// variable of type 'ReduceData' that is to be reduced.; /// d. an algorithm version parameter determining which reduction; /// algorithm to use.; ///; /// 'shuffleReduceFn' retrieves data from the remote lane using; /// efficient GPU shuffle intrinsics and reduces, using the; /// algorithm specified by ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:2031,reduce,reduceData,2031,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['reduce'],['reduceData']
Energy Efficiency,"///; /// \param CGF Reference to current CodeGenFunction.; /// \param Loc Clang source location.; /// \param SchedKind Schedule kind, specified by the 'dist_schedule' clause.; /// \param Values Input arguments for the construct.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h:119,Schedul,Schedule,119,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.h,2,['Schedul'],['Schedule']
Energy Efficiency,///< # of preds not scheduled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:20,schedul,scheduled,20,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['schedul'],['scheduled']
Energy Efficiency,///< # of reg defs with no scheduled use.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:27,schedul,scheduled,27,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['schedul'],['scheduled']
Energy Efficiency,///< # of succs not scheduled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:20,schedul,scheduled,20,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['schedul'],['scheduled']
Energy Efficiency,///< # of weak preds not scheduled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:25,schedul,scheduled,25,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['schedul'],['scheduled']
Energy Efficiency,///< # of weak succs not scheduled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:25,schedul,scheduled,25,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['schedul'],['scheduled']
Energy Efficiency,"///< 128-bit floating point type (two 64-bits, PowerPC)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Type.h:47,Power,PowerPC,47,interpreter/llvm-project/llvm/include/llvm/IR/Type.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Type.h,1,['Power'],['PowerPC']
Energy Efficiency,"///< Adapt to the global flag",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TH1.h:5,Adapt,Adapt,5,hist/hist/inc/TH1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TH1.h,1,['Adapt'],['Adapt']
Energy Efficiency,"///< Allocated size of fBuffer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TFileCacheWrite.h:5,Allocate,Allocated,5,io/io/inc/TFileCacheWrite.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TFileCacheWrite.h,1,['Allocate'],['Allocated']
Energy Efficiency,"///< Allocated size of fBuffer (at a given time)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TFileCacheRead.h:5,Allocate,Allocated,5,io/io/inc/TFileCacheRead.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TFileCacheRead.h,1,['Allocate'],['Allocated']
Energy Efficiency,"///< Allocated size of fSeek",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TFileCacheRead.h:5,Allocate,Allocated,5,io/io/inc/TFileCacheRead.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TFileCacheRead.h,1,['Allocate'],['Allocated']
Energy Efficiency,///< An unknown scheduling barrier.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:16,schedul,scheduling,16,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['schedul'],['scheduling']
Energy Efficiency,"///< Bits to left shift green",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/inc/TGWin32.h:24,green,green,24,graf2d/win32gdk/inc/TGWin32.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/inc/TGWin32.h,2,['green'],['green']
Energy Efficiency,"///< Collection of pre-allocated staged array for associative containers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TGenCollectionProxy.h:23,allocate,allocated,23,io/io/inc/TGenCollectionProxy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TGenCollectionProxy.h,1,['allocate'],['allocated']
Energy Efficiency,///< Could not allocate.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocFast.cpp:15,allocate,allocate,15,interpreter/llvm-project/llvm/lib/CodeGen/RegAllocFast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocFast.cpp,1,['allocate'],['allocate']
Energy Efficiency,"///< Current Green component",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/inc/TTeXDump.h:13,Green,Green,13,graf2d/postscript/inc/TTeXDump.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/inc/TTeXDump.h,1,['Green'],['Green']
Energy Efficiency,"///< Defines if whats currently running is the; // (first) hidden iteration when doing adaptive KDE",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/KDEKernel.h:87,adapt,adaptive,87,tmva/tmva/inc/TMVA/KDEKernel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/KDEKernel.h,1,['adapt'],['adaptive']
Energy Efficiency,"///< Delay the TFile write (to reduce the number of write when reusing the file)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TFileMerger.h:31,reduce,reduce,31,io/io/inc/TFileMerger.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TFileMerger.h,1,['reduce'],['reduce']
Energy Efficiency,"///< File Cache used to reduce the number of individual reads",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TTreeCloner.h:24,reduce,reduce,24,tree/tree/inc/TTreeCloner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TTreeCloner.h,1,['reduce'],['reduce']
Energy Efficiency,"///< Geometric mean of the kernel density estimation from the data for adaptive iteration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TKDE.h:71,adapt,adaptive,71,hist/hist/inc/TKDE.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TKDE.h,1,['adapt'],['adaptive']
Energy Efficiency,"///< Green value divider",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/inc/TGWin32.h:5,Green,Green,5,graf2d/win32gdk/inc/TGWin32.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/inc/TGWin32.h,2,['Green'],['Green']
Energy Efficiency,"///< If non-zero, this specifies max. amount; ///< of memory can be allocated by process. If memory usage will be; ///< higher limit, the child is killed and this call returns. If zero; ///< - no memory limit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Program.h:68,allocate,allocated,68,interpreter/llvm-project/llvm/include/llvm/Support/Program.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Program.h,1,['allocate'],['allocated']
Energy Efficiency,"///< If not this, the node from which this node; /// was cloned. (SD scheduling only)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:69,schedul,scheduling,69,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['schedul'],['scheduling']
Energy Efficiency,"///< Last green value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/inc/TPostScript.h:10,green,green,10,graf2d/postscript/inc/TPostScript.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/inc/TPostScript.h,1,['green'],['green']
Energy Efficiency,"///< Maximum number of bits that can be specified; ///< Note that bit width is stored in the Type classes SubclassData field; ///< which has 24 bits. SelectionDAG type legalization can require a; ///< power of 2 IntegerType, so limit to the largest representable power; ///< of 2, 8388608.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DerivedTypes.h:201,power,power,201,interpreter/llvm-project/llvm/include/llvm/IR/DerivedTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/DerivedTypes.h,2,['power'],['power']
Energy Efficiency,///< Memory allocated (in bytes).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Timer.h:12,allocate,allocated,12,interpreter/llvm-project/llvm/include/llvm/Support/Timer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Timer.h,1,['allocate'],['allocated']
Energy Efficiency,"///< Method to allocate an Environment holder.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TGenCollectionProxy.h:15,allocate,allocate,15,io/io/inc/TGenCollectionProxy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TGenCollectionProxy.h,1,['allocate'],['allocate']
Energy Efficiency,"///< Monitor of the MC weight for measuring MC efficiency",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/inc/TFoam.h:5,Monitor,Monitor,5,math/foam/inc/TFoam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/inc/TFoam.h,1,['Monitor'],['Monitor']
Energy Efficiency,"///< Number of iterations (adaptive or not)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDF.h:27,adapt,adaptive,27,tmva/tmva/inc/TMVA/PDF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDF.h,1,['adapt'],['adaptive']
Energy Efficiency,///< POWER and PowerPC architecture common.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h:5,POWER,POWER,5,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,2,"['POWER', 'Power']","['POWER', 'PowerPC']"
Energy Efficiency,///< PPC970 - PowerPC 64-bit architecture.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h:14,Power,PowerPC,14,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,1,['Power'],['PowerPC']
Energy Efficiency,"///< Per cent of green",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/inc/TPDF.h:17,green,green,17,graf2d/postscript/inc/TPDF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/inc/TPDF.h,2,['green'],['green']
Energy Efficiency,///< Pointer to reduce function,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MicroMipsSizeReduction.cpp:16,reduce,reduce,16,interpreter/llvm-project/llvm/lib/Target/Mips/MicroMipsSizeReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MicroMipsSizeReduction.cpp,1,['reduce'],['reduce']
Energy Efficiency,///< PowerPC common architecture 64-bit mode.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h:5,Power,PowerPC,5,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,1,['Power'],['PowerPC']
Energy Efficiency,///< Reduce one instruction into a smaller instruction,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MicroMipsSizeReduction.cpp:5,Reduce,Reduce,5,interpreter/llvm-project/llvm/lib/Target/Mips/MicroMipsSizeReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MicroMipsSizeReduction.cpp,1,['Reduce'],['Reduce']
Energy Efficiency,///< Reduce two instructions into one instruction,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MicroMipsSizeReduction.cpp:5,Reduce,Reduce,5,interpreter/llvm-project/llvm/lib/Target/Mips/MicroMipsSizeReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MicroMipsSizeReduction.cpp,1,['Reduce'],['Reduce']
Energy Efficiency,///< Scheduling preference.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:5,Schedul,Scheduling,5,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['Schedul'],['Scheduling']
Energy Efficiency,"///< Separation between entries, as a fraction of; ///< The space allocated to one entry.; ///< Typical value is 0.1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/inc/TLegend.h:66,allocate,allocated,66,graf2d/graf/inc/TLegend.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/inc/TLegend.h,1,['allocate'],['allocated']
Energy Efficiency,///< The LLVMContext from which types and; ///< constants are allocated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Module.h:62,allocate,allocated,62,interpreter/llvm-project/llvm/include/llvm/IR/Module.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Module.h,1,['allocate'],['allocated']
Energy Efficiency,///< The scheduling units.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:9,schedul,scheduling,9,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['schedul'],['scheduling']
Energy Efficiency,///< True if preferable to schedule high.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:27,schedul,schedule,27,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['schedul'],['schedule']
Energy Efficiency,///< True if preferable to schedule low.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:27,schedul,schedule,27,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['schedul'],['schedule']
Energy Efficiency,///< True once scheduled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:15,schedul,scheduled,15,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['schedul'],['scheduled']
Energy Efficiency,"///< Use Power(2)-based algorithm for autobinning",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TH1.h:9,Power,Power,9,hist/hist/inc/TH1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TH1.h,1,['Power'],['Power']
Energy Efficiency,"///< adaptive multi-dimensional integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h:5,adapt,adaptive,5,math/mathcore/inc/Math/AllIntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h,1,['adapt'],['adaptive']
Energy Efficiency,"///< callback for monitoring and loggging",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:18,monitor,monitoring,18,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,3,['monitor'],['monitoring']
Energy Efficiency,"///< callback for monitoring and logging",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:18,monitor,monitoring,18,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,4,['monitor'],['monitoring']
Energy Efficiency,"///< contains the Sigmas Widths for adaptive KDE",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/KDEKernel.h:36,adapt,adaptive,36,tmva/tmva/inc/TMVA/KDEKernel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/KDEKernel.h,1,['adapt'],['adaptive']
Energy Efficiency,"///< controls use of adaptive sampling algorithm",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/FeldmanCousins.h:21,adapt,adaptive,21,roofit/roostats/inc/RooStats/FeldmanCousins.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/FeldmanCousins.h,2,['adapt'],['adaptive']
Energy Efficiency,"///< create and fill epoch-wise monitoring histograms (makes outputfile big!); // genetic algorithm variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodMLP.h:32,monitor,monitoring,32,tmva/tmva/inc/TMVA/MethodMLP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodMLP.h,1,['monitor'],['monitoring']
Energy Efficiency,"///< create control plot with ROC integral vs tree number; //some histograms for monitoring",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBDT.h:81,monitor,monitoring,81,tmva/tmva/inc/TMVA/MethodBDT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBDT.h,1,['monitor'],['monitoring']
Energy Efficiency,"///< default adaptive integration type which can be used in the case of the presence of singularities.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h:13,adapt,adaptive,13,math/mathcore/inc/Math/AllIntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AllIntegrationTypes.h,1,['adapt'],['adaptive']
Energy Efficiency,"///< discriminating power",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodFisher.h:20,power,power,20,tmva/tmva/inc/TMVA/MethodFisher.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodFisher.h,1,['power'],['power']
Energy Efficiency,"///< fine tuning factor for Adaptive KDE",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodLikelihood.h:28,Adapt,Adaptive,28,tmva/tmva/inc/TMVA/MethodLikelihood.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodLikelihood.h,2,['Adapt'],['Adaptive']
Energy Efficiency,"///< fine tuning factor for Adaptive KDE: factor to multiply the ""width"" of the Kernel function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/KDEKernel.h:28,Adapt,Adaptive,28,tmva/tmva/inc/TMVA/KDEKernel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/KDEKernel.h,1,['Adapt'],['Adaptive']
Energy Efficiency,"///< for monitoring",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:9,monitor,monitoring,9,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,7,['monitor'],['monitoring']
Energy Efficiency,"///< for monitoring and logging (set the current ""progress"" limits for the display of the progress) \param minProgress minimum value \param maxProgress maximum value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:9,monitor,monitoring,9,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,1,['monitor'],['monitoring']
Energy Efficiency,"///< green component (0..65535)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h:5,green,green,5,core/gui/inc/GuiTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/inc/GuiTypes.h,1,['green'],['green']
Energy Efficiency,"///< green value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/inc/TGX11.h:5,green,green,5,graf2d/x11/inc/TGX11.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/inc/TGX11.h,1,['green'],['green']
Energy Efficiency,"///< how fast temperature change in adaptive (in adaptive two variables describe; /// the change of temperature, but fAdaptiveSpeed should be 1.0 and its not; /// recommended to change it)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SimulatedAnnealingFitter.h:36,adapt,adaptive,36,tmva/tmva/inc/TMVA/SimulatedAnnealingFitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SimulatedAnnealingFitter.h,2,['adapt'],['adaptive']
Energy Efficiency,"///< how fast temperature change in adaptive (in adaptive two variables describe; ///< the change of temperature, but fAdaptiveSpeed should be 1.0 and its not; ///< recommended to change it)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SimulatedAnnealing.h:36,adapt,adaptive,36,tmva/tmva/inc/TMVA/SimulatedAnnealing.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/SimulatedAnnealing.h,2,['adapt'],['adaptive']
Energy Efficiency,"///< initial scale for adaptive volume",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h:23,adapt,adaptive,23,tmva/tmva/inc/TMVA/MethodPDERS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h,1,['adapt'],['adaptive']
Energy Efficiency,"///< matrix for the node, can have reduced number of elements",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomData.hxx:35,reduce,reduced,35,geom/webviewer/inc/ROOT/RGeomData.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomData.hxx,1,['reduce'],['reduced']
Energy Efficiency,"///< maximum number of events in adaptive volume",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h:33,adapt,adaptive,33,tmva/tmva/inc/TMVA/MethodPDERS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h,1,['adapt'],['adaptive']
Energy Efficiency,"///< maximum number of iterations to adapt volume size",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h:37,adapt,adapt,37,tmva/tmva/inc/TMVA/MethodPDERS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h,1,['adapt'],['adapt']
Energy Efficiency,"///< minimum number of events in adaptive volume",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h:33,adapt,adaptive,33,tmva/tmva/inc/TMVA/MethodPDERS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h,1,['adapt'],['adaptive']
Energy Efficiency,"///< monitor the MVA response of every classifier; // MVA output from each classifier over the training hist, using orignal events weights",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBoost.h:5,monitor,monitor,5,tmva/tmva/inc/TMVA/MethodBoost.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBoost.h,1,['monitor'],['monitor']
Energy Efficiency,"///< monitoring ntuple",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBDT.h:5,monitor,monitoring,5,tmva/tmva/inc/TMVA/MethodBDT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBDT.h,1,['monitor'],['monitoring']
Energy Efficiency,"///< pointer to monitor rule ntuple",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodRuleFit.h:16,monitor,monitor,16,tmva/tmva/inc/TMVA/MethodRuleFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodRuleFit.h,1,['monitor'],['monitor']
Energy Efficiency,"///< preparation for monitoring",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:21,monitor,monitoring,21,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,1,['monitor'],['monitoring']
Energy Efficiency,"///< prepared for monitoring",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:18,monitor,monitoring,18,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,1,['monitor'],['monitoring']
Energy Efficiency,"///< produce detailed monitoring histograms (boost-wise)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBoost.h:22,monitor,monitoring,22,tmva/tmva/inc/TMVA/MethodBoost.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBoost.h,1,['monitor'],['monitoring']
Energy Efficiency,"///< remember this one (in case of pruning, it allows to monitor the before/after",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTree.h:57,monitor,monitor,57,tmva/tmva/inc/TMVA/DecisionTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DecisionTree.h,1,['monitor'],['monitor']
Energy Efficiency,"///< size of Gauss in adaptive volume",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h:22,adapt,adaptive,22,tmva/tmva/inc/TMVA/MethodPDERS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h,1,['adapt'],['adaptive']
Energy Efficiency,"///< size of Gauss in adaptive volume (normalised to dimensions)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h:22,adapt,adaptive,22,tmva/tmva/inc/TMVA/MethodPDERS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodPDERS.h,1,['adapt'],['adaptive']
Energy Efficiency,"///< small odo meter (4 digits)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGSpeedo.h:15,meter,meter,15,gui/gui/inc/TGSpeedo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGSpeedo.h,1,['meter'],['meter']
Energy Efficiency,"///< the reduce function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h:9,reduce,reduce,9,core/multiproc/inc/TMPWorkerExecutor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h,2,['reduce'],['reduce']
Energy Efficiency,"///< timer for monitoring",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:15,monitor,monitoring,15,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,1,['monitor'],['monitoring']
Energy Efficiency,"///< tree to monitor values during the boosting",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBoost.h:13,monitor,monitor,13,tmva/tmva/inc/TMVA/MethodBoost.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBoost.h,1,['monitor'],['monitor']
Energy Efficiency,"///< true if fReducedResult can be reduced with a new result, false until we have produced one result",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h:35,reduce,reduced,35,core/multiproc/inc/TMPWorkerExecutor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h,2,['reduce'],['reduced']
Energy Efficiency,"///< virtual function to be used for monitoring (callback)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:37,monitor,monitoring,37,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,1,['monitor'],['monitoring']
Energy Efficiency,"///<! Allocated basket not currently holding any data.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TBranch.h:6,Allocate,Allocated,6,tree/tree/inc/TBranch.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TBranch.h,1,['Allocate'],['Allocated']
Energy Efficiency,"///<! Memory allocated for the cluster range.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TTree.h:13,allocate,allocated,13,tree/tree/inc/TTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TTree.h,1,['allocate'],['allocated']
Energy Efficiency,"///<! Pointer to the Tree being monitored",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePerfStats.h:32,monitor,monitored,32,tree/treeplayer/inc/TTreePerfStats.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePerfStats.h,1,['monitor'],['monitored']
Energy Efficiency,"///<! Size of the allocated coordinate buffer; -1 means none or fCoordinatesSize",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/THnSparse_Internal.h:18,allocate,allocated,18,hist/hist/inc/THnSparse_Internal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/THnSparse_Internal.h,1,['allocate'],['allocated']
Energy Efficiency,"///<! True if last reset re-allocated the memory",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TBasket.h:28,allocate,allocated,28,tree/tree/inc/TBasket.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TBasket.h,1,['allocate'],['allocated']
Energy Efficiency,"///<! level can be reduced when selecting nodes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomData.hxx:19,reduce,reduced,19,geom/webviewer/inc/ROOT/RGeomData.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomData.hxx,1,['reduce'],['reduced']
Energy Efficiency,"///<! reduced and projected points",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REvePolygonSetProjected.hxx:6,reduce,reduced,6,graf3d/eve7/inc/ROOT/REvePolygonSetProjected.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/ROOT/REvePolygonSetProjected.hxx,1,['reduce'],['reduced']
Energy Efficiency,"///<! true when specialized thread allocated for processing requests",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/inc/THttpServer.h:35,allocate,allocated,35,net/http/inc/THttpServer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/inc/THttpServer.h,1,['allocate'],['allocated']
Energy Efficiency,"///<[fMaxTerms] Index of accepted powers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:34,power,powers,34,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['power'],['powers']
Energy Efficiency,"///<[fNVariables] maximum powers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:26,power,powers,26,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['power'],['powers']
Energy Efficiency,"///<[fNVariables] maximum powers from fit;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h:26,power,powers,26,hist/hist/inc/TMultiDimFit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TMultiDimFit.h,1,['power'],['powers']
Energy Efficiency,"///Little adapter that gives a bracket operator to types that don't; ///have one. It completely ignores the index and returns a constant.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/BracketAdapters.h:10,adapt,adapter,10,roofit/roofitmore/src/BracketAdapters.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/BracketAdapters.h,1,['adapt'],['adapter']
Energy Efficiency,"///Prepare GenSpec configuration object for efficient generation of multiple datasets from identical specification.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsPdf.h:44,efficient,efficient,44,roofit/roofitcore/inc/RooAbsPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsPdf.h,1,['efficient'],['efficient']
Energy Efficiency,"///Wrap Reduce function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Executor.h:8,Reduce,Reduce,8,tmva/tmva/inc/TMVA/Executor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Executor.h,1,['Reduce'],['Reduce']
Energy Efficiency,"///\brief Allocate the Value and return the Value; /// for an expression evaluated at the prompt.; ///; ///\param [in] interp - The cling::Interpreter to allocate the SToredValueRef.; ///\param [in] vpQT - The opaque ptr for the clang::QualType of value stored.; ///\param [out] vpStoredValRef - The Value that is allocated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:10,Allocate,Allocate,10,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,3,"['Allocate', 'allocate']","['Allocate', 'allocate', 'allocated']"
Energy Efficiency,"///\brief Allocate the memory needed by the AllocatedValue managing; /// an object of payloadSize bytes, and return the address of the; /// payload object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp:10,Allocate,Allocate,10,interpreter/cling/lib/Interpreter/Value.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp,2,['Allocate'],"['Allocate', 'AllocatedValue']"
Energy Efficiency,"///\brief Constructs the callbacks with default callback adaptors.; ///; ///\param[in] interp - an interpreter.; ///\param[in] enableExternalSemaSourceCallbacks - creates a default; /// InterpreterExternalSemaSource and attaches it to Sema.; ///\param[in] enablePPCallbacks - creates a default InterpreterPPCallbacks; /// and attaches it to the Preprocessor.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h:57,adapt,adaptors,57,interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/InterpreterCallbacks.h,1,['adapt'],['adaptors']
Energy Efficiency,"///\brief Initialize the storage management part of the allocated object.; /// The allocator is referencing it, thus initialize m_RefCnt with 1.; ///\param [in] dtorFunc - the function to be called before deallocation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp:56,allocate,allocated,56,interpreter/cling/lib/Interpreter/Value.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp,1,['allocate'],['allocated']
Energy Efficiency,"///\brief Pool of reusable block-allocated transactions.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.h:33,allocate,allocated,33,interpreter/cling/lib/Interpreter/IncrementalParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.h,1,['allocate'],['allocated']
Energy Efficiency,"///\brief Set the value of the Generic value and return the address; /// for the allocated storage space.; ///\param [in] vpI - The cling::Interpreter for Value.; ///\param [in] vpQT - The opaque ptr for the clang::QualType of value.; ///\param [in] vpT - The opaque ptr for the cling::Transaction.; ///\param [out] vpV - The Value that is created.; ///; ///\returns the address where the value should be put.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h:81,allocate,allocated,81,interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/RuntimeUniverse.h,1,['allocate'],['allocated']
Energy Efficiency,"///\brief This object must be allocated as a char array. Deallocate it as; /// such.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp:30,allocate,allocated,30,interpreter/cling/lib/Interpreter/Value.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/Value.cpp,1,['allocate'],['allocated']
Energy Efficiency,"///\brief Wrappers around buffered llvm::raw_ostreams.; /// outstring<N> with N > 0 are the fastest, using a stack allocated buffer.; /// outstring<0> outputs directly into a std:string.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Output.h:115,allocate,allocated,115,interpreter/cling/include/cling/Utils/Output.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Utils/Output.h,1,['allocate'],['allocated']
Energy Efficiency,"//::Error(""AdaptiveIntegratorMultiDim::DoIntegral()"", ""Logic error: idvax0 < 1!"");",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:11,Adapt,AdaptiveIntegratorMultiDim,11,math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,1,['Adapt'],['AdaptiveIntegratorMultiDim']
Energy Efficiency,"//; // Allocate and initialize the basket control arrays.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:7,Allocate,Allocate,7,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['Allocate'],['Allocate']
Energy Efficiency,"//; // Always take the last min.; // For each step the risk is reduced.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:63,reduce,reduced,63,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,1,['reduce'],['reduced']
Energy Efficiency,"//; // Conversion to unsigned i64 is implemented with a select,; // depending on whether the source value fits in the range; // of a signed i64. Let Thresh be the FP equivalent of; // 0x8000000000000000ULL.; //; // Adjust = (Value >= Thresh) ? 0x80000000 : 0;; // FltOfs = (Value >= Thresh) ? 0x80000000 : 0;; // FistSrc = (Value - FltOfs);; // Fist-to-mem64 FistSrc; // Add 0 or 0x800...0ULL to the 64-bit result, which is equivalent; // to XOR'ing the high 32 bits with Adjust.; //; // Being a power of 2, Thresh is exactly representable in all FP formats.; // For X87 we'd like to use the smallest FP type for this constant, but; // for DAG type consistency we have to match the FP operand type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:496,power,power,496,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['power'],['power']
Energy Efficiency,"//; // Electric charge [Q]; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h:16,charge,charge,16,geom/geom/inc/TGeant4SystemOfUnits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h,2,['charge'],['charge']
Energy Efficiency,"//; // EmitSchedModel - Emits all scheduling model tables, folding common patterns.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp:34,schedul,scheduling,34,interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/SubtargetEmitter.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"//; // Establish the semantics of fObject and fAddress.; //; // Top-level branch:; // fObject is a ptr to the object,; // fAddress is a ptr to a pointer to the object.; //; // Sub-branch:; // fObject is a ptr to the object,; // fAddress is the same as fObject.; //; //; // There are special cases for TClonesArray and STL containers.; // If there is no user-provided object, we allocate one. We must; // also initialize any STL container proxy.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:378,allocate,allocate,378,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['allocate'],['allocate']
Energy Efficiency,"//; // Free the allocated memory.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:16,allocate,allocated,16,core/winnt/src/TWinNTSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx,1,['allocate'],['allocated']
Energy Efficiency,"//; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a pass that performs optimization on SIMD instructions; // with high latency by splitting them into more efficient series of; // instructions.; //; // 1. Rewrite certain SIMD instructions with vector element due to their; // inefficiency on some targets.; //; // For example:; // fmla v0.4s, v1.4s, v2.s[1]; //; // Is rewritten into:; // dup v3.4s, v2.s[1]; // fmla v0.4s, v1.4s, v3.4s; //; // 2. Rewrite interleaved memory access instructions due to their; // inefficiency on some targets.; //; // For example:; // st2 {v0.4s, v1.4s}, addr; //; // Is rewritten into:; // zip1 v2.4s, v0.4s, v1.4s; // zip2 v3.4s, v0.4s, v1.4s; // stp q2, q3, addr; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SIMDInstrOpt.cpp:425,efficient,efficient,425,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SIMDInstrOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64SIMDInstrOpt.cpp,1,['efficient'],['efficient']
Energy Efficiency,"//; // Power [E][T^-1]; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h:7,Power,Power,7,geom/geom/inc/TGeant4SystemOfUnits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h,2,['Power'],['Power']
Energy Efficiency,"//; // SetAddress may have allocated an object.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:27,allocate,allocated,27,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['allocate'],['allocated']
Energy Efficiency,"//; // Stack probing allocation.; //; // Fixed length allocation. If we don't need to re-align the stack and don't; // have SVE objects, we can use a more efficient sequence for stack probing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:155,efficient,efficient,155,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['efficient'],['efficient']
Energy Efficiency,//; // Warp 0 copies reduce element from transfer medium.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:21,reduce,reduce,21,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['reduce'],['reduce']
Energy Efficiency,//; // Warp master copies reduce element to transfer medium in __shared__; // memory.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:26,reduce,reduce,26,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['reduce'],['reduce']
Energy Efficiency,"//; //--------------------; // loop over the paths; //--------------------; // The number of MAXIMUM loops is given by nscan.; // At each loop, the paths being far away from the minimum; // are rejected. Hence at each check (every netst events), the number; // of paths searched will be reduced.; // The maximum 'distance' from the minimum error rate is; // 1 sigma. See RiskPerfTst() for details.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx:287,reduce,reduced,287,tmva/tmva/src/RuleFitParams.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleFitParams.cxx,1,['reduce'],['reduced']
Energy Efficiency,"//; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.; /// \endparblock; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; /// **Note:** the user should take care of initializing random seeds differently in each; /// process (e.g. using the process id in the seed). Otherwise several parallel executions; /// might generate the same sequence of pseudo-random numbers.; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; ///; /// #### Examples:; ///; /// ~~~{.cpp}; /// root[] ROOT::TProcessExecutor pool; auto hists = pool.Map(CreateHisto, 10);; /// root[] ROOT::TProcessExecutor pool(2); auto squares = pool.Map([](int a) { return a*a; }, {1,2,3});; /// ~~~; ///; /// ###ROOT::TProcessExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object.; ///; /// ####Examples:; /// ~~~{.cpp}; /// root[] ROOT::TProcessExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int> &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::TProcessExecutor pool; auto hist = pool.MapReduce(CreateAndFillHists, 10, PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TProcessExecutor.cxx:3334,Reduce,ReduceObjects,3334,core/multiproc/src/TProcessExecutor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/src/TProcessExecutor.cxx,1,['Reduce'],['ReduceObjects']
Energy Efficiency,"//; /// `if ncolors == 1 && colors == 0`, a Rainbow Color map is created; /// with 50 colors. It is kept for backward compatibility. Better palettes like; /// kBird are recommended.; ///; /// High quality predefined palettes with 255 colors are available when `colors == 0`.; /// The following value of `ncolors` give access to:; ///; /// ~~~ {.cpp}; /// if ncolors = 51 and colors=0, a Deep Sea palette is used.; /// if ncolors = 52 and colors=0, a Grey Scale palette is used.; /// if ncolors = 53 and colors=0, a Dark Body Radiator palette is used.; /// if ncolors = 54 and colors=0, a Two-Color Hue palette is used.(dark blue through neutral gray to bright yellow); /// if ncolors = 55 and colors=0, a Rain Bow palette is used.; /// if ncolors = 56 and colors=0, an Inverted Dark Body Radiator palette is used.; /// if ncolors = 57 and colors=0, a monotonically increasing L value palette is used.; /// if ncolors = 58 and colors=0, a Cubehelix palette is used; /// (Cf. Dave Green's ""cubehelix"" colour scheme at http://www.mrao.cam.ac.uk/~dag/CUBEHELIX/); /// if ncolors = 59 and colors=0, a Green Red Violet palette is used.; /// if ncolors = 60 and colors=0, a Blue Red Yellow palette is used.; /// if ncolors = 61 and colors=0, an Ocean palette is used.; /// if ncolors = 62 and colors=0, a Color Printable On Grey palette is used.; /// if ncolors = 63 and colors=0, an Alpine palette is used.; /// if ncolors = 64 and colors=0, an Aquamarine palette is used.; /// if ncolors = 65 and colors=0, an Army palette is used.; /// if ncolors = 66 and colors=0, an Atlantic palette is used.; /// if ncolors = 67 and colors=0, an Aurora palette is used.; /// if ncolors = 68 and colors=0, an Avocado palette is used.; /// if ncolors = 69 and colors=0, a Beach palette is used.; /// if ncolors = 70 and colors=0, a Black Body palette is used.; /// if ncolors = 71 and colors=0, a Blue Green Yellow palette is used.; /// if ncolors = 72 and colors=0, a Brown Cyan palette is used.; /// if ncolors = 73 a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:1883,Green,Green,1883,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,1,['Green'],['Green']
Energy Efficiency,"//; //Composition of TH3 objects. All TH3 must have the same axis range; //and the same number of bins. If this condition is violated,; //AddTH3 will throw.; //IMPORTANT: TGLTH3Composition does not own TH3 objects; //it contains.; //This class inherits TH3 - to re-use TH3 editor.; //I use TH3C to reduce memory usage.; //Slising is not implemeted yet.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLTH3Composition.h:298,reduce,reduce,298,graf3d/gl/inc/TGLTH3Composition.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLTH3Composition.h,1,['reduce'],['reduce']
Energy Efficiency,"//=- llvm/CodeGen/DFAPacketizer.cpp - DFA Packetizer for VLIW -*- C++ -*-=====//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // This class implements a deterministic finite automaton (DFA) based; // packetizing mechanism for VLIW architectures. It provides APIs to; // determine whether there exists a legal mapping of instructions to; // functional unit assignments in a packet. The DFA is auto-generated from; // the target's Schedule.td file.; //; // A DFA consists of 3 major elements: states, inputs, and transitions. For; // the packetizing mechanism, the input is the set of instruction classes for; // a target. The state models all possible combinations of functional unit; // consumption for a given set of instructions in a packet. A transition; // models the addition of an instruction to a packet. In the DFA constructed; // by this class, if an instruction can be added to a packet, then a valid; // transition exists from the corresponding state. Invalid transitions; // indicate that the instruction cannot be added to the current packet.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/DFAPacketizer.cpp:679,Schedul,Schedule,679,interpreter/llvm-project/llvm/lib/CodeGen/DFAPacketizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/DFAPacketizer.cpp,2,"['Schedul', 'consumption']","['Schedule', 'consumption']"
Energy Efficiency,"//=- llvm/CodeGen/MultiHazardRecognizer.h - Scheduling Support ----*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the MultiHazardRecognizer class, which is a wrapper; // for a set of ScheduleHazardRecognizer instances; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MultiHazardRecognizer.h:44,Schedul,Scheduling,44,interpreter/llvm-project/llvm/include/llvm/CodeGen/MultiHazardRecognizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MultiHazardRecognizer.h,2,['Schedul'],"['ScheduleHazardRecognizer', 'Scheduling']"
Energy Efficiency,"//=- llvm/CodeGen/ScheduleHazardRecognizer.h - Scheduling Support -*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the ScheduleHazardRecognizer class, which implements; // hazard-avoidance heuristics for scheduling.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleHazardRecognizer.h:18,Schedul,ScheduleHazardRecognizer,18,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleHazardRecognizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleHazardRecognizer.h,4,"['Schedul', 'schedul']","['ScheduleHazardRecognizer', 'Scheduling', 'scheduling']"
Energy Efficiency,"//=- llvm/CodeGen/ScoreboardHazardRecognizer.h - Schedule Support -*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the ScoreboardHazardRecognizer class, which; // encapsulates hazard-avoidance heuristics for scheduling, based on the; // scheduling itineraries specified for the target.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScoreboardHazardRecognizer.h:49,Schedul,Schedule,49,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScoreboardHazardRecognizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScoreboardHazardRecognizer.h,3,"['Schedul', 'schedul']","['Schedule', 'scheduling']"
Energy Efficiency,"//=-- SystemZHazardRecognizer.h - SystemZ Hazard Recognizer -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares a hazard recognizer for the SystemZ scheduler.; //; // This class is used by the SystemZ scheduling strategy to maintain; // the state during scheduling, and provide cost functions for; // scheduling candidates. This includes:; //; // * Decoder grouping. A decoder group can maximally hold 3 uops, and; // instructions that always begin a new group should be scheduled when; // the current decoder group is empty.; // * Processor resources usage. It is beneficial to balance the use of; // resources.; //; // A goal is to consider all instructions, also those outside of any; // scheduling region. Such instructions are ""advanced"" past and include; // single instructions before a scheduling region, branches etc.; //; // A block that has only one predecessor continues scheduling with the state; // of it (which may be updated by emitting branches).; //; // ===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h:438,schedul,scheduler,438,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.h,8,['schedul'],"['scheduled', 'scheduler', 'scheduling']"
Energy Efficiency,"//=-- SystemZHazardRecognizer.h - SystemZ Hazard Recognizer -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a hazard recognizer for the SystemZ scheduler.; //; // This class is used by the SystemZ scheduling strategy to maintain; // the state during scheduling, and provide cost functions for; // scheduling candidates. This includes:; //; // * Decoder grouping. A decoder group can maximally hold 3 uops, and; // instructions that always begin a new group should be scheduled when; // the current decoder group is empty.; // * Processor resources usage. It is beneficial to balance the use of; // resources.; //; // A goal is to consider all instructions, also those outside of any; // scheduling region. Such instructions are ""advanced"" past and include; // single instructions before a scheduling region, branches etc.; //; // A block that has only one predecessor continues scheduling with the state; // of it (which may be updated by emitting branches).; //; // ===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.cpp:437,schedul,scheduler,437,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZHazardRecognizer.cpp,8,['schedul'],"['scheduled', 'scheduler', 'scheduling']"
Energy Efficiency,"//== WebAssemblyMemIntrinsicResults.cpp - Optimize memory intrinsic results ==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file implements an optimization pass using memory intrinsic results.; ///; /// Calls to memory intrinsics (memcpy, memmove, memset) return the destination; /// address. They are in the form of; /// %dst_new = call @memcpy %dst, %src, %len; /// where %dst and %dst_new registers contain the same value.; ///; /// This is to enable an optimization wherein uses of the %dst register used in; /// the parameter can be replaced by uses of the %dst_new register used in the; /// result, making the %dst register more likely to be single-use, thus more; /// likely to be useful to register stackifying, and potentially also exposing; /// the call instruction itself to register stackifying. These both can reduce; /// local.get/local.set traffic.; ///; /// The LLVM intrinsics for these return void so they can't use the returned; /// attribute and consequently aren't handled by the OptimizeReturned pass.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyMemIntrinsicResults.cpp:1100,reduce,reduce,1100,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyMemIntrinsicResults.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyMemIntrinsicResults.cpp,1,['reduce'],['reduce']
Energy Efficiency,"//==- AArch64PromoteConstant.cpp - Promote constant to global for AArch64 --==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the AArch64PromoteConstant pass which promotes constants; // to global variables when this is likely to be more efficient. Currently only; // types related to constant vector (i.e., constant vector, array of constant; // vectors, constant structure with a constant vector field, etc.) are promoted; // to global variables. Constant vectors are likely to be lowered in target; // constant pool during instruction selection already; therefore, the access; // will remain the same (memory load), but the structure types are not split; // into different constant pool accesses for each field. A bonus side effect is; // that created globals may be merged by the global merge pass.; //; // FIXME: This pass may be useful for other targets too.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64PromoteConstant.cpp:516,efficient,efficient,516,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64PromoteConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64PromoteConstant.cpp,1,['efficient'],['efficient']
Energy Efficiency,"//==- ConstantHoisting.h - Prepare code for expensive constants --*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass identifies expensive constants to hoist and coalesces them to; // better prepare it for SelectionDAG-based code generation. This works around; // the limitations of the basic-block-at-a-time approach.; //; // First it scans all instructions for integer constants and calculates its; // cost. If the constant can be folded into the instruction (the cost is; // TCC_Free) or the cost is just a simple operation (TCC_BASIC), then we don't; // consider it expensive and leave it alone. This is the default behavior and; // the default implementation of getIntImmCostInst will always return TCC_Free.; //; // If the cost is more than TCC_BASIC, then the integer constant can't be folded; // into the instruction and it might be beneficial to hoist the constant.; // Similar constants are coalesced to reduce register pressure and; // materialization code.; //; // When a constant is hoisted, it is also hidden behind a bitcast to force it to; // be live-out of the basic block. Otherwise the constant would be just; // duplicated and each basic block would have its own copy in the SelectionDAG.; // The SelectionDAG recognizes such constants as opaque and doesn't perform; // certain transformations on them, which would create a new expensive constant.; //; // This optimization is only applied to integer constants in instructions and; // simple (this means not nested) constant cast expressions. For example:; // %0 = load i64* inttoptr (i64 big_constant to i64*); //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/ConstantHoisting.h:1189,reduce,reduce,1189,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/ConstantHoisting.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/ConstantHoisting.h,1,['reduce'],['reduce']
Energy Efficiency,"//==- SystemZMachineScheduler.h - SystemZ Scheduler Interface ----*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // -------------------------- Post RA scheduling ---------------------------- //; // SystemZPostRASchedStrategy is a scheduling strategy which is plugged into; // the MachineScheduler. It has a sorted Available set of SUs and a pickNode(); // implementation that looks to optimize decoder grouping and balance the; // usage of processor resources. Scheduler states are saved for the end; // region of each MBB, so that a successor block can learn from it.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h:42,Schedul,Scheduler,42,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZMachineScheduler.h,4,"['Schedul', 'schedul']","['Scheduler', 'scheduling']"
Energy Efficiency,"//==- llvm/Analysis/MemoryBuiltins.h - Calls to memory builtins --*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This family of functions identifies calls to builtin functions that allocate; // or free memory.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h:451,allocate,allocate,451,interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h,1,['allocate'],['allocate']
Energy Efficiency,"//==- llvm/CodeGen/AggressiveAntiDepBreaker.h - Anti-Dep Support -*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the AggressiveAntiDepBreaker class, which; // implements register anti-dependence breaking during post-RA; // scheduling. It attempts to break all anti-dependencies within a; // block.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.h:514,schedul,scheduling,514,interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.h,1,['schedul'],['scheduling']
Energy Efficiency,"//==- llvm/Support/ArrayRecycler.h - Recycling of Arrays ---------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the ArrayRecycler class template which can recycle small; // arrays allocated from one of the allocators in Allocator.h; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ArrayRecycler.h:469,allocate,allocated,469,interpreter/llvm-project/llvm/include/llvm/Support/ArrayRecycler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ArrayRecycler.h,1,['allocate'],['allocated']
Energy Efficiency,"//==--- MacOSKeychainAPIChecker.cpp ------------------------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // This checker flags misuses of KeyChainAPI. In particular, the password data; // allocated/returned by SecKeychainItemCopyContent,; // SecKeychainFindGenericPassword, SecKeychainFindInternetPassword functions has; // to be freed using a call to SecKeychainItemFreeContent.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MacOSKeychainAPIChecker.cpp:459,allocate,allocated,459,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MacOSKeychainAPIChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MacOSKeychainAPIChecker.cpp,1,['allocate'],['allocated']
Energy Efficiency,"//==------ llvm/CodeGen/LoopTraversal.h - Loop Traversal -*- C++ -*---------==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Loop Traversal logic.; ///; /// This class provides the basic blocks traversal order used by passes like; /// ReachingDefAnalysis and ExecutionDomainFix.; /// It identifies basic blocks that are part of loops and should to be visited; /// twice and returns efficient traversal order for all the blocks.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LoopTraversal.h:647,efficient,efficient,647,interpreter/llvm-project/llvm/include/llvm/CodeGen/LoopTraversal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LoopTraversal.h,1,['efficient'],['efficient']
Energy Efficiency,"//=== HexagonSplitConst32AndConst64.cpp - split CONST32/Const64 into HI/LO ===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // When the compiler is invoked with no small data, for instance, with the -G0; // command line option, then all CONST* opcodes should be broken down into; // appropriate LO and HI instructions. This splitting is done by this pass.; // The only reason this is not done in the DAG lowering itself is that there; // is no simple way of getting the register allocator to allot the same hard; // register to the result of LO and HI instructions. This pass is always; // scheduled after register allocation.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSplitConst32AndConst64.cpp:846,schedul,scheduled,846,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSplitConst32AndConst64.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonSplitConst32AndConst64.cpp,1,['schedul'],['scheduled']
Energy Efficiency,"//=== MicroMipsSizeReduction.cpp - MicroMips size reduction pass --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///\file; /// This pass is used to reduce the size of instructions where applicable.; ///; /// TODO: Implement microMIPS64 support.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MicroMipsSizeReduction.cpp:409,reduce,reduce,409,interpreter/llvm-project/llvm/lib/Target/Mips/MicroMipsSizeReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MicroMipsSizeReduction.cpp,1,['reduce'],['reduce']
Energy Efficiency,"//=== OrcV2CBindingsMemoryManager.c - OrcV2 Memory Manager C Bindings Demo ===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This demo illustrates the C-API bindings for custom memory managers in; // ORCv2. They are used here to place generated code into manually allocated; // buffers that are subsequently marked as executable.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/OrcV2CBindingsMCJITLikeMemoryManager/OrcV2CBindingsMCJITLikeMemoryManager.c:522,allocate,allocated,522,interpreter/llvm-project/llvm/examples/OrcV2Examples/OrcV2CBindingsMCJITLikeMemoryManager/OrcV2CBindingsMCJITLikeMemoryManager.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/OrcV2CBindingsMCJITLikeMemoryManager/OrcV2CBindingsMCJITLikeMemoryManager.c,1,['allocate'],['allocated']
Energy Efficiency,"//=== SourceMgrAdapter.cpp - SourceMgr to SourceManager Adapter -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the adapter that maps diagnostics from llvm::SourceMgr; // to Clang's SourceManager.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceMgrAdapter.cpp:56,Adapt,Adapter,56,interpreter/llvm-project/clang/lib/Basic/SourceMgrAdapter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/SourceMgrAdapter.cpp,2,"['Adapt', 'adapt']","['Adapter', 'adapter']"
Energy Efficiency,"//=== SourceMgrAdapter.h - SourceMgr to SourceManager Adapter ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides an adapter that maps diagnostics from llvm::SourceMgr; // to Clang's SourceManager.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/SourceMgrAdapter.h:54,Adapt,Adapter,54,interpreter/llvm-project/clang/include/clang/Basic/SourceMgrAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/SourceMgrAdapter.h,2,"['Adapt', 'adapt']","['Adapter', 'adapter']"
Energy Efficiency,"//===- AArch64ExpandPseudoInsts.cpp - Expand pseudo instructions ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a pass that expands pseudo instructions into target; // instructions to allow proper scheduling and other late optimizations. This; // pass should be run after register allocation but before the post-regalloc; // scheduling pass.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandPseudoInsts.cpp:487,schedul,scheduling,487,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ExpandPseudoInsts.cpp,2,['schedul'],['scheduling']
Energy Efficiency,"//===- AArch64MachineScheduler.cpp - MI Scheduler for AArch64 -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MachineScheduler.cpp:40,Schedul,Scheduler,40,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MachineScheduler.cpp,1,['Schedul'],['Scheduler']
Energy Efficiency,"//===- AArch64MachineScheduler.h - Custom AArch64 MI scheduler --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Custom AArch64 MI scheduler.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MachineScheduler.h:53,schedul,scheduler,53,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MachineScheduler.h,2,['schedul'],['scheduler']
Energy Efficiency,"//===- AArch64MacroFusion.cpp - AArch64 Macro Fusion ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This file contains the AArch64 implementation of the DAG scheduling; /// mutation to pair instructions back to back.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MacroFusion.cpp:447,schedul,scheduling,447,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MacroFusion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MacroFusion.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"//===- AArch64MacroFusion.h - AArch64 Macro Fusion ------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This file contains the AArch64 definition of the DAG scheduling; /// mutation to pair instructions back to back.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MacroFusion.h:443,schedul,scheduling,443,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MacroFusion.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MacroFusion.h,1,['schedul'],['scheduling']
Energy Efficiency,"//===- AMDGPUImageIntrinsicOptimizer.cpp ----------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass tries to combine multiple image_load intrinsics with dim=2dmsaa; // or dim=2darraymsaa into a single image_msaa_load intrinsic if:; //; // - they refer to the same vaddr except for sample_id,; // - they use a constant sample_id and they fall into the same group,; // - they have the same dmask and the number of intrinsics and the number of; // vaddr/vdata dword transfers is reduced by the combine.; //; // Examples for the tradeoff (all are assuming 2DMsaa for vaddr):; //; // +----------+-----+-----+-------+---------+------------+---------+----------+; // | popcount | a16 | d16 | #load | vaddr / | #msaa_load | vaddr / | combine? |; // | (dmask) | | | | vdata | | vdata | |; // +----------+-----+-----+-------+---------+------------+---------+----------+; // | 1 | 0 | 0 | 4 | 12 / 4 | 1 | 3 / 4 | yes |; // +----------+-----+-----+-------+---------+------------+---------+----------+; // | 1 | 0 | 0 | 2 | 6 / 2 | 1 | 3 / 4 | yes? |; // +----------+-----+-----+-------+---------+------------+---------+----------+; // | 2 | 0 | 0 | 4 | 12 / 8 | 2 | 6 / 8 | yes |; // +----------+-----+-----+-------+---------+------------+---------+----------+; // | 2 | 0 | 0 | 2 | 6 / 4 | 2 | 6 / 8 | no |; // +----------+-----+-----+-------+---------+------------+---------+----------+; // | 1 | 0 | 1 | 2 | 6 / 2 | 1 | 3 / 2 | yes |; // +----------+-----+-----+-------+---------+------------+---------+----------+; //; // Some cases are of questionable benefit, like the one marked with ""yes?""; // above: fewer intrinsics and fewer vaddr and fewer total transfers between SP; // and TX, but higher vdata. We start b",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUImageIntrinsicOptimizer.cpp:769,reduce,reduced,769,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUImageIntrinsicOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUImageIntrinsicOptimizer.cpp,1,['reduce'],['reduced']
Energy Efficiency,"//===- AMDGPUOpenCLEnqueuedBlockLowering.cpp - Lower enqueued block -------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // \file; // This post-linking pass replaces the function pointer of enqueued; // block kernel with a global variable (runtime handle) and adds; // ""runtime-handle"" attribute to the enqueued block kernel.; //; // In LLVM CodeGen the runtime-handle metadata will be translated to; // RuntimeHandle metadata in code object. Runtime allocates a global buffer; // for each kernel with RuntimeHandle metadata and saves the kernel address; // required for the AQL packet into the buffer. __enqueue_kernel function; // in device library knows that the invoke function pointer in the block; // literal is actually runtime handle and loads the kernel address from it; // and put it into AQL packet for dispatching.; //; // This cannot be done in FE since FE cannot create a unique global variable; // with external linkage across LLVM modules. The global variable with internal; // linkage does not work since optimization passes will try to replace loads; // of the global variable with its initialization value.; //; // It also identifies the kernels directly or indirectly enqueues kernels; // and adds ""calls-enqueue-kernel"" function attribute to them, which will; // be used to determine whether to emit runtime metadata for the kernel; // enqueue related hidden kernel arguments.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUOpenCLEnqueuedBlockLowering.cpp:710,allocate,allocates,710,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUOpenCLEnqueuedBlockLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUOpenCLEnqueuedBlockLowering.cpp,1,['allocate'],['allocates']
Energy Efficiency,"//===- AMDGPUPerfHintAnalysis.cpp - analysis of functions memory traffic --===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// \brief Analyzes if a function potentially memory bound and if a kernel; /// kernel may benefit from limiting number of waves to reduce cache thrashing.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUPerfHintAnalysis.cpp:523,reduce,reduce,523,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUPerfHintAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUPerfHintAnalysis.cpp,1,['reduce'],['reduce']
Energy Efficiency,"//===- AMDGPUPerfHintAnalysis.h ---- analysis of memory traffic -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// \brief Analyzes if a function potentially memory bound and if a kernel; /// kernel may benefit from limiting number of waves to reduce cache thrashing.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUPerfHintAnalysis.h:523,reduce,reduce,523,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUPerfHintAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUPerfHintAnalysis.h,1,['reduce'],['reduce']
Energy Efficiency,"//===- ARMMacroFusion.cpp - ARM Macro Fusion ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This file contains the ARM implementation of the DAG scheduling; /// mutation to pair instructions back to back.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMMacroFusion.cpp:435,schedul,scheduling,435,interpreter/llvm-project/llvm/lib/Target/ARM/ARMMacroFusion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMMacroFusion.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"//===- ARMMacroFusion.h - ARM Macro Fusion ------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This file contains the ARM definition of the DAG scheduling mutation; /// to pair instructions back to back.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMMacroFusion.h:431,schedul,scheduling,431,interpreter/llvm-project/llvm/lib/Target/ARM/ARMMacroFusion.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMMacroFusion.h,1,['schedul'],['scheduling']
Energy Efficiency,"//===- ASTContextAllocate.h - ASTContext allocate functions -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares ASTContext allocation functions separate from the main; // code in ASTContext.h.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTContextAllocate.h:41,allocate,allocate,41,interpreter/llvm-project/clang/include/clang/AST/ASTContextAllocate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTContextAllocate.h,1,['allocate'],['allocate']
Energy Efficiency,"//===- ASTUnresolvedSet.h - Unresolved sets of declarations -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides an UnresolvedSet-like class, whose contents are; // allocated using the allocator associated with an ASTContext.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTUnresolvedSet.h:454,allocate,allocated,454,interpreter/llvm-project/clang/include/clang/AST/ASTUnresolvedSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTUnresolvedSet.h,1,['allocate'],['allocated']
Energy Efficiency,"//===- ASTVector.h - Vector that uses ASTContext for allocation ---*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides ASTVector, a vector ADT whose contents are; // allocated using the allocator associated with an ASTContext..; //; //===----------------------------------------------------------------------===//; // FIXME: Most of this is copy-and-paste from BumpVector.h and SmallVector.h.; // We can refactor this core logic into something common.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTVector.h:449,allocate,allocated,449,interpreter/llvm-project/clang/include/clang/AST/ASTVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/ASTVector.h,1,['allocate'],['allocated']
Energy Efficiency,"//===- AggressiveAntiDepBreaker.cpp - Anti-dep breaker --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the AggressiveAntiDepBreaker class, which; // implements register anti-dependence breaking during post-RA; // scheduling. It attempts to break all anti-dependencies within a; // block.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp:514,schedul,scheduling,514,interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AggressiveAntiDepBreaker.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"//===- AliasAnalysisEvaluator.h - Alias Analysis Accuracy Evaluator -------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements a simple N^2 alias analysis accuracy evaluator. The; /// analysis result is a set of statistics of how many times the AA; /// infrastructure provides each kind of alias result and mod/ref result when; /// queried with all pairs of pointers in the function.; ///; /// It can be used to evaluate a change in an alias analysis implementation,; /// algorithm, or the AA pipeline infrastructure itself. It acts like a stable; /// and easily tested consumer of all AA information exposed.; ///; /// This is inspired and adapted from code by: Naveen Neelakantam, Francesco; /// Spadini, and Wojciech Stryjewski.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/AliasAnalysisEvaluator.h:931,adapt,adapted,931,interpreter/llvm-project/llvm/include/llvm/Analysis/AliasAnalysisEvaluator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/AliasAnalysisEvaluator.h,1,['adapt'],['adapted']
Energy Efficiency,"//===- AllocatorBase.h - Simple memory allocation abstraction ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines MallocAllocator. MallocAllocator conforms to the LLVM; /// ""Allocator"" concept which consists of an Allocate method accepting a size; /// and alignment, and a Deallocate accepting a pointer and size. Further, the; /// LLVM ""Allocator"" concept has overloads of Allocate and Deallocate for; /// setting size and alignment based on the final type. These overloads are; /// typically provided by a base class template \c AllocatorBase.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/AllocatorBase.h:514,Allocate,Allocate,514,interpreter/llvm-project/llvm/include/llvm/Support/AllocatorBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/AllocatorBase.h,2,['Allocate'],['Allocate']
Energy Efficiency,"//===- BlockPrinter.h - FDR Block Pretty Printer -------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // An implementation of the RecordVisitor which formats a block of records for; // easier human consumption.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/XRay/BlockPrinter.h:475,consumption,consumption,475,interpreter/llvm-project/llvm/include/llvm/XRay/BlockPrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/XRay/BlockPrinter.h,1,['consumption'],['consumption']
Energy Efficiency,"//===- BumpVector.h - Vector-like ADT that uses bump allocation -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides BumpVector, a vector-like ADT whose contents are; // allocated from a BumpPtrAllocator.; //; //===----------------------------------------------------------------------===//; // FIXME: Most of this is copy-and-paste from SmallVector.h. We can; // refactor this core logic into something common that is shared between; // the two. The main thing that is different is the allocation strategy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Support/BumpVector.h:455,allocate,allocated,455,interpreter/llvm-project/clang/include/clang/Analysis/Support/BumpVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Support/BumpVector.h,1,['allocate'],['allocated']
Energy Efficiency,"//===- CodeGenSchedule.cpp - Scheduling MachineModels ---------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines structures to encapsulate the machine model as described in; // the target description.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenSchedule.cpp:29,Schedul,Scheduling,29,interpreter/llvm-project/llvm/utils/TableGen/CodeGenSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenSchedule.cpp,1,['Schedul'],['Scheduling']
Energy Efficiency,"//===- CodeGenSchedule.h - Scheduling Machine Models ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines structures to encapsulate the machine model as described in; // the target description.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenSchedule.h:27,Schedul,Scheduling,27,interpreter/llvm-project/llvm/utils/TableGen/CodeGenSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenSchedule.h,1,['Schedul'],['Scheduling']
Energy Efficiency,"//===- ConstantHoisting.cpp - Prepare code for expensive constants --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass identifies expensive constants to hoist and coalesces them to; // better prepare it for SelectionDAG-based code generation. This works around; // the limitations of the basic-block-at-a-time approach.; //; // First it scans all instructions for integer constants and calculates its; // cost. If the constant can be folded into the instruction (the cost is; // TCC_Free) or the cost is just a simple operation (TCC_BASIC), then we don't; // consider it expensive and leave it alone. This is the default behavior and; // the default implementation of getIntImmCostInst will always return TCC_Free.; //; // If the cost is more than TCC_BASIC, then the integer constant can't be folded; // into the instruction and it might be beneficial to hoist the constant.; // Similar constants are coalesced to reduce register pressure and; // materialization code.; //; // When a constant is hoisted, it is also hidden behind a bitcast to force it to; // be live-out of the basic block. Otherwise the constant would be just; // duplicated and each basic block would have its own copy in the SelectionDAG.; // The SelectionDAG recognizes such constants as opaque and doesn't perform; // certain transformations on them, which would create a new expensive constant.; //; // This optimization is only applied to integer constants in instructions and; // simple (this means not nested) constant cast expressions. For example:; // %0 = load i64* inttoptr (i64 big_constant to i64*); //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstantHoisting.cpp:1189,reduce,reduce,1189,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstantHoisting.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstantHoisting.cpp,1,['reduce'],['reduce']
Energy Efficiency,"//===- ControlHeightReduction.h - Control Height Reduction ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass merges conditional blocks of code and reduces the number of; // conditional branches in the hot paths based on profiles.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Instrumentation/ControlHeightReduction.h:431,reduce,reduces,431,interpreter/llvm-project/llvm/include/llvm/Transforms/Instrumentation/ControlHeightReduction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Instrumentation/ControlHeightReduction.h,1,['reduce'],['reduces']
Energy Efficiency,"//===- CriticalAntiDepBreaker.cpp - Anti-dep breaker ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the CriticalAntiDepBreaker class, which; // implements register anti-dependence breaking along a blocks; // critical path during post-RA scheduler.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp:541,schedul,scheduler,541,interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.cpp,1,['schedul'],['scheduler']
Energy Efficiency,"//===- DFAPacketizerEmitter.cpp - Packetization DFA for a VLIW machine ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This class parses the Schedule.td file and produces an API that can be used; // to reason about whether an instruction can be added to a packet on a VLIW; // architecture. The class internally generates a deterministic finite; // automaton (DFA) that models all possible mappings of machine instructions; // to functional units as instructions are added to a packet.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/DFAPacketizerEmitter.cpp:405,Schedul,Schedule,405,interpreter/llvm-project/llvm/utils/TableGen/DFAPacketizerEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/DFAPacketizerEmitter.cpp,1,['Schedul'],['Schedule']
Energy Efficiency,"//===- Delta.cpp - Delta Debugging Algorithm Implementation ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the implementation for the Delta Debugging Algorithm:; // it splits a given set of Targets (i.e. Functions, Instructions, BBs, etc.); // into chunks and tries to reduce the number chunks that are interesting.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/Delta.cpp:564,reduce,reduce,564,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/Delta.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/Delta.cpp,1,['reduce'],['reduce']
Energy Efficiency,"//===- Delta.h - Delta Debugging Algorithm Implementation -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the implementation for the Delta Debugging Algorithm:; // it splits a given set of Targets (i.e. Functions, Instructions, BBs, etc.); // into chunks and tries to reduce the number chunks that are interesting.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/Delta.h:564,reduce,reduce,564,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/Delta.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/Delta.h,1,['reduce'],['reduce']
Energy Efficiency,"//===- DeltaManager.cpp - Runs Delta Passes to reduce Input ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file calls each specialized Delta pass in order to reduce the input IR; // file.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/DeltaManager.cpp:47,reduce,reduce,47,interpreter/llvm-project/llvm/tools/llvm-reduce/DeltaManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/DeltaManager.cpp,2,['reduce'],['reduce']
Energy Efficiency,"//===- DeltaManager.h - Runs Delta Passes to reduce Input -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file calls each specialized Delta pass in order to reduce the input IR; // file.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/DeltaManager.h:45,reduce,reduce,45,interpreter/llvm-project/llvm/tools/llvm-reduce/DeltaManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/DeltaManager.h,2,['reduce'],['reduce']
Energy Efficiency,"//===- DependencyDirectivesScanner.cpp ------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This is the interface for scanning header and source files to get the; /// minimum necessary preprocessor directives for evaluating includes. It; /// reduces the source down to #define, #include, #import, @import, and any; /// conditional preprocessor logic that contains one of those.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/DependencyDirectivesScanner.cpp:546,reduce,reduces,546,interpreter/llvm-project/clang/lib/Lex/DependencyDirectivesScanner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/DependencyDirectivesScanner.cpp,1,['reduce'],['reduces']
Energy Efficiency,"//===- Dominators.h - Dominator Info Calculation ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the DominatorTree class, which provides fast and efficient; // dominance queries.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Dominators.h:450,efficient,efficient,450,interpreter/llvm-project/llvm/include/llvm/IR/Dominators.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Dominators.h,1,['efficient'],['efficient']
Energy Efficiency,"//===- DwarfEHPrepare - Prepare exception handling for code generation ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass mulches exception handling code into a form adapted to code; // generation. Required if using dwarf exception handling.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/DwarfEHPrepare.cpp:437,adapt,adapted,437,interpreter/llvm-project/llvm/lib/CodeGen/DwarfEHPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/DwarfEHPrepare.cpp,1,['adapt'],['adapted']
Energy Efficiency,"//===- FastISel.cpp - Implementation of the FastISel class ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the implementation of the FastISel class.; //; // ""Fast"" instruction selection is designed to emit very poor code quickly.; // Also, it is not designed to be able to do much lowering, so most illegal; // types (e.g. i64 on 32-bit targets) and operations are not supported. It is; // also not intended to be able to do much optimization, except in a few cases; // where doing optimizations reduces overall compile time. For example, folding; // constants into immediate fields is often done, because it's cheap and it; // reduces the number of instructions later phases have to examine.; //; // ""Fast"" instruction selection is able to fail gracefully and transfer; // control to the SelectionDAG selector for operations that it doesn't; // support. In many cases, this allows us to avoid duplicating a lot of; // the complicated lowering logic that SelectionDAG currently has.; //; // The intended use for ""fast"" instruction selection is ""-O0"" mode; // compilation, where the quality of the generated code is irrelevant when; // weighed against the speed at which the code can be generated. Also,; // at -O0, the LLVM optimizers are not running, and this makes the; // compile time of codegen a much higher portion of the overall compile; // time. Despite its limitations, ""fast"" instruction selection is able to; // handle enough code on its own to provide noticeable overall speedups; // in -O0 compiles.; //; // Basic operations are supported in a target-independent way, by reading; // the same instruction descriptions that the SelectionDAG selector reads,; // and identifying simple arithmetic ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp:791,reduce,reduces,791,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FastISel.cpp,2,['reduce'],['reduces']
Energy Efficiency,"//===- FixItRewriter.cpp - Fix-It Rewriter Diagnostic Client --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is a diagnostic client adaptor that performs rewrites as; // suggested by code modification hints attached to diagnostics. It; // then forwards any diagnostics to the adapted diagnostic client.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/FixItRewriter.cpp:411,adapt,adaptor,411,interpreter/llvm-project/clang/lib/Frontend/Rewrite/FixItRewriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/FixItRewriter.cpp,2,['adapt'],"['adapted', 'adaptor']"
Energy Efficiency,"//===- FixItRewriter.h - Fix-It Rewriter Diagnostic Client ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is a diagnostic client adaptor that performs rewrites as; // suggested by code modification hints attached to diagnostics. It; // then forwards any diagnostics to the adapted diagnostic client.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Frontend/FixItRewriter.h:411,adapt,adaptor,411,interpreter/llvm-project/clang/include/clang/Rewrite/Frontend/FixItRewriter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Frontend/FixItRewriter.h,2,['adapt'],"['adapted', 'adaptor']"
Energy Efficiency,"//===- FlatternCFG.cpp - Code to perform CFG flattening -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Reduce conditional branches in CFG.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/FlattenCFG.cpp:383,Reduce,Reduce,383,interpreter/llvm-project/llvm/lib/Transforms/Utils/FlattenCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/FlattenCFG.cpp,1,['Reduce'],['Reduce']
Energy Efficiency,"//===- Format.h - Efficient printf-style formatting for streams -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the format() function, which can be used with other; // LLVM subsystems to provide printf-style formatting. This gives all the power; // and risk of printf. This can be used like this (with raw_ostreams as an; // example):; //; // OS << ""mynumber: "" << format(""%4.5f"", 1234.412) << '\n';; //; // Or if you prefer:; //; // OS << format(""mynumber: %4.5f\n"", 1234.412);; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Format.h:18,Efficient,Efficient,18,interpreter/llvm-project/llvm/include/llvm/Support/Format.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Format.h,2,"['Efficient', 'power']","['Efficient', 'power']"
Energy Efficiency,"//===- FormatVariadic.h - Efficient type-safe string formatting --*- C++-*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the formatv() function which can be used with other LLVM; // subsystems to provide printf-like formatting, but with improved safety and; // flexibility. The result of `formatv` is an object which can be streamed to; // a raw_ostream or converted to a std::string or llvm::SmallString.; //; // // Convert to std::string.; // std::string S = formatv(""{0} {1}"", 1234.412, ""test"").str();; //; // // Convert to llvm::SmallString; // SmallString<8> S = formatv(""{0} {1}"", 1234.412, ""test"").sstr<8>();; //; // // Stream to an existing raw_ostream.; // OS << formatv(""{0} {1}"", 1234.412, ""test"");; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FormatVariadic.h:26,Efficient,Efficient,26,interpreter/llvm-project/llvm/include/llvm/Support/FormatVariadic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/FormatVariadic.h,1,['Efficient'],['Efficient']
Energy Efficiency,"//===- GCNCreateVOPD.cpp - Create VOPD Instructions ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Combine VALU pairs into VOPD instructions; /// Only works on wave32; /// Has register requirements, we reject creating VOPD if the requirements are; /// not met.; /// shouldCombineVOPD mutator in postRA machine scheduler puts candidate; /// instructions for VOPD back-to-back; ///; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNCreateVOPD.cpp:605,schedul,scheduler,605,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNCreateVOPD.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNCreateVOPD.cpp,1,['schedul'],['scheduler']
Energy Efficiency,"//===- GCNIterativeScheduler.h - GCN Scheduler ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the class GCNIterativeScheduler, which uses an iterative; /// approach to find a best schedule for GCN architecture. It basically makes; /// use of various lightweight schedules, scores them, chooses best one based on; /// their scores, and finally implements the chosen one.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNIterativeScheduler.h:37,Schedul,Scheduler,37,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNIterativeScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNIterativeScheduler.h,3,"['Schedul', 'schedul']","['Scheduler', 'schedule', 'schedules']"
Energy Efficiency,"//===- GCNMinRegStrategy.cpp ----------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines and implements the class GCNMinRegScheduler, which; /// implements an experimental, simple scheduler whose main goal is to learn; /// ways about consuming less possible registers for a region.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNMinRegStrategy.cpp:505,schedul,scheduler,505,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNMinRegStrategy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNMinRegStrategy.cpp,1,['schedul'],['scheduler']
Energy Efficiency,"//===- GCNVOPDUtils.cpp - GCN VOPD Utils ------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This file contains the AMDGPU DAG scheduling; /// mutation to pair VOPD instructions back to back. It also contains; // subroutines useful in the creation of VOPD instructions; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNVOPDUtils.cpp:414,schedul,scheduling,414,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNVOPDUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNVOPDUtils.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"//===- GCNVOPDUtils.h - GCN VOPD Utils ------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This file contains the AMDGPU DAG scheduling; /// mutation to pair VOPD instructions back to back. It also contains; // subroutines useful in the creation of VOPD instructions; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNVOPDUtils.h:412,schedul,scheduling,412,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNVOPDUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNVOPDUtils.h,1,['schedul'],['scheduling']
Energy Efficiency,"//===- GVNHoist.cpp - Hoist scalar and load expressions -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass hoists expressions from branches to a common dominator. It uses; // GVN (global value numbering) to discover expressions computing the same; // values. The primary goals of code-hoisting are:; // 1. To reduce the code size.; // 2. In some cases reduce critical path (by exposing more ILP).; //; // The algorithm factors out the reachability of values such that multiple; // queries to find reachability of values are fast. This is based on finding the; // ANTIC points in the CFG which do not change during hoisting. The ANTIC points; // are basically the dominance-frontiers in the inverse graph. So we introduce a; // data structure (CHI nodes) to keep track of values flowing out of a basic; // block. We only do this for values with multiple occurrences in the function; // as they are the potential hoistable candidates. This approach allows us to; // hoist instructions to a basic block with more than two successors, as well as; // deal with infinite loops in a trivial way.; //; // Limitations: This pass does not hoist fully redundant expressions because; // they are already handled by GVN-PRE. It is advisable to run gvn-hoist before; // and after gvn-pre because gvn-pre creates opportunities for more instructions; // to be hoisted.; //; // Hoisting may affect the performance in some cases. To mitigate that, hoisting; // is disabled in the following cases.; // 1. Scalars across calls.; // 2. geps when corresponding load/store cannot be hoisted.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp:595,reduce,reduce,595,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNHoist.cpp,2,['reduce'],['reduce']
Energy Efficiency,"//===- GenericDomTree.h - Generic dominator trees for graphs ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines a set of templates that efficiently compute a dominator; /// tree over a generic graph. This is used typically in LLVM for fast; /// dominance queries on the CFG, but is fully generic w.r.t. the underlying; /// graph types.; ///; /// Unlike ADT/* graph algorithms, generic dominator tree has more requirements; /// on the graph's NodeRef. The NodeRef should be a pointer and,; /// either NodeRef->getParent() must return the parent node that is also a; /// pointer or DomTreeNodeTraits needs to be specialized.; ///; /// FIXME: Maybe GenericDomTree needs a TreeTraits, instead of GraphTraits.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:438,efficient,efficiently,438,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTree.h,1,['efficient'],['efficiently']
Energy Efficiency,"//===- GlobalMerge.cpp - Internal globals merging -------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass merges globals with internal linkage into one. This way all the; // globals which were merged into a biggest one can be addressed using offsets; // from the same base pointer (no need for separate base pointer for each of the; // global). Such a transformation can significantly reduce the register pressure; // when many globals are involved.; //; // For example, consider the code which touches several global variables at; // once:; //; // static int foo[N], bar[N], baz[N];; //; // for (i = 0; i < N; ++i) {; // foo[i] = bar[i] * baz[i];; // }; //; // On ARM the addresses of 3 arrays should be kept in the registers, thus; // this code has quite large register pressure (loop body):; //; // ldr r1, [r5], #4; // ldr r2, [r6], #4; // mul r1, r2, r1; // str r1, [r0], #4; //; // Pass converts the code to something like:; //; // static struct {; // int foo[N];; // int bar[N];; // int baz[N];; // } merged;; //; // for (i = 0; i < N; ++i) {; // merged.foo[i] = merged.bar[i] * merged.baz[i];; // }; //; // and in ARM code this becomes:; //; // ldr r0, [r5, #40]; // ldr r1, [r5, #80]; // mul r0, r1, r0; // str r0, [r5], #4; //; // note that we saved 2 registers here almostly ""for free"".; //; // However, merging globals can have tradeoffs:; // - it confuses debuggers, tools, and users; // - it makes linker optimizations less useful (order files, LOHs, ...); // - it forces usage of indexed addressing (which isn't necessarily ""free""); // - it can increase register pressure when the uses are disparate enough.; //; // We use heuristics to discover the best global grouping we can (cf cl::opts).; //; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalMerge.cpp:672,reduce,reduce,672,interpreter/llvm-project/llvm/lib/CodeGen/GlobalMerge.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalMerge.cpp,1,['reduce'],['reduce']
Energy Efficiency,"//===- GtestMatchers.cpp - AST Matchers for Gtest ---------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements several matchers for popular gtest macros. In general,; // AST matchers cannot match calls to macros. However, we can simulate such; // matches if the macro definition has identifiable elements that themselves can; // be matched. In that case, we can match on those elements and then check that; // the match occurs within an expansion of the desired macro. The more uncommon; // the identified elements, the more efficient this process will be.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ASTMatchers/GtestMatchers.cpp:818,efficient,efficient,818,interpreter/llvm-project/clang/lib/ASTMatchers/GtestMatchers.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ASTMatchers/GtestMatchers.cpp,1,['efficient'],['efficient']
Energy Efficiency,"//===- HexagonExpandCondsets.cpp ------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // Replace mux instructions with the corresponding legal instructions.; // It is meant to work post-SSA, but still on virtual registers. It was; // originally placed between register coalescing and machine instruction; // scheduler.; // In this place in the optimization sequence, live interval analysis had; // been performed, and the live intervals should be preserved. A large part; // of the code deals with preserving the liveness information.; //; // Liveness tracking aside, the main functionality of this pass is divided; // into two steps. The first step is to replace an instruction; // %0 = C2_mux %1, %2, %3; // with a pair of conditional transfers; // %0 = A2_tfrt %1, %2; // %0 = A2_tfrf %1, %3; // It is the intention that the execution of this pass could be terminated; // after this step, and the code generated would be functionally correct.; //; // If the uses of the source values %1 and %2 are kills, and their; // definitions are predicable, then in the second step, the conditional; // transfers will then be rewritten as predicated instructions. E.g.; // %0 = A2_or %1, %2; // %3 = A2_tfrt %99, killed %0; // will be rewritten as; // %3 = A2_port %99, %1, %2; //; // This replacement has two variants: ""up"" and ""down"". Consider this case:; // %0 = A2_or %1, %2; // ... [intervening instructions] ...; // %3 = A2_tfrt %99, killed %0; // variant ""up"":; // %3 = A2_port %99, %1, %2; // ... [intervening instructions, %0->vreg3] ...; // [deleted]; // variant ""down"":; // [deleted]; // ... [intervening instructions] ...; // %3 = A2_port %99, %1, %2; //; // Both, one or none of these variants may be valid",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp:598,schedul,scheduler,598,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonExpandCondsets.cpp,1,['schedul'],['scheduler']
Energy Efficiency,"//===- HexagonGenMux.cpp --------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // During instruction selection, MUX instructions are generated for; // conditional assignments. Since such assignments often present an; // opportunity to predicate instructions, HexagonExpandCondsets; // expands MUXes into pairs of conditional transfers, and then proceeds; // with predication of the producers/consumers of the registers involved.; // This happens after exiting from the SSA form, but before the machine; // instruction scheduler. After the scheduler and after the register; // allocation there can be cases of pairs of conditional transfers; // resulting from a MUX where neither of them was further predicated. If; // these transfers are now placed far enough from the instruction defining; // the predicate register, they cannot use the .new form. In such cases it; // is better to collapse them back to a single MUX instruction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonGenMux.cpp:815,schedul,scheduler,815,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonGenMux.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonGenMux.cpp,2,['schedul'],['scheduler']
Energy Efficiency,"//===- HexagonMCDuplexInfo.cpp - Instruction bundle checking --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This implements duplexing of instructions to reduce code size; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCDuplexInfo.cpp:428,reduce,reduce,428,interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCDuplexInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCDuplexInfo.cpp,1,['reduce'],['reduce']
Energy Efficiency,"//===- HexagonMachineScheduler.cpp - MI Scheduler for Hexagon -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // MachineScheduler schedules machine instructions after phi elimination. It; // preserves LiveIntervals so it can be invoked before register allocation.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonMachineScheduler.cpp:40,Schedul,Scheduler,40,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonMachineScheduler.cpp,2,"['Schedul', 'schedul']","['Scheduler', 'schedules']"
Energy Efficiency,"//===- HexagonMachineScheduler.h - Custom Hexagon MI scheduler --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Custom Hexagon MI scheduler.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonMachineScheduler.h:53,schedul,scheduler,53,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonMachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonMachineScheduler.h,2,['schedul'],['scheduler']
Energy Efficiency,"//===- HexagonStoreWidening.cpp -------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // Replace sequences of ""narrow"" stores to adjacent memory locations with; // a fewer ""wide"" stores that have the same effect.; // For example, replace:; // S4_storeirb_io %100, 0, 0 ; store-immediate-byte; // S4_storeirb_io %100, 1, 0 ; store-immediate-byte; // with; // S4_storeirh_io %100, 0, 0 ; store-immediate-halfword; // The above is the general idea. The actual cases handled by the code; // may be a bit more complex.; // The purpose of this pass is to reduce the number of outstanding stores,; // or as one could say, ""reduce store queue pressure"". Also, wide stores; // mean fewer stores, and since there are only two memory instructions allowed; // per packet, it also means fewer packets, and ultimately fewer cycles.; //===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonStoreWidening.cpp:839,reduce,reduce,839,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonStoreWidening.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonStoreWidening.cpp,2,['reduce'],['reduce']
Energy Efficiency,"//===- IRSymtab.h - data definitions for IR symbol tables -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains data definitions and a reader and builder for a symbol; // table for LLVM IR. Its purpose is to allow linkers and other consumers of; // bitcode files to efficiently read the symbol table for symbol resolution; // purposes without needing to construct a module in memory.; //; // As with most object files the symbol table has two parts: the symbol table; // itself and a string table which is referenced by the symbol table.; //; // A symbol table corresponds to a single bitcode file, which may consist of; // multiple modules, so symbol tables may likewise contain symbols for multiple; // modules.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/IRSymtab.h:556,efficient,efficiently,556,interpreter/llvm-project/llvm/include/llvm/Object/IRSymtab.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/IRSymtab.h,1,['efficient'],['efficiently']
Energy Efficiency,"//===- InstructionCombining.cpp - Combine multiple instructions -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // InstructionCombining - Combine instructions to form fewer, simple; // instructions. This pass does not modify the CFG. This pass is where; // algebraic simplification happens.; //; // This pass combines things like:; // %Y = add i32 %X, 1; // %Z = add i32 %Y, 1; // into:; // %Z = add i32 %X, 2; //; // This is a simple worklist driven algorithm.; //; // This pass guarantees that the following canonicalizations are performed on; // the program:; // 1. If a binary operator has a constant operand, it is moved to the RHS; // 2. Bitwise operators with constant operands are always grouped so that; // shifts are performed first, then or's, then and's, then xor's.; // 3. Compare instructions are converted from <,>,<=,>= to ==,!= if possible; // 4. All cmp instructions on boolean values are replaced with logical ops; // 5. add X, X is represented as (X*2) => (X << 1); // 6. Multiplies with a power-of-two constant argument are transformed into; // shifts.; // ... etc.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp:1278,power,power-of-two,1278,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,1,['power'],['power-of-two']
Energy Efficiency,"//===- IntervalPartition.h - CFG Partitioning into Intervals -----*- C++-*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines functionality for partitioning a CFG into intervals and; // building a weak topological order (WTO) of the nodes, based on the; // partitioning. The concepts and implementations for the graph partitioning; // are based on the presentation in ""Compilers"" by Aho, Sethi and Ullman (the; // ""dragon book""), pages 664-666. The concepts around WTOs is taken from the; // paper ""Efficient chaotic iteration strategies with widenings,"" by; // F. Bourdoncle ([Bourdoncle1993]).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/IntervalPartition.h:774,Efficient,Efficient,774,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/IntervalPartition.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/IntervalPartition.h,1,['Efficient'],['Efficient']
Energy Efficiency,"//===- IntervalPartition.h - Interval partition Calculation -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the declaration of the IntervalPartition class, which; // calculates and represents the interval partition of a function, or a; // preexisting interval partition.; //; // In this way, the interval partition may be used to reduce a flow graph down; // to its degenerate single node interval partition (unless it is irreducible).; //; // TODO: The IntervalPartition class should take a bool parameter that tells; // whether it should add the ""tails"" of an interval to an interval itself or if; // they should be represented as distinct intervals.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IntervalPartition.h:624,reduce,reduce,624,interpreter/llvm-project/llvm/include/llvm/Analysis/IntervalPartition.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/IntervalPartition.h,1,['reduce'],['reduce']
Energy Efficiency,"//===- LegalizeVectorOps.cpp - Implement SelectionDAG::LegalizeVectors ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the SelectionDAG::LegalizeVectors method.; //; // The vector legalizer looks for vector operations which might need to be; // scalarized and legalizes them. This is a separate step from Legalize because; // scalarizing can introduce illegal types. For example, suppose we have an; // ISD::SDIV of type v2i64 on x86-32. The type is legal (for example, addition; // on a v2i64 is legal), but ISD::SDIV isn't legal, so we have to unroll the; // operation, which introduces nodes with the illegal type i64 which must be; // expanded. Similarly, suppose we have an ISD::SRA of type v16i8 on PowerPC;; // the operation must be unrolled, which introduces nodes with the illegal; // type i8 which must be promoted.; //; // This does not legalize vector manipulations like ISD::BUILD_VECTOR,; // or operations that happen to take a vector which are custom-lowered;; // the legalization for such operations never produces nodes; // with illegal types, so it's okay to put off legalizing them until; // SelectionDAG::Legalize runs.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorOps.cpp:990,Power,PowerPC,990,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorOps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorOps.cpp,1,['Power'],['PowerPC']
Energy Efficiency,"//===- LocalStackSlotAllocation.cpp - Pre-allocate locals to stack slots --===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass assigns local frame indices to stack slots relative to one another; // and allocates additional base registers to access them when the target; // estimates they are likely to be out of range of stack pointer and frame; // pointer relative addressing.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LocalStackSlotAllocation.cpp:42,allocate,allocate,42,interpreter/llvm-project/llvm/lib/CodeGen/LocalStackSlotAllocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LocalStackSlotAllocation.cpp,2,['allocate'],"['allocate', 'allocates']"
Energy Efficiency,"//===- LoopPassManager.h - Loop pass management -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This header provides classes for managing a pipeline of passes over loops; /// in LLVM IR.; ///; /// The primary loop pass pipeline is managed in a very particular way to; /// provide a set of core guarantees:; /// 1) Loops are, where possible, in simplified form.; /// 2) Loops are *always* in LCSSA form.; /// 3) A collection of Loop-specific analysis results are available:; /// - LoopInfo; /// - DominatorTree; /// - ScalarEvolution; /// - AAManager; /// 4) All loop passes preserve #1 (where possible), #2, and #3.; /// 5) Loop passes run over each loop in the loop nest from the innermost to; /// the outermost. Specifically, all inner loops are processed before; /// passes run over outer loops. When running the pipeline across an inner; /// loop creates new inner loops, those are added and processed in this; /// order as well.; ///; /// This process is designed to facilitate transformations which simplify,; /// reduce, and remove loops. For passes which are more oriented towards; /// optimizing loops, especially optimizing loop *nests* instead of single; /// loops in isolation, this framework is less interesting.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h:1320,reduce,reduce,1320,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h,1,['reduce'],['reduce']
Energy Efficiency,"//===- LoopStrengthReduce.cpp - Strength Reduce IVs in Loops --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This transformation analyzes and transforms the induction variables (and; // computations derived from them) into forms suitable for efficient execution; // on the target.; //; // This pass performs a strength reduction on array references inside loops that; // have as one or more of their components the loop induction variable, it; // rewrites expressions to take advantage of scaled-index addressing modes; // available on the target, and it performs a variety of other optimizations; // related to loop induction variables.; //; // Terminology note: this code has a lot of handling for ""post-increment"" or; // ""post-inc"" users. This is not talking about post-increment addressing modes;; // it is instead talking about code like this:; //; // %i = phi [ 0, %entry ], [ %i.next, %latch ]; // ...; // %i.next = add %i, 1; // %c = icmp eq %i.next, %n; //; // The SCEV for %i is {0,+,1}<%L>. The SCEV for %i.next is {1,+,1}<%L>, however; // it's useful to think about these as the same register, with some uses using; // the value of the register before the add and some using it after. In this; // example, the icmp is a post-increment user, since it uses %i.next, which is; // the value of the induction variable after the increment. The other common; // case of post-increment users is users outside the loop.; //; // TODO: More sophistication in the way Formulae are generated and filtered.; //; // TODO: Handle multiple loops at a time.; //; // TODO: Should the addressing mode BaseGV be changed to a ConstantExpr instead; // of a GlobalValue?; //; // TODO: When truncation is free, truncate ICmp users' operands",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:41,Reduce,Reduce,41,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,2,"['Reduce', 'efficient']","['Reduce', 'efficient']"
Energy Efficiency,"//===- LoopStrengthReduce.h - Loop Strength Reduce Pass ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This transformation analyzes and transforms the induction variables (and; // computations derived from them) into forms suitable for efficient execution; // on the target.; //; // This pass performs a strength reduction on array references inside loops that; // have as one or more of their components the loop induction variable, it; // rewrites expressions to take advantage of scaled-index addressing modes; // available on the target, and it performs a variety of other optimizations; // related to loop induction variables.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopStrengthReduce.h:44,Reduce,Reduce,44,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopStrengthReduce.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopStrengthReduce.h,2,"['Reduce', 'efficient']","['Reduce', 'efficient']"
Energy Efficiency,"//===- MCSchedule.cpp - Scheduling ------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the default scheduling model.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCSchedule.cpp:24,Schedul,Scheduling,24,interpreter/llvm-project/llvm/lib/MC/MCSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCSchedule.cpp,2,"['Schedul', 'schedul']","['Scheduling', 'scheduling']"
Energy Efficiency,"//===- MachineBlockPlacement.cpp - Basic Block Code Layout optimization ---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements basic block placement transformations using the CFG; // structure and branch probability estimates.; //; // The pass strives to preserve the structure of the CFG (that is, retain; // a topological ordering of basic blocks) in the absence of a *strong* signal; // to the contrary from probabilities. However, within the CFG structure, it; // attempts to choose an ordering which favors placing more likely sequences of; // blocks adjacent to each other.; //; // The algorithm works from the inner-most loop within a function outward, and; // at each stage walks through the basic blocks, trying to coalesce them into; // sequential chains where allowed by the CFG (or demanded by heavy; // probabilities). Finally, it walks the blocks in topological order, and the; // first time it reaches a chain of basic blocks, it schedules them in the; // function in-order.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp:1222,schedul,schedules,1222,interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBlockPlacement.cpp,1,['schedul'],['schedules']
Energy Efficiency,"//===- MachinePipeliner.cpp - Machine Software Pipeliner Pass -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // An implementation of the Swing Modulo Scheduling (SMS) software pipeliner.; //; // This SMS implementation is a target-independent back-end pass. When enabled,; // the pass runs just prior to the register allocation pass, while the machine; // IR is in SSA form. If software pipelining is successful, then the original; // loop is replaced by the optimized loop. The optimized loop contains one or; // more prolog blocks, the pipelined kernel, and one or more epilog blocks. If; // the instructions cannot be scheduled in a given MII, we increase the MII by; // one and try again.; //; // The SMS implementation is an extension of the ScheduleDAGInstrs class. We; // represent loop carried dependences in the DAG as order edges to the Phi; // nodes. We also perform several passes over the DAG to eliminate unnecessary; // edges that inhibit the ability to pipeline. The implementation uses the; // DFAPacketizer class to compute the minimum initiation interval and the check; // where an instruction may be inserted in the pipelined schedule.; //; // In order for the SMS pass to work, several target specific hooks need to be; // implemented to get information about the loop structure and to rewrite; // instructions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp:421,Schedul,Scheduling,421,interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachinePipeliner.cpp,4,"['Schedul', 'schedul']","['ScheduleDAGInstrs', 'Scheduling', 'schedule', 'scheduled']"
Energy Efficiency,"//===- MachinePipeliner.h - Machine Software Pipeliner Pass -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // An implementation of the Swing Modulo Scheduling (SMS) software pipeliner.; //; // Software pipelining (SWP) is an instruction scheduling technique for loops; // that overlap loop iterations and exploits ILP via a compiler transformation.; //; // Swing Modulo Scheduling is an implementation of software pipelining; // that generates schedules that are near optimal in terms of initiation; // interval, register requirements, and stage count. See the papers:; //; // ""Swing Modulo Scheduling: A Lifetime-Sensitive Approach"", by J. Llosa,; // A. Gonzalez, E. Ayguade, and M. Valero. In PACT '96 Proceedings of the 1996; // Conference on Parallel Architectures and Compilation Techiniques.; //; // ""Lifetime-Sensitive Modulo Scheduling in a Production Environment"", by J.; // Llosa, E. Ayguade, A. Gonzalez, M. Valero, and J. Eckhardt. In IEEE; // Transactions on Computers, Vol. 50, No. 3, 2001.; //; // ""An Implementation of Swing Modulo Scheduling With Extensions for; // Superblocks"", by T. Lattner, Master's Thesis, University of Illinois at; // Urbana-Champaign, 2005.; //; //; // The SMS algorithm consists of three main steps after computing the minimal; // initiation interval (MII).; // 1) Analyze the dependence graph and compute information about each; // instruction in the graph.; // 2) Order the nodes (instructions) by priority based upon the heuristics; // described in the algorithm.; // 3) Attempt to schedule the nodes in the specified order using the MII.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h:419,Schedul,Scheduling,419,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePipeliner.h,8,"['Schedul', 'schedul']","['Scheduling', 'schedule', 'schedules', 'scheduling']"
Energy Efficiency,"//===- MachineScheduler.cpp - Machine Instruction Scheduler ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // MachineScheduler schedules machine instructions after phi elimination. It; // preserves LiveIntervals so it can be invoked before register allocation.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:50,Schedul,Scheduler,50,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,2,"['Schedul', 'schedul']","['Scheduler', 'schedules']"
Energy Efficiency,"//===- MachineScheduler.h - MachineInstr Scheduling Pass --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides an interface for customizing the standard MachineScheduler; // pass. Note that the entire pass may be replaced as follows:; //; // <Target>TargetMachine::createPassConfig(PassManagerBase &PM) {; // PM.substitutePass(&MachineSchedulerID, &CustomSchedulerPassID);; // ...}; //; // The MachineScheduler pass is only responsible for choosing the regions to be; // scheduled. Targets can override the DAG builder and scheduler without; // replacing the pass as follows:; //; // ScheduleDAGInstrs *<Target>PassConfig::; // createMachineScheduler(MachineSchedContext *C) {; // return new CustomMachineScheduler(C);; // }; //; // The default scheduler, ScheduleDAGMILive, builds the DAG and drives list; // scheduling while updating the instruction stream, register pressure, and live; // intervals. Most targets don't need to override the DAG builder and list; // scheduler, but subtargets that require custom scheduling heuristics may; // plugin an alternate MachineSchedStrategy. The strategy is responsible for; // selecting the highest priority node from the list:; //; // ScheduleDAGInstrs *<Target>PassConfig::; // createMachineScheduler(MachineSchedContext *C) {; // return new ScheduleDAGMILive(C, CustomStrategy(C));; // }; //; // The DAG builder can also be customized in a sense by adding DAG mutations; // that will run after DAG building and before list scheduling. DAG mutations; // can adjust dependencies based on target-specific knowledge or add weak edges; // to aid heuristics:; //; // ScheduleDAGInstrs *<Target>PassConfig::; // createMachineScheduler(MachineSchedContext *C) {; // Sche",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:41,Schedul,Scheduling,41,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,7,"['Schedul', 'schedul']","['ScheduleDAGInstrs', 'ScheduleDAGMILive', 'Scheduling', 'scheduled', 'scheduler', 'scheduling']"
Energy Efficiency,"//===- MacroFusion.cpp - Macro Fusion -------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This file contains the implementation of the DAG scheduling mutation; /// to pair instructions back to back.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MacroFusion.cpp:439,schedul,scheduling,439,interpreter/llvm-project/llvm/lib/CodeGen/MacroFusion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MacroFusion.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"//===- MacroFusion.h - Macro Fusion -----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This file contains the definition of the DAG scheduling mutation to; /// pair instructions back to back.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MacroFusion.h:435,schedul,scheduling,435,interpreter/llvm-project/llvm/include/llvm/CodeGen/MacroFusion.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MacroFusion.h,1,['schedul'],['scheduling']
Energy Efficiency,"//===- MemoryBuiltins.cpp - Identify calls to memory builtins -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This family of functions identifies calls to builtin functions that allocate; // or free memory.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryBuiltins.cpp:451,allocate,allocate,451,interpreter/llvm-project/llvm/lib/Analysis/MemoryBuiltins.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemoryBuiltins.cpp,1,['allocate'],['allocate']
Energy Efficiency,"//===- MergeICmps.cpp - Optimize chains of integer comparisons ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass turns chains of integer comparisons into memcmp (the memcmp is; // later typically inlined as a chain of efficient hardware comparisons). This; // typically benefits c++ member or nonmember operator==().; //; // The basic idea is to replace a longer chain of integer comparisons loaded; // from contiguous memory locations into a shorter chain of larger integer; // comparisons. Benefits are double:; // - There are less jumps, and therefore less opportunities for mispredictions; // and I-cache misses.; // - Code size is smaller, both because jumps are removed and because the; // encoding of a 2*n byte compare is smaller than that of two n-byte; // compares.; //; // Example:; //; // struct S {; // int a;; // char b;; // char c;; // uint16_t d;; // bool operator==(const S& o) const {; // return a == o.a && b == o.b && c == o.c && d == o.d;; // }; // };; //; // Is optimized as :; //; // bool S::operator==(const S& o) const {; // return memcmp(this, &o, 8) == 0;; // }; //; // Which will later be expanded (ExpandMemCmp) as a single 8-bytes icmp.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/MergeICmps.cpp:498,efficient,efficient,498,interpreter/llvm-project/llvm/lib/Transforms/Scalar/MergeICmps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/MergeICmps.cpp,1,['efficient'],['efficient']
Energy Efficiency,"//===- ModuloSchedule.cpp - Software pipeline schedule expansion ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:46,schedul,schedule,46,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,1,['schedul'],['schedule']
Energy Efficiency,"//===- ModuloSchedule.h - Software pipeline schedule expansion ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Software pipelining (SWP) is an instruction scheduling technique for loops; // that overlaps loop iterations and exploits ILP via compiler transformations.; //; // There are multiple methods for analyzing a loop and creating a schedule.; // An example algorithm is Swing Modulo Scheduling (implemented by the; // MachinePipeliner). The details of how a schedule is arrived at are irrelevant; // for the task of actually rewriting a loop to adhere to the schedule, which; // is what this file does.; //; // A schedule is, for every instruction in a block, a Cycle and a Stage. Note; // that we only support single-block loops, so ""block"" and ""loop"" can be used; // interchangably.; //; // The Cycle of an instruction defines a partial order of the instructions in; // the remapped loop. Instructions within a cycle must not consume the output; // of any instruction in the same cycle. Cycle information is assumed to have; // been calculated such that the processor will execute instructions in; // lock-step (for example in a VLIW ISA).; //; // The Stage of an instruction defines the mapping between logical loop; // iterations and pipelined loop iterations. An example (unrolled) pipeline; // may look something like:; //; // I0[0] Execute instruction I0 of iteration 0; // I1[0], I0[1] Execute I0 of iteration 1 and I1 of iteration 1; // I1[1], I0[2]; // I1[2], I0[3]; //; // In the schedule for this unrolled sequence we would say that I0 was scheduled; // in stage 0 and I1 in stage 1:; //; // loop:; // [stage 0] x = I0; // [stage 1] I1 x (from stage 0); //; // And to actually generate valid code we must insert",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h:44,schedul,schedule,44,interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h,7,"['Schedul', 'schedul']","['Scheduling', 'schedule', 'scheduling']"
Energy Efficiency,"//===- MultiHazardRecognizer.cpp - Scheduler Support ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the MultiHazardRecognizer class, which is a wrapper; // for a set of ScheduleHazardRecognizer instances; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MultiHazardRecognizer.cpp:35,Schedul,Scheduler,35,interpreter/llvm-project/llvm/lib/CodeGen/MultiHazardRecognizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MultiHazardRecognizer.cpp,2,['Schedul'],"['ScheduleHazardRecognizer', 'Scheduler']"
Energy Efficiency,"//===- PPCBoolRetToInt.cpp ------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements converting i1 values to i32/i64 if they could be more; // profitably allocated as GPRs rather than CRs. This pass will become totally; // unnecessary if Register Bank Allocation and Global Instruction Selection ever; // go upstream.; //; // Presently, the pass converts i1 Constants, and Arguments to i32/i64 if the; // transitive closure of their uses includes only PHINodes, CallInsts, and; // ReturnInsts. The rational is that arguments are generally passed and returned; // in GPRs rather than CRs, so casting them to i32/i64 at the LLVM IR level will; // actually save casts at the Machine Instruction level.; //; // It might be useful to expand this pass to add bit-wise operations to the list; // of safe transitive closure types. Also, we miss some opportunities when LLVM; // represents logical AND and OR operations with control flow rather than data; // flow. For example by lowering the expression: return (A && B && C); //; // as: return A ? true : B && C.; //; // There's code in SimplifyCFG that code be used to turn control flow in data; // flow using SelectInsts. Selects are slow on some architectures (P7/P8), so; // this probably isn't good in general, but for the special case of i1, the; // Selects could be further lowered to bit operations that are fast everywhere.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBoolRetToInt.cpp:473,allocate,allocated,473,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBoolRetToInt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBoolRetToInt.cpp,1,['allocate'],['allocated']
Energy Efficiency,"//===- PPCELFStreamer.h - ELF Object Output --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is a custom MCELFStreamer for PowerPC.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCELFStreamer.h:417,Power,PowerPC,417,interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCELFStreamer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCELFStreamer.h,1,['Power'],['PowerPC']
Energy Efficiency,"//===- PPCInstructionSelector.cpp --------------------------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file implements the targeting of the InstructionSelector class for; /// PowerPC.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCInstructionSelector.cpp:468,Power,PowerPC,468,interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCInstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCInstructionSelector.cpp,1,['Power'],['PowerPC']
Energy Efficiency,"//===- PPCLegalizerInfo.h ----------------------------------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file declares the targeting of the Machinelegalizer class for PowerPC; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCLegalizerInfo.h:458,Power,PowerPC,458,interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCLegalizerInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCLegalizerInfo.h,1,['Power'],['PowerPC']
Energy Efficiency,"//===- PPCLegalizerInfo.h ----------------------------------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file implements the targeting of the Machinelegalizer class for PowerPC; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCLegalizerInfo.cpp:460,Power,PowerPC,460,interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCLegalizerInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCLegalizerInfo.cpp,1,['Power'],['PowerPC']
Energy Efficiency,"//===- PPCMachineScheduler.cpp - MI Scheduler for PowerPC -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMachineScheduler.cpp:36,Schedul,Scheduler,36,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMachineScheduler.cpp,2,"['Power', 'Schedul']","['PowerPC', 'Scheduler']"
Energy Efficiency,"//===- PPCMachineScheduler.h - Custom PowerPC MI scheduler --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Custom PowerPC MI scheduler.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMachineScheduler.h:38,Power,PowerPC,38,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMachineScheduler.h,4,"['Power', 'schedul']","['PowerPC', 'scheduler']"
Energy Efficiency,"//===- PPCMacroFusion.cpp - PowerPC Macro Fusion --------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This file contains the PowerPC implementation of the DAG scheduling; /// mutation to pair instructions back to back.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMacroFusion.cpp:28,Power,PowerPC,28,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMacroFusion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMacroFusion.cpp,3,"['Power', 'schedul']","['PowerPC', 'scheduling']"
Energy Efficiency,"//===- PPCMacroFusion.h - PowerPC Macro Fusion ----------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This file contains the PowerPC definition of the DAG scheduling; /// mutation to pair instructions back to back.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMacroFusion.h:26,Power,PowerPC,26,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMacroFusion.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMacroFusion.h,3,"['Power', 'schedul']","['PowerPC', 'scheduling']"
Energy Efficiency,"//===- PPCRegisterBankInfo.cpp --------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file implements the targeting of the RegisterBankInfo class for; /// PowerPC.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCRegisterBankInfo.cpp:465,Power,PowerPC,465,interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCRegisterBankInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCRegisterBankInfo.cpp,1,['Power'],['PowerPC']
Energy Efficiency,"//===- PPCXCOFFStreamer.h - XCOFF Object Output -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is a custom MCXCOFFStreamer for PowerPC.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCXCOFFStreamer.h:420,Power,PowerPC,420,interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCXCOFFStreamer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCXCOFFStreamer.h,1,['Power'],['PowerPC']
Energy Efficiency,"//===- PassManager.h --- Pass management for CodeGen ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This header defines the pass manager interface for codegen. The codegen; // pipeline consists of only machine function passes. There is no container; // relationship between IR module/function and machine function in terms of pass; // manager organization. So there is no need for adaptor classes (for example; // ModuleToMachineFunctionAdaptor). Since invalidation could only happen among; // machine function passes, there is no proxy classes to handle cross-IR-unit; // invalidation. IR analysis results are provided for machine function passes by; // their respective analysis managers such as ModuleAnalysisManager and; // FunctionAnalysisManager.; //; // TODO: Add MachineFunctionProperties support.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePassManager.h:664,adapt,adaptor,664,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachinePassManager.h,1,['adapt'],['adaptor']
Energy Efficiency,"//===- PatternMatch.h - Match on the LLVM IR --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides a simple and efficient mechanism for performing general; // tree-based pattern matches on the LLVM IR. The power of these routines is; // that it allows you to write concise patterns that are expressive and easy to; // understand. The other major advantage of this is that it allows you to; // trivially capture/bind elements in the pattern to variables. For example,; // you can do something like this:; //; // Value *Exp = ...; // Value *X, *Y; ConstantInt *C1, *C2; // (X & C1) | (Y & C2); // if (match(Exp, m_Or(m_And(m_Value(X), m_ConstantInt(C1)),; // m_And(m_Value(Y), m_ConstantInt(C2))))) {; // ... Pattern is matched and variables are bound ...; // }; //; // This is primarily useful to things like the instruction combiner, but can; // also be useful for static analysis tools or code generators.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PatternMatch.h:415,efficient,efficient,415,interpreter/llvm-project/llvm/include/llvm/IR/PatternMatch.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PatternMatch.h,2,"['efficient', 'power']","['efficient', 'power']"
Energy Efficiency,"//===- PredicateInfo.h - Build PredicateInfo ----------------------*-C++-*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file implements the PredicateInfo analysis, which creates an Extended; /// SSA form for operations used in branch comparisons and llvm.assume; /// comparisons.; ///; /// Copies of these operations are inserted into the true/false edge (and after; /// assumes), and information attached to the copies. All uses of the original; /// operation in blocks dominated by the true/false edge (and assume), are; /// replaced with uses of the copies. This enables passes to easily and sparsely; /// propagate condition based info into the operations that may be affected.; ///; /// Example:; /// %cmp = icmp eq i32 %x, 50; /// br i1 %cmp, label %true, label %false; /// true:; /// ret i32 %x; /// false:; /// ret i32 1; ///; /// will become; ///; /// %cmp = icmp eq i32, %x, 50; /// br i1 %cmp, label %true, label %false; /// true:; /// %x.0 = call \@llvm.ssa_copy.i32(i32 %x); /// ret i32 %x.0; /// false:; /// ret i32 1; ///; /// Using getPredicateInfoFor on x.0 will give you the comparison it is; /// dominated by (the icmp), and that you are located in the true edge of that; /// comparison, which tells you x.0 is 50.; ///; /// In order to reduce the number of copies inserted, predicateinfo is only; /// inserted where it would actually be live. This means if there are no uses of; /// an operation dominated by the branch edges, or by an assume, the associated; /// predicate info is never inserted.; ///; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/PredicateInfo.h:1537,reduce,reduce,1537,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/PredicateInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/PredicateInfo.h,1,['reduce'],['reduce']
Energy Efficiency,"//===- R600MergeVectorRegisters.cpp ---------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This pass merges inputs of swizzeable instructions into vector sharing; /// common data and/or have enough undef subreg using swizzle abilities.; ///; /// For instance let's consider the following pseudo code :; /// %5 = REG_SEQ %1, sub0, %2, sub1, %3, sub2, undef, sub3; /// ...; /// %7 = REG_SEQ %1, sub0, %3, sub1, undef, sub2, %4, sub3; /// (swizzable Inst) %7, SwizzleMask : sub0, sub1, sub2, sub3; ///; /// is turned into :; /// %5 = REG_SEQ %1, sub0, %2, sub1, %3, sub2, undef, sub3; /// ...; /// %7 = INSERT_SUBREG %4, sub3; /// (swizzable Inst) %7, SwizzleMask : sub0, sub2, sub1, sub3; ///; /// This allow regalloc to reduce register pressure for vector registers and; /// to reduce MOV count.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600OptimizeVectorRegisters.cpp:1023,reduce,reduce,1023,interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600OptimizeVectorRegisters.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600OptimizeVectorRegisters.cpp,2,['reduce'],['reduce']
Energy Efficiency,"//===- RDFLiveness.cpp ----------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Computation of the liveness information from the data-flow graph.; //; // The main functionality of this code is to compute block live-in; // information. With the live-in information in place, the placement; // of kill flags can also be recalculated.; //; // The block live-in calculation is based on the ideas from the following; // publication:; //; // Dibyendu Das, Ramakrishna Upadrasta, Benoit Dupont de Dinechin.; // ""Efficient Liveness Computation Using Merge Sets and DJ-Graphs.""; // ACM Transactions on Architecture and Code Optimization, Association for; // Computing Machinery, 2012, ACM TACO Special Issue on ""High-Performance; // and Embedded Architectures and Compilers"", 8 (4),; // <10.1145/2086696.2086706>. <hal-00647369>; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RDFLiveness.cpp:808,Efficient,Efficient,808,interpreter/llvm-project/llvm/lib/CodeGen/RDFLiveness.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RDFLiveness.cpp,1,['Efficient'],['Efficient']
Energy Efficiency,"//===- RISCVOptWInstrs.cpp - MI W instruction optimizations ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===---------------------------------------------------------------------===//; //; // This pass does some optimizations for *W instructions at the MI level.; //; // First it removes unneeded sext.w instructions. Either because the sign; // extended bits aren't consumed or because the input was already sign extended; // by an earlier instruction.; //; // Then it removes the -w suffix from opw instructions whenever all users are; // dependent only on the lower word of the result of the instruction.; // The cases handled are:; // * addw because c.add has a larger register encoding than c.addw.; // * addiw because it helps reduce test differences between RV32 and RV64; // w/o being a pessimization.; // * mulw because c.mulw doesn't exist but c.mul does (w/ zcb); // * slliw because c.slliw doesn't exist and c.slli does; //; //===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVOptWInstrs.cpp:923,reduce,reduce,923,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVOptWInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVOptWInstrs.cpp,1,['reduce'],['reduce']
Energy Efficiency,"//===- ReduceAliases.cpp - Specialized Delta Pass -------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce aliases in the provided Module.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceAliases.cpp:7,Reduce,ReduceAliases,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceAliases.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceAliases.cpp,2,"['Reduce', 'reduce']","['ReduceAliases', 'reduce']"
Energy Efficiency,"//===- ReduceAliases.h - Specialized Delta Pass -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce aliases in the provided Module.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceAliases.h:7,Reduce,ReduceAliases,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceAliases.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceAliases.h,2,"['Reduce', 'reduce']","['ReduceAliases', 'reduce']"
Energy Efficiency,"//===- ReduceArguments.cpp - Specialized Delta Pass -----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce uninteresting Arguments from declared and defined functions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceArguments.cpp:7,Reduce,ReduceArguments,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceArguments.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceArguments.cpp,2,"['Reduce', 'reduce']","['ReduceArguments', 'reduce']"
Energy Efficiency,"//===- ReduceArguments.h - Specialized Delta Pass ---------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce uninteresting Arguments from defined functions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceArguments.h:7,Reduce,ReduceArguments,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceArguments.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceArguments.h,2,"['Reduce', 'reduce']","['ReduceArguments', 'reduce']"
Energy Efficiency,"//===- ReduceArguments.h - Specialized Delta Pass ---------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce uninteresting BasicBlocks from defined functions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceBasicBlocks.h:7,Reduce,ReduceArguments,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceBasicBlocks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceBasicBlocks.h,2,"['Reduce', 'reduce']","['ReduceArguments', 'reduce']"
Energy Efficiency,"//===- ReduceAttributes.cpp - Specialized Delta Pass ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce uninteresting attributes.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceAttributes.cpp:7,Reduce,ReduceAttributes,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceAttributes.cpp,2,"['Reduce', 'reduce']","['ReduceAttributes', 'reduce']"
Energy Efficiency,"//===- ReduceAttributes.h - Specialized Delta Pass --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce uninteresting attributes.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceAttributes.h:7,Reduce,ReduceAttributes,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceAttributes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceAttributes.h,2,"['Reduce', 'reduce']","['ReduceAttributes', 'reduce']"
Energy Efficiency,"//===- ReduceBasicBlocks.cpp - Specialized Delta Pass ---------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce uninteresting BasicBlocks from defined functions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceBasicBlocks.cpp:7,Reduce,ReduceBasicBlocks,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceBasicBlocks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceBasicBlocks.cpp,2,"['Reduce', 'reduce']","['ReduceBasicBlocks', 'reduce']"
Energy Efficiency,"//===- ReduceDIMetadata.cpp - Specialized Delta pass for DebugInfo --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements two functions used by the Generic Delta Debugging; // Algorithm, which are used to reduce DebugInfo metadata nodes.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceDIMetadata.cpp:7,Reduce,ReduceDIMetadata,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceDIMetadata.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceDIMetadata.cpp,2,"['Reduce', 'reduce']","['ReduceDIMetadata', 'reduce']"
Energy Efficiency,"//===- ReduceDPValues.cpp - Specialized Delta Pass ------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce uninteresting DPValues from defined functions.; //; // DPValues store variable-location debug-info and are attached to instructions.; // This information used to be represented by intrinsics such as dbg.value, and; // would naturally get reduced by llvm-reduce like any other instruction. As; // DPValues get stored elsewhere, they need to be enumerated and eliminated like; // any other data structure in LLVM.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceDPValues.cpp:7,Reduce,ReduceDPValues,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceDPValues.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceDPValues.cpp,4,"['Reduce', 'reduce']","['ReduceDPValues', 'reduce', 'reduced']"
Energy Efficiency,"//===- ReduceDPValues.h -----------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce uninteresting DPValues from defined functions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceDPValues.h:7,Reduce,ReduceDPValues,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceDPValues.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceDPValues.h,2,"['Reduce', 'reduce']","['ReduceDPValues', 'reduce']"
Energy Efficiency,"//===- ReduceFunctionBodies.h - Specialized Delta Pass ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce function bodies in the provided Module.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceFunctionBodies.h:7,Reduce,ReduceFunctionBodies,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceFunctionBodies.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceFunctionBodies.h,2,"['Reduce', 'reduce']","['ReduceFunctionBodies', 'reduce']"
Energy Efficiency,"//===- ReduceFunctions.cpp - Specialized Delta Pass -----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce function bodies in the provided Module.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceFunctionBodies.cpp:7,Reduce,ReduceFunctions,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceFunctionBodies.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceFunctionBodies.cpp,2,"['Reduce', 'reduce']","['ReduceFunctions', 'reduce']"
Energy Efficiency,"//===- ReduceFunctions.cpp - Specialized Delta Pass -----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce functions (and any instruction that calls it) in the provided; // Module.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceFunctions.cpp:7,Reduce,ReduceFunctions,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceFunctions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceFunctions.cpp,2,"['Reduce', 'reduce']","['ReduceFunctions', 'reduce']"
Energy Efficiency,"//===- ReduceFunctions.h - Specialized Delta Pass ---------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce functions (and any instruction that calls it) in the provided; // Module.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceFunctions.h:7,Reduce,ReduceFunctions,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceFunctions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceFunctions.h,2,"['Reduce', 'reduce']","['ReduceFunctions', 'reduce']"
Energy Efficiency,"//===- ReduceGlobalObjects.cpp --------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalObjects.cpp:7,Reduce,ReduceGlobalObjects,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalObjects.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalObjects.cpp,1,['Reduce'],['ReduceGlobalObjects']
Energy Efficiency,"//===- ReduceGlobalObjects.h ------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalObjects.h:7,Reduce,ReduceGlobalObjects,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalObjects.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalObjects.h,1,['Reduce'],['ReduceGlobalObjects']
Energy Efficiency,"//===- ReduceGlobalValues.cpp - Specialized Delta Pass --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass to reduce; // global value attributes/specifiers.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalValues.cpp:7,Reduce,ReduceGlobalValues,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalValues.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalValues.cpp,2,"['Reduce', 'reduce']","['ReduceGlobalValues', 'reduce']"
Energy Efficiency,"//===- ReduceGlobalValues.h - Specialized Delta Pass ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass to reduce; // global value attributes/specifiers.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalValues.h:7,Reduce,ReduceGlobalValues,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalValues.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalValues.h,2,"['Reduce', 'reduce']","['ReduceGlobalValues', 'reduce']"
Energy Efficiency,"//===- ReduceGlobalVarInitializers.h ----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce initializers of Global Variables in the provided Module.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVarInitializers.h:7,Reduce,ReduceGlobalVarInitializers,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVarInitializers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVarInitializers.h,2,"['Reduce', 'reduce']","['ReduceGlobalVarInitializers', 'reduce']"
Energy Efficiency,"//===- ReduceGlobalVars.cpp - Specialized Delta Pass ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce Global Variables in the provided Module.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVars.cpp:7,Reduce,ReduceGlobalVars,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVars.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVars.cpp,2,"['Reduce', 'reduce']","['ReduceGlobalVars', 'reduce']"
Energy Efficiency,"//===- ReduceGlobalVars.cpp - Specialized Delta Pass ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce initializers of Global Variables in the provided Module.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVarInitializers.cpp:7,Reduce,ReduceGlobalVars,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVarInitializers.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVarInitializers.cpp,2,"['Reduce', 'reduce']","['ReduceGlobalVars', 'reduce']"
Energy Efficiency,"//===- ReduceGlobalVars.h - Specialized Delta Pass --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce Global Variables in the provided Module.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVars.h:7,Reduce,ReduceGlobalVars,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVars.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceGlobalVars.h,2,"['Reduce', 'reduce']","['ReduceGlobalVars', 'reduce']"
Energy Efficiency,"//===- ReduceIRReferences.cpp - Specialized Delta Pass --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to remove backreferences to the IR from MIR. In particular, this will remove; // the Value references in MachineMemOperands.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceIRReferences.cpp:7,Reduce,ReduceIRReferences,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceIRReferences.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceIRReferences.cpp,1,['Reduce'],['ReduceIRReferences']
Energy Efficiency,"//===- ReduceIRReferences.h - Specialized Delta Pass -----------*- c++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce uninteresting IR references from the MachineFunction.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceIRReferences.h:7,Reduce,ReduceIRReferences,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceIRReferences.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceIRReferences.h,2,"['Reduce', 'reduce']","['ReduceIRReferences', 'reduce']"
Energy Efficiency,"//===- ReduceInstructionFlags.cpp - Specialized Delta Pass ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Try to remove optimization flags on instructions; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructionFlags.cpp:7,Reduce,ReduceInstructionFlags,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructionFlags.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructionFlags.cpp,1,['Reduce'],['ReduceInstructionFlags']
Energy Efficiency,"//===- ReduceInstructionFlags.h - Specialized Delta Pass --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructionFlags.h:7,Reduce,ReduceInstructionFlags,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructionFlags.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructionFlags.h,1,['Reduce'],['ReduceInstructionFlags']
Energy Efficiency,"//===- ReduceInstructionFlagsMIR.cpp - Specialized Delta Pass -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce uninteresting MachineInstr flags from the MachineFunction.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructionFlagsMIR.cpp:7,Reduce,ReduceInstructionFlagsMIR,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructionFlagsMIR.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructionFlagsMIR.cpp,2,"['Reduce', 'reduce']","['ReduceInstructionFlagsMIR', 'reduce']"
Energy Efficiency,"//===- ReduceInstructionFlagsMIR.h -----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce uninteresting MachineInstr flags from the MachineFunction.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructionFlagsMIR.h:7,Reduce,ReduceInstructionFlagsMIR,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructionFlagsMIR.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructionFlagsMIR.h,2,"['Reduce', 'reduce']","['ReduceInstructionFlagsMIR', 'reduce']"
Energy Efficiency,"//===- ReduceInstructions.cpp - Specialized Delta Pass ---------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce uninteresting Instructions from defined functions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructions.cpp:7,Reduce,ReduceInstructions,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructions.cpp,2,"['Reduce', 'reduce']","['ReduceInstructions', 'reduce']"
Energy Efficiency,"//===- ReduceInstructions.h -------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce uninteresting Arguments from defined functions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructions.h:7,Reduce,ReduceInstructions,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructions.h,2,"['Reduce', 'reduce']","['ReduceInstructions', 'reduce']"
Energy Efficiency,"//===- ReduceInstructionsMIR.cpp - Specialized Delta Pass -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce uninteresting MachineInstr from the MachineFunction.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructionsMIR.cpp:7,Reduce,ReduceInstructionsMIR,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructionsMIR.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructionsMIR.cpp,2,"['Reduce', 'reduce']","['ReduceInstructionsMIR', 'reduce']"
Energy Efficiency,"//===- ReduceInstructionsMIR.h - Specialized Delta Pass --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce uninteresting MachineInstr from the MachineFunction.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructionsMIR.h:7,Reduce,ReduceInstructionsMIR,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructionsMIR.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInstructionsMIR.h,2,"['Reduce', 'reduce']","['ReduceInstructionsMIR', 'reduce']"
Energy Efficiency,"//===- ReduceInvokes.cpp - Specialized Delta Pass -------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Try to replace invokes with calls.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInvokes.cpp:7,Reduce,ReduceInvokes,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInvokes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInvokes.cpp,1,['Reduce'],['ReduceInvokes']
Energy Efficiency,"//===- ReduceInvokes.h - Specialized Delta Pass -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInvokes.h:7,Reduce,ReduceInvokes,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInvokes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceInvokes.h,1,['Reduce'],['ReduceInvokes']
Energy Efficiency,"//===- ReduceMemoryOperations.h - Specialized Delta Pass --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceMemoryOperations.h:7,Reduce,ReduceMemoryOperations,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceMemoryOperations.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceMemoryOperations.h,1,['Reduce'],['ReduceMemoryOperations']
Energy Efficiency,"//===- ReduceMetadata.cpp - Specialized Delta Pass ------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements two functions used by the Generic Delta Debugging; // Algorithm, which are used to reduce Metadata nodes.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceMetadata.cpp:7,Reduce,ReduceMetadata,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceMetadata.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceMetadata.cpp,2,"['Reduce', 'reduce']","['ReduceMetadata', 'reduce']"
Energy Efficiency,"//===- ReduceMetadata.h - Specialized Delta Pass ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements two functions used by the Generic Delta Debugging; // Algorithm, which are used to reduce Metadata nodes.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceMetadata.h:7,Reduce,ReduceMetadata,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceMetadata.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceMetadata.h,2,"['Reduce', 'reduce']","['ReduceMetadata', 'reduce']"
Energy Efficiency,"//===- ReduceMetadata.h - Specialized Delta Pass --------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements two functions used by the Generic Delta Debugging; // Algorithm, which are used to reduce Metadata nodes.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceDIMetadata.h:7,Reduce,ReduceMetadata,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceDIMetadata.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceDIMetadata.h,2,"['Reduce', 'reduce']","['ReduceMetadata', 'reduce']"
Energy Efficiency,"//===- ReduceModuleData.cpp -----------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a reduce pass to reduce various module data.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceModuleData.cpp:7,Reduce,ReduceModuleData,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceModuleData.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceModuleData.cpp,3,"['Reduce', 'reduce']","['ReduceModuleData', 'reduce']"
Energy Efficiency,"//===- ReduceModuleData.h ---------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceModuleData.h:7,Reduce,ReduceModuleData,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceModuleData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceModuleData.h,1,['Reduce'],['ReduceModuleData']
Energy Efficiency,"//===- ReduceOpcodes.cpp - Specialized Delta Pass -------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceMemoryOperations.cpp:7,Reduce,ReduceOpcodes,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceMemoryOperations.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceMemoryOperations.cpp,1,['Reduce'],['ReduceOpcodes']
Energy Efficiency,"//===- ReduceOpcodes.cpp - Specialized Delta Pass -------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Try to replace instructions that are likely to codegen to simpler or smaller; // sequences. This is a fuzzy and target specific concept.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceOpcodes.cpp:7,Reduce,ReduceOpcodes,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceOpcodes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceOpcodes.cpp,1,['Reduce'],['ReduceOpcodes']
Energy Efficiency,"//===- ReduceOpcodes.h - Specialized Delta Pass -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceOpcodes.h:7,Reduce,ReduceOpcodes,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceOpcodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceOpcodes.h,1,['Reduce'],['ReduceOpcodes']
Energy Efficiency,"//===- ReduceOperandBundes.cpp - Specialized Delta Pass -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce uninteresting operand bundes from calls.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceOperandBundles.cpp:7,Reduce,ReduceOperandBundes,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceOperandBundles.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceOperandBundles.cpp,2,"['Reduce', 'reduce']","['ReduceOperandBundes', 'reduce']"
Energy Efficiency,"//===- ReduceOperandBundes.h ------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce uninteresting operand bundes from calls.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceOperandBundles.h:7,Reduce,ReduceOperandBundes,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceOperandBundles.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceOperandBundles.h,2,"['Reduce', 'reduce']","['ReduceOperandBundes', 'reduce']"
Energy Efficiency,"//===- ReduceRegisterDefs.cpp - Specialized Delta Pass --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce uninteresting register uses from the MachineFunction.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceRegisterDefs.cpp:7,Reduce,ReduceRegisterDefs,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceRegisterDefs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceRegisterDefs.cpp,2,"['Reduce', 'reduce']","['ReduceRegisterDefs', 'reduce']"
Energy Efficiency,"//===- ReduceRegisterDefs.h - Specialized Delta Pass -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce uninteresting register defs from the MachineFunction.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceRegisterDefs.h:7,Reduce,ReduceRegisterDefs,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceRegisterDefs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceRegisterDefs.h,2,"['Reduce', 'reduce']","['ReduceRegisterDefs', 'reduce']"
Energy Efficiency,"//===- ReduceRegisterMasks.cpp - Specialized Delta Pass -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce custom register masks from the MachineFunction.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceRegisterMasks.cpp:7,Reduce,ReduceRegisterMasks,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceRegisterMasks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceRegisterMasks.cpp,2,"['Reduce', 'reduce']","['ReduceRegisterMasks', 'reduce']"
Energy Efficiency,"//===- ReduceRegisterMasks.h - Specialized Delta Pass ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceRegisterMasks.h:7,Reduce,ReduceRegisterMasks,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceRegisterMasks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceRegisterMasks.h,1,['Reduce'],['ReduceRegisterMasks']
Energy Efficiency,"//===- ReduceRegisterUses.cpp - Specialized Delta Pass --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce uninteresting register uses from the MachineFunction.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceRegisterUses.cpp:7,Reduce,ReduceRegisterUses,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceRegisterUses.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceRegisterUses.cpp,2,"['Reduce', 'reduce']","['ReduceRegisterUses', 'reduce']"
Energy Efficiency,"//===- ReduceRegisterUses.h - Specialized Delta Pass -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce uninteresting register uses from the MachineFunction.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceRegisterUses.h:7,Reduce,ReduceRegisterUses,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceRegisterUses.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceRegisterUses.h,2,"['Reduce', 'reduce']","['ReduceRegisterUses', 'reduce']"
Energy Efficiency,"//===- ReduceSpecialGlobals.cpp - Specialized Delta Pass ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce special globals, like @llvm.used, in the provided Module.; //; // For more details about special globals, see; // https://llvm.org/docs/LangRef.html#intrinsic-global-variables; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceSpecialGlobals.cpp:7,Reduce,ReduceSpecialGlobals,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceSpecialGlobals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceSpecialGlobals.cpp,2,"['Reduce', 'reduce']","['ReduceSpecialGlobals', 'reduce']"
Energy Efficiency,"//===- ReduceSpecialGlobals.h - Specialized Delta Pass ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to reduce special globals, like @llvm.used, in the provided Module.; //; // For more details about special globals, see; // https://llvm.org/docs/LangRef.html#intrinsic-global-variables; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceSpecialGlobals.h:7,Reduce,ReduceSpecialGlobals,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceSpecialGlobals.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceSpecialGlobals.h,2,"['Reduce', 'reduce']","['ReduceSpecialGlobals', 'reduce']"
Energy Efficiency,"//===- ReduceUsingSimplifyCFG.h - Specialized Delta Pass --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to call SimplifyCFG on individual basic blocks.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceUsingSimplifyCFG.h:7,Reduce,ReduceUsingSimplifyCFG,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceUsingSimplifyCFG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceUsingSimplifyCFG.h,1,['Reduce'],['ReduceUsingSimplifyCFG']
Energy Efficiency,"//===- ReduceUsingSimplifyCFG.h - Specialized Delta Pass ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to call SimplifyCFG on individual basic blocks.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceUsingSimplifyCFG.cpp:7,Reduce,ReduceUsingSimplifyCFG,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceUsingSimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceUsingSimplifyCFG.cpp,1,['Reduce'],['ReduceUsingSimplifyCFG']
Energy Efficiency,"//===- ReduceVirtualRegisters.cpp - Specialized Delta Pass ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to simplify virtual registers in MIR.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceVirtualRegisters.cpp:7,Reduce,ReduceVirtualRegisters,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceVirtualRegisters.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceVirtualRegisters.cpp,1,['Reduce'],['ReduceVirtualRegisters']
Energy Efficiency,"//===- ReduceVirtualRegisters.h - Specialized Delta Pass -------*- c++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements a function which calls the Generic Delta pass in order; // to simplify virtual register information.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceVirtualRegisters.h:7,Reduce,ReduceVirtualRegisters,7,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceVirtualRegisters.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/ReduceVirtualRegisters.h,1,['Reduce'],['ReduceVirtualRegisters']
Energy Efficiency,"//===- ReducerWorkItem.cpp - Wrapper for Module and MachineFunction -------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/ReducerWorkItem.cpp:7,Reduce,ReducerWorkItem,7,interpreter/llvm-project/llvm/tools/llvm-reduce/ReducerWorkItem.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/ReducerWorkItem.cpp,1,['Reduce'],['ReducerWorkItem']
Energy Efficiency,"//===- ReducerWorkItem.h - Wrapper for Module -------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/ReducerWorkItem.h:7,Reduce,ReducerWorkItem,7,interpreter/llvm-project/llvm/tools/llvm-reduce/ReducerWorkItem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/ReducerWorkItem.h,1,['Reduce'],['ReducerWorkItem']
Energy Efficiency,"//===- RegAllocFast.cpp - A fast register allocator for debug code --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This register allocator allocates registers to a basic block at a; /// time, attempting to keep values in registers and reusing registers as; /// appropriate.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocFast.cpp:414,allocate,allocates,414,interpreter/llvm-project/llvm/lib/CodeGen/RegAllocFast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocFast.cpp,1,['allocate'],['allocates']
Energy Efficiency,"//===- ResourcePriorityQueue.cpp - A DFA-oriented priority queue -*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the ResourcePriorityQueue class, which is a; // SchedulingPriorityQueue that prioritizes instructions using DFA state to; // reduce the length of the critical path through the basic block; // on VLIW platforms.; // The scheduler is basically a top-down adaptable list scheduler with DFA; // resource tracking added to the cost function.; // DFA is queried as a state machine to model ""packets/bundles"" during; // schedule. Currently packets/bundles are discarded at the end of; // scheduling, affecting only order of instructions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp:452,Schedul,SchedulingPriorityQueue,452,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp,7,"['Schedul', 'adapt', 'reduce', 'schedul']","['SchedulingPriorityQueue', 'adaptable', 'reduce', 'schedule', 'scheduler', 'scheduling']"
Energy Efficiency,"//===- RewriteRope.cpp - Rope specialized for rewriter --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the RewriteRope class, which is a powerful string.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp:438,power,powerful,438,interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp,1,['power'],['powerful']
Energy Efficiency,"//===- RewriteRope.h - Rope specialized for rewriter ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the RewriteRope class, which is a powerful string class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteRope.h:435,power,powerful,435,interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteRope.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteRope.h,1,['power'],['powerful']
Energy Efficiency,"//===- SIInsertHardClauses.cpp - Insert Hard Clauses ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Insert s_clause instructions to form hard clauses.; ///; /// Clausing load instructions can give cache coherency benefits. Before gfx10,; /// the hardware automatically detected ""soft clauses"", which were sequences of; /// memory instructions of the same type. In gfx10 this detection was removed,; /// and the s_clause instruction was introduced to explicitly mark ""hard; /// clauses"".; ///; /// It's the scheduler's job to form the clauses by putting similar memory; /// instructions next to each other. Our job is just to insert an s_clause; /// instruction to mark the start of each clause.; ///; /// Note that hard clauses are very similar to, but logically distinct from, the; /// groups of instructions that have to be restartable when XNACK is enabled.; /// The rules are slightly different in each case. For example an s_nop; /// instruction breaks a restartable group, but can appear in the middle of a; /// hard clause. (Before gfx10 there wasn't a distinction, and both were called; /// ""soft clauses"" or just ""clauses"".); ///; /// The SIFormMemoryClauses pass and GCNHazardRecognizer deal with restartable; /// groups, not hard clauses.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertHardClauses.cpp:801,schedul,scheduler,801,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertHardClauses.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertHardClauses.cpp,1,['schedul'],['scheduler']
Energy Efficiency,"//===- SIPreAllocateWWMRegs.cpp - WWM Register Pre-allocation -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// Pass to pre-allocated WWM registers; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIPreAllocateWWMRegs.cpp:407,allocate,allocated,407,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIPreAllocateWWMRegs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIPreAllocateWWMRegs.cpp,1,['allocate'],['allocated']
Energy Efficiency,"//===- SafeStack.cpp - Safe Stack Insertion -------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass splits the stack into the safe stack (kept as-is for LLVM backend); // and the unsafe stack (explicitly allocated and managed through the runtime; // support library).; //; // http://clang.llvm.org/docs/SafeStack.html; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SafeStack.cpp:497,allocate,allocated,497,interpreter/llvm-project/llvm/lib/CodeGen/SafeStack.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SafeStack.cpp,1,['allocate'],['allocated']
Energy Efficiency,"//===- ScheduleDAG.cpp - Implement the ScheduleDAG class ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Implements the ScheduleDAG class, which is a base class used by; /// scheduling implementation classes.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAG.cpp:7,Schedul,ScheduleDAG,7,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAG.cpp,4,"['Schedul', 'schedul']","['ScheduleDAG', 'scheduling']"
Energy Efficiency,"//===- ScheduleDAGInstrs.h - MachineInstr Scheduling ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Implements the ScheduleDAGInstrs class, which implements scheduling; /// for a MachineInstr-based dependency graph.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h:7,Schedul,ScheduleDAGInstrs,7,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGInstrs.h,4,"['Schedul', 'schedul']","['ScheduleDAGInstrs', 'Scheduling', 'scheduling']"
Energy Efficiency,"//===- ScheduleDAGMutation.h - MachineInstr Scheduling ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the ScheduleDAGMutation class, which represents; // a target-specific mutation of the dependency graph for scheduling.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGMutation.h:7,Schedul,ScheduleDAGMutation,7,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGMutation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAGMutation.h,4,"['Schedul', 'schedul']","['ScheduleDAGMutation', 'Scheduling', 'scheduling']"
Energy Efficiency,"//===- ScheduleDAGRRList.cpp - Reg pressure reduction list scheduler ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This implements bottom-up and top-down register pressure reduction list; // schedulers, using standard algorithms. The basic approach uses a priority; // queue of available nodes to schedule. One at a time, nodes are taken from; // the priority queue (thus in priority order), checked for legality to; // schedule, and emitted if legal.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:7,Schedul,ScheduleDAGRRList,7,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,5,"['Schedul', 'schedul']","['ScheduleDAGRRList', 'schedule', 'scheduler', 'schedulers']"
Energy Efficiency,"//===- ScheduleDAGVLIW.cpp - SelectionDAG list scheduler for VLIW -*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This implements a top-down list scheduler, using standard algorithms.; // The basic approach uses a priority queue of available nodes to schedule.; // One at a time, nodes are taken from the priority queue (thus in priority; // order), checked for legality to schedule, and emitted if legal.; //; // Nodes may not be legal to schedule either due to structural hazards (e.g.; // pipeline or resource constraints) or because an input to the instruction has; // not completed execution.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp:7,Schedul,ScheduleDAGVLIW,7,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,6,"['Schedul', 'schedul']","['ScheduleDAGVLIW', 'schedule', 'scheduler']"
Energy Efficiency,"//===- ScheduleDFS.h - ILP metric for ScheduleDAGInstrs ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Definition of an ILP metric for machine level instruction scheduling.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDFS.h:7,Schedul,ScheduleDFS,7,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDFS.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDFS.h,3,"['Schedul', 'schedul']","['ScheduleDAGInstrs', 'ScheduleDFS', 'scheduling']"
Energy Efficiency,"//===- ScopedHashTable.h - A simple scoped hash table -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements an efficient scoped hash table, which is useful for; // things like dominator-based optimizations. This allows clients to do things; // like this:; //; // ScopedHashTable<int, int> HT;; // {; // ScopedHashTableScope<int, int> Scope1(HT);; // HT.insert(0, 0);; // HT.insert(1, 1);; // {; // ScopedHashTableScope<int, int> Scope2(HT);; // HT.insert(0, 42);; // }; // }; //; // Looking up the value for ""0"" in the Scope2 block will return 42. Looking; // up the value for 0 before 42 is inserted or after Scope2 is popped will; // return 0.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ScopedHashTable.h:407,efficient,efficient,407,interpreter/llvm-project/llvm/include/llvm/ADT/ScopedHashTable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ScopedHashTable.h,1,['efficient'],['efficient']
Energy Efficiency,"//===- ScoreboardHazardRecognizer.cpp - Scheduler Support -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the ScoreboardHazardRecognizer class, which; // encapsultes hazard-avoidance heuristics for scheduling, based on the; // scheduling itineraries specified for the target.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScoreboardHazardRecognizer.cpp:40,Schedul,Scheduler,40,interpreter/llvm-project/llvm/lib/CodeGen/ScoreboardHazardRecognizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScoreboardHazardRecognizer.cpp,3,"['Schedul', 'schedul']","['Scheduler', 'scheduling']"
Energy Efficiency,"//===- SearchableTableEmitter.cpp - Generate efficiently searchable tables -==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This tablegen backend emits a generic array initialized by specified fields,; // together with companion index tables and lookup functions (binary search,; // currently).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/SearchableTableEmitter.cpp:45,efficient,efficiently,45,interpreter/llvm-project/llvm/utils/TableGen/SearchableTableEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/SearchableTableEmitter.cpp,1,['efficient'],['efficiently']
Energy Efficiency,"//===- SpillPlacement.cpp - Optimal Spill Code Placement ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the spill code placement analysis.; //; // Each edge bundle corresponds to a node in a Hopfield network. Constraints on; // basic blocks are weighted by the block frequency and added to become the node; // bias.; //; // Transparent basic blocks have the variable live through, but don't care if it; // is spilled or in a register. These blocks become connections in the Hopfield; // network, again weighted by block frequency.; //; // The Hopfield network minimizes (possibly locally) its energy function:; //; // E = -sum_n V_n * ( B_n + sum_{n, m linked by b} V_m * F_b ); //; // The energy function represents the expected spill code execution frequency,; // or the cost of spilling. This is a Lyapunov function which never increases; // when a node is updated. It is guaranteed to converge to a local minimum.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.cpp:893,energy,energy,893,interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SpillPlacement.cpp,2,['energy'],['energy']
Energy Efficiency,"//===- StackColoring.cpp --------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass implements the stack-coloring optimization that looks for; // lifetime markers machine instructions (LIFETIME_START and LIFETIME_END),; // which represent the possible lifetime of stack slots. It attempts to; // merge disjoint stack slots and reduce the used stack space.; // NOTE: This pass is not StackSlotColoring, which optimizes spill slots.; //; // TODO: In the future we plan to improve stack coloring in the following ways:; // 1. Allow merging multiple small slots into a single larger slot at different; // offsets.; // 2. Merge this pass with StackSlotColoring and allow merging of allocas with; // spill slots.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp:636,reduce,reduce,636,interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,1,['reduce'],['reduce']
Energy Efficiency,"//===- StackProtector.cpp - Stack Protector Insertion ---------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass inserts stack protectors into functions which need them. A variable; // with a random value in it is stored onto the stack before the local variables; // are allocated. Upon exiting the block, the stored value is checked. If it's; // changed, then there was some sort of violation and the program aborts.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackProtector.cpp:551,allocate,allocated,551,interpreter/llvm-project/llvm/lib/CodeGen/StackProtector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackProtector.cpp,1,['allocate'],['allocated']
Energy Efficiency,"//===- StackProtector.h - Stack Protector Insertion -------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass inserts stack protectors into functions which need them. A variable; // with a random value in it is stored onto the stack before the local variables; // are allocated. Upon exiting the block, the stored value is checked. If it's; // changed, then there was some sort of violation and the program aborts.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackProtector.h:551,allocate,allocated,551,interpreter/llvm-project/llvm/include/llvm/CodeGen/StackProtector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/StackProtector.h,1,['allocate'],['allocated']
Energy Efficiency,"//===- StraightLineStrengthReduce.cpp - -----------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements straight-line strength reduction (SLSR). Unlike loop; // strength reduction, this algorithm is designed to reduce arithmetic; // redundancy in straight-line code instead of loops. It has proven to be; // effective in simplifying arithmetic statements derived from an unrolled loop.; // It can also simplify the logic of SeparateConstOffsetFromGEP.; //; // There are many optimizations we can perform in the domain of SLSR. This file; // for now contains only an initial step. Specifically, we look for strength; // reduction candidates in the following forms:; //; // Form 1: B + i * S; // Form 2: (B + i) * S; // Form 3: &B[i * S]; //; // where S is an integer variable, and i is a constant integer. If we found two; // candidates S1 and S2 in the same form and S1 dominates S2, we may rewrite S2; // in a simpler way with respect to S1. For example,; //; // S1: X = B + i * S; // S2: Y = B + i' * S => X + (i' - i) * S; //; // S1: X = (B + i) * S; // S2: Y = (B + i') * S => X + (i' - i) * S; //; // S1: X = &B[i * S]; // S2: Y = &B[i' * S] => &X[(i' - i) * S]; //; // Note: (i' - i) * S is folded to the extent possible.; //; // This rewriting is in general a good idea. The code patterns we focus on; // usually come from loop unrolling, so (i' - i) * S is likely the same; // across iterations and can be reused. When that happens, the optimized form; // takes only one add starting from the second iteration.; //; // When such rewriting is possible, we call S1 a ""basis"" of S2. When S2 has; // multiple bases, we choose to rewrite S2 with respect to its ""immediate""; // basis, the basis that",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp:511,reduce,reduce,511,interpreter/llvm-project/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp,1,['reduce'],['reduce']
Energy Efficiency,"//===- StringSet.h - An efficient set built on StringMap --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// StringSet - A set-like wrapper for the StringMap.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/StringSet.h:24,efficient,efficient,24,interpreter/llvm-project/llvm/include/llvm/ADT/StringSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/StringSet.h,1,['efficient'],['efficient']
Energy Efficiency,"//===- TailRecursionElimination.cpp - Eliminate Tail Calls ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file transforms calls of the current function (self recursion) followed; // by a return instruction with a branch to the entry of the function, creating; // a loop. This pass also implements the following extensions to the basic; // algorithm:; //; // 1. Trivial instructions between the call and return do not prevent the; // transformation from taking place, though currently the analysis cannot; // support moving any really useful instructions (only dead ones).; // 2. This pass transforms functions that are prevented from being tail; // recursive by an associative and commutative expression to use an; // accumulator variable, thus compiling the typical naive factorial or; // 'fib' implementation into efficient code.; // 3. TRE is performed if the function returns void, if the return; // returns the result returned by the call, or if the function returns a; // run-time constant on all exits from the function. It is possible, though; // unlikely, that the return returns something else (like constant 0), and; // can still be TRE'd. It can be TRE'd if ALL OTHER return instructions in; // the function return the exact same value.; // 4. If it can prove that callees do not access their caller stack frame,; // they are marked as eligible for tail call elimination (by the code; // generator).; //; // There are several improvements that could be made:; //; // 1. If the function has any alloca instructions, these instructions will be; // moved out of the entry block of the function, causing them to be; // evaluated each time through the tail recursion. Safely keeping allocas; // in the entry bloc",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp:1098,efficient,efficient,1098,interpreter/llvm-project/llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp,1,['efficient'],['efficient']
Energy Efficiency,"//===- Target/X86/X86LowerAMXType.cpp - -------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Pass to transform <256 x i32> load/store; /// <256 x i32> is bitcasted to x86_amx on X86, and AMX instruction set only; /// provides simple operation on x86_amx. The basic elementwise operation; /// is not supported by AMX. Since x86_amx is bitcasted from vector <256 x i32>; /// and only AMX intrinsics can operate on the type, we need transform; /// load/store <256 x i32> instruction to AMX load/store. If the bitcast can; /// not be combined with load/store, we transform the bitcast to amx load/store; /// and <256 x i32> store/load.; ///; /// If Front End not use O0 but the Mid/Back end use O0, (e.g. ""Clang -O2 -S; /// -emit-llvm t.c"" + ""llc t.ll"") we should make sure the amx data is volatile,; /// because that is necessary for AMX fast register allocation. (In Fast; /// registera allocation, register will be allocated before spill/reload, so; /// there is no additional register for amx to identify the step in spill.); /// The volatileTileData() will handle this case.; /// e.g.; /// ----------------------------------------------------------; /// | def %td = ... |; /// | ... |; /// | ""use %td"" |; /// ----------------------------------------------------------; /// will transfer to -->; /// ----------------------------------------------------------; /// | def %td = ... |; /// | call void @llvm.x86.tilestored64.internal(mem, %td) |; /// | ... |; /// | %td2 = call x86_amx @llvm.x86.tileloadd64.internal(mem)|; /// | ""use %td2"" |; /// ----------------------------------------------------------; //; //===----------------------------------------------------------------------===//; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86LowerAMXType.cpp:1211,allocate,allocated,1211,interpreter/llvm-project/llvm/lib/Target/X86/X86LowerAMXType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86LowerAMXType.cpp,1,['allocate'],['allocated']
Energy Efficiency,"//===- TruncInstCombine.cpp -----------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // TruncInstCombine - looks for expression graphs post-dominated by TruncInst; // and for each eligible graph, it will create a reduced bit-width expression,; // replace the old expression with this new one and remove the old expression.; // Eligible expression graph is such that:; // 1. Contains only supported instructions.; // 2. Supported leaves: ZExtInst, SExtInst, TruncInst and Constant value.; // 3. Can be evaluated into type with reduced legal bit-width.; // 4. All instructions in the graph must not have users outside the graph.; // The only exception is for {ZExt, SExt}Inst with operand type equal to; // the new reduced type evaluated in (3).; //; // The motivation for this optimization is that evaluating and expression using; // smaller bit-width is preferable, especially for vectorization where we can; // fit more values in one vectorized instruction. In addition, this optimization; // may decrease the number of cast instructions, but will not increase it.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/TruncInstCombine.cpp:508,reduce,reduced,508,interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/TruncInstCombine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/TruncInstCombine.cpp,3,['reduce'],['reduced']
Energy Efficiency,"//===- Utils.cpp - llvm-reduce utility functions --------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains some utility functions supporting llvm-reduce.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/Utils.cpp:24,reduce,reduce,24,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/Utils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/Utils.cpp,2,['reduce'],['reduce']
Energy Efficiency,"//===- Utils.h - llvm-reduce utility functions ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains some utility functions supporting llvm-reduce.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/Utils.h:22,reduce,reduce,22,interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/Utils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/deltas/Utils.h,2,['reduce'],['reduce']
Energy Efficiency,"//===- VLIWMachineScheduler.cpp - VLIW-Focused Scheduling Pass ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // MachineScheduler schedules machine instructions after phi elimination. It; // preserves LiveIntervals so it can be invoked before register allocation.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp:47,Schedul,Scheduling,47,interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/VLIWMachineScheduler.cpp,2,"['Schedul', 'schedul']","['Scheduling', 'schedules']"
Energy Efficiency,"//===- VLIWMachineScheduler.h - VLIW-Focused Scheduling Pass ----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/VLIWMachineScheduler.h:45,Schedul,Scheduling,45,interpreter/llvm-project/llvm/include/llvm/CodeGen/VLIWMachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/VLIWMachineScheduler.h,1,['Schedul'],['Scheduling']
Energy Efficiency,"//===- X86CompressEVEX.cpp ------------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass compresses instructions from EVEX space to legacy/VEX/EVEX space; // when possible in order to reduce code size or facilitate HW decoding.; //; // Possible compression:; // a. AVX512 instruction (EVEX) -> AVX instruction (VEX); // b. Promoted instruction (EVEX) -> pre-promotion instruction (legacy/VEX); // c. NDD (EVEX) -> non-NDD (legacy); // d. NF_ND (EVEX) -> NF (EVEX); //; // Compression a, b and c can always reduce code size, with some exceptions; // such as promoted 16-bit CRC32 which is as long as the legacy version.; //; // legacy:; // crc32w %si, %eax ## encoding: [0x66,0xf2,0x0f,0x38,0xf1,0xc6]; // promoted:; // crc32w %si, %eax ## encoding: [0x62,0xf4,0x7d,0x08,0xf1,0xc6]; //; // From performance perspective, these should be same (same uops and same EXE; // ports). From a FMV perspective, an older legacy encoding is preferred b/c it; // can execute in more places (broader HW install base). So we will still do; // the compression.; //; // Compression d can help hardware decode (HW may skip reading the NDD; // register) although the instruction length remains unchanged.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CompressEVEX.cpp:488,reduce,reduce,488,interpreter/llvm-project/llvm/lib/Target/X86/X86CompressEVEX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CompressEVEX.cpp,2,['reduce'],['reduce']
Energy Efficiency,"//===- X86MacroFusion.cpp - X86 Macro Fusion ------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This file contains the X86 implementation of the DAG scheduling; /// mutation to pair instructions back to back.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86MacroFusion.cpp:443,schedul,scheduling,443,interpreter/llvm-project/llvm/lib/Target/X86/X86MacroFusion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86MacroFusion.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"//===- X86MacroFusion.h - X86 Macro Fusion --------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This file contains the X86 definition of the DAG scheduling mutation; /// to pair instructions back to back.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86MacroFusion.h:439,schedul,scheduling,439,interpreter/llvm-project/llvm/lib/Target/X86/X86MacroFusion.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86MacroFusion.h,1,['schedul'],['scheduling']
Energy Efficiency,"//===- clang/Lex/DependencyDirectivesScanner.h ---------------------*- C++ -*-//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This is the interface for scanning header and source files to get the; /// minimum necessary preprocessor directives for evaluating includes. It; /// reduces the source down to #define, #include, #import, @import, and any; /// conditional preprocessor logic that contains one of those.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/DependencyDirectivesScanner.h:546,reduce,reduces,546,interpreter/llvm-project/clang/include/clang/Lex/DependencyDirectivesScanner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Lex/DependencyDirectivesScanner.h,1,['reduce'],['reduces']
Energy Efficiency,"//===- iterator_range.h - A range adaptor for iterators ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This provides a very simple, boring adaptor for a begin and end iterator; /// into a range type. This should be used to build range views that work well; /// with range based for loops and range based constructors.; ///; /// Note that code here follows more standards-based coding conventions as it; /// is mirroring proposed interfaces for standardization.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/iterator_range.h:34,adapt,adaptor,34,interpreter/llvm-project/llvm/include/llvm/ADT/iterator_range.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/iterator_range.h,2,['adapt'],['adaptor']
Energy Efficiency,"//===- llvm-reduce.cpp - The LLVM Delta Reduction utility -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This program tries to reduce an IR test case for a given interesting-ness; // test. It runs multiple delta debugging passes in order to minimize the input; // file. It's worth noting that this is a part of the bugpoint redesign; // proposal, and thus a *temporary* tool that will eventually be integrated; // into the bugpoint tool itself.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/llvm-reduce.cpp:12,reduce,reduce,12,interpreter/llvm-project/llvm/tools/llvm-reduce/llvm-reduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/llvm-reduce.cpp,2,['reduce'],['reduce']
Energy Efficiency,"//===- llvm/ADT/DepthFirstIterator.h - Depth First iterator -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file builds on the ADT/GraphTraits.h file to build generic depth; /// first graph iterator. This file exposes the following functions/types:; ///; /// df_begin/df_end/df_iterator; /// * Normal depth-first iteration - visit a node and then all of its; /// children.; ///; /// idf_begin/idf_end/idf_iterator; /// * Depth-first iteration on the 'inverse' graph.; ///; /// df_ext_begin/df_ext_end/df_ext_iterator; /// * Normal depth-first iteration - visit a node and then all of its; /// children. This iterator stores the 'visited' set in an external set,; /// which allows it to be more efficient, and allows external clients to; /// use the set for other purposes.; ///; /// idf_ext_begin/idf_ext_end/idf_ext_iterator; /// * Depth-first iteration on the 'inverse' graph.; /// This iterator stores the 'visited' set in an external set, which; /// allows it to be more efficient, and allows external clients to use; /// the set for other purposes.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:987,efficient,efficient,987,interpreter/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h,2,['efficient'],['efficient']
Energy Efficiency,"//===- llvm/ADT/EquivalenceClasses.h - Generic Equiv. Classes ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// Generic implementation of equivalence classes through the use Tarjan's; /// efficient union-find algorithm.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/EquivalenceClasses.h:472,efficient,efficient,472,interpreter/llvm-project/llvm/include/llvm/ADT/EquivalenceClasses.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/EquivalenceClasses.h,1,['efficient'],['efficient']
Energy Efficiency,"//===- llvm/ADT/PagedVector.h - 'Lazily allocated' vectors --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the PagedVector class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/PagedVector.h:40,allocate,allocated,40,interpreter/llvm-project/llvm/include/llvm/ADT/PagedVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/PagedVector.h,1,['allocate'],['allocated']
Energy Efficiency,"//===- llvm/ADT/SparseBitVector.h - Efficient Sparse BitVector --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the SparseBitVector class. See the doxygen comment for; /// SparseBitVector for more details on the algorithm used.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SparseBitVector.h:36,Efficient,Efficient,36,interpreter/llvm-project/llvm/include/llvm/ADT/SparseBitVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SparseBitVector.h,1,['Efficient'],['Efficient']
Energy Efficiency,"//===- llvm/ADT/SparseSet.h - Sparse set ------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file defines the SparseSet class derived from the version described in; /// Briggs, Torczon, ""An efficient representation for sparse sets"", ACM Letters; /// on Programming Languages and Systems, Volume 2 Issue 1-4, March-Dec. 1993.; ///; /// A sparse set holds a small number of objects identified by integer keys from; /// a moderately sized universe. The sparse set uses more memory than other; /// containers in order to provide faster operations.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SparseSet.h:498,efficient,efficient,498,interpreter/llvm-project/llvm/include/llvm/ADT/SparseSet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/SparseSet.h,1,['efficient'],['efficient']
Energy Efficiency,"//===- llvm/CodeGen/AntiDepBreaker.h - Anti-Dependence Breaking -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the AntiDepBreaker class, which implements; // anti-dependence breaking heuristics for post-register-allocation scheduling.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AntiDepBreaker.h:516,schedul,scheduling,516,interpreter/llvm-project/llvm/include/llvm/CodeGen/AntiDepBreaker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AntiDepBreaker.h,1,['schedul'],['scheduling']
Energy Efficiency,"//===- llvm/CodeGen/CriticalAntiDepBreaker.h - Anti-Dep Support -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the CriticalAntiDepBreaker class, which; // implements register anti-dependence breaking along a blocks; // critical path during post-RA scheduler.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.h:541,schedul,scheduler,541,interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CriticalAntiDepBreaker.h,1,['schedul'],['scheduler']
Energy Efficiency,"//===- llvm/CodeGen/DFAPacketizer.h - DFA Packetizer for VLIW ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // This class implements a deterministic finite automaton (DFA) based; // packetizing mechanism for VLIW architectures. It provides APIs to; // determine whether there exists a legal mapping of instructions to; // functional unit assignments in a packet. The DFA is auto-generated from; // the target's Schedule.td file.; //; // A DFA consists of 3 major elements: states, inputs, and transitions. For; // the packetizing mechanism, the input is the set of instruction classes for; // a target. The state models all possible combinations of functional unit; // consumption for a given set of instructions in a packet. A transition; // models the addition of an instruction to a packet. In the DFA constructed; // by this class, if an instruction can be added to a packet, then a valid; // transition exists from the corresponding state. Invalid transitions; // indicate that the instruction cannot be added to the current packet.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/DFAPacketizer.h:679,Schedul,Schedule,679,interpreter/llvm-project/llvm/include/llvm/CodeGen/DFAPacketizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/DFAPacketizer.h,2,"['Schedul', 'consumption']","['Schedule', 'consumption']"
Energy Efficiency,"//===- llvm/CodeGen/GlobalISel/LegacyLegalizerInfo.h ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// Interface for Targets to specify which operations they can successfully; /// select and how the others should be expanded most efficiently.; /// This implementation has been deprecated for a long time but it still in use; /// in a few places.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegacyLegalizerInfo.h:518,efficient,efficiently,518,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegacyLegalizerInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegacyLegalizerInfo.h,1,['efficient'],['efficiently']
Energy Efficiency,"//===- llvm/CodeGen/GlobalISel/LegalizerInfo.h ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// Interface for Targets to specify which operations they can successfully; /// select and how the others should be expanded most efficiently.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h:518,efficient,efficiently,518,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/LegalizerInfo.h,1,['efficient'],['efficiently']
Energy Efficiency,"//===- llvm/CodeGen/ScheduleDAG.h - Common Base Class -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Implements the ScheduleDAG class, which is used as the common base; /// class for instruction schedulers. This encapsulates the scheduling DAG,; /// which is shared between SelectionDAG and MachineInstr scheduling.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:20,Schedul,ScheduleDAG,20,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,5,"['Schedul', 'schedul']","['ScheduleDAG', 'schedulers', 'scheduling']"
Energy Efficiency,"//===- llvm/CodeGen/SchedulerRegistry.h -------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the implementation for instruction scheduler function; // pass registry (RegisterScheduler).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h:20,Schedul,SchedulerRegistry,20,interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h,2,"['Schedul', 'schedul']","['SchedulerRegistry', 'scheduler']"
Energy Efficiency,"//===- llvm/CodeGen/TargetSchedule.h - Sched Machine Model ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a wrapper around MCSchedModel that allows the interface to; // benefit from information currently only available in TargetInstrInfo.; // Ideally, the scheduling interface would be fully defined in the MC layer.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSchedule.h:551,schedul,scheduling,551,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetSchedule.h,1,['schedul'],['scheduling']
Energy Efficiency,"//===- llvm/MC/MCInstrItineraries.h - Scheduling ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file describes the structures used for instruction; // itineraries, stages, and operand reads/writes. This is used by; // schedulers to determine instruction stages and latencies.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h:38,Schedul,Scheduling,38,interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h,2,"['Schedul', 'schedul']","['Scheduling', 'schedulers']"
Energy Efficiency,"//===- llvm/Pass.h - Base class for Passes ----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a base class that indicates that a specified class is a; // transformation pass implementation.; //; // Passes are designed this way so that it is possible to run passes in a cache; // and organizationally optimal order without having to specify it at the front; // end. This allows arbitrary passes to be strung together and have them; // executed as efficiently as possible.; //; // Passes should extend one of the classes below, depending on the guarantees; // that it can make about what will be modified as it is run. For example, most; // global optimizations should derive from FunctionPass, because they do not add; // or delete functions, they operate on the internals of the function.; //; // Note that this file #includes PassSupport.h and PassAnalysisSupport.h (at the; // bottom), so the APIs exposed by these files are also automatically available; // to all users of this file.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Pass.h:753,efficient,efficiently,753,interpreter/llvm-project/llvm/include/llvm/Pass.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Pass.h,1,['efficient'],['efficiently']
Energy Efficiency,"//===- llvm/Use.h - Definition of the Use class -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This defines the Use class. The Use class represents the operand of an; /// instruction or some other User instance which refers to a Value. The Use; /// class keeps the ""use list"" of the referenced value up to date.; ///; /// Pointer tagging is used to efficiently find the User corresponding to a Use; /// without having to store a User pointer in every Use. A User is preceded in; /// memory by all the Uses corresponding to its operands, and the low bits of; /// one of the fields (Prev) of the Use class are used to encode offsets to be; /// able to find that User given a pointer to any Use. For details, see:; ///; /// http://www.llvm.org/docs/ProgrammersManual.html#UserLayout; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Use.h:650,efficient,efficiently,650,interpreter/llvm-project/llvm/include/llvm/IR/Use.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Use.h,1,['efficient'],['efficiently']
Energy Efficiency,"//===- raw_os_ostream.h - std::ostream adaptor for raw_ostream --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the raw_os_ostream class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_os_ostream.h:39,adapt,adaptor,39,interpreter/llvm-project/llvm/include/llvm/Support/raw_os_ostream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_os_ostream.h,1,['adapt'],['adaptor']
Energy Efficiency,"//===-- AArch64A57FPLoadBalancing.cpp - Balance FP ops statically on A57---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // For best-case performance on Cortex-A57, we should try to use a balanced; // mix of odd and even D-registers when performing a critical sequence of; // independent, non-quadword FP/ASIMD floating-point multiply or; // multiply-accumulate operations.; //; // This pass attempts to detect situations where the register allocation may; // adversely affect this load balancing and to change the registers used so as; // to better utilize the CPU.; //; // Ideally we'd just take each multiply or multiply-accumulate in turn and; // allocate it alternating even or odd registers. However, multiply-accumulates; // are most efficiently performed in the same functional unit as their; // accumulation operand. Therefore this pass tries to find maximal sequences; // (""Chains"") of multiply-accumulates linked via their accumulation operand,; // and assign them all the same ""color"" (oddness/evenness).; //; // This optimization affects S-register and D-register floating point; // multiplies and FMADD/FMAs, as well as vector (floating point only) muls and; // FMADD/FMA. Q register instructions (and 128-bit vector instructions) are; // not affected.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64A57FPLoadBalancing.cpp:906,allocate,allocate,906,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64A57FPLoadBalancing.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64A57FPLoadBalancing.cpp,2,"['allocate', 'efficient']","['allocate', 'efficiently']"
Energy Efficiency,"//===-- AArch64CondBrTuning.cpp --- Conditional branch tuning for AArch64 -===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// This file contains a pass that transforms CBZ/CBNZ/TBZ/TBNZ instructions; /// into a conditional branch (B.cond), when the NZCV flags can be set for; /// ""free"". This is preferred on targets that have more flexibility when; /// scheduling B.cond instructions as compared to CBZ/CBNZ/TBZ/TBNZ (assuming; /// all other variables are equal). This can also reduce register pressure.; ///; /// A few examples:; ///; /// 1) add w8, w0, w1 -> cmn w0, w1 ; CMN is an alias of ADDS.; /// cbz w8, .LBB_2 -> b.eq .LBB0_2; ///; /// 2) add w8, w0, w1 -> adds w8, w0, w1 ; w8 has multiple uses.; /// cbz w8, .LBB1_2 -> b.eq .LBB1_2; ///; /// 3) sub w8, w0, w1 -> subs w8, w0, w1 ; w8 has multiple uses.; /// tbz w8, #31, .LBB6_2 -> b.pl .LBB6_2; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CondBrTuning.cpp:619,schedul,scheduling,619,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CondBrTuning.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CondBrTuning.cpp,2,"['reduce', 'schedul']","['reduce', 'scheduling']"
Energy Efficiency,"//===-- AArch64ConditionalCompares.cpp --- CCMP formation for AArch64 -----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the AArch64ConditionalCompares pass which reduces; // branching and code size by using the conditional compare instructions CCMP,; // CCMN, and FCMP.; //; // The CFG transformations for forming conditional compares are very similar to; // if-conversion, and this pass should run immediately before the early; // if-conversion pass.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ConditionalCompares.cpp:446,reduce,reduces,446,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ConditionalCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ConditionalCompares.cpp,1,['reduce'],['reduces']
Energy Efficiency,"//===-- AMDGPUAtomicOptimizer.cpp -----------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This pass optimizes atomic operations by using a single lane of a wavefront; /// to perform the atomic operation, thus reducing contention on that memory; /// location.; /// Atomic optimizer uses following strategies to compute scan and reduced; /// values; /// 1. DPP -; /// This is the most efficient implementation for scan. DPP uses Whole Wave; /// Mode (WWM); /// 2. Iterative -; // An alternative implementation iterates over all active lanes; /// of Wavefront using llvm.cttz and performs scan using readlane & writelane; /// intrinsics; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUAtomicOptimizer.cpp:632,reduce,reduced,632,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUAtomicOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUAtomicOptimizer.cpp,2,"['efficient', 'reduce']","['efficient', 'reduced']"
Energy Efficiency,"//===-- AMDGPULowerModuleLDSPass.cpp ------------------------------*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass eliminates local data store, LDS, uses from non-kernel functions.; // LDS is contiguous memory allocated per kernel execution.; //; // Background.; //; // The programming model is global variables, or equivalently function local; // static variables, accessible from kernels or other functions. For uses from; // kernels this is straightforward - assign an integer to the kernel for the; // memory required by all the variables combined, allocate them within that.; // For uses from functions there are performance tradeoffs to choose between.; //; // This model means the GPU runtime can specify the amount of memory allocated.; // If this is more than the kernel assumed, the excess can be made available; // using a language specific feature, which IR represents as a variable with; // no initializer. This feature is referred to here as ""Dynamic LDS"" and is; // lowered slightly differently to the normal case.; //; // Consequences of this GPU feature:; // - memory is limited and exceeding it halts compilation; // - a global accessed by one kernel exists independent of other kernels; // - a global exists independent of simultaneous execution of the same kernel; // - the address of the global may be different from different kernels as they; // do not alias, which permits only allocating variables they use; // - if the address is allowed to differ, functions need help to find it; //; // Uses from kernels are implemented here by grouping them in a per-kernel; // struct instance. This duplicates the variables, accurately modelling their; // aliasing properties relative to a single global represe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:488,allocate,allocated,488,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,3,['allocate'],"['allocate', 'allocated']"
Energy Efficiency,"//===-- ARMExpandPseudoInsts.cpp - Expand pseudo instructions -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a pass that expands pseudo instructions into target; // instructions to allow proper scheduling, if-conversion, and other late; // optimizations. This pass should be run after register allocation but before; // the post-regalloc scheduling pass.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp:487,schedul,scheduling,487,interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMExpandPseudoInsts.cpp,2,['schedul'],['scheduling']
Energy Efficiency,"//===-- ARMHazardRecognizer.h - ARM Hazard Recognizers ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines hazard recognizers for scheduling ARM functions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMHazardRecognizer.h:424,schedul,scheduling,424,interpreter/llvm-project/llvm/lib/Target/ARM/ARMHazardRecognizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMHazardRecognizer.h,1,['schedul'],['scheduling']
Energy Efficiency,"//===-- AVRExpandPseudoInsts.cpp - Expand pseudo instructions -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a pass that expands pseudo instructions into target; // instructions. This pass should be run after register allocation but before; // the post-regalloc scheduling pass.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRExpandPseudoInsts.cpp:555,schedul,scheduling,555,interpreter/llvm-project/llvm/lib/Target/AVR/AVRExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRExpandPseudoInsts.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"//===-- ControlHeightReduction.cpp - Control Height Reduction -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass merges conditional blocks of code and reduces the number of; // conditional branches in the hot paths based on profiles.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp:431,reduce,reduces,431,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/ControlHeightReduction.cpp,1,['reduce'],['reduces']
Energy Efficiency,"//===-- GCNHazardRecognizers.cpp - GCN Hazard Recognizer Impls ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements hazard recognizers for scheduling on GCN processors.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNHazardRecognizer.cpp:427,schedul,scheduling,427,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNHazardRecognizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNHazardRecognizer.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"//===-- GCNHazardRecognizers.h - GCN Hazard Recognizers ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines hazard recognizers for scheduling on GCN processors.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNHazardRecognizer.h:424,schedul,scheduling,424,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNHazardRecognizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNHazardRecognizer.h,1,['schedul'],['scheduling']
Energy Efficiency,"//===-- GCNSchedStrategy.cpp - GCN Scheduler Strategy ---------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This contains a MachineSchedStrategy implementation for maximizing wave; /// occupancy on GCN hardware.; ///; /// This pass will apply multiple scheduling stages to the same function.; /// Regions are first recorded in GCNScheduleDAGMILive::schedule. The actual; /// entry point for the scheduling of those regions is; /// GCNScheduleDAGMILive::runSchedStages.; /// Generally, the reason for having multiple scheduling stages is to account; /// for the kernel-wide effect of register usage on occupancy. Usually, only a; /// few scheduling regions will have register pressure high enough to limit; /// occupancy for the kernel, so constraints can be relaxed to improve ILP in; /// other regions.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.cpp:35,Schedul,Scheduler,35,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.cpp,6,"['Schedul', 'schedul']","['Scheduler', 'schedule', 'scheduling']"
Energy Efficiency,"//===-- GCNSchedStrategy.h - GCN Scheduler Strategy -*- C++ -*-------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.h:33,Schedul,Scheduler,33,interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/GCNSchedStrategy.h,1,['Schedul'],['Scheduler']
Energy Efficiency,"//===-- HexagonHazardRecognizer.cpp - Hexagon Post RA Hazard Recognizer ---===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the hazard recognizer for scheduling on Hexagon.; // Use a DFA based hazard recognizer.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHazardRecognizer.cpp:427,schedul,scheduling,427,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHazardRecognizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHazardRecognizer.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"//===-- InstructionPrecedenceTracking.cpp -----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // Implements a class that is able to define some instructions as ""special""; // (e.g. as having implicit control flow, or writing memory, or having another; // interesting property) and then efficiently answers queries of the types:; // 1. Are there any special instructions in the block of interest?; // 2. Return first of the special instructions in the given block;; // 3. Check if the given instruction is preceeded by the first special; // instruction in the same block.; // The class provides caching that allows to answer these queries quickly. The; // user must make sure that the cached data is invalidated properly whenever; // a content of some tracked block is changed.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionPrecedenceTracking.cpp:567,efficient,efficiently,567,interpreter/llvm-project/llvm/lib/Analysis/InstructionPrecedenceTracking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionPrecedenceTracking.cpp,1,['efficient'],['efficiently']
Energy Efficiency,"//===-- InstructionPrecedenceTracking.h -------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // Implements a class that is able to define some instructions as ""special""; // (e.g. as having implicit control flow, or writing memory, or having another; // interesting property) and then efficiently answers queries of the types:; // 1. Are there any special instructions in the block of interest?; // 2. Return first of the special instructions in the given block;; // 3. Check if the given instruction is preceeded by the first special; // instruction in the same block.; // The class provides caching that allows to answer these queries quickly. The; // user must make sure that the cached data is invalidated properly whenever; // a content of some tracked block is changed.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InstructionPrecedenceTracking.h:567,efficient,efficiently,567,interpreter/llvm-project/llvm/include/llvm/Analysis/InstructionPrecedenceTracking.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/InstructionPrecedenceTracking.h,1,['efficient'],['efficiently']
Energy Efficiency,"//===-- InterpBlock.h - Allocated blocks for the interpreter -*- C++ ----*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Defines the classes describing allocated blocks.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/InterpBlock.h:24,Allocate,Allocated,24,interpreter/llvm-project/clang/lib/AST/Interp/InterpBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/InterpBlock.h,2,"['Allocate', 'allocate']","['Allocated', 'allocated']"
Energy Efficiency,"//===-- LiveVariables.cpp - Live Variable Analysis for Machine Code -------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the LiveVariable analysis pass. For each machine; // instruction in the function, this pass calculates the set of registers that; // are immediately dead after the instruction (i.e., the instruction calculates; // the value, but it is never used) and the set of registers that are used by; // the instruction, but are never used after the instruction (i.e., they are; // killed).; //; // This class computes live variables using a sparse implementation based on; // the machine code SSA form. This class computes live variable information for; // each virtual and _register allocatable_ physical register in a function. It; // uses the dominance properties of SSA form to efficiently compute live; // variables for virtual registers, and assumes that physical registers are only; // live within a single basic block (allowing it to do a single local analysis; // to resolve physical register lifetimes in each basic block). If a physical; // register is not register allocatable, it is not tracked. This is useful for; // things like the stack pointer and condition codes.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp:1076,efficient,efficiently,1076,interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp,1,['efficient'],['efficiently']
Energy Efficiency,"//===-- M68kExpandPseudo.cpp - Expand pseudo instructions -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file contains a pass that expands pseudo instructions into target; /// instructions to allow proper scheduling, if-conversion, other late; /// optimizations, or simply the encoding of the instructions.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kExpandPseudo.cpp:501,schedul,scheduling,501,interpreter/llvm-project/llvm/lib/Target/M68k/M68kExpandPseudo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kExpandPseudo.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"//===-- MipsExpandPseudoInsts.cpp - Expand pseudo instructions ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a pass that expands pseudo instructions into target; // instructions to allow proper scheduling, if-conversion, and other late; // optimizations. This pass should be run after register allocation but before; // the post-regalloc scheduling pass.; //; // This is currently only used for expanding atomic pseudos after register; // allocation. We do this to avoid the fast register allocator introducing; // spills between ll and sc. These stores cause some MIPS implementations to; // abort the atomic RMW sequence.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsExpandPseudo.cpp:487,schedul,scheduling,487,interpreter/llvm-project/llvm/lib/Target/Mips/MipsExpandPseudo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsExpandPseudo.cpp,2,['schedul'],['scheduling']
Energy Efficiency,"//===-- OptimizedStructLayout.h - Struct layout algorithm ---------*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file provides an interface for laying out a sequence of fields; /// as a struct in a way that attempts to minimizes the total space; /// requirements of the struct while still satisfying the layout; /// requirements of the individual fields. The resulting layout may be; /// substantially more compact than simply laying out the fields in their; /// original order.; ///; /// Fields may be pre-assigned fixed offsets. They may also be given sizes; /// that are not multiples of their alignments. There is no currently no; /// way to describe that a field has interior padding that other fields may; /// be allocated into.; ///; /// This algorithm does not claim to be ""optimal"" for several reasons:; ///; /// - First, it does not guarantee that the result is minimal in size.; /// There is no known efficient algoorithm to achieve minimality for; /// unrestricted inputs. Nonetheless, this algorithm; ///; /// - Second, there are other ways that a struct layout could be optimized; /// besides space usage, such as locality. This layout may have a mixed; /// impact on locality: less overall memory may be used, but adjacent; /// fields in the original array may be moved further from one another.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/OptimizedStructLayout.h:1007,allocate,allocated,1007,interpreter/llvm-project/llvm/include/llvm/Support/OptimizedStructLayout.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/OptimizedStructLayout.h,2,"['allocate', 'efficient']","['allocated', 'efficient']"
Energy Efficiency,"//===-- PPC.h - Top-level interface for PowerPC Target ----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the entry points for global functions defined in the LLVM; // PowerPC back-end.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPC.h:40,Power,PowerPC,40,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPC.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPC.h,2,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCAsmParser.cpp - Parse PowerPC asm to MCInst instructions -------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/AsmParser/PPCAsmParser.cpp:33,Power,PowerPC,33,interpreter/llvm-project/llvm/lib/Target/PowerPC/AsmParser/PPCAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/AsmParser/PPCAsmParser.cpp,1,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCAsmPrinter.cpp - Print machine instrs to PowerPC assembly ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a printer that converts from our internal representation; // of machine-dependent LLVM code to PowerPC assembly language. This printer is; // the output mechanism used by `llc'.; //; // Documentation at http://developer.apple.com/documentation/DeveloperTools/; // Reference/Assembler/ASMIntroduction/chapter_1_section_1.html; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp:52,Power,PowerPC,52,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp,2,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCCTRLoops.cpp - Generate CTR loops ------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass generates machine instructions for the CTR loops related pseudos:; // 1: MTCTRloop/DecreaseCTRloop; // 2: MTCTR8loop/DecreaseCTR8loop; //; // If a CTR loop can be generated:; // 1: MTCTRloop/MTCTR8loop will be converted to ""mtctr""; // 2: DecreaseCTRloop/DecreaseCTR8loop will be converted to ""bdnz/bdz"" and; // its user branch instruction can be deleted.; //; // If a CTR loop can not be generated due to clobber of CTR:; // 1: MTCTRloop/MTCTR8loop can be deleted.; // 2: DecreaseCTRloop/DecreaseCTR8loop will be converted to ""addi -1"" and; // a ""cmplwi/cmpldi"".; //; // This pass runs just before register allocation, because we don't want; // register allocator to allocate register for DecreaseCTRloop if a CTR can be; // generated or if a CTR loop can not be generated, we don't have any condition; // register for the new added ""cmplwi/cmpldi"".; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCCTRLoops.cpp:1060,allocate,allocate,1060,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCCTRLoops.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCCTRLoops.cpp,1,['allocate'],['allocate']
Energy Efficiency,"//===-- PPCFastISel.cpp - PowerPC FastISel implementation -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the PowerPC-specific support for the FastISel class. Some; // of the target-specific code is generated by tablegen in the file; // PPCGenFastISel.inc, which is #included here.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp:26,Power,PowerPC,26,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,2,['Power'],"['PowerPC', 'PowerPC-specific']"
Energy Efficiency,"//===-- PPCFrameLowering.h - Define frame lowering for PowerPC --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.h:55,Power,PowerPC,55,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFrameLowering.h,1,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCFreeBSD.cpp - PowerPC ToolChain Implementations ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/PPCFreeBSD.cpp:25,Power,PowerPC,25,interpreter/llvm-project/clang/lib/Driver/ToolChains/PPCFreeBSD.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/PPCFreeBSD.cpp,1,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCGenScalarMASSEntries.cpp ---------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This transformation converts standard math functions into their; // corresponding MASS (scalar) entries for PowerPC targets.; // Following are examples of such conversion:; // tanh ---> __xl_tanh_finite; // Such lowering is legal under the fast-math option.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCGenScalarMASSEntries.cpp:491,Power,PowerPC,491,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCGenScalarMASSEntries.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCGenScalarMASSEntries.cpp,1,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCHazardRecognizers.cpp - PowerPC Hazard Recognizer Impls --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements hazard recognizers for scheduling on PowerPC processors.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCHazardRecognizers.cpp:35,Power,PowerPC,35,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCHazardRecognizers.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCHazardRecognizers.cpp,3,"['Power', 'schedul']","['PowerPC', 'scheduling']"
Energy Efficiency,"//===-- PPCHazardRecognizers.h - PowerPC Hazard Recognizers -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines hazard recognizers for scheduling on PowerPC processors.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCHazardRecognizers.h:33,Power,PowerPC,33,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCHazardRecognizers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCHazardRecognizers.h,3,"['Power', 'schedul']","['PowerPC', 'scheduling']"
Energy Efficiency,"//===-- PPCISelDAGToDAG.cpp - PPC --pattern matching inst selector --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a pattern matching instruction selector for PowerPC,; // converting from a legalized dag to a PPC dag.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:445,Power,PowerPC,445,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,1,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCInstrInfo.cpp - PowerPC Instruction Information ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the PowerPC implementation of the TargetInstrInfo class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp:27,Power,PowerPC,27,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,2,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCInstrInfo.h - PowerPC Instruction Information --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the PowerPC implementation of the TargetInstrInfo class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.h:25,Power,PowerPC,25,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.h,2,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCLinux.cpp - PowerPC ToolChain Implementations --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/PPCLinux.cpp:23,Power,PowerPC,23,interpreter/llvm-project/clang/lib/Driver/ToolChains/PPCLinux.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/PPCLinux.cpp,1,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCLowerMASSVEntries.cpp ------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements lowering of MASSV (SIMD) entries for specific PowerPC; // subtargets.; // Following is an example of a conversion specific to Power9 subtarget:; // __sind2_massv ---> __sind2_P9; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLowerMASSVEntries.cpp:450,Power,PowerPC,450,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLowerMASSVEntries.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLowerMASSVEntries.cpp,1,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCMCAsmInfo.h - PPC asm properties --------------------*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the declarations of the PowerPC MCAsmInfo classes.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCAsmInfo.h:426,Power,PowerPC,426,interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCAsmInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCAsmInfo.h,1,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCMCTargetDesc.cpp - PowerPC Target Descriptions -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides PowerPC specific target descriptions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp:30,Power,PowerPC,30,interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.cpp,2,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCMCTargetDesc.h - PowerPC Target Descriptions ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file provides PowerPC specific target descriptions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.h:28,Power,PowerPC,28,interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCMCTargetDesc.h,2,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCMachineFunctionInfo.cpp - Private data used for PowerPC --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMachineFunctionInfo.cpp:59,Power,PowerPC,59,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMachineFunctionInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMachineFunctionInfo.cpp,1,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCMachineFunctionInfo.h - Private data used for PowerPC --*- C++ -*-=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the PowerPC specific subclass of MachineFunctionInfo.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMachineFunctionInfo.h:57,Power,PowerPC,57,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMachineFunctionInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMachineFunctionInfo.h,2,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCMergeStringPool.cpp -------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This transformation tries to merge the strings in the module into one pool; // of strings. The idea is to reduce the number of TOC entries in the module so; // that instead of having one TOC entry for each string there is only one global; // TOC entry and all of the strings are referenced off of that one entry plus; // an offset.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMergeStringPool.cpp:488,reduce,reduce,488,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMergeStringPool.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMergeStringPool.cpp,1,['reduce'],['reduce']
Energy Efficiency,"//===-- PPCPredicates.cpp - PPC Branch Predicate Information --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the PowerPC branch predicates.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCPredicates.cpp:408,Power,PowerPC,408,interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCPredicates.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCPredicates.cpp,1,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCPredicates.h - PPC Branch Predicate Information ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file describes the PowerPC branch predicates.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCPredicates.h:407,Power,PowerPC,407,interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCPredicates.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCPredicates.h,1,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCRegisterBankInfo.h -----------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file declares the targeting of the RegisterBankInfo class for PowerPC.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCRegisterBankInfo.h:463,Power,PowerPC,463,interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCRegisterBankInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/GISel/PPCRegisterBankInfo.h,1,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCRegisterInfo.cpp - PowerPC Register Information ----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the PowerPC implementation of the TargetRegisterInfo; // class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCRegisterInfo.cpp:30,Power,PowerPC,30,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCRegisterInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCRegisterInfo.cpp,2,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCRegisterInfo.h - PowerPC Register Information Impl ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the PowerPC implementation of the TargetRegisterInfo; // class.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCRegisterInfo.h:28,Power,PowerPC,28,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCRegisterInfo.h,2,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCSubtarget.h - Define Subtarget for the PPC ----------*- C++ -*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the PowerPC specific subclass of TargetSubtargetInfo.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCSubtarget.h:406,Power,PowerPC,406,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCSubtarget.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCSubtarget.h,1,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCTargetMachine.cpp - Define TargetMachine for PowerPC -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Top-level implementation for the PowerPC target.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTargetMachine.cpp:56,Power,PowerPC,56,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTargetMachine.cpp,2,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCTargetMachine.h - Define TargetMachine for PowerPC ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the PowerPC specific subclass of TargetMachine.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTargetMachine.h:54,Power,PowerPC,54,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTargetMachine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTargetMachine.h,2,['Power'],['PowerPC']
Energy Efficiency,"//===-- PPCXCOFFObjectWriter.cpp - PowerPC XCOFF Writer -------------------===//; //; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCXCOFFObjectWriter.cpp:35,Power,PowerPC,35,interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCXCOFFObjectWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCXCOFFObjectWriter.cpp,1,['Power'],['PowerPC']
Energy Efficiency,"//===-- PerfectShuffle.cpp - Perfect Shuffle Generator --------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file computes an optimal sequence of instructions for doing all shuffles; // of two 4-element vectors. With a release build and when configured to emit; // an altivec instruction table, this takes about 30s to run on a 2.7Ghz; // PowerPC G5.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/PerfectShuffle/PerfectShuffle.cpp:618,Power,PowerPC,618,interpreter/llvm-project/llvm/utils/PerfectShuffle/PerfectShuffle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/PerfectShuffle/PerfectShuffle.cpp,1,['Power'],['PowerPC']
Energy Efficiency,"//===-- PowerPCSubtarget.cpp - PPC Subtarget Information ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the PPC specific subclass of TargetSubtargetInfo.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCSubtarget.cpp:8,Power,PowerPCSubtarget,8,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCSubtarget.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCSubtarget.cpp,1,['Power'],['PowerPCSubtarget']
Energy Efficiency,"//===-- PowerPCTargetInfo.cpp - PowerPC Target Implementation -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/TargetInfo/PowerPCTargetInfo.cpp:8,Power,PowerPCTargetInfo,8,interpreter/llvm-project/llvm/lib/Target/PowerPC/TargetInfo/PowerPCTargetInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/TargetInfo/PowerPCTargetInfo.cpp,2,['Power'],"['PowerPC', 'PowerPCTargetInfo']"
Energy Efficiency,"//===-- PowerPCTargetInfo.h - PowerPC Target Implementation -----*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/TargetInfo/PowerPCTargetInfo.h:8,Power,PowerPCTargetInfo,8,interpreter/llvm-project/llvm/lib/Target/PowerPC/TargetInfo/PowerPCTargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/TargetInfo/PowerPCTargetInfo.h,2,['Power'],"['PowerPC', 'PowerPCTargetInfo']"
Energy Efficiency,"//===-- R600MachineScheduler.cpp - R600 Scheduler Interface -*- C++ -*-----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// R600 Machine Scheduler interface; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600MachineScheduler.cpp:40,Schedul,Scheduler,40,interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600MachineScheduler.cpp,2,['Schedul'],['Scheduler']
Energy Efficiency,"//===-- R600MachineScheduler.h - R600 Scheduler Interface -*- C++ -*-------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// R600 Machine Scheduler interface; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600MachineScheduler.h:38,Schedul,Scheduler,38,interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600MachineScheduler.h,2,['Schedul'],['Scheduler']
Energy Efficiency,"//===-- RISCVExpandPseudoInsts.cpp - Expand pseudo instructions -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a pass that expands pseudo instructions into target; // instructions. This pass should be run after register allocation but before; // the post-regalloc scheduling pass.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVExpandPseudoInsts.cpp:555,schedul,scheduling,555,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVExpandPseudoInsts.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"//===-- RISCVInsertWriteVXRM.cpp - Insert Write of RISC-V VXRM CSR --------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass inserts writes to the VXRM CSR as needed by vector instructions.; // Each instruction that uses VXRM carries an operand that contains its required; // VXRM value. This pass tries to optimize placement to avoid redundant writes; // to VXRM.; //; // This is done using 2 dataflow algorithms. The first is a forward data flow; // to calculate where a VXRM value is available. The second is a backwards; // dataflow to determine where a VXRM value is anticipated.; //; // Finally, we use the results of these two dataflows to insert VXRM writes; // where a value is anticipated, but not available.; //; // FIXME: This pass does not split critical edges, so there can still be some; // redundancy.; //; // FIXME: If we are willing to have writes that aren't always needed, we could; // reduce the number of VXRM writes in some cases.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertWriteVXRM.cpp:1174,reduce,reduce,1174,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertWriteVXRM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVInsertWriteVXRM.cpp,1,['reduce'],['reduce']
Energy Efficiency,"//===-- RISCVPostRAExpandPseudoInsts.cpp - Expand pseudo instrs ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a pass that expands the pseudo instruction pseudolisimm32; // into target instructions. This pass should be run during the post-regalloc; // passes, before post RA scheduling.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVPostRAExpandPseudoInsts.cpp:559,schedul,scheduling,559,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVPostRAExpandPseudoInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVPostRAExpandPseudoInsts.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"//===-- SIMachineScheduler.cpp - SI Scheduler Interface -------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// SI Machine Scheduler interface; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp:36,Schedul,Scheduler,36,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,2,['Schedul'],['Scheduler']
Energy Efficiency,"//===-- SIMachineScheduler.h - SI Scheduler Interface -----------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// SI Machine Scheduler interface; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.h:34,Schedul,Scheduler,34,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.h,2,['Schedul'],['Scheduler']
Energy Efficiency,"//===-- SIOptimizeExecMaskingPreRA.cpp ------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This pass performs exec mask handling peephole optimizations which needs; /// to be done before register allocation to reduce register pressure.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIOptimizeExecMaskingPreRA.cpp:514,reduce,reduce,514,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIOptimizeExecMaskingPreRA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIOptimizeExecMaskingPreRA.cpp,1,['reduce'],['reduce']
Energy Efficiency,"//===-- ScheduleDAGPrinter.cpp - Implement ScheduleDAG::viewGraph() -------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This implements the ScheduleDAG::viewGraph method.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGPrinter.cpp:8,Schedul,ScheduleDAGPrinter,8,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGPrinter.cpp,3,['Schedul'],"['ScheduleDAG', 'ScheduleDAGPrinter']"
Energy Efficiency,"//===-- Target.cpp ----------------------------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; // The PowerPC ExegesisTarget.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/PowerPC/Target.cpp:301,Power,PowerPC,301,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/PowerPC/Target.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/PowerPC/Target.cpp,1,['Power'],['PowerPC']
Energy Efficiency,"//===-- WebAssemblyArgumentMove.cpp - Argument instruction moving ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This file moves ARGUMENT instructions after ScheduleDAG scheduling.; ///; /// Arguments are really live-in registers, however, since we use virtual; /// registers and LLVM doesn't support live-in virtual registers, we're; /// currently making do with ARGUMENT instructions which are placed at the top; /// of the entry block. The trick is to get them to *stay* at the top of the; /// entry block.; ///; /// The ARGUMENTS physical register keeps these instructions pinned in place; /// during liveness-aware CodeGen passes, however one thing which does not; /// respect this is the ScheduleDAG scheduler. This pass is therefore run; /// immediately after that.; ///; /// This is all hopefully a temporary solution until we find a better solution; /// for describing the live-in nature of arguments.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyArgumentMove.cpp:440,Schedul,ScheduleDAG,440,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyArgumentMove.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyArgumentMove.cpp,4,"['Schedul', 'schedul']","['ScheduleDAG', 'scheduler', 'scheduling']"
Energy Efficiency,"//===-- X86FastTileConfig.cpp - Fast Tile Register Configure---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Pass to config the shape of AMX physical registers; /// AMX register need to be configured before use. Before FastRegAllocation pass; /// the ldtilecfg instruction is inserted, however at that time we don't; /// know the shape of each physical tile registers, because the register; /// allocation is not done yet. This pass runs after register allocation; /// pass. It collects the shape information of each physical tile register; /// and store the shape in the stack slot that is allocated for load config; /// to tile config register.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastTileConfig.cpp:872,allocate,allocated,872,interpreter/llvm-project/llvm/lib/Target/X86/X86FastTileConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastTileConfig.cpp,1,['allocate'],['allocated']
Energy Efficiency,"//===-- X86FixupLEAs.cpp - use or replace LEA instructions -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the pass that finds instructions that can be; // re-written as LEA instructions in order to reduce pipeline delays.; // It replaces LEAs with ADD/INC/DEC when that is better for size/speed.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupLEAs.cpp:488,reduce,reduce,488,interpreter/llvm-project/llvm/lib/Target/X86/X86FixupLEAs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupLEAs.cpp,1,['reduce'],['reduce']
Energy Efficiency,"//===-- X86LowerAMXIntrinsics.cpp -X86 Scalarize AMX Intrinsics------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Pass to transform amx intrinsics to scalar operations.; /// This pass is always enabled and it skips when it is not -O0 and has no; /// optnone attributes. With -O0 or optnone attribute, the def of shape to amx; /// intrinsics is near the amx intrinsics code. We are not able to find a; /// point which post-dominate all the shape and dominate all amx intrinsics.; /// To decouple the dependency of the shape, we transform amx intrinsics; /// to scalar operation, so that compiling doesn't fail. In long term, we; /// should improve fast register allocation to allocate amx register.; //===----------------------------------------------------------------------===//; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86LowerAMXIntrinsics.cpp:951,allocate,allocate,951,interpreter/llvm-project/llvm/lib/Target/X86/X86LowerAMXIntrinsics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86LowerAMXIntrinsics.cpp,1,['allocate'],['allocate']
Energy Efficiency,"//===-- X86LowerTileCopy.cpp - Expand Tile Copy Instructions---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the pass which lower AMX tile copy instructions. Since; // there is no tile copy instruction, we need store tile register to stack; // and load from stack to another tile register. We need extra GR to hold; // the stride, and we need stack slot to hold the tile data register.; // We would run this pass after copy propagation, so that we don't miss copy; // optimization. And we would run this pass before prolog/epilog insertion,; // so that we can allocate stack slot.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86LowerTileCopy.cpp:852,allocate,allocate,852,interpreter/llvm-project/llvm/lib/Target/X86/X86LowerTileCopy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86LowerTileCopy.cpp,1,['allocate'],['allocate']
Energy Efficiency,"//===-- X86TileConfig.cpp - Tile Register Configure----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file Pass to config the shape of AMX physical registers; /// AMX register need to be configured before use. In X86PreTileConfig pass; /// the pldtilecfg instruction is inserted, however at that time we don't; /// know the shape of each physical tile registers, because the register; /// allocation is not done yet. This pass runs after egister allocation; /// pass. It collects the shape information of each physical tile register; /// and store the shape in the stack slot that is allocated for load config; /// to tile config register.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TileConfig.cpp:865,allocate,allocated,865,interpreter/llvm-project/llvm/lib/Target/X86/X86TileConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TileConfig.cpp,1,['allocate'],['allocated']
Energy Efficiency,"//===-- llvm/CodeGen/LiveVariables.h - Live Variable Analysis ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the LiveVariables analysis pass. For each machine; // instruction in the function, this pass calculates the set of registers that; // are immediately dead after the instruction (i.e., the instruction calculates; // the value, but it is never used) and the set of registers that are used by; // the instruction, but are never used after the instruction (i.e., they are; // killed).; //; // This class computes live variables using a sparse implementation based on; // the machine code SSA form. This class computes live variable information for; // each virtual and _register allocatable_ physical register in a function. It; // uses the dominance properties of SSA form to efficiently compute live; // variables for virtual registers, and assumes that physical registers are only; // live within a single basic block (allowing it to do a single local analysis; // to resolve physical register lifetimes in each basic block). If a physical; // register is not register allocatable, it is not tracked. This is useful for; // things like the stack pointer and condition codes.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h:1077,efficient,efficiently,1077,interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LiveVariables.h,1,['efficient'],['efficiently']
Energy Efficiency,"//===-- llvm/GlobalVariable.h - GlobalVariable class ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains the declaration of the GlobalVariable class, which; // represents a single global variable (or constant) in the VM.; //; // Global variables are constant pointers that refer to hunks of space that are; // allocated by either the VM, or by the linker in a static compiler. A global; // variable may have an initial value, which is copied into the executables .data; // area. Global Constants are required to have initializers.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GlobalVariable.h:607,allocate,allocated,607,interpreter/llvm-project/llvm/include/llvm/IR/GlobalVariable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GlobalVariable.h,1,['allocate'],['allocated']
Energy Efficiency,"//===-- llvm/MC/MCSchedule.h - Scheduling -----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the classes used to describe a subtarget's machine model; // for scheduling and other instruction cost heuristics.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h:31,Schedul,Scheduling,31,interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,2,"['Schedul', 'schedul']","['Scheduling', 'scheduling']"
Energy Efficiency,"//===-- llvm/OperandTraits.h - OperandTraits class definition ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the traits classes that are handy for enforcing the correct; // layout of various User subclasses. It also provides the means for accessing; // the operands in the most efficient manner.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/OperandTraits.h:570,efficient,efficient,570,interpreter/llvm-project/llvm/include/llvm/IR/OperandTraits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/OperandTraits.h,1,['efficient'],['efficient']
Energy Efficiency,"//===-- llvm/Support/Alignment.h - Useful alignment functions ---*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains types to represent alignments.; // They are instrumented to guarantee some invariants are preserved and prevent; // invalid manipulations.; //; // - Align represents an alignment in bytes, it is always set and always a valid; // power of two, its minimum value is 1 which means no alignment requirements.; //; // - MaybeAlign is an optional type, it may be undefined or set. When it's set; // you can get the underlying Align type by using the getValue() method.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Alignment.h:631,power,power,631,interpreter/llvm-project/llvm/include/llvm/Support/Alignment.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Alignment.h,1,['power'],['power']
Energy Efficiency,"//===-- tools/llvm-reduce/TestRunner.h ---------------------------*- C++ -*-===/; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/TestRunner.h:19,reduce,reduce,19,interpreter/llvm-project/llvm/tools/llvm-reduce/TestRunner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-reduce/TestRunner.h,1,['reduce'],['reduce']
Energy Efficiency,"//===--- AMDGPUExportClusting.cpp - AMDGPU Export Clustering -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This file contains a DAG scheduling mutation to cluster shader; /// exports.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUExportClustering.cpp:414,schedul,scheduling,414,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUExportClustering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUExportClustering.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"//===--- AMDGPUIGroupLP.cpp - AMDGPU IGroupLP ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // \file This file defines a set of schedule DAG mutations that can be used to; // override default scheduler behavior to enforce specific scheduling patterns.; // They should be used in cases where runtime performance considerations such as; // inter-wavefront interactions, mean that compile-time heuristics cannot; // predict the optimal instruction ordering, or in kernels where optimum; // instruction scheduling is important enough to warrant manual intervention.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp:399,schedul,schedule,399,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUIGroupLP.cpp,4,['schedul'],"['schedule', 'scheduler', 'scheduling']"
Energy Efficiency,"//===--- AMDGPUMacroFusion.cpp - AMDGPU Macro Fusion ----------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This file contains the AMDGPU implementation of the DAG scheduling; /// mutation to pair instructions back to back.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUMacroFusion.cpp:446,schedul,scheduling,446,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUMacroFusion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUMacroFusion.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"//===--- ASTMatchFinder.cpp - Structural query framework ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Implements an algorithm to efficiently search for matches on AST nodes.; // Uses memoization to support recursive matches like HasDescendant.; //; // The general idea is to visit all AST nodes with a RecursiveASTVisitor,; // calling the Matches(...) method of each matcher we are running on each; // AST node. The matcher can recurse via the ASTMatchFinder interface.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ASTMatchers/ASTMatchFinder.cpp:410,efficient,efficiently,410,interpreter/llvm-project/clang/lib/ASTMatchers/ASTMatchFinder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ASTMatchers/ASTMatchFinder.cpp,1,['efficient'],['efficiently']
Energy Efficiency,"//===--- Block.cpp - Allocated blocks for the interpreter -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Defines the classes describing allocated blocks.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/InterpBlock.cpp:21,Allocate,Allocated,21,interpreter/llvm-project/clang/lib/AST/Interp/InterpBlock.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/InterpBlock.cpp,2,"['Allocate', 'allocate']","['Allocated', 'allocated']"
Energy Efficiency,"//===--- ClangCommentCommandInfoEmitter.cpp - Generate command lists -----====//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This tablegen backend emits command lists and efficient matchers for command; // names that are used in documentation comments.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangCommentCommandInfoEmitter.cpp:429,efficient,efficient,429,interpreter/llvm-project/clang/utils/TableGen/ClangCommentCommandInfoEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangCommentCommandInfoEmitter.cpp,1,['efficient'],['efficient']
Energy Efficiency,"//===--- ClangCommentHTMLNamedCharacterReferenceEmitter.cpp -----------------=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This tablegen backend emits an efficient function to translate HTML named; // character references to UTF-8 sequences.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangCommentHTMLNamedCharacterReferenceEmitter.cpp:414,efficient,efficient,414,interpreter/llvm-project/clang/utils/TableGen/ClangCommentHTMLNamedCharacterReferenceEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangCommentHTMLNamedCharacterReferenceEmitter.cpp,1,['efficient'],['efficient']
Energy Efficiency,"//===--- ClangCommentHTMLTagsEmitter.cpp - Generate HTML tag list for Clang -=//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This tablegen backend emits efficient matchers for HTML tags that are used; // in documentation comments.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangCommentHTMLTagsEmitter.cpp:411,efficient,efficient,411,interpreter/llvm-project/clang/utils/TableGen/ClangCommentHTMLTagsEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangCommentHTMLTagsEmitter.cpp,1,['efficient'],['efficient']
Energy Efficiency,"//===--- DeclAccessPair.h - A decl bundled with its path access -*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines the DeclAccessPair class, which provides an; // efficient representation of a pair of a NamedDecl* and an; // AccessSpecifier. Generally the access specifier gives the; // natural access of a declaration when named in a class, as; // defined in C++ [class.access.base]p1.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclAccessPair.h:449,efficient,efficient,449,interpreter/llvm-project/clang/include/clang/AST/DeclAccessPair.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclAccessPair.h,1,['efficient'],['efficient']
Energy Efficiency,"//===--- HexagonHazardRecognizer.h - Hexagon Post RA Hazard Recognizer ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // This file defines the hazard recognizer for scheduling on Hexagon.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHazardRecognizer.h:423,schedul,scheduling,423,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHazardRecognizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHazardRecognizer.h,1,['schedul'],['scheduling']
Energy Efficiency,"//===--- PPCFreeBSD.h - PowerPC ToolChain Implementations -------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/PPCFreeBSD.h:24,Power,PowerPC,24,interpreter/llvm-project/clang/lib/Driver/ToolChains/PPCFreeBSD.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/PPCFreeBSD.h,1,['Power'],['PowerPC']
Energy Efficiency,"//===--- PPCLinux.h - PowerPC ToolChain Implementations ---------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/PPCLinux.h:22,Power,PowerPC,22,interpreter/llvm-project/clang/lib/Driver/ToolChains/PPCLinux.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/PPCLinux.h,1,['Power'],['PowerPC']
Energy Efficiency,"//===--- ScheduleDAGSDNodes.cpp - Implement the ScheduleDAGSDNodes class --===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This implements the ScheduleDAG class, which is a base class used by; // scheduling implementation classes.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp:9,Schedul,ScheduleDAGSDNodes,9,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.cpp,4,"['Schedul', 'schedul']","['ScheduleDAG', 'ScheduleDAGSDNodes', 'scheduling']"
Energy Efficiency,"//===--- SourceLocationEncoding.h - Small serialized locations --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Source locations are stored pervasively in the AST, making up a third of; // the size of typical serialized files. Storing them efficiently is important.; //; // We use integers optimized by VBR-encoding, because:; // - when abbreviations cannot be used, VBR6 encoding is our only choice; // - in the worst case a SourceLocation can be ~any 32-bit number, but in; // practice they are highly predictable; //; // We encode the integer so that likely values encode as small numbers that; // turn into few VBR chunks:; // - the invalid sentinel location is a very common value: it encodes as 0; // - the ""macro or not"" bit is stored at the bottom of the integer; // (rather than at the top, as in memory), so macro locations can have; // small representations.; // - related locations (e.g. of a left and right paren pair) are usually; // similar, so when encoding a sequence of locations we store only; // differences between successive elements.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/SourceLocationEncoding.h:511,efficient,efficiently,511,interpreter/llvm-project/clang/include/clang/Serialization/SourceLocationEncoding.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Serialization/SourceLocationEncoding.h,1,['efficient'],['efficiently']
Energy Efficiency,"//===--- TrailingObjects.h - Variable-length classes ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This header defines support for implementing classes that have; /// some trailing object (or arrays of objects) appended to them. The; /// main purpose is to make it obvious where this idiom is being used,; /// and to make the usage more idiomatic and more difficult to get; /// wrong.; ///; /// The TrailingObject template abstracts away the reinterpret_cast,; /// pointer arithmetic, and size calculations used for the allocation; /// and access of appended arrays of objects, and takes care that they; /// are all allocated at their required alignment. Additionally, it; /// ensures that the base type is final -- deriving from a class that; /// expects data appended immediately after it is typically not safe.; ///; /// Users are expected to derive from this template, and provide; /// numTrailingObjects implementations for each trailing type except; /// the last, e.g. like this sample:; ///; /// \code; /// class VarLengthObj : private TrailingObjects<VarLengthObj, int, double> {; /// friend TrailingObjects;; ///; /// unsigned NumInts, NumDoubles;; /// size_t numTrailingObjects(OverloadToken<int>) const { return NumInts; }; /// };; /// \endcode; ///; /// You can access the appended arrays via 'getTrailingObjects', and; /// determine the size needed for allocation via; /// 'additionalSizeToAlloc' and 'totalSizeToAlloc'.; ///; /// All the methods implemented by this class are intended for use; /// by the implementation of the class, not as part of its interface; /// (thus, private inheritance is suggested).; ///; //===---------------------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TrailingObjects.h:913,allocate,allocated,913,interpreter/llvm-project/llvm/include/llvm/Support/TrailingObjects.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TrailingObjects.h,1,['allocate'],['allocated']
Energy Efficiency,"//===--- TransAutoreleasePool.cpp - Transformations to ARC mode -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // rewriteAutoreleasePool:; //; // Calls to NSAutoreleasePools will be rewritten as an @autorelease scope.; //; // NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];; // ...; // [pool release];; // ---->; // @autorelease {; // ...; // }; //; // An NSAutoreleasePool will not be touched if:; // - There is not a corresponding -release/-drain in the same scope; // - Not all references of the NSAutoreleasePool variable can be removed; // - There is a variable that is declared inside the intended @autorelease scope; // which is also used outside it.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransAutoreleasePool.cpp:724,drain,drain,724,interpreter/llvm-project/clang/lib/ARCMigrate/TransAutoreleasePool.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransAutoreleasePool.cpp,1,['drain'],['drain']
Energy Efficiency,"//===--- ppc64.h - Generic JITLink ppc64 edge kinds, utilities --*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Generic utilities for graphs representing 64-bit PowerPC objects.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/ppc64.h:432,Power,PowerPC,432,interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/ppc64.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ExecutionEngine/JITLink/ppc64.h,1,['Power'],['PowerPC']
Energy Efficiency,"//===--- raw_os_ostream.cpp - Implement the raw_os_ostream class ----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This implements support adapting raw_ostream to std::ostream.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/raw_os_ostream.cpp:407,adapt,adapting,407,interpreter/llvm-project/llvm/lib/Support/raw_os_ostream.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/raw_os_ostream.cpp,1,['adapt'],['adapting']
Energy Efficiency,"//===---- LatencyPriorityQueue.cpp - A latency-oriented priority queue ----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the LatencyPriorityQueue class, which is a; // SchedulingPriorityQueue that schedules using latency information to; // reduce the length of the critical path through the basic block.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LatencyPriorityQueue.cpp:451,Schedul,SchedulingPriorityQueue,451,interpreter/llvm-project/llvm/lib/CodeGen/LatencyPriorityQueue.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LatencyPriorityQueue.cpp,3,"['Schedul', 'reduce', 'schedul']","['SchedulingPriorityQueue', 'reduce', 'schedules']"
Energy Efficiency,"//===---- LatencyPriorityQueue.h - A latency-oriented priority queue ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file declares the LatencyPriorityQueue class, which is a; // SchedulingPriorityQueue that schedules using latency information to; // reduce the length of the critical path through the basic block.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LatencyPriorityQueue.h:449,Schedul,SchedulingPriorityQueue,449,interpreter/llvm-project/llvm/include/llvm/CodeGen/LatencyPriorityQueue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/LatencyPriorityQueue.h,3,"['Schedul', 'reduce', 'schedul']","['SchedulingPriorityQueue', 'reduce', 'schedules']"
Energy Efficiency,"//===---- PPCCCState.cpp - CCState with PowerPC specific extensions ---------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCCCState.cpp:40,Power,PowerPC,40,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCCCState.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCCCState.cpp,1,['Power'],['PowerPC']
Energy Efficiency,"//===---- PPCCCState.h - CCState with PowerPC specific extensions -----------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCCCState.h:38,Power,PowerPC,38,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCCCState.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCCCState.h,1,['Power'],['PowerPC']
Energy Efficiency,"//===---- PPCReduceCRLogicals.cpp - Reduce CR Bit Logical operations ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===---------------------------------------------------------------------===//; //; // This pass aims to reduce the number of logical operations on bits in the CR; // register. These instructions have a fairly high latency and only a single; // pipeline at their disposal in modern PPC cores. Furthermore, they have a; // tendency to occur in fairly small blocks where there's little opportunity; // to hide the latency between the CR logical operation and its user.; //; //===---------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCReduceCRLogicals.cpp:36,Reduce,Reduce,36,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCReduceCRLogicals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCReduceCRLogicals.cpp,2,"['Reduce', 'reduce']","['Reduce', 'reduce']"
Energy Efficiency,"//===---- ScheduleDAGInstrs.cpp - MachineInstr Rescheduling ---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file This implements the ScheduleDAGInstrs class, which implements; /// re-scheduling of MachineInstrs.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp:10,Schedul,ScheduleDAGInstrs,10,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAGInstrs.cpp,3,"['Schedul', 'schedul']","['ScheduleDAGInstrs', 'scheduling']"
Energy Efficiency,"//===---- ScheduleDAGSDNodes.h - SDNode Scheduling --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the ScheduleDAGSDNodes class, which implements; // scheduling for an SDNode-based dependency graph.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.h:10,Schedul,ScheduleDAGSDNodes,10,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGSDNodes.h,4,"['Schedul', 'schedul']","['ScheduleDAGSDNodes', 'Scheduling', 'scheduling']"
Energy Efficiency,"//===---- TailRecursionElimination.h ----------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file transforms calls of the current function (self recursion) followed; // by a return instruction with a branch to the entry of the function, creating; // a loop. This pass also implements the following extensions to the basic; // algorithm:; //; // 1. Trivial instructions between the call and return do not prevent the; // transformation from taking place, though currently the analysis cannot; // support moving any really useful instructions (only dead ones).; // 2. This pass transforms functions that are prevented from being tail; // recursive by an associative and commutative expression to use an; // accumulator variable, thus compiling the typical naive factorial or; // 'fib' implementation into efficient code.; // 3. TRE is performed if the function returns void, if the return; // returns the result returned by the call, or if the function returns a; // run-time constant on all exits from the function. It is possible, though; // unlikely, that the return returns something else (like constant 0), and; // can still be TRE'd. It can be TRE'd if ALL OTHER return instructions in; // the function return the exact same value.; // 4. If it can prove that callees do not access their caller stack frame,; // they are marked as eligible for tail call elimination (by the code; // generator).; //; // There are several improvements that could be made:; //; // 1. If the function has any alloca instructions, these instructions will be; // moved out of the entry block of the function, causing them to be; // evaluated each time through the tail recursion. Safely keeping allocas; // in the entry bloc",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/TailRecursionElimination.h:1098,efficient,efficient,1098,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/TailRecursionElimination.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/TailRecursionElimination.h,1,['efficient'],['efficient']
Energy Efficiency,"//===----- LegalizeIntegerTypes.cpp - Legalization of integer types -------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements integer type expansion and promotion for LegalizeTypes.; // Promotion is the act of changing a computation in an illegal type into a; // computation in a larger type. For example, implementing i8 arithmetic in an; // i32 register (often needed on powerpc).; // Expansion is the act of changing a computation in an illegal type into a; // computation in two identical registers of a smaller type. For example,; // implementing i64 arithmetic in two i32 registers (often needed on 32-bit; // targets).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp:651,power,powerpc,651,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp,1,['power'],['powerpc']
Energy Efficiency,"//===----- PostRAHazardRecognizer.cpp - hazard recognizer -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This runs the hazard recognizer and emits noops when necessary. This; /// gives targets a way to run the hazard recognizer without running one of; /// the schedulers. Example use cases for this pass would be:; ///; /// - Targets that need the hazard recognizer to be run at -O0.; /// - Targets that want to guarantee that hazards at the beginning of; /// scheduling regions are handled correctly. The post-RA scheduler is; /// a top-down scheduler, but when there are multiple scheduling regions; /// in a basic block, it visits the regions in bottom-up order. This; /// makes it impossible for the scheduler to gauranttee it can correctly; /// handle hazards at the beginning of scheduling regions.; ///; /// This pass traverses all the instructions in a program in top-down order.; /// In contrast to the instruction scheduling passes, this pass never resets; /// the hazard recognizer to ensure it can correctly handles noop hazards at; /// the beginning of blocks.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRAHazardRecognizer.cpp:550,schedul,schedulers,550,interpreter/llvm-project/llvm/lib/CodeGen/PostRAHazardRecognizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRAHazardRecognizer.cpp,8,['schedul'],"['scheduler', 'schedulers', 'scheduling']"
Energy Efficiency,"//===----- ResourcePriorityQueue.h - A DFA-oriented priority queue -------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements the ResourcePriorityQueue class, which is a; // SchedulingPriorityQueue that schedules using DFA state to; // reduce the length of the critical path through the basic block; // on VLIW platforms.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ResourcePriorityQueue.h:451,Schedul,SchedulingPriorityQueue,451,interpreter/llvm-project/llvm/include/llvm/CodeGen/ResourcePriorityQueue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ResourcePriorityQueue.h,3,"['Schedul', 'reduce', 'schedul']","['SchedulingPriorityQueue', 'reduce', 'schedules']"
Energy Efficiency,"//===----- ScheduleDAGFast.cpp - Fast poor list scheduler -----------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This implements a fast scheduler.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp:11,Schedul,ScheduleDAGFast,11,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,3,"['Schedul', 'schedul']","['ScheduleDAGFast', 'scheduler']"
Energy Efficiency,"//===----- SchedulePostRAList.cpp - list scheduler ------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This implements a top-down list scheduler, using standard algorithms.; // The basic approach uses a priority queue of available nodes to schedule.; // One at a time, nodes are taken from the priority queue (thus in priority; // order), checked for legality to schedule, and emitted if legal.; //; // Nodes may not be legal to schedule either due to structural hazards (e.g.; // pipeline or resource constraints) or because an input to the instruction has; // not completed execution.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp:11,Schedul,SchedulePostRAList,11,interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,6,"['Schedul', 'schedul']","['SchedulePostRAList', 'schedule', 'scheduler']"
Energy Efficiency,"//===----- UninitializedObjectChecker.cpp ------------------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a checker that reports uninitialized fields in objects; // created after a constructor call.; //; // To read about command line options and how the checker works, refer to the; // top of the file and inline comments in UninitializedObject.h.; //; // Some of the logic is implemented in UninitializedPointee.cpp, to reduce the; // complexity of this file.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedObjectChecker.cpp:716,reduce,reduce,716,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedObjectChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedObjectChecker.cpp,1,['reduce'],['reduce']
Energy Efficiency,"//===----- UninitializedPointee.cpp ------------------------------*- C++ -*-==//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines functions and methods for handling pointers and references; // to reduce the size and complexity of UninitializedObjectChecker.cpp.; //; // To read about command line options and documentation about how the checker; // works, refer to UninitializedObjectChecker.h.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedPointee.cpp:467,reduce,reduce,467,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedPointee.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedPointee.cpp,1,['reduce'],['reduce']
Energy Efficiency,"//===----- ppc64.cpp - Generic JITLink ppc64 edge kinds, utilities ------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Generic utilities for graphs representing 64-bit PowerPC objects.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/ppc64.cpp:430,Power,PowerPC,430,interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/ppc64.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/JITLink/ppc64.cpp,1,['Power'],['PowerPC']
Energy Efficiency,"//===------ PPCDisassembler.cpp - Disassembler for PowerPC ------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/Disassembler/PPCDisassembler.cpp:51,Power,PowerPC,51,interpreter/llvm-project/llvm/lib/Target/PowerPC/Disassembler/PPCDisassembler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/Disassembler/PPCDisassembler.cpp,1,['Power'],['PowerPC']
Energy Efficiency,"//===------- X86ExpandPseudo.cpp - Expand pseudo instructions -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file contains a pass that expands pseudo instructions into target; // instructions to allow proper scheduling, if-conversion, other late; // optimizations, or simply the encoding of the instructions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ExpandPseudo.cpp:487,schedul,scheduling,487,interpreter/llvm-project/llvm/lib/Target/X86/X86ExpandPseudo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ExpandPseudo.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"//===-------- PPCELFStreamer.cpp - ELF Object Output ---------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is a custom MCELFStreamer for PowerPC.; //; // The purpose of the custom ELF streamer is to allow us to intercept; // instructions as they are being emitted and align all 8 byte instructions; // to a 64 byte boundary if required (by adding a 4 byte nop). This is important; // because 8 byte instructions are not allowed to cross 64 byte boundaries; // and by aliging anything that is within 4 bytes of the boundary we can; // guarantee that the 8 byte instructions do not cross that boundary.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCELFStreamer.cpp:417,Power,PowerPC,417,interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCELFStreamer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCELFStreamer.cpp,1,['Power'],['PowerPC']
Energy Efficiency,"//===-------- PPCXCOFFStreamer.cpp - XCOFF Object Output ------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This is a custom MCXCOFFStreamer for PowerPC.; //; // The purpose of the custom XCOFF streamer is to allow us to intercept; // instructions as they are being emitted and align all 8 byte instructions; // to a 64 byte boundary if required (by adding a 4 byte nop). This is important; // because 8 byte instructions are not allowed to cross 64 byte boundaries; // and by aligning anything that is within 4 bytes of the boundary we can; // guarantee that the 8 byte instructions do not cross that boundary.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCXCOFFStreamer.cpp:420,Power,PowerPC,420,interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCXCOFFStreamer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/MCTargetDesc/PPCXCOFFStreamer.cpp,1,['Power'],['PowerPC']
Energy Efficiency,"//===--------- HipStdPar.h - Standard Parallelism passes --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// AcceleratorCodeSelection - Identify all functions reachable from a kernel,; /// removing those that are unreachable.; ///; /// AllocationInterposition - Forward calls to allocation / deallocation; // functions to runtime provided equivalents that allocate memory that is; // accessible for an accelerator; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/HipStdPar/HipStdPar.h:643,allocate,allocate,643,interpreter/llvm-project/llvm/include/llvm/Transforms/HipStdPar/HipStdPar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/HipStdPar/HipStdPar.h,1,['allocate'],['allocate']
Energy Efficiency,"//===--------- LoopIterator.h - Iterate over loop blocks --------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; // This file defines iterators to visit the basic blocks within a loop.; //; // These iterators currently visit blocks within subloops as well.; // Unfortunately we have no efficient way of summarizing loop exits which would; // allow skipping subloops during traversal.; //; // If you want to visit all blocks in a loop and don't need an ordered traveral,; // use Loop::block_begin() instead.; //; // This is intentionally designed to work with ill-formed loops in which the; // backedge has been deleted. The only prerequisite is that all blocks; // contained within the loop according to the most recent LoopInfo analysis are; // reachable from the loop header.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopIterator.h:549,efficient,efficient,549,interpreter/llvm-project/llvm/include/llvm/Analysis/LoopIterator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/LoopIterator.h,1,['efficient'],['efficient']
Energy Efficiency,"//===----------- PPCVSXSwapRemoval.cpp - Remove VSX LE Swaps -------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===---------------------------------------------------------------------===//; //; // This pass analyzes vector computations and removes unnecessary; // doubleword swaps (xxswapd instructions). This pass is performed; // only for little-endian VSX code generation.; //; // For this specific case, loads and stores of v4i32, v4f32, v2i64,; // and v2f64 vectors are inefficient. These are implemented using; // the lxvd2x and stxvd2x instructions, which invert the order of; // doublewords in a vector register. Thus code generation inserts; // an xxswapd after each such load, and prior to each such store.; //; // The extra xxswapd instructions reduce performance. The purpose; // of this pass is to reduce the number of xxswapd instructions; // required for correctness.; //; // The primary insight is that much code that operates on vectors; // does not care about the relative order of elements in a register,; // so long as the correct memory order is preserved. If we have a; // computation where all input values are provided by lxvd2x/xxswapd,; // all outputs are stored using xxswapd/lxvd2x, and all intermediate; // computations are lane-insensitive (independent of element order),; // then all the xxswapd instructions associated with the loads and; // stores may be removed without changing observable semantics.; //; // This pass uses standard equivalence class infrastructure to create; // maximal webs of computations fitting the above description. Each; // such web is then optimized by removing its unnecessary xxswapd; // instructions.; //; // There are some lane-sensitive operations for which we can still; // permit the optimization, provided we modify those operations; // accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCVSXSwapRemoval.cpp:940,reduce,reduce,940,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCVSXSwapRemoval.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCVSXSwapRemoval.cpp,1,['reduce'],['reduce']
Energy Efficiency,"//===-------------- MIRCanonicalizer.cpp - MIR Canonicalizer --------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // The purpose of this pass is to employ a canonical code transformation so; // that code compiled with slightly different IR passes can be diffed more; // effectively than otherwise. This is done by renaming vregs in a given; // LiveRange in a canonical way. This pass also does a pseudo-scheduling to; // move defs closer to their use inorder to reduce diffs caused by slightly; // different schedules.; //; // Basic Usage:; //; // llc -o - -run-pass mir-canonicalizer example.mir; //; // Reorders instructions canonically.; // Renames virtual register operands canonically.; // Strips certain MIR artifacts (optionally).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MIRCanonicalizerPass.cpp:669,schedul,scheduling,669,interpreter/llvm-project/llvm/lib/CodeGen/MIRCanonicalizerPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MIRCanonicalizerPass.cpp,3,"['reduce', 'schedul']","['reduce', 'schedules', 'scheduling']"
Energy Efficiency,"//===------------------- AMDGPUCustomBehaviour.h ----------------*-C++ -* -===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the AMDGPUCustomBehaviour class which inherits from; /// CustomBehaviour. This class is used by the tool llvm-mca to enforce; /// target specific behaviour that is not expressed well enough in the; /// scheduling model for mca to enforce it automatically.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCA/AMDGPUCustomBehaviour.h:616,schedul,scheduling,616,interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCA/AMDGPUCustomBehaviour.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/MCA/AMDGPUCustomBehaviour.h,1,['schedul'],['scheduling']
Energy Efficiency,"//===------------------- llvm/CodeGen/DwarfEHPrepare.h ----------*- C++-*--===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass mulches exception handling code into a form adapted to code; // generation. Required if using dwarf exception handling.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/DwarfEHPrepare.h:437,adapt,adapted,437,interpreter/llvm-project/llvm/include/llvm/CodeGen/DwarfEHPrepare.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/DwarfEHPrepare.h,1,['adapt'],['adapted']
Energy Efficiency,"//===-------------------- RISCVCustomBehaviour.h -----------------*-C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the RISCVCustomBehaviour class which inherits from; /// CustomBehaviour. This class is used by the tool llvm-mca to enforce; /// target specific behaviour that is not expressed well enough in the; /// scheduling model for mca to enforce it automatically.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/MCA/RISCVCustomBehaviour.h:615,schedul,scheduling,615,interpreter/llvm-project/llvm/lib/Target/RISCV/MCA/RISCVCustomBehaviour.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/MCA/RISCVCustomBehaviour.h,1,['schedul'],['scheduling']
Energy Efficiency,"//===-------------------- X86CustomBehaviour.h ------------------*-C++ -* -===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the X86CustomBehaviour class which inherits from; /// CustomBehaviour. This class is used by the tool llvm-mca to enforce; /// target specific behaviour that is not expressed well enough in the; /// scheduling model for mca to enforce it automatically.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCA/X86CustomBehaviour.h:613,schedul,scheduling,613,interpreter/llvm-project/llvm/lib/Target/X86/MCA/X86CustomBehaviour.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCA/X86CustomBehaviour.h,1,['schedul'],['scheduling']
Energy Efficiency,"//===--------------------- DispatchStage.cpp --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file models the dispatch component of an instruction pipeline.; ///; /// The DispatchStage is responsible for updating instruction dependencies; /// and communicating to the simulated instruction scheduler that an instruction; /// is ready to be scheduled for execution.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/DispatchStage.cpp:597,schedul,scheduler,597,interpreter/llvm-project/llvm/lib/MCA/Stages/DispatchStage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/DispatchStage.cpp,2,['schedul'],"['scheduled', 'scheduler']"
Energy Efficiency,"//===--------------------- DispatchStatistics.h -----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements a view that prints a few statistics related to the; /// dispatch logic. It collects and analyzes instruction dispatch events as; /// well as static/dynamic dispatch stall events.; ///; /// Example:; /// ========; ///; /// Dynamic Dispatch Stall Cycles:; /// RAT - Register unavailable: 0; /// RCU - Retire tokens unavailable: 0; /// SCHEDQ - Scheduler full: 42; /// LQ - Load queue full: 0; /// SQ - Store queue full: 0; /// GROUP - Static restrictions on the dispatch group: 0; ///; ///; /// Dispatch Logic - number of cycles where we saw N micro opcodes dispatched:; /// [# dispatched], [# cycles]; /// 0, 15 (11.5%); /// 2, 4 (3.1%); ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/DispatchStatistics.h:759,Schedul,Scheduler,759,interpreter/llvm-project/llvm/tools/llvm-mca/Views/DispatchStatistics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/DispatchStatistics.h,1,['Schedul'],['Scheduler']
Energy Efficiency,"//===--------------------- InstructionTables.cpp ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements the method InstructionTables::execute().; /// Method execute() prints a theoretical resource pressure distribution based; /// on the information available in the scheduling model, and without running; /// the pipeline.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/InstructionTables.cpp:579,schedul,scheduling,579,interpreter/llvm-project/llvm/lib/MCA/Stages/InstructionTables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/InstructionTables.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"//===--------------------- ResourceManager.cpp ------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// The classes here represent processor resource units and their management; /// strategy. These classes are managed by the Scheduler.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/ResourceManager.cpp:517,Schedul,Scheduler,517,interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/ResourceManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/ResourceManager.cpp,1,['Schedul'],['Scheduler']
Energy Efficiency,"//===--------------------- ResourceManager.h --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// The classes here represent processor resource units and their management; /// strategy. These classes are managed by the Scheduler.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/ResourceManager.h:517,Schedul,Scheduler,517,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/ResourceManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/ResourceManager.h,1,['Schedul'],['Scheduler']
Energy Efficiency,"//===--------------------- Scheduler.cpp ------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // A scheduler for processor resource units and processor resource groups.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/Scheduler.cpp:27,Schedul,Scheduler,27,interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/Scheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/HardwareUnits/Scheduler.cpp,2,"['Schedul', 'schedul']","['Scheduler', 'scheduler']"
Energy Efficiency,"//===--------------------- Scheduler.h ------------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// A scheduler for Processor Resource Units and Processor Resource Groups.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h:27,Schedul,Scheduler,27,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/Scheduler.h,2,"['Schedul', 'schedul']","['Scheduler', 'scheduler']"
Energy Efficiency,"//===--------------------- SchedulerStatistics.cpp --------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file implements the SchedulerStatistics interface.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/SchedulerStatistics.cpp:27,Schedul,SchedulerStatistics,27,interpreter/llvm-project/llvm/tools/llvm-mca/Views/SchedulerStatistics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/SchedulerStatistics.cpp,2,['Schedul'],['SchedulerStatistics']
Energy Efficiency,"//===--------------------- SchedulerStatistics.h ----------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines class SchedulerStatistics. Class SchedulerStatistics is a; /// View that listens to instruction issue events in order to print general; /// statistics related to the hardware schedulers.; ///; /// Example:; /// ========; ///; /// Schedulers - number of cycles where we saw N instructions issued:; /// [# issued], [# cycles]; /// 0, 6 (2.9%); /// 1, 106 (50.7%); /// 2, 97 (46.4%); ///; /// Scheduler's queue usage:; /// [1] Resource name.; /// [2] Average number of used buffer entries.; /// [3] Maximum number of used buffer entries.; /// [4] Total number of buffer entries.; ///; /// [1] [2] [3] [4]; /// JALU01 0 0 20; /// JFPU01 15 18 18; /// JLSAGU 0 0 12; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/SchedulerStatistics.h:27,Schedul,SchedulerStatistics,27,interpreter/llvm-project/llvm/tools/llvm-mca/Views/SchedulerStatistics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/SchedulerStatistics.h,6,"['Schedul', 'schedul']","['Scheduler', 'SchedulerStatistics', 'Schedulers', 'schedulers']"
Energy Efficiency,"//===---------------------- CustomBehaviour.h -------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the base class CustomBehaviour which can be inherited from; /// by specific targets (ex. llvm/tools/llvm-mca/lib/X86CustomBehaviour.h).; /// CustomBehaviour is designed to enforce custom behaviour and dependencies; /// within the llvm-mca pipeline simulation that llvm-mca isn't already capable; /// of extracting from the Scheduling Models.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h:737,Schedul,Scheduling,737,interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/CustomBehaviour.h,1,['Schedul'],['Scheduling']
Energy Efficiency,"//===---------------------- ExecuteStage.cpp --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the execution stage of an instruction pipeline.; ///; /// The ExecuteStage is responsible for managing the hardware scheduler; /// and issuing notifications that an instruction has been executed.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/ExecuteStage.cpp:530,schedul,scheduler,530,interpreter/llvm-project/llvm/lib/MCA/Stages/ExecuteStage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MCA/Stages/ExecuteStage.cpp,1,['schedul'],['scheduler']
Energy Efficiency,"//===---------------------- ExecuteStage.h ----------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the execution stage of a default instruction pipeline.; ///; /// The ExecuteStage is responsible for managing the hardware scheduler; /// and issuing notifications that an instruction has been executed.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/ExecuteStage.h:537,schedul,scheduler,537,interpreter/llvm-project/llvm/include/llvm/MCA/Stages/ExecuteStage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/ExecuteStage.h,1,['schedul'],['scheduler']
Energy Efficiency,"//===----------------------- DispatchStage.h --------------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file models the dispatch component of an instruction pipeline.; ///; /// The DispatchStage is responsible for updating instruction dependencies; /// and communicating to the simulated instruction scheduler that an instruction; /// is ready to be scheduled for execution.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/DispatchStage.h:597,schedul,scheduler,597,interpreter/llvm-project/llvm/include/llvm/MCA/Stages/DispatchStage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/Stages/DispatchStage.h,2,['schedul'],"['scheduled', 'scheduler']"
Energy Efficiency,"//===----------------------------------------------------------------------===//; // ""Minimal"" path diagnostic generation algorithm.; //===----------------------------------------------------------------------===//; /// If the piece contains a special message, add it to all the call pieces on; /// the active stack. For example, my_malloc allocated memory, so MallocChecker; /// will construct an event at the call to malloc(), and add a stack hint that; /// an allocated memory was returned. We'll use this hint to construct a message; /// when returning from the call to my_malloc; ///; /// void *my_malloc() { return malloc(sizeof(int)); }; /// void fishy() {; /// void *ptr = my_malloc(); // returned allocated memory; /// } // leak",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp:340,allocate,allocated,340,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp,3,['allocate'],['allocated']
Energy Efficiency,//===----------------------------------------------------------------------===//; // ARM Scheduler Hooks; //===----------------------------------------------------------------------===//; /// SetupEntryBlockForSjLj - Insert code into the entry block that creates and; /// registers the function context.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:89,Schedul,Scheduler,89,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['Schedul'],['Scheduler']
Energy Efficiency,//===----------------------------------------------------------------------===//; // Adapters for FoldingSet.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h:85,Adapt,Adapters,85,interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/RetainSummaryManager.h,1,['Adapt'],['Adapters']
Energy Efficiency,//===----------------------------------------------------------------------===//; // AllocaInst Class; //===----------------------------------------------------------------------===//; /// an instruction to allocate memory on the stack,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h:207,allocate,allocate,207,interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,1,['allocate'],['allocate']
Energy Efficiency,//===----------------------------------------------------------------------===//; // Bottom-Up Scheduling; //===----------------------------------------------------------------------===//; /// ReleasePred - Decrement the NumSuccsLeft count of a predecessor. Add it to; /// the AvailableQueue if the count reaches zero. Also update its cycle bound.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp:95,Schedul,Scheduling,95,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,2,['Schedul'],['Scheduling']
Energy Efficiency,//===----------------------------------------------------------------------===//; // CHECK: Clang AST nodes should not have fields that can allocate; // memory.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/LLVMConventionsChecker.cpp:140,allocate,allocate,140,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/LLVMConventionsChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/LLVMConventionsChecker.cpp,1,['allocate'],['allocate']
Energy Efficiency,"//===----------------------------------------------------------------------===//; // Check: Linear congruent random number generators should not be used,; // i.e. rand(), random().; //; // E. Bach, ""Efficient prediction of Marsaglia-Zaman random number generators,""; // in IEEE Transactions on Information Theory, vol. 44, no. 3, pp. 1253-1257,; // May 1998, https://doi.org/10.1109/18.669305; //; // CWE-338: Use of cryptographically weak prng; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp:199,Efficient,Efficient,199,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp,1,['Efficient'],['Efficient']
Energy Efficiency,"//===----------------------------------------------------------------------===//; // Custom Operands.; //; // A table of custom operands shall describe ""primary"" operand names; // first followed by aliases if any. It is not required but recommended; // to arrange operands so that operand encoding match operand position; // in the table. This will make disassembly a bit more efficient.; // Unused slots in the table shall have an empty name.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/Utils/AMDGPUBaseInfo.cpp:377,efficient,efficient,377,interpreter/llvm-project/llvm/lib/Target/AMDGPU/Utils/AMDGPUBaseInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/Utils/AMDGPUBaseInfo.cpp,1,['efficient'],['efficient']
Energy Efficiency,//===----------------------------------------------------------------------===//; // Dynamic Node Priority for Register Pressure Reduction; //===----------------------------------------------------------------------===//; /// closestSucc - Returns the scheduled cycle of the successor which is; /// closest to the current cycle.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:252,schedul,scheduled,252,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['schedul'],['scheduled']
Energy Efficiency,//===----------------------------------------------------------------------===//; // Efficient Lookup Table Support; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FloatingPoint.cpp:85,Efficient,Efficient,85,interpreter/llvm-project/llvm/lib/Target/X86/X86FloatingPoint.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FloatingPoint.cpp,1,['Efficient'],['Efficient']
Energy Efficiency,"//===----------------------------------------------------------------------===//; // EmitAlignment - Emit an alignment directive to the specified power of; // two boundary. If a global value is specified, and if that global has; // an explicit alignment requested, it will override the alignment request; // if required for correctness.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:146,power,power,146,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,1,['power'],['power']
Energy Efficiency,"//===----------------------------------------------------------------------===//; // ExplodedNode.; //===----------------------------------------------------------------------===//; // An NodeGroup's storage type is actually very much like a TinyPtrVector:; // it can be either a pointer to a single ExplodedNode, or a pointer to a; // BumpVector allocated with the ExplodedGraph's allocator. This allows the; // common case of single-node NodeGroups to be implemented with no extra memory.; //; // Consequently, each of the NodeGroup methods have up to four cases to handle:; // 1. The flag is set and this group does not actually contain any nodes.; // 2. The group is empty, in which case the storage value is null.; // 3. The group contains a single node.; // 4. The group contains more than one node.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExplodedGraph.cpp:347,allocate,allocated,347,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExplodedGraph.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExplodedGraph.cpp,1,['allocate'],['allocated']
Energy Efficiency,"//===----------------------------------------------------------------------===//; // Extra additions to <functional>; //===----------------------------------------------------------------------===//; /// An efficient, type-erasing, non-owning reference to a callable. This is; /// intended for use as the type of a function parameter that is not used; /// after the function in question returns.; ///; /// This class does not own the callable, so it is not in general safe to store; /// a function_ref.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/STLFunctionalExtras.h:207,efficient,efficient,207,interpreter/llvm-project/llvm/include/llvm/ADT/STLFunctionalExtras.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/STLFunctionalExtras.h,1,['efficient'],['efficient']
Energy Efficiency,"//===----------------------------------------------------------------------===//; // HungoffOperand Trait Class; //===----------------------------------------------------------------------===//; /// HungoffOperandTraits - determine the allocation regime of the Use array; /// when it is not a prefix to the User object, but allocated at an unrelated; /// heap address.; ///; /// This is the traits class that is needed when the Use array must be; /// resizable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/OperandTraits.h:324,allocate,allocated,324,interpreter/llvm-project/llvm/include/llvm/IR/OperandTraits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/OperandTraits.h,1,['allocate'],['allocated']
Energy Efficiency,//===----------------------------------------------------------------------===//; // ILP Scheduler. Currently for experimental analysis of heuristics.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:89,Schedul,Scheduler,89,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,1,['Schedul'],['Scheduler']
Energy Efficiency,//===----------------------------------------------------------------------===//; // IdDeclInfoMap class; //===----------------------------------------------------------------------===//; /// IdDeclInfoMap - Associates IdDeclInfos with declaration names.; /// Allocates 'pools' (vectors of IdDeclInfos) to avoid allocating each; /// individual IdDeclInfo to heap.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/IdentifierResolver.cpp:260,Allocate,Allocates,260,interpreter/llvm-project/clang/lib/Sema/IdentifierResolver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/IdentifierResolver.cpp,1,['Allocate'],['Allocates']
Energy Efficiency,"//===----------------------------------------------------------------------===//; // MPPassManager implementation; /// Execute all of the passes scheduled for execution by invoking; /// runOnModule method. Keep track of whether any of the passes modifies; /// the module, and if so, return true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp:145,schedul,scheduled,145,interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp,1,['schedul'],['scheduled']
Energy Efficiency,//===----------------------------------------------------------------------===//; // Machine Instruction Scheduling Pass and Registry; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:105,Schedul,Scheduling,105,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,1,['Schedul'],['Scheduling']
Energy Efficiency,"//===----------------------------------------------------------------------===//; // MachineSchedStrategy helpers used by GenericScheduler, GenericPostScheduler; // and possibly other custom schedulers.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:191,schedul,schedulers,191,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,1,['schedul'],['schedulers']
Energy Efficiency,"//===----------------------------------------------------------------------===//; // Output Stream Adaptors; //===----------------------------------------------------------------------===//; /// A raw_ostream that writes to an std::string. This is a simple adaptor; /// class. This class does not encounter output errors.; /// raw_string_ostream operates without a buffer, delegating all memory; /// management to the std::string. Thus the std::string is always up-to-date,; /// may be used directly and there is no need to call flush().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h:99,Adapt,Adaptors,99,interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,2,"['Adapt', 'adapt']","['Adaptors', 'adaptor']"
Energy Efficiency,"//===----------------------------------------------------------------------===//; // PPCBranchCoalescing; //===----------------------------------------------------------------------===//; ///; /// Improve scheduling by coalescing branches that depend on the same condition.; /// This pass looks for blocks that are guarded by the same branch condition; /// and attempts to merge the blocks together. Such opportunities arise from; /// the expansion of select statements in the IR.; ///; /// This pass does not handle implicit operands on branch statements. In order; /// to run on targets that use implicit operands, changes need to be made in the; /// canCoalesceBranch and canMerge methods.; ///; /// Example: the following LLVM IR; ///; /// %test = icmp eq i32 %x 0; /// %tmp1 = select i1 %test, double %a, double 2.000000e-03; /// %tmp2 = select i1 %test, double %b, double 5.000000e-03; ///; /// expands to the following machine code:; ///; /// %bb.0: derived from LLVM BB %entry; /// liveins: %f1 %f3 %x6; /// <SNIP1>; /// %0 = COPY %f1; F8RC:%0; /// %5 = CMPLWI killed %4, 0; CRRC:%5 GPRC:%4; /// %8 = LXSDX %zero8, killed %7, implicit %rm;; /// mem:LD8[ConstantPool] F8RC:%8 G8RC:%7; /// BCC 76, %5, <%bb.2>; CRRC:%5; /// Successors according to CFG: %bb.1(?%) %bb.2(?%); ///; /// %bb.1: derived from LLVM BB %entry; /// Predecessors according to CFG: %bb.0; /// Successors according to CFG: %bb.2(?%); ///; /// %bb.2: derived from LLVM BB %entry; /// Predecessors according to CFG: %bb.0 %bb.1; /// %9 = PHI %8, <%bb.1>, %0, <%bb.0>;; /// F8RC:%9,%8,%0; /// <SNIP2>; /// BCC 76, %5, <%bb.4>; CRRC:%5; /// Successors according to CFG: %bb.3(?%) %bb.4(?%); ///; /// %bb.3: derived from LLVM BB %entry; /// Predecessors according to CFG: %bb.2; /// Successors according to CFG: %bb.4(?%); ///; /// %bb.4: derived from LLVM BB %entry; /// Predecessors according to CFG: %bb.2 %bb.3; /// %13 = PHI %12, <%bb.3>, %2, <%bb.2>;; /// F8RC:%13,%12,%2; /// <SNIP3>; /// BLR8 implicit %lr8, implicit %rm,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp:205,schedul,scheduling,205,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"//===----------------------------------------------------------------------===//; // PassManagerImpl implementation; //; /// run - Execute all of the passes scheduled for execution. Keep track of; /// whether any of the passes modifies the module, and if so, return true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp:157,schedul,scheduled,157,interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp,1,['schedul'],['scheduled']
Energy Efficiency,"//===----------------------------------------------------------------------===//; // Per-Block Splitting; //===----------------------------------------------------------------------===//; /// tryBlockSplit - Split a global live range around every block with uses. This; /// creates a lot of local live ranges, that will be split by tryLocalSplit if; /// they don't allocate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocGreedy.cpp:365,allocate,allocate,365,interpreter/llvm-project/llvm/lib/CodeGen/RegAllocGreedy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocGreedy.cpp,1,['allocate'],['allocate']
Energy Efficiency,"//===----------------------------------------------------------------------===//; // PowerPC 970 Hazard Recognizer; //; // This models the dispatch group formation of the PPC970 processor. Dispatch; // groups are bundles of up to five instructions that can contain various mixes; // of instructions. The PPC970 can dispatch a peak of 4 non-branch and one; // branch instruction per-cycle.; //; // There are a number of restrictions to dispatch group formation: some; // instructions can only be issued in the first slot of a dispatch group, & some; // instructions fill an entire dispatch group. Additionally, only branches can; // issue in the 5th (last) slot.; //; // Finally, there are a number of ""structural"" hazards on the PPC970. These; // conditions cause large performance penalties due to misprediction, recovery,; // and replay logic that has to happen. These cases include setting a CTR and; // branching through it in the same dispatch group, and storing to an address,; // then loading from the same address within a dispatch group. To avoid these; // conditions, we insert no-op instructions when appropriate.; //; // FIXME: This is missing some significant cases:; // 1. Modeling of microcoded instructions.; // 2. Handling of serialized operations.; // 3. Handling of the esoteric cases in ""Resource-based Instruction Grouping"".; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCHazardRecognizers.cpp:85,Power,PowerPC,85,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCHazardRecognizers.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCHazardRecognizers.cpp,1,['Power'],['PowerPC']
Energy Efficiency,"//===----------------------------------------------------------------------===//; // Properties of allocation functions; //; /// Return true if this is a call to an allocation function that does not have; /// side effects that we are required to preserve beyond the effect of; /// allocating a new object.; /// Ex: If our allocation routine has a counter for the number of objects; /// allocated, and the program prints it on exit, can the value change due; /// to optimization? Answer is highly language dependent.; /// Note: *Removable* really does mean removable; it does not mean observable.; /// A language (e.g. C++) can allow removing allocations without allowing; /// insertion or speculative execution of allocation routines.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h:386,allocate,allocated,386,interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/MemoryBuiltins.h,1,['allocate'],['allocated']
Energy Efficiency,//===----------------------------------------------------------------------===//; // Public Constructor Functions; //===----------------------------------------------------------------------===//; /// createVLIWDAGScheduler - This creates a top-down list scheduler.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp:255,schedul,scheduler,255,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,1,['schedul'],['scheduler']
Energy Efficiency,//===----------------------------------------------------------------------===//; // RegReductionPriorityQueue Definition; //===----------------------------------------------------------------------===//; //; // This is a SchedulingPriorityQueue that schedules using Sethi Ullman numbers; // to reduce register pressure.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:222,Schedul,SchedulingPriorityQueue,222,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,3,"['Schedul', 'reduce', 'schedul']","['SchedulingPriorityQueue', 'reduce', 'schedules']"
Energy Efficiency,"//===----------------------------------------------------------------------===//; // RopePieceBTreeLeaf Class; //===----------------------------------------------------------------------===//; /// RopePieceBTreeLeaf - Directly manages up to '2*WidthFactor' RopePiece; /// nodes. This directly represents a chunk of the string with those; /// RopePieces concatenated. Since this is a B+Tree, all values (in this case; /// instances of RopePiece) are stored in leaves like this. To make iteration; /// over the leaves efficient, they maintain a singly linked list through the; /// NextLeaf field. This allows the B+Tree forward iterator to be constant; /// time for all increments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp:516,efficient,efficient,516,interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp,1,['efficient'],['efficient']
Energy Efficiency,"//===----------------------------------------------------------------------===//; // RopePieceBTreeNode Class; //===----------------------------------------------------------------------===//; /// RopePieceBTreeNode - Common base class of RopePieceBTreeLeaf and; /// RopePieceBTreeInterior. This provides some 'virtual' dispatching methods; /// and a flag that determines which subclass the instance is. Also; /// important, this node knows the full extend of the node, including any; /// children that it has. This allows efficient skipping over entire subtrees; /// when looking for an offset in the BTree.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp:523,efficient,efficient,523,interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp,1,['efficient'],['efficient']
Energy Efficiency,"//===----------------------------------------------------------------------===//; // ScheduleDAGLinearize - No scheduling scheduler, it simply linearize the; // DAG in topological order.; // IMPORTANT: this may not work for targets with phyreg dependency.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp:85,Schedul,ScheduleDAGLinearize,85,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,3,"['Schedul', 'schedul']","['ScheduleDAGLinearize', 'scheduler', 'scheduling']"
Energy Efficiency,//===----------------------------------------------------------------------===//; // ScheduleDAGMI - Basic machine instruction scheduling. This is; // independent of PreRA/PostRA scheduling and involves no extra book-keeping for; // virtual registers.; // ===----------------------------------------------------------------------===/; // Provide a vtable anchor.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:85,Schedul,ScheduleDAGMI,85,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,3,"['Schedul', 'schedul']","['ScheduleDAGMI', 'scheduling']"
Energy Efficiency,//===----------------------------------------------------------------------===//; // ScheduleDAGMILive - Base class for MachineInstr scheduling with LiveIntervals; // preservation.; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp:85,Schedul,ScheduleDAGMILive,85,interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineScheduler.cpp,2,"['Schedul', 'schedul']","['ScheduleDAGMILive', 'scheduling']"
Energy Efficiency,"//===----------------------------------------------------------------------===//; // StackColoring Pass; //===----------------------------------------------------------------------===//; //; // Stack Coloring reduces stack usage by merging stack slots when they; // can't be used together. For example, consider the following C program:; //; // void bar(char *, int);; // void foo(bool var) {; // A: {; // char z[4096];; // bar(z, 0);; // }; //; // char *p;; // char x[4096];; // char y[4096];; // if (var) {; // p = x;; // } else {; // bar(y, 1);; // p = y + 1024;; // }; // B:; // bar(p, 2);; // }; //; // Naively-compiled, this program would use 12k of stack space. However, the; // stack slot corresponding to `z` is always destroyed before either of the; // stack slots for `x` or `y` are used, and then `x` is only used if `var`; // is true, while `y` is only used if `var` is false. So in no time are 2; // of the stack slots used together, and therefore we can merge them,; // compiling the function using only a single 4k alloca:; //; // void foo(bool var) { // equivalent; // char x[4096];; // char *p;; // bar(x, 0);; // if (var) {; // p = x;; // } else {; // bar(x, 1);; // p = x + 1024;; // }; // bar(p, 2);; // }; //; // This is an important optimization if we want stack space to be under; // control in large functions, both open-coded ones and ones created by; // inlining.; //; // Implementation Notes:; // ---------------------; //; // An important part of the above reasoning is that `z` can't be accessed; // while the latter 2 calls to `bar` are running. This is justified because; // `z`'s lifetime is over after we exit from block `A:`, so any further; // accesses to it would be UB. The way we represent this information; // in LLVM is by having frontends delimit blocks with `lifetime.start`; // and `lifetime.end` intrinsics.; //; // The effect of these intrinsics seems to be as follows (maybe I should; // specify this in the reference?):; //; // L1) at start, each stack-",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp:209,reduce,reduces,209,interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,1,['reduce'],['reduces']
Energy Efficiency,"//===----------------------------------------------------------------------===//; // The types of allocation we're modeling. This is used to check whether a; // dynamically allocated object is deallocated with the correct function, like; // not using operator delete on an object created by malloc(), or alloca regions; // aren't ever deallocated manually.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:173,allocate,allocated,173,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,1,['allocate'],['allocated']
Energy Efficiency,//===----------------------------------------------------------------------===//; // Top-Down Scheduling; //===----------------------------------------------------------------------===//; /// ReleaseSucc - Decrement the NumPredsLeft count of a successor. Add it to; /// the PendingQueue if the count reaches zero.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp:94,Schedul,Scheduling,94,interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PostRASchedulerList.cpp,1,['Schedul'],['Scheduling']
Energy Efficiency,//===----------------------------------------------------------------------===//; // Top-Down Scheduling; //===----------------------------------------------------------------------===//; /// releaseSucc - Decrement the NumPredsLeft count of a successor. Add it to; /// the PendingQueue if the count reaches zero. Also update its cycle bound.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp:94,Schedul,Scheduling,94,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,1,['Schedul'],['Scheduling']
Energy Efficiency,"//===----------------------------------------------------------------------===//; // TruncInstCombine - looks for expression graphs dominated by trunc; // instructions and for each eligible graph, it will create a reduced bit-width; // expression and replace the old expression with this new one and remove the; // old one. Eligible expression graph is such that:; // 1. Contains only supported instructions.; // 2. Supported leaves: ZExtInst, SExtInst, TruncInst and Constant value.; // 3. Can be evaluated into type with reduced legal bit-width (or Trunc type).; // 4. All instructions in the graph must not have users outside the graph.; // Only exception is for {ZExt, SExt}Inst with operand type equal to the; // new reduced type chosen in (3).; //; // The motivation for this optimization is that evaluating and expression using; // smaller bit-width is preferable, especially for vectorization where we can; // fit more values in one vectorized instruction. In addition, this optimization; // may decrease the number of cast instructions, but will not increase it.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/AggressiveInstCombineInternal.h:214,reduce,reduced,214,interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/AggressiveInstCombineInternal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/AggressiveInstCombineInternal.h,3,['reduce'],['reduced']
Energy Efficiency,"//===----------------------------------------------------------------------===//; // Vector shuffle lowering; //; // This is an experimental code path for lowering vector shuffles on x86. It is; // designed to handle arbitrary vector shuffles and blends, gracefully; // degrading performance as necessary. It works hard to recognize idiomatic; // shuffles and lower them to optimal instruction patterns without leaving; // a framework that allows reasonably efficient handling of all vector shuffle; // patterns.; //===----------------------------------------------------------------------===//; /// Tiny helper function to identify a no-op mask.; ///; /// This is a somewhat boring predicate function. It checks whether the mask; /// array input, which is assumed to be a single-input shuffle mask of the kind; /// used by the X86 shuffle instructions (not a fully general; /// ShuffleVectorSDNode mask) requires any shuffles to occur. Both undef and an; /// in-place shuffle are 'no-op's.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:458,efficient,efficient,458,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['efficient'],['efficient']
Energy Efficiency,//===----------------------------------------------------------------------===//; // X86 Scheduler Hooks; //===----------------------------------------------------------------------===//; // Returns true if EFLAG is consumed after this iterator in the rest of the; // basic block or any successors of the basic block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:89,Schedul,Scheduler,89,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['Schedul'],['Scheduler']
Energy Efficiency,"//===----------------------------------------------------------------------===//; // rewriteLoopExitValues - Optimize IV users outside the loop.; // As a side effect, reduces the amount of IV processing within the loop.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp:167,reduce,reduces,167,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,1,['reduce'],['reduces']
Energy Efficiency,"//===----------------------------------------------------------------------===//; // sinkUnusedInvariants. A late subpass to cleanup loop preheaders.; //===----------------------------------------------------------------------===//; /// If there's a single exit block, sink any loop-invariant values that; /// were defined in the preheader but not used inside the loop into the; /// exit block to reduce register pressure in the loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:397,reduce,reduce,397,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,1,['reduce'],['reduce']
Energy Efficiency,"//===----------------------------------------------------------------------===//; //--- IntervalMapImpl::NodeBase ---//; //===----------------------------------------------------------------------===//; //; // Both leaf and branch nodes store vectors of pairs.; // Leaves store ((KeyT, KeyT), ValT) pairs, branches use (NodeRef, KeyT).; //; // Keys and values are stored in separate arrays to avoid padding caused by; // different object alignments. This also helps improve locality of reference; // when searching the keys.; //; // The nodes don't know how many elements they contain - that information is; // stored elsewhere. Omitting the size field prevents padding and allows a node; // to fill the allocated cache lines completely.; //; // These are typical key and value sizes, the node branching factor (N), and; // wasted space when nodes are sized to fit in three cache lines (192 bytes):; //; // T1 T2 N Waste Used by; // 4 4 24 0 Branch<4> (32-bit pointers); // 8 4 16 0 Leaf<4,4>, Branch<4>; // 8 8 12 0 Leaf<4,8>, Branch<8>; // 16 4 9 12 Leaf<8,4>; // 16 8 8 0 Leaf<8,8>; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h:704,allocate,allocated,704,interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,1,['allocate'],['allocated']
Energy Efficiency,//===----------------------------------------------------------------------===//; /// An itinerary represents the scheduling information for an instruction.; /// This includes a set of stages occupied by the instruction and the pipeline; /// cycle in which operands are read and written.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h:114,schedul,scheduling,114,interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCInstrItineraries.h,1,['schedul'],['scheduling']
Energy Efficiency,//===----------------------------------------------------------------------===//; /// Describes a PHI node that may or may not exist. These track the PHIs; /// that must be created if we sunk a sequence of instructions. It provides; /// a hash function for efficient equality comparisons.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNSink.cpp:257,efficient,efficient,257,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNSink.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVNSink.cpp,1,['efficient'],['efficient']
Energy Efficiency,"//===----------------------------------------------------------------------===//; /// Helper functions for FoldingSetBase.; /// GetNextPtr - In order to save space, each bucket is a; /// singly-linked-list. In order to make deletion more efficient, we make; /// the list circular, so we can delete a node without computing its hash.; /// The problem with this is that the start of the hash buckets are not; /// Nodes. If NextInBucketPtr is a bucket pointer, this method returns null:; /// use GetBucketPtr when this happens.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/FoldingSet.cpp:238,efficient,efficient,238,interpreter/llvm-project/llvm/lib/Support/FoldingSet.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/FoldingSet.cpp,1,['efficient'],['efficient']
Energy Efficiency,"//===----------------------------------------------------------------------===//; /// ScheduleDAGFast - The actual ""fast"" list scheduler implementation.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp:86,Schedul,ScheduleDAGFast,86,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGFast.cpp,2,"['Schedul', 'schedul']","['ScheduleDAGFast', 'scheduler']"
Energy Efficiency,//===----------------------------------------------------------------------===//; /// ScheduleDAGRRList - The actual register reduction list scheduler; /// implementation. This supports both top-down and bottom-up scheduling.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:86,Schedul,ScheduleDAGRRList,86,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,3,"['Schedul', 'schedul']","['ScheduleDAGRRList', 'scheduler', 'scheduling']"
Energy Efficiency,//===----------------------------------------------------------------------===//; /// ScheduleDAGVLIW - The actual DFA list scheduler implementation. This; /// supports / top-down scheduling.; ///,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp:86,Schedul,ScheduleDAGVLIW,86,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGVLIW.cpp,3,"['Schedul', 'schedul']","['ScheduleDAGVLIW', 'scheduler', 'scheduling']"
Energy Efficiency,"//===----------------------------------------------------------------------===//; /// This takes an arbitrary SelectionDAG as input and; /// hacks on it until the target machine can handle it. This involves; /// eliminating value sizes the machine cannot handle (promoting small sizes to; /// large sizes or splitting up large values into small values) as well as; /// eliminating operations the machine cannot handle.; ///; /// This code also does a small amount of optimization and recognition of idioms; /// as part of its processing. For example, if a target does not support a; /// 'setcc' instruction efficiently, but does support 'brcc' instruction, this; /// will attempt merge setcc and brc instructions into brcc's.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp:607,efficient,efficiently,607,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp,1,['efficient'],['efficiently']
Energy Efficiency,"//===----------------------------------------------------------------------===//; /// \class; /// This class stores enough information to efficiently remove some attributes; /// from an existing AttrBuilder, AttributeSet or AttributeList.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AttributeMask.h:138,efficient,efficiently,138,interpreter/llvm-project/llvm/include/llvm/IR/AttributeMask.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/AttributeMask.h,1,['efficient'],['efficiently']
Energy Efficiency,"//===----------------------------------------------------------------------===//; ///; /// Helpers for implementing custom MachineSchedStrategy classes. These take; /// care of the book-keeping associated with list scheduling heuristics.; ///; //===----------------------------------------------------------------------===//; /// ReadyQueue encapsulates vector of ""ready"" SUnits with basic convenience; /// methods for pushing and removing nodes. ReadyQueue's are uniquely identified; /// by an ID. SUnit::NodeQueueId is a mask of the ReadyQueues the SUnit is in.; ///; /// This is a convenience class that may be used by implementations of; /// MachineSchedStrategy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:215,schedul,scheduling,215,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['schedul'],['scheduling']
Energy Efficiency,//===----------------------------------------------------------------------===//; ///; /// RegisterScheduler class - Track the registration of instruction schedulers.; ///; //===----------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h:155,schedul,schedulers,155,interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/SchedulerRegistry.h,1,['schedul'],['schedulers']
Energy Efficiency,"//===----------------------------------------------------------------------===//; //; // DeadCodeElimination - This pass is more powerful than DeadInstElimination,; // because it is worklist driven that can potentially revisit instructions when; // their other instructions become dead, to eliminate chains of dead; // computations.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar.h:129,power,powerful,129,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar.h,1,['power'],['powerful']
Energy Efficiency,"//===----------------------------------------------------------------------===//; //; // FlattenCFG - flatten CFG, reduce number of conditional branches by using; // parallel-and and parallel-or mode, etc...; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar.h:115,reduce,reduce,115,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar.h,1,['reduce'],['reduce']
Energy Efficiency,//===----------------------------------------------------------------------===//; //; // LoopStrengthReduce - This pass is strength reduces GEP instructions that use; // a loop's canonical induction variable as one of their indices.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar.h:132,reduce,reduces,132,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar.h,1,['reduce'],['reduces']
Energy Efficiency,"//===----------------------------------------------------------------------===//; //; // Stack Frame Processing methods; // +----------------------------+; //; // The stack is allocated decrementing the stack pointer on; // the first instruction of a function prologue. Once decremented,; // all stack references are done thought a positive offset; // from the stack/frame pointer, so the stack is considering; // to grow up! Otherwise terrible hacks would have to be made; // to get this stack ABI compliant :); //; // The stack frame required by the ABI (after call):; // Offset; //; // 0 ----------; // 4 Args to pass; // . saved $GP (used in PIC); // . Alloca allocations; // . Local Area; // . CPU ""Callee Saved"" Registers; // . saved FP; // . saved RA; // . FPU ""Callee Saved"" Registers; // StackSize -----------; //; // Offset - offset from sp after stack allocation on function prologue; //; // The sp is the stack pointer subtracted/added from the stack size; // at the Prologue/Epilogue; //; // References to the previous stack (to obtain arguments) are done; // with offsets that exceeds the stack size: (stacksize+(4*(num_arg-1)); //; // Examples:; // - reference to the actual stack frame; // for any local area var there is smt like : FI >= 0, StackOffset: 4; // sw REGX, 4(SP); //; // - reference to previous stack frame; // suppose there's a load to the 5th arguments : FI < 0, StackOffset: 16.; // The emitted instruction will be something like:; // lw REGX, 16+StackSize(SP); //; // Since the total stack size is unknown on LowerFormalArguments, all; // stack references (ObjectOffset) created to reference the function; // arguments, are negative numbers. This way, on eliminateFrameIndex it's; // possible to detect those references and the offsets are adjusted to; // their real location.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsFrameLowering.cpp:176,allocate,allocated,176,interpreter/llvm-project/llvm/lib/Target/Mips/MipsFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsFrameLowering.cpp,1,['allocate'],['allocated']
Energy Efficiency,//===----------------------------------------------------------------------===//; //; // StraightLineStrengthReduce - This pass strength-reduces some certain; // instruction patterns in straight-line code.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar.h:137,reduce,reduces,137,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar.h,1,['reduce'],['reduces']
Energy Efficiency,//===----------------------------------------------------------------------===//; //; // TLSVariableHoist - This pass reduce duplicated TLS address call.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar.h:118,reduce,reduce,118,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar.h,1,['reduce'],['reduce']
Energy Efficiency,//===---------------------------------------------------------------------===//; ///; /// ISHeuristic command line option for instruction schedulers.; ///; //===---------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp:138,schedul,schedulers,138,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,1,['schedul'],['schedulers']
Energy Efficiency,//===---------------------------------------------------------------------===//; ///; /// RegisterScheduler class - Track the registration of instruction schedulers.; ///; //===---------------------------------------------------------------------===//,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp:154,schedul,schedulers,154,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,1,['schedul'],['schedulers']
Energy Efficiency,//===--------------------------------------------------------------------===//; // CFG Introspection.; //===--------------------------------------------------------------------===//; /// Returns the total number of BlockIDs allocated (which start at 0).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h:224,allocate,allocated,224,interpreter/llvm-project/clang/include/clang/Analysis/CFG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/CFG.h,1,['allocate'],['allocated']
Energy Efficiency,"//===--------------------------------------------------------------------===//; // Configuration Interface; //===--------------------------------------------------------------------===//; /// If possible, pre-allocate \p ExtraSize bytes for stream data.; /// i.e. it extends internal buffers to keep additional ExtraSize bytes.; /// So that the stream could keep at least tell() + ExtraSize bytes; /// without re-allocations. reserveExtraSpace() does not change; /// the size/data of the stream.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h:209,allocate,allocate,209,interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/raw_ostream.h,1,['allocate'],['allocate']
Energy Efficiency,//===--------------------------------------------------------------------===//; // Low-Level token peeking and consumption methods.; //; /// isTokenParen - Return true if the cur token is '(' or ')'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Parse/Parser.h:111,consumption,consumption,111,interpreter/llvm-project/clang/include/clang/Parse/Parser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Parse/Parser.h,1,['consumption'],['consumption']
Energy Efficiency,//===--------------------------------------------------------------------===//; // Queries for performance analysis.; //===--------------------------------------------------------------------===//; /// Return the total amount of physical memory allocated by the; /// ContentCache allocator.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/SourceManager.h:245,allocate,allocated,245,interpreter/llvm-project/clang/include/clang/Basic/SourceManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/SourceManager.h,1,['allocate'],['allocated']
Energy Efficiency,"//===--------------------------------------------------------------------===//; // RewriteRope Class; //===--------------------------------------------------------------------===//; /// RewriteRope - A powerful string class. This class supports extremely; /// efficient insertions and deletions into the middle of it, even for; /// ridiculously long strings.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteRope.h:202,power,powerful,202,interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteRope.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteRope.h,2,"['efficient', 'power']","['efficient', 'powerful']"
Energy Efficiency,"//===--------------------------------------------------------------------===//; // RopePiece Class; //===--------------------------------------------------------------------===//; /// RopePiece - This class represents a view into a RopeRefCountString object.; /// This allows references to string data to be efficiently chopped up and; /// moved around without having to push around the string data itself.; ///; /// For example, we could have a 1M RopePiece and want to insert something; /// into the middle of it. To do this, we split it into two RopePiece objects; /// that both refer to the same underlying RopeRefCountString (just with; /// different offsets) which is a nice constant time operation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteRope.h:308,efficient,efficiently,308,interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteRope.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteRope.h,1,['efficient'],['efficiently']
Energy Efficiency,"//===--------------------------------------------------------------------===//; // RopeRefCountString Class; //===--------------------------------------------------------------------===//; /// RopeRefCountString - This struct is allocated with 'new char[]' from the; /// heap, and represents a reference counted chunk of string data. When its; /// ref count drops to zero, it is delete[]'d. This is primarily managed; /// through the RopePiece class below.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteRope.h:229,allocate,allocated,229,interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteRope.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Rewrite/Core/RewriteRope.h,1,['allocate'],['allocated']
Energy Efficiency,//===--------------------------------------------------------------------===//; /// Debug information queries.; /// getFrameRegister - This method should return the register used as a base; /// for values allocated in the current stack frame.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h:205,allocate,allocated,205,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetRegisterInfo.h,1,['allocate'],['allocated']
Energy Efficiency,"//===--------------------------------------------------------------------===//; /// This interface is used to plug different priorities computation; /// algorithms into the list scheduler. It implements the interface of a; /// standard priority queue, where nodes are inserted in arbitrary order and; /// returned in priority order. The computation of the priority and the; /// representation of the queue are totally up to the implementation to; /// decide.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h:178,schedul,scheduler,178,interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ScheduleDAG.h,1,['schedul'],['scheduler']
Energy Efficiency,//===--------------------------------------------------------------------===//; /// createDefaultScheduler - This creates an instruction scheduler appropriate; /// for the target.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp:137,schedul,scheduler,137,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,1,['schedul'],['scheduler']
Energy Efficiency,"//====- X86FlagsCopyLowering.cpp - Lowers COPY nodes of EFLAGS ------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// Lowers COPY nodes of EFLAGS by directly extracting and preserving individual; /// flag bits.; ///; /// We have to do this by carefully analyzing and rewriting the usage of the; /// copied EFLAGS register because there is no general way to rematerialize the; /// entire EFLAGS register safely and efficiently. Using `popf` both forces; /// dynamic stack adjustment and can create correctness issues due to IF, TF,; /// and other non-status flags being overwritten. Using sequences involving; /// SAHF don't work on all x86 processors and are often quite slow compared to; /// directly testing a single status preserved in its own GPR.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FlagsCopyLowering.cpp:692,efficient,efficiently,692,interpreter/llvm-project/llvm/lib/Target/X86/X86FlagsCopyLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FlagsCopyLowering.cpp,1,['efficient'],['efficiently']
Energy Efficiency,"//==========-- ImmutableGraph.h - A fast DAG implementation ---------=========//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// Description: ImmutableGraph is a fast DAG implementation that cannot be; /// modified, except by creating a new ImmutableGraph. ImmutableGraph is; /// implemented as two arrays: one containing nodes, and one containing edges.; /// The advantages to this implementation are two-fold:; /// 1. Iteration and traversal operations benefit from cache locality.; /// 2. Operations on sets of nodes/edges are efficient, and representations of; /// those sets in memory are compact. For instance, a set of edges is; /// implemented as a bit vector, wherein each bit corresponds to one edge in; /// the edge array. This implies a lower bound of 64x spatial improvement; /// over, e.g., an llvm::DenseSet or llvm::SmallSet. It also means that; /// insert/erase/contains operations complete in negligible constant time:; /// insert and erase require one load and one store, and contains requires; /// just one load.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/ImmutableGraph.h:792,efficient,efficient,792,interpreter/llvm-project/llvm/lib/Target/X86/ImmutableGraph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/ImmutableGraph.h,1,['efficient'],['efficient']
Energy Efficiency,"//@brief: geometric predicates using arbitrary precision arithmetic ; //@note : these are provided primarily for illustrative purposes and adaptive routines should be preferred",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/predicates.h:139,adapt,adaptive,139,math/mathcore/src/CDT/predicates.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/predicates.h,1,['adapt'],['adaptive']
Energy Efficiency,//@}; /// Retrieve the allocator that will be used to allocate; /// code completion strings.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/CodeCompleteConsumer.h:54,allocate,allocate,54,interpreter/llvm-project/clang/include/clang/Sema/CodeCompleteConsumer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/CodeCompleteConsumer.h,1,['allocate'],['allocate']
Energy Efficiency,"//Allocate cells",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx:2,Allocate,Allocate,2,graf2d/fitsio/src/TFITS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx,1,['Allocate'],['Allocate']
Energy Efficiency,"//Charge of the particle in units of e",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/TAttParticle.h:2,Charge,Charge,2,montecarlo/eg/inc/TAttParticle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/TAttParticle.h,1,['Charge'],['Charge']
Energy Efficiency,"//Data adapter for TTree.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGL5DDataSetEditor.h:7,adapt,adapter,7,graf3d/gl/inc/TGL5DDataSetEditor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGL5DDataSetEditor.h,1,['adapt'],['adapter']
Energy Efficiency,"//Deallocate character arrays allocated for kString columns",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx:30,allocate,allocated,30,graf2d/fitsio/src/TFITS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx,2,['allocate'],['allocated']
Energy Efficiency,"//Double_t e2=TMath::Power(output->GetBinError(destBinI),2.);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:21,Power,Power,21,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,1,['Power'],['Power']
Energy Efficiency,"//Drains the previous pool (if any); //and activates a new one.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h:2,Drain,Drains,2,core/macosx/inc/CocoaUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/macosx/inc/CocoaUtils.h,1,['Drain'],['Drains']
Energy Efficiency,"//High energy cut off, the default is 10 TeV",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/TAttParticle.h:7,energy,energy,7,montecarlo/eg/inc/TAttParticle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/TAttParticle.h,1,['energy'],['energy']
Energy Efficiency,"//If the amount of data is too large take only every 2nd or 3rd to reduce the amount; // Either show them only outside the whiskers, or all of them",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCandle.cxx:67,reduce,reduce,67,graf2d/graf/src/TCandle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCandle.cxx,1,['reduce'],['reduce']
Energy Efficiency,"//Info(""MakeBoundaries(Value*)"", Form(""Allocate boundaries for %d nodes"", totNodes));; // loop",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TKDTree.cxx:39,Allocate,Allocate,39,math/mathcore/src/TKDTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TKDTree.cxx,1,['Allocate'],['Allocate']
Energy Efficiency,"//InitCells; ////////////////////////////////////////////////////////////////////////////////; /// Internal subprogram used by Create.; /// It initializes content of the newly allocated active cell.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx:176,allocate,allocated,176,tmva/tmva/src/PDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx,1,['allocate'],['allocated']
Energy Efficiency,"//KDE adapter is a ""data source"" adapter for; //Marching cubes alhorithm. It produces scalar; //values in regular grid's nodes, using TKDEFGT class; //to estimate a density.; //IMPORTANT: This class is not intended for end-user's code,; //it's used and _must_ be used only as an argument while; //instantiating mesh builder's class template.; //That's why all members are protected; //or private - end user cannot create object's of this class.; //But mesh builder, derived from this class,; //knows exactly how to use this class correctly.; //SetDimenions and SetE/GetE are public members, it will be derived by mesh; //builder's instantiation and used inside TGL5DPainter class.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TKDEAdapter.h:6,adapt,adapter,6,graf3d/gl/inc/TKDEAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TKDEAdapter.h,2,['adapt'],['adapter']
Energy Efficiency,"//Lower energy cut off, the default is 10 keV",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/TAttParticle.h:8,energy,energy,8,montecarlo/eg/inc/TAttParticle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/TAttParticle.h,1,['energy'],['energy']
Energy Efficiency,"//Make the collection to own the allocated TVectorD objects, so when; //destroying the collection, the vectors will be destroyed too.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx:33,allocate,allocated,33,graf2d/fitsio/src/TFITS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx,1,['allocate'],['allocated']
Energy Efficiency,"//Member functions Plus() and Minus() return the positive and negative; //light-cone components:; //; // Double_t pcone = v.Plus();; // Double_t mcone = v.Minus();; //; //CAVEAT: The values returned are T{+,-}Z. It is known that some authors; //find it easier to define these components as (T{+,-}Z)/sqrt(2). Thus; //check what definition is used in the physics you're working in and adapt; //your code accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TLorentzVector.h:384,adapt,adapt,384,math/physics/inc/TLorentzVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TLorentzVector.h,1,['adapt'],['adapt']
Energy Efficiency,"//Monitor activity on a set of TSocket objects",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TMonitor.h:2,Monitor,Monitor,2,net/net/inc/TMonitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TMonitor.h,1,['Monitor'],['Monitor']
Energy Efficiency,"//Number of allocated points",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/inc/TPolyMarker3D.h:12,allocate,allocated,12,graf3d/g3d/inc/TPolyMarker3D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/inc/TPolyMarker3D.h,1,['allocate'],['allocated']
Energy Efficiency,"//PROOF control class for slaves allocated by condor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofCondor.h:33,allocate,allocated,33,proof/proof/inc/TProofCondor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofCondor.h,1,['allocate'],['allocated']
Energy Efficiency,"//ROOT_TAtomicCount; //////////////////////////////////////////////////////////////////////////; // //; // TAtomicCountPthread //; // //; // Class providing atomic operations on a long. Setting, getting, //; // incrementing and decrementing are atomic, thread safe, operations. //; // //; // This implementation uses pthread mutexes for locking. This clearly //; // is less efficient than the version using asm locking instructions //; // as in TAtomicCountGcc.h, but better than nothing. //; // //; // ATTENTION: Don't use this file directly, it is included by //; // TAtomicCount.h. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TAtomicCountPthread.h:374,efficient,efficient,374,core/thread/inc/TAtomicCountPthread.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TAtomicCountPthread.h,1,['efficient'],['efficient']
Energy Efficiency,//TODO: make this more efficient; //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm ),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:23,efficient,efficient,23,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['efficient'],['efficient']
Energy Efficiency,"//Total energy in GeV",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/TPrimary.h:8,energy,energy,8,montecarlo/eg/inc/TPrimary.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/TPrimary.h,1,['energy'],['energy']
Energy Efficiency,"//Try to allocate special colors, result is not important here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx:9,allocate,allocate,9,rootx/src/rootxx.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootxx.cxx,1,['allocate'],['allocate']
Energy Efficiency,"//XXX: The r600g finalizer expects this to be 1, once we've moved the; //scheduling to the backend, we can change the default to 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600InstrInfo.cpp:73,schedul,scheduling,73,interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600InstrInfo.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"//___________________________________________________________; //; // Adapt the interface used in TMinuit (and the TVirtualFitter) for; // passing the objective function in a IFunction interface; // (ROOT::Math::IMultiGenFunction); //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FcnAdapter.h:70,Adapt,Adapt,70,math/mathcore/inc/Fit/FcnAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FcnAdapter.h,1,['Adapt'],['Adapt']
Energy Efficiency,"//_________________________________________________________________________; /**. Class for performing numerical integration of a function in one dimension.; It uses the numerical integration algorithms of GSL, which reimplements the; algorithms used in the QUADPACK, a numerical integration package written in Fortran. Various types of adaptive and non-adaptive integration are supported. These include; integration over infinite and semi-infinite ranges and singular integrals. The integration type is selected using the Integration::type enumeration; in the class constructor.; The default type is adaptive integration with singularity; (ADAPTIVESINGULAR or QAGS in the QUADPACK convention) applying a Gauss-Kronrod 21-point integration rule.; In the case of ADAPTIVE type, the integration rule can also be specified via the; Integration::GKRule. The default rule is 31 points. In the case of integration over infinite and semi-infinite ranges, the type used is always; ADAPTIVESINGULAR applying a transformation from the original interval into (0,1). The ADAPTIVESINGULAR type is the most sophicticated type. When performances are; important, it is then recommended to use the NONADAPTIVE type in case of smooth functions or; ADAPTIVE with a lower Gauss-Kronrod rule. For detailed description on GSL integration algorithms see the; <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Numerical-Integration.html"">GSL Manual</A>. @ingroup Integration; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:337,adapt,adaptive,337,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,8,"['ADAPT', 'adapt']","['ADAPTIVE', 'ADAPTIVESINGULAR', 'adaptive']"
Energy Efficiency,"//____________________________________________________________________________; /**; Base class describing a Vavilov distribution. The Vavilov distribution is defined in; P.V. Vavilov: Ionization losses of high-energy heavy particles,; Sov. Phys. JETP 5 (1957) 749 [Zh. Eksp. Teor. Fiz. 32 (1957) 920]. The probability density function of the Vavilov distribution; as function of Landau's parameter is given by:; \f[ p(\lambda_L; \kappa, \beta^2) =; \frac{1}{2 \pi i}\int_{c-i\infty}^{c+i\infty} \phi(s) e^{\lambda_L s} ds\f]; where \f$\phi(s) = e^{C} e^{\psi(s)}\f$; with \f$ C = \kappa (1+\beta^2 \gamma )\f$; and \f$\psi(s)= s \ln \kappa + (s+\beta^2 \kappa); \cdot \left ( \int \limits_{0}^{1}; \frac{1 - e^{\frac{-st}{\kappa}}}{t} \,d t- \gamma \right ); - \kappa \, e^{\frac{-s}{\kappa}}\f$.; \f$ \gamma = 0.5772156649\dots\f$ is Euler's constant. For the class Vavilov,; Pdf returns the Vavilov distribution as function of Landau's parameter; \f$\lambda_L = \lambda_V/\kappa - \ln \kappa\f$,; which is the convention used in the CERNLIB routines, and in the tables; by S.M. Seltzer and M.J. Berger: Energy loss stragglin of protons and mesons:; Tabulation of the Vavilov distribution, pp 187-203; in: National Research Council (U.S.), Committee on Nuclear Science:; Studies in penetration of charged particles in matter,; Nat. Akad. Sci. Publication 1133,; Nucl. Sci. Series Report No. 39,; Washington (Nat. Akad. Sci.) 1964, 388 pp.; Available from; <A HREF=""http://books.google.de/books?id=kmMrAAAAYAAJ&lpg=PP9&pg=PA187#v=onepage&q&f=false"">Google books</A>. Therefore, for small values of \f$\kappa < 0.01\f$,; pdf approaches the Landau distribution. For values \f$\kappa > 10\f$, the Gauss approximation should be used; with \f$\mu\f$ and \f$\sigma\f$ given by Vavilov::Mean(kappa, beta2); and sqrt(Vavilov::Variance(kappa, beta2). The original Vavilov pdf is obtained by; v.Pdf(lambdaV/kappa-log(kappa))/kappa. Two subclasses are provided:; - VavilovFast uses the algorithm by; A. Rotondi ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Vavilov.h:211,energy,energy,211,math/mathmore/inc/Math/Vavilov.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Vavilov.h,1,['energy'],['energy']
Energy Efficiency,"//____________________________________________________________________________; /**; Class describing a Vavilov distribution. The probability density function of the Vavilov distribution; as function of Landau's parameter is given by:; \f[ p(\lambda_L; \kappa, \beta^2) =; \frac{1}{2 \pi i}\int_{c-i\infty}^{c+i\infty} \phi(s) e^{\lambda_L s} ds\f]; where \f$\phi(s) = e^{C} e^{\psi(s)}\f$; with \f$ C = \kappa (1+\beta^2 \gamma )\f$; and \f$\psi(s)= s \ln \kappa + (s+\beta^2 \kappa); \cdot \left ( \int \limits_{0}^{1}; \frac{1 - e^{\frac{-st}{\kappa}}}{t} \,d t- \gamma \right ); - \kappa \, e^{\frac{-s}{\kappa}}\f$.; \f$ \gamma = 0.5772156649\dots\f$ is Euler's constant. For the class VavilovAccurate,; Pdf returns the Vavilov distribution as function of Landau's parameter; \f$\lambda_L = \lambda_V/\kappa - \ln \kappa\f$,; which is the convention used in the CERNLIB routines, and in the tables; by S.M. Seltzer and M.J. Berger: Energy loss stragglin of protons and mesons:; Tabulation of the Vavilov distribution, pp 187-203; in: National Research Council (U.S.), Committee on Nuclear Science:; Studies in penetration of charged particles in matter,; Nat. Akad. Sci. Publication 1133,; Nucl. Sci. Series Report No. 39,; Washington (Nat. Akad. Sci.) 1964, 388 pp.; Available from; <A HREF=""http://books.google.de/books?id=kmMrAAAAYAAJ&lpg=PP9&pg=PA187#v=onepage&q&f=false"">Google books</A>. Therefore, for small values of \f$\kappa < 0.01\f$,; pdf approaches the Landau distribution. For values \f$\kappa > 10\f$, the Gauss approximation should be used; with \f$\mu\f$ and \f$\sigma\f$ given by Vavilov::mean(kappa, beta2); and sqrt(Vavilov::variance(kappa, beta2). The original Vavilov pdf is obtained by; v.Pdf(lambdaV/kappa-log(kappa))/kappa. For detailed description see; B. Schorr, Programs for the Landau and the Vavilov distributions and the corresponding random numbers,; <A HREF=""http://dx.doi.org/10.1016/0010-4655(74)90091-5"">Computer Phys. Comm. 7 (1974) 215-224</A>,; which has be",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovAccurate.h:937,Energy,Energy,937,math/mathmore/inc/Math/VavilovAccurate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovAccurate.h,1,['Energy'],['Energy']
Energy Efficiency,"//____________________________________________________________________________; /**; Class describing a Vavilov distribution. The probability density function of the Vavilov distribution; as function of Landau's parameter is given by:; \f[ p(\lambda_L; \kappa, \beta^2) =; \frac{1}{2 \pi i}\int_{c-i\infty}^{c+i\infty} \phi(s) e^{\lambda_L s} ds\f]; where \f$\phi(s) = e^{C} e^{\psi(s)}\f$; with \f$ C = \kappa (1+\beta^2 \gamma )\f$; and \f$\psi(s)= s \ln \kappa + (s+\beta^2 \kappa); \cdot \left ( \int \limits_{0}^{1}; \frac{1 - e^{\frac{-st}{\kappa}}}{t} \,d t- \gamma \right ); - \kappa \, e^{\frac{-s}{\kappa}}\f$.; \f$ \gamma = 0.5772156649\dots\f$ is Euler's constant. For the class VavilovFast,; Pdf returns the Vavilov distribution as function of Landau's parameter; \f$\lambda_L = \lambda_V/\kappa - \ln \kappa\f$,; which is the convention used in the CERNLIB routines, and in the tables; by S.M. Seltzer and M.J. Berger: Energy loss stragglin of protons and mesons:; Tabulation of the Vavilov distribution, pp 187-203; in: National Research Council (U.S.), Committee on Nuclear Science:; Studies in penetration of charged particles in matter,; Nat. Akad. Sci. Publication 1133,; Nucl. Sci. Series Report No. 39,; Washington (Nat. Akad. Sci.) 1964, 388 pp.; Available from; <A HREF=""http://books.google.de/books?id=kmMrAAAAYAAJ&lpg=PP9&pg=PA187#v=onepage&q&f=false"">Google books</A>. Therefore, for small values of \f$\kappa < 0.01\f$,; pdf approaches the Landau distribution. For values \f$\kappa > 10\f$, the Gauss approximation should be used; with \f$\mu\f$ and \f$\sigma\f$ given by Vavilov::mean(kappa, beta2); and sqrt(Vavilov::variance(kappa, beta2). For values \f$\kappa > 10\f$, the Gauss approximation should be used; with \f$\mu\f$ and \f$\sigma\f$ given by Vavilov::mean(kappa, beta2); and sqrt(Vavilov::variance(kappa, beta2). The original Vavilov pdf is obtained by; v.Pdf(lambdaV/kappa-log(kappa))/kappa. For detailed description see; A. Rotondi and P. Montagna, Fast calcul",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovFast.h:933,Energy,Energy,933,math/mathmore/inc/Math/VavilovFast.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovFast.h,1,['Energy'],['Energy']
Energy Efficiency,"//____________________________________________________________________________; /**; Test class for class Vavilov and its subclasses. For test purposes,; the class contains a number of static function that return the tabulated; values of the Vavilov pdf given by; S.M. Seltzer and M.J. Berger: Energy loss stragglin of protons and mesons:; Tabulation of the Vavilov distribution, pp 187-203; in: National Research Council (U.S.), Committee on Nuclear Science:; Studies in penetration of charged particles in matter,; Nat. Akad. Sci. Publication 1133,; Nucl. Sci. Series Report No. 39,; Washington (Nat. Akad. Sci.) 1964, 388 pp.; Available from; <A HREF=""http://books.google.de/books?id=kmMrAAAAYAAJ&lpg=PP9&pg=PA187#v=onepage&q&f=false"">Google books</A>. B. List 24.6.2010. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/VavilovTest.h:294,Energy,Energy,294,math/mathmore/test/VavilovTest.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/VavilovTest.h,2,"['Energy', 'charge']","['Energy', 'charged']"
Energy Efficiency,"//____________________________________________________________________________; //; // Cuda Matrix; //____________________________________________________________________________; /** TCudaMatrix Class; *; * The TCudaMatrix class represents matrices on a CUDA device. The elements; * of the matrix are stored in a TCudaDeviceBuffer object which takes care of; * the allocation and freeing of the device memory. TCudaMatrices are lightweight; * object, that means on assignment and copy creation only a shallow copy is; * performed and no new element buffer allocated. To perform a deep copy use; * the static Copy method of the TCuda architecture class.; *; * The TCudaDeviceBuffer has an associated cuda stream, on which the data is; * transferred to the device. This stream can be accessed through the; * GetComputeStream member function and used to synchronize computations.; *; * The TCudaMatrix class also holds static references to CUDA resources.; * Those are the cublas handle, a buffer of curand states for the generation; * of random numbers as well as a vector containing ones, which is used for; * summing column matrices using matrix-vector multiplication. The class also; * has a static buffer for returning results from the device.; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaMatrix.h:557,allocate,allocated,557,tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaMatrix.h,1,['allocate'],['allocated']
Energy Efficiency,"//______________________________________________________________________________; //; // Generic Gradient Descent Class; //______________________________________________________________________________; //; /*** \class TGradientDescent; *; * Generic implementation of gradient descent minimization.; *; * The TGradientDescent class implements an architecture and input data; * independent implementation of the gradient descent minimization algorithm.; *; * Provides Train(...) and TrainMomentum(...) functions that perform a complete; * training of a neural network. Those are mainly used for testing since for; * production a more fine grained control of the training process is desirable.; * This is provided by the Step(...), StepMomentum(...) and StepNesterov(...); * functions that perform a single minimization step.; *; * The main training characteristics are defined by the provided learning rate,; * the test interval, and the convergence steps required for convergence. The; * test interval defines how often the error on the validation set is computed,; * and the values with which the step counter is increased each time the; * HasConverged() member function is called. A convergence step is defined as; * a step in which the test error is NOT less than 0.999 times the current; * minimal test error that has been reached. If between two subsequent calls; * to HasConverged(Double_t) the test error has not been sufficiently reduced; * it is assumed that a number of convergence steps equal to the test interval; * has been performed.; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Minimizers.h:1438,reduce,reduced,1438,tmva/tmva/inc/TMVA/DNN/Minimizers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Minimizers.h,1,['reduce'],['reduced']
Energy Efficiency,"//______________________________________________________________________________; //; // The Layer Class; //______________________________________________________________________________; /** \class TLayer. Generic layer class. This generic layer class represents a layer of a neural network with; a given width n and activation function f. The activation; function of each layer is given by \f$\mathbf{u} =; \mathbf{W}\mathbf{x} + \boldsymbol{\theta}\f$. In addition to the weight and bias matrices, each layer allocates memory; for its activations and the corresponding first partial fDerivatives of; the activation function as well as the gradients of the fWeights and fBiases. The layer provides member functions for the forward propagation of; activations through the given layer.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Layer.h:512,allocate,allocates,512,tmva/tmva/inc/TMVA/DNN/Layer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Layer.h,1,['allocate'],['allocates']
Energy Efficiency,"//___________________________________________________________________________________; /**; Class describing the binned data sets :; vectors of x coordinates, y values and optionally error on y values and error on coordinates; The dimension of the coordinate is free; There are 4 different options:; - only coordinates and values (for binned likelihood fits) : kNoError; - coordinate, values and error on values (for normal least square fits) : kValueError; - coordinate, values, error on values and coordinates (for effective least square fits) : kCoordError; - coordinate, values, error on coordinates and asymmetric error on values : kAsymError. In addition there is the option to construct Bindata copying the data in (using the DataVector class); or using pointer to external data (DataWrapper) class.; In general is found to be more efficient to copy the data.; In case of really large data sets for limiting memory consumption then the other option can be used; Specialized constructor exists for data up to 3 dimensions. When the data are copying in the number of points can be set later (or re-set) using Initialize and; the data are inserted one by one using the Add method.; It is mandatory to set the size before using the Add method. @ingroup FitData; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h:839,efficient,efficient,839,math/mathcore/inc/Fit/BinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/BinData.h,2,"['consumption', 'efficient']","['consumption', 'efficient']"
Energy Efficiency,"//___________________________________________________________________________________; /**; Class describing the un-binned data sets (just x coordinates values) of any dimensions. There is the option to construct UnBindata copying the data inside; (in the base FitData class) or using a pointer to external data, depending on which; constructor of the UnBinData class is used.; It is recommended to copy the input data inside, since this will be more efficient and; less error prone, since the input provided data will have to be kept alive for all the time the; Fit classes will be used.; In case of really large data sets for limiting memory consumption then the other option can be used; with special care.; Specialized constructor exists for using external data up to 3 dimensions. When the data are copying in the number of points can be set later (or re-set) using Initialize and; the data are inserted one by one using the Add method.; It is mandatory to set the size before using the Add method. @ingroup FitData; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/UnBinData.h:451,efficient,efficient,451,math/mathcore/inc/Fit/UnBinData.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/UnBinData.h,2,"['consumption', 'efficient']","['consumption', 'efficient']"
Energy Efficiency,"//__________________________________________________________________________________________; /** @ingroup GenVector. Class describing a generic LorentzVector in the 4D space-time,; using the specified coordinate system for the spatial vector part.; The metric used for the LorentzVector is (-,-,-,+).; In the case of LorentzVector we don't distinguish the concepts; of points and displacement vectors as in the 3D case,; since the main use case for 4D Vectors is to describe the kinematics of; relativistic particles. A LorentzVector behaves like a; DisplacementVector in 4D. The Minkowski components could be viewed as; v and t, or for kinematic 4-vectors, as p and E. ROOT provides specialisations and aliases to them of the ROOT::Math::LorentzVector template:; - ROOT::Math::PtEtaPhiMVector based on pt (rho),eta,phi and M (t) coordinates in double precision; - ROOT::Math::PtEtaPhiEVector based on pt (rho),eta,phi and E (t) coordinates in double precision; - ROOT::Math::PxPyPzMVector based on px,py,pz and M (mass) coordinates in double precision; - ROOT::Math::PxPyPzEVector based on px,py,pz and E (energy) coordinates in double precision; - ROOT::Math::XYZTVector based on x,y,z,t coordinates (cartesian) in double precision (same as PxPyPzEVector); - ROOT::Math::XYZTVectorF based on x,y,z,t coordinates (cartesian) in float precision (same as PxPyPzEVector but float). @sa Overview of the @ref GenVector ""physics vector library""; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/LorentzVector.h:1108,energy,energy,1108,math/genvector/inc/Math/GenVector/LorentzVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/LorentzVector.h,1,['energy'],['energy']
Energy Efficiency,"//__________________________________________________________________________________________; /**; Class describing a 4D cartesian coordinate system (x, y, z, t coordinates); or momentum-energy vectors stored as (Px, Py, Pz, E).; The metric used is (-,-,-,+). @ingroup GenVector. @sa Overview of the @ref GenVector ""physics vector library""; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/PxPyPzE4D.h:187,energy,energy,187,math/genvector/inc/Math/GenVector/PxPyPzE4D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/PxPyPzE4D.h,1,['energy'],['energy']
Energy Efficiency,"//__________________________________________________________________________________________; /**; Class describing a 4D coordinate system; or momentum-energy vectors stored as (Px, Py, Pz, M).; This system is useful to describe ultra-relativistic particles; (like electrons at LHC) to avoid numerical errors evaluating the mass; when E >>> m; The metric used is (-,-,-,+); Spacelike particles (M2 < 0) are described with negative mass values,; but in this case m2 must always be less than P2 to preserve a positive value of E2. @ingroup GenVector. @sa Overview of the @ref GenVector ""physics vector library""; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/PxPyPzM4D.h:152,energy,energy,152,math/genvector/inc/Math/GenVector/PxPyPzM4D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/PxPyPzM4D.h,1,['energy'],['energy']
Energy Efficiency,//___________________________________________________________________________________________; /**; User class for performing multidimensional integration. By default uses adaptive multi-dimensional integration using the algorithm from Genz Mallik; implemented in the class ROOT::Math::AdaptiveIntegratorMultiDim otherwise it can uses via the; plug-in manager the MC integration class (ROOT::Math::GSLMCIntegration) from MathMore. @ingroup Integration. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h:172,adapt,adaptive,172,math/mathcore/inc/Math/IntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h,2,"['Adapt', 'adapt']","['AdaptiveIntegratorMultiDim', 'adaptive']"
Energy Efficiency,"//____________________________________________________________________________________________; /**. User Class for performing numerical integration of a function in one dimension.; It uses the plug-in manager to load advanced numerical integration algorithms from GSL, which reimplements the; algorithms used in the QUADPACK, a numerical integration package written in Fortran. Various types of adaptive and non-adaptive integration are supported. These include; integration over infinite and semi-infinite ranges and singular integrals. The integration type is selected using the Integration::type enumeration; in the class constructor.; The default type is adaptive integration with singularity; (ADAPTIVESINGULAR or QAGS in the QUADPACK convention) applying a Gauss-Kronrod 21-point integration rule.; In the case of ADAPTIVE type, the integration rule can also be specified via the; Integration::GKRule. The default rule is 31 points. In the case of integration over infinite and semi-infinite ranges, the type used is always; ADAPTIVESINGULAR applying a transformation from the original interval into (0,1). The ADAPTIVESINGULAR type is the most sophisticated type. When performances are; important, it is then recommended to use the NONADAPTIVE type in case of smooth functions or; ADAPTIVE with a lower Gauss-Kronrod rule. For detailed description on GSL integration algorithms see the; <A HREF=""http://www.gnu.org/software/gsl/manual/gsl-ref_16.html#SEC248"">GSL Manual</A>. @ingroup Integration. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:396,adapt,adaptive,396,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,8,"['ADAPT', 'adapt']","['ADAPTIVE', 'ADAPTIVESINGULAR', 'adaptive']"
Energy Efficiency,"//_toleranceCompareLogs{2.E-14};; // make the integrator slightly more precise (1e-6 -> 1e-7) to reduce inaccuracy in fitting",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testBukin.cxx:97,reduce,reduce,97,roofit/roofit/test/vectorisedPDFs/testBukin.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testBukin.cxx,1,['reduce'],['reduce']
Energy Efficiency,"//charge in units of |e|/3",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/TParticlePDG.h:2,charge,charge,2,montecarlo/eg/inc/TParticlePDG.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/TParticlePDG.h,1,['charge'],['charge']
Energy Efficiency,"//check that last point added has index nEntries -1; // allocate memory if necessary. numEntries is overkill?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ConfidenceBelt.cxx:56,allocate,allocate,56,roofit/roostats/src/ConfidenceBelt.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ConfidenceBelt.cxx,1,['allocate'],['allocate']
Energy Efficiency,//cl_khr_fp16; /**; * Compute x to the power 1/y.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:39,power,power,39,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['power'],['power']
Energy Efficiency,"//cl_khr_fp16; /**; * Compute x to the power y, where x is >= 0.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:39,power,power,39,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['power'],['power']
Energy Efficiency,"//cl_khr_fp16; /**; * Compute x to the power y, where y is an integer.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:39,power,power,39,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['power'],['power']
Energy Efficiency,//cl_khr_fp16; /**; * Compute x to the power y.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:39,power,power,39,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['power'],['power']
Energy Efficiency,//cl_khr_fp16; /**; * Multiply x by 2 to the power n.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h:45,power,power,45,interpreter/llvm-project/clang/lib/Headers/opencl-c.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/opencl-c.h,1,['power'],['power']
Energy Efficiency,"//currently active monitor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:19,monitor,monitor,19,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['monitor'],['monitor']
Energy Efficiency,"//double AdaptiveIntegratorMultiDim::Result() const { return fIntegrator->Result(); }; //double AdaptiveIntegratorMultiDim::Error() const { return fIntegrator->Error(); }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx:9,Adapt,AdaptiveIntegratorMultiDim,9,math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/AdaptiveIntegratorMultiDim.cxx,2,['Adapt'],['AdaptiveIntegratorMultiDim']
Energy Efficiency,"//fColorFrame->GetDefalutWidth();,; // Create Red/Green/BlueAlpha/Shine sliders",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPShapeObjEditor.cxx:50,Green,Green,50,graf3d/gl/src/TGLPShapeObjEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPShapeObjEditor.cxx,1,['Green'],['Green']
Energy Efficiency,"//green component of selected material",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLPShapeObjEditor.h:2,green,green,2,graf3d/gl/inc/TGLPShapeObjEditor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLPShapeObjEditor.h,1,['green'],['green']
Energy Efficiency,"//list of sockets to monitor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TMonitor.h:21,monitor,monitor,21,net/net/inc/TMonitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TMonitor.h,1,['monitor'],['monitor']
Energy Efficiency,"//monitor activity on all active slave sockets",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:2,monitor,monitor,2,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['monitor'],['monitor']
Energy Efficiency,"//monitor activity on all unique slave sockets",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:2,monitor,monitor,2,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['monitor'],['monitor']
Energy Efficiency,"//monitor activity on all unique slave sockets, including all submasters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:2,monitor,monitor,2,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['monitor'],['monitor']
Energy Efficiency,"//monitor activity on all valid slave sockets",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h:2,monitor,monitor,2,proof/proof/inc/TProof.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProof.h,1,['monitor'],['monitor']
Energy Efficiency,"//monitor for the input socket",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TApplicationRemote.h:2,monitor,monitor,2,net/net/inc/TApplicationRemote.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TApplicationRemote.h,1,['monitor'],['monitor']
Energy Efficiency,"//monitor to which this handler belongs",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx:2,monitor,monitor,2,net/net/src/TMonitor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx,1,['monitor'],['monitor']
Energy Efficiency,"//monitor to which this timer belongs",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx:2,monitor,monitor,2,net/net/src/TMonitor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMonitor.cxx,1,['monitor'],['monitor']
Energy Efficiency,"//monitoring tree/ntuple and it's variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBoost.h:2,monitor,monitoring,2,tmva/tmva/inc/TMVA/MethodBoost.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBoost.h,1,['monitor'],['monitoring']
Energy Efficiency,"//printf(""2 xc.red = %u, xc.green = %u, xc.blue = %u\n"", xc.red, xc.green, xc.blue);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/GX11Gui.cxx:28,green,green,28,graf2d/x11/src/GX11Gui.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/GX11Gui.cxx,2,['green'],['green']
Energy Efficiency,"//printf(""adaptive bandwidth factor % f weight 0 %f , %f \n"",fKDE->fAdaptiveBandwidthFactor, weights[0],fWeights[0] );",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TKDE.cxx:10,adapt,adaptive,10,hist/hist/src/TKDE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TKDE.cxx,1,['adapt'],['adaptive']
Energy Efficiency,"//printf(""allocates subdat[ %d ]\n"", sum);; // init the subdat matrix",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx:10,allocate,allocates,10,math/physics/src/TRobustEstimator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx,1,['allocate'],['allocates']
Energy Efficiency,"//reduce vector type to double.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitUtil.h:2,reduce,reduce,2,math/mathcore/inc/Fit/FitUtil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitUtil.h,1,['reduce'],['reduce']
Energy Efficiency,"//std::cout << "" allocate "" << fRng << std::endl;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLQRngWrapper.h:17,allocate,allocate,17,math/mathmore/src/GSLQRngWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLQRngWrapper.h,1,['allocate'],['allocate']
Energy Efficiency,"//std::cout << ""energy is "" << enrg << std::endl;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/simanTSP.cxx:16,energy,energy,16,math/mathmore/test/simanTSP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/simanTSP.cxx,1,['energy'],['energy']
Energy Efficiency,"//std::cout << ""set a 1d function"" << std::endl;; // function is cloned when creating the adapter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Fitter.cxx:90,adapt,adapter,90,math/mathcore/src/Fitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Fitter.cxx,1,['adapt'],['adapter']
Energy Efficiency,"//template<class T> T* Reduce(const std::vector<T*> &mergeObjs);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Executor.h:23,Reduce,Reduce,23,tmva/tmva/inc/TMVA/Executor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Executor.h,1,['Reduce'],['Reduce']
Energy Efficiency,"//the linker does not like to be mmapped; //causes a crash in cling::DynamicLibraryManager::loadLibrary()); //with error message ""mmap of entire address space failed: Cannot allocate memory""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx:174,allocate,allocate,174,core/metacling/src/TCling.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TCling.cxx,1,['allocate'],['allocate']
Energy Efficiency,"//true if monitoring sockets within the main event loop",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TMonitor.h:10,monitor,monitoring,10,net/net/inc/TMonitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TMonitor.h,1,['monitor'],['monitoring']
Energy Efficiency,"//use an adaptive bandwidth to reduce the dependence on global data distribution",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx:9,adapt,adaptive,9,roofit/roofit/src/Roo2DKeysPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/Roo2DKeysPdf.cxx,2,"['adapt', 'reduce']","['adaptive', 'reduce']"
Energy Efficiency,"//wattr.fSaveUnder = kTRUE;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorSelect.cxx:2,watt,wattr,2,gui/gui/src/TGColorSelect.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGColorSelect.cxx,1,['watt'],['wattr']
Energy Efficiency,"//zjh-; // monitor convergence of training and control sample",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodMLP.cxx:11,monitor,monitor,11,tmva/tmva/src/MethodMLP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodMLP.cxx,1,['monitor'],['monitor']
Energy Efficiency,"/; /*; * ALGORITHM; *; * The ""deflation"" process depends on being able to identify portions; * of the input text which are identical to earlier input (within a; * sliding window trailing behind the input currently being processed).; *; * The most straightforward technique turns out to be the fastest for; * most input files: try all possible matches and select the longest.; * The key feature of this algorithm is that insertions into the string; * dictionary are very simple and thus fast, and deletions are avoided; * completely. Insertions are performed at each input character, whereas; * string matches are performed only when the previous match ends. So it; * is preferable to spend more time in matches to allow very fast string; * insertions and avoid deletions. The matching algorithm for small; * strings is inspired from that of Rabin & Karp. A brute force approach; * is used to find longer strings when a small match has been found.; * A similar algorithm is used in comic (by Jan-Mark Wams) and freeze; * (by Leonid Broukhis).; * A previous version of this file used a more sophisticated algorithm; * (by Fiala and Greene) which is guaranteed to run in linear amortized; * time, but has a larger average cost, uses more memory and is patented.; * However the F&G algorithm may be faster for some highly redundant; * files if the parameter max_chain_length (described below) is too large.; *; * ACKNOWLEDGEMENTS; *; * The idea of lazy evaluation of matches is due to Jan-Mark Wams, and; * I found it in 'freeze' written by Leonid Broukhis.; * Thanks to many people for bug reports and testing.; *; * REFERENCES; *; * Deutsch, L.P.,""DEFLATE Compressed Data Format Specification"".; * Available in http://tools.ietf.org/html/rfc1951; *; * A description of the Rabin and Karp algorithm is given in the book; * ""Algorithms"" by R. Sedgewick, Addison-Wesley, p252.; *; * Fiala,E.R., and Greene,D.H.; * Data Compression with Finite Windows, Comm.ACM, 32,4 (1989) 490-595; *; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:1325,Green,Greene,1325,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,2,['Green'],['Greene']
Energy Efficiency,"/packages/RInside/index.html"">RInside</A>; <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>. \ingroup R; */; /**; <center><h2>TRInterface class</h2></center>. </p>; The TRInterface class lets you process R code from ROOT.<br>; You can call R libraries and their functions, plot results in R or ROOT,<br>; and use the power of ROOT and R at the same time.<br>; It also lets you pass scalars, vectors and matrices from ROOT to R<br>; and from R to ROOT using TRObject; but you can to use overloaded operators [],<< and >> <br>; to work with ROOTR like work with streams of data.<br>. TRInterface class can not be instantiated directly, but you can create objects using the static methods; TRInterface& Instance() and TRInterface* InstancePtr() to create your own objects.<br>; <br>; </p>; Show an example below:; Create an exponential fit, the idea is to create a set of numbers x,y with noise from ROOT,; pass them to R and fit the data to \f$ x^3 \f$, get the fitted coefficient(power) and plot the data,; the known function and the fitted function.; \code{.cpp}. TCanvas *c1 = new TCanvas(""c1"",""Curve Fit"",700,500);; c1->SetGrid();. // draw a frame for multiples graphs; TMultiGraph *mg = new TMultiGraph();. // create the first graph (points with gaussian noise); const Int_t n = 24;; Double_t x[n] ;; Double_t y[n] ;; //Generate points along a X^3 with noise; TRandom rg;; rg.SetSeed(520);; for (Int_t i = 0; i < n; i++) {; x[i] = rg.Uniform(0, 1);; y[i] = TMath::Power(x[i], 3) + rg.Gaus() * 0.06;; }. TGraph *gr1 = new TGraph(n,x,y);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(8);; gr1->SetMarkerSize(1);; mg->Add(gr1);. // create second graph; TF1 *f_known=new TF1(""f_known"",""pow(x,3)"",0,1);; TGraph *gr2 = new TGraph(f_known);; gr2->SetMarkerColor(kRed);; gr2->SetMarkerStyle(8);; gr2->SetMarkerSize(1);; mg->Add(gr2);. //passing x and y values to R for fitting; ROOT::R::TRInterface &r=ROOT::R:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:1321,power,power,1321,bindings/r/inc/TRInterface.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h,1,['power'],['power']
Energy Efficiency,"/zenodo.1253756.svg"" alt=""DOI""></a>; \endhtmlonly. ## Table of Contents; - [Example](\ref example); - [Arithmetic operations, logical operations and mathematical functions](\ref operationsandfunctions); - [Owning and adopting memory](\ref owningandadoptingmemory); - [Sorting and manipulation of indices](\ref sorting); - [Usage in combination with RDataFrame](\ref usagetdataframe); - [Reference for the RVec class](\ref RVecdoxyref); - [Reference for RVec helper functions](https://root.cern/doc/master/namespaceROOT_1_1VecOps.html). \anchor example; ## Example; Suppose to have an event featuring a collection of muons with a certain pseudorapidity,; momentum and charge, e.g.:; ~~~{.cpp}; std::vector<short> mu_charge {1, 1, -1, -1, -1, 1, 1, -1};; std::vector<float> mu_pt {56, 45, 32, 24, 12, 8, 7, 6.2};; std::vector<float> mu_eta {3.1, -.2, -1.1, 1, 4.1, 1.6, 2.4, -.5};; ~~~; Suppose you want to extract the transverse momenta of the muons satisfying certain; criteria, for example consider only negatively charged muons with a pseudorapidity; smaller or equal to 2 and with a transverse momentum greater than 10 GeV.; Such a selection would require, among the other things, the management of an explicit; loop, for example:; ~~~{.cpp}; std::vector<float> goodMuons_pt;; const auto size = mu_charge.size();; for (size_t i=0; i < size; ++i) {; if (mu_pt[i] > 10 && abs(mu_eta[i]) <= 2. && mu_charge[i] == -1) {; goodMuons_pt.emplace_back(mu_pt[i]);; }; }; ~~~; These operations become straightforward with RVec - we just need to *write what; we mean*:; ~~~{.cpp}; auto goodMuons_pt = mu_pt[ (mu_pt > 10.f && abs(mu_eta) <= 2.f && mu_charge == -1) ]; ~~~; Now the clean collection of transverse momenta can be used within the rest of the data analysis, for; example to fill a histogram. \anchor operationsandfunctions; ## Arithmetic operations, logical operations and mathematical functions; Arithmetic operations on RVec instances can be performed: for example, they can be added, subtracted, ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx:2547,charge,charged,2547,math/vecops/inc/ROOT/RVec.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx,1,['charge'],['charged']
Energy Efficiency,"0 colors. It is kept for backward compatibility. Better palettes like; /// kBird are recommended.; ///; /// High quality predefined palettes with 255 colors are available when `colors == 0`.; /// The following value of `ncolors` give access to:; ///; /// ~~~ {.cpp}; /// if ncolors = 51 and colors=0, a Deep Sea palette is used.; /// if ncolors = 52 and colors=0, a Grey Scale palette is used.; /// if ncolors = 53 and colors=0, a Dark Body Radiator palette is used.; /// if ncolors = 54 and colors=0, a Two-Color Hue palette is used.(dark blue through neutral gray to bright yellow); /// if ncolors = 55 and colors=0, a Rain Bow palette is used.; /// if ncolors = 56 and colors=0, an Inverted Dark Body Radiator palette is used.; /// if ncolors = 57 and colors=0, a monotonically increasing L value palette is used.; /// if ncolors = 58 and colors=0, a Cubehelix palette is used; /// (Cf. Dave Green's ""cubehelix"" colour scheme at http://www.mrao.cam.ac.uk/~dag/CUBEHELIX/); /// if ncolors = 59 and colors=0, a Green Red Violet palette is used.; /// if ncolors = 60 and colors=0, a Blue Red Yellow palette is used.; /// if ncolors = 61 and colors=0, an Ocean palette is used.; /// if ncolors = 62 and colors=0, a Color Printable On Grey palette is used.; /// if ncolors = 63 and colors=0, an Alpine palette is used.; /// if ncolors = 64 and colors=0, an Aquamarine palette is used.; /// if ncolors = 65 and colors=0, an Army palette is used.; /// if ncolors = 66 and colors=0, an Atlantic palette is used.; /// if ncolors = 67 and colors=0, an Aurora palette is used.; /// if ncolors = 68 and colors=0, an Avocado palette is used.; /// if ncolors = 69 and colors=0, a Beach palette is used.; /// if ncolors = 70 and colors=0, a Black Body palette is used.; /// if ncolors = 71 and colors=0, a Blue Green Yellow palette is used.; /// if ncolors = 72 and colors=0, a Brown Cyan palette is used.; /// if ncolors = 73 and colors=0, a CMYK palette is used.; /// if ncolors = 74 and colors=0, a Candy pale",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:2000,Green,Green,2000,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,1,['Green'],['Green']
Energy Efficiency,"0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // GCStrategy coordinates code generation algorithms and implements some itself; // in order to generate code compatible with a target code generator as; // specified in a function's 'gc' attribute. Algorithms are enabled by setting; // flags in a subclass's constructor, and some virtual methods can be; // overridden.; //; // GCStrategy is relevant for implementations using either gc.root or; // gc.statepoint based lowering strategies, but is currently focused mostly on; // options for gc.root. This will change over time.; //; // When requested by a subclass of GCStrategy, the gc.root implementation will; // populate GCModuleInfo and GCFunctionInfo with that about each Function in; // the Module that opts in to garbage collection. Specifically:; //; // - Safe points; // Garbage collection is generally only possible at certain points in code.; // GCStrategy can request that the collector insert such points:; //; // - At and after any call to a subroutine; // - Before returning from the current function; // - Before backwards branches (loops); //; // - Roots; // When a reference to a GC-allocated object exists on the stack, it must be; // stored in an alloca registered with llvm.gcoot.; //; // This information can used to emit the metadata tables which are required by; // the target garbage collector runtime.; //; // When used with gc.statepoint, information about safepoint and roots can be; // found in the binary StackMap section after code generation. Safepoint; // placement is currently the responsibility of the frontend, though late; // insertion support is planned.; //; // The read and write barrier support can be used with either implementation.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GCStrategy.h:1482,allocate,allocated,1482,interpreter/llvm-project/llvm/include/llvm/IR/GCStrategy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GCStrategy.h,1,['allocate'],['allocated']
Energy Efficiency,"0, 1.00, 0.00};; Double_t Blue[Number] = { 1.00, 0.00, 1.00};; Double_t Length[Number] = { 0.00, 0.50, 1.00 };; Int_t nb=50;; TColor::CreateGradientColorTable(Number,Length,Red,Green,Blue,nb);; f2->SetContour(nb);; f2->SetLineWidth(1);; f2->SetLineColor(kBlack);; f2->Draw(""surf1z"");; return c2;; }; End_Macro. The function `TColor::CreateGradientColorTable()` automatically; calls `gStyle->SetPalette()`, so there is not need to add one. After a call to `TColor::CreateGradientColorTable()` it is sometimes; useful to store the newly create palette for further use. In particular, it is; recommended to do if one wants to switch between several user define palettes.; To store a palette in an array it is enough to do:. ~~~ {.cpp}; Int_t MyPalette[100];; Double_t Red[] = {0., 0.0, 1.0, 1.0, 1.0};; Double_t Green[] = {0., 0.0, 0.0, 1.0, 1.0};; Double_t Blue[] = {0., 1.0, 0.0, 0.0, 1.0};; Double_t Length[] = {0., .25, .50, .75, 1.0};; Int_t FI = TColor::CreateGradientColorTable(5, Length, Red, Green, Blue, 100);; for (int i=0;i<100;i++) MyPalette[i] = FI+i;; ~~~. Later on to reuse the palette `MyPalette` it will be enough to do. ~~~ {.cpp}; gStyle->SetPalette(100, MyPalette);; ~~~. As only one palette is active, one need to use `TExec` to be able to; display plots using different palettes on the same pad.; The tutorial multipalette.C illustrates this feature. Begin_Macro(source); ../../../tutorials/graphs/multipalette.C; End_Macro. \since **6.26:**; The function `TColor::CreateColorTableFromFile(""filename.txt"")` allows you to create a color; palette based on an input ASCII file. In contrast to `TColor::CreateGradientColorTable()`, here; the length (spacing) is constant and can not be tuned. There is no gradient being interpolated; between adjacent colors. The palette will contain the exact colors stored in the file, that; comprises one line per color in the format ""r g b"" as floats. \anchor C06; ## High quality predefined palettes; \since **6.04:**; 63 high quality palettes are",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:8201,Green,Green,8201,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,1,['Green'],['Green']
Energy Efficiency,"1 (1997) 385-408.; /// 4. Morhac; M., Matouoek V., Kliman J., Efficient algorithm of multidimensional; /// deconvolution and its application to nuclear data processing, Digital Signal; /// Processing 13 (2003) 144.; ///; /// ### Example 8 - script Deconvolution.C :; ///; /// response function (usually peak) should be shifted left to the first; /// non-zero channel (bin).; ///; /// \image html TSpectrum_Deconvolution2.jpg Principle how the response matrix is composed inside of the Deconvolution function.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Deconvolution.C; /// End_Macro; ///; /// ### Examples of Gold deconvolution method:; ///; /// First let us study the influence of the number of iterations on the; /// deconvolved spectrum (Fig. 12).; ///; /// \image html TSpectrum_Deconvolution_wide1.jpg Fig. 12 Study of Gold deconvolution algorithm.The original source spectrum is drawn with black color, spectrum after 100 iterations with red color, spectrum after 1000 iterations with blue color, spectrum after 10000 iterations with green color and spectrum after 100000 iterations with magenta color.; ///; /// For relatively narrow peaks in the above given example the Gold; /// deconvolution method is able to decompose overlapping peaks practically to; /// delta - functions. In the next example we have chosen a synthetic data; /// (spectrum, 256 channels) consisting of 5 very closely positioned, relatively; /// wide peaks (sigma =5), with added noise (Fig. 13). Thin lines represent; /// pure Gaussians (see Table 1); thick line is a resulting spectrum with; /// additive noise (10% of the amplitude of small peaks).; ///; /// \image html TSpectrum_Deconvolution_wide2.jpg Fig. 13 Testing example of synthetic spectrum composed of 5 Gaussians with added noise.; ///; /// | Peak # | Position | Height | Area |; /// |----------|----------|--------|--------|; /// | 1 | 50 | 500 | 10159 |; /// | 2 | 70 | 3000 | 60957 |; /// | 3 | 80 | 1000 | 20319 |; /// | 4 | 100 | 5",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:4948,green,green,4948,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,1,['green'],['green']
Energy Efficiency,"1 Mar 92 M. Adler first version with partial lookup tables; b2 21 Mar 92 M. Adler fixed bug in fixed-code blocks; b3 22 Mar 92 M. Adler sped up match copies, cleaned up some; b4 25 Mar 92 M. Adler added prototypes; removed window[] (now; is the responsibility of unzip.h--also; changed name to slide[]), so needs diffs; for unzip.c and unzip.h (this allows; compiling in the small model on MSDOS);; fixed cast of q in huft_build();; b5 26 Mar 92 M. Adler got rid of unintended macro recursion.; b6 27 Mar 92 M. Adler got rid of nextbyte() routine. fixed; bug in inflate_fixed().; c1 30 Mar 92 M. Adler removed lbits, dbits environment variables.; changed BMAX to 16 for explode. Removed; OUTB usage, and replaced it with flush()--; this was a 20% speed improvement! Added; an explode.c (to replace unimplod.c) that; uses the huft routines here. Removed; register union.; c2 4 Apr 92 M. Adler fixed bug for file sizes a multiple of 32k.; c3 10 Apr 92 M. Adler reduced memory of code tables made by; huft_build significantly (factor of two to; three).; c4 15 Apr 92 M. Adler added NOMEMCPY do kill use of memcpy().; worked around a Turbo C optimization bug.; c5 21 Apr 92 M. Adler added the WSIZE #define to allow reducing; the 32K window size for specialized; applications.; c6 31 May 92 M. Adler added some typecasts to eliminate warnings; c7 27 Jun 92 G. Roelofs added some more typecasts (444: MSC bug).; c8 5 Oct 92 J-l. Gailly added ifdef'd code to deal with PKZIP bug.; c9 9 Oct 92 M. Adler removed a memory error message (~line 416).; c10 17 Oct 92 G. Roelofs changed ULONG/UWORD/byte to ulg/ush/uch,; removed old inflate, renamed inflate_entry; to inflate, added Mark's fix to a comment.; c10.5 14 Dec 92 M. Adler fix up error messages for incomplete trees.; c11 2 Jan 93 M. Adler fixed bug in detection of incomplete; tables, and removed assumption that EOB is; the longest code (bad assumption).; c12 3 Jan 93 M. Adler make tables for fixed blocks only once.; c13 5 Jan 93 M. Adler allow all ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:1415,reduce,reduced,1415,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['reduce'],['reduced']
Energy Efficiency,"2010 Aaron Spike, https://github.com/acspike; * 2012 Willow Systems Corporation, https://github.com/willowsystems; * 2012 Pablo Hess, https://github.com/pablohess; * 2012 Florian Jenett, https://github.com/fjenett; * 2013 Warren Weckesser, https://github.com/warrenweckesser; * 2013 Youssef Beddad, https://github.com/lifof; * 2013 Lee Driscoll, https://github.com/lsdriscoll; * 2013 Stefan Slonevskiy, https://github.com/stefslon; * 2013 Jeremy Morel, https://github.com/jmorel; * 2013 Christoph Hartmann, https://github.com/chris-rock; * 2014 Juan Pablo Gaviria, https://github.com/juanpgaviria; * 2014 James Makes, https://github.com/dollaruw; * 2014 Diego Casorran, https://github.com/diegocr; * 2014 Steven Spungin, https://github.com/Flamenco; * 2014 Kenneth Glassey, https://github.com/Gavvers; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; *; * Contributor(s):; * siefkenj, ahwolf, rickygu, Midnith, saintclair, eaparango,; * kim3er, mfo, alnorth, Flamenco; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:1210,charge,charge,1210,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,3,['charge'],['charge']
Energy Efficiency,"6); // |.(VLAs)............................| (size of this area is unknown at; // |...................................| compile time); // |-----------------------------------| <- sp; // | | Lower address; //; //; // To access the data in a frame, at-compile time, a constant offset must be; // computable from one of the pointers (fp, bp, sp) to access it. The size; // of the areas with a dotted background cannot be computed at compile-time; // if they are present, making it required to have all three of fp, bp and; // sp to be set up to be able to access all contents in the frame areas,; // assuming all of the frame areas are non-empty.; //; // For most functions, some of the frame areas are empty. For those functions,; // it may not be necessary to set up fp or bp:; // * A base pointer is definitely needed when there are both VLAs and local; // variables with more-than-default alignment requirements.; // * A frame pointer is definitely needed when there are local variables with; // more-than-default alignment requirements.; //; // In some cases when a base pointer is not strictly needed, it is generated; // anyway when offsets from the frame pointer to access local variables become; // so large that the offset can't be encoded in the immediate fields of loads; // or stores.; //; // The frame pointer might be chosen to be r7 or r11, depending on the target; // architecture and operating system. See ARMSubtarget::getFramePointerReg for; // details.; //; // Outgoing function arguments must be at the bottom of the stack frame when; // calling another function. If we do not have variable-sized stack objects, we; // can allocate a ""reserved call frame"" area at the bottom of the local; // variable area, large enough for all outgoing calls. If we do have VLAs, then; // the stack pointer must be decremented and incremented around each call to; // make space for the arguments below the VLAs.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp:4089,allocate,allocate,4089,interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,1,['allocate'],['allocate']
Energy Efficiency,": Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass searches for instructions that are prevented from being compressed; // by one of the following:; //; // 1. The use of a single uncompressed register.; // 2. A base register + offset where the offset is too large to be compressed; // and the base register may or may not be compressed.; //; //; // For case 1, if a compressed register is available, then the uncompressed; // register is copied to the compressed register and its uses are replaced.; //; // For example, storing zero uses the uncompressible zero register:; // sw zero, 0(a0) # if zero; // sw zero, 8(a0) # if zero; // sw zero, 4(a0) # if zero; // sw zero, 24(a0) # if zero; //; // If a compressed register (e.g. a1) is available, the above can be transformed; // to the following to improve code size:; // li a1, 0; // c.sw a1, 0(a0); // c.sw a1, 8(a0); // c.sw a1, 4(a0); // c.sw a1, 24(a0); //; //; // For case 2, if a compressed register is available, then the original base; // is copied and adjusted such that:; //; // new_base_register = base_register + adjustment; // base_register + large_offset = new_base_register + small_offset; //; // For example, the following offsets are too large for c.sw:; // lui a2, 983065; // sw a1, -236(a2); // sw a1, -240(a2); // sw a1, -244(a2); // sw a1, -248(a2); // sw a1, -252(a2); // sw a0, -256(a2); //; // If a compressed register is available (e.g. a3), a new base could be created; // such that the addresses can accessed with a compressible offset, thus; // improving code size:; // lui a2, 983065; // addi a3, a2, -256; // c.sw a1, 20(a3); // c.sw a1, 16(a3); // c.sw a1, 12(a3); // c.sw a1, 8(a3); // c.sw a1, 4(a3); // c.sw a0, 0(a3); //; //; // This optimization is only applied if there are enough uses of the copied; // register for code size to be reduced.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVMakeCompressible.cpp:2162,reduce,reduced,2162,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVMakeCompressible.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVMakeCompressible.cpp,1,['reduce'],['reduced']
Energy Efficiency,":TRandom1 80 ns/call; - ::TRandomRanlux48 250 ns/call. The following methods are provided to generate random numbers distributed according to some basic distributions:. - Exp(Double_t tau); - Integer(UInt_t imax); - Gaus(Double_t mean, Double_t sigma); - Rndm(); - Uniform(Double_t); - Landau(Double_t mean, Double_t sigma); - Poisson(Double_t mean); - Binomial(Int_t ntot, Double_t prob). Random numbers distributed according to 1-d, 2-d or 3-d distributions contained in TF1, TF2 or TF3 objects can also be; generated. For example, to get a random number distributed following abs(sin(x)/x)*sqrt(x) you can do : \code{.cpp} TF1; *f1 = new TF1(""f1"",""abs(sin(x)/x)*sqrt(x)"",0,10); double r = f1->GetRandom(); \endcode or you can use the UNURAN; package. You need in this case to initialize UNURAN to the function you would like to generate. \code{.cpp} TUnuran u;; u.Init(TUnuranDistrCont(f1));; double r = u.Sample();; \endcode. The techniques of using directly a TF1,2 or 3 function is powerful and; can be used to generate numbers in the defined range of the function.; Getting a number from a TF1,2,3 function is also quite fast.; UNURAN is a powerful and flexible tool which contains various methods for; generate random numbers for continuous distributions of one and multi-dimension.; It requires some set-up (initialization) phase and can be very fast when the distribution; parameters are not changed for every call. The following table shows some timings (in nanosecond/call); for basic functions, TF1 functions and using UNURAN obtained running; the tutorial math/testrandom.C; Numbers have been obtained on an Intel Xeon Quad-core Harpertown (E5410) 2.33 GHz running; Linux SLC4 64 bit and compiled with gcc 3.4. ~~~~; Distribution nanoseconds/call; TRandom TRandom1 TRandom2 TRandom3; Rndm.............. 5.000 105.000 7.000 10.000; RndmArray......... 4.000 104.000 6.000 9.000; Gaus.............. 36.000 180.000 40.000 48.000; Rannor............ 118.000 220.000 120.000 124.000; Landau..",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom.cxx:6691,power,powerful,6691,math/mathcore/src/TRandom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom.cxx,1,['power'],['powerful']
Energy Efficiency,"; *********/; /****f* libAfterImage/asimage/asimage_start(); * NAME; * asimage_start() Allocates memory needed to store scanline of the image ; * of supplied size. Assigns all the data members valid values. Makes sure ; * that ASImage structure is ready to store image data.; * SYNOPSIS; * void asimage_start (ASImage * im, unsigned int width,; * unsigned int height,; * unsigned int compression);; * INPUTS; * im - pointer to valid ASImage structure; * width - width of the image; * height - height of the image; * compression - level of compression to perform on image data.; * compression has to be in range of 0-100 with 100; * signifying highest level of compression.; * NOTES; * In order to resize ASImage structure after asimage_start() has been; * called, asimage_init() must be invoked to free all the memory, and; * then asimage_start() has to be called with new dimensions.; *********/; /****f* libAfterImage/asimage/create_asimage(); * NAME; * create_asimage() Performs memory allocation for the new ASImage ; * structure, as well as initialization of allocated structure based on ; * supplied parameters.; * SYNOPSIS; * ASImage *create_asimage( unsigned int width,; * unsigned int height,; * unsigned int compression);; * INPUTS; * width - desired image width; * height - desired image height; * compression - compression level in new ASImage( see asimage_start(); * for more ).; * RETURN VALUE; * Pointer to newly allocated and initialized ASImage structure on; * Success. NULL in case of any kind of error - that should never happen.; *********/; /****f* libAfterImage/asimage/clone_asimage(); * NAME ; * clone_asimage(); * SYNOPSIS; * ASImage *clone_asimage(ASImage *src, ASFlagType filter );; * INPUTS; * src - original ASImage.; * filter - bitmask of channels to be copied from one image to another.; * RETURN VALUE; * New ASImage, as a copy of original image.; * DESCRIPTION; * Creates exact clone of the original ASImage, with same compression,; * back_color and rest of the attrib",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h:1726,allocate,allocated,1726,graf2d/asimage/src/libAfterImage/asimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h,1,['allocate'],['allocated']
Energy Efficiency,"; *; * BidirMMapPipe* spawnChild(int (*childexec)(BidirMMapPipe&)); * {; * BidirMMapPipe *p = new BidirMMapPipe();; * if (p->isChild()) {; * int retVal = childexec(*p);; * delete p;; * std::exit(retVal);; * }; * return p;; * }; *; * int main(); * {; * std::cout << ""[PARENT]: simple challenge-response test, one child:"" <<; * std::endl;; * BidirMMapPipe* pipe = spawnChild(simplechild);; * for (int i = 0; i < 5; ++i) {; * std::string str(""What shall we do with a drunken sailor..."");; * *pipe << str << BidirMMapPipe::flush;; * if (!*pipe) return -1;; * std::cout << ""[PARENT]: wrote: "" << str << std::endl;; * *pipe >> str;; * if (!*pipe) return -1;; * std::cout << ""[PARENT]: read: "" << str << std::endl;; * }; * // ask child to shut down; * pipe << """" << BidirMMapPipe::flush;; * // wait for it to see the shutdown request; * std::string s;; * pipe >> s;; * std::cout << ""[PARENT]: exit status of child: "" << pipe->close() <<; * std::endl;; * delete pipe;; * return 0;; * }; * @endcode; *; * When designing your own protocols to use over the pipe, there are a few; * things to bear in mind:; * - Do as http does: When building a request, send all the options and; * properties of that request with the request itself in a single go (one; * flush). Then, the server has everything it needs, and hopefully, it'll; * shut up for a while and to let the client do something useful in the; * meantime... The same goes when the server replies to the request: include; * everything there is to know about the result of the request in the reply.; * - The expensive operation should be the request that is made, all other; * operations should somehow be formulated as options or properties to that; * request.; * - Include a shutdown handshake in whatever protocol you send over the; * pipe. That way, you can shut things down in a controlled way. Otherwise,; * and depending on your OS's scheduling quirks, you may catch a SIGPIPE if; * one end closes its pipe while the other is still trying to read.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:8027,schedul,scheduling,8027,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['schedul'],['scheduling']
Energy Efficiency,"; /*; * ALGORITHM; *; * The ""deflation"" process depends on being able to identify portions; * of the input text which are identical to earlier input (within a; * sliding window trailing behind the input currently being processed).; *; * The most straightforward technique turns out to be the fastest for; * most input files: try all possible matches and select the longest.; * The key feature of this algorithm is that insertions into the string; * dictionary are very simple and thus fast, and deletions are avoided; * completely. Insertions are performed at each input character, whereas; * string matches are performed only when the previous match ends. So it; * is preferable to spend more time in matches to allow very fast string; * insertions and avoid deletions. The matching algorithm for small; * strings is inspired from that of Rabin & Karp. A brute force approach; * is used to find longer strings when a small match has been found.; * A similar algorithm is used in comic (by Jan-Mark Wams) and freeze; * (by Leonid Broukhis).; * A previous version of this file used a more sophisticated algorithm; * (by Fiala and Greene) which is guaranteed to run in linear amortized; * time, but has a larger average cost, uses more memory and is patented.; * However the F&G algorithm may be faster for some highly redundant; * files if the parameter max_chain_length (described below) is too large.; *; * ACKNOWLEDGEMENTS; *; * The idea of lazy evaluation of matches is due to Jan-Mark Wams, and; * I found it in 'freeze' written by Leonid Broukhis.; * Thanks to many people for bug reports and testing.; *; * REFERENCES; *; * Deutsch, L.P.,""DEFLATE Compressed Data Format Specification"".; * Available in http://www.ietf.org/rfc/rfc1951.txt; *; * A description of the Rabin and Karp algorithm is given in the book; * ""Algorithms"" by R. Sedgewick, Addison-Wesley, p252.; *; * Fiala,E.R., and Greene,D.H.; * Data Compression with Finite Windows, Comm.ACM, 32,4 (1989) 490-595; *; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/deflate.c:1311,Green,Greene,1311,graf2d/asimage/src/libAfterImage/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/deflate.c,2,['Green'],['Greene']
Energy Efficiency,"; // The struct-layout algorithm is dictated by the platform ABI,; // which in principle could use almost any rules it likes. In; // practice, UNIXy targets tend to inherit the algorithm described; // in the System V generic ABI. The basic bitfield layout rule in; // System V is to place bitfields at the next available bit offset; // where the entire bitfield would fit in an aligned storage unit of; // the declared type; it's okay if an earlier or later non-bitfield; // is allocated in the same storage unit. However, some targets; // (those that !useBitFieldTypeAlignment(), e.g. ARM APCS) don't; // require this storage unit to be aligned, and therefore always put; // the bitfield at the next available bit offset.; // ms_struct basically requests a complete replacement of the; // platform ABI's struct-layout algorithm, with the high-level goal; // of duplicating MSVC's layout. For non-bitfields, this follows; // the standard algorithm. The basic bitfield layout rule is to; // allocate an entire unit of the bitfield's declared type; // (e.g. 'unsigned long'), then parcel it up among successive; // bitfields whose declared types have the same size, making a new; // unit as soon as the last can no longer store the whole value.; // Since it completely replaces the platform ABI's algorithm,; // settings like !useBitFieldTypeAlignment() do not apply.; // A zero-width bitfield forces the use of a new storage unit for; // later bitfields. In general, this occurs by rounding up the; // current size of the struct as if the algorithm were about to; // place a non-bitfield of the field's formal type. Usually this; // does not change the alignment of the struct itself, but it does; // on some targets (those that useZeroLengthBitfieldAlignment(),; // e.g. ARM). In ms_struct layout, zero-width bitfields are; // ignored unless they follow a non-zero-width bitfield.; // A field alignment restriction (e.g. from #pragma pack) or; // specification (e.g. from __attribute__((aligned))) cha",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp:1429,allocate,allocate,1429,interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,1,['allocate'],['allocate']
Energy Efficiency,"; // layout in the ""C-style"" case. Preferring larger fields tends to take; // better advantage of large gaps and may be more likely to have a size; // that's a multiple of a useful alignment. Preferring the initial; // order may help somewhat with locality but is mostly just a way of; // ensuring deterministic output.; //; // Note that this algorithm does not guarantee a minimal layout. Picking; // a larger object greedily may leave a gap that cannot be filled as; // efficiently. Unfortunately, solving this perfectly is an NP-complete; // problem (by reduction from bin-packing: let B_i be the bin sizes and; // O_j be the object sizes; add fixed-offset fields such that the gaps; // between them have size B_i, and add flexible-offset fields with; // alignment 1 and size O_j; if the layout size is equal to the end of; // the last fixed-layout field, the objects fit in the bins; note that; // this doesn't even require the complexity of alignment).; // The implementation below is essentially just an optimized version of; // scanning the list of remaining fields looking for the best, which; // would be O(n^2). In the worst case, it doesn't improve on that.; // However, in practice it'll just scan the array of alignment bins; // and consider the first few elements from one or two bins. The; // number of bins is bounded by a small constant: alignments are powers; // of two that are vanishingly unlikely to be over 64 and fairly unlikely; // to be over 8. And multiple elements only need to be considered when; // filling a gap between fixed-offset fields, which doesn't happen very; // often. We could use a data structure within bins that optimizes for; // finding the best-sized match, but it would require allocating memory; // and copying data, so it's unlikely to be worthwhile.; // Start by organizing the flexible-offset fields into bins according to; // their alignment. We expect a small enough number of bins that we; // don't care about the asymptotic costs of walking this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp:3146,power,powers,3146,interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp,1,['power'],['powers']
Energy Efficiency,"; /// - String Table; /// - Function Info Data; ///; /// HEADER; ///; /// The header is fully described in ""llvm/DebugInfo/GSYM/Header.h"".; ///; /// ADDRESS TABLE; ///; /// The address table immediately follows the header in the file and consists; /// of Header.NumAddresses address offsets. These offsets are sorted and can be; /// binary searched for efficient lookups. Addresses in the address table are; /// stored as offsets from a 64 bit base address found in Header.BaseAddress.; /// This allows the address table to contain 8, 16, or 32 offsets. This allows; /// the address table to not require full 64 bit addresses for each address.; /// The resulting GSYM size is smaller and causes fewer pages to be touched; /// during address lookups when the address table is smaller. The size of the; /// address offsets in the address table is specified in the header in; /// Header.AddrOffSize. The first offset in the address table is aligned to; /// Header.AddrOffSize alignment to ensure efficient access when loaded into; /// memory.; ///; /// FUNCTION INFO OFFSETS TABLE; ///; /// The function info offsets table immediately follows the address table and; /// consists of Header.NumAddresses 32 bit file offsets: one for each address; /// in the address table. This data is aligned to a 4 byte boundary. The; /// offsets in this table are the relative offsets from the start offset of the; /// GSYM header and point to the function info data for each address in the; /// address table. Keeping this data separate from the address table helps to; /// reduce the number of pages that are touched when address lookups occur on a; /// GSYM file.; ///; /// FILE TABLE; ///; /// The file table immediately follows the function info offsets table. The; /// encoding of the FileTable is:; ///; /// struct FileTable {; /// uint32_t Count;; /// FileEntry Files[];; /// };; ///; /// The file table starts with a 32 bit count of the number of files that are; /// used in all of the function info, followed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/GsymCreator.h:2576,efficient,efficient,2576,interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/GsymCreator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/GsymCreator.h,1,['efficient'],['efficient']
Energy Efficiency,"; /// Instruction visitors are used when you want to perform different actions; /// for different kinds of instructions without having to use lots of casts; /// and a big switch statement (in your code, that is).; ///; /// To define your own visitor, inherit from this class, specifying your; /// new type for the 'SubClass' template parameter, and ""override"" visitXXX; /// functions in your class. I say ""override"" because this class is defined; /// in terms of statically resolved overloading, not virtual functions.; ///; /// For example, here is a visitor that counts the number of malloc; /// instructions processed:; ///; /// /// Declare the class. Note that we derive from InstVisitor instantiated; /// /// with _our new subclasses_ type.; /// ///; /// struct CountAllocaVisitor : public InstVisitor<CountAllocaVisitor> {; /// unsigned Count;; /// CountAllocaVisitor() : Count(0) {}; ///; /// void visitAllocaInst(AllocaInst &AI) { ++Count; }; /// };; ///; /// And this class would be used like this:; /// CountAllocaVisitor CAV;; /// CAV.visit(function);; /// NumAllocas = CAV.Count;; ///; /// The defined has 'visit' methods for Instruction, and also for BasicBlock,; /// Function, and Module, which recursively process all contained instructions.; ///; /// Note that if you don't implement visitXXX for some instruction type,; /// the visitXXX method for instruction superclass will be invoked. So; /// if instructions are added in the future, they will be automatically; /// supported, if you handle one of their superclasses.; ///; /// The optional second template argument specifies the type that instruction; /// visitation functions should return. If you specify this, you *MUST* provide; /// an implementation of visitInstruction though!.; ///; /// Note that this class is specifically designed as a template to avoid; /// virtual function call overhead. Defining and using an InstVisitor is just; /// as efficient as having your own switch statement over the instruction; /// opcode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/InstVisitor.h:1965,efficient,efficient,1965,interpreter/llvm-project/llvm/include/llvm/IR/InstVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/InstVisitor.h,1,['efficient'],['efficient']
Energy Efficiency,"; /// data from these 32 lanes, producing a single resultant value.; /// Contiguous Partial Warp Reduce (argument value 1):; /// This algorithm assumes that only a *contiguous* subset of lanes; /// are active. This happens for the last warp in a parallel region; /// when the user specified num_threads is not an integer multiple of; /// 32. This contiguous subset always starts with the zeroth lane.; /// Partial Warp Reduce (argument value 2):; /// This algorithm gathers data from any number of lanes at any position.; /// All reduced values are stored in the lowest possible lane. The set; /// of problems every algorithm addresses is a super set of those; /// addressable by algorithms with a lower version number. Overhead; /// increases as algorithm version increases.; ///; /// Terminology; /// Reduce element:; /// Reduce element refers to the individual data field with primitive; /// data types to be combined and reduced across threads.; /// Reduce list:; /// Reduce list refers to a collection of local, thread-private; /// reduce elements.; /// Remote Reduce list:; /// Remote Reduce list refers to a collection of remote (relative to; /// the current thread) reduce elements.; ///; /// We distinguish between three states of threads that are important to; /// the implementation of this function.; /// Alive threads:; /// Threads in a warp executing the SIMT instruction, as distinguished from; /// threads that are inactive due to divergent control flow.; /// Active threads:; /// The minimal set of threads that has to be alive upon entry to this; /// function. The computation is correct iff active threads are alive.; /// Some threads are alive but they are not active because they do not; /// contribute to the computation in any useful manner. Turning them off; /// may introduce control flow overheads without any tangible benefits.; /// Effective threads:; /// In order to comply with the argument requirements of the shuffle; /// function, we must keep all lanes holding data a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:1344,Reduce,Reduce,1344,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,3,"['Reduce', 'reduce']","['Reduce', 'reduce']"
Energy Efficiency,"; /// } reduceData; /// reduceData.foo = &foo_private; /// reduceData.bar = &bar_private; ///; /// 'shuffleReduceFn' and 'interWarpCpyFn' are pointers to two; /// auxiliary functions generated by the compiler that operate on; /// variables of type 'ReduceData'. They aid the runtime perform; /// algorithmic steps in a data agnostic manner.; ///; /// 'shuffleReduceFn' is a pointer to a function that reduces data; /// of type 'ReduceData' across two OpenMP threads (lanes) in the; /// same warp. It takes the following arguments as input:; ///; /// a. variable of type 'ReduceData' on the calling lane,; /// b. its lane_id,; /// c. an offset relative to the current lane_id to generate a; /// remote_lane_id. The remote lane contains the second; /// variable of type 'ReduceData' that is to be reduced.; /// d. an algorithm version parameter determining which reduction; /// algorithm to use.; ///; /// 'shuffleReduceFn' retrieves data from the remote lane using; /// efficient GPU shuffle intrinsics and reduces, using the; /// algorithm specified by the 4th parameter, the two operands; /// element-wise. The result is written to the first operand.; ///; /// Different reduction algorithms are implemented in different; /// runtime functions, all calling 'shuffleReduceFn' to perform; /// the essential reduction step. Therefore, based on the 4th; /// parameter, this function behaves slightly differently to; /// cooperate with the runtime to ensure correctness under; /// different circumstances.; ///; /// 'InterWarpCpyFn' is a pointer to a function that transfers; /// reduced variables across warps. It tunnels, through CUDA; /// shared memory, the thread-private data of type 'ReduceData'; /// from lane 0 of each warp to a lane in the first warp.; /// 4. Call the OpenMP runtime on the GPU to reduce across teams.; /// The last team writes the global reduced value to memory.; ///; /// ret = __kmpc_nvptx_teams_reduce_nowait(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn,; /// scrat",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:2941,efficient,efficient,2941,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,2,"['efficient', 'reduce']","['efficient', 'reduces']"
Energy Efficiency,";; ///; /// // Store and retrieve a single bit as bool.; /// using Bool = Bitfield::Element<bool, 0, 1>;; /// Bitfield::set<Bool>(Storage, true);; /// EXPECT_EQ(Storage, 0b00000001);; /// // ^; /// EXPECT_EQ(Bitfield::get<Bool>(Storage), true);; ///; /// // Store and retrieve a 2 bit typed enum.; /// // Note: enum underlying type must be unsigned.; /// enum class SuitEnum : uint8_t { CLUBS, DIAMONDS, HEARTS, SPADES };; /// // Note: enum maximum value needs to be passed in as last parameter.; /// using Suit = Bitfield::Element<SuitEnum, 1, 2, SuitEnum::SPADES>;; /// Bitfield::set<Suit>(Storage, SuitEnum::HEARTS);; /// EXPECT_EQ(Storage, 0b00000101);; /// // ^^; /// EXPECT_EQ(Bitfield::get<Suit>(Storage), SuitEnum::HEARTS);; ///; /// // Store and retrieve a 5 bit value as unsigned.; /// using Value = Bitfield::Element<unsigned, 3, 5>;; /// Bitfield::set<Value>(Storage, 10);; /// EXPECT_EQ(Storage, 0b01010101);; /// // ^^^^^; /// EXPECT_EQ(Bitfield::get<Value>(Storage), 10U);; ///; /// // Interpret the same 5 bit value as signed.; /// using SignedValue = Bitfield::Element<int, 3, 5>;; /// Bitfield::set<SignedValue>(Storage, -2);; /// EXPECT_EQ(Storage, 0b11110101);; /// // ^^^^^; /// EXPECT_EQ(Bitfield::get<SignedValue>(Storage), -2);; ///; /// // Ability to efficiently test if a field is non zero.; /// EXPECT_TRUE(Bitfield::test<Value>(Storage));; ///; /// // Alter Storage changes value.; /// Storage = 0;; /// EXPECT_EQ(Bitfield::get<Bool>(Storage), false);; /// EXPECT_EQ(Bitfield::get<Suit>(Storage), SuitEnum::CLUBS);; /// EXPECT_EQ(Bitfield::get<Value>(Storage), 0U);; /// EXPECT_EQ(Bitfield::get<SignedValue>(Storage), 0);; ///; /// Storage = 255;; /// EXPECT_EQ(Bitfield::get<Bool>(Storage), true);; /// EXPECT_EQ(Bitfield::get<Suit>(Storage), SuitEnum::SPADES);; /// EXPECT_EQ(Bitfield::get<Value>(Storage), 31U);; /// EXPECT_EQ(Bitfield::get<SignedValue>(Storage), -1);; /// \endcode; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Bitfields.h:2421,efficient,efficiently,2421,interpreter/llvm-project/llvm/include/llvm/ADT/Bitfields.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Bitfields.h,1,['efficient'],['efficiently']
Energy Efficiency,";; margin-right: 5px;; margin-bottom: 5px;; border: 1px solid #dbdbdb;; border-radius: 3px;; }; table {; border-collapse: collapse;; }; .light-row {; background: #ffffff;; border: 1px solid #dbdbdb;; border-left: none;; border-right: none;; }; .light-row-bold {; background: #ffffff;; border: 1px solid #dbdbdb;; border-left: none;; border-right: none;; font-weight: bold;; }; .column-entry {; text-align: left;; }; .column-entry-bold {; font-weight: bold;; text-align: left;; }; .column-entry-yellow {; text-align: left;; background-color: #ffffd0;; }; .column-entry-yellow:hover, tr:hover .column-entry-yellow {; background-color: #fffff0;; }; .column-entry-red {; text-align: left;; background-color: #ffd0d0;; }; .column-entry-red:hover, tr:hover .column-entry-red {; background-color: #fff0f0;; }; .column-entry-gray {; text-align: left;; background-color: #fbfbfb;; }; .column-entry-gray:hover, tr:hover .column-entry-gray {; background-color: #f0f0f0;; }; .column-entry-green {; text-align: left;; background-color: #d0ffd0;; }; .column-entry-green:hover, tr:hover .column-entry-green {; background-color: #f0fff0;; }; .line-number {; text-align: right;; color: #aaa;; }; .covered-line {; text-align: right;; color: #0080ff;; }; .uncovered-line {; text-align: right;; color: #ff3300;; }; .tooltip {; position: relative;; display: inline;; background-color: #b3e6ff;; text-decoration: none;; }; .tooltip span.tooltip-content {; position: absolute;; width: 100px;; margin-left: -50px;; color: #FFFFFF;; background: #000000;; height: 30px;; line-height: 30px;; text-align: center;; visibility: hidden;; border-radius: 6px;; }; .tooltip span.tooltip-content:after {; content: '';; position: absolute;; top: 100%;; left: 50%;; margin-left: -8px;; width: 0; height: 0;; border-top: 8px solid #000000;; border-right: 8px solid transparent;; border-left: 8px solid transparent;; }; :hover.tooltip span.tooltip-content {; visibility: visible;; opacity: 0.8;; bottom: 30px;; left: 50%;; z-index: 999;; };",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-cov/SourceCoverageViewHTML.cpp:1517,green,green,1517,interpreter/llvm-project/llvm/tools/llvm-cov/SourceCoverageViewHTML.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-cov/SourceCoverageViewHTML.cpp,1,['green'],['green']
Energy Efficiency,">BookMethod( ""MethodCFMlpANN"", OptionsString ); *; * *; * where: *; * TString OptionsString = ""n_training_cycles:n_hidden_layers"" *; * *; * default is: n_training_cycles = 5000, n_layers = 4 *; * note that the number of hidden layers in the NN is *; * *; * n_hidden_layers = n_layers - 2 *; * *; * since there is one input and one output layer. The number of *; * nodes (neurons) is predefined to be *; * *; * n_nodes[i] = nvars + 1 - i (where i=1..n_layers) *; * *; * with nvars being the number of variables used in the NN. *; * Hence, the default case is: n_neurons(layer 1 (input)) : nvars *; * n_neurons(layer 2 (hidden)): nvars-1 *; * n_neurons(layer 3 (hidden)): nvars-1 *; * n_neurons(layer 4 (out)) : 2 *; * *; * This artificial neural network usually needs a relatively large *; * number of cycles to converge (8000 and more). Overtraining can *; * be efficiently tested by comparing the signal and background *; * output of the NN for the events that were used for training and *; * an independent data sample (with equal properties). If the separation *; * performance is significantly better for the training sample, the *; * NN interprets statistical effects, and is hence overtrained. In *; * this case, the number of cycles should be reduced, or the size *; * of the training sample increased. *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Xavier Prudent <prudent@lapp.in2p3.fr> - LAPP, France *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCFMlpANN.h:2262,reduce,reduced,2262,tmva/tmva/inc/TMVA/MethodCFMlpANN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCFMlpANN.h,1,['reduce'],['reduced']
Energy Efficiency,">|; *; * This technique is more useful for decompression,; * since decompressed size is typically larger,; * and margin is short.; *; * In-place decompression will work inside any buffer; * which size is >= LZ4_DECOMPRESS_INPLACE_BUFFER_SIZE(decompressedSize).; * This presumes that decompressedSize > compressedSize.; * Otherwise, it means compression actually expanded data,; * and it would be more efficient to store such data with a flag indicating it's not compressed.; * This can happen when data is not compressible (already compressed, or encrypted).; *; * For in-place compression, margin is larger, as it must be able to cope with both; * history preservation, requiring input data to remain unmodified up to LZ4_DISTANCE_MAX,; * and data expansion, which can happen when input is not compressible.; * As a consequence, buffer size requirements are much higher,; * and memory savings offered by in-place compression are more limited.; *; * There are ways to limit this cost for compression :; * - Reduce history size, by modifying LZ4_DISTANCE_MAX.; * Note that it is a compile-time constant, so all compressions will apply this limit.; * Lower values will reduce compression ratio, except when input_size < LZ4_DISTANCE_MAX,; * so it's a reasonable trick when inputs are known to be small.; * - Require the compressor to deliver a ""maximum compressed size"".; * This is the `dstCapacity` parameter in `LZ4_compress*()`.; * When this size is < LZ4_COMPRESSBOUND(inputSize), then compression can fail,; * in which case, the return code will be 0 (zero).; * The caller must be ready for these cases to happen,; * and typically design a backup scheme to send data uncompressed.; * The combination of both techniques can significantly reduce; * the amount of margin required for in-place compression.; *; * In-place compression can work in any buffer; * which size is >= (maxCompressedSize); * with maxCompressedSize == LZ4_COMPRESSBOUND(srcSize) for guaranteed compression success.; * LZ4_COMPRE",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1557,Reduce,Reduce,1557,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['Reduce'],['Reduce']
Energy Efficiency,"Author: Anna Kreshuk 07/4/2006; /*************************************************************************; * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /// \class TFFTComplexReal; ///; /// One of the interface classes to the FFTW package, can be used directly; /// or via the TVirtualFFT class. Only the basic interface of FFTW is implemented.; ///; /// Computes the inverse of the real-to-complex transforms (class TFFTRealComplex); /// taking complex input (storing the non-redundant half of a logically Hermitian array); /// to real output (see FFTW manual for more details); ///; /// How to use it:; /// 1. Create an instance of TFFTComplexReal - this will allocate input and output; /// arrays (unless an in-place transform is specified); /// 2. Run the Init() function with the desired flags and settings; /// 3. Set the data (via SetPoints(), SetPoint() or SetPointComplex() functions); /// 4. Run the Transform() function; /// 5. Get the output (via GetPoints(), GetPoint() or GetPointReal() functions); /// 6. Repeat steps 3)-5) as needed; ///; /// For a transform of the same size, but with different flags, rerun the Init(); /// function and continue with steps 3)-5); ///; /// NOTE:; /// 1. running Init() function will overwrite the input array! Don't set any data; /// before running the Init() function; /// 2. FFTW computes unnormalized transform, so doing a transform followed by; /// its inverse will lead to the original array scaled by the transform size; /// 3. In Complex to Real transform the input array is destroyed. It cannot then; /// be retrieved when using the Get's methods.; ///; /////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTComplexReal.cxx:1006,allocate,allocate,1006,math/fftw/src/TFFTComplexReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTComplexReal.cxx,1,['allocate'],['allocate']
Energy Efficiency,"Boosted Decision Trees *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Doug Schouten <dschoute@sfu.ca> - Simon Fraser U., Canada *; * Jan Therhaag <jan.therhaag@cern.ch> - U. of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodBDT; \ingroup TMVA. Analysis of Boosted Decision Trees. Boosted decision trees have been successfully used in High Energy; Physics analysis for example by the MiniBooNE experiment; (Yang-Roe-Zhu, physics/0508045). In Boosted Decision Trees, the; selection is done on a majority vote on the result of several decision; trees, which are all derived from the same training sample by; supplying different event weights during the training. ### Decision trees:. Successive decision nodes are used to categorize the; events out of the sample as either signal or background. Each node; uses only a single discriminating variable to decide if the event is; signal-like (""goes right"") or background-like (""goes left""). This; forms a tree like structure with ""baskets"" at the end (leave nodes),; and an event is classified as either signal or background according to; whether the basket where it ends up has been classified signal or; background during the training. Training of a decision tree is the; process to define the ""cut criteria"" for each node. The training; starts with the root node. Here one takes the full training event; sample a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:1357,Energy,Energy,1357,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['Energy'],['Energy']
Energy Efficiency,"CENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /// \class TFFTReal; /// One of the interface classes to the FFTW package, can be used directly; /// or via the TVirtualFFT class. Only the basic interface of FFTW is implemented.; ///; /// Computes transforms called r2r in FFTW manual:; /// - transforms of real input and output in ""halfcomplex"" format i.e.; /// real and imaginary parts for a transform of size n stored as; /// (r0, r1, r2, ..., rn/2, i(n+1)/2-1, ..., i2, i1); /// - discrete Hartley transform; /// - sine and cosine transforms (DCT-I,II,III,IV and DST-I,II,III,IV); /// For the detailed information on the computed; /// transforms please refer to the FFTW manual, chapter ""What FFTW really computes"".; ///; /// How to use it:; /// 1. Create an instance of TFFTReal - this will allocate input and output; /// arrays (unless an in-place transform is specified); /// 2. Run the Init() function with the desired flags and settings (see function; /// comments for possible kind parameters); /// 3. Set the data (via SetPoints()or SetPoint() functions); /// 4. Run the Transform() function; /// 5. Get the output (via GetPoints() or GetPoint() functions); /// 6. Repeat steps 3)-5) as needed; ///; /// For a transform of the same size, but of different kind (or with different flags),; /// rerun the Init() function and continue with steps 3)-5); ///; /// NOTE:; /// 1. running Init() function will overwrite the input array! Don't set any data; /// before running the Init() function!; /// 2. FFTW computes unnormalized transform, so doing a transform followed by; /// its inverse will lead to the original array scaled BY:; /// - transform size (N) for R2HC, HC2R, DHT transforms; /// - 2*(N-1) for DCT-I (REDFT00); /// - 2*(N+1) for DST-I (RODFT00); /// - 2*N for the remaining transforms; ///; /// Tran",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTReal.cxx:1244,allocate,allocate,1244,math/fftw/src/TFFTReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fftw/src/TFFTReal.cxx,1,['allocate'],['allocate']
Energy Efficiency,"Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file defines a variety of memory management related checkers, such as; // leak, double free, and use-after-free.; //; // The following checkers are defined here:; //; // * MallocChecker; // Despite its name, it models all sorts of memory allocations and; // de- or reallocation, including but not limited to malloc, free,; // relloc, new, delete. It also reports on a variety of memory misuse; // errors.; // Many other checkers interact very closely with this checker, in fact,; // most are merely options to this one. Other checkers may register; // MallocChecker, but do not enable MallocChecker's reports (more details; // to follow around its field, ChecksEnabled).; // It also has a boolean ""Optimistic"" checker option, which if set to true; // will cause the checker to model user defined memory management related; // functions annotated via the attribute ownership_takes, ownership_holds; // and ownership_returns.; //; // * NewDeleteChecker; // Enables the modeling of new, new[], delete, delete[] in MallocChecker,; // and checks for related double-free and use-after-free errors.; //; // * NewDeleteLeaksChecker; // Checks for leaks related to new, new[], delete, delete[].; // Depends on NewDeleteChecker.; //; // * MismatchedDeallocatorChecker; // Enables checking whether memory is deallocated with the correspending; // allocation function in MallocChecker, such as malloc() allocated; // regions are only freed by free(), new by delete, new[] by delete[].; //; // InnerPointerChecker interacts very closely with MallocChecker, but unlike; // the above checkers, it has it's own file, hence the many InnerPointerChecker; // related headers and non-static functions.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:1779,allocate,allocated,1779,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,1,['allocate'],['allocated']
Energy Efficiency,"Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TFolder; \ingroup Base. \legacy{TFolder}. A TFolder object is a collection of objects and folders.; Folders have a name and a title and are identified in the folder hierarchy; by a ""Unix-like"" naming mechanism. The root of all folders is //root.; New folders can be dynamically added or removed to/from a folder.; The folder hierarchy can be visualized via the TBrowser. \image html base_browser.png. The Root folders hierarchy can be seen as a whiteboard where objects; are posted. Other classes/tasks can access these objects by specifying; only a string pathname. This whiteboard facility greatly improves the; modularity of an application, minimizing the class relationship problem; that penalizes large applications. Pointers are efficient to communicate between classes.; However, one has interest to minimize direct coupling between classes; in the form of direct pointers. One better uses the naming and search; service provided by the Root folders hierarchy. This makes the classes; loosely coupled and also greatly facilitates I/O operations.; In a client/server environment, this mechanism facilitates the access; to any kind of object in //root stores running on different processes. A TFolder is created by invoking the TFolder constructor. It is placed; inside an existing folder via the TFolder::AddFolder method.; One can search for a folder or an object in a folder using the FindObject; method. FindObject analyses the string passed as its argument and searches; in the hierarchy until it finds an object or folder matching the name. When a folder is deleted, its reference from the parent folder and; possible other folders is deleted. If a folder has been declared the owner of its objects/folders via; TFolder::SetOwner, then th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TFolder.cxx:1160,efficient,efficient,1160,core/base/src/TFolder.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TFolder.cxx,1,['efficient'],['efficient']
Energy Efficiency,"ICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; ///; /// \class TQpResidual; ///; /// The Residuals class calculates and stores the quantities that appear; /// on the right-hand side of the linear systems that arise at each; /// interior-point iteration. These residuals can be partitioned into; /// two fundamental categories: the components arising from the linear; /// equations in the KKT conditions, and the components arising from the; /// complementarity conditions.; ///; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpResidual.cxx:1586,ENERGY,ENERGY,1586,math/quadp/src/TQpResidual.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpResidual.cxx,1,['ENERGY'],['ENERGY']
Energy Efficiency,"IS PROPERTY OF BURKHARD BUROW. IF YOU ARE USING THIS FILE YOU; SHOULD ALSO HAVE ACCESS TO CFORTRAN.DOC WHICH PROVIDES TERMS FOR USING,; MODIFYING, COPYING AND DISTRIBUTING THE CFORTRAN.H PACKAGE.; */; /* The following modifications were made by the authors of CFITSIO or by me.; * They are flagged below with CFITSIO, the author's initials, or KMCCARTY.; * PDW = Peter Wilson; * DM = Doug Mink; * LEB = Lee E Brotzman; * MR = Martin Reinecke; * WDP = William D Pence; * -- Kevin McCarty, for Debian (19 Dec. 2005) */; /*******; Modifications:; Oct 1997: Changed symbol name extname to appendus (PDW/HSTX); (Conflicted with a common variable name in FTOOLS); Nov 1997: If g77Fortran defined, also define f2cFortran (PDW/HSTX); Feb 1998: Let VMS see the NUM_ELEMS code. Lets programs treat; single strings as vectors with single elements; Nov 1999: If macintoxh defined, also define f2cfortran (for Mac OS-X); Apr 2000: If WIN32 defined, also define PowerStationFortran and; VISUAL_CPLUSPLUS (Visual C++); Jun 2000: If __GNUC__ and linux defined, also define f2cFortran; (linux/gcc environment detection); Apr 2002: If __CYGWIN__ is defined, also define f2cFortran; Nov 2002: If __APPLE__ defined, also define f2cfortran (for Mac OS-X). Nov 2003: If __INTEL_COMPILER or INTEL_COMPILER defined, also define; f2cFortran (KMCCARTY); Dec 2005: If f2cFortran is defined, enforce REAL functions in FORTRAN; returning ""double"" in C. This was one of the items on; Burkhard's TODO list. (KMCCARTY); Dec 2005: Modifications to support 8-byte integers. (MR); USE AT YOUR OWN RISK!; Feb 2006 Added logic to typedef the symbol 'LONGLONG' to an appropriate; intrinsic 8-byte integer datatype (WDP); Apr 2006: Modifications to support gfortran (and g77 with -fno-f2c flag); since by default it returns ""float"" for FORTRAN REAL function.; (KMCCARTY); May 2008: Revert commenting out of ""extern"" in COMMON_BLOCK_DEF macro.; Add braces around do-nothing "";"" in 3 empty while blocks to; get rid of compiler warnings. Thank",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:962,Power,PowerStationFortran,962,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['Power'],['PowerStationFortran']
Energy Efficiency,"Implementations *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoam; \ingroup TMVA. Implementation of PDEFoam. The PDEFoam method is an extension of the PDERS method, which uses; self-adapting binning to divide the multi-dimensional phase space; in a finite number of hyper-rectangles (boxes). For a given number of boxes, the binning algorithm adjusts the size; and position of the boxes inside the multidimensional phase space,; minimizing the variance of the signal and background densities inside; the boxes. The binned density information is stored in binary trees,; allowing for a very fast and memory-efficient classification of; events. The implementation of the PDEFoam is based on the monte-carlo; integration package TFoam included in the analysis package ROOT. The class TMVA::PDEFoam defines the default interface for the; PDEFoam variants:. - PDEFoamEvent; - PDEFoamDiscriminant; - PDEFoamTarget; - PDEFoamMultiTarget; - PDEFoamDecisionTree. Per default PDEFoam stores in the cells the number of events (event; weights) and therefore acts as an event density estimator.; However, the above listed derived classes override this behaviour; to implement certain PDEFoam variations. In order to use PDEFoam the user has to set the density estimator; of the type TMVA::PDEFoamDensityBase, which is used to during the foam; build-up. The default PDEFoam should be used with; PDEFoamEventDensity.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx:1530,efficient,efficient,1530,tmva/tmva/src/PDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx,1,['efficient'],['efficient']
Energy Efficiency,"L value palette is used.; /// if ncolors = 58 and colors=0, a Cubehelix palette is used; /// (Cf. Dave Green's ""cubehelix"" colour scheme at http://www.mrao.cam.ac.uk/~dag/CUBEHELIX/); /// if ncolors = 59 and colors=0, a Green Red Violet palette is used.; /// if ncolors = 60 and colors=0, a Blue Red Yellow palette is used.; /// if ncolors = 61 and colors=0, an Ocean palette is used.; /// if ncolors = 62 and colors=0, a Color Printable On Grey palette is used.; /// if ncolors = 63 and colors=0, an Alpine palette is used.; /// if ncolors = 64 and colors=0, an Aquamarine palette is used.; /// if ncolors = 65 and colors=0, an Army palette is used.; /// if ncolors = 66 and colors=0, an Atlantic palette is used.; /// if ncolors = 67 and colors=0, an Aurora palette is used.; /// if ncolors = 68 and colors=0, an Avocado palette is used.; /// if ncolors = 69 and colors=0, a Beach palette is used.; /// if ncolors = 70 and colors=0, a Black Body palette is used.; /// if ncolors = 71 and colors=0, a Blue Green Yellow palette is used.; /// if ncolors = 72 and colors=0, a Brown Cyan palette is used.; /// if ncolors = 73 and colors=0, a CMYK palette is used.; /// if ncolors = 74 and colors=0, a Candy palette is used.; /// if ncolors = 75 and colors=0, a Cherry palette is used.; /// if ncolors = 76 and colors=0, a Coffee palette is used.; /// if ncolors = 77 and colors=0, a Dark Rain Bow palette is used.; /// if ncolors = 78 and colors=0, a Dark Terrain palette is used.; /// if ncolors = 79 and colors=0, a Fall palette is used.; /// if ncolors = 80 and colors=0, a Fruit Punch palette is used.; /// if ncolors = 81 and colors=0, a Fuchsia palette is used.; /// if ncolors = 82 and colors=0, a Grey Yellow palette is used.; /// if ncolors = 83 and colors=0, a Green Brown Terrain palette is used.; /// if ncolors = 84 and colors=0, a Green Pink palette is used.; /// if ncolors = 85 and colors=0, an Island palette is used.; /// if ncolors = 86 and colors=0, a Lake palette is used.; /// if n",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:2787,Green,Green,2787,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,1,['Green'],['Green']
Energy Efficiency,"LVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This pass interleaves around sext/zext/trunc instructions. MVE does not have; // a single sext/zext or trunc instruction that takes the bottom half of a; // vector and extends to a full width, like NEON has with MOVL. Instead it is; // expected that this happens through top/bottom instructions. So the MVE; // equivalent VMOVLT/B instructions take either the even or odd elements of the; // input and extend them to the larger type, producing a vector with half the; // number of elements each of double the bitwidth. As there is no simple; // instruction, we often have to turn sext/zext/trunc into a series of lane; // moves (or stack loads/stores, which we do not do yet).; //; // This pass takes vector code that starts at truncs, looks for interconnected; // blobs of operations that end with sext/zext (or constants/splats) of the; // form:; // %sa = sext v8i16 %a to v8i32; // %sb = sext v8i16 %b to v8i32; // %add = add v8i32 %sa, %sb; // %r = trunc %add to v8i16; // And adds shuffles to allow the use of VMOVL/VMOVN instrctions:; // %sha = shuffle v8i16 %a, undef, <0, 2, 4, 6, 1, 3, 5, 7>; // %sa = sext v8i16 %sha to v8i32; // %shb = shuffle v8i16 %b, undef, <0, 2, 4, 6, 1, 3, 5, 7>; // %sb = sext v8i16 %shb to v8i32; // %add = add v8i32 %sa, %sb; // %r = trunc %add to v8i16; // %shr = shuffle v8i16 %r, undef, <0, 4, 1, 5, 2, 6, 3, 7>; // Which can then be split and lowered to MVE instructions efficiently:; // %sa_b = VMOVLB.s16 %a; // %sa_t = VMOVLT.s16 %a; // %sb_b = VMOVLB.s16 %b; // %sb_t = VMOVLT.s16 %b; // %add_b = VADD.i32 %sa_b, %sb_b; // %add_t = VADD.i32 %sa_t, %sb_t; // %r = VMOVNT.i16 %add_b, %add_t; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVELaneInterleavingPass.cpp:1795,efficient,efficiently,1795,interpreter/llvm-project/llvm/lib/Target/ARM/MVELaneInterleavingPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVELaneInterleavingPass.cpp,1,['efficient'],['efficiently']
Energy Efficiency,"Likelihood offsetting mode. Can be either:; * <table>; * <tr><th> Mode <th> Description; * <tr><td> **none** - *default* <td> No offsetting.; * <tr><td> **initial** <td> Offset likelihood by initial value (so that starting value of FCN in minuit is zero).; * This can improve numeric stability in simultaneous fits with components with large likelihood values.; * <tr><td> **bin** <td> Offset likelihood bin-by-bin with a template histogram model based on the obersved data.; * This results in per-bin values that are all in the same order of magnitude, which reduces precision loss in the sum,; * which can drastically improve numeric stability.; * Furthermore, \f$2\cdot \text{NLL}\f$ defined like this is approximately chi-square distributed, allowing for goodness-of-fit tests.; * </table>; * <tr><td> `IntegrateBins(double precision)` <td> In binned fits, integrate the PDF over the bins instead of using the probability density at the bin centre.; * This can reduce the bias observed when fitting functions with high curvature to binned data.; * - precision > 0: Activate bin integration everywhere. Use precision between 0.01 and 1.E-6, depending on binning.; * Note that a low precision such as 0.01 might yield identical results to 1.E-4, since the integrator might reach 1.E-4 already in its first; * integration step. If lower precision is desired (more speed), a RooBinSamplingPdf has to be created manually, and its integrator; * has to be manipulated directly.; * - precision = 0: Activate bin integration only for continuous PDFs fit to a RooDataHist.; * - precision < 0: Deactivate.; * \see RooBinSamplingPdf; * <tr><td> `ModularL(bool flag)` <td> Enable or disable modular likelihoods, which will become the default in a future release.; * This does not change any user-facing code, but only enables a different likelihood class in the back-end. Note that this; * should be set to true for parallel minimization of likelihoods!; * Note that it is currently not recommended to use Mod",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:9189,reduce,reduce,9189,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['reduce'],['reduce']
Energy Efficiency,"Partitioning.h ---------------------------------------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements BalancedPartitioning, a recursive balanced graph; // partitioning algorithm.; //; // The algorithm is used to find an ordering of FunctionNodes while optimizing; // a specified objective. The algorithm uses recursive bisection; it starts; // with a collection of unordered FunctionNodes and tries to split them into; // two sets (buckets) of equal cardinality. Each bisection step is comprised of; // iterations that greedily swap the FunctionNodes between the two buckets while; // there is an improvement of the objective. Once the process converges, the; // problem is divided into two sub-problems of half the size, which are; // recursively applied for the two buckets. The final ordering of the; // FunctionNodes is obtained by concatenating the two (recursively computed); // orderings.; //; // In order to speed up the computation, we limit the depth of the recursive; // tree by a specified constant (SplitDepth) and apply at most a constant; // number of greedy iterations per split (IterationsPerSplit). The worst-case; // time complexity of the implementation is bounded by O(M*log^2 N), where; // N is the number of FunctionNodes and M is the number of; // FunctionNode-UtilityNode edges; (assuming that any collection of D; // FunctionNodes contains O(D) UtilityNodes). Notice that the two different; // recursive sub-problems are independent and thus can be efficiently processed; // in parallel.; //; // Reference:; // * Optimizing Function Layout for Mobile Applications,; // https://arxiv.org/abs/2211.09285; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BalancedPartitioning.h:1777,efficient,efficiently,1777,interpreter/llvm-project/llvm/include/llvm/Support/BalancedPartitioning.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/BalancedPartitioning.h,1,['efficient'],['efficiently']
Energy Efficiency,"R""(; <html>; <head>; <meta charset='utf-8'/>; <style>; span.d { color: red; }; span.u { color: #cc00cc; }; span.i { color: green; }; span.m { font-weight: bold; }; span { font-weight: normal; color: black; }; div.code {; width: 48%;; height: 98%;; overflow: scroll;; float: left;; padding: 0 0 0.5% 0.5%;; border: solid 2px LightGrey;; border-radius: 5px;; }; </style>; </head>; <script type='text/javascript'>; highlightStack = []; function clearHighlight() {; while (highlightStack.length) {; var [l, r] = highlightStack.pop(); document.getElementById(l).style.backgroundColor = 'inherit'; if (r[1] != '-'); document.getElementById(r).style.backgroundColor = 'inherit'; }; }; function highlight(event) {; var id = event.target['id']; doHighlight(id); }; function doHighlight(id) {; clearHighlight(); source = document.getElementById(id); if (!source.attributes['tid']); return; var mapped = source; while (mapped && mapped.parentElement && mapped.attributes['tid'].value.substr(1) === '-1'); mapped = mapped.parentElement; var tid = null, target = null; if (mapped) {; tid = mapped.attributes['tid'].value; target = document.getElementById(tid); }; if (source.parentElement && source.parentElement.classList.contains('code')); return; source.style.backgroundColor = 'lightgrey'; source.scrollIntoView(); if (target) {; if (mapped === source); target.style.backgroundColor = 'lightgrey'; target.scrollIntoView(); }; highlightStack.push([id, tid]); location.hash = '#' + id; }; function scrollToBoth() {; doHighlight(location.hash.substr(1)); }; function changed(elem) {; return elem.classList.length == 0; }; function nextChangedNode(prefix, increment, number) {; do {; number += increment; var elem = document.getElementById(prefix + number); } while(elem && !changed(elem)); return elem ? number : null; }; function handleKey(e) {; var down = e.code === ""KeyJ""; var up = e.code === ""KeyK""; if (!down && !up); return; var id = highlightStack[0] ? highlightStack[0][0] : 'R0'; var oldelem = document.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-diff/ClangDiff.cpp:123,green,green,123,interpreter/llvm-project/clang/tools/clang-diff/ClangDiff.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-diff/ClangDiff.cpp,1,['green'],['green']
Energy Efficiency,"R""(___; _Please read [tips for efficient and successful posting](https://root-forum.cern.ch/t/tips-for-efficient-and-successful-posting/28292) and [posting code](https://root-forum.cern.ch/t/posting-code-read-this-first/28293)_. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; )""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx:31,efficient,efficient,31,core/base/src/TApplication.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx,2,['efficient'],"['efficient', 'efficient-and-successful-posting']"
Energy Efficiency,"R""<<<(; <style type=""text/css"">; body { color:#000000; background-color:#ffffff }; body { font-family:Helvetica, sans-serif; font-size:10pt }; h1 { font-size:14pt }; .FileName { margin-top: 5px; margin-bottom: 5px; display: inline; }; .FileNav { margin-left: 5px; margin-right: 5px; display: inline; }; .FileNav a { text-decoration:none; font-size: larger; }; .divider { margin-top: 30px; margin-bottom: 30px; height: 15px; }; .divider { background-color: gray; }; .code { border-collapse:collapse; width:100%; }; .code { font-family: ""Monospace"", monospace; font-size:10pt }; .code { line-height: 1.2em }; .comment { color: green; font-style: oblique }; .keyword { color: blue }; .string_literal { color: red }; .directive { color: darkmagenta }. /* Macros and variables could have pop-up notes hidden by default.; - Macro pop-up: expansion of the macro; - Variable pop-up: value (table) of the variable */; .macro_popup, .variable_popup { display: none; }. /* Pop-up appears on mouse-hover event. */; .macro:hover .macro_popup, .variable:hover .variable_popup {; display: block;; padding: 2px;; -webkit-border-radius:5px;; -webkit-box-shadow:1px 1px 7px #000;; border-radius:5px;; box-shadow:1px 1px 7px #000;; position: absolute;; top: -1em;; left:10em;; z-index: 1; }. .macro_popup {; border: 2px solid red;; background-color:#FFF0F0;; font-weight: normal;; }. .variable_popup {; border: 2px solid blue;; background-color:#F0F0FF;; font-weight: bold;; font-family: Helvetica, sans-serif;; font-size: 9pt;; }. /* Pop-up notes needs a relative position as a base where they pops up. */; .macro, .variable {; background-color: PaleGoldenRod;; position: relative;; }; .macro { color: DarkMagenta; }. #tooltiphint {; position: fixed;; width: 50em;; margin-left: -25em;; left: 50%;; padding: 10px;; border: 1px solid #b0b0b0;; border-radius: 2px;; box-shadow: 1px 1px 7px black;; background-color: #c0c0c0;; z-index: 2;; }. .num { width:2.5em; padding-right:2ex; background-color:#eeeeee }; .num { text-",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp:625,green,green,625,interpreter/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/HTMLRewrite.cpp,1,['green'],['green']
Energy Efficiency,"R""cpp(; #include <Math/CladDerivator.h>; #include ""TMath.h""; double cube(double x){ return TMath::Power(x,3);})cpp""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/CladDerivatorTests.cxx:98,Power,Power,98,math/mathcore/test/CladDerivatorTests.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/CladDerivatorTests.cxx,1,['Power'],['Power']
Energy Efficiency,"R""cpp(; #include <Math/CladDerivator.h>; #include ""TMath.h""; double cube2(double x){ return TMath::Power(x,3);})cpp""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/CladDerivatorTests.cxx:99,Power,Power,99,math/mathcore/test/CladDerivatorTests.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/CladDerivatorTests.cxx,1,['Power'],['Power']
Energy Efficiency,"R""cpp(; #include <Math/CladDerivator.h>; #include ""TMath.h""; double powneg(double x,double y){ return TMath::Power(x,y);})cpp""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/CladDerivatorTests.cxx:109,Power,Power,109,math/mathcore/test/CladDerivatorTests.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/CladDerivatorTests.cxx,1,['Power'],['Power']
Energy Efficiency,"R""cpp(; #include <Math/CladDerivator.h>; #include ""TMath.h""; double powneg2(double x,double y){ return TMath::Power(x,y);})cpp""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/CladDerivatorTests.cxx:110,Power,Power,110,math/mathcore/test/CladDerivatorTests.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/CladDerivatorTests.cxx,1,['Power'],['Power']
Energy Efficiency,"R. These; /// need 2*size length to store real and imaginary coefficients; ///; /// ### Transform methods; ///; /// Goal: to analyse experimental data using orthogonal transforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac; M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac; M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac; M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example - script Transform.c:; ///; /// \image html spectrumtransform_transform_image002.jpg Fig. 1 Original gamma-ray spectrum; /// \image html spectrumtransform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform; ///; /// #### Script:; /// Example to illustrate Transform function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Transform.C`; ///; /// ~~~ {.cpp}; /// #include <TSpectrum>; /// #include <TSpectrumTransform>; /// void Transform() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1569,adapt,adaptive,1569,hist/spectrum/src/TSpectrumTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx,1,['adapt'],['adaptive']
Energy Efficiency,"RMergeableValue stores the result of the RDataFrame action and has a `Merge`; method to allow the aggregation of information coming from another similar; result into the current. A mergeable value can be retrieved from an RResultPtr through the; [GetMergeableValue]; (namespaceROOT_1_1Detail_1_1RDF.html#a8b3a9c7b416826acc952d78a56d14ecb) free; function and a sequence of mergeables can be merged together with the helper; function [MergeValues]; (namespaceROOT_1_1Detail_1_1RDF.html#af16fefbe2d120983123ddf8a1e137277).; All the classes and functions involved are inside the `ROOT::Detail::RDF`; namespace. In a nutshell:; ~~~{.cpp}; using namespace ROOT::Detail::RDF;; ROOT::RDataFrame d(""myTree"", ""file_*.root"");; auto h1 = d.Histo1D(""Branch_A"");; auto h2 = d.Histo1D(""Branch_A"");. // Retrieve mergeables from the `RResultPtr`s; auto mergeableh1 = GetMergeableValue(h1);; auto mergeableh2 = GetMergeableValue(h2);. // Merge the values and get another mergeable back; auto mergedptr = MergeValues(std::move(mergeableh1), std::move(mergeableh2));. // Retrieve the merged TH1D object; const auto &mergedhisto = mergedptr->GetValue();; ~~~. Though this snippet can run on a single thread of a single machine, it is; straightforward to generalize it to a distributed case, e.g. where `mergeableh1`; and `mergeableh2` are created on separate machines and sent to a `reduce`; process where the `MergeValues` function is called. The final user would then; just be given the final merged result coming from `mergedptr->GetValue`. RMergeableValue is the base class for all the different specializations that may; be needed according to the peculiarities of the result types. The following; subclasses, their names hinting at the action operation of the result, are; currently available:. - RMergeableCount; - RMergeableFill, responsible for the following actions:; - Graph; - Histo{1,2,3}D; - Profile{1,2}D; - Stats; - RMergeableMax; - RMergeableMean; - RMergeableMin; - RMergeableStdDev; - RMergeableSum; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RMergeableValue.hxx:1955,reduce,reduce,1955,tree/dataframe/inc/ROOT/RDF/RMergeableValue.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RMergeableValue.hxx,1,['reduce'],['reduce']
Energy Efficiency,"ROOT::RDF::RNode:; ~~~{.cpp}; // a function that conditionally adds a Range to an RDataFrame node.; RNode MaybeAddRange(RNode df, bool mustAddRange); {; return mustAddRange ? df.Range(1) : df;; }; // use as :; ROOT::RDataFrame df(10);; auto maybeRangedDF = MaybeAddRange(df, true);; ~~~. The conversion to ROOT::RDF::RNode is cheap, but it will introduce an extra virtual call during the RDataFrame event; loop (in most cases, the resulting performance impact should be negligible). Python users can perform the conversion with the helper function `ROOT.RDF.AsRNode`. \anchor RDFCollections; ### Storing RDataFrame objects in collections. ROOT::RDF::RNode also makes it simple to store RDataFrame nodes in collections, e.g. a `std::vector<RNode>` or a `std::map<std::string, RNode>`:. ~~~{.cpp}; std::vector<ROOT::RDF::RNode> dfs;; dfs.emplace_back(ROOT::RDataFrame(10));; dfs.emplace_back(dfs[0].Define(""x"", ""42.f""));; ~~~. \anchor callbacks; ### Executing callbacks every N events; It's possible to schedule execution of arbitrary functions (callbacks) during the event loop.; Callbacks can be used e.g. to inspect partial results of the analysis while the event loop is running,; drawing a partially-filled histogram every time a certain number of new entries is processed, or; displaying a progress bar while the event loop runs. For example one can draw an up-to-date version of a result histogram every 100 entries like this:; ~~~{.cpp}; auto h = df.Histo1D(""x"");; TCanvas c(""c"",""x hist"");; h.OnPartialResult(100, [&c](TH1D &h_) { c.cd(); h_.Draw(); c.Update(); });; // event loop runs here, this final `Draw` is executed after the event loop is finished; h->Draw();; ~~~. Callbacks are registered to a ROOT::RDF::RResultPtr and must be callables that takes a reference to the result type as argument; and return nothing. RDataFrame will invoke registered callbacks passing partial action results as arguments to them; (e.g. a histogram filled with a part of the selected events). Read more on R",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:61970,schedul,schedule,61970,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['schedul'],['schedule']
Energy Efficiency,"Set saves every event, it allows for fits with highest precision. With a large; amount of data, however, it could be beneficial to represent them in binned form,; i.e., RooDataHist. Binning the data will incur a loss of information, though.; RooDataHist on the other hand may suffer from the curse of dimensionality if a high-dimensional; problem with a lot of bins on each axis is tackled. ### Inspecting a dataset; Inspect a dataset using Print() with the ""verbose"" option:; ```; dataset->Print(""V"");; dataset->get(0)->Print(""V"");; dataset->get(1)->Print(""V"");; ...; ```. ### Plotting data.; See RooAbsData::plotOn(). ### Storage strategy; There are two storage backends:; - RooVectorDataStore (default): std::vectors in memory. They are fast, but they; cannot be serialised if the dataset exceeds a size of 1 Gb; - RooTreeDataStore: Uses a TTree, which can be file backed if a file is opened; before creating the dataset. This significantly reduces the memory pressure, as the; baskets of the tree can be written to a file, and only the basket that's currently; being read stays in RAM.; - Enable tree-backed storage similar to this:; ```; TFile outputFile(""filename.root"", ""RECREATE"");; RooAbsData::setDefaultStorageType(RooAbsData::Tree);; RooDataSet mydata(...);; ```; - Or convert an existing memory-backed data storage:; ```; RooDataSet mydata(...);. TFile outputFile(""filename.root"", ""RECREATE"");; mydata.convertToTreeStore();; ```. For the inverse conversion, see `RooAbsData::convertToVectorStore()`. ### Creating a dataset using RDataFrame; \see RooAbsDataHelper, rf408_RDataFrameToRooFit.C. ### Uniquely identifying RooDataSet objects. \warning Before v6.28, it was ensured that no RooDataSet objects on the heap; were located at an address that had already been used for a RooDataSet before.; With v6.28, this is not guaranteed anymore. Hence, if your code uses pointer; comparisons to uniquely identify RooDataSet instances, please consider using; the new `RooAbsData::uniqueId()`. **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:1971,reduce,reduces,1971,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,1,['reduce'],['reduces']
Energy Efficiency,"Status; /// For example, if you have a Tree with several hundred branches, and you; /// are interested only by branches named ""a"" and ""b"", do; /// ~~~ {.cpp}; /// mytree.SetBranchStatus(""*"",0); //disable all branches; /// mytree.SetBranchStatus(""a"",1);; /// mytree.SetBranchStatus(""b"",1);; /// ~~~; /// when calling mytree.GetEntry(i); only branches ""a"" and ""b"" will be read.; ///; /// __WARNING!!__; /// If your Tree has been created in split mode with a parent branch ""parent."",; /// ~~~ {.cpp}; /// mytree.SetBranchStatus(""parent"",1);; /// ~~~; /// will not activate the sub-branches of ""parent"". You should do:; /// ~~~ {.cpp}; /// mytree.SetBranchStatus(""parent*"",1);; /// ~~~; /// Without the trailing dot in the branch creation you have no choice but to; /// call SetBranchStatus explicitly for each of the sub branches.; ///; /// An alternative is to call directly; /// ~~~ {.cpp}; /// brancha.GetEntry(i); /// branchb.GetEntry(i);; /// ~~~; /// ## IMPORTANT NOTE; ///; /// By default, GetEntry reuses the space allocated by the previous object; /// for each branch. You can force the previous object to be automatically; /// deleted if you call mybranch.SetAutoDelete(true) (default is false).; ///; /// Example:; ///; /// Consider the example in $ROOTSYS/test/Event.h; /// The top level branch in the tree T is declared with:; /// ~~~ {.cpp}; /// Event *event = 0; //event must be null or point to a valid object; /// //it must be initialized; /// T.SetBranchAddress(""event"",&event);; /// ~~~; /// When reading the Tree, one can choose one of these 3 options:; ///; /// ## OPTION 1; ///; /// ~~~ {.cpp}; /// for (Long64_t i=0;i<nentries;i++) {; /// T.GetEntry(i);; /// // the object event has been filled at this point; /// }; /// ~~~; /// The default (recommended). At the first entry an object of the class; /// Event will be created and pointed by event. At the following entries,; /// event will be overwritten by the new data. All internal members that are; /// TObject* are automatical",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1590,allocate,allocated,1590,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['allocate'],['allocated']
Energy Efficiency,"Style->SetPalette(...);; ~~~. This function has two parameters: the number of colors in the palette and an; array of containing the indices of colors in the palette. The following small; example demonstrates how to define and use the color palette:. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",0,0,600,400);; TF2 *f1 = new TF2(""f1"",""0.1+(1-(x-2)*(x-2))*(1-(y-2)*(y-2))"",1,3,1,3);; Int_t palette[5];; palette[0] = 15;; palette[1] = 20;; palette[2] = 23;; palette[3] = 30;; palette[4] = 32;; gStyle->SetPalette(5,palette);; f1->Draw(""colz"");; return c1;; }; End_Macro. To define more a complex palette with a continuous gradient of color, one; should use the static function `TColor::CreateGradientColorTable()`.; The following example demonstrates how to proceed:. Begin_Macro(source); {; auto c2 = new TCanvas(""c2"",""c2"",0,0,600,400);; auto f2 = new TF2(""f2"",""0.1+(1-(x-2)*(x-2))*(1-(y-2)*(y-2))"",1,3,1,3);; const Int_t Number = 3;; Double_t Red[Number] = { 1.00, 0.00, 0.00};; Double_t Green[Number] = { 0.00, 1.00, 0.00};; Double_t Blue[Number] = { 1.00, 0.00, 1.00};; Double_t Length[Number] = { 0.00, 0.50, 1.00 };; Int_t nb=50;; TColor::CreateGradientColorTable(Number,Length,Red,Green,Blue,nb);; f2->SetContour(nb);; f2->SetLineWidth(1);; f2->SetLineColor(kBlack);; f2->Draw(""surf1z"");; return c2;; }; End_Macro. The function `TColor::CreateGradientColorTable()` automatically; calls `gStyle->SetPalette()`, so there is not need to add one. After a call to `TColor::CreateGradientColorTable()` it is sometimes; useful to store the newly create palette for further use. In particular, it is; recommended to do if one wants to switch between several user define palettes.; To store a palette in an array it is enough to do:. ~~~ {.cpp}; Int_t MyPalette[100];; Double_t Red[] = {0., 0.0, 1.0, 1.0, 1.0};; Double_t Green[] = {0., 0.0, 0.0, 1.0, 1.0};; Double_t Blue[] = {0., 1.0, 0.0, 0.0, 1.0};; Double_t Length[] = {0., .25, .50, .75, 1.0};; Int_t FI = TColor::CreateGradientColorTable(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:7182,Green,Green,7182,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,1,['Green'],['Green']
Energy Efficiency,"T_PARAM; // ps, &(ps->ps), sizeof(S2*), MEMBER_OF(1); // &(ps->ps), &(ps->ps->ps), sizeof(S2*), MEMBER_OF(1) | PTR_AND_OBJ; // &(ps->ps->ps), &(ps->ps->ps->ps), sizeof(S2*), PTR_AND_OBJ | TO | FROM; //; // map(to: ps->ps->ps->s.f[:22]); // ps, &(ps->ps), sizeof(S2*), TARGET_PARAM; // ps, &(ps->ps), sizeof(S2*), MEMBER_OF(1); // &(ps->ps), &(ps->ps->ps), sizeof(S2*), MEMBER_OF(1) | PTR_AND_OBJ; // &(ps->ps->ps), &(ps->ps->ps->s.f[0]), 22*sizeof(float), PTR_AND_OBJ | TO; //; // map(to: s.f[:22]) map(from: s.p[:33]); // &s, &(s.f[0]), 50*sizeof(float) + sizeof(struct S1) +; // sizeof(double*) (**), TARGET_PARAM; // &s, &(s.f[0]), 22*sizeof(float), MEMBER_OF(1) | TO; // &s, &(s.p), sizeof(double*), MEMBER_OF(1); // &(s.p), &(s.p[0]), 33*sizeof(double), MEMBER_OF(1) | PTR_AND_OBJ | FROM; // (*) allocate contiguous space needed to fit all mapped members even if; // we allocate space for members not mapped (in this example,; // s.f[22..49] and s.s are not mapped, yet we must allocate space for; // them as well because they fall between &s.f[0] and &s.p); //; // map(from: s.f[:22]) map(to: ps->p[:33]); // &s, &(s.f[0]), 22*sizeof(float), TARGET_PARAM | FROM; // ps, &(ps->p), sizeof(S2*), TARGET_PARAM; // ps, &(ps->p), sizeof(double*), MEMBER_OF(2) (*); // &(ps->p), &(ps->p[0]), 33*sizeof(double), MEMBER_OF(2) | PTR_AND_OBJ | TO; // (*) the struct this entry pertains to is the 2nd element in the list of; // arguments, hence MEMBER_OF(2); //; // map(from: s.f[:22], s.s) map(to: ps->p[:33]); // &s, &(s.f[0]), 50*sizeof(float) + sizeof(struct S1), TARGET_PARAM; // &s, &(s.f[0]), 22*sizeof(float), MEMBER_OF(1) | FROM; // &s, &(s.s), sizeof(struct S1), MEMBER_OF(1) | FROM; // ps, &(ps->p), sizeof(S2*), TARGET_PARAM; // ps, &(ps->p), sizeof(double*), MEMBER_OF(4) (*); // &(ps->p), &(ps->p[0]), 33*sizeof(double), MEMBER_OF(4) | PTR_AND_OBJ | TO; // (*) the struct this entry pertains to is the 4th element in the list; // of arguments, hence MEMBER_OF(4); // Track if the map informati",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:5402,allocate,allocate,5402,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['allocate'],['allocate']
Energy Efficiency,"_2, N3\f$, are the lengths of x and h fields; ///; /// - let us assume that we know the response and the output fields (spectra); /// of the above given system.; ///; /// - the deconvolution represents solution of the overdetermined system of; /// linear equations, i.e., the calculation of the field -x.; ///; /// - from numerical stability point of view the operation of deconvolution is; /// extremely critical (ill-posed problem) as well as time consuming operation.; ///; /// - the Gold deconvolution algorithm proves to work very well even for; /// 2-dimensional systems. Generalization of the algorithm for 2-dimensional; /// systems was presented in [1], and for multidimensional systems in [2].; ///; /// - for Gold deconvolution algorithm as well as for boosted deconvolution; /// algorithm we refer also to TSpectrum and TSpectrum2; ///; /// #### References:; ///; /// [1] M.Morhac, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo.: Efficient; /// one- and two-dimensional Gold deconvolution and its application to gamma-ray; /// spectra decomposition. NIM, A401 (1997) 385-408.; ///; /// [2] Morhac M., Matouoek V.,; /// Kliman J., Efficient algorithm of multidimensional deconvolution and its; /// application to nuclear data processing, Digital Signal Processing 13 (2003) 144.; ///; /// ### Example 1 - script Decon.c :; ///; /// response function (usually peak) should be shifted to the beginning of; /// the coordinate system (see Fig. 1); ///; /// \image html spectrum3_deconvolution_image003.jpg Fig. 1 Three-dimensional response spectrum; /// \image html spectrum3_deconvolution_image004.jpg Fig. 2 Three-dimensional input spectrum (before deconvolution); /// \image html spectrum3_deconvolution_image005.jpg Fig. 3 Spectrum from Fig. 2 after deconvolution (100 iterations); ///; /// #### Script:; ///; /// Example to illustrate the Gold deconvolution (class TSpectrum3).; /// To execute this example, do:; ///; /// `root > .x Decon3.C`; ///; /// ~~~ {.cpp}; /// #include <TSpectrum3",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:2036,Efficient,Efficient,2036,hist/spectrum/src/TSpectrum3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx,1,['Efficient'],['Efficient']
Energy Efficiency,"acement exists for it.; \ingroup Physics; Minimum Covariance Determinant Estimator - a Fast Algorithm; invented by Peter J.Rousseeuw and Katrien Van Dreissen; ""A Fast Algorithm for the Minimum covariance Determinant Estimator""; Technometrics, August 1999, Vol.41, NO.3. What are robust estimators?; ""An important property of an estimator is its robustness. An estimator; is called robust if it is insensitive to measurements that deviate; from the expected behaviour. There are 2 ways to treat such deviating; measurements: one may either try to recognise them and then remove; them from the data sample; or one may leave them in the sample, taking; care that they do not influence the estimate unduly. In both cases robust; estimators are needed...Robust procedures compensate for systematic errors; as much as possible, and indicate any situation in which a danger of not being; able to operate reliably is detected.""; R.Fruhwirth, M.Regler, R.K.Bock, H.Grote, D.Notz; ""Data Analysis Techniques for High-Energy Physics"", 2nd edition. What does this algorithm do?; It computes a highly robust estimator of multivariate location and scatter.; Then, it takes those estimates to compute robust distances of all the; data vectors. Those with large robust distances are considered outliers.; Robust distances can then be plotted for better visualization of the data. How does this algorithm do it?; The MCD objective is to find h observations(out of n) whose classical; covariance matrix has the lowest determinant. The MCD estimator of location; is then the average of those h points and the MCD estimate of scatter; is their covariance matrix. The minimum(and default) h = (n+nvariables+1)/2; so the algorithm is effective when less than (n+nvar+1)/2 variables are outliers.; The algorithm also allows for exact fit situations - that is, when h or more; observations lie on a hyperplane. Then the algorithm still yields the MCD location T; and scatter matrix S, the latter being singular as it should b",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx:1570,Energy,Energy,1570,math/physics/src/TRobustEstimator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TRobustEstimator.cxx,1,['Energy'],['Energy']
Energy Efficiency,"age structure. Speed and memory depends; on this rate, but not the image display itself; 0: no compression; 100: max compression; - Radio Flag: kTRUE the x/y radio of the displayed image is always; identical to the original image kFALSE the x and y size of the displayed; image depends on the size of the pad; - Palette: Defines the conversion from a pixel value to the; screen color. This class is used (in general by secondary inheritance); by some other classes (image display).; */; /** \class TImagePalette; \ingroup BasicGraphics. A class to define a conversion from pixel values to pixel color. A Palette is defined by some anchor points. Each anchor point has; a value between 0 and 1 and a color. An image has to be normalized; and the values between the anchor points are interpolated.; All member variables are public and can be directly manipulated.; In most cases the default operator will be used to create a; TImagePalette. In this case the member arrays have to be allocated; by an application and will be deleted in the destructor of this; class. We provide few predefined palettes:. - gHistImagePalette - palette used in TH2::Draw(""col""); - gWebImagePalette; The web palette is a set of 216 colors that will not dither or; shift on PCs or Macs. Browsers use this built-in palette when; they need to render colors on monitors with only 256 colors; (also called 8-bit color monitors).; The 6x6x6 web palette provides very quick color index lookup; and can be used for good quality conversion of images into; 2-D histograms.; - TImagePalette(Int_t ncolors, Int_t *colors); if ncolors <= 0 a default palette (see below) of 50 colors; is defined. if ncolors == 1 && colors == 0, then a Rainbow Palette is created. if ncolors > 50 and colors=0, the DeepSea palette is used.; (see TStyle::CreateGradientColorTable for more details). if ncolors > 0 and colors = 0, the default palette is used with a maximum of ncolors. The default palette defines:; - index 0->9 : grey colors from light to ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TAttImage.cxx:1664,allocate,allocated,1664,graf2d/graf/src/TAttImage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TAttImage.cxx,1,['allocate'],['allocated']
Energy Efficiency,"alse,; the time set to zero, and os set to 255, with no extra, name, or comment; fields. The gzip header is returned to the default state by deflateReset(). deflateSetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateInit2 OF((z_streamp strm,; int windowBits));. This is another version of inflateInit with an extra parameter. The; fields next_in, avail_in, zalloc, zfree and opaque must be initialized; before by the caller. The windowBits parameter is the base two logarithm of the maximum window; size (the size of the history buffer). It should be in the range 8..15 for; this version of the library. The default value is 15 if inflateInit is used; instead. windowBits must be greater than or equal to the windowBits value; provided to deflateInit2() while compressing, or it must be equal to 15 if; deflateInit2() was not used. If a compressed stream with a larger window; size is given as input, inflate() will return with the error code; Z_DATA_ERROR instead of trying to allocate a larger window. windowBits can also be -8..-15 for raw inflate. In this case, -windowBits; determines the window size. inflate() will then process raw deflate data,; not looking for a zlib or gzip header, not generating a check value, and not; looking for any check values for comparison at the end of the stream. This; is for use with other formats that use the deflate compressed data format; such as zip. Those formats provide their own check values. If a custom; format is developed using the raw deflate format for compressed data, it is; recommended that a check value such as an adler32 or a crc32 be applied to; the uncompressed data as is done in the zlib, gzip, and zip formats. For; most applications, the zlib format should be used as is. Note that comments; above on the use in deflateInit2() applies to the magnitude of windowBits. windowBits can also be greater than 15 for optional gzip decoding. Add; 32 to windo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:1979,allocate,allocate,1979,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['allocate'],['allocate']
Energy Efficiency,"alse,; the time set to zero, and os set to 255, with no extra, name, or comment; fields. The gzip header is returned to the default state by deflateReset(). deflateSetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateInit2 OF((z_streamp strm,; int windowBits));. This is another version of inflateInit with an extra parameter. The; fields next_in, avail_in, zalloc, zfree and opaque must be initialized; before by the caller. The windowBits parameter is the base two logarithm of the maximum window; size (the size of the history buffer). It should be in the range 8..15 for; this version of the library. The default value is 15 if inflateInit is used; instead. windowBits must be greater than or equal to the windowBits value; provided to deflateInit2() while compressing, or it must be equal to 15 if; deflateInit2() was not used. If a compressed stream with a larger window; size is given as input, inflate() will return with the error code; Z_DATA_ERROR instead of trying to allocate a larger window. windowBits can also be zero to request that inflate use the window size in; the zlib header of the compressed stream. windowBits can also be -8..-15 for raw inflate. In this case, -windowBits; determines the window size. inflate() will then process raw deflate data,; not looking for a zlib or gzip header, not generating a check value, and not; looking for any check values for comparison at the end of the stream. This; is for use with other formats that use the deflate compressed data format; such as zip. Those formats provide their own check values. If a custom; format is developed using the raw deflate format for compressed data, it is; recommended that a check value such as an adler32 or a crc32 be applied to; the uncompressed data as is done in the zlib, gzip, and zip formats. For; most applications, the zlib format should be used as is. Note that comments; above on the use in deflateInit2() appli",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1979,allocate,allocate,1979,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['allocate'],['allocate']
Energy Efficiency,"ame; /// <tr><td> `Range(double lo, double hi)` <td> Fit only data inside given range. A range named ""fit"" is created on the fly on all observables.; /// Multiple comma separated range names can be specified.; /// <tr><td> `NumCPU(int num)` <td> Parallelize NLL calculation on num CPUs; /// <tr><td> `Optimize(bool flag)` <td> Activate constant term optimization (on by default); /// <tr><td> `IntegrateBins()` <td> Integrate PDF within each bin. This sets the desired precision.; ///; /// <tr><th> <th> Options to control flow of fit procedure; /// <tr><td> `InitialHesse(bool flag)` <td> Flag controls if HESSE before MIGRAD as well, off by default; /// <tr><td> `Hesse(bool flag)` <td> Flag controls if HESSE is run after MIGRAD, on by default; /// <tr><td> `Minos(bool flag)` <td> Flag controls if MINOS is run after HESSE, on by default; /// <tr><td> `Minos(const RooArgSet& set)` <td> Only run MINOS on given subset of arguments; /// <tr><td> `Save(bool flag)` <td> Flag controls if RooFitResult object is produced and returned, off by default; /// <tr><td> `Strategy(Int_t flag)` <td> Set Minuit strategy (0 through 2, default is 1); ///; /// <tr><th> <th> Options to control informational output; /// <tr><td> `Verbose(bool flag)` <td> Flag controls if verbose output is printed (NLL, parameter changes during fit; /// <tr><td> `Timer(bool flag)` <td> Time CPU and wall clock consumption of fit steps, off by default; /// <tr><td> `PrintLevel(Int_t level)` <td> Set Minuit print level (-1 through 3, default is 1). At -1 all RooFit informational; /// messages are suppressed as well; /// <tr><td> `Warnings(bool flag)` <td> Enable or disable MINUIT warnings (enabled by default); /// <tr><td> `PrintEvalErrors(Int_t numErr)` <td> Control number of p.d.f evaluation errors printed per likelihood evaluation. A negative; /// value suppress output completely, a zero value will only print the error count per p.d.f component,; /// a positive value is will print details of each error up to numErr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:2975,consumption,consumption,2975,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['consumption'],['consumption']
Energy Efficiency,"anch the meaning of addr is as follows:; ///; /// If addr is zero, then we allocate a branch object; /// internally and the branch is the owner of the allocated; /// object, not the caller. However the caller may obtain; /// a pointer to the branch object with GetObject().; /// The pointer is reset to zero (nullptr) when the relevant; /// branch object is destroyed.; ///; /// Example:; /// ~~~ {.cpp}; /// branch->SetAddress(0);; /// Event* event = branch->GetObject();; /// ... Do some work.; /// ~~~; /// If addr is not zero, but the pointer addr points at is; /// zero, then we allocate a branch object and set the passed; /// pointer to point at the allocated object. The caller; /// owns the allocated object and is responsible for deleting; /// it when it is no longer needed.; ///; /// Example:; /// ~~~ {.cpp}; /// Event* event = 0;; /// branch->SetAddress(&event);; /// ... Do some work.; /// delete event;; /// event = 0;; /// ~~~; /// If addr is not zero and the pointer addr points at is; /// also not zero, then the caller has allocated a branch; /// object and is asking us to use it. The caller owns it; /// and must delete it when it is no longer needed.; ///; /// Example:; /// ~~~ {.cpp}; /// Event* event = new Event();; /// branch->SetAddress(&event);; /// ... Do some work.; /// delete event;; /// event = 0;; /// ~~~; /// These rules affect users of TTree::Branch(),; /// TTree::SetBranchAddress(), and TChain::SetBranchAddress(); /// as well because those routines call this one.; ///; /// An example of a tree with branches with objects allocated; /// and owned by us:; /// ~~~ {.cpp}; /// TFile* f1 = new TFile(""myfile_original.root"");; /// TTree* t1 = (TTree*) f->Get(""MyTree"");; /// TFile* f2 = new TFile(""myfile_copy.root"", ""recreate"");; /// TTree* t2 = t1->Clone(0);; /// for (Int_t i = 0; i < 10; ++i) {; /// t1->GetEntry(i);; /// t2->Fill();; /// }; /// t2->Write(); /// delete f2;; /// f2 = 0;; /// delete f1;; /// f1 = 0;; /// ~~~; /// An example of a branch with ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:1257,allocate,allocated,1257,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['allocate'],['allocated']
Energy Efficiency,"anslation(-0.2,0,0));; chamber->AddNode(wire_co, 2, new TGeoTranslation(0.2,0,0));; ~~~. The 2 nodes that we have created inside chamber will both point to a wire_co; object, but will be completely distinct : WIRE_CO_1 and WIRE_CO_2. We will; want now to place symmetrically 1000 chambers on a pad, following a pattern; of 20 rows and 50 columns. One way to do this will be to replicate our chamber; by positioning it 1000 times in different positions of the pad. Unfortunately,; this is far from being the optimal way of doing what we want.; Imagine that we would like to find out which of the 1000 chambers is containing; a (x,y,z) point defined in the pad reference. You will never have to do that,; since the modeller will take care of it for you, but let's guess what it has; to do. The most simple algorithm will just loop over all daughters, convert; the point from mother to local reference and check if the current chamber; contains the point or not. This might be efficient for pads with few chambers,; but definitely not for 1000. Fortunately the modeler is smarter than that and; create for each volume some optimization structures called voxels (see Voxelization); to minimize the penalty having too many daughters, but if you have 100 pads like; this in your geometry you will anyway loose a lot in your tracking performance. The way out when volumes can be arranged according to simple patterns is the; usage of divisions. We will describe them in detail later on. Let's think now; at a different situation : instead of 1000 chambers of the same type, we may; have several types of chambers. Let's say all chambers are cylindrical and have; a wire inside, but their dimensions are different. However, we would like all; to be represented by a single volume family, since they have the same properties.; */; /** \class TGeoVolumeMulti; \ingroup Geometry_classes. Volume families. A volume family is represented by the class TGeoVolumeMulti. It represents; a class of volumes having the ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVolume.cxx:9959,efficient,efficient,9959,geom/geom/src/TGeoVolume.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoVolume.cxx,1,['efficient'],['efficient']
Energy Efficiency,"aracters are written there,; terminated with a zero unless the length is greater than comm_max. When any; of extra, name, or comment are not Z_NULL and the respective field is not; present in the header, then that field is set to Z_NULL to signal its; absence. This allows the use of deflateSetHeader() with the returned; structure to duplicate the header. However if those fields are set to; allocated memory, then the application will need to save those pointers; elsewhere so that they can be eventually freed. If inflateGetHeader is not used, then the header information is simply; discarded. The header is always checked for validity, including the header; CRC if present. inflateReset() will reset the process to discard the header; information. The application would need to call inflateGetHeader() again to; retrieve the header from the next gzip stream. inflateGetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateBackInit OF((z_streamp strm, int windowBits,; unsigned char FAR *window));. Initialize the internal stream state for decompression using inflateBack(); calls. The fields zalloc, zfree and opaque in strm must be initialized; before the call. If zalloc and zfree are Z_NULL, then the default library-; derived memory allocation routines are used. windowBits is the base two; logarithm of the window size, in the range 8..15. window is a caller; supplied buffer of that size. Except for special applications where it is; assured that deflate was used with small window sizes, windowBits must be 15; and a 32K byte window must be supplied to be able to decompress general; deflate streams. See inflateBack() for the usage of these routines. inflateBackInit will return Z_OK on success, Z_STREAM_ERROR if any of; the parameters are invalid, Z_MEM_ERROR if the internal state could not be; allocated, or Z_VERSION_ERROR if the version of the library does not match; the version of the header file.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:3181,allocate,allocated,3181,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['allocate'],['allocated']
Energy Efficiency,"aracters are written there,; terminated with a zero unless the length is greater than comm_max. When; any of extra, name, or comment are not Z_NULL and the respective field is; not present in the header, then that field is set to Z_NULL to signal its; absence. This allows the use of deflateSetHeader() with the returned; structure to duplicate the header. However if those fields are set to; allocated memory, then the application will need to save those pointers; elsewhere so that they can be eventually freed. If inflateGetHeader is not used, then the header information is simply; discarded. The header is always checked for validity, including the header; CRC if present. inflateReset() will reset the process to discard the header; information. The application would need to call inflateGetHeader() again to; retrieve the header from the next gzip stream. inflateGetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateBackInit OF((z_streamp strm, int windowBits,; unsigned char FAR *window));. Initialize the internal stream state for decompression using inflateBack(); calls. The fields zalloc, zfree and opaque in strm must be initialized; before the call. If zalloc and zfree are Z_NULL, then the default library-; derived memory allocation routines are used. windowBits is the base two; logarithm of the window size, in the range 8..15. window is a caller; supplied buffer of that size. Except for special applications where it is; assured that deflate was used with small window sizes, windowBits must be 15; and a 32K byte window must be supplied to be able to decompress general; deflate streams. See inflateBack() for the usage of these routines. inflateBackInit will return Z_OK on success, Z_STREAM_ERROR if any of; the parameters are invalid, Z_MEM_ERROR if the internal state could not; be allocated, or Z_VERSION_ERROR if the version of the library does not; match the version of the header file.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:3170,allocate,allocated,3170,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['allocate'],['allocated']
Energy Efficiency,"ariable of type 'ReduceData' on the calling lane,; /// b. its lane_id,; /// c. an offset relative to the current lane_id to generate a; /// remote_lane_id. The remote lane contains the second; /// variable of type 'ReduceData' that is to be reduced.; /// d. an algorithm version parameter determining which reduction; /// algorithm to use.; ///; /// 'shuffleReduceFn' retrieves data from the remote lane using; /// efficient GPU shuffle intrinsics and reduces, using the; /// algorithm specified by the 4th parameter, the two operands; /// element-wise. The result is written to the first operand.; ///; /// Different reduction algorithms are implemented in different; /// runtime functions, all calling 'shuffleReduceFn' to perform; /// the essential reduction step. Therefore, based on the 4th; /// parameter, this function behaves slightly differently to; /// cooperate with the runtime to ensure correctness under; /// different circumstances.; ///; /// 'InterWarpCpyFn' is a pointer to a function that transfers; /// reduced variables across warps. It tunnels, through CUDA; /// shared memory, the thread-private data of type 'ReduceData'; /// from lane 0 of each warp to a lane in the first warp.; /// 4. Call the OpenMP runtime on the GPU to reduce across teams.; /// The last team writes the global reduced value to memory.; ///; /// ret = __kmpc_nvptx_teams_reduce_nowait(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn,; /// scratchpadCopyFn, loadAndReduceFn); ///; /// 'scratchpadCopyFn' is a helper that stores reduced; /// data from the team master to a scratchpad array in; /// global memory.; ///; /// 'loadAndReduceFn' is a helper that loads data from; /// the scratchpad array and reduces it with the input; /// operand.; ///; /// These compiler generated functions hide address; /// calculation and alignment information from the runtime.; /// 5. if ret == 1:; /// The team master of the last team stores the reduced; /// result to the globals in memory.; /// foo += reduceDat",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:3548,reduce,reduced,3548,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['reduce'],['reduced']
Energy Efficiency,"arithm of the window size; (the size of the history buffer). It should be in the range 8..15 for this; version of the library. Larger values of this parameter result in better; compression at the expense of memory usage. The default value is 15 if; deflateInit is used instead. windowBits can also be -8..-15 for raw deflate. In this case, -windowBits; determines the window size. deflate() will then generate raw deflate data; with no zlib header or trailer, and will not compute an adler32 check value. windowBits can also be greater than 15 for optional gzip encoding. Add; 16 to windowBits to write a simple gzip header and trailer around the; compressed data instead of a zlib wrapper. The gzip header will have no; file name, no extra data, no comment, no modification time (set to zero), no; header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but is; slow and reduces compression ratio; memLevel=9 uses maximum memory for; optimal speed. The default value is 8. See zconf.h for total memory usage; as a function of windowBits and memLevel. The strategy parameter is used to tune the compression algorithm. Use the; value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a; filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no; string match), or Z_RLE to limit match distances to one (run-length; encoding). Filtered data consists mostly of small values with a somewhat; random distribution. In this case, the compression algorithm is tuned to; compress them better. The effect of Z_FILTERED is to force more Huffman; coding and less string matching; it is somewhat intermediate between; Z_DEFAULT_STRATEGY and Z_HUFFMAN_ONLY. Z_RLE is designed to be almost as; fast as Z_HUFFMAN_ONLY, but give better compression for PN",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1907,allocate,allocated,1907,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['allocate'],['allocated']
Energy Efficiency,"arithm of the window size; (the size of the history buffer). It should be in the range 8..15 for this; version of the library. Larger values of this parameter result in better; compression at the expense of memory usage. The default value is 15 if; deflateInit is used instead. windowBits can also be -8..-15 for raw deflate. In this case, -windowBits; determines the window size. deflate() will then generate raw deflate data; with no zlib header or trailer, and will not compute an adler32 check value. windowBits can also be greater than 15 for optional gzip encoding. Add; 16 to windowBits to write a simple gzip header and trailer around the; compressed data instead of a zlib wrapper. The gzip header will have no; file name, no extra data, no comment, no modification time (set to zero),; no header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but; is slow and reduces compression ratio; memLevel=9 uses maximum memory; for optimal speed. The default value is 8. See zconf.h for total memory; usage as a function of windowBits and memLevel. The strategy parameter is used to tune the compression algorithm. Use the; value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a; filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no; string match), or Z_RLE to limit match distances to one (run-length; encoding). Filtered data consists mostly of small values with a somewhat; random distribution. In this case, the compression algorithm is tuned to; compress them better. The effect of Z_FILTERED is to force more Huffman; coding and less string matching; it is somewhat intermediate between; Z_DEFAULT and Z_HUFFMAN_ONLY. Z_RLE is designed to be almost as fast as; Z_HUFFMAN_ONLY, but give better compression for PNG image d",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:1907,allocate,allocated,1907,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['allocate'],['allocated']
Energy Efficiency,"as jpegtran normally does. The destination; * arrays are always written in normal scan order (top to bottom) because; * the virtual array manager expects this. The source arrays will be scanned; * in the corresponding order, which means multiple passes through the source; * arrays for most of the transforms. That could result in much thrashing; * if the image is larger than main memory.; *; * If cropping or trimming is involved, the destination arrays may be smaller; * than the source arrays. Note it is not possible to do horizontal flip; * in-place when a nonzero Y crop offset is specified, since we'd have to move; * data from one block row to another but the virtual array manager doesn't; * guarantee we can touch more than one row at a time. So in that case,; * we have to use a separate destination array.; *; * Some notes about the operating environment of the individual transform; * routines:; * 1. Both the source and destination virtual arrays are allocated from the; * source JPEG object, and therefore should be manipulated by calling the; * source's memory manager.; * 2. The destination's component count should be used. It may be smaller; * than the source's when forcing to grayscale.; * 3. Likewise the destination's sampling factors should be used. When; * forcing to grayscale the destination's sampling factors will be all 1,; * and we may as well take that as the effective iMCU size.; * 4. When ""trim"" is in effect, the destination's dimensions will be the; * trimmed values but the source's will be untrimmed.; * 5. When ""crop"" is in effect, the destination's dimensions will be the; * cropped values but the source's will be uncropped. Each transform; * routine is responsible for picking up source data starting at the; * correct X and Y offset for the crop region. (The X and Y offsets; * passed to the transform routines are measured in iMCU blocks of the; * destination.); * 6. All the routines assume that the source and destination buffers are; * padded out to a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:1583,allocate,allocated,1583,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,1,['allocate'],['allocated']
Energy Efficiency,"assManagerBase &PM) {; // PM.substitutePass(&MachineSchedulerID, &CustomSchedulerPassID);; // ...}; //; // The MachineScheduler pass is only responsible for choosing the regions to be; // scheduled. Targets can override the DAG builder and scheduler without; // replacing the pass as follows:; //; // ScheduleDAGInstrs *<Target>PassConfig::; // createMachineScheduler(MachineSchedContext *C) {; // return new CustomMachineScheduler(C);; // }; //; // The default scheduler, ScheduleDAGMILive, builds the DAG and drives list; // scheduling while updating the instruction stream, register pressure, and live; // intervals. Most targets don't need to override the DAG builder and list; // scheduler, but subtargets that require custom scheduling heuristics may; // plugin an alternate MachineSchedStrategy. The strategy is responsible for; // selecting the highest priority node from the list:; //; // ScheduleDAGInstrs *<Target>PassConfig::; // createMachineScheduler(MachineSchedContext *C) {; // return new ScheduleDAGMILive(C, CustomStrategy(C));; // }; //; // The DAG builder can also be customized in a sense by adding DAG mutations; // that will run after DAG building and before list scheduling. DAG mutations; // can adjust dependencies based on target-specific knowledge or add weak edges; // to aid heuristics:; //; // ScheduleDAGInstrs *<Target>PassConfig::; // createMachineScheduler(MachineSchedContext *C) {; // ScheduleDAGMI *DAG = createGenericSchedLive(C);; // DAG->addMutation(new CustomDAGMutation(...));; // return DAG;; // }; //; // A target that supports alternative schedulers can use the; // MachineSchedRegistry to allow command line selection. This can be done by; // implementing the following boilerplate:; //; // static ScheduleDAGInstrs *createCustomMachineSched(MachineSchedContext *C) {; // return new CustomMachineScheduler(C);; // }; // static MachineSchedRegistry; // SchedCustomRegistry(""custom"", ""Run my target's custom scheduler"",; // createCustomMachineSched);; //;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:1472,Schedul,ScheduleDAGInstrs,1472,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,3,"['Schedul', 'schedul']","['ScheduleDAGInstrs', 'ScheduleDAGMILive', 'scheduling']"
Energy Efficiency,"ated ASImage using ; * alt.ximage member. After that newly created ASImage could be used ; * in any transformations.; *********/; /****f* libAfterImage/picture2asimage(); * NAME; * picture2asimage(); * SYNOPSIS; * ASImage *picture2asimage (struct ASVisual *asv,; * Pixmap rgb, Pixmap a,; * int x, int y,; * unsigned int width,; * unsigned int height,; * unsigned long plane_mask,; * Bool keep_cache,; * unsigned int compression );; * INPUTS; * asv 		 - pointer to valid ASVisual structure; * rgb 		 - source Pixmap for red, green and blue channels; * a 		 - source Pixmap for the alpha channel; * x, y,; * width, height- rectangle on Pixmap to be encoded into ASImage.; * plane_mask - limits color planes to be copied from Pixmap.; * keep_cache - indicates if we should keep XImage, used to copy; * image data from the X server, and attached it to ; * 				 ximage member of resulting ASImage.; * compression - degree of compression of resulting ASImage.; * RETURN VALUE; * pointer to newly allocated ASImage, containing encoded data, on; * success. NULL on failure.; * DESCRIPTION; * picture2asimage will obtain XImage of the requested area of the; * X Pixmap, If alpha channel pixmap is supplied - it will be used to ; * encode ASImage's alpha channel. Alpha channel pixmap must be either; * 8 or 1 bit deep, and it must have the same dimentions as main Pixmap.; *********/; /****f* libAfterImage/pixmap2asimage(); * NAME; * pixmap2asimage(); * SYNOPSIS; * ASImage *pixmap2asimage ( struct ASVisual *asv, Pixmap p,; * int x, int y,; * unsigned int width,; * unsigned int height,; * unsigned long plane_mask,; * Bool keep_cache,; * unsigned int compression );; * INPUTS; * asv 		 - pointer to valid ASVisual structure; * p 		 - source Pixmap; * x, y,; * width, height- rectangle on Pixmap to be encoded into ASImage.; * plane_mask - limits color planes to be copied from Pixmap.; * keep_cache - indicates if we should keep XImage, used to copy; * image data from the X server, and attached it to ; * x",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h:4110,allocate,allocated,4110,graf2d/asimage/src/libAfterImage/ximage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h,1,['allocate'],['allocated']
Energy Efficiency,"ated for loop induction variables used by load/store; // instructions so that preferred addressing modes can be used.; //; // 1: DS/DQ form preparation, prepare the load/store instructions so that they; // can satisfy the DS/DQ form displacement requirements.; // Generically, this means transforming loops like this:; // for (int i = 0; i < n; ++i) {; // unsigned long x1 = *(unsigned long *)(p + i + 5);; // unsigned long x2 = *(unsigned long *)(p + i + 9);; // }; //; // to look like this:; //; // unsigned NewP = p + 5;; // for (int i = 0; i < n; ++i) {; // unsigned long x1 = *(unsigned long *)(i + NewP);; // unsigned long x2 = *(unsigned long *)(i + NewP + 4);; // }; //; // 2: D/DS form with update preparation, prepare the load/store instructions so; // that we can use update form to do pre-increment.; // Generically, this means transforming loops like this:; // for (int i = 0; i < n; ++i); // array[i] = c;; //; // to look like this:; //; // T *p = array[-1];; // for (int i = 0; i < n; ++i); // *++p = c;; //; // 3: common multiple chains for the load/stores with same offsets in the loop,; // so that we can reuse the offsets and reduce the register pressure in the; // loop. This transformation can also increase the loop ILP as now each chain; // uses its own loop induction add/addi. But this will increase the number of; // add/addi in the loop.; //; // Generically, this means transforming loops like this:; //; // char *p;; // A1 = p + base1; // A2 = p + base1 + offset; // B1 = p + base2; // B2 = p + base2 + offset; //; // for (int i = 0; i < n; i++); // unsigned long x1 = *(unsigned long *)(A1 + i);; // unsigned long x2 = *(unsigned long *)(A2 + i); // unsigned long x3 = *(unsigned long *)(B1 + i);; // unsigned long x4 = *(unsigned long *)(B2 + i);; // }; //; // to look like this:; //; // A1_new = p + base1 // chain 1; // B1_new = p + base2 // chain 2, now inside the loop, common offset is; // // reused.; //; // for (long long i = 0; i < n; i+=count) {; // unsigned lon",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp:1723,reduce,reduce,1723,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,1,['reduce'],['reduce']
Energy Efficiency,"ation:; //; // BC(It, K) = (It * (It - 1) * ... * (It - K + 1)) / 2^T / (K! / 2^T); //; // This formula is trivially equivalent to the previous formula. However,; // this formula can be implemented much more efficiently. The trick is that; // K! / 2^T is odd, and exact division by an odd number *is* safe in modular; // arithmetic. To do exact division in modular arithmetic, all we have; // to do is multiply by the inverse. Therefore, this step can be done at; // width W.; //; // The next issue is how to safely do the division by 2^T. The way this; // is done is by doing the multiplication step at a width of at least W + T; // bits. This way, the bottom W+T bits of the product are accurate. Then,; // when we perform the division by 2^T (which is equivalent to a right shift; // by T), the bottom W bits are accurate. Extra bits are okay; they'll get; // truncated out after the division by 2^T.; //; // In comparison to just directly using the first formula, this technique; // is much more efficient; using the first formula requires W * K bits,; // but this formula less than W + K bits. Also, the first formula requires; // a division step, whereas this formula only requires multiplies and shifts.; //; // It doesn't matter whether the subtraction step is done in the calculation; // width or the input iteration count's width; if the subtraction overflows,; // the result must be zero anyway. We prefer here to do it in the width of; // the induction variable because it helps a lot for certain cases; CodeGen; // isn't smart enough to ignore the overflow, which leads to much less; // efficient code if the width of the subtraction is wider than the native; // register width.; //; // (It's possible to not widen at all by pulling out factors of 2 before; // the multiplication; for example, K=2 can be calculated as; // It/2*(It+(It*INT_MIN/INT_MIN)+-1). However, it requires; // extra arithmetic, so it's not an obvious win, and it gets; // much more complicated for K > 3.); // Prote",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:1619,efficient,efficient,1619,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['efficient'],['efficient']
Energy Efficiency,"ation; * - Improved 32-bit viability; *; * Speed analysis methodology is explained here:; *; * https://fastcompression.blogspot.com/2019/03/presenting-xxh3.html; *; * In general, expect XXH3 to run about ~2x faster on large inputs and >3x; * faster on small ones compared to XXH64, though exact differences depend on; * the platform.; *; * The algorithm is portable: Like XXH32 and XXH64, it generates the same hash; * on all platforms.; *; * It benefits greatly from SIMD and 64-bit arithmetic, but does not require it.; *; * Almost all 32-bit and 64-bit targets that can run XXH32 smoothly can run; * XXH3 at competitive speeds, even if XXH64 runs slowly. Further details are; * explained in the implementation.; *; * Optimized implementations are provided for AVX512, AVX2, SSE2, NEON, POWER8,; * ZVector and scalar targets. This can be controlled with the XXH_VECTOR macro.; *; * XXH3 offers 2 variants, _64bits and _128bits.; * When only 64 bits are needed, prefer calling the _64bits variant, as it; * reduces the amount of mixing, resulting in faster speed on small inputs.; *; * It's also generally simpler to manipulate a scalar return type than a struct.; *; * The 128-bit version adds additional strength, but it is slightly slower.; *; * The XXH3 algorithm is still in development.; * The results it produces may still change in future versions.; *; * Results produced by v0.7.x are not comparable with results from v0.7.y.; * However, the API is completely stable, and it can safely be used for; * ephemeral data (local sessions).; *; * Avoid storing values in long-term storage until the algorithm is finalized.; * XXH3's return values will be officially finalized upon reaching v0.8.0.; *; * After which, return values of XXH3 and XXH128 will no longer change in; * future versions.; *; * The API supports one-shot hashing, streaming mode, and custom secrets.; */; /* XXH3_64bits():; * default 64-bit variant, using default secret and default seed of 0.; * It's the fastest variant. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1406,reduce,reduces,1406,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['reduce'],['reduces']
Energy Efficiency,"aw(); // runs second multi-thread event loop. // alternatively, with ROOT::RDF::RunGraphs, event loops for separate computation graphs can run concurrently; ROOT::RDF::RunGraphs({histo1, histo2});; histo1->Draw(); // results can then be used as usual; ~~~. ### Performance considerations. To obtain the maximum performance out of RDataFrame, make sure to avoid just-in-time compiled versions of transformations and actions if at all possible.; For instance, `Filter(""x > 0"")` requires just-in-time compilation of the corresponding C++ logic, while the equivalent `Filter([](float x) { return x > 0.; }, {""x""})` does not.; Similarly, `Histo1D(""x"")` requires just-in-time compilation after the type of `x` is retrieved from the dataset, while `Histo1D<float>(""x"")` does not; the latter spelling; should be preferred for performance-critical applications. Python applications cannot easily specify template parameters or pass C++ callables to RDataFrame.; See [Efficient analysis in Python](#python) for possible ways to speed up hot paths in this case. Just-in-time compilation happens once, right before starting an event loop. To reduce the runtime cost of this step, make sure to book all operations *for all RDataFrame computation graphs*; before the first event loop is triggered: just-in-time compilation will happen once for all code required to be generated up to that point, also across different computation graphs. Also make sure not to count the just-in-time compilation time (which happens once before the event loop and does not depend on the size of the dataset) as part of the event loop runtime (which scales with the size of the dataset). RDataFrame has an experimental logging feature that simplifies measuring the time spent in just-in-time compilation and in the event loop (as well as providing some more interesting information). See [Activating RDataFrame execution logs](\ref rdf-logging). ### Memory usage. There are two reasons why RDataFrame may consume more memory than expe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:52103,Efficient,Efficient,52103,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['Efficient'],['Efficient']
Energy Efficiency,"awn using iso-surfaces.|. \anchor HP29d; #### TF3 (implicit function). The supported option is:. | Option | Description |; |----------|-------------------------------------------------------------------|; | ""GL"" | Draw a TF3.|. \anchor HP29e; #### Parametric surfaces. `$ROOTSYS/tutorials/gl/glparametric.C` shows how to create parametric; equations and visualize the surface. \anchor HP29f; #### Interaction with the plots. All the interactions are implemented via standard methods; `DistancetoPrimitive()` and `ExecuteEvent()`. That's why all the; interactions with the OpenGL plots are possible only when the mouse cursor is; in the plot's area (the plot's area is the part of a the pad occupied by; gl-produced picture). If the mouse cursor is not above gl-picture, the standard; pad interaction is performed. \anchor HP29g; #### Selectable parts. Different parts of the plot can be selected:. - xoz, yoz, xoy back planes: When such a plane selected, it's highlighted in green; if the dynamic slicing by this plane is supported, and it's highlighted in red,; if the dynamic slicing is not supported.; - The plot itself:; On surfaces, the selected surface is outlined in red. (TF3 and; ISO are not outlined). On lego plots, the selected bin is; highlighted. The bin number and content are displayed in pad's; status bar. In box plots, the box or sphere is highlighted and; the bin info is displayed in pad's status bar. \anchor HP29h; #### Rotation and zooming. - Rotation:; When the plot is selected, it can be rotated by pressing and; holding the left mouse button and move the cursor.; - Zoom/Unzoom:; Mouse wheel or 'j', 'J', 'k', 'K' keys. \anchor HP29i; #### Panning. The selected plot can be moved in a pad's area by pressing and; holding the left mouse button and the shift key. \anchor HP29j; #### Box cut. Surface, iso, box, TF3 and parametric painters support box cut by; pressing the 'c' or 'C' key when the mouse cursor is in a plot's; area. That will display a transparent box, cutti",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:102324,green,green,102324,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['green'],['green']
Energy Efficiency,"bclasses of the SCEV class.; // These classes are used to represent certain types of subexpressions that we; // can handle. We only create one SCEV of a particular shape, so; // pointer-comparisons for equality are legal.; //; // One important aspect of the SCEV objects is that they are never cyclic, even; // if there is a cycle in the dataflow for an expression (ie, a PHI node). If; // the PHI node is one of the idioms that we can represent (e.g., a polynomial; // recurrence) then we represent it directly as a recurrence node, otherwise we; // represent it as a SCEVUnknown node.; //; // In addition to being able to represent expressions of various types, we also; // have folders that are used to build the *canonical* representation for a; // particular expression. These folders are capable of using a variety of; // rewrite rules to simplify the expressions.; //; // Once the folders are defined, we can implement the more interesting; // higher-level code, such as the code that recognizes PHI nodes of various; // types, computes the execution count of a loop, etc.; //; // TODO: We should use these routines and value representations to implement; // dependence analysis!; //; //===----------------------------------------------------------------------===//; //; // There are several good references for the techniques used in this analysis.; //; // Chains of recurrences -- a method to expedite the evaluation; // of closed-form functions; // Olaf Bachmann, Paul S. Wang, Eugene V. Zima; //; // On computational properties of chains of recurrences; // Eugene V. Zima; //; // Symbolic Evaluation of Chains of Recurrences for Loop Optimization; // Robert A. van Engelen; //; // Efficient Symbolic Analysis for Optimizing Compilers; // Robert A. van Engelen; //; // Using the chains of recurrences algebra for data dependence testing and; // induction variable substitution; // MS Thesis, Johnie Birch; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:2382,Efficient,Efficient,2382,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['Efficient'],['Efficient']
Energy Efficiency,"bject, bufsize, splitlevel); ~~~; - p_object is a pointer to an object.; - If className is not specified, Branch uses the type of p_object to determine the; type of the object.; - If className is used to specify explicitly the object type, the className must; be of a type related to the one pointed to by the pointer. It should be either; a parent or derived class. Note: The pointer whose address is passed to TTree::Branch must not; be destroyed (i.e. go out of scope) until the TTree is deleted or; TTree::ResetBranchAddress is called. Note: The pointer p_object must be initialized before calling TTree::Branch; - Do either:; ~~~ {.cpp}; MyDataClass* p_object = nullptr;; tree.Branch(branchname, &p_object);; ~~~; - Or:; ~~~ {.cpp}; auto p_object = new MyDataClass;; tree.Branch(branchname, &p_object);; ~~~; Whether the pointer is set to zero or not, the ownership of the object; is not taken over by the TTree. I.e. even though an object will be allocated; by TTree::Branch if the pointer p_object is zero, the object will <b>not</b>; be deleted when the TTree is deleted. \anchor addingacolumnoftclonesarray; ## Add a column holding TClonesArray instances. *It is recommended to use STL containers instead of TClonesArrays*. ~~~ {.cpp}; // clonesarray is the address of a pointer to a TClonesArray.; auto branch = tree.Branch(branchname,clonesarray, bufsize, splitlevel); ~~~; The TClonesArray is a direct access list of objects of the same class.; For example, if the TClonesArray is an array of TTrack objects,; this function will create one subbranch for each data member of; the object TTrack. \anchor fillthetree; ## Fill the Tree. A TTree instance is filled with the invocation of the TTree::Fill method:; ~~~ {.cpp}; tree.Fill(); ~~~; Upon its invocation, a loop on all defined branches takes place that for each branch invokes; the TBranch::Fill method. \anchor addcoltoexistingtree; ## Add a column to an already existing Tree. You may want to add a branch to an existing tree. For ex",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:9611,allocate,allocated,9611,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['allocate'],['allocated']
Energy Efficiency,"by grouping them in a per-kernel; // struct instance. This duplicates the variables, accurately modelling their; // aliasing properties relative to a single global representation. It also; // permits control over alignment via padding.; //; // Uses from functions are more complicated and the primary purpose of this; // IR pass. Several different lowering are chosen between to meet requirements; // to avoid allocating any LDS where it is not necessary, as that impacts; // occupancy and may fail the compilation, while not imposing overhead on a; // feature whose primary advantage over global memory is performance. The basic; // design goal is to avoid one kernel imposing overhead on another.; //; // Implementation.; //; // LDS variables with constant annotation or non-undef initializer are passed; // through unchanged for simplification or error diagnostics in later passes.; // Non-undef initializers are not yet implemented for LDS.; //; // LDS variables that are always allocated at the same address can be found; // by lookup at that address. Otherwise runtime information/cost is required.; //; // The simplest strategy possible is to group all LDS variables in a single; // struct and allocate that struct in every kernel such that the original; // variables are always at the same address. LDS is however a limited resource; // so this strategy is unusable in practice. It is not implemented here.; //; // Strategy | Precise allocation | Zero runtime cost | General purpose |; // --------+--------------------+-------------------+-----------------+; // Module | No | Yes | Yes |; // Table | Yes | No | Yes |; // Kernel | Yes | Yes | No |; // Hybrid | Yes | Partial | Yes |; //; // ""Module"" spends LDS memory to save cycles. ""Table"" spends cycles and global; // memory to save LDS. ""Kernel"" is as fast as kernel allocation but only works; // for variables that are known reachable from a single kernel. ""Hybrid"" picks; // between all three. When forced to choose between LDS and cycle",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:2813,allocate,allocated,2813,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['allocate'],['allocated']
Energy Efficiency,"ce within a team; /// and store the result on the team master:; ///; /// __kmpc_nvptx_parallel_reduce_nowait_v2(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn); ///; /// where:; /// struct ReduceData {; /// double *foo;; /// double *bar;; /// } reduceData; /// reduceData.foo = &foo_private; /// reduceData.bar = &bar_private; ///; /// 'shuffleReduceFn' and 'interWarpCpyFn' are pointers to two; /// auxiliary functions generated by the compiler that operate on; /// variables of type 'ReduceData'. They aid the runtime perform; /// algorithmic steps in a data agnostic manner.; ///; /// 'shuffleReduceFn' is a pointer to a function that reduces data; /// of type 'ReduceData' across two OpenMP threads (lanes) in the; /// same warp. It takes the following arguments as input:; ///; /// a. variable of type 'ReduceData' on the calling lane,; /// b. its lane_id,; /// c. an offset relative to the current lane_id to generate a; /// remote_lane_id. The remote lane contains the second; /// variable of type 'ReduceData' that is to be reduced.; /// d. an algorithm version parameter determining which reduction; /// algorithm to use.; ///; /// 'shuffleReduceFn' retrieves data from the remote lane using; /// efficient GPU shuffle intrinsics and reduces, using the; /// algorithm specified by the 4th parameter, the two operands; /// element-wise. The result is written to the first operand.; ///; /// Different reduction algorithms are implemented in different; /// runtime functions, all calling 'shuffleReduceFn' to perform; /// the essential reduction step. Therefore, based on the 4th; /// parameter, this function behaves slightly differently to; /// cooperate with the runtime to ensure correctness under; /// different circumstances.; ///; /// 'InterWarpCpyFn' is a pointer to a function that transfers; /// reduced variables across warps. It tunnels, through CUDA; /// shared memory, the thread-private data of type 'ReduceData'; /// from lane 0 of each warp to a lane in the first warp.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:2741,Reduce,ReduceData,2741,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,2,"['Reduce', 'reduce']","['ReduceData', 'reduced']"
Energy Efficiency,"ces the chunk of 'A' and 'B' assigned; /// to it and writes the result in 'foo_private' and 'bar_private'; /// respectively.; /// 3. Call the OpenMP runtime on the GPU to reduce within a team; /// and store the result on the team master:; ///; /// __kmpc_nvptx_parallel_reduce_nowait_v2(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn); ///; /// where:; /// struct ReduceData {; /// double *foo;; /// double *bar;; /// } reduceData; /// reduceData.foo = &foo_private; /// reduceData.bar = &bar_private; ///; /// 'shuffleReduceFn' and 'interWarpCpyFn' are pointers to two; /// auxiliary functions generated by the compiler that operate on; /// variables of type 'ReduceData'. They aid the runtime perform; /// algorithmic steps in a data agnostic manner.; ///; /// 'shuffleReduceFn' is a pointer to a function that reduces data; /// of type 'ReduceData' across two OpenMP threads (lanes) in the; /// same warp. It takes the following arguments as input:; ///; /// a. variable of type 'ReduceData' on the calling lane,; /// b. its lane_id,; /// c. an offset relative to the current lane_id to generate a; /// remote_lane_id. The remote lane contains the second; /// variable of type 'ReduceData' that is to be reduced.; /// d. an algorithm version parameter determining which reduction; /// algorithm to use.; ///; /// 'shuffleReduceFn' retrieves data from the remote lane using; /// efficient GPU shuffle intrinsics and reduces, using the; /// algorithm specified by the 4th parameter, the two operands; /// element-wise. The result is written to the first operand.; ///; /// Different reduction algorithms are implemented in different; /// runtime functions, all calling 'shuffleReduceFn' to perform; /// the essential reduction step. Therefore, based on the 4th; /// parameter, this function behaves slightly differently to; /// cooperate with the runtime to ensure correctness under; /// different circumstances.; ///; /// 'InterWarpCpyFn' is a pointer to a function that transfers; /// reduce",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:2543,Reduce,ReduceData,2543,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['Reduce'],['ReduceData']
Energy Efficiency,"cies.; //; // Actually when talking about 'low latency' or 'high latency' it includes; // both the latency to get the cache (or global mem) data go to the register,; // and the bandwidth limitations.; // Increasing the number of active wavefronts helps hide the former, but it; // doesn't solve the latter, thus why even if wavefront count is high, we have; // to try have as many instructions hiding high latencies as possible.; // The OpenCL doc says for example latency of 400 cycles for a global mem; // access, which is hidden by 10 instructions if the wavefront count is 10.; // Some figures taken from AMD docs:; // Both texture and constant L1 caches are 4-way associative with 64 bytes; // lines.; // Constant cache is shared with 4 CUs.; // For texture sampling, the address generation unit receives 4 texture; // addresses per cycle, thus we could expect texture sampling latency to be; // equivalent to 4 instructions in the very best case (a VGPR is 64 work items,; // instructions in a wavefront group are executed every 4 cycles),; // or 16 instructions if the other wavefronts associated to the 3 other VALUs; // of the CU do texture sampling too. (Don't take these figures too seriously,; // as I'm not 100% sure of the computation); // Data exports should get similar latency.; // For constant loading, the cache is shader with 4 CUs.; // The doc says ""a throughput of 16B/cycle for each of the 4 Compute Unit""; // I guess if the other CU don't read the cache, it can go up to 64B/cycle.; // It means a simple s_buffer_load should take one instruction to hide, as; // well as a s_buffer_loadx2 and potentially a s_buffer_loadx8 if on the same; // cache line.; //; // As of today the driver doesn't preload the constants in cache, thus the; // first loads get extra latency. The doc says global memory access can be; // 300-600 cycles. We do not specially take that into account when scheduling; // As we expect the driver to be able to preload the constants soon.; // common code //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp:5147,schedul,scheduling,5147,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a finite range!; The default numeric precision is 1e-7, i.e. the global default for; numeric integration but you should experiment with this value to; see if it is sufficient for example by studying the number of function; calls tha",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1829,consumption,consumption,1829,roofit/roofitcore/src/RooNumConvolution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx,1,['consumption'],['consumption']
Energy Efficiency,"common problems connected with correct peak identification are:; ///; /// - non-sensitivity to noise, i.e., only statistically; /// relevant peaks should be identified.; /// - non-sensitivity of the algorithm to continuous; /// background.; /// - ability to identify peaks close to the edges of the; /// spectrum region. Usually peak finders fail to detect them.; /// - resolution, decomposition of Double_tts and multiplets.; /// The algorithm should be able to recognise close positioned peaks.; /// - ability to identify peaks with different sigma.; ///; /// \image html TSpectrum_Searching1.jpg Fig. 27 An example of one-dimensional synthetic spectrum with found peaks denoted by markers.; ///; /// #### References:; ///; /// 1. M.A. Mariscotti: A method for identification of peaks in the presence of; /// background and its application to spectrum analysis. NIM 50 (1967),; /// 309-320.; /// 2. M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky,; /// I. Turzo.:Identification of peaks in; /// multidimensional coincidence gamma-ray spectra. NIM, A443 (2000) 108-125.; /// 3. Z.K. Silagadze, A new algorithm for automatic photopeak searches. NIM; /// A 376 (1996), 451.; ///; /// Examples of peak searching method:; ///; /// The SearchHighRes function provides users with the possibility to vary the; /// input parameters and with the access to the output deconvolved data in the; /// destination spectrum. Based on the output data one can tune the parameters.; ///; /// ### Example 15 - script SearchHR1.C:; ///; /// One-dimensional spectrum with found peaks denoted by markers, 3 iterations; /// steps in the deconvolution.; ///; /// #### Script:; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/SearchHR1.C; /// End_Macro; ///; /// ### Example 16 - script SearchHR3.C:; ///; /// Influence of number of iterations (3-red, 10-blue, 100- green, 1000-magenta),; /// sigma=8, smoothing width=3.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/SearchHR3.C; /// End_Macro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:3637,green,green,3637,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,1,['green'],['green']
Energy Efficiency,"cro; ///; /// ### Example 2 script Background_decr.C:; ///; /// In Example 1. one can notice that at the edges of the peaks the estimated; /// background goes under the peaks. An alternative approach is to decrease the; /// clipping window from a given value numberIterations to the value of one, which; /// is presented in this example.; ///; /// Example of the estimation of background for numberIterations=6 using; /// decreasing clipping window algorithm. Original spectrum is shown in black; /// color, estimated background in red color.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_decr.C; /// End_Macro; ///; /// ### Example 3 script Background_width.C:; ///; /// The question is how to choose the width of the clipping window, i.e.,; /// numberIterations parameter. The influence of this parameter on the estimated; /// background is illustrated in Example 3.; ///; /// Example of the influence of clipping window width on the estimated background; /// for numberIterations=4 (red line), 6 (orange line) 8 (green line) using decreasing; /// clipping window algorithm.; ///; /// in general one should set this parameter so that the value; /// 2*numberIterations+1 was greater than the widths of preserved objects (peaks).; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_width.C; /// End_Macro; ///; /// ### Example 4 script Background_width2.C:; ///; /// another example for very complex spectrum is given here.; ///; /// Example of the influence of clipping window width on the estimated background; /// for numberIterations=10 (red line), 20 (blue line), 30 (green line) and; /// 40 (magenta line) using decreasing clipping window algorithm.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_width2.C; /// End_Macro; ///; /// ### Example 5 script Background_order.C:; ///; /// Second order difference filter removes linear (quasi-linear) background and; /// preserves symmetrical peaks. However if the shape of t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:3834,green,green,3834,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,1,['green'],['green']
Energy Efficiency,"ction to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func. The ordering of the elements corresponds to the ordering of; /// the arguments.; ///; /// ### ROOT::TExecutorCRTP<SubC>::Reduce; /// These set of methods combine all elements from a std::vector into a single value.; /// \param redfunc; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes an std::vector and combines all its elements into a single result.\n; /// \endparblock; /// \param [args]; /// \parblock; /// a standard vector\n; /// \endparblock; ///; /// ### ROOT::TExecutorCRTP<SubC>::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. This function should be independent of the size of; /// the vector returned by Map due to optimization of the number of chunks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// Generate 1 ten times and sum those tens; /// root[] ROOT::TProcessExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int> &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::TProcessExecutor pool; auto tenOnes = pool.Map([]() { return 1; }, 10); auto ten = Reduce([](const std::vector<int> &v) { return std::accumulate(v.begin(), v.end(), 0); }, tenOnes); ///; /// Create 10 histograms and merge them into one; /// root[] ROOT::TThreadExecutor pool; auto hist = pool.MapReduce(CreateAndFillHists, 10, PoolUtils::ReduceObjects);; ///; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx:3248,Reduce,Reduce,3248,core/base/inc/ROOT/TExecutorCRTP.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx,2,['Reduce'],"['Reduce', 'ReduceObjects']"
Energy Efficiency,"ction, you have to wait; // for all the SGPR load instructions before your current instruction to; // have finished.; // . When accessing the result of an VGPR load instruction, you have to wait; // for all the VGPR load instructions previous to the VGPR load instruction; // you are interested in to finish.; // . The less the register pressure, the best load latencies are hidden; //; // Moreover some specifities (like the fact a lot of instructions in the shader; // have few dependencies) makes the generic scheduler have some unpredictable; // behaviours. For example when register pressure becomes high, it can either; // manage to prevent register pressure from going too high, or it can; // increase register pressure even more than if it hadn't taken register; // pressure into account.; //; // Also some other bad behaviours are generated, like loading at the beginning; // of the shader a constant in VGPR you won't need until the end of the shader.; //; // The scheduling problem for SI can distinguish three main parts:; // . Hiding high latencies (texture sampling, etc); // . Hiding low latencies (SGPR constant loading, etc); // . Keeping register usage low for better latency hiding and general; // performance; //; // Some other things can also affect performance, but are hard to predict; // (cache usage, the fact the HW can issue several instructions from different; // wavefronts if different types, etc); //; // This scheduler tries to solve the scheduling problem by dividing it into; // simpler sub-problems. It divides the instructions into blocks, schedules; // locally inside the blocks where it takes care of low latencies, and then; // chooses the order of the blocks by taking care of high latencies.; // Dividing the instructions into blocks helps control keeping register; // usage low.; //; // First the instructions are put into blocks.; // We want the blocks help control register usage and hide high latencies; // later. To help control register usage, we typica",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp:1225,schedul,scheduling,1225,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"ctions (or have had them all inlined) are not; // affected by any lowering for kernels that do.; // - Kernels that don't make indirect function calls are not affected by those; // that do.; // - Variables which are used by lots of kernels, e.g. those injected by a; // language runtime in most kernels, are expected to have no overhead; // - Implementations that instantiate templates per-kernel where those templates; // use LDS are expected to hit the ""Kernel"" lowering strategy; // - The runtime properties impose a cost in compiler implementation complexity; //; // Dynamic LDS implementation; // Dynamic LDS is lowered similarly to the ""table"" strategy above and uses the; // same intrinsic to identify which kernel is at the root of the dynamic call; // graph. This relies on the specified behaviour that all dynamic LDS variables; // alias one another, i.e. are at the same address, with respect to a given; // kernel. Therefore this pass creates new dynamic LDS variables for each kernel; // that allocates any dynamic LDS and builds a table of addresses out of those.; // The AMDGPUPromoteAlloca pass skips kernels that use dynamic LDS.; // The corresponding optimisation for ""kernel"" lowering where the table lookup; // is elided is not implemented.; //; //; // Implementation notes / limitations; // A single LDS global variable represents an instance per kernel that can reach; // said variables. This pass essentially specialises said variables per kernel.; // Handling ConstantExpr during the pass complicated this significantly so now; // all ConstantExpr uses of LDS variables are expanded to instructions. This; // may need amending when implementing non-undef initialisers.; //; // Lowering is split between this IR pass and the back end. This pass chooses; // where given variables should be allocated and marks them with metadata,; // MD_absolute_symbol. The backend places the variables in coincidentally the; // same location and raises a fatal error if something has gone awry. ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:6942,allocate,allocates,6942,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['allocate'],['allocates']
Energy Efficiency,"d constructed when needed) using ConstructedAt which only; calls the constructor once per slot.; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; wh",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:2541,allocate,allocated,2541,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,2,"['allocate', 'efficient']","['allocated', 'efficiently']"
Energy Efficiency,"d here. However,; if the order is kept small (< 6?) any inefficiency is negligible for; in-memory sorting. Knuth points out that balanced trees are actually; preferable for memory sorting. I'm not sure that I believe this, but; it's interesting. Also, deleting elements from balanced binary trees, being; beyond the scope of Knuth's book (p. 465), is beyond my scope. B-trees; are good enough. A B-tree is declared to be of a certain ORDER (3 by default). This number; determines the number of keys contained in any interior node of the tree.; Each interior node will contain ORDER keys, and therefore ORDER+1 pointers; to sub-trees. The keys are numbered and indexed 1 to ORDER while the; pointers are numbered and indexed 0 to ORDER. The 0th ptr points to the; sub-tree of all elements that are less than key[1]. Ptr[1] points to the; sub-tree that contains all the elements greater than key[1] and less than; key[2]. etc. The array of pointers and keys is allocated as ORDER+1; pairs of keys and nodes, meaning that one key field (key[0]) is not used; and therefore wasted. Given that the number of interior nodes is; small, that this waste allows fewer cases of special code, and that it; is useful in certain of the methods, it was felt to be a worthwhile waste. The size of the exterior nodes (leaf nodes) does not need to be related to; the size of the interior nodes at all. Since leaf nodes contain only; keys, they may be as large or small as we like independent of the size; of the interior nodes. For no particular reason other than it seems like; a good idea, we will allocate 2*(ORDER+1) keys in each leaf node, and they; will be numbered and indexed from 0 to 2*ORDER+1. It does have the advantage; of keeping the size of the leaf and interior arrays the same, so that if we; find allocation and de-allocation of these arrays expensive, we can modify; their allocation to use a garbage ring, or something. Both of these numbers will be run-time constants associated with each tree; (ea",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:4026,allocate,allocated,4026,core/cont/src/TBtree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx,1,['allocate'],['allocated']
Energy Efficiency,"d requires that your ROOT installation is; /// compiled with the `fftw3=ON` (default). Instructions for manually installing fftw below.; ///; /// Note that the performance in terms of speed and stability of RooFFTConvPdf is; /// vastly superior to that of RooNumConvPdf.; ///; /// An important feature of FFT convolutions is that the observable is assumed to be; /// cyclical. This is correct for cyclical observables such as angles,; /// but does not hold in general. For non-cyclical variables, wrap-around artifacts may be; /// encountered, *e.g.* if the PDF is zero at xMin and non-zero at xMax. A rising tail may appear at xMin.; /// This is inevitable when using FFTs. A distribution with 3 bins therefore looks like:; /// ```; /// ... 0 1 2 0 1 2 0 1 2 ...; /// ```; ///; /// Therefore, if bins 0 and 2 are not equal, the FFT sees a cyclical function with a step at the 2|0 boundary, which causes; /// artifacts in Fourier space.; ///; /// The spillover or discontinuity can be reduced or eliminated by; /// introducing a buffer zone in the FFT calculation. If this feature is activated (on by default),; /// the sampling array for the FFT calculation is extended in both directions,; /// and padded with the lowest/highest bin.; /// Example:; /// ```; /// original: -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5; /// add buffer zones: U U -5 -4 -3 -2 -1 0 +1 +2 +3 +4 +5 O O; /// rotate: 0 +1 +2 +3 +4 +5 O O U U -5 -4 -3 -2 -1; /// ```; /// The buffer bins are stripped away when the FFT output values; /// are transferred back to the p.d.f cache. The default buffer size is 10% of the; /// observable domain size, and can be changed with the `setBufferFraction()` member function.; ///; /// The RooFFTConvPdf uses caching inherited from a RooAbsCachedPdf. If it is; /// evaluated for a particular value of x, the FFT and convolution is calculated; /// for all bins in the observable space for the given choice of parameters,; /// which are also stored in the cache. Subsequent evaluations for different v",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:2174,reduce,reduced,2174,roofit/roofitcore/src/RooFFTConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx,1,['reduce'],['reduced']
Energy Efficiency,"d with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~ {.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~ {.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; ///; /// if (cutfilename()) htemp->Fill(macrofilename());; ///; /// These two functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example:; /// ~~~ {.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~ {.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in particular to insure that the include files ne",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2926,efficient,efficient,2926,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['efficient'],['efficient']
Energy Efficiency,"demakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualViewer3D; \ingroup Base. Abstract 3D shapes viewer. The concrete implementations are:. - TViewerX3D : X3d viewer; - TGLViewer : OpenGL viewer. ## 3D Viewer Infrastructure Overview. The 3D Viewer infrastructure consists of:. - TVirtualViewer3D interface: An abstract handle to the viewer, allowing; client to test preferences, add objects, control the viewer via scripting; (to be added) etc.; -TBuffer3D class hierarchy: Used to describe 3D objects; (""shapes""); - filled /added by negotiation with viewer via TVirtualViewer3D. Together these allow clients to publish objects to any one of the 3D viewers; (currently OpenGL/x3d,TPad), free of viewer specific drawing code. They allow; our simple x3d viewer, and considerably more sophisticated OpenGL one to both; work with both geometry libraries (g3d and geom) efficiently. Publishing to a viewer consists of the following steps:. 1. Create / obtain viewer handle; 2. Begin scene on viewer; 3. Fill mandatory parts of TBuffer3D describing object; 4. Add to viewer; 5. Fill optional parts of TBuffer3D if requested by viewer, and add again; ... repeat 3/4/5 as required; 6. End scene on viewer. ## Creating / Obtaining Viewer. Create/obtain the viewer handle via local/global pad - the viewer is always; bound to a TPad object at present [This may be removed as a restriction in; the future] . You should perform the publishing to the viewer described below; in the Paint() method of the object you attach to the pad (via Draw()); ~~~ {.cpp}; TVirtualViewer3D * v = gPad->GetViewer3D(""xxxx"");; ~~~. "" xxxx"" is viewer type: OpenGL ""ogl"", X3D ""x3d"" or; Pad ""pad"" (default). The viewer is created via the plugin manager,; attached to pad, and the interface returned. ## Begin / End Scene. Objects must",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:1249,efficient,efficiently,1249,core/base/src/TVirtualViewer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx,1,['efficient'],['efficiently']
Energy Efficiency,"don't require the original data to be present after the tree; has been built. Check the functions documentation for more details. #### 3b. Navigating the kd-tree. Nodes of the tree are indexed top to bottom, left to right. The root node has index 0. Functions; TKDTree::GetLeft(Index inode), TKDTree::GetRight(Index inode) and TKDTree::GetParent(Index inode); allow to find the children and the parent of a given node. For a given node, one can find the indexes of the original points, contained in this node,; by calling the GetNodePointsIndexes(Index inode) function. Additionally, for terminal nodes,; there is a function GetPointsIndexes(Index inode) that returns a pointer to the relevant; part of the index array. To find the number of point in the node; (not only terminal), call TKDTree::GetNpointsNode(Index inode). ### 4. TKDtree implementation details - internal information, not needed to use the kd-tree. #### 4a. Order of nodes in the node information arrays:. TKDtree is optimized to minimize memory consumption.; Nodes of the TKDTree do not store pointers to the left and right children or to the parent node,; but instead there are several 1-d arrays of size fNNodes with information about the nodes.; The order of the nodes information in the arrays is described below. It's important to understand; it, if one's class needs to store some kind of additional information on the per node basis, for; example, the fit function parameters. - Drawback: Insertion to the TKDtree is not supported.; - Advantage: Random access is supported. As noted above, the construction of the kd-tree involves choosing the axis and the point on; that axis to divide the remaining points approximately in half. The exact algorithm for choosing; the division point is described in the next section. The sequence of divisions is; recorded in the following arrays:; ~~~~; fAxis[fNNodes] - Division axis (0,1,2,3 ...); fValue[fNNodes] - Division value; ~~~~. Given the index of a node in those arrays, it's e",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TKDTree.cxx:6354,consumption,consumption,6354,math/mathcore/src/TKDTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TKDTree.cxx,1,['consumption'],['consumption']
Energy Efficiency,"ducing flags on the; // instruction itself (e.g. checks for overflow on nsw).; // 4) A check rule which traps (to a handler function) if this instruction must; // execute undefined behavior given the poison state of it's inputs.; //; // This is a must analysis based transform; that is, the resulting code may; // produce a false negative result (not report UB when actually exists; // according to the LangRef spec), but should never produce a false positive; // (report UB where it doesn't exist).; //; // Use cases for this pass include:; // - Understanding (and testing!) the implications of the definition of poison; // from the LangRef.; // - Validating the output of a IR fuzzer to ensure that all programs produced; // are well defined on the specific input used.; // - Finding/confirming poison specific miscompiles by checking the poison; // status of an input/IR pair is the same before and after an optimization; // transform.; // - Checking that a bugpoint reduction does not introduce UB which didn't; // exist in the original program being reduced.; //; // The major sources of inaccuracy are currently:; // - Most validation rules not yet implemented for instructions with poison; // relavant flags. At the moment, only nsw/nuw on add/sub are supported.; // - UB which is control dependent on a branch on poison is not yet; // reported. Currently, only data flow dependence is modeled.; // - Poison which is propagated through memory is not modeled. As such,; // storing poison to memory and then reloading it will cause a false negative; // as we consider the reloaded value to not be poisoned.; // - Poison propagation across function boundaries is not modeled. At the; // moment, all arguments and return values are assumed not to be poison.; // - Undef is not modeled. In particular, the optimizer's freedom to pick; // concrete values for undef bits so as to maximize potential for producing; // poison is not modeled.; //; //===---------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PoisonChecking.cpp:2292,reduce,reduced,2292,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PoisonChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PoisonChecking.cpp,1,['reduce'],['reduced']
Energy Efficiency,"dynamic LDS variables; // alias one another, i.e. are at the same address, with respect to a given; // kernel. Therefore this pass creates new dynamic LDS variables for each kernel; // that allocates any dynamic LDS and builds a table of addresses out of those.; // The AMDGPUPromoteAlloca pass skips kernels that use dynamic LDS.; // The corresponding optimisation for ""kernel"" lowering where the table lookup; // is elided is not implemented.; //; //; // Implementation notes / limitations; // A single LDS global variable represents an instance per kernel that can reach; // said variables. This pass essentially specialises said variables per kernel.; // Handling ConstantExpr during the pass complicated this significantly so now; // all ConstantExpr uses of LDS variables are expanded to instructions. This; // may need amending when implementing non-undef initialisers.; //; // Lowering is split between this IR pass and the back end. This pass chooses; // where given variables should be allocated and marks them with metadata,; // MD_absolute_symbol. The backend places the variables in coincidentally the; // same location and raises a fatal error if something has gone awry. This works; // in practice because the only pass between this one and the backend that; // changes LDS is PromoteAlloca and the changes it makes do not conflict.; //; // Addresses are written to constant global arrays based on the same metadata.; //; // The backend lowers LDS variables in the order of traversal of the function.; // This is at odds with the deterministic layout required. The workaround is to; // allocate the fixed-address variables immediately upon starting the function; // where they can be placed as intended. This requires a means of mapping from; // the function to the variables that it allocates. For the module scope lds,; // this is via metadata indicating whether the variable is not required. If a; // pass deletes that metadata, a fatal error on disagreement with the absolute; // s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:7748,allocate,allocated,7748,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['allocate'],['allocated']
Energy Efficiency,"e Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; ///; /// \class TQpSolverBase; ///; /// The Solver class contains methods for monitoring and checking the; /// convergence status of the algorithm, methods to determine the step; /// length along a given direction, methods to define the starting point,; /// and the solve method that implements the interior-point algorithm; ///; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpSolverBase.cxx:1586,ENERGY,ENERGY,1586,math/quadp/src/TQpSolverBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpSolverBase.cxx,2,"['ENERGY', 'monitor']","['ENERGY', 'monitoring']"
Energy Efficiency,"e any or all of the above categories of data; /// depending on the type of CPU and selected scheduler.; ///; /// The machine independent properties defined here are used by the scheduler as; /// an abstract machine model. A real micro-architecture has a number of; /// buffers, queues, and stages. Declaring that a given machine-independent; /// abstract property corresponds to a specific physical property across all; /// subtargets can't be done. Nonetheless, the abstract model is; /// useful. Futhermore, subtargets typically extend this model with processor; /// specific resources to model any hardware features that can be exploited by; /// scheduling heuristics and aren't sufficiently represented in the abstract.; ///; /// The abstract pipeline is built around the notion of an ""issue point"". This; /// is merely a reference point for counting machine cycles. The physical; /// machine will have pipeline stages that delay execution. The scheduler does; /// not model those delays because they are irrelevant as long as they are; /// consistent. Inaccuracies arise when instructions have different execution; /// delays relative to each other, in addition to their intrinsic latency. Those; /// special cases can be handled by TableGen constructs such as, ReadAdvance,; /// which reduces latency when reading data, and ReleaseAtCycles, which consumes; /// a processor resource when writing data for a number of abstract; /// cycles.; ///; /// TODO: One tool currently missing is the ability to add a delay to; /// ReleaseAtCycles. That would be easy to add and would likely cover all cases; /// currently handled by the legacy itinerary tables.; ///; /// A note on out-of-order execution and, more generally, instruction; /// buffers. Part of the CPU pipeline is always in-order. The issue point, which; /// is the point of reference for counting cycles, only makes sense as an; /// in-order part of the pipeline. Other parts of the pipeline are sometimes; /// falling behind and sometimes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h:1489,schedul,scheduler,1489,interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,1,['schedul'],['scheduler']
Energy Efficiency,"e concept of a \c Split, which is a whitespace range that signifies; /// a position of the content of a token where a reformatting might be done.; ///; /// Operating with splits is divided into two operations:; /// - getSplit, for finding a split starting at a position,; /// - insertBreak, for executing the split using a whitespace manager.; ///; /// There is a pair of operations that are used to compress a long whitespace; /// range with a single space if that will bring the line length under the; /// column limit:; /// - getLineLengthAfterCompression, for calculating the size in columns of the; /// line after a whitespace range has been compressed, and; /// - compressWhitespace, for executing the whitespace compression using a; /// whitespace manager; note that the compressed whitespace may be in the; /// middle of the original line and of the reformatted line.; ///; /// For tokens where the whitespace before each line needs to be also; /// reformatted, for example for tokens supporting reflow, there are analogous; /// operations that might be executed before the main line breaking occurs:; /// - getReflowSplit, for finding a split such that the content preceding it; /// needs to be specially reflown,; /// - reflow, for executing the split using a whitespace manager,; /// - introducesBreakBefore, for checking if reformatting the beginning; /// of the content introduces a line break before it,; /// - adaptStartOfLine, for executing the reflow using a whitespace; /// manager.; ///; /// For tokens that require the whitespace after the last line to be; /// reformatted, for example in multiline jsdoc comments that require the; /// trailing '*/' to be on a line of itself, there are analogous operations; /// that might be executed after the last line has been reformatted:; /// - getSplitAfterLastLine, for finding a split after the last line that needs; /// to be reflown,; /// - replaceWhitespaceAfterLastLine, for executing the reflow using a; /// whitespace manager.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/BreakableToken.h:2328,adapt,adaptStartOfLine,2328,interpreter/llvm-project/clang/lib/Format/BreakableToken.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/BreakableToken.h,1,['adapt'],['adaptStartOfLine']
Energy Efficiency,"e given in ascending order.; /// option is a character string to specify options; /// ""D"" Put out a line of ""Debug"" printout; /// ""M"" Return the Maximum Kolmogorov distance instead of prob; ///; /// ### Output:; /// The returned value prob is a calculated confidence level which gives a; /// statistical test for compatibility of a and b.; /// Values of prob close to zero are taken as indicating a small probability; /// of compatibility. For two point sets drawn randomly from the same parent; /// distribution, the value of prob should be uniformly distributed between; /// zero and one.; /// in case of error the function return -1; /// If the 2 sets have a different number of points, the minimum of; /// the two sets is used.; ///; /// ### Method:; /// The Kolmogorov test is used. The test statistic is the maximum deviation; /// between the two integrated distribution functions, multiplied by the; /// normalizing factor (rdmax*sqrt(na*nb/(na+nb)).; ///; /// Code adapted by Rene Brun from CERNLIB routine TKOLMO (Fred James); /// (W.T. Eadie, D. Drijard, F.E. James, M. Roos and B. Sadoulet,; /// Statistical Methods in Experimental Physics, (North-Holland,; /// Amsterdam 1971) 269-271); ///; /// ### Method Improvement by Jason A Detwiler (JADetwiler@lbl.gov); ///; /// The nuts-and-bolts of the TMath::KolmogorovTest() algorithm is a for-loop; /// over the two sorted arrays a and b representing empirical distribution; /// functions. The for-loop handles 3 cases: when the next points to be; /// evaluated satisfy a>b, a<b, or a=b:; ///; /// ~~~ {.cpp}; /// for (Int_t i=0;i<na+nb;i++) {; /// if (a[ia-1] < b[ib-1]) {; /// rdiff -= sa;; /// ia++;; /// if (ia > na) {ok = kTRUE; break;}; /// } else if (a[ia-1] > b[ib-1]) {; /// rdiff += sb;; /// ib++;; /// if (ib > nb) {ok = kTRUE; break;}; /// } else {; /// rdiff += sb - sa;; /// ia++;; /// ib++;; /// if (ia > na) {ok = kTRUE; break;}; /// if (ib > nb) {ok = kTRUE; break;}; /// }; /// rdmax = TMath::Max(rdmax,TMath::Abs(rdiff));; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:1419,adapt,adapted,1419,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['adapt'],['adapted']
Energy Efficiency,"e library. Larger values of this parameter result in better; compression at the expense of memory usage. The default value is 15 if; deflateInit is used instead. windowBits can also be -8..-15 for raw deflate. In this case, -windowBits; determines the window size. deflate() will then generate raw deflate data; with no zlib header or trailer, and will not compute an adler32 check value. windowBits can also be greater than 15 for optional gzip encoding. Add; 16 to windowBits to write a simple gzip header and trailer around the; compressed data instead of a zlib wrapper. The gzip header will have no; file name, no extra data, no comment, no modification time (set to zero), no; header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but is; slow and reduces compression ratio; memLevel=9 uses maximum memory for; optimal speed. The default value is 8. See zconf.h for total memory usage; as a function of windowBits and memLevel. The strategy parameter is used to tune the compression algorithm. Use the; value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a; filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no; string match), or Z_RLE to limit match distances to one (run-length; encoding). Filtered data consists mostly of small values with a somewhat; random distribution. In this case, the compression algorithm is tuned to; compress them better. The effect of Z_FILTERED is to force more Huffman; coding and less string matching; it is somewhat intermediate between; Z_DEFAULT_STRATEGY and Z_HUFFMAN_ONLY. Z_RLE is designed to be almost as; fast as Z_HUFFMAN_ONLY, but give better compression for PNG image data. The; strategy parameter only affects the compression ratio but not the; correctness of the compressed ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:2002,reduce,reduces,2002,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['reduce'],['reduces']
Energy Efficiency,"e library. Larger values of this parameter result in better; compression at the expense of memory usage. The default value is 15 if; deflateInit is used instead. windowBits can also be -8..-15 for raw deflate. In this case, -windowBits; determines the window size. deflate() will then generate raw deflate data; with no zlib header or trailer, and will not compute an adler32 check value. windowBits can also be greater than 15 for optional gzip encoding. Add; 16 to windowBits to write a simple gzip header and trailer around the; compressed data instead of a zlib wrapper. The gzip header will have no; file name, no extra data, no comment, no modification time (set to zero),; no header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but; is slow and reduces compression ratio; memLevel=9 uses maximum memory; for optimal speed. The default value is 8. See zconf.h for total memory; usage as a function of windowBits and memLevel. The strategy parameter is used to tune the compression algorithm. Use the; value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a; filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no; string match), or Z_RLE to limit match distances to one (run-length; encoding). Filtered data consists mostly of small values with a somewhat; random distribution. In this case, the compression algorithm is tuned to; compress them better. The effect of Z_FILTERED is to force more Huffman; coding and less string matching; it is somewhat intermediate between; Z_DEFAULT and Z_HUFFMAN_ONLY. Z_RLE is designed to be almost as fast as; Z_HUFFMAN_ONLY, but give better compression for PNG image data. The strategy; parameter only affects the compression ratio but not the correctness of the; compressed output ev",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:2002,reduce,reduces,2002,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['reduce'],['reduces']
Energy Efficiency,"e may be copyrighted by their authors; and need not follow the licensing terms described here, provided that; the new terms are clearly indicated on the first page of each file where; they apply. IN NO EVENT SHALL THE AUTHORS OR DISTRIBUTORS BE LIABLE TO ANY PARTY; FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES; ARISING OUT OF THE USE OF THIS SOFTWARE, ITS DOCUMENTATION, OR ANY; DERIVATIVES THEREOF, EVEN IF THE AUTHORS HAVE BEEN ADVISED OF THE; POSSIBILITY OF SUCH DAMAGE. THE AUTHORS AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES,; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT. THIS SOFTWARE; IS PROVIDED ON AN ""AS IS"" BASIS, AND THE AUTHORS AND DISTRIBUTORS HAVE; NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR; MODIFICATIONS. GOVERNMENT USE: If you are acquiring this software on behalf of the; U.S. government, the Government shall have only ""Restricted Rights""; in the software and related documentation as defined in the Federal ; Acquisition Regulations (FARs) in Clause 52.227.19 (c) (2). If you; are acquiring the software on behalf of the Department of Defense, the; software shall be classified as ""Commercial Computer Software"" and the; Government shall have only ""Restricted Rights"" as defined in Clause; 252.227-7013 (c) (1) of DFARs. Notwithstanding the foregoing, the; authors grant the U.S. Government and others acting in its behalf; permission to use and distribute the software in accordance with the; terms specified in this license.; */; /*; *----------------------------------------------------------------------; *; * XAllocColor --; *; *	Find the closest available color to the specified XColor.; *; * Results:; *	Updates the color argument and returns 1 on success. Otherwise; *	returns 0.; *; * Side effects:; *	Allocates a new color in the palette.; *; *----------------------------------------------------------------------; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c:2756,Allocate,Allocates,2756,graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkcolor-win32.c,1,['Allocate'],['Allocates']
Energy Efficiency,"e reduced.; /// d. an algorithm version parameter determining which reduction; /// algorithm to use.; ///; /// 'shuffleReduceFn' retrieves data from the remote lane using; /// efficient GPU shuffle intrinsics and reduces, using the; /// algorithm specified by the 4th parameter, the two operands; /// element-wise. The result is written to the first operand.; ///; /// Different reduction algorithms are implemented in different; /// runtime functions, all calling 'shuffleReduceFn' to perform; /// the essential reduction step. Therefore, based on the 4th; /// parameter, this function behaves slightly differently to; /// cooperate with the runtime to ensure correctness under; /// different circumstances.; ///; /// 'InterWarpCpyFn' is a pointer to a function that transfers; /// reduced variables across warps. It tunnels, through CUDA; /// shared memory, the thread-private data of type 'ReduceData'; /// from lane 0 of each warp to a lane in the first warp.; /// 4. Call the OpenMP runtime on the GPU to reduce across teams.; /// The last team writes the global reduced value to memory.; ///; /// ret = __kmpc_nvptx_teams_reduce_nowait(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn,; /// scratchpadCopyFn, loadAndReduceFn); ///; /// 'scratchpadCopyFn' is a helper that stores reduced; /// data from the team master to a scratchpad array in; /// global memory.; ///; /// 'loadAndReduceFn' is a helper that loads data from; /// the scratchpad array and reduces it with the input; /// operand.; ///; /// These compiler generated functions hide address; /// calculation and alignment information from the runtime.; /// 5. if ret == 1:; /// The team master of the last team stores the reduced; /// result to the globals in memory.; /// foo += reduceData.foo; bar *= reduceData.bar; ///; ///; /// Warp Reduction Algorithms; ///; /// On the warp level, we have three algorithms implemented in the; /// OpenMP runtime depending on the number of active lanes:; ///; /// Full Warp Reduction; ///; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:3775,reduce,reduce,3775,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['reduce'],['reduce']
Energy Efficiency,"e statistics //; // gathering and an easy way to access shared memory segments. //; // Memory checking is by default enabled and usage statistics is //; // gathered. Using the resource (in .rootrc): Root.MemStat one can //; // toggle statistics gathering on or off. More specifically on can trap //; // the allocation of a block of memory of a certain size. This can be //; // specified using the resource: Root.MemStat.size, using the resource //; // Root.MemStat.cnt one can specify after how many allocations of //; // this size the trap should occur. //; // Set the compile option R__NOSTATS to de-activate all memory checking //; // statistics gathering in the system. //; // //; // When memory checking is enabled the following happens during //; // allocation: //; // - each allocation results in the allocation of 9 extra bytes: //; // 2 words in front and 1 byte at the end of the memory chunck //; // returned to the caller. //; // - the allocated memory is set to 0. //; // - the size of the chunck is stored in the first word. The second //; // word is left empty (for alignment). //; // - the last byte is initialized to MEM_MAGIC. //; // //; // And during de-allocation this happens: //; // - first the size if the block is checked. It should be >0 and //; // <= than any block allocated up to that moment. If not a Fatal //; // error is generated. //; // - the MEM_MAGIC byte at the end of the block is checked. When not //; // there, the memory has been overwritten and a Fatal error is //; // generated. //; // - memory block is reset to 0. //; // //; // Although this does not replace powerful tools like Purify, it is a //; // good first line of protection. //; // //; // Independent of any compile option settings the new, and ReAlloc //; // functions always set the memory to 0. //; // //; // The powerful MEM_DEBUG and MEM_STAT macros were originally borrowed //; // from the ET++ framework. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx:2047,allocate,allocated,2047,core/newdelete/src/NewDelete.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx,3,"['allocate', 'power']","['allocated', 'powerful']"
Energy Efficiency,"e tractible. Unfortunately 3x3 determinants still involve; * multiplication of three coefficients so we can't guarantee to avoid; * overflow in the libpng fixed point representation. Using Cramer's rule in; * floating point is probably a good choice here, but it's not an option for; * fixed point. Instead proceed to simplify the first two equations by; * eliminating what is likely to be the largest value, blue-scale:; *; * blue-scale = white-scale - red-scale - green-scale; *; * Hence:; *; * (red-x - blue-x)*red-scale + (green-x - blue-x)*green-scale =; * (white-x - blue-x)*white-scale; *; * (red-y - blue-y)*red-scale + (green-y - blue-y)*green-scale =; * 1 - blue-y*white-scale; *; * And now we can trivially solve for (red-scale,green-scale):; *; * green-scale =; * (white-x - blue-x)*white-scale - (red-x - blue-x)*red-scale; * -----------------------------------------------------------; * green-x - blue-x; *; * red-scale =; * 1 - blue-y*white-scale - (green-y - blue-y) * green-scale; * ---------------------------------------------------------; * red-y - blue-y; *; * Hence:; *; * red-scale =; * ( (green-x - blue-x) * (white-y - blue-y) -; * (green-y - blue-y) * (white-x - blue-x) ) / white-y; * -------------------------------------------------------------------------; * (green-x - blue-x)*(red-y - blue-y)-(green-y - blue-y)*(red-x - blue-x); *; * green-scale =; * ( (red-y - blue-y) * (white-x - blue-x) -; * (red-x - blue-x) * (white-y - blue-y) ) / white-y; * -------------------------------------------------------------------------; * (green-x - blue-x)*(red-y - blue-y)-(green-y - blue-y)*(red-x - blue-x); *; * Accuracy:; * The input values have 5 decimal digits of accuracy. The values are all in; * the range 0 < value < 1, so simple products are in the same range but may; * need up to 10 decimal digits to preserve the original precision and avoid; * underflow. Because we are using a 32-bit signed representation we cannot; * match this; the best is a little over 9 de",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:4728,green,green-scale,4728,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,17,['green'],"['green-scale', 'green-x', 'green-y']"
Energy Efficiency,"e training. Training of a decision tree is the; process to define the ""cut criteria"" for each node. The training; starts with the root node. Here one takes the full training event; sample and selects the variable and corresponding cut value that gives; the best separation between signal and background at this stage. Using; this cut criterion, the sample is then divided into two subsamples, a; signal-like (right) and a background-like (left) sample. Two new nodes; are then created for each of the two sub-samples and they are; constructed using the same mechanism as described for the root; node. The devision is stopped once a certain node has reached either a; minimum number of events, or a minimum or maximum signal purity. These; leave nodes are then called ""signal"" or ""background"" if they contain; more signal respective background events from the training sample. ### Boosting:. The idea behind adaptive boosting (AdaBoost) is, that signal events; from the training sample, that end up in a background node; (and vice versa) are given a larger weight than events that are in; the correct leave node. This results in a re-weighed training event; sample, with which then a new decision tree can be developed.; The boosting can be applied several times (typically 100-500 times); and one ends up with a set of decision trees (a forest).; Gradient boosting works more like a function expansion approach, where; each tree corresponds to a summand. The parameters for each summand (tree); are determined by the minimization of a error function (binomial log-; likelihood for classification and Huber loss for regression).; A greedy algorithm is used, which means, that only one tree is modified; at a time, while the other trees stay fixed. ### Bagging:. In this particular variant of the Boosted Decision Trees the boosting; is not done on the basis of previous training results, but by a simple; stochastic re-sampling of the initial training event sample. ### Random Trees:. Similar to the ""R",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx:3094,adapt,adaptive,3094,tmva/tmva/src/MethodBDT.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBDT.cxx,1,['adapt'],['adaptive']
Energy Efficiency,"e used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac; M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac; M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac; M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example - script Transform.c:; ///; /// \image html spectrumtransform_transform_image002.jpg Fig. 1 Original gamma-ray spectrum; /// \image html spectrumtransform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform; ///; /// #### Script:; /// Example to illustrate Transform function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Transform.C`; ///; /// ~~~ {.cpp}; /// #include <TSpectrum>; /// #include <TSpectrumTransform>; /// void Transform() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /// Double_t xmax = (Double_t)nbins;; /// Double_t * source = new Double_t[nbins];; /// Double_t * dest = new Double_t[nbins];; /// TH1F *h = new TH1F(""h"",""Transformed spectrum using Cosine transform"",nbins,xmin,xmax);; /// TFile *f = new TFile(""spectra/TSpectrum.root"");; /// h=(TH1F*) f->Get(""transform1;1"");; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1960,adapt,adaptive,1960,hist/spectrum/src/TSpectrumTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx,1,['adapt'],['adaptive']
Energy Efficiency,"e {; border-collapse: collapse;; }; .light-row {; background: #ffffff;; border: 1px solid #dbdbdb;; border-left: none;; border-right: none;; }; .light-row-bold {; background: #ffffff;; border: 1px solid #dbdbdb;; border-left: none;; border-right: none;; font-weight: bold;; }; .column-entry {; text-align: left;; }; .column-entry-bold {; font-weight: bold;; text-align: left;; }; .column-entry-yellow {; text-align: left;; background-color: #ffffd0;; }; .column-entry-yellow:hover, tr:hover .column-entry-yellow {; background-color: #fffff0;; }; .column-entry-red {; text-align: left;; background-color: #ffd0d0;; }; .column-entry-red:hover, tr:hover .column-entry-red {; background-color: #fff0f0;; }; .column-entry-gray {; text-align: left;; background-color: #fbfbfb;; }; .column-entry-gray:hover, tr:hover .column-entry-gray {; background-color: #f0f0f0;; }; .column-entry-green {; text-align: left;; background-color: #d0ffd0;; }; .column-entry-green:hover, tr:hover .column-entry-green {; background-color: #f0fff0;; }; .line-number {; text-align: right;; color: #aaa;; }; .covered-line {; text-align: right;; color: #0080ff;; }; .uncovered-line {; text-align: right;; color: #ff3300;; }; .tooltip {; position: relative;; display: inline;; background-color: #b3e6ff;; text-decoration: none;; }; .tooltip span.tooltip-content {; position: absolute;; width: 100px;; margin-left: -50px;; color: #FFFFFF;; background: #000000;; height: 30px;; line-height: 30px;; text-align: center;; visibility: hidden;; border-radius: 6px;; }; .tooltip span.tooltip-content:after {; content: '';; position: absolute;; top: 100%;; left: 50%;; margin-left: -8px;; width: 0; height: 0;; border-top: 8px solid #000000;; border-right: 8px solid transparent;; border-left: 8px solid transparent;; }; :hover.tooltip span.tooltip-content {; visibility: visible;; opacity: 0.8;; bottom: 30px;; left: 50%;; z-index: 999;; }; th, td {; vertical-align: top;; padding: 2px 8px;; border-collapse: collapse;; border-right: solid",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-cov/SourceCoverageViewHTML.cpp:1626,green,green,1626,interpreter/llvm-project/llvm/tools/llvm-cov/SourceCoverageViewHTML.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-cov/SourceCoverageViewHTML.cpp,1,['green'],['green']
Energy Efficiency,"eScheduler(MachineSchedContext *C) {; // return new CustomMachineScheduler(C);; // }; //; // The default scheduler, ScheduleDAGMILive, builds the DAG and drives list; // scheduling while updating the instruction stream, register pressure, and live; // intervals. Most targets don't need to override the DAG builder and list; // scheduler, but subtargets that require custom scheduling heuristics may; // plugin an alternate MachineSchedStrategy. The strategy is responsible for; // selecting the highest priority node from the list:; //; // ScheduleDAGInstrs *<Target>PassConfig::; // createMachineScheduler(MachineSchedContext *C) {; // return new ScheduleDAGMILive(C, CustomStrategy(C));; // }; //; // The DAG builder can also be customized in a sense by adding DAG mutations; // that will run after DAG building and before list scheduling. DAG mutations; // can adjust dependencies based on target-specific knowledge or add weak edges; // to aid heuristics:; //; // ScheduleDAGInstrs *<Target>PassConfig::; // createMachineScheduler(MachineSchedContext *C) {; // ScheduleDAGMI *DAG = createGenericSchedLive(C);; // DAG->addMutation(new CustomDAGMutation(...));; // return DAG;; // }; //; // A target that supports alternative schedulers can use the; // MachineSchedRegistry to allow command line selection. This can be done by; // implementing the following boilerplate:; //; // static ScheduleDAGInstrs *createCustomMachineSched(MachineSchedContext *C) {; // return new CustomMachineScheduler(C);; // }; // static MachineSchedRegistry; // SchedCustomRegistry(""custom"", ""Run my target's custom scheduler"",; // createCustomMachineSched);; //; //; // Finally, subtargets that don't need to implement custom heuristics but would; // like to configure the GenericScheduler's policy for a given scheduler region,; // including scheduling direction and register pressure tracking policy, can do; // this:; //; // void <SubTarget>Subtarget::; // overrideSchedPolicy(MachineSchedPolicy &Policy,; // unsign",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:1900,Schedul,ScheduleDAGInstrs,1900,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,2,['Schedul'],"['ScheduleDAGInstrs', 'ScheduleDAGMI']"
Energy Efficiency,"eadblock, and finally across teams on; /// the NVPTX device.; ///; /// Introduction to Decoupling; ///; /// We would like to decouple the compiler and the runtime so that the; /// latter is ignorant of the reduction variables (number, data types); /// and the reduction operators. This allows a simpler interface; /// and implementation while still attaining good performance.; ///; /// Pseudocode for the aforementioned OpenMP program generated by the; /// compiler is as follows:; ///; /// 1. Create private copies of reduction variables on each OpenMP; /// thread: 'foo_private', 'bar_private'; /// 2. Each OpenMP thread reduces the chunk of 'A' and 'B' assigned; /// to it and writes the result in 'foo_private' and 'bar_private'; /// respectively.; /// 3. Call the OpenMP runtime on the GPU to reduce within a team; /// and store the result on the team master:; ///; /// __kmpc_nvptx_parallel_reduce_nowait_v2(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn); ///; /// where:; /// struct ReduceData {; /// double *foo;; /// double *bar;; /// } reduceData; /// reduceData.foo = &foo_private; /// reduceData.bar = &bar_private; ///; /// 'shuffleReduceFn' and 'interWarpCpyFn' are pointers to two; /// auxiliary functions generated by the compiler that operate on; /// variables of type 'ReduceData'. They aid the runtime perform; /// algorithmic steps in a data agnostic manner.; ///; /// 'shuffleReduceFn' is a pointer to a function that reduces data; /// of type 'ReduceData' across two OpenMP threads (lanes) in the; /// same warp. It takes the following arguments as input:; ///; /// a. variable of type 'ReduceData' on the calling lane,; /// b. its lane_id,; /// c. an offset relative to the current lane_id to generate a; /// remote_lane_id. The remote lane contains the second; /// variable of type 'ReduceData' that is to be reduced.; /// d. an algorithm version parameter determining which reduction; /// algorithm to use.; ///; /// 'shuffleReduceFn' retrieves data from the remote ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:1850,reduce,reduceData,1850,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,4,"['Reduce', 'reduce']","['ReduceData', 'reduceData']"
Energy Efficiency,"eas with a dotted background cannot be computed at compile-time; // if they are present, making it required to have all three of fp, bp and; // sp to be set up to be able to access all contents in the frame areas,; // assuming all of the frame areas are non-empty.; //; // For most functions, some of the frame areas are empty. For those functions,; // it may not be necessary to set up fp or bp:; // * A base pointer is definitely needed when there are both VLAs and local; // variables with more-than-default alignment requirements.; // * A frame pointer is definitely needed when there are local variables with; // more-than-default alignment requirements.; //; // For Darwin platforms the frame-record (fp, lr) is stored at the top of the; // callee-saved area, since the unwind encoding does not allow for encoding; // this dynamically and existing tools depend on this layout. For other; // platforms, the frame-record is stored at the bottom of the (gpr) callee-saved; // area to allow SVE stack objects (allocated directly below the callee-saves,; // if available) to be accessed directly from the framepointer.; // The SVE spill/fill instructions have VL-scaled addressing modes such; // as:; // ldr z8, [fp, #-7 mul vl]; // For SVE the size of the vector length (VL) is not known at compile-time, so; // '#-7 mul vl' is an offset that can only be evaluated at runtime. With this; // layout, we don't need to add an unscaled offset to the framepointer before; // accessing the SVE object in the frame.; //; // In some cases when a base pointer is not strictly needed, it is generated; // anyway when offsets from the frame pointer to access local variables become; // so large that the offset can't be encoded in the immediate fields of loads; // or stores.; //; // Outgoing function arguments must be at the bottom of the stack frame when; // calling another function. If we do not have variable-sized stack objects, we; // can allocate a ""reserved call frame"" area at the bottom of the loca",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:3913,allocate,allocated,3913,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['allocate'],['allocated']
Energy Efficiency,"ect, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; /// \file; /// This file implements a pass that converts X86 cmov instructions into; /// branches when profitable. This pass is conservative. It transforms if and; /// only if it can guarantee a gain with high confidence.; ///; /// Thus, the optimization applies under the following conditions:; /// 1. Consider as candidates only CMOVs in innermost loops (assume that; /// most hotspots are represented by these loops).; /// 2. Given a group of CMOV instructions that are using the same EFLAGS def; /// instruction:; /// a. Consider them as candidates only if all have the same code condition; /// or the opposite one to prevent generating more than one conditional; /// jump per EFLAGS def instruction.; /// b. Consider them as candidates only if all are profitable to be; /// converted (assume that one bad conversion may cause a degradation).; /// 3. Apply conversion only for loops that are found profitable and only for; /// CMOV candidates that were found profitable.; /// a. A loop is considered profitable only if conversion will reduce its; /// depth cost by some threshold.; /// b. CMOV is considered profitable if the cost of its condition is higher; /// than the average cost of its true-value and false-value by 25% of; /// branch-misprediction-penalty. This assures no degradation even with; /// 25% branch misprediction.; ///; /// Note: This pass is assumed to run on SSA machine code.; //; //===----------------------------------------------------------------------===//; //; // External interfaces:; // FunctionPass *llvm::createX86CmovConverterPass();; // bool X86CmovConverterPass::runOnMachineFunction(MachineFunction &MF);; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp:1419,reduce,reduce,1419,interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp,1,['reduce'],['reduce']
Energy Efficiency,"ect; but you can to use overloaded operators [],<< and >> <br>; to work with ROOTR like work with streams of data.<br>. TRInterface class can not be instantiated directly, but you can create objects using the static methods; TRInterface& Instance() and TRInterface* InstancePtr() to create your own objects.<br>; <br>; </p>; Show an example below:; Create an exponential fit, the idea is to create a set of numbers x,y with noise from ROOT,; pass them to R and fit the data to \f$ x^3 \f$, get the fitted coefficient(power) and plot the data,; the known function and the fitted function.; \code{.cpp}. TCanvas *c1 = new TCanvas(""c1"",""Curve Fit"",700,500);; c1->SetGrid();. // draw a frame for multiples graphs; TMultiGraph *mg = new TMultiGraph();. // create the first graph (points with gaussian noise); const Int_t n = 24;; Double_t x[n] ;; Double_t y[n] ;; //Generate points along a X^3 with noise; TRandom rg;; rg.SetSeed(520);; for (Int_t i = 0; i < n; i++) {; x[i] = rg.Uniform(0, 1);; y[i] = TMath::Power(x[i], 3) + rg.Gaus() * 0.06;; }. TGraph *gr1 = new TGraph(n,x,y);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(8);; gr1->SetMarkerSize(1);; mg->Add(gr1);. // create second graph; TF1 *f_known=new TF1(""f_known"",""pow(x,3)"",0,1);; TGraph *gr2 = new TGraph(f_known);; gr2->SetMarkerColor(kRed);; gr2->SetMarkerStyle(8);; gr2->SetMarkerSize(1);; mg->Add(gr2);. //passing x and y values to R for fitting; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; r[""x""]<<TVectorD(n, x);; r[""y""]<<TVectorD(n, y);; //creating a R data frame; r<<""ds<-data.frame(x=x,y=y)"";; //fitting x and y to X^power using Nonlinear Least Squares; r<<""m <- nls(y ~ I(x^power),data = ds, start = list(power = 1),trace = T)"";; //getting the fitted value (power); Double_t power;; r[""summary(m)$coefficients[1]""]>>power;. TF1 *f_fitted=new TF1(""f_fitted"",""pow(x,[0])"",0,1);; f_fitted->SetParameter(0,power);; //plotting the fitted function; TGraph *gr3 = new TGraph(f_fitted);; gr3->SetMarkerColor(kGreen);; g",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:1809,Power,Power,1809,bindings/r/inc/TRInterface.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h,1,['Power'],['Power']
Energy Efficiency,"ectories are supported. In case; /// subdirectories are present the behavior is unspecified - events *might* be; /// passed to Receiver on macOS (due to FSEvents being used) while they; /// *probably* won't be passed on Linux (due to inotify being used).; ///; /// Known potential inconsistencies; /// - For files that are deleted befor the initial scan processed them, clients; /// might receive Removed notification without any prior Added notification.; /// - Multiple notifications might be produced when a file is added to the; /// watched directory during the initial scan. We are choosing the lesser evil; /// here as the only known alternative strategy would be to invalidate the; /// watcher instance and force user to create a new one whenever filesystem; /// event occurs during the initial scan but that would introduce continuous; /// restarting failure mode (watched directory is not always ""owned"" by the same; /// process that is consuming it). Since existing clients can handle duplicate; /// events well, we decided for simplicity.; ///; /// Notifications are provided only for changes done through local user-space; /// filesystem interface. Specifically, it's unspecified if notification would; /// be provided in case of a:; /// - a file mmap-ed and changed; /// - a file changed via remote (NFS) or virtual (/proc) FS access to monitored; /// directory; /// - another filesystem mounted to the watched directory; ///; /// No support for LLVM VFS.; ///; /// It is unspecified whether notifications for files being deleted are sent in; /// case the whole watched directory is sent.; ///; /// Directories containing ""too many"" files and/or receiving events ""too; /// frequently"" are not supported - if the initial scan can't be finished before; /// the watcher instance gets invalidated (see WatcherGotInvalidated) there's no; /// good error handling strategy - the only option for client is to destroy the; /// watcher, restart watching with new instance and hope it won't repeat.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/DirectoryWatcher/DirectoryWatcher.h:1782,monitor,monitored,1782,interpreter/llvm-project/clang/include/clang/DirectoryWatcher/DirectoryWatcher.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/DirectoryWatcher/DirectoryWatcher.h,1,['monitor'],['monitored']
Energy Efficiency,"ectrum3.root"");; /// decon_in=(TH3F*) f->Get(""decon_in;1"");; /// decon_resp=(TH3F*) f->Get(""decon_resp;1"");; /// TCanvas *Deconvolution = new TCanvas(""Deconvolution"",""Deconvolution of 3-dimensional spectra"",10,10,1000,700);; /// TSpectrum3 *s = new TSpectrum3();; /// for (i = 0; i < nbinsx; i++){; /// for (j = 0; j < nbinsy; j++){; /// for (k = 0; k < nbinsz; k++){; /// source[i][j][k] = decon_in->GetBinContent(i + 1,j + 1,k + 1);; /// resp[i][j][k] = decon_resp->GetBinContent(i + 1,j + 1,k + 1);; /// }; /// }; /// }; /// s->Deconvolution(source,resp,nbinsx,nbinsy,nbinsz,100,1,1);; /// for (i = 0; i < nbinsx; i++){; /// for (j = 0; j < nbinsy; j++){; /// for (k = 0; k < nbinsz; k++){; /// decon_in->SetBinContent(i + 1,j + 1,k + 1, source[i][j][k]);; /// }; /// }; /// }; /// decon_in->Draw("""");; /// }; /// ~~~; ///; /// ### Example 2 - script Decon_hr.c :; ///; /// This example illustrates repeated; /// Gold deconvolution with boosting. After every 10 iterations we apply power; /// function with exponent = 2 to the spectrum given in Fig. 2.; ///; /// \image html spectrum3_deconvolution_image006.jpg Fig. 4 Spectrum from Fig. 2 after boosted deconvolution (10 iterations repeated 10 times). It decomposes completely cluster of peaks from Fig 2.; ///; /// #### Script:; ///; /// Example to illustrate the Gold deconvolution (class TSpectrum3).; /// To execute this example, do:; ///; /// `root > .x Decon3_hr.C`; ///; /// ~~~ {.cpp}; /// void Decon3_hr() {; /// Int_t i, j, k;; /// Int_t nbinsx = 32;; /// Int_t nbinsy = 32;; /// Int_t nbinsz = 32;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Int_t zmin = 0;; /// Int_t zmax = nbinsz;; /// Double_t*** source = new Double_t**[nbinsx];; /// Double_t*** resp = new Double_t**[nbinsx];; /// for(i=0;i<nbinsx;i++){; /// source[i]=new Double_t*[nbinsy];; /// for(j=0;j<nbinsy;j++); /// source[i][j]=new Double_t[nbinsz];; /// }; /// for(i=0;i<nbinsx;i++){; /// resp[i]=new Double_t*[nbin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:4966,power,power,4966,hist/spectrum/src/TSpectrum3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx,1,['power'],['power']
Energy Efficiency,"ectrum:$Id$; // Author: Miroslav Morhac 17/01/2006; /** \class TSpectrum2; \ingroup Spectrum; \brief Advanced 2-dimensional spectra processing; \author Miroslav Morhac. \legacy{TSpectrum2, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. This class contains advanced spectra processing functions. - One-dimensional background estimation functions; - Two-dimensional background estimation functions; - One-dimensional smoothing functions; - Two-dimensional smoothing functions; - One-dimensional deconvolution functions; - Two-dimensional deconvolution functions; - One-dimensional peak search functions; - Two-dimensional peak search functions. The algorithms in this class have been published in the following references:. 1. M.Morhac et al.: Background elimination methods for multidimensional coincidence gamma-ray spectra. Nuclear Instruments and Methods in Physics Research A 401 (1997) 113-132.; 2. M.Morhac et al.: Efficient one- and two-dimensional Gold deconvolution and its application to gamma-ray spectra decomposition. Nuclear Instruments and Methods in Physics Research A 401 (1997) 385-408.; 3. M.Morhac et al.: Identification of peaks in multidimensional coincidence gamma-ray spectra. Nuclear Instruments and Methods in Research Physics A 443(2000), 108-125. These NIM papers are also available as doc or ps files from:. - [SpectrumDec.ps.gz](ftp://root.cern/root/SpectrumDec.ps.gz); - [SpectrumSrc.ps.gz](ftp://root.cern/root/SpectrumSrc.ps.gz); - [SpectrumBck.ps.gz](ftp://root.cern/root/SpectrumBck.ps.gz). See also the; [online documentation](https://root.cern/guides/tspectrum-manual) and; [tutorials](https://root.cern/doc/master/group__tutorial__spectrum.html). All the figures in this page were prepared using the DaqProVis; system, Data Acquisition, Processing and Visualization system,; developed at the Institute of Physics, Slovak Academy of Sciences, Bratislava,; Slovakia.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:1029,Efficient,Efficient,1029,hist/spectrum/src/TSpectrum2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx,1,['Efficient'],['Efficient']
Energy Efficiency,"ects returned by the corresponding Map execution to ""squash"" them; /// into a single object. This function should be independent of the size of; /// the vector returned by Map due to optimization of the number of chunks.; ///; /// If this function is a binary operator, the ""squashing"" will be performed in parallel.; /// This is exclusive to ROOT::TThreadExecutor and not any other ROOT::TExecutorCRTP-derived classes.\n; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// This may be useful to avoid the overhead introduced when running really short tasks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::TThreadExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int> &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::TThreadExecutor pool; auto hist = pool.MapReduce(CreateAndFillHists, 10, PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////; /*; VERY IMPORTANT NOTE ABOUT WORK ISOLATION. We enclose the parallel_for and parallel_reduce invocations in a; task_arena::isolate because we want to prevent a thread to start executing an; outer task when the task it's running spawned subtasks, e.g. with a parallel_for,; and is waiting on inner tasks to be completed. While this change has a negligible performance impact, it has benefits for; several applications, for example big parallelised HEP frameworks and; RDataFrame analyses.; - For HEP Frameworks, without work isolation, it can happen that a huge; framework task is pulled by a yielding ROOT task.; This causes to delay the processing of the event which is interrupted by the; long task.; For example, work isolation avoids that during the wait due to the parallel; flushing of baskets, a very long simulation task is pulled in by the idle task.; - For RDataFrame analyses we want to guarantee that each entry is processed from; the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx:3728,Reduce,ReduceObjects,3728,core/imt/src/TThreadExecutor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TThreadExecutor.cxx,1,['Reduce'],['ReduceObjects']
Energy Efficiency,"ecture to the scheduler in the form of properties. It also; /// optionally refers to scheduler resource tables and itinerary; /// tables. Scheduler resource tables model the latency and cost for each; /// instruction type. Itinerary tables are an independent mechanism that; /// provides a detailed reservation table describing each cycle of instruction; /// execution. Subtargets may define any or all of the above categories of data; /// depending on the type of CPU and selected scheduler.; ///; /// The machine independent properties defined here are used by the scheduler as; /// an abstract machine model. A real micro-architecture has a number of; /// buffers, queues, and stages. Declaring that a given machine-independent; /// abstract property corresponds to a specific physical property across all; /// subtargets can't be done. Nonetheless, the abstract model is; /// useful. Futhermore, subtargets typically extend this model with processor; /// specific resources to model any hardware features that can be exploited by; /// scheduling heuristics and aren't sufficiently represented in the abstract.; ///; /// The abstract pipeline is built around the notion of an ""issue point"". This; /// is merely a reference point for counting machine cycles. The physical; /// machine will have pipeline stages that delay execution. The scheduler does; /// not model those delays because they are irrelevant as long as they are; /// consistent. Inaccuracies arise when instructions have different execution; /// delays relative to each other, in addition to their intrinsic latency. Those; /// special cases can be handled by TableGen constructs such as, ReadAdvance,; /// which reduces latency when reading data, and ReleaseAtCycles, which consumes; /// a processor resource when writing data for a number of abstract; /// cycles.; ///; /// TODO: One tool currently missing is the ability to add a delay to; /// ReleaseAtCycles. That would be easy to add and would likely cover all cases; /// curr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h:1189,schedul,scheduling,1189,interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,1,['schedul'],['scheduling']
Energy Efficiency,"ed in the array is allocated only once in the lifetime of the; clones array. All objects must be of the same class. For the rest; this class has the same properties as TObjArray. To reduce the very large number of new and delete calls in large; loops like this (O(100000) x O(10000) times new/delete):; ~~~ {.cpp}; TObjArray a(10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; a[i] = new TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete();; }; ~~~; One better uses a TClonesArray which reduces the number of; new/delete calls to only O(10000):; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; new(a[i]) TTrack(x,y,z,...);; ...; ...; }; ...; a.Delete(); // or a.Clear() or a.Clear(""C""); }; ~~~; To reduce the number of call to the constructor (especially useful; if the user class requires memory allocation), the object can be; added (and constructed when needed) using ConstructedAt which only; calls the constructor once per slot.; ~~~ {.cpp}; TClonesArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *alw",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:1419,reduce,reduce,1419,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,1,['reduce'],['reduce']
Energy Efficiency,"ed to be generated up to that point, also across different computation graphs. Also make sure not to count the just-in-time compilation time (which happens once before the event loop and does not depend on the size of the dataset) as part of the event loop runtime (which scales with the size of the dataset). RDataFrame has an experimental logging feature that simplifies measuring the time spent in just-in-time compilation and in the event loop (as well as providing some more interesting information). See [Activating RDataFrame execution logs](\ref rdf-logging). ### Memory usage. There are two reasons why RDataFrame may consume more memory than expected. Firstly, each result is duplicated for each worker thread, which e.g. in case of many (possibly multi-dimensional) histograms with fine binning can result in visible memory consumption during the event loop. The thread-local copies of the results are destroyed when the final result is produced. Reducing the number of threads or using coarser binning will reduce the memory usage. Secondly, just-in-time compilation of string expressions or non-templated actions (see the previous paragraph) causes Cling, ROOT's C++ interpreter, to allocate some memory for the generated code that is only released at the end of the application. This commonly results in memory usage creep in long-running applications that create many RDataFrames one after the other. Possible mitigations include creating and running each RDataFrame event loop in a sub-process, or booking all operations for all different RDataFrame computation graphs before the first event loop is triggered, so that the interpreter is invoked only once for all computation graphs:. ~~~{.cpp}; // assuming df1 and df2 are separate computation graphs, do:; auto h1 = df1.Histo1D(""x"");; auto h2 = df2.Histo1D(""y"");; h1->Draw(); // we just-in-time compile everything needed by df1 and df2 here; h2->Draw(""SAME"");. // do not:; auto h1 = df1.Histo1D(""x"");; h1->Draw(); // we just-in-time",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:53509,reduce,reduce,53509,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['reduce'],['reduce']
Energy Efficiency,"ed to; /// hold the compressed buffer.; ///; /// - Reservation of the corresponding space in the file by looking; /// in the TFree list of free blocks of the file.; ///; /// - The buffer is written to the file.; ///; /// Bufsize can be given to force a given buffer size to write this object.; /// By default, the buffersize will be taken from the average buffer size; /// of all objects written to the current file so far.; ///; /// If a name is specified, it will be the name of the key.; /// If name is not given, the name of the key will be the name as returned; /// by GetName().; ///; /// The option can be a combination of: kSingleKey, kOverwrite or kWriteDelete; /// Using the kOverwrite option a previous key with the same name is; /// overwritten. The previous key is deleted before writing the new object.; /// Using the kWriteDelete option a previous key with the same name is; /// deleted only after the new object has been written. This option; /// is safer than kOverwrite but it is slower.; /// NOTE: Neither kOverwrite nor kWriteDelete reduces the size of a TFile--; /// the space is simply freed up to be overwritten; in the case of a TTree,; /// it is more complicated. If one opens a TTree, appends some entries,; /// then writes it out, the behaviour is effectively the same. If, however,; /// one creates a new TTree and writes it out in this way,; /// only the metadata is replaced, effectively making the old data invisible; /// without deleting it. TTree::Delete() can be used to mark all disk space; /// occupied by a TTree as free before overwriting its metadata this way.; /// The kSingleKey option is only used by TCollection::Write() to write; /// a container with a single key instead of each object in the container; /// with its own key.; ///; /// An object is read from the file into memory via TKey::Read() or; /// via TObject::Read().; ///; /// The function returns the total number of bytes written to the file.; /// It returns 0 if the object cannot be written.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:1697,reduce,reduces,1697,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,1,['reduce'],['reduces']
Energy Efficiency,"ed.; /// if ncolors = 69 and colors=0, a Beach palette is used.; /// if ncolors = 70 and colors=0, a Black Body palette is used.; /// if ncolors = 71 and colors=0, a Blue Green Yellow palette is used.; /// if ncolors = 72 and colors=0, a Brown Cyan palette is used.; /// if ncolors = 73 and colors=0, a CMYK palette is used.; /// if ncolors = 74 and colors=0, a Candy palette is used.; /// if ncolors = 75 and colors=0, a Cherry palette is used.; /// if ncolors = 76 and colors=0, a Coffee palette is used.; /// if ncolors = 77 and colors=0, a Dark Rain Bow palette is used.; /// if ncolors = 78 and colors=0, a Dark Terrain palette is used.; /// if ncolors = 79 and colors=0, a Fall palette is used.; /// if ncolors = 80 and colors=0, a Fruit Punch palette is used.; /// if ncolors = 81 and colors=0, a Fuchsia palette is used.; /// if ncolors = 82 and colors=0, a Grey Yellow palette is used.; /// if ncolors = 83 and colors=0, a Green Brown Terrain palette is used.; /// if ncolors = 84 and colors=0, a Green Pink palette is used.; /// if ncolors = 85 and colors=0, an Island palette is used.; /// if ncolors = 86 and colors=0, a Lake palette is used.; /// if ncolors = 87 and colors=0, a Light Temperature palette is used.; /// if ncolors = 88 and colors=0, a Light Terrain palette is used.; /// if ncolors = 89 and colors=0, a Mint palette is used.; /// if ncolors = 90 and colors=0, a Neon palette is used.; /// if ncolors = 91 and colors=0, a Pastel palette is used.; /// if ncolors = 92 and colors=0, a Pearl palette is used.; /// if ncolors = 93 and colors=0, a Pigeon palette is used.; /// if ncolors = 94 and colors=0, a Plum palette is used.; /// if ncolors = 95 and colors=0, a Red Blue palette is used.; /// if ncolors = 96 and colors=0, a Rose palette is used.; /// if ncolors = 97 and colors=0, a Rust palette is used.; /// if ncolors = 98 and colors=0, a Sandy Terrain palette is used.; /// if ncolors = 99 and colors=0, a Sienna palette is used.; /// if ncolors = 100 and colors=0, a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:3622,Green,Green,3622,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,1,['Green'],['Green']
Energy Efficiency,"efficients \f$ c_l\f$ is calculated by the class. ## Limiting the Number of Terms; As always when dealing with fits, there's a real chance of *over fitting*. As is well-known, it's; always possible to fit an \f$ N-1\f$ polynomial in \f$ x\f$ to \f$ N\f$ points \f$ (x,y)\f$ with; \f$\chi^2 = 0\f$, but the polynomial is not likely to fit new data at all [1].; Therefore, the user is asked to provide an upper limit, \f$ L_{max}\f$ to the number of terms in; \f$ D_p\f$ (TMultiDimFit::SetMaxTerms). However, since there's an infinite number of \f$ F_l\f$ to choose from, the; user is asked to give the maximum power. \f$ P_{max,i}\f$, of each variable; \f$ x_i\f$ to be considered in the minimization of \f$ S\f$ (TMultiDimFit::SetMaxPowers). One way of obtaining values for the maximum power in variable \f$ i\f$, is; to perform a regular fit to the dependent quantity \f$ D\f$, using a; polynomial only in \f$ x_i\f$. The maximum power is \f$ P_{max,i}\f$ is then the; power that does not significantly improve the one-dimensional; least-square fit over \f$ x_i\f$ to \f$ D\f$ [5]. There are still a huge amount of possible choices for \f$ F_l\f$; in fact; there are \f$\prod_{i=1}^{N} (P_{max,i} + 1)\f$ possible; choices. Obviously we need to limit this. To this end, the user is; asked to set a *power control limit*, \f$ Q\f$ (TMultiDimFit::SetPowerLimit), and a function; \f$ F_l\f$ is only accepted if; \f[; Q_l = \sum_{i=1}^{N} \frac{P_{li}}{P_{max,i}} < Q; \f]; where \f$ P_{li}\f$ is the leading power of variable \f$ x_i\f$ in function \f$ F_l\f$ (TMultiDimFit::MakeCandidates).; So the number of functions increase with \f$ Q\f$ (1, 2 is fine, 5 is way out). ## Gram-Schmidt Orthogonalisation; To further reduce the number of functions in the final expression,; only those functions that significantly reduce \f$ S\f$ is chosen. What; `significant' means, is chosen by the user, and will be; discussed below (see [2.3](TMultiFimFit.html#sec:selectiondetail)). The functions \f$ F_l\f$ are",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:4713,power,power,4713,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,2,['power'],['power']
Energy Efficiency,"efore ORDER+1 pointers; to sub-trees. The keys are numbered and indexed 1 to ORDER while the; pointers are numbered and indexed 0 to ORDER. The 0th ptr points to the; sub-tree of all elements that are less than key[1]. Ptr[1] points to the; sub-tree that contains all the elements greater than key[1] and less than; key[2]. etc. The array of pointers and keys is allocated as ORDER+1; pairs of keys and nodes, meaning that one key field (key[0]) is not used; and therefore wasted. Given that the number of interior nodes is; small, that this waste allows fewer cases of special code, and that it; is useful in certain of the methods, it was felt to be a worthwhile waste. The size of the exterior nodes (leaf nodes) does not need to be related to; the size of the interior nodes at all. Since leaf nodes contain only; keys, they may be as large or small as we like independent of the size; of the interior nodes. For no particular reason other than it seems like; a good idea, we will allocate 2*(ORDER+1) keys in each leaf node, and they; will be numbered and indexed from 0 to 2*ORDER+1. It does have the advantage; of keeping the size of the leaf and interior arrays the same, so that if we; find allocation and de-allocation of these arrays expensive, we can modify; their allocation to use a garbage ring, or something. Both of these numbers will be run-time constants associated with each tree; (each tree at run-time can be of a different order). The variable ""order""; is the order of the tree, and the inclusive upper limit on the indices of; the keys in the interior nodes. The variable ""order2"" is the inclusive; upper limit on the indices of the leaf nodes, and is designed; ~~~ {.cpp}; (1) to keep the sizes of the two kinds of nodes the same;; (2) to keep the expressions involving the arrays of keys looking; somewhat the same: lower limit upper limit; for inner nodes: 1 order; for leaf nodes: 0 order2; Remember that index 0 of the inner nodes is special.; ~~~; Currently, order2 = 2*(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:4648,allocate,allocate,4648,core/cont/src/TBtree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx,1,['allocate'],['allocate']
Energy Efficiency,"ematical formulation of the 2-dimensional convolution system is; ///; ///\f[; /// y(i_1,i_2) = \sum_{k_1=0}^{N_1-1} \sum_{k_2=0}^{N_2-1} h(i_1-k_1,i_2-k_2)x(k_1,k_2); ///\f]; ///\f[; /// i_1 = 0,1,2, ... ,N_1-1, i_2 = 0,1,2, ... ,N_2-1; ///\f]; ///; /// where h(i,j) is the impulse response function, x, y are input and output; /// matrices, respectively, \f$ N_1, N_2\f$ are the lengths of x and h matrices; ///; /// - let us assume that we know the response and the output matrices (spectra) of the above given system.; /// - the deconvolution represents solution of the overdetermined system of linear equations, i.e., the; /// calculation of the matrix x.; /// - from numerical stability point of view the operation of deconvolution is; /// extremely critical (ill-posed problem) as well as time consuming operation.; /// - the Gold deconvolution algorithm proves to work very well even for 2-dimensional; /// systems. Generalisation of the algorithm for 2-dimensional systems was presented in [1], [2].; /// - for Gold deconvolution algorithm as well as for boosted deconvolution algorithm we refer also to TSpectrum; ///; /// #### References:; ///; /// [1] M. Morhac;, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo.:; /// Efficient one- and two-dimensional Gold deconvolution and its application to; /// gamma-ray spectra decomposition. NIM, A401 (1997) 385-408.; ///; /// [2] Morhac; M., Matouoek V., Kliman J., Efficient algorithm of multidimensional; /// deconvolution and its application to nuclear data processing, Digital Signal; /// Processing 13 (2003) 144.; ///; /// ### Example 5 - Deconvolution2_1.c; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Deconvolution2_1.C; /// End_Macro; ///; /// ### Example 6 - Deconvolution2_2.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Deconvolution2_2.C; /// End_Macro; ///; /// ### Example 7 - Deconvolution2_HR.C; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Deconvolution2_HR.C; /// End_Macro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx:2029,Efficient,Efficient,2029,hist/spectrum/src/TSpectrum2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2.cxx,2,['Efficient'],['Efficient']
Energy Efficiency,"eme allows extensive memory checking and usage statistics //; // gathering and an easy way to access shared memory segments. //; // Memory checking is by default enabled and usage statistics is //; // gathered. Using the resource (in .rootrc): Root.MemStat one can //; // toggle statistics gathering on or off. More specifically on can trap //; // the allocation of a block of memory of a certain size. This can be //; // specified using the resource: Root.MemStat.size, using the resource //; // Root.MemStat.cnt one can specify after how many allocations of //; // this size the trap should occur. //; // Set the compile option R__NOSTATS to de-activate all memory checking //; // statistics gathering in the system. //; // //; // When memory checking is enabled the following happens during //; // allocation: //; // - each allocation results in the allocation of 9 extra bytes: //; // 2 words in front and 1 byte at the end of the memory chunck //; // returned to the caller. //; // - the allocated memory is set to 0. //; // - the size of the chunck is stored in the first word. The second //; // word is left empty (for alignment). //; // - the last byte is initialized to MEM_MAGIC. //; // //; // And during de-allocation this happens: //; // - first the size if the block is checked. It should be >0 and //; // <= than any block allocated up to that moment. If not a Fatal //; // error is generated. //; // - the MEM_MAGIC byte at the end of the block is checked. When not //; // there, the memory has been overwritten and a Fatal error is //; // generated. //; // - memory block is reset to 0. //; // //; // Although this does not replace powerful tools like Purify, it is a //; // good first line of protection. //; // //; // Independent of any compile option settings the new, and ReAlloc //; // functions always set the memory to 0. //; // //; // The powerful MEM_DEBUG and MEM_STAT macros were originally borrowed //; // from the ET++ framework. //; // //; ///////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx:1703,allocate,allocated,1703,core/newdelete/src/NewDelete.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/newdelete/src/NewDelete.cxx,1,['allocate'],['allocated']
Energy Efficiency,"en machine-independent; /// abstract property corresponds to a specific physical property across all; /// subtargets can't be done. Nonetheless, the abstract model is; /// useful. Futhermore, subtargets typically extend this model with processor; /// specific resources to model any hardware features that can be exploited by; /// scheduling heuristics and aren't sufficiently represented in the abstract.; ///; /// The abstract pipeline is built around the notion of an ""issue point"". This; /// is merely a reference point for counting machine cycles. The physical; /// machine will have pipeline stages that delay execution. The scheduler does; /// not model those delays because they are irrelevant as long as they are; /// consistent. Inaccuracies arise when instructions have different execution; /// delays relative to each other, in addition to their intrinsic latency. Those; /// special cases can be handled by TableGen constructs such as, ReadAdvance,; /// which reduces latency when reading data, and ReleaseAtCycles, which consumes; /// a processor resource when writing data for a number of abstract; /// cycles.; ///; /// TODO: One tool currently missing is the ability to add a delay to; /// ReleaseAtCycles. That would be easy to add and would likely cover all cases; /// currently handled by the legacy itinerary tables.; ///; /// A note on out-of-order execution and, more generally, instruction; /// buffers. Part of the CPU pipeline is always in-order. The issue point, which; /// is the point of reference for counting cycles, only makes sense as an; /// in-order part of the pipeline. Other parts of the pipeline are sometimes; /// falling behind and sometimes catching up. It's only interesting to model; /// those other, decoupled parts of the pipeline if they may be predictably; /// resource constrained in a way that the scheduler can exploit.; ///; /// The LLVM machine model distinguishes between in-order constraints and; /// out-of-order constraints so that the target's",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h:1831,reduce,reduces,1831,interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,1,['reduce'],['reduces']
Energy Efficiency,"eof(S2*), MEMBER_OF(1); // &(ps->ps), &(ps->ps->ps), sizeof(S2*), MEMBER_OF(1) | PTR_AND_OBJ | FROM; //; // map(ps->ps->ps->ps); // ps, &(ps->ps), sizeof(S2*), TARGET_PARAM; // ps, &(ps->ps), sizeof(S2*), MEMBER_OF(1); // &(ps->ps), &(ps->ps->ps), sizeof(S2*), MEMBER_OF(1) | PTR_AND_OBJ; // &(ps->ps->ps), &(ps->ps->ps->ps), sizeof(S2*), PTR_AND_OBJ | TO | FROM; //; // map(to: ps->ps->ps->s.f[:22]); // ps, &(ps->ps), sizeof(S2*), TARGET_PARAM; // ps, &(ps->ps), sizeof(S2*), MEMBER_OF(1); // &(ps->ps), &(ps->ps->ps), sizeof(S2*), MEMBER_OF(1) | PTR_AND_OBJ; // &(ps->ps->ps), &(ps->ps->ps->s.f[0]), 22*sizeof(float), PTR_AND_OBJ | TO; //; // map(to: s.f[:22]) map(from: s.p[:33]); // &s, &(s.f[0]), 50*sizeof(float) + sizeof(struct S1) +; // sizeof(double*) (**), TARGET_PARAM; // &s, &(s.f[0]), 22*sizeof(float), MEMBER_OF(1) | TO; // &s, &(s.p), sizeof(double*), MEMBER_OF(1); // &(s.p), &(s.p[0]), 33*sizeof(double), MEMBER_OF(1) | PTR_AND_OBJ | FROM; // (*) allocate contiguous space needed to fit all mapped members even if; // we allocate space for members not mapped (in this example,; // s.f[22..49] and s.s are not mapped, yet we must allocate space for; // them as well because they fall between &s.f[0] and &s.p); //; // map(from: s.f[:22]) map(to: ps->p[:33]); // &s, &(s.f[0]), 22*sizeof(float), TARGET_PARAM | FROM; // ps, &(ps->p), sizeof(S2*), TARGET_PARAM; // ps, &(ps->p), sizeof(double*), MEMBER_OF(2) (*); // &(ps->p), &(ps->p[0]), 33*sizeof(double), MEMBER_OF(2) | PTR_AND_OBJ | TO; // (*) the struct this entry pertains to is the 2nd element in the list of; // arguments, hence MEMBER_OF(2); //; // map(from: s.f[:22], s.s) map(to: ps->p[:33]); // &s, &(s.f[0]), 50*sizeof(float) + sizeof(struct S1), TARGET_PARAM; // &s, &(s.f[0]), 22*sizeof(float), MEMBER_OF(1) | FROM; // &s, &(s.s), sizeof(struct S1), MEMBER_OF(1) | FROM; // ps, &(ps->p), sizeof(S2*), TARGET_PARAM; // ps, &(ps->p), sizeof(double*), MEMBER_OF(4) (*); // &(ps->p), &(ps->p[0]), 33*sizeof(double), MEMBER",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:5220,allocate,allocate,5220,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,2,['allocate'],['allocate']
Energy Efficiency,"ept those that are of interest at a certain; time, caching the relatively small number of CPU/memory costly logical shapes,; and retaining/discarding the physical placements as required. The viewer may; decide to force the client to rebuild (republish) the scene (via; a TPad repaint at present), and thus collect these objects if the; internal viewer state changes. It does this presently by forcing a repaint; on the attached TPad object - hence the reason for putting all publishing to; the viewer in the attached pad objects Paint() method. We will likely remove; this requirement in the future, indicating the rebuild request via a normal; ROOT signal, which the client can detect. ### Physical IDs. TVirtualViewer3D provides for two methods of object addition:virtual Int_t AddObject(const; TBuffer3D & buffer, Bool_t * addChildren = 0). ~~~ {.cpp}; virtual Int_t AddObject(UInt_t physicalID, const TBuffer3D & buffer, Bool_t * addChildren = 0); ~~~. If you use the first (simple) case a viewer using logical/physical pairs; SetSectionsValid(TBuffer3D::kBoundingBox); will generate IDs for each physical; object internally. In the second you can specify a unique identifier from the; client, which allows the viewer to be more efficient. It can now cache both logical; and physical objects, and only discard physical objects no longer of interest as; part of scene rebuilds. ### Child Objects. In many geometries there is a rigid containment hierarchy, and so if the viewer; is not interested in a certain object due to limits/size then it will also; not be interest in any of the contained branch of descendents. Both AddObject(); methods have an addChildren parameter. The viewer will complete this (if passed); indicating if children (contained within the one just sent) are worth adding. ### Recycling TBuffer3D. Once add AddObject() has been called, the contents are copied to the viewer; internally. You are free to destroy this object, or recycle it for the next; object if suitable.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx:8155,efficient,efficient,8155,core/base/src/TBuffer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TBuffer3D.cxx,1,['efficient'],['efficient']
Energy Efficiency,"er only 8; * derived values were recorded in the cHRM chunk;; * (red,green,blue,white)x(x,y). This loses one degree of freedom and; * therefore an arbitrary ninth value has to be introduced to undo the; * original transformations.; *; * Think of the original end-points as points in (X,Y,Z) space. The; * chromaticity values (c) have the property:; *; * C; * c = ---------; * X + Y + Z; *; * For each c (x,y,z) from the corresponding original C (X,Y,Z). Thus the; * three chromaticity values (x,y,z) for each end-point obey the; * relationship:; *; * x + y + z = 1; *; * This describes the plane in (X,Y,Z) space that intersects each axis at the; * value 1.0; call this the chromaticity plane. Thus the chromaticity; * calculation has scaled each end-point so that it is on the x+y+z=1 plane; * and chromaticity is the intersection of the vector from the origin to the; * (X,Y,Z) value with the chromaticity plane.; *; * To fully invert the chromaticity calculation we would need the three; * end-point scale factors, (red-scale, green-scale, blue-scale), but these; * were not recorded. Instead we calculated the reference white (X,Y,Z) and; * recorded the chromaticity of this. The reference white (X,Y,Z) would have; * given all three of the scale factors since:; *; * color-C = color-c * color-scale; * white-C = red-C + green-C + blue-C; * = red-c*red-scale + green-c*green-scale + blue-c*blue-scale; *; * But cHRM records only white-x and white-y, so we have lost the white scale; * factor:; *; * white-C = white-c*white-scale; *; * To handle this the inverse transformation makes an arbitrary assumption; * about white-scale:; *; * Assume: white-Y = 1.0; * Hence: white-scale = 1/white-y; * Or: red-Y + green-Y + blue-Y = 1.0; *; * Notice the last statement of the assumption gives an equation in three of; * the nine values we want to calculate. 8 more equations come from the; * above routine as summarised at the top above (the chromaticity; * calculation):; *; * Given: color-x = color-X / ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:1172,green,green-scale,1172,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['green'],['green-scale']
Energy Efficiency,"er the; training sample, found parameterization (TMultiDimFit::Fit). This is done by passing; the class a test sample of \f$ M_t\f$ tuples of the form; \f$(\mathbf{x}_{t,j},D_{t,j}, E_{t,j})\f$, where \f$\mathbf{x}_{t,j}\f$ are the independent; variables, \f$ D_{t,j}\f$ the known, dependent quantity, and \f$ E_{t,j}\f$ is; the square error in \f$ D_{t,j}\f$ (TMultiDimFit::AddTestRow). The parameterization is then evaluated at every \f$\mathbf{x}_t\f$ in the; test sample, and; \f[; S_t \equiv \sum_{j=1}^{M_t} \left(D_{t,j} -; D_p\left(\mathbf{x}_{t,j}\right)\right)^2; \f]; is evaluated. The relative error over the test sample; \f[; R_t = \frac{S_t}{\sum_{j=1}^{M_t} D_{t,j}^2}; \f]; should not be to low or high compared to \f$ R\f$ from the training; sample. Also, multiple correlation coefficient from both samples should; be fairly close, otherwise one of the samples is not representative of; the problem. A large difference in the reduced \f$ \chi^2\f$ over the two; samples indicate an over fit, and the maximum number of terms in the; parameterisation should be reduced. It's possible to use [4] to further improve the fit, using the test sample. Christian Holm. ## Bibliography; - <a name=""bevington""></a> Philip R. Bevington and D. Keith Robinson. *Data Reduction and Error Analysis for; the Physical Sciences*. McGraw-Hill, 2 edition, 1992.; - <a name=""mudifi""></a> R. Brun et al. *Long writeup DD/75-23*, CERN, 1980.; - Gene H. Golub and Charles F. van Loan. *Matrix Computations*.; John Hopkins University Press, Baltimore, 3 edition, 1996.; - <a name=""minuit""></a>F. James. *Minuit*. Long writeup D506, CERN, 1998.; - <a name=""wind72""></a>H. Wind. *Function parameterization*. Proceedings of the 1972 CERN Computing and Data Processing; School, volume 72-21 of Yellow report. CERN, 1972.; - <a name=""wind81""></a>H. Wind. 1. principal component analysis, 2. pattern recognition for track; finding, 3. interpolation and functional representation. Yellow report EP/81-12, CERN, 1981.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:17254,reduce,reduced,17254,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,2,['reduce'],['reduced']
Energy Efficiency,"er; contents. hcrc is set to true if there is a header CRC. (The header CRC; was valid if done is set to one.) If extra is not Z_NULL, then extra_max; contains the maximum number of bytes to write to extra. Once done is true,; extra_len contains the actual extra field length, and extra contains the; extra field, or that field truncated if extra_max is less than extra_len.; If name is not Z_NULL, then up to name_max characters are written there,; terminated with a zero unless the length is greater than name_max. If; comment is not Z_NULL, then up to comm_max characters are written there,; terminated with a zero unless the length is greater than comm_max. When any; of extra, name, or comment are not Z_NULL and the respective field is not; present in the header, then that field is set to Z_NULL to signal its; absence. This allows the use of deflateSetHeader() with the returned; structure to duplicate the header. However if those fields are set to; allocated memory, then the application will need to save those pointers; elsewhere so that they can be eventually freed. If inflateGetHeader is not used, then the header information is simply; discarded. The header is always checked for validity, including the header; CRC if present. inflateReset() will reset the process to discard the header; information. The application would need to call inflateGetHeader() again to; retrieve the header from the next gzip stream. inflateGetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateBackInit OF((z_streamp strm, int windowBits,; unsigned char FAR *window));. Initialize the internal stream state for decompression using inflateBack(); calls. The fields zalloc, zfree and opaque in strm must be initialized; before the call. If zalloc and zfree are Z_NULL, then the default library-; derived memory allocation routines are used. windowBits is the base two; logarithm of the window size, in the range 8..15. window ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1685,allocate,allocated,1685,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['allocate'],['allocated']
Energy Efficiency,"er; contents. hcrc is set to true if there is a header CRC. (The header CRC; was valid if done is set to one.) If extra is not Z_NULL, then extra_max; contains the maximum number of bytes to write to extra. Once done is true,; extra_len contains the actual extra field length, and extra contains the; extra field, or that field truncated if extra_max is less than extra_len.; If name is not Z_NULL, then up to name_max characters are written there,; terminated with a zero unless the length is greater than name_max. If; comment is not Z_NULL, then up to comm_max characters are written there,; terminated with a zero unless the length is greater than comm_max. When; any of extra, name, or comment are not Z_NULL and the respective field is; not present in the header, then that field is set to Z_NULL to signal its; absence. This allows the use of deflateSetHeader() with the returned; structure to duplicate the header. However if those fields are set to; allocated memory, then the application will need to save those pointers; elsewhere so that they can be eventually freed. If inflateGetHeader is not used, then the header information is simply; discarded. The header is always checked for validity, including the header; CRC if present. inflateReset() will reset the process to discard the header; information. The application would need to call inflateGetHeader() again to; retrieve the header from the next gzip stream. inflateGetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source; stream state was inconsistent.; */; /*; ZEXTERN int ZEXPORT inflateBackInit OF((z_streamp strm, int windowBits,; unsigned char FAR *window));. Initialize the internal stream state for decompression using inflateBack(); calls. The fields zalloc, zfree and opaque in strm must be initialized; before the call. If zalloc and zfree are Z_NULL, then the default library-; derived memory allocation routines are used. windowBits is the base two; logarithm of the window size, in the range 8..15. window ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:1674,allocate,allocated,1674,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['allocate'],['allocated']
Energy Efficiency,"erate a; /// remote_lane_id. The remote lane contains the second; /// variable of type 'ReduceData' that is to be reduced.; /// d. an algorithm version parameter determining which reduction; /// algorithm to use.; ///; /// 'shuffleReduceFn' retrieves data from the remote lane using; /// efficient GPU shuffle intrinsics and reduces, using the; /// algorithm specified by the 4th parameter, the two operands; /// element-wise. The result is written to the first operand.; ///; /// Different reduction algorithms are implemented in different; /// runtime functions, all calling 'shuffleReduceFn' to perform; /// the essential reduction step. Therefore, based on the 4th; /// parameter, this function behaves slightly differently to; /// cooperate with the runtime to ensure correctness under; /// different circumstances.; ///; /// 'InterWarpCpyFn' is a pointer to a function that transfers; /// reduced variables across warps. It tunnels, through CUDA; /// shared memory, the thread-private data of type 'ReduceData'; /// from lane 0 of each warp to a lane in the first warp.; /// 4. Call the OpenMP runtime on the GPU to reduce across teams.; /// The last team writes the global reduced value to memory.; ///; /// ret = __kmpc_nvptx_teams_reduce_nowait(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn,; /// scratchpadCopyFn, loadAndReduceFn); ///; /// 'scratchpadCopyFn' is a helper that stores reduced; /// data from the team master to a scratchpad array in; /// global memory.; ///; /// 'loadAndReduceFn' is a helper that loads data from; /// the scratchpad array and reduces it with the input; /// operand.; ///; /// These compiler generated functions hide address; /// calculation and alignment information from the runtime.; /// 5. if ret == 1:; /// The team master of the last team stores the reduced; /// result to the globals in memory.; /// foo += reduceData.foo; bar *= reduceData.bar; ///; ///; /// Warp Reduction Algorithms; ///; /// On the warp level, we have three algorithms impl",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:3658,Reduce,ReduceData,3658,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['Reduce'],['ReduceData']
Energy Efficiency,"ers; /// reduced variables across warps. It tunnels, through CUDA; /// shared memory, the thread-private data of type 'ReduceData'; /// from lane 0 of each warp to a lane in the first warp.; /// 4. Call the OpenMP runtime on the GPU to reduce across teams.; /// The last team writes the global reduced value to memory.; ///; /// ret = __kmpc_nvptx_teams_reduce_nowait(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn,; /// scratchpadCopyFn, loadAndReduceFn); ///; /// 'scratchpadCopyFn' is a helper that stores reduced; /// data from the team master to a scratchpad array in; /// global memory.; ///; /// 'loadAndReduceFn' is a helper that loads data from; /// the scratchpad array and reduces it with the input; /// operand.; ///; /// These compiler generated functions hide address; /// calculation and alignment information from the runtime.; /// 5. if ret == 1:; /// The team master of the last team stores the reduced; /// result to the globals in memory.; /// foo += reduceData.foo; bar *= reduceData.bar; ///; ///; /// Warp Reduction Algorithms; ///; /// On the warp level, we have three algorithms implemented in the; /// OpenMP runtime depending on the number of active lanes:; ///; /// Full Warp Reduction; ///; /// The reduce algorithm within a warp where all lanes are active; /// is implemented in the runtime as follows:; ///; /// full_warp_reduce(void *reduce_data,; /// kmp_ShuffleReductFctPtr ShuffleReduceFn) {; /// for (int offset = WARPSIZE/2; offset > 0; offset /= 2); /// ShuffleReduceFn(reduce_data, 0, offset, 0);; /// }; ///; /// The algorithm completes in log(2, WARPSIZE) steps.; ///; /// 'ShuffleReduceFn' is used here with lane_id set to 0 because it is; /// not used therefore we save instructions by not retrieving lane_id; /// from the corresponding special registers. The 4th parameter, which; /// represents the version of the algorithm being used, is set to 0 to; /// signify full warp reduction.; ///; /// In this version, 'ShuffleReduceFn' behaves, per elemen",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:4540,reduce,reduceData,4540,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['reduce'],['reduceData']
Energy Efficiency,"ertions, swaps or; other operations will be propagated potentially leaving the RVec object in an invalid state. \note RVec methods (e.g. `at` or `size`) follow the STL naming convention instead of the ROOT naming convention in order; to make RVec a drop-in replacement for `std::vector`. \htmlonly; <a href=""https://doi.org/10.5281/zenodo.1253756""><img src=""https://zenodo.org/badge/DOI/10.5281/zenodo.1253756.svg"" alt=""DOI""></a>; \endhtmlonly. ## Table of Contents; - [Example](\ref example); - [Arithmetic operations, logical operations and mathematical functions](\ref operationsandfunctions); - [Owning and adopting memory](\ref owningandadoptingmemory); - [Sorting and manipulation of indices](\ref sorting); - [Usage in combination with RDataFrame](\ref usagetdataframe); - [Reference for the RVec class](\ref RVecdoxyref); - [Reference for RVec helper functions](https://root.cern/doc/master/namespaceROOT_1_1VecOps.html). \anchor example; ## Example; Suppose to have an event featuring a collection of muons with a certain pseudorapidity,; momentum and charge, e.g.:; ~~~{.cpp}; std::vector<short> mu_charge {1, 1, -1, -1, -1, 1, 1, -1};; std::vector<float> mu_pt {56, 45, 32, 24, 12, 8, 7, 6.2};; std::vector<float> mu_eta {3.1, -.2, -1.1, 1, 4.1, 1.6, 2.4, -.5};; ~~~; Suppose you want to extract the transverse momenta of the muons satisfying certain; criteria, for example consider only negatively charged muons with a pseudorapidity; smaller or equal to 2 and with a transverse momentum greater than 10 GeV.; Such a selection would require, among the other things, the management of an explicit; loop, for example:; ~~~{.cpp}; std::vector<float> goodMuons_pt;; const auto size = mu_charge.size();; for (size_t i=0; i < size; ++i) {; if (mu_pt[i] > 10 && abs(mu_eta[i]) <= 2. && mu_charge[i] == -1) {; goodMuons_pt.emplace_back(mu_pt[i]);; }; }; ~~~; These operations become straightforward with RVec - we just need to *write what; we mean*:; ~~~{.cpp}; auto goodMuons_pt = mu_pt[ (mu_pt ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx:2198,charge,charge,2198,math/vecops/inc/ROOT/RVec.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx,1,['charge'],['charge']
Energy Efficiency,"es a specification format - `Summary' - and; // contains descriptions of some library functions in this format. Each; // specification contains a list of branches for splitting the program state; // upon call, and range constraints on argument and return-value symbols that; // are satisfied on each branch. This spec can be expanded to include more; // items, like external effects of the function.; //; // The main difference between this approach and the body farms technique is; // in more explicit control over how many branches are produced. For example,; // consider standard C function `ispunct(int x)', which returns a non-zero value; // iff `x' is a punctuation character, that is, when `x' is in range; // ['!', '/'] [':', '@'] U ['[', '\`'] U ['{', '~'].; // `Summary' provides only two branches for this function. However,; // any attempt to describe this range with if-statements in the body farm; // would result in many more branches. Because each branch needs to be analyzed; // independently, this significantly reduces performance. Additionally,; // once we consider a branch on which `x' is in range, say, ['!', '/'],; // we assume that such branch is an important separate path through the program,; // which may lead to false positives because considering this particular path; // was not consciously intended, and therefore it might have been unreachable.; //; // This checker uses eval::Call for modeling pure functions (functions without; // side effets), for which their `Summary' is a precise model. This avoids; // unnecessary invalidation passes. Conflicts with other checkers are unlikely; // because if the function has no other effects, other checkers would probably; // never want to improve upon the modeling done by this checker.; //; // Non-pure functions, for which only partial improvement over the default; // behavior is expected, are modeled via check::PostCall, non-intrusively.; //; //===---------------------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StdLibraryFunctionsChecker.cpp:1506,reduce,reduces,1506,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StdLibraryFunctionsChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/StdLibraryFunctionsChecker.cpp,1,['reduce'],['reduces']
Energy Efficiency,"ete event;; /// event = 0;; /// ~~~; /// If addr is not zero and the pointer addr points at is; /// also not zero, then the caller has allocated a branch; /// object and is asking us to use it. The caller owns it; /// and must delete it when it is no longer needed.; ///; /// Example:; /// ~~~ {.cpp}; /// Event* event = new Event();; /// branch->SetAddress(&event);; /// ... Do some work.; /// delete event;; /// event = 0;; /// ~~~; /// These rules affect users of TTree::Branch(),; /// TTree::SetBranchAddress(), and TChain::SetBranchAddress(); /// as well because those routines call this one.; ///; /// An example of a tree with branches with objects allocated; /// and owned by us:; /// ~~~ {.cpp}; /// TFile* f1 = new TFile(""myfile_original.root"");; /// TTree* t1 = (TTree*) f->Get(""MyTree"");; /// TFile* f2 = new TFile(""myfile_copy.root"", ""recreate"");; /// TTree* t2 = t1->Clone(0);; /// for (Int_t i = 0; i < 10; ++i) {; /// t1->GetEntry(i);; /// t2->Fill();; /// }; /// t2->Write(); /// delete f2;; /// f2 = 0;; /// delete f1;; /// f1 = 0;; /// ~~~; /// An example of a branch with an object allocated by us,; /// but owned by the caller:; /// ~~~ {.cpp}; /// TFile* f = new TFile(""myfile.root"", ""recreate"");; /// TTree* t = new TTree(""t"", ""A test tree.""); /// Event* event = 0;; /// TBranchElement* br = t->Branch(""event."", &event);; /// for (Int_t i = 0; i < 10; ++i) {; /// ... Fill event with meaningful data in some way.; /// t->Fill();; /// }; /// t->Write();; /// delete event;; /// event = 0;; /// delete f;; /// f = 0;; /// ~~~; /// Notice that the only difference between this example; /// and the following example is that the event pointer; /// is zero when the branch is created.; ///; /// An example of a branch with an object allocated and; /// owned by the caller:; /// ~~~ {.cpp}; /// TFile* f = new TFile(""myfile.root"", ""recreate"");; /// TTree* t = new TTree(""t"", ""A test tree.""); /// Event* event = new Event();; /// TBranchElement* br = t->Branch(""event."", &event);; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:2224,allocate,allocated,2224,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['allocate'],['allocated']
Energy Efficiency,"every histogram cell. Unfortunately,; * it needs a work array to hold the best-distance-so-far for each histogram; * cell (because the inner loop has to be over cells, not colormap entries).; * The work array elements have to be INT32s, so the work array would need; * 256Kb at our recommended precision. This is not feasible in DOS machines.; *; * To get around these problems, we apply Thomas' method to compute the; * nearest colors for only the cells within a small subbox of the histogram.; * The work array need be only as big as the subbox, so the memory usage; * problem is solved. Furthermore, we need not fill subboxes that are never; * referenced in pass2; many images use only part of the color gamut, so a; * fair amount of work is saved. An additional advantage of this; * approach is that we can apply Heckbert's locality criterion to quickly; * eliminate colormap entries that are far away from the subbox; typically; * three-fourths of the colormap entries are rejected by Heckbert's criterion,; * and we need not compute their distances to individual cells in the subbox.; * The speed of this approach is heavily influenced by the subbox size: too; * small means too much overhead, too big loses because Heckbert's criterion; * can't eliminate as many colormap entries. Empirically the best subbox; * size seems to be about 1/512th of the histogram (1/8th in each direction).; *; * Thomas' article also describes a refined method which is asymptotically; * faster than the brute-force method, but it is also far more complex and; * cannot efficiently be applied to small subboxes. It is therefore not; * useful for programs intended to be portable to DOS machines. On machines; * with plenty of memory, filling the whole histogram in one shot with Thomas'; * refined method might be faster than the present code --- but then again,; * it might not be any faster, and it's certainly more complicated.; */; /* log2(histogram cells in update box) for each axis; this can be adjusted */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:3085,efficient,efficiently,3085,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['efficient'],['efficiently']
Energy Efficiency,"ew:; ///; /// Comparison of two histograms expect hypotheses that two histograms; /// represent identical distributions. To make a decision p-value should; /// be calculated. The hypotheses of identity is rejected if the p-value is; /// lower then some significance level. Traditionally significance levels; /// 0.1, 0.05 and 0.01 are used. The comparison procedure should include an; /// analysis of the residuals which is often helpful in identifying the; /// bins of histograms responsible for a significant overall \f$ \chi^{2} \f$ value.; /// Residuals are the difference between bin contents and expected bin; /// contents. Most convenient for analysis are the normalized residuals. If; /// hypotheses of identity are valid then normalized residuals are; /// approximately independent and identically distributed random variables; /// having N(0,1) distribution. Analysis of residuals expect test of above; /// mentioned properties of residuals. Notice that indirectly the analysis; /// of residuals increase the power of \f$ \chi^{2} \f$ test.; ///; /// #### Methods of comparison:; ///; /// \f$ \chi^{2} \f$ test for comparison two (unweighted) histograms:; /// Let us consider two histograms with the same binning and the number; /// of bins equal to r. Let us denote the number of events in the ith bin; /// in the first histogram as ni and as mi in the second one. The total; /// number of events in the first histogram is equal to:; /// \f[; /// N = \sum_{i=1}^{r} n_{i}; /// \f]; /// and; /// \f[; /// M = \sum_{i=1}^{r} m_{i}; /// \f]; /// in the second histogram. The hypothesis of identity (homogeneity) [3]; /// is that the two histograms represent random values with identical; /// distributions. It is equivalent that there exist r constants p1,...,pr,; /// such that; /// \f[; ///\sum_{i=1}^{r} p_{i}=1; /// \f]; /// and the probability of belonging to the ith bin for some measured value; /// in both experiments is equal to pi. The number of events in the ith; /// bin is a rando",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:3021,power,power,3021,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['power'],['power']
Energy Efficiency,"f. If it is; /// evaluated for a particular value of x, the FFT and convolution is calculated; /// for all bins in the observable space for the given choice of parameters,; /// which are also stored in the cache. Subsequent evaluations for different values of the convolution observable and; /// identical parameters will be retrieved from the cache. If one or more; /// of the parameters change, the cache will be updated, *i.e.*, a new FFT runs.; ///; /// The sampling density of the FFT is controlled by the binning of the; /// the convolution observable, which can be changed using RooRealVar::setBins(N).; /// For good results, N should be large (>=1000). Additional interpolation; /// between the bins may improve the result if coarse binnings are chosen. These can be; /// activated in the constructor or by calling `setInterpolationOrder()`.; /// For N >> 1000, interpolation will not substantially improve the accuracy.; ///; /// Additionial information on caching can be displayed by monitoring; /// the message stream with topic ""Caching"" at the INFO level, *i.e.*; /// by calling `RooMsgService::instance().addStream(RooMsgService::INFO,Topic(""Caching""))`; /// to see these message on stdout.; ///; /// Multi-dimensional convolutions are not supported at the moment.; ///; /// ---; ///; /// Installing an external version of FFTW on Linux and compiling ROOT to use it; /// -------; ///; /// You have two options:; /// * **Recommended**: ROOT can automatically install FFTW for itself, see `builtin_fftw3` at https://root.cern/building-root; /// * Install FFTW and let ROOT discover it. `fftw3` is on by default (see https://root.cern/building-root); ///; /// 1) Go to www.fftw.org and download the latest stable version (a .tar.gz file); ///; /// If you have root access to your machine and want to make a system installation of FFTW; ///; /// 2) Untar fftw-XXX.tar.gz in /tmp, cd into the untarred directory; /// and type './configure' followed by 'make install'.; /// This will install ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx:3932,monitor,monitoring,3932,roofit/roofitcore/src/RooFFTConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFFTConvPdf.cxx,1,['monitor'],['monitoring']
Energy Efficiency,"f_active_lanes_in_this_warp();; /// logical_lane_id /= 2;; /// ShuffleReduceFn(reduce_data, logical_lane_id,; /// remote_id-1-threadIdx.x, 2);; /// } while (logical_lane_id % 2 == 0 && size > 1);; /// }; ///; /// There is no assumption made about the initial state of the reduction.; /// Any number of lanes (>=1) could be active at any position. The reduction; /// result is returned in the first active lane.; ///; /// In this version, 'ShuffleReduceFn' behaves, per element, as follows:; ///; /// remote_elem = shuffle_down(reduce_elem, offset, WARPSIZE);; /// if (lane_id % 2 == 0 && offset > 0); /// reduce_elem = reduce_elem REDUCE_OP remote_elem; /// else; /// reduce_elem = remote_elem; ///; ///; /// Intra-Team Reduction; ///; /// This function, as implemented in the runtime call; /// '__kmpc_nvptx_parallel_reduce_nowait_v2', aggregates data across OpenMP; /// threads in a team. It first reduces within a warp using the; /// aforementioned algorithms. We then proceed to gather all such; /// reduced values at the first warp.; ///; /// The runtime makes use of the function 'InterWarpCpyFn', which copies; /// data from each of the ""warp master"" (zeroth lane of each warp, where; /// warp-reduced data is held) to the zeroth warp. This step reduces (in; /// a mathematical sense) the problem of reduction across warp masters in; /// a block to the problem of warp reduction.; ///; ///; /// Inter-Team Reduction; ///; /// Once a team has reduced its data to a single value, it is stored in; /// a global scratchpad array. Since each team has a distinct slot, this; /// can be done without locking.; ///; /// The last team to write to the scratchpad array proceeds to reduce the; /// scratchpad array. One or more workers in the last team use the helper; /// 'loadAndReduceDataFn' to load and reduce values from the array, i.e.,; /// the k'th worker reduces every k'th element.; ///; /// Finally, a call is made to '__kmpc_nvptx_parallel_reduce_nowait_v2' to; /// reduce across workers and ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:8739,reduce,reduced,8739,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['reduce'],['reduced']
Energy Efficiency,"fficients; /// - fSizex,fSizey-basic dimensions of source and dest spectra; ///; /// ### Transform methods; ///; /// Goal: to analyse experimental data using orthogonal transforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example 1 - script Transform2.c:; ///; /// \image html spectrum2transform_transform_image002.jpg Fig. 1 Original two-dimensional noisy spectrum; ///; /// \image html spectrum2transform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform. Energy of the transformed data is concentrated around the beginning of the coordinate system; ///; /// #### Script:; ///; /// Example to illustrate Transform function (class TSpectrumTransform2).; /// To execute this example, do; ///; /// `root > .x Transform2.C`; ///; /// ~~~ {.cpp}; /// void Transform2() {; /// Int",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1668,adapt,adaptive,1668,hist/spectrum/src/TSpectrum2Transform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx,1,['adapt'],['adaptive']
Energy Efficiency,"ficient(power) and plot the data,; the known function and the fitted function.; \code{.cpp}. TCanvas *c1 = new TCanvas(""c1"",""Curve Fit"",700,500);; c1->SetGrid();. // draw a frame for multiples graphs; TMultiGraph *mg = new TMultiGraph();. // create the first graph (points with gaussian noise); const Int_t n = 24;; Double_t x[n] ;; Double_t y[n] ;; //Generate points along a X^3 with noise; TRandom rg;; rg.SetSeed(520);; for (Int_t i = 0; i < n; i++) {; x[i] = rg.Uniform(0, 1);; y[i] = TMath::Power(x[i], 3) + rg.Gaus() * 0.06;; }. TGraph *gr1 = new TGraph(n,x,y);; gr1->SetMarkerColor(kBlue);; gr1->SetMarkerStyle(8);; gr1->SetMarkerSize(1);; mg->Add(gr1);. // create second graph; TF1 *f_known=new TF1(""f_known"",""pow(x,3)"",0,1);; TGraph *gr2 = new TGraph(f_known);; gr2->SetMarkerColor(kRed);; gr2->SetMarkerStyle(8);; gr2->SetMarkerSize(1);; mg->Add(gr2);. //passing x and y values to R for fitting; ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; r[""x""]<<TVectorD(n, x);; r[""y""]<<TVectorD(n, y);; //creating a R data frame; r<<""ds<-data.frame(x=x,y=y)"";; //fitting x and y to X^power using Nonlinear Least Squares; r<<""m <- nls(y ~ I(x^power),data = ds, start = list(power = 1),trace = T)"";; //getting the fitted value (power); Double_t power;; r[""summary(m)$coefficients[1]""]>>power;. TF1 *f_fitted=new TF1(""f_fitted"",""pow(x,[0])"",0,1);; f_fitted->SetParameter(0,power);; //plotting the fitted function; TGraph *gr3 = new TGraph(f_fitted);; gr3->SetMarkerColor(kGreen);; gr3->SetMarkerStyle(8);; gr3->SetMarkerSize(1);. mg->Add(gr3);; mg->Draw(""ap"");. //displaying basic results; TPaveText *pt = new TPaveText(0.1,0.6,0.5,0.9,""brNDC"");; pt->SetFillColor(18);; pt->SetTextAlign(12);; pt->AddText(""Fitting x^power "");; pt->AddText("" \""Blue\"" Points with gaussian noise to be fitted"");; pt->AddText("" \""Red\"" Known function x^3"");; TString fmsg;; fmsg.Form("" \""Green\"" Fitted function with power=%.4lf"",power);; pt->AddText(fmsg);; pt->Draw();; c1->Update();; \endcode; @ingroup R; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:2409,power,power,2409,bindings/r/inc/TRInterface.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h,11,"['Green', 'power']","['Green', 'power']"
Energy Efficiency,"fix with GetProbabilityMatrix; // Version 17.1, bug fixes in GetFoldedOutput, GetOutput; // Version 17.0, option to specify an error matrix with SetInput(), new ScanRho() method; // Version 16.2, in parallel to bug-fix in TUnfoldSys; // Version 16.1, fix bug with error matrix in case kEConstraintArea is used; // Version 16.0, fix calculation of global correlations, improved error messages; // Version 15, simplified L-curve scan, new tau definition, new error calc., area preservation; // Version 14, with changes in TUnfoldSys.cxx; // Version 13, new methods for derived classes and small bug fix; // Version 12, report singular matrices; // Version 11, reduce the amount of printout; // Version 10, more correct definition of the L curve, update references; // Version 9, faster matrix inversion and skip edge points for L-curve scan; // Version 8, replace all TMatrixSparse matrix operations by private code; // Version 7, fix problem with TMatrixDSparse,TMatrixD multiplication; // Version 6, replace class XY by std::pair; // Version 5, replace run-time dynamic arrays by new and delete[]; // Version 4, fix new bug from V3 with initial regularisation condition; // Version 3, fix bug with initial regularisation condition; // Version 2, with improved ScanLcurve() algorithm; // Version 1, added ScanLcurve() method; // Version 0, stable version of basic unfolding algorithm; /** \class TUnfold; An algorithm to unfold distributions from detector to truth level. TUnfold is used to decompose a measurement y into several sources x,; given the measurement uncertainties and a matrix of migrations A.; The method can be applied to a large number of problems,; where the measured distribution y is a linear superposition; of several Monte Carlo shapes. Beyond such a simple template fit,; TUnfold has an adjustable regularisation term and also supports an; optional constraint on the total number of events. <b>For most applications, it is better to use the derived class; TUnfoldDensity instead ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:1274,reduce,reduce,1274,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,1,['reduce'],['reduce']
Energy Efficiency,"flow very; unlikely . #### Decompose(); Here the actually decomposition is performed . One can change the; matrix A after the decomposition constructor has been called; without effecting the decomposition result. #### Solve(TVectorD &b); Solve A x = b . x is supplied through the argument and replaced with; the solution . #### TransSolve(TVectorD &b); Solve A^T x = b . x is supplied through the argument and replaced; with the solution . #### MultiSolve(TMatrixD &B); Solve A X = B . where X and are now matrices . X is supplied through; the argument and replaced with the solution . #### Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument; the unit matrix . Note that for a matrix a(m,n) with m > n a; pseudo-inverse is calculated . ### Tolerances and Scaling. The tolerance parameter (which is a member of this base class) plays; a crucial role in all operations of the decomposition classes . It; gives the user a powerful tool to monitor and steer the operations; Its default value is sqrt(epsilon) where 1+epsilon = 1. If you do not want to be bothered by the following considerations,; like in most other linear algebra packages, just set the tolerance; with SetTol to an arbitrary small number . The tolerance number is used by each decomposition method to decide; whether the matrix is near singular, except of course SVD which can; handle singular matrices .; For each decomposition this will be checked in a different way; in LU; the matrix is considered singular when, at some point in the; decomposition, a diagonal element < fTol . Therefore, we had to set in; the example above of the (10x10) Hilbert, which is near singular, the; tolerance on 10e-12 . (The fact that we have to set the tolerance <; sqrt(epsilon) is a clear indication that we are losing precision .). If the matrix is flagged as being singular, operations with the; decomposition will fail and will return matrices/vectors that are; invalid . The observant reader will notice t",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx:2806,power,powerful,2806,math/matrix/src/TDecompBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx,2,"['monitor', 'power']","['monitor', 'powerful']"
Energy Efficiency,"ford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvolution.cxx; \class RooNumConvolution; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF; This class should not be used blindly as numeric convolution is computing; intensive and prone to stability fitting problems. If an analytic convolution; can be calculated, you should use that or implement it if not available.; RooNumConvolution implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result. The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases wi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx:1365,adapt,adaptive,1365,roofit/roofitcore/src/RooNumConvolution.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvolution.cxx,1,['adapt'],['adaptive']
Energy Efficiency,"g""; alt=""DOI""></a>; \endhtmlonly. ## For the impatient user; You can directly see RDataFrame in action in our [tutorials](https://root.cern/doc/master/group__tutorial__dataframe.html), in C++ or Python. ## Table of Contents; - [Cheat sheet](\ref cheatsheet); - [Introduction](\ref introduction); - [Crash course](\ref crash-course); - [Working with collections](\ref collections); - [Transformations: manipulating data](\ref transformations); - [Actions: getting results](\ref actions); - [Distributed execution in Python](\ref distrdf); - [Performance tips and parallel execution](\ref parallel-execution); - [More features](\ref more-features); - [Systematic variations](\ref systematics); - [RDataFrame objects as function arguments and return values](\ref rnode); - [Storing RDataFrame objects in collections](\ref RDFCollections); - [Executing callbacks every N events](\ref callbacks); - [Default column lists](\ref default-branches); - [Special helper columns: `rdfentry_` and `rdfslot_`](\ref helper-cols); - [Just-in-time compilation: column type inference and explicit declaration of column types](\ref jitting); - [User-defined custom actions](\ref generic-actions); - [Dataset joins with friend trees](\ref friends); - [Reading data formats other than ROOT trees](\ref other-file-formats); - [Computation graphs (storing and reusing sets of transformations)](\ref callgraphs); - [Visualizing the computation graph](\ref representgraph); - [Activating RDataFrame execution logs](\ref rdf-logging); - [Creating an RDataFrame from a dataset specification file](\ref rdf-from-spec); - [Adding a progress bar](\ref progressbar); - [Working with missing values in the dataset](\ref missing-values); - [Efficient analysis in Python](\ref python); - <a class=""el"" href=""classROOT_1_1RDataFrame.html#reference"" onclick=""javascript:toggleInherit('pub_methods_classROOT_1_1RDF_1_1RInterface')"">Class reference</a>. \anchor cheatsheet; ## Cheat sheet; These are the operations which can be performed ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:2909,Efficient,Efficient,2909,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['Efficient'],['Efficient']
Energy Efficiency,"ge structure; * width - width of the image; * height - height of the image; * compression - level of compression to perform on image data.; * compression has to be in range of 0-100 with 100; * signifying highest level of compression.; * NOTES; * In order to resize ASImage structure after asimage_start() has been; * called, asimage_init() must be invoked to free all the memory, and; * then asimage_start() has to be called with new dimensions.; *********/; /****f* libAfterImage/asimage/create_asimage(); * NAME; * create_asimage() Performs memory allocation for the new ASImage ; * structure, as well as initialization of allocated structure based on ; * supplied parameters.; * SYNOPSIS; * ASImage *create_asimage( unsigned int width,; * unsigned int height,; * unsigned int compression);; * INPUTS; * width - desired image width; * height - desired image height; * compression - compression level in new ASImage( see asimage_start(); * for more ).; * RETURN VALUE; * Pointer to newly allocated and initialized ASImage structure on; * Success. NULL in case of any kind of error - that should never happen.; *********/; /****f* libAfterImage/asimage/clone_asimage(); * NAME ; * clone_asimage(); * SYNOPSIS; * ASImage *clone_asimage(ASImage *src, ASFlagType filter );; * INPUTS; * src - original ASImage.; * filter - bitmask of channels to be copied from one image to another.; * RETURN VALUE; * New ASImage, as a copy of original image.; * DESCRIPTION; * Creates exact clone of the original ASImage, with same compression,; * back_color and rest of the attributes. Only ASImage data will be; * carried over. Any attached alternative forms of images (XImages, etc.); * will not be copied. Any channel with unset bit in filter will not be; * copied. Image name, ASImageManager and ref_count will not be copied -; * use store_asimage() afterwards and make sure you use different name,; * to avoid clashes with original image.; *********/; /****f* libAfterImage/asimage/destroy_asimage(); * NAME; * de",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h:2090,allocate,allocated,2090,graf2d/asimage/src/libAfterImage/asimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h,1,['allocate'],['allocated']
Energy Efficiency,"ge to prevent register pressure from going too high, or it can; // increase register pressure even more than if it hadn't taken register; // pressure into account.; //; // Also some other bad behaviours are generated, like loading at the beginning; // of the shader a constant in VGPR you won't need until the end of the shader.; //; // The scheduling problem for SI can distinguish three main parts:; // . Hiding high latencies (texture sampling, etc); // . Hiding low latencies (SGPR constant loading, etc); // . Keeping register usage low for better latency hiding and general; // performance; //; // Some other things can also affect performance, but are hard to predict; // (cache usage, the fact the HW can issue several instructions from different; // wavefronts if different types, etc); //; // This scheduler tries to solve the scheduling problem by dividing it into; // simpler sub-problems. It divides the instructions into blocks, schedules; // locally inside the blocks where it takes care of low latencies, and then; // chooses the order of the blocks by taking care of high latencies.; // Dividing the instructions into blocks helps control keeping register; // usage low.; //; // First the instructions are put into blocks.; // We want the blocks help control register usage and hide high latencies; // later. To help control register usage, we typically want all local; // computations, when for example you create a result that can be consumed; // right away, to be contained in a block. Block inputs and outputs would; // typically be important results that are needed in several locations of; // the shader. Since we do want blocks to help hide high latencies, we want; // the instructions inside the block to have a minimal set of dependencies; // on high latencies. It will make it easy to pick blocks to hide specific; // high latencies.; // The block creation algorithm is divided into several steps, and several; // variants can be tried during the scheduling process.; //; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp:1827,schedul,schedules,1827,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,1,['schedul'],['schedules']
Energy Efficiency,"gical_lane_id /= 2;; /// ShuffleReduceFn(reduce_data, logical_lane_id,; /// remote_id-1-threadIdx.x, 2);; /// } while (logical_lane_id % 2 == 0 && size > 1);; /// }; ///; /// There is no assumption made about the initial state of the reduction.; /// Any number of lanes (>=1) could be active at any position. The reduction; /// result is returned in the first active lane.; ///; /// In this version, 'ShuffleReduceFn' behaves, per element, as follows:; ///; /// remote_elem = shuffle_down(reduce_elem, offset, WARPSIZE);; /// if (lane_id % 2 == 0 && offset > 0); /// reduce_elem = reduce_elem REDUCE_OP remote_elem; /// else; /// reduce_elem = remote_elem; ///; ///; /// Intra-Team Reduction; ///; /// This function, as implemented in the runtime call; /// '__kmpc_nvptx_parallel_reduce_nowait_v2', aggregates data across OpenMP; /// threads in a team. It first reduces within a warp using the; /// aforementioned algorithms. We then proceed to gather all such; /// reduced values at the first warp.; ///; /// The runtime makes use of the function 'InterWarpCpyFn', which copies; /// data from each of the ""warp master"" (zeroth lane of each warp, where; /// warp-reduced data is held) to the zeroth warp. This step reduces (in; /// a mathematical sense) the problem of reduction across warp masters in; /// a block to the problem of warp reduction.; ///; ///; /// Inter-Team Reduction; ///; /// Once a team has reduced its data to a single value, it is stored in; /// a global scratchpad array. Since each team has a distinct slot, this; /// can be done without locking.; ///; /// The last team to write to the scratchpad array proceeds to reduce the; /// scratchpad array. One or more workers in the last team use the helper; /// 'loadAndReduceDataFn' to load and reduce values from the array, i.e.,; /// the k'th worker reduces every k'th element.; ///; /// Finally, a call is made to '__kmpc_nvptx_parallel_reduce_nowait_v2' to; /// reduce across workers and compute a globally reduced value.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:8936,reduce,reduced,8936,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,8,['reduce'],"['reduce', 'reduced', 'reduces']"
Energy Efficiency,"hannel; * compression - degree of compression of resulting ASImage.; * RETURN VALUE; * pointer to newly allocated ASImage, containing encoded data, on; * success. NULL on failure.; * DESCRIPTION; * picture_ximage2asimage will attempt to create new ASImage with the same; * dimensions as supplied XImage. If both XImages are supplied - they must; * have same dimentions. XImage will be decoded based on; * supplied ASVisual, and resulting scanlines will be encoded into; * ASImage.; *********/; /****f* libAfterImage/ximage2asimage(); * NAME; * ximage2asimage() - same as picture_ximage2asimage with alpha_ximage ; * set to NULL. Supplied for compatibility with older versions and for ; * convinience.; * SYNOPSIS; * ASImage *ximage2asimage ( struct ASVisual *asv, XImage * xim,; * unsigned int compression );; * INPUTS; * asv 		 - pointer to valid ASVisual structure; * xim 		 - source XImage; * compression - degree of compression of resulting ASImage.; * RETURN VALUE; * pointer to newly allocated ASImage, containing encoded data, on; * success. NULL on failure.; * DESCRIPTION; *********/; /****f* libAfterImage/pixmap2asimage(); * NAME; * pixmap2asimage(); * SYNOPSIS; * ASImage *pixmap2ximage( ASVisual *asv, Pixmap p, int x, int y,; * unsigned int width, unsigned int height,; *						 unsigned long plane_mask,; * unsigned int compression);; * INPUTS; * asv 		 - pointer to valid ASVisual structure; * p 		 - source Pixmap; * x, y,; * width, height- rectangle on Pixmap to be encoded into ASImage.; * plane_mask - limits color planes to be copied from Pixmap.; * keep_cache - indicates if we should keep XImage, used to copy; * image data from the X server, and attached it to ; * 				 ximage member of resulting ASImage.; * compression - degree of compression of resulting ASImage.; * RETURN VALUE; * pointer to newly allocated ASImage, containing data in XImage format, ; * on success. NULL on failure.; * DESCRIPTION; * pixmap2ximage will obtain XImage of the requested area of the; * X Pixm",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h:2071,allocate,allocated,2071,graf2d/asimage/src/libAfterImage/ximage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/ximage.h,1,['allocate'],['allocated']
Energy Efficiency,"he assembly instruction associated to the entry.; ///; /// Based on the timeline view information from the example, instruction 0; /// at iteration 0 was dispatched at cycle 0, and was retired at cycle 3.; /// Instruction [0,1] was also dispatched at cycle 0, and it retired at; /// the same cycle than instruction [0,0].; /// Instruction [0,4] has been dispatched at cycle 2. However, it had to; /// wait for two cycles before being issued. That is because operands; /// became ready only at cycle 5.; ///; /// This view helps further understanding bottlenecks and the impact of; /// resource pressure on the code.; ///; /// To better understand why instructions had to wait for multiple cycles in; /// the scheduler's queue, class TimelineView also reports extra timing info; /// in another table named ""Average Wait times"" (see example below).; ///; ///; /// Average Wait times (based on the timeline view):; /// [0]: Executions; /// [1]: Average time spent waiting in a scheduler's queue; /// [2]: Average time spent waiting in a scheduler's queue while ready; /// [3]: Average time elapsed from WB until retire stage; ///; ///	[0]	[1]	[2]	[3]; /// 0.	 2	1.0	1.0	3.0	vmovshdup %xmm0, %xmm1; /// 1.	 2	1.0	1.0	3.0	vpermilpd $1, %xmm0, %xmm2; /// 2.	 2	1.0	1.0	2.5	vpermilps $231, %xmm0, %xmm5; /// 3.	 2	1.5	0.5	1.0	vaddss %xmm1, %xmm0, %xmm3; /// 4.	 2	3.5	0.0	0.0	vaddss %xmm3, %xmm2, %xmm4; /// 5.	 2	6.5	0.0	0.0	vaddss %xmm4, %xmm5, %xmm6; /// 2	2.4	0.6	1.6 <total>; ///; /// By comparing column [2] with column [1], we get an idea about how many; /// cycles were spent in the scheduler's queue due to data dependencies.; ///; /// In this example, instruction 5 spent an average of ~6 cycles in the; /// scheduler's queue. As soon as operands became ready, the instruction; /// was immediately issued to the pipeline(s).; /// That is expected because instruction 5 cannot transition to the ""ready""; /// state until %xmm4 is written by instruction 4.; ///; //===---------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.h:3454,schedul,scheduler,3454,interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.h,2,['schedul'],['scheduler']
Energy Efficiency,"he compile-; // -time.); //; // The only complication occurs if there are both, local aligned objects, and; // dynamically allocated (variable-sized) objects. The alignment pad will be; // placed between the FP and the local objects, thus preventing the use of the; // FP to access the local objects. At the same time, the variable-sized objects; // will be between the SP and the local objects, thus introducing an unknown; // distance from the SP to the locals.; //; // To avoid this problem, a new register is created that holds the aligned; // address of the bottom of the stack, referred in the sources as AP (aligned; // pointer). The AP will be equal to ""FP-p"", where ""p"" is the smallest pad; // that aligns AP to the required boundary (a maximum of the alignments of; // all stack objects, fixed- and variable-sized). All local objects[1] will; // then use AP as the base pointer.; // [1] The exception is with ""fixed"" stack objects. ""Fixed"" stack objects get; // their name from being allocated at fixed locations on the stack, relative; // to the FP. In the presence of dynamic allocation and local alignment, such; // objects can only be accessed through the FP.; //; // Illustration of the AP:; // FP --+; // |; // ---------------+---------------------+-----+-----------------------++-+--; // Rest of the | Local stack objects | Pad | Fixed stack objects |LR|; // stack frame | (aligned) | | (CSR, spills, etc.) |FP|; // ---------------+---------------------+-----+-----------------+-----+--+--; // |<-- Multiple of the -->|; // stack alignment +-- AP; //; // The AP is set up at the beginning of the function. Since it is not a dedi-; // cated (reserved) register, it needs to be kept live throughout the function; // to be available as the base register for local object accesses.; // Normally, an address of a stack objects is obtained by a pseudo-instruction; // PS_fi. To access local objects with the AP register present, a different; // pseudo-instruction needs to be used: PS_fia. ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp:2163,allocate,allocated,2163,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp,1,['allocate'],['allocated']
Energy Efficiency,"he number of filled bins is returned by; THnSparse::GetNbins(); the bin content for each (linear) bin number can; be retrieved by THnSparse::GetBinContent(linidx, (Int_t*)coord).; After the call, coord will contain the bin coordinate of each axis for the bin; with linear index linidx. A possible call would be. std::cout << hs.GetBinContent(0, coord);; std::cout <<"" is the content of bin [x = "" << coord[0] ""; << "" | y = "" << coord[1] << ""]"" << std::endl;. ## Efficiency; TH1 and TH2 are generally faster than THnSparse for one and two dimensional; distributions. THnSparse becomes competitive for a sparsely filled TH3; with large numbers of bins per dimension. The tutorial sparsehist.C; shows the turning point. On a AMD64 with 8GB memory, THnSparse ""wins""; starting with a TH3 with 30 bins per dimension. Using a THnSparse for a; one-dimensional histogram is only reasonable if it has a huge number of bins. ## Projections; The dimensionality of a THnSparse can be reduced by projecting it to; 1, 2, 3, or n dimensions, which can be represented by a TH1, TH2, TH3, or; a THnSparse. See the Projection() members. To only project parts of the; histogram, call. THnSparse::GetAxis(12)->SetRange(from_bin, to_bin);. ## Internal Representation; An entry for a filled bin consists of its n-dimensional coordinates and; its bin content. The coordinates are compacted to use as few bits as; possible; e.g. a histogram with 10 bins in x and 20 bins in y will only; use 4 bits for the x representation and 5 bits for the y representation.; This is handled by the internal class THnSparseCompactBinCoord.; Bin data (content and coordinates) are allocated in chunks of size; fChunkSize; this parameter can be set when constructing a THnSparse. Each; chunk is represented by an object of class THnSparseArrayChunk. Translation from an n-dimensional bin coordinate to the linear index within; the chunks is done by GetBin(). It creates a hash from the compacted bin; coordinates (the hash of a bin coordinate",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx:2838,reduce,reduced,2838,hist/hist/src/THnSparse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THnSparse.cxx,1,['reduce'],['reduced']
Energy Efficiency,"here X and are now matrices . X is supplied through; the argument and replaced with the solution . #### Invert(TMatrixD &inv); This is of course just a call to MultiSolve with as input argument; the unit matrix . Note that for a matrix a(m,n) with m > n a; pseudo-inverse is calculated . ### Tolerances and Scaling. The tolerance parameter (which is a member of this base class) plays; a crucial role in all operations of the decomposition classes . It; gives the user a powerful tool to monitor and steer the operations; Its default value is sqrt(epsilon) where 1+epsilon = 1. If you do not want to be bothered by the following considerations,; like in most other linear algebra packages, just set the tolerance; with SetTol to an arbitrary small number . The tolerance number is used by each decomposition method to decide; whether the matrix is near singular, except of course SVD which can; handle singular matrices .; For each decomposition this will be checked in a different way; in LU; the matrix is considered singular when, at some point in the; decomposition, a diagonal element < fTol . Therefore, we had to set in; the example above of the (10x10) Hilbert, which is near singular, the; tolerance on 10e-12 . (The fact that we have to set the tolerance <; sqrt(epsilon) is a clear indication that we are losing precision .). If the matrix is flagged as being singular, operations with the; decomposition will fail and will return matrices/vectors that are; invalid . The observant reader will notice that by scaling the complete matrix; by some small number the decomposition will detect a singular matrix .; In this case the user will have to reduce the tolerance number by this; factor . (For CPU time saving we decided not to make this an automatic; procedure) . Code for this could look as follows:; ~~~; const Double_t max_abs = Abs(a).Max();; const Double_t scale = TMath::Min(max_abs,1.);; a.SetTol(a.GetTol()*scale);; ~~~. For usage examples see $ROOTSYS/test/stressLinear.cxx; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx:3991,reduce,reduce,3991,math/matrix/src/TDecompBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TDecompBase.cxx,1,['reduce'],['reduce']
Energy Efficiency,"hm appeared in acm-trans. math. software, vol.9, no. 2,; /// jun., 1983, p. 258-259.; ///; /// TSpline5 computes the coefficients of a quintic natural quintic spli; /// s(x) with knots x(i) interpolating there to given function values:; /// ~~~ {.cpp}; /// s(x(i)) = y(i) for i = 1,2, ..., n.; /// ~~~; /// in each interval (x(i),x(i+1)) the spline function s(xx) is a; /// polynomial of fifth degree:; /// ~~~ {.cpp}; /// s(xx) = ((((f(i)*p+e(i))*p+d(i))*p+c(i))*p+b(i))*p+y(i) (*); /// = ((((-f(i)*q+e(i+1))*q-d(i+1))*q+c(i+1))*q-b(i+1))*q+y(i+1); /// ~~~; /// where p = xx - x(i) and q = x(i+1) - xx.; /// (note the first subscript in the second expression.); /// the different polynomials are pieced together so that s(x) and; /// its derivatives up to s"""" are continuous.; ///; /// ### input:; ///; /// n number of data points, (at least three, i.e. n > 2); /// x(1:n) the strictly increasing or decreasing sequence of; /// knots. the spacing must be such that the fifth power; /// of x(i+1) - x(i) can be formed without overflow or; /// underflow of exponents.; /// y(1:n) the prescribed function values at the knots.; ///; /// ### output:; ///; /// b,c,d,e,f the computed spline coefficients as in (*).; /// (1:n) specifically; /// b(i) = s'(x(i)), c(i) = s""(x(i))/2, d(i) = s""'(x(i))/6,; /// e(i) = s""""(x(i))/24, f(i) = s""""'(x(i))/120.; /// f(n) is neither used nor altered. the five arrays; /// b,c,d,e,f must always be distinct.; ///; /// ### option:; ///; /// it is possible to specify values for the first and second; /// derivatives of the spline function at arbitrarily many knots.; /// this is done by relaxing the requirement that the sequence of; /// knots be strictly increasing or decreasing. specifically:; ///; /// ~~~ {.cpp}; /// if x(j) = x(j+1) then s(x(j)) = y(j) and s'(x(j)) = y(j+1),; /// if x(j) = x(j+1) = x(j+2) then in addition s""(x(j)) = y(j+2).; /// ~~~; ///; /// note that s""""(x) is discontinuous at a double knot and, in; /// addition, s""'(x) is discontinuous at a ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx:1125,power,power,1125,hist/hist/src/TSpline.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSpline.cxx,1,['power'],['power']
Energy Efficiency,"hould ""block out"" those gaps by e.g.; /// just creating a single fixed-offset field that represents the; /// entire ""header"".; ///; /// - The size of a field is not required to be a multiple of, or even; /// greater than, the field's required alignment. The only constraint; /// on fields is that they must not be zero-sized.; ///; /// To simplify the implementation, any fixed-offset fields in the; /// layout must appear at the start of the field array, and they must; /// be ordered by increasing offset.; ///; /// The algorithm will produce a guaranteed-minimal layout with no; /// interior padding in the following ""C-style"" case:; ///; /// - every field's size is a multiple of its required alignment and; /// - either no fields have initially fixed offsets, or the fixed-offset; /// fields have no interior padding and end at an offset that is at; /// least as aligned as all the flexible-offset fields.; ///; /// Otherwise, while the algorithm will make a best-effort attempt to; /// avoid padding, it cannot guarantee a minimal layout, as there is; /// no known efficient algorithm for doing so.; ///; /// The layout produced by this algorithm may not be stable across LLVM; /// releases. Do not use this anywhere where ABI stability is required.; ///; /// Flexible-offset fields with the same size and alignment will be ordered; /// the same way they were in the initial array. Otherwise the current; /// algorithm makes no effort to preserve the initial order of; /// flexible-offset fields.; ///; /// On return, all fields will have been assigned a fixed offset, and the; /// array will be sorted in order of ascending offsets. Note that this; /// means that the fixed-offset fields may no longer form a strict prefix; /// if there's any padding before they end.; ///; /// The return value is the total size of the struct and its required; /// alignment. Note that the total size is not rounded up to a multiple; /// of the required alignment; clients which require this can do so easily.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/OptimizedStructLayout.h:1593,efficient,efficient,1593,interpreter/llvm-project/llvm/include/llvm/Support/OptimizedStructLayout.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/OptimizedStructLayout.h,1,['efficient'],['efficient']
Energy Efficiency,"hus the chromaticity; * calculation has scaled each end-point so that it is on the x+y+z=1 plane; * and chromaticity is the intersection of the vector from the origin to the; * (X,Y,Z) value with the chromaticity plane.; *; * To fully invert the chromaticity calculation we would need the three; * end-point scale factors, (red-scale, green-scale, blue-scale), but these; * were not recorded. Instead we calculated the reference white (X,Y,Z) and; * recorded the chromaticity of this. The reference white (X,Y,Z) would have; * given all three of the scale factors since:; *; * color-C = color-c * color-scale; * white-C = red-C + green-C + blue-C; * = red-c*red-scale + green-c*green-scale + blue-c*blue-scale; *; * But cHRM records only white-x and white-y, so we have lost the white scale; * factor:; *; * white-C = white-c*white-scale; *; * To handle this the inverse transformation makes an arbitrary assumption; * about white-scale:; *; * Assume: white-Y = 1.0; * Hence: white-scale = 1/white-y; * Or: red-Y + green-Y + blue-Y = 1.0; *; * Notice the last statement of the assumption gives an equation in three of; * the nine values we want to calculate. 8 more equations come from the; * above routine as summarised at the top above (the chromaticity; * calculation):; *; * Given: color-x = color-X / (color-X + color-Y + color-Z); * Hence: (color-x - 1)*color-X + color.x*color-Y + color.x*color-Z = 0; *; * This is 9 simultaneous equations in the 9 variables ""color-C"" and can be; * solved by Cramer's rule. Cramer's rule requires calculating 10 9x9 matrix; * determinants, however this is not as bad as it seems because only 28 of; * the total of 90 terms in the various matrices are non-zero. Nevertheless; * Cramer's rule is notoriously numerically unstable because the determinant; * calculation involves the difference of large, but similar, numbers. It is; * difficult to be sure that the calculation is stable for real world values; * and it is certain that it becomes unstable where th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:1852,green,green-Y,1852,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['green'],['green-Y']
Energy Efficiency,"iable x with 2 parameters. The parameters must be initialized via:. ~~~~{.cpp}; fa->SetParameter(0,value_first_parameter);; fa->SetParameter(1,value_second_parameter);; ~~~~. Parameters may be given a name:. ~~~~{.cpp}; fa->SetParName(0,""Constant"");; ~~~~. * Example b:. ~~~~{.cpp}; auto fb = new TF1(""fb"",""gaus(0)*expo(3)"",0,10);; ~~~~. ``gaus(0)`` is a substitute for ``[0]*exp(-0.5*((x-[1])/[2])**2)`` and ``(0)`` means start numbering parameters at ``0``. ``expo(3)`` is a substitute for ``exp([3]+[4]*x)``. #### Case 2: inline expression using TMath functions with parameters. Begin_Macro(source); {; auto fb2 = new TF1(""fa3"",""TMath::Landau(x,[0],[1],0)"",-5,10);; fb2->SetParameters(0.2,1.3);; fb2->Draw();; }; End_Macro. \anchor F3; ### 3 - A lambda expression with variables and parameters. \since **6.00/00:**; TF1 supports using lambda expressions in the formula. This allows, by using a full C++ syntax the full power of lambda; functions and still maintain the capability of storing the function in a file which cannot be done with; function pointer or lambda written not as expression, but as code (see items below). Example on how using lambda to define a sum of two functions.; Note that is necessary to provide the number of parameters. ~~~~{.cpp}; TF1 f1(""f1"",""sin(x)"",0,10);; TF1 f2(""f2"",""cos(x)"",0,10);; TF1 fsum(""f1"",""[&](double *x, double *p){ return p[0]*f1(x) + p[1]*f2(x); }"",0,10,2);; ~~~~. \anchor F4; ### 4 - A general C function with parameters. Consider the macro myfunc.C below:. ~~~~{.cpp}; // Macro myfunc.C; Double_t myfunction(Double_t *x, Double_t *par); {; Float_t xx =x[0];; Double_t f = TMath::Abs(par[0]*sin(par[1]*xx)/xx);; return f;; }; void myfunc(); {; auto f1 = new TF1(""myfunc"",myfunction,0,10,2);; f1->SetParameters(2,1);; f1->SetParNames(""constant"",""coefficient"");; f1->Draw();; }; void myfit(); {; auto h1 = new TH1F(""h1"",""test"",100,0,10);; h1->FillRandom(""myfunc"",20000);; TF1 *f1 = (TF1 *)gROOT->GetFunction(""myfunc"");; f1->SetParameters(800,1);; h1->",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:2701,power,power,2701,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['power'],['power']
Energy Efficiency,"ialization than the recommended superior alternative ROOT::Math::LorentzVector.; ROOT provides specialisations of the ROOT::Math::LorentzVector template which; offer superior runtime performance, i.e.:; - ROOT::Math::PtEtaPhiMVector based on pt (rho),eta,phi and M (t) coordinates in double precision; - ROOT::Math::PtEtaPhiEVector based on pt (rho),eta,phi and E (t) coordinates in double precision; - ROOT::Math::PxPyPzMVector based on px,py,pz and M (mass) coordinates in double precision; - ROOT::Math::PxPyPzEVector based on px,py,pz and E (energy) coordinates in double precision; - ROOT::Math::XYZTVector based on x,y,z,t coordinates (cartesian) in double precision (same as PxPyPzEVector); - ROOT::Math::XYZTVectorF based on x,y,z,t coordinates (cartesian) in float precision (same as PxPyPzEVector but float). More details can be found in the documentation of the @ref GenVector package.; \endparblock. ### Description; TLorentzVector is a general four-vector class, which can be used; either for the description of position and time (x,y,z,t) or momentum and; energy (px,py,pz,E). ### Declaration; TLorentzVector has been implemented as a set a TVector3 and a Double_t variable.; By default all components are initialized by zero. ~~~ {.cpp}; TLorentzVector v1; // initialized by (0., 0., 0., 0.); TLorentzVector v2(1., 1., 1., 1.);; TLorentzVector v3(v1);; TLorentzVector v4(TVector3(1., 2., 3.),4.);; ~~~. For backward compatibility there are two constructors from an Double_t; and Float_t C array. ### Access to the components; There are two sets of access functions to the components of a LorentzVector:; X(), Y(), Z(), T() and Px(),; Py(), Pz() and E(). Both sets return the same values; but the first set is more relevant for use where TLorentzVector; describes a combination of position and time and the second set is more; relevant where TLorentzVector describes momentum and energy:. ~~~ {.cpp}; Double_t xx =v.X();; ...; Double_t tt = v.T();. Double_t px = v.Px();; ...; Double_t e",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TLorentzVector.cxx:1474,energy,energy,1474,math/physics/src/TLorentzVector.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TLorentzVector.cxx,1,['energy'],['energy']
Energy Efficiency,"ibution. The probability density function of the Vavilov distribution; as function of Landau's parameter is given by:; \f[ p(\lambda_L; \kappa, \beta^2) =; \frac{1}{2 \pi i}\int_{c-i\infty}^{c+i\infty} \phi(s) e^{\lambda_L s} ds\f]; where \f$\phi(s) = e^{C} e^{\psi(s)}\f$; with \f$ C = \kappa (1+\beta^2 \gamma )\f$; and \f$\psi(s)= s \ln \kappa + (s+\beta^2 \kappa); \cdot \left ( \int \limits_{0}^{1}; \frac{1 - e^{\frac{-st}{\kappa}}}{t} \,d t- \gamma \right ); - \kappa \, e^{\frac{-s}{\kappa}}\f$.; \f$ \gamma = 0.5772156649\dots\f$ is Euler's constant. For the class VavilovAccurate,; Pdf returns the Vavilov distribution as function of Landau's parameter; \f$\lambda_L = \lambda_V/\kappa - \ln \kappa\f$,; which is the convention used in the CERNLIB routines, and in the tables; by S.M. Seltzer and M.J. Berger: Energy loss stragglin of protons and mesons:; Tabulation of the Vavilov distribution, pp 187-203; in: National Research Council (U.S.), Committee on Nuclear Science:; Studies in penetration of charged particles in matter,; Nat. Akad. Sci. Publication 1133,; Nucl. Sci. Series Report No. 39,; Washington (Nat. Akad. Sci.) 1964, 388 pp.; Available from; <A HREF=""http://books.google.de/books?id=kmMrAAAAYAAJ&lpg=PP9&pg=PA187#v=onepage&q&f=false"">Google books</A>. Therefore, for small values of \f$\kappa < 0.01\f$,; pdf approaches the Landau distribution. For values \f$\kappa > 10\f$, the Gauss approximation should be used; with \f$\mu\f$ and \f$\sigma\f$ given by Vavilov::mean(kappa, beta2); and sqrt(Vavilov::variance(kappa, beta2). The original Vavilov pdf is obtained by; v.Pdf(lambdaV/kappa-log(kappa))/kappa. For detailed description see; B. Schorr, Programs for the Landau and the Vavilov distributions and the corresponding random numbers,; <A HREF=""http://dx.doi.org/10.1016/0010-4655(74)90091-5"">Computer Phys. Comm. 7 (1974) 215-224</A>,; which has been implemented in; <A HREF=""https://cern-tex.web.cern.ch/cern-tex/shortwrupsdir/g116/top.html"">; CERNLIB (G116)</A>.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovAccurate.h:1130,charge,charged,1130,math/mathmore/inc/Math/VavilovAccurate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovAccurate.h,1,['charge'],['charged']
Energy Efficiency,"ic convolution calculated; this way is computationally intensive and prone to stability fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases without need for a RooFormulaVar object: e.g. a Gaussian; resolution PDF do setConvolutionWindow(gaussMean,gaussSigma,5); Note that for a 'wide' Gaussian the -inf to +inf integration; may converge more quickly than that over a finite range!; The default numeric precision is 1e-7, i.e. the global default for; numeric integration but you should experiment with this value to; see if it is sufficient for example by studying the number of function; calls tha",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:1991,consumption,consumption,1991,roofit/roofitcore/src/RooNumConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx,1,['consumption'],['consumption']
Energy Efficiency,"if it requires less padding following LastEnd.; // - A field is preferred if it is more aligned.; // - A field is preferred if it is larger.; // - A field is preferred if it appeared earlier in the initial order.; //; // Minimizing leading padding is a greedy attempt to avoid padding; // entirely. Preferring more-aligned fields is an attempt to eliminate; // stricter constraints earlier, with the idea that weaker alignment; // constraints may be resolvable with less padding elsewhere. These; // These two rules are sufficient to ensure that we get the optimal; // layout in the ""C-style"" case. Preferring larger fields tends to take; // better advantage of large gaps and may be more likely to have a size; // that's a multiple of a useful alignment. Preferring the initial; // order may help somewhat with locality but is mostly just a way of; // ensuring deterministic output.; //; // Note that this algorithm does not guarantee a minimal layout. Picking; // a larger object greedily may leave a gap that cannot be filled as; // efficiently. Unfortunately, solving this perfectly is an NP-complete; // problem (by reduction from bin-packing: let B_i be the bin sizes and; // O_j be the object sizes; add fixed-offset fields such that the gaps; // between them have size B_i, and add flexible-offset fields with; // alignment 1 and size O_j; if the layout size is equal to the end of; // the last fixed-layout field, the objects fit in the bins; note that; // this doesn't even require the complexity of alignment).; // The implementation below is essentially just an optimized version of; // scanning the list of remaining fields looking for the best, which; // would be O(n^2). In the worst case, it doesn't improve on that.; // However, in practice it'll just scan the array of alignment bins; // and consider the first few elements from one or two bins. The; // number of bins is bounded by a small constant: alignments are powers; // of two that are vanishingly unlikely to be over 64 and f",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp:2248,efficient,efficiently,2248,interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp,1,['efficient'],['efficiently']
Energy Efficiency,"ifferent circumstances.; ///; /// 'InterWarpCpyFn' is a pointer to a function that transfers; /// reduced variables across warps. It tunnels, through CUDA; /// shared memory, the thread-private data of type 'ReduceData'; /// from lane 0 of each warp to a lane in the first warp.; /// 4. Call the OpenMP runtime on the GPU to reduce across teams.; /// The last team writes the global reduced value to memory.; ///; /// ret = __kmpc_nvptx_teams_reduce_nowait(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn,; /// scratchpadCopyFn, loadAndReduceFn); ///; /// 'scratchpadCopyFn' is a helper that stores reduced; /// data from the team master to a scratchpad array in; /// global memory.; ///; /// 'loadAndReduceFn' is a helper that loads data from; /// the scratchpad array and reduces it with the input; /// operand.; ///; /// These compiler generated functions hide address; /// calculation and alignment information from the runtime.; /// 5. if ret == 1:; /// The team master of the last team stores the reduced; /// result to the globals in memory.; /// foo += reduceData.foo; bar *= reduceData.bar; ///; ///; /// Warp Reduction Algorithms; ///; /// On the warp level, we have three algorithms implemented in the; /// OpenMP runtime depending on the number of active lanes:; ///; /// Full Warp Reduction; ///; /// The reduce algorithm within a warp where all lanes are active; /// is implemented in the runtime as follows:; ///; /// full_warp_reduce(void *reduce_data,; /// kmp_ShuffleReductFctPtr ShuffleReduceFn) {; /// for (int offset = WARPSIZE/2; offset > 0; offset /= 2); /// ShuffleReduceFn(reduce_data, 0, offset, 0);; /// }; ///; /// The algorithm completes in log(2, WARPSIZE) steps.; ///; /// 'ShuffleReduceFn' is used here with lane_id set to 0 because it is; /// not used therefore we save instructions by not retrieving lane_id; /// from the corresponding special registers. The 4th parameter, which; /// represents the version of the algorithm being used, is set to 0 to; /// sig",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:4459,reduce,reduced,4459,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['reduce'],['reduced']
Energy Efficiency,"ight (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; ***********************************************************************************/; /*! \class TMVA::MethodPDERS; \ingroup TMVA. This is a generalization of the above Likelihood methods to \f$ N_{var} \f$; dimensions, where \f$ N_{var} \f$ is the number of input variables; used in the MVA. If the multi-dimensional probability density functions; (PDFs) for signal and background were known, this method contains the entire; physical information, and is therefore optimal. Usually, kernel estimation; methods are used to approximate the PDFs using the events from the; training sample. A very simple probability density estimator (PDE) has been suggested; in [hep-ex/0211019](http://arxiv.org/abs/hep-ex/0211019). The; PDE for a given test event is obtained from counting the (normalized); number of signal and background (training) events that occur in the; ""vicinity"" of the test event. The volume that describes ""vicinity"" is; user-defined. A [search method based on binary-trees](http://arxiv.org/abs/hep-ex/0211019); is used to effectively reduce the; selection time for the range search. Three different volume definitions; are optional:. - *MinMax:* the volume is defined in each dimension with respect; to the full variable range found in the training sample.; - *RMS:* the volume is defined in each dimensions with respect; to the RMS estimated from the training sample.; - *Adaptive:* a volume element is defined in each dimensions with; respect to the RMS estimated from the training sample. The overall; scale of the volume element is then determined for each event so; that the total number of events confined in the volume be within; a user-defined range. The adaptive range search is used by default.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx:2173,reduce,reduce,2173,tmva/tmva/src/MethodPDERS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx,3,"['Adapt', 'adapt', 'reduce']","['Adaptive', 'adaptive', 'reduce']"
Energy Efficiency,"image html gpad_classtree1.png. The TClassTree class uses the services of the class TPaveClass to; show the class names. By clicking with the right mouse button in; one TPaveClass object, one can invoke the following functions of TClassTree:; - ShowLinks(option) with by default option = ""HMR""; - Draw(classes). By default the class drawn is the one being pointed; - ShowClassesUsedBy(classes) (by default the pointed class); - ShowClassesUsing(classes) (by default the pointed class). The following picture has been generated with the following statements; ~~~ {.cpp}; TClassTree tc1(""tc1"",""TH1"");; tc1.ShowLinks(""HMR"");; ~~~. \image html gpad_classtree2.png. Note that in case of embedded classes or pointers to classes,; the corresponding dashed lines or arrows respectively start; in the TPaveClass object at an X position reflecting the position; in the list of data members. - References by data members to other classes are show with a full red line; - Multiple inheritance is shown with a dashed blue line; - ""Has a"" relation is shown with a dotted cyan line; - References from code is shown by a full green line. Use TClassTree::SetSourceDir to specify the search path for source files.; By default the search path includes the `$ROOTSYS` directory, the current; directory and the subdirectory `src`. The first time TClassTree::Draw is invoked, all the classes in the; current application are processed, including the parsing of the code; to find all classes referenced by the include statements.; This process may take a few seconds. The following commands will be; much faster. A TClassTree object may be saved in a Root file.; This object can be processed later by a Root program that ignores; the original classes. This interesting possibility allows to send; the class structure of an application to a colleague who does not have; your classes. Example:; ~~~ {.cpp}; TFile f(""myClasses.root"",""recreate""); TClassTree *ct = new TClassTree(""ct"",""ATLF*""); ct->Write();; ~~~; You can send at ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx:3203,green,green,3203,graf2d/gpad/src/TClassTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx,1,['green'],['green']
Energy Efficiency,"ime cost of this step, make sure to book all operations *for all RDataFrame computation graphs*; before the first event loop is triggered: just-in-time compilation will happen once for all code required to be generated up to that point, also across different computation graphs. Also make sure not to count the just-in-time compilation time (which happens once before the event loop and does not depend on the size of the dataset) as part of the event loop runtime (which scales with the size of the dataset). RDataFrame has an experimental logging feature that simplifies measuring the time spent in just-in-time compilation and in the event loop (as well as providing some more interesting information). See [Activating RDataFrame execution logs](\ref rdf-logging). ### Memory usage. There are two reasons why RDataFrame may consume more memory than expected. Firstly, each result is duplicated for each worker thread, which e.g. in case of many (possibly multi-dimensional) histograms with fine binning can result in visible memory consumption during the event loop. The thread-local copies of the results are destroyed when the final result is produced. Reducing the number of threads or using coarser binning will reduce the memory usage. Secondly, just-in-time compilation of string expressions or non-templated actions (see the previous paragraph) causes Cling, ROOT's C++ interpreter, to allocate some memory for the generated code that is only released at the end of the application. This commonly results in memory usage creep in long-running applications that create many RDataFrames one after the other. Possible mitigations include creating and running each RDataFrame event loop in a sub-process, or booking all operations for all different RDataFrame computation graphs before the first event loop is triggered, so that the interpreter is invoked only once for all computation graphs:. ~~~{.cpp}; // assuming df1 and df2 are separate computation graphs, do:; auto h1 = df1.Histo1D(""x"")",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:53325,consumption,consumption,53325,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['consumption'],['consumption']
Energy Efficiency,"ime functions, all calling 'shuffleReduceFn' to perform; /// the essential reduction step. Therefore, based on the 4th; /// parameter, this function behaves slightly differently to; /// cooperate with the runtime to ensure correctness under; /// different circumstances.; ///; /// 'InterWarpCpyFn' is a pointer to a function that transfers; /// reduced variables across warps. It tunnels, through CUDA; /// shared memory, the thread-private data of type 'ReduceData'; /// from lane 0 of each warp to a lane in the first warp.; /// 4. Call the OpenMP runtime on the GPU to reduce across teams.; /// The last team writes the global reduced value to memory.; ///; /// ret = __kmpc_nvptx_teams_reduce_nowait(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn,; /// scratchpadCopyFn, loadAndReduceFn); ///; /// 'scratchpadCopyFn' is a helper that stores reduced; /// data from the team master to a scratchpad array in; /// global memory.; ///; /// 'loadAndReduceFn' is a helper that loads data from; /// the scratchpad array and reduces it with the input; /// operand.; ///; /// These compiler generated functions hide address; /// calculation and alignment information from the runtime.; /// 5. if ret == 1:; /// The team master of the last team stores the reduced; /// result to the globals in memory.; /// foo += reduceData.foo; bar *= reduceData.bar; ///; ///; /// Warp Reduction Algorithms; ///; /// On the warp level, we have three algorithms implemented in the; /// OpenMP runtime depending on the number of active lanes:; ///; /// Full Warp Reduction; ///; /// The reduce algorithm within a warp where all lanes are active; /// is implemented in the runtime as follows:; ///; /// full_warp_reduce(void *reduce_data,; /// kmp_ShuffleReductFctPtr ShuffleReduceFn) {; /// for (int offset = WARPSIZE/2; offset > 0; offset /= 2); /// ShuffleReduceFn(reduce_data, 0, offset, 0);; /// }; ///; /// The algorithm completes in log(2, WARPSIZE) steps.; ///; /// 'ShuffleReduceFn' is used here with lane_id ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:4230,reduce,reduces,4230,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['reduce'],['reduces']
Energy Efficiency,"in; P.V. Vavilov: Ionization losses of high-energy heavy particles,; Sov. Phys. JETP 5 (1957) 749 [Zh. Eksp. Teor. Fiz. 32 (1957) 920]. The probability density function of the Vavilov distribution; as function of Landau's parameter is given by:; \f[ p(\lambda_L; \kappa, \beta^2) =; \frac{1}{2 \pi i}\int_{c-i\infty}^{c+i\infty} \phi(s) e^{\lambda_L s} ds\f]; where \f$\phi(s) = e^{C} e^{\psi(s)}\f$; with \f$ C = \kappa (1+\beta^2 \gamma )\f$; and \f$\psi(s)= s \ln \kappa + (s+\beta^2 \kappa); \cdot \left ( \int \limits_{0}^{1}; \frac{1 - e^{\frac{-st}{\kappa}}}{t} \,d t- \gamma \right ); - \kappa \, e^{\frac{-s}{\kappa}}\f$.; \f$ \gamma = 0.5772156649\dots\f$ is Euler's constant. For the class Vavilov,; Pdf returns the Vavilov distribution as function of Landau's parameter; \f$\lambda_L = \lambda_V/\kappa - \ln \kappa\f$,; which is the convention used in the CERNLIB routines, and in the tables; by S.M. Seltzer and M.J. Berger: Energy loss stragglin of protons and mesons:; Tabulation of the Vavilov distribution, pp 187-203; in: National Research Council (U.S.), Committee on Nuclear Science:; Studies in penetration of charged particles in matter,; Nat. Akad. Sci. Publication 1133,; Nucl. Sci. Series Report No. 39,; Washington (Nat. Akad. Sci.) 1964, 388 pp.; Available from; <A HREF=""http://books.google.de/books?id=kmMrAAAAYAAJ&lpg=PP9&pg=PA187#v=onepage&q&f=false"">Google books</A>. Therefore, for small values of \f$\kappa < 0.01\f$,; pdf approaches the Landau distribution. For values \f$\kappa > 10\f$, the Gauss approximation should be used; with \f$\mu\f$ and \f$\sigma\f$ given by Vavilov::Mean(kappa, beta2); and sqrt(Vavilov::Variance(kappa, beta2). The original Vavilov pdf is obtained by; v.Pdf(lambdaV/kappa-log(kappa))/kappa. Two subclasses are provided:; - VavilovFast uses the algorithm by; A. Rotondi and P. Montagna, Fast calculation of Vavilov distribution,; <A HREF=""http://dx.doi.org/10.1016/0168-583X(90)90749-K"">Nucl. Instr. and Meth. B47 (1990) 215-224</A>,; w",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Vavilov.h:1106,Energy,Energy,1106,math/mathmore/inc/Math/Vavilov.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Vavilov.h,1,['Energy'],['Energy']
Energy Efficiency,"indices which order the content of a `RVec`.; For example, this snippet accomplishes in a more expressive way what we just achieved:; ~~~{.cpp}; auto v1_indices = Argsort(v0); // The content of v1_indices is {1, 2, 0}.; v1 = Take(v0, v1_indices);; ~~~. The `Take` utility allows to extract portions of the `RVec`. The content to be *taken*; can be specified with an `RVec` of indices or an integer. If the integer is negative,; elements will be picked starting from the end of the container:; ~~~{.cpp}; RVecF vf {1.f, 2.f, 3.f, 4.f};; auto vf_1 = Take(vf, {1, 3}); // The content is {2.f, 4.f}; auto vf_2 = Take(vf, 2); // The content is {1.f, 2.f}; auto vf_3 = Take(vf, -3); // The content is {2.f, 3.f, 4.f}; ~~~. \anchor usagetdataframe; ## Usage in combination with RDataFrame; RDataFrame leverages internally RVecs. Suppose to have a dataset stored in a; TTree which holds these columns (here we choose C arrays to represent the; collections, they could be as well std::vector instances):; ~~~{.bash}; nPart ""nPart/I"" An integer representing the number of particles; px ""px[nPart]/D"" The C array of the particles' x component of the momentum; py ""py[nPart]/D"" The C array of the particles' y component of the momentum; E ""E[nPart]/D"" The C array of the particles' Energy; ~~~; Suppose you'd like to plot in a histogram the transverse momenta of all particles; for which the energy is greater than 200 MeV.; The code required would just be:; ~~~{.cpp}; RDataFrame d(""mytree"", ""myfile.root"");; auto cutPt = [](RVecD &pxs, RVecD &pys, RVecD &Es) {; auto all_pts = sqrt(pxs * pxs + pys * pys);; auto good_pts = all_pts[Es > 200.];; return good_pts;; };. auto hpt = d.Define(""pt"", cutPt, {""px"", ""py"", ""E""}); .Histo1D(""pt"");; hpt->Draw();; ~~~; And if you'd like to express your selection as a string:; ~~~{.cpp}; RDataFrame d(""mytree"", ""myfile.root"");; auto hpt = d.Define(""pt"", ""sqrt(pxs * pxs + pys * pys)[E>200]""); .Histo1D(""pt"");; hpt->Draw();; ~~~; \anchor RVecdoxyref; **/; // clang-format on",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx:7204,Energy,Energy,7204,math/vecops/inc/ROOT/RVec.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx,2,"['Energy', 'energy']","['Energy', 'energy']"
Energy Efficiency,"inffast.c; * - Change inffast.c entry and loop from avail_in >= 7 to >= 6; * - Remove unnecessary second byte pull from length extra in inffast.c; * - Unroll direct copy to three copies per loop in inffast.c; *; * 1.2.beta2 4 Dec 2002; * - Change external routine names to reduce potential conflicts; * - Correct filename to inffixed.h for fixed tables in inflate.c; * - Make hbuf[] unsigned char to match parameter type in inflate.c; * - Change strm->next_out[-state->offset] to *(strm->next_out - state->offset); * to avoid negation problem on Alphas (64 bit) in inflate.c; *; * 1.2.beta3 22 Dec 2002; * - Add comments on state->bits assertion in inffast.c; * - Add comments on op field in inftrees.h; * - Fix bug in reuse of allocated window after inflateReset(); * - Remove bit fields--back to byte structure for speed; * - Remove distance extra == 0 check in inflate_fast()--only helps for lengths; * - Change post-increments to pre-increments in inflate_fast(), PPC biased?; * - Add compile time option, POSTINC, to use post-increments instead (Intel?); * - Make MATCH copy in inflate() much faster for when inflate_fast() not used; * - Use local copies of stream next and avail values, as well as local bit; * buffer and bit count in inflate()--for speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table() to avoid compiler warnings; * - Move a comment on output buffer sizes from inffast.c to inflate.c; * - Add comments in inffast.c to introduce the inflate_fast() routine; * - Rearrange window copies in inflate_fast() for speed and simplification; * - Unroll last copy for window match in inflate_fast(); * - Use local copies of window variables in inflate_fast() for speed; * - Pull out common wnext == 0 case for speed in inflate_fast(); * - Make op and len in inflate_fast() unsigned for consistency; * - Add FAR to lcode and dcode declarations in inflate_fast(); * - Simplified bad distance check in inflate_fast(); * - Added inf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:1362,allocate,allocated,1362,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,1,['allocate'],['allocated']
Energy Efficiency,"inffast.c; * - Change inffast.c entry and loop from avail_in >= 7 to >= 6; * - Remove unnecessary second byte pull from length extra in inffast.c; * - Unroll direct copy to three copies per loop in inffast.c; *; * 1.2.beta2 4 Dec 2002; * - Change external routine names to reduce potential conflicts; * - Correct filename to inffixed.h for fixed tables in inflate.c; * - Make hbuf[] unsigned char to match parameter type in inflate.c; * - Change strm->next_out[-state->offset] to *(strm->next_out - state->offset); * to avoid negation problem on Alphas (64 bit) in inflate.c; *; * 1.2.beta3 22 Dec 2002; * - Add comments on state->bits assertion in inffast.c; * - Add comments on op field in inftrees.h; * - Fix bug in reuse of allocated window after inflateReset(); * - Remove bit fields--back to byte structure for speed; * - Remove distance extra == 0 check in inflate_fast()--only helps for lengths; * - Change post-increments to pre-increments in inflate_fast(), PPC biased?; * - Add compile time option, POSTINC, to use post-increments instead (Intel?); * - Make MATCH copy in inflate() much faster for when inflate_fast() not used; * - Use local copies of stream next and avail values, as well as local bit; * buffer and bit count in inflate()--for speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table() to avoid compiler warnings; * - Move a comment on output buffer sizes from inffast.c to inflate.c; * - Add comments in inffast.c to introduce the inflate_fast() routine; * - Rearrange window copies in inflate_fast() for speed and simplification; * - Unroll last copy for window match in inflate_fast(); * - Use local copies of window variables in inflate_fast() for speed; * - Pull out common write == 0 case for speed in inflate_fast(); * - Make op and len in inflate_fast() unsigned for consistency; * - Add FAR to lcode and dcode declarations in inflate_fast(); * - Simplified bad distance check in inflate_fast(); * - Added inf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inflate.c:1362,allocate,allocated,1362,graf2d/asimage/src/libAfterImage/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inflate.c,1,['allocate'],['allocated']
Energy Efficiency,"ing a few constant or type parameters.; //; // Most obviously, the intrinsics in a single parametrised family will have; // code generation sequences that only differ in a type or two, e.g. vaddq_s8; // and vaddq_u16 will look the same apart from putting a different vector type; // in the call to CGM.getIntrinsic(). But also, completely different intrinsics; // will often code-generate in the same way, with only a different choice of; // _which_ IR intrinsic they lower to (e.g. vaddq_m_s8 and vmulq_m_s8), but; // marshalling the arguments and return values of the IR intrinsic in exactly; // the same way. And others might differ only in some other kind of constant,; // such as a lane index.; //; // So, when we generate the IR-building code for all these intrinsics, we keep; // track of every value that could possibly be pulled out of the code and; // stored ahead of time in a local variable. Then we group together intrinsics; // by textual equivalence of the code that would result if _all_ those; // parameters were stored in local variables. That gives us maximal sets that; // can be implemented by a single piece of IR-building code by changing; // parameter values ahead of time.; //; // After we've done that, we do a second pass in which we only allocate _some_; // of the parameters into local variables, by tracking which ones have the same; // values as each other (so that a single variable can be reused) and which; // ones are the same across the whole set (so that no variable is needed at; // all).; //; // Hence the class below. Its allocParam method is invoked during code; // generation by every method of a Result subclass (see below) that wants to; // give it the opportunity to pull something out into a switchable parameter.; // It returns a variable name for the parameter, or (if it's being used in the; // second pass once we've decided that some parameters don't need to be stored; // in variables after all) it might just return the input expression unchanged.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:1448,allocate,allocate,1448,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,1,['allocate'],['allocate']
Energy Efficiency,"int screen,; * Window root, int default_depth );; * INPUTS; * asv 		- preallocated ASVisual structure.; * dpy 		- valid pointer to opened X display.; * screen 	- screen number on which to query visuals.; * root 	- root window on that screen.; * default_depth- default colordepth of the screen.; * visual_id - optional ID of prefered Visual.; * cmap - optional colormap to be used.; * RETURN VALUE; * True on success, False on failure; * ASVisual structure pointed by asv will have the following data; * members set on success :; * dpy, visual_info, colormap, own_colormap, black_pixel, white_pixel.; * DESCRIPTION; * query_screen_visual_id() will go though prioritized list of possible; * Visuals and attempt to match those to what is available on the; * specified screen. If all items from list fail, then it goes about; * querying default visual.; * query_screen_visual is identical to query_screen_visual_id with; * visual_id and cmap set to 0.; * Once X Visual has been identified, we create X colormap and allocate; * white and black pixels from it.; *********/; /****f* libAfterImage/setup_truecolor_visual(); * NAME; * setup_truecolor_visual(); * SYNOPSIS; * Bool setup_truecolor_visual( ASVisual *asv );; * INPUTS; * asv 		- preallocated ASVisual structure.; * RETURN VALUE; * True on success, False if visual is not TrueColor.; * DESCRIPTION; * setup_truecolor_visual() checks if Visual is indeed TrueColor and if; * so it goes about querying color masks, deducing real XImage; * colordepth, and whether we work in BGR mode. It then goes about; * setting up correct hooks to X IO functions.; *********/; /****f* libAfterImage/setup_pseudo_visual(); * NAME; * setup_pseudo_visual(); * SYNOPSIS; * void setup_pseudo_visual( ASVisual *asv );; * INPUTS; * asv 		- preallocated ASVisual structure.; * DESCRIPTION; * setup_pseudo_visual() assumes that Visual is PseudoColor. It then; * tries to decide as to how many colors preallocate, and goes about; * setting up correct X IO hooks and possibly ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h:1349,allocate,allocate,1349,graf2d/asimage/src/libAfterImage/asvisual.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h,1,['allocate'],['allocate']
Energy Efficiency,"int to inputs and outputs, but the; /// actual semantics can be only visible at runtime. In the Linux kernel it's; /// also possible that the arguments only indicate the offset for a base taken; /// from a segment register, so it's dangerous to treat any asm() arguments as; /// pointers. We take a conservative approach generating calls to; /// __msan_instrument_asm_store(ptr, size); /// , which defer the memory unpoisoning to the runtime library.; /// The latter can perform more complex address checks to figure out whether; /// it's safe to touch the shadow memory.; /// Like with atomic operations, we call __msan_instrument_asm_store() before; /// the assembly call, so that changes to the shadow memory will be seen by; /// other threads together with main memory initialization.; ///; /// KernelMemorySanitizer (KMSAN) implementation.; ///; /// The major differences between KMSAN and MSan instrumentation are:; /// - KMSAN always tracks the origins and implies msan-keep-going=true;; /// - KMSAN allocates shadow and origin memory for each page separately, so; /// there are no explicit accesses to shadow and origin in the; /// instrumentation.; /// Shadow and origin values for a particular X-byte memory location; /// (X=1,2,4,8) are accessed through pointers obtained via the; /// __msan_metadata_ptr_for_load_X(ptr); /// __msan_metadata_ptr_for_store_X(ptr); /// functions. The corresponding functions check that the X-byte accesses; /// are possible and returns the pointers to shadow and origin memory.; /// Arbitrary sized accesses are handled with:; /// __msan_metadata_ptr_for_load_n(ptr, size); /// __msan_metadata_ptr_for_store_n(ptr, size);; /// Note that the sanitizer code has to deal with how shadow/origin pairs; /// returned by the these functions are represented in different ABIs. In; /// the X86_64 ABI they are returned in RDX:RAX, and in the SystemZ ABI they; /// are written to memory pointed to by a hidden parameter.; /// - TLS variables are stored in a single pe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp:6218,allocate,allocates,6218,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,1,['allocate'],['allocates']
Energy Efficiency,"interference (register pressure) across; // IndirectBr edges. Since IndirectBr edges tend to touch on many blocks,; // reducing liveness interference across those edges benefits global register; // allocation. Currently handles only certain cases.; //; // For example, unmerge %GEPI and %UGEPI as below.; //; // ---------- BEFORE ----------; // SrcBlock:; // ...; // %GEPIOp = ...; // ...; // %GEPI = gep %GEPIOp, Idx; // ...; // indirectbr ... [ label %DstB0, label %DstB1, ... label %DstBi ... ]; // (* %GEPI is alive on the indirectbr edges due to other uses ahead); // (* %GEPIOp is alive on the indirectbr edges only because of it's used by; // %UGEPI); //; // DstB0: ... (there may be a gep similar to %UGEPI to be unmerged); // DstB1: ... (there may be a gep similar to %UGEPI to be unmerged); // ...; //; // DstBi:; // ...; // %UGEPI = gep %GEPIOp, UIdx; // ...; // ---------------------------; //; // ---------- AFTER ----------; // SrcBlock:; // ... (same as above); // (* %GEPI is still alive on the indirectbr edges); // (* %GEPIOp is no longer alive on the indirectbr edges as a result of the; // unmerging); // ...; //; // DstBi:; // ...; // %UGEPI = gep %GEPI, (UIdx-Idx); // ...; // ---------------------------; //; // The register pressure on the IndirectBr edges is reduced because %GEPIOp is; // no longer alive on them.; //; // We try to unmerge GEPs here in CodGenPrepare, as opposed to limiting merging; // of GEPs in the first place in InstCombiner::visitGetElementPtrInst() so as; // not to disable further simplications and optimizations as a result of GEP; // merging.; //; // Note this unmerging may increase the length of the data flow critical path; // (the path from %GEPIOp to %UGEPI would go through %GEPI), which is a tradeoff; // between the register pressure and the length of data-flow critical; // path. Restricting this to the uncommon IndirectBr case would minimize the; // impact of potentially longer critical path, if any, and the impact on compile; // time.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:1325,reduce,reduced,1325,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['reduce'],['reduced']
Energy Efficiency,"ion exists in the form of; // a compute kernel, we assume that only the kernel, and all functions; // reachable from it, constitute code that the user expects the accelerator; // to execute. Thus, we identify the set of all functions reachable from; // kernels, and then remove all unreachable ones. This last part is necessary; // because it is possible for code that the user did not expect to execute on; // an accelerator to contain constructs that cannot be handled by the target; // BE, which cannot be provably demonstrated to be dead code in general, and; // thus can lead to mis-compilation. The degenerate case of this is when a; // Module contains no kernels (the parent TU had no algorithm invocations fit; // for acceleration), which we handle by completely emptying said module.; // **NOTE**: The above does not handle indirectly reachable functions i.e.; // it is possible to obtain a case where the target of an indirect; // call is otherwise unreachable and thus is removed; this; // restriction is aligned with the current `-hipstdpar` limitations; // and will be relaxed in the future.; //; // 2. AllocationInterposition (required only when on-demand paging is; // unsupported): Some accelerators or operating systems might not support; // transparent on-demand paging. Thus, they would only be able to access; // memory that is allocated by an accelerator-aware mechanism. For such cases; // the user can opt into enabling allocation / deallocation interposition,; // whereby we replace calls to known allocation / deallocation functions with; // calls to runtime implemented equivalents that forward the requests to; // accelerator-aware interfaces. We also support freeing system allocated; // memory that ends up in one of the runtime equivalents, since this can; // happen if e.g. a library that was compiled without interposition returns; // an allocation that can be validly passed to `free`.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/HipStdPar/HipStdPar.cpp:1945,allocate,allocated,1945,interpreter/llvm-project/llvm/lib/Transforms/HipStdPar/HipStdPar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/HipStdPar/HipStdPar.cpp,2,['allocate'],['allocated']
Energy Efficiency,"ion variables (number, data types); /// and the reduction operators. This allows a simpler interface; /// and implementation while still attaining good performance.; ///; /// Pseudocode for the aforementioned OpenMP program generated by the; /// compiler is as follows:; ///; /// 1. Create private copies of reduction variables on each OpenMP; /// thread: 'foo_private', 'bar_private'; /// 2. Each OpenMP thread reduces the chunk of 'A' and 'B' assigned; /// to it and writes the result in 'foo_private' and 'bar_private'; /// respectively.; /// 3. Call the OpenMP runtime on the GPU to reduce within a team; /// and store the result on the team master:; ///; /// __kmpc_nvptx_parallel_reduce_nowait_v2(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn); ///; /// where:; /// struct ReduceData {; /// double *foo;; /// double *bar;; /// } reduceData; /// reduceData.foo = &foo_private; /// reduceData.bar = &bar_private; ///; /// 'shuffleReduceFn' and 'interWarpCpyFn' are pointers to two; /// auxiliary functions generated by the compiler that operate on; /// variables of type 'ReduceData'. They aid the runtime perform; /// algorithmic steps in a data agnostic manner.; ///; /// 'shuffleReduceFn' is a pointer to a function that reduces data; /// of type 'ReduceData' across two OpenMP threads (lanes) in the; /// same warp. It takes the following arguments as input:; ///; /// a. variable of type 'ReduceData' on the calling lane,; /// b. its lane_id,; /// c. an offset relative to the current lane_id to generate a; /// remote_lane_id. The remote lane contains the second; /// variable of type 'ReduceData' that is to be reduced.; /// d. an algorithm version parameter determining which reduction; /// algorithm to use.; ///; /// 'shuffleReduceFn' retrieves data from the remote lane using; /// efficient GPU shuffle intrinsics and reduces, using the; /// algorithm specified by the 4th parameter, the two operands; /// element-wise. The result is written to the first operand.; ///; /// Diff",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:2221,Reduce,ReduceData,2221,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['Reduce'],['ReduceData']
Energy Efficiency,"is usefull when libAfterImage is used with; * an app that has its own approach to Visual handling, and since Visuals; * on all Windows, Pixmaps and colormaps must match, there is a need to; * synchronise visuals used by an app and libAfterImage.; *********/; /****f* libAfterImage/create_asvisual(); * NAME; * create_asvisual(); * SYNOPSIS; * ASVisual *create_asvisual( Display *dpy, int screen,; * int default_depth,; * ASVisual *reusable_memory );; * INPUTS; * dpy 		- valid pointer to opened X display.; * screen 	- screen number on which to query visuals.; * root 	- root window on that screen.; * default_depth- default colordepth of the screen.; * reusable_memory - pointer to preallocated ASVisual structure.; * RETURN VALUE; * Pointer to ASVisual structure initialized with enough information; * to be able to deal with current X Visual.; * DESCRIPTION; * This function calls all the needed functions in order to setup new; * ASVisual structure for the specified screen. If reusable_memory is; * not null - it will not allocate new ASVisual structure, but instead; * will use supplied one. Useful for allocating ASVisual on stack.; * It is different from create_asvisualfor_id() in that it will attempt; * to autodetect best possible visual for the screen. For example on some; * SUN Solaris X servers there will be both 8bpp pseudocolor and 24bpp; * truecolor, and default will be 8bpp. In this scenario libAfterImage; * will detect and use 24bpp true color visual, thus producing much better; * results.; *********/; /****f* libAfterImage/destroy_asvisual(); * NAME; * destroy_asvisual(); * SYNOPSIS; * void destroy_asvisual( ASVisual *asv, Bool reusable );; * INPUTS; * asv - valid ASVisual structure.; * reusable - if True it will cause function to not free object; * itself.; * DESCRIPTION; * Cleanup function. Frees all the memory and deallocates all the; * resources. If reusable is False it will also free the object, pointed; * to by asv.; * EXAMPLE; * asview.c: ASView.2; *********/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h:2167,allocate,allocate,2167,graf2d/asimage/src/libAfterImage/asvisual.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h,1,['allocate'],['allocate']
Energy Efficiency,"is::TGaxis(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax,; const char *func, Int_t ndiv, Option_t *chopt,; Double_t gridlength); ~~~; Where:. - xmin : X origin coordinate in user's coordinates space.; - xmax : X end axis coordinate in user's coordinates space.; - ymin : Y origin coordinate in user's coordinates space.; - ymax : Y end axis coordinate in user's coordinates space.; - func : function defining axis labels and tick marks.; - ndiv : Number of divisions.; - ndiv=N1 + 100*N2 + 10000*N3; - N1=number of 1st divisions.; - N2=number of 2nd divisions.; - N3=number of 3rd divisions. e.g.:; - ndiv=0 --> no tick marks.; - ndiv=2 --> 2 divisions, one tick mark in the middle of the axis.; - chopt : Drawing options (see below).; - gridlength: grid length on main tick marks. It should be noted that `func` is not defined in the user's coordinate space,; but in the new TGaxis space. If `x` is the original axis, `w` the new axis,; and `w = f(x)` (for example, `f` is a calibration function converting ADC; channels `x` to energy `w`), then `func` must be supplied as `f^{-1}(w)`. Examples:. Begin_Macro(source); {; TCanvas *c2 = new TCanvas(""c2"",""c2"",10,10,700,500);. gPad->DrawFrame(0.,-2.,10.,2);. TF1 *f1=new TF1(""f1"",""-x"",-10,10);; TGaxis *A1 = new TGaxis(0,2,10,2,""f1"",510,""-"");; A1->SetTitle(""axis with decreasing values"");; A1->Draw();. TF1 *f2=new TF1(""f2"",""exp(x)"",0,2);; TGaxis *A2 = new TGaxis(1,1,9,1,""f2"");; A2->SetTitle(""exponential axis"");; A2->SetLabelSize(0.03);; A2->SetTitleSize(0.03);; A2->SetTitleOffset(1.2);; A2->Draw();. TF1 *f3=new TF1(""f3"",""log10(x)"",1,1000);; TGaxis *A3 = new TGaxis(2,-2,2,0,""f3"",505,"""");; A3->SetTitle(""logarithmic axis"");; A3->SetLabelSize(0.02);; A3->SetTitleSize(0.03);; A3->SetTitleOffset(0.); // Axis title automatically placed; A3->Draw();; }; End_Macro. Note that this functionality has some limitations and does not follow all the TGaxis setting.; In particular the number of divisions or the maximum number digits do not apply",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx:3493,energy,energy,3493,graf2d/graf/src/TGaxis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TGaxis.cxx,1,['energy'],['energy']
Energy Efficiency,"istribution. The probability density function of the Vavilov distribution; as function of Landau's parameter is given by:; \f[ p(\lambda_L; \kappa, \beta^2) =; \frac{1}{2 \pi i}\int_{c-i\infty}^{c+i\infty} \phi(s) e^{\lambda_L s} ds\f]; where \f$\phi(s) = e^{C} e^{\psi(s)}\f$; with \f$ C = \kappa (1+\beta^2 \gamma )\f$; and \f$\psi(s)= s \ln \kappa + (s+\beta^2 \kappa); \cdot \left ( \int \limits_{0}^{1}; \frac{1 - e^{\frac{-st}{\kappa}}}{t} \,d t- \gamma \right ); - \kappa \, e^{\frac{-s}{\kappa}}\f$.; \f$ \gamma = 0.5772156649\dots\f$ is Euler's constant. For the class VavilovFast,; Pdf returns the Vavilov distribution as function of Landau's parameter; \f$\lambda_L = \lambda_V/\kappa - \ln \kappa\f$,; which is the convention used in the CERNLIB routines, and in the tables; by S.M. Seltzer and M.J. Berger: Energy loss stragglin of protons and mesons:; Tabulation of the Vavilov distribution, pp 187-203; in: National Research Council (U.S.), Committee on Nuclear Science:; Studies in penetration of charged particles in matter,; Nat. Akad. Sci. Publication 1133,; Nucl. Sci. Series Report No. 39,; Washington (Nat. Akad. Sci.) 1964, 388 pp.; Available from; <A HREF=""http://books.google.de/books?id=kmMrAAAAYAAJ&lpg=PP9&pg=PA187#v=onepage&q&f=false"">Google books</A>. Therefore, for small values of \f$\kappa < 0.01\f$,; pdf approaches the Landau distribution. For values \f$\kappa > 10\f$, the Gauss approximation should be used; with \f$\mu\f$ and \f$\sigma\f$ given by Vavilov::mean(kappa, beta2); and sqrt(Vavilov::variance(kappa, beta2). For values \f$\kappa > 10\f$, the Gauss approximation should be used; with \f$\mu\f$ and \f$\sigma\f$ given by Vavilov::mean(kappa, beta2); and sqrt(Vavilov::variance(kappa, beta2). The original Vavilov pdf is obtained by; v.Pdf(lambdaV/kappa-log(kappa))/kappa. For detailed description see; A. Rotondi and P. Montagna, Fast calculation of Vavilov distribution,; <A HREF=""http://dx.doi.org/10.1016/0168-583X(90)90749-K"">Nucl. Instr. and Meth. ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovFast.h:1126,charge,charged,1126,math/mathmore/inc/Math/VavilovFast.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/VavilovFast.h,1,['charge'],['charged']
Energy Efficiency,"isual *asv,; * ASImage *src,; * int offset_x,; * int offset_y,; * unsigned int to_width,; * unsigned int to_height,; * ARGB32 tint,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality );; * INPUTS; * asv - pointer to valid ASVisual structure; * src - source ASImage; * offset_x - left clip margin; * offset_y - right clip margin; * to_width - desired width of the resulting image; * to_height - desired height of the resulting image; * tint - ARGB32 value describing tinting color.; * out_format 	- optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out- compression level of resulting image in range 0-100.; * quality - output quality; * RETURN VALUE; * returns newly created and encoded ASImage on success, NULL of failure.; * DESCRIPTION; * Offset_x and offset_y define origin on source image from which; * tiling will start. If offset_x or offset_y is outside of the image; * boundaries, then it will be reduced by whole number of image sizes to; * fit inside the image. At the time of tiling image will be tinted; * unless tint == 0.; * EXAMPLE; * ASTile; *********/; /****f* libAfterImage/transform/merge_layers(); * NAME; * merge_layers(); * SYNOPSIS; * ASImage *merge_layers ( struct ASVisual *asv,; * ASImageLayer *layers, int count,; * unsigned int dst_width,; * unsigned int dst_height,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality);; * INPUTS; * asv - pointer to valid ASVisual structure; * layers - array of ASImageLayer structures that will be rendered; * one on top of another. First element corresponds to; * the bottommost layer.; * dst_width - desired width of the resulting image; * dst_height - desired height of the resulting image; * out_format 	- optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out - compression level of resulting image in range 0-100.; * quality - ou",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h:3730,reduce,reduced,3730,graf2d/asimage/src/libAfterImage/transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h,1,['reduce'],['reduced']
Energy Efficiency,"its ILP via compiler transformations.; //; // There are multiple methods for analyzing a loop and creating a schedule.; // An example algorithm is Swing Modulo Scheduling (implemented by the; // MachinePipeliner). The details of how a schedule is arrived at are irrelevant; // for the task of actually rewriting a loop to adhere to the schedule, which; // is what this file does.; //; // A schedule is, for every instruction in a block, a Cycle and a Stage. Note; // that we only support single-block loops, so ""block"" and ""loop"" can be used; // interchangably.; //; // The Cycle of an instruction defines a partial order of the instructions in; // the remapped loop. Instructions within a cycle must not consume the output; // of any instruction in the same cycle. Cycle information is assumed to have; // been calculated such that the processor will execute instructions in; // lock-step (for example in a VLIW ISA).; //; // The Stage of an instruction defines the mapping between logical loop; // iterations and pipelined loop iterations. An example (unrolled) pipeline; // may look something like:; //; // I0[0] Execute instruction I0 of iteration 0; // I1[0], I0[1] Execute I0 of iteration 1 and I1 of iteration 1; // I1[1], I0[2]; // I1[2], I0[3]; //; // In the schedule for this unrolled sequence we would say that I0 was scheduled; // in stage 0 and I1 in stage 1:; //; // loop:; // [stage 0] x = I0; // [stage 1] I1 x (from stage 0); //; // And to actually generate valid code we must insert a phi:; //; // loop:; // x' = phi(x); // x = I0; // I1 x'; //; // This is a simple example; the rules for how to generate correct code given; // an arbitrary schedule containing loop-carried values are complex.; //; // Note that these examples only mention the steady-state kernel of the; // generated loop; prologs and epilogs must be generated also that prime and; // flush the pipeline. Doing so is nontrivial.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h:1769,schedul,schedule,1769,interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/ModuloSchedule.h,3,['schedul'],"['schedule', 'scheduled']"
Energy Efficiency,"itset builder cannot; // re-arrange functions in a particular order and base its calculations on the; // layout of the functions' entry points, as we have no idea how large a; // particular function will end up being (the size could even depend on what; // this pass does!) Instead, we build a jump table, which is a block of code; // consisting of one branch instruction for each of the functions in the bit; // set that branches to the target function, and redirect any taken function; // addresses to the corresponding jump table entry. In the object file's; // symbol table, the symbols for the target functions also refer to the jump; // table entries, so that addresses taken outside the module will pass any; // verification done inside the module.; //; // In more concrete terms, suppose we have three functions f, g, h which are; // of the same type, and a function foo that returns their addresses:; //; // f:; // mov 0, %eax; // ret; //; // g:; // mov 1, %eax; // ret; //; // h:; // mov 2, %eax; // ret; //; // foo:; // mov f, %eax; // mov g, %edx; // mov h, %ecx; // ret; //; // We output the jump table as module-level inline asm string. The end result; // will (conceptually) look like this:; //; // f = .cfi.jumptable; // g = .cfi.jumptable + 4; // h = .cfi.jumptable + 8; // .cfi.jumptable:; // jmp f.cfi ; 5 bytes; // int3 ; 1 byte; // int3 ; 1 byte; // int3 ; 1 byte; // jmp g.cfi ; 5 bytes; // int3 ; 1 byte; // int3 ; 1 byte; // int3 ; 1 byte; // jmp h.cfi ; 5 bytes; // int3 ; 1 byte; // int3 ; 1 byte; // int3 ; 1 byte; //; // f.cfi:; // mov 0, %eax; // ret; //; // g.cfi:; // mov 1, %eax; // ret; //; // h.cfi:; // mov 2, %eax; // ret; //; // foo:; // mov f, %eax; // mov g, %edx; // mov h, %ecx; // ret; //; // Because the addresses of f, g, h are evenly spaced at a power of 2, in the; // normal case the check can be carried out using the same kind of simple; // arithmetic that we normally use for globals.; // FIXME: find a better way to represent the jumptable in the IR.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/LowerTypeTests.cpp:1842,power,power,1842,interpreter/llvm-project/llvm/lib/Transforms/IPO/LowerTypeTests.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/LowerTypeTests.cpp,1,['power'],['power']
Energy Efficiency,"ive lanes:; ///; /// Full Warp Reduction; ///; /// The reduce algorithm within a warp where all lanes are active; /// is implemented in the runtime as follows:; ///; /// full_warp_reduce(void *reduce_data,; /// kmp_ShuffleReductFctPtr ShuffleReduceFn) {; /// for (int offset = WARPSIZE/2; offset > 0; offset /= 2); /// ShuffleReduceFn(reduce_data, 0, offset, 0);; /// }; ///; /// The algorithm completes in log(2, WARPSIZE) steps.; ///; /// 'ShuffleReduceFn' is used here with lane_id set to 0 because it is; /// not used therefore we save instructions by not retrieving lane_id; /// from the corresponding special registers. The 4th parameter, which; /// represents the version of the algorithm being used, is set to 0 to; /// signify full warp reduction.; ///; /// In this version, 'ShuffleReduceFn' behaves, per element, as follows:; ///; /// #reduce_elem refers to an element in the local lane's data structure; /// #remote_elem is retrieved from a remote lane; /// remote_elem = shuffle_down(reduce_elem, offset, WARPSIZE);; /// reduce_elem = reduce_elem REDUCE_OP remote_elem;; ///; /// Contiguous Partial Warp Reduction; ///; /// This reduce algorithm is used within a warp where only the first; /// 'n' (n <= WARPSIZE) lanes are active. It is typically used when the; /// number of OpenMP threads in a parallel region is not a multiple of; /// WARPSIZE. The algorithm is implemented in the runtime as follows:; ///; /// void; /// contiguous_partial_reduce(void *reduce_data,; /// kmp_ShuffleReductFctPtr ShuffleReduceFn,; /// int size, int lane_id) {; /// int curr_size;; /// int offset;; /// curr_size = size;; /// mask = curr_size/2;; /// while (offset>0) {; /// ShuffleReduceFn(reduce_data, lane_id, offset, 1);; /// curr_size = (curr_size+1)/2;; /// offset = curr_size/2;; /// }; /// }; ///; /// In this version, 'ShuffleReduceFn' behaves, per element, as follows:; ///; /// remote_elem = shuffle_down(reduce_elem, offset, WARPSIZE);; /// if (lane_id < offset); /// reduce_elem = reduce_e",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:5861,reduce,reduce,5861,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['reduce'],['reduce']
Energy Efficiency,"k?. FOAM is the simplified version of the multi-dimensional general purpose; Monte Carlo event generator (integrator) FOAM.; It creates hyper-rectangular ""foam of cells"", which is more dense around its peaks.; See the following 2-dim. example of the map of 1000 cells for doubly peaked distribution:. \image html foam_MapCamel1000.png width=400. FOAM is now fully integrated with the ROOT package.; The important bonus of the ROOT use is persistency of the FOAM objects!. For more sophisticated problems full version of FOAM may be more appropriate:; See [full version of FOAM](http://jadach.home.cern.ch/jadach/Foam/Index.html). ### Simple example of the use of FOAM:. Begin_Macro(source); ../../../tutorials/foam/foam_kanwa.C; End_Macro. ### Canonical nine steering parameters of FOAM. | Name | default | Description |; |----------|----------|--------------------------------------------------------|; | kDim | 0 | Dimension of the integration space. Must be redefined! |; | nCells | 1000 | No of allocated number of cells, |; | nSampl | 200 | No. of MC events in the cell MC exploration |; | nBin | 8 | No. of bins in edge-histogram in cell exploration |; | OptRej | 1 | OptRej = 0, weighted; OptRej=1, wt=1 MC events |; | OptDrive | 2 | Maximum weight reduction, =1 for variance reduction |; | EvPerBin | 25 | Maximum number of the effective wt=1 events/bin, |; | | | EvPerBin=0 deactivates this option |; | Chat | 1 | =0,1,2 is the ``chat level'' in the standard output |; | MaxWtRej | 1.1 | Maximum weight used to get w=1 MC events |. The above can be redefined before calling Initialize() method,; for instance `FoamObject->SetkDim(15)` sets dimension of the distribution to 15.; Only `kDim` HAS TO BE redefined, the other parameters may be left at their defaults.; `nCell` may be increased up to about million cells for wildly peaked distributions.; Increasing `nSampl` sometimes helps, but it may cost CPU time.; `MaxWtRej` may need to be increased for wild a distribution, while using `OptRe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx:1925,allocate,allocated,1925,math/foam/src/TFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx,1,['allocate'],['allocated']
Energy Efficiency,"l of the FunctionInfo objects have been added, the; /// GsymCreator::finalize(...) must be called prior to saving. This function; /// will sort the FunctionInfo objects, finalize the string table, and do any; /// other passes on the information needed to prepare the information to be; /// saved.; ///; /// Once the object has been finalized, it can be saved to a file or section.; ///; /// ENCODING; ///; /// GSYM files are designed to be memory mapped into a process as shared, read; /// only data, and used as is.; ///; /// The GSYM file format when in a stand alone file consists of:; /// - Header; /// - Address Table; /// - Function Info Offsets; /// - File Table; /// - String Table; /// - Function Info Data; ///; /// HEADER; ///; /// The header is fully described in ""llvm/DebugInfo/GSYM/Header.h"".; ///; /// ADDRESS TABLE; ///; /// The address table immediately follows the header in the file and consists; /// of Header.NumAddresses address offsets. These offsets are sorted and can be; /// binary searched for efficient lookups. Addresses in the address table are; /// stored as offsets from a 64 bit base address found in Header.BaseAddress.; /// This allows the address table to contain 8, 16, or 32 offsets. This allows; /// the address table to not require full 64 bit addresses for each address.; /// The resulting GSYM size is smaller and causes fewer pages to be touched; /// during address lookups when the address table is smaller. The size of the; /// address offsets in the address table is specified in the header in; /// Header.AddrOffSize. The first offset in the address table is aligned to; /// Header.AddrOffSize alignment to ensure efficient access when loaded into; /// memory.; ///; /// FUNCTION INFO OFFSETS TABLE; ///; /// The function info offsets table immediately follows the address table and; /// consists of Header.NumAddresses 32 bit file offsets: one for each address; /// in the address table. This data is aligned to a 4 byte boundary. The; /// offsets in ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/GsymCreator.h:1936,efficient,efficient,1936,interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/GsymCreator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/GsymCreator.h,1,['efficient'],['efficient']
Energy Efficiency,"le to efficiently reuse the workspace across; * multiple compressions **even when the compression parameters change** and; * we need to resize some of the objects (where possible).; *; * To attempt to manage this buffer, given these constraints, the ZSTD_cwksp; * abstraction was created. It works as follows:; *; * Workspace Layout:; *; * [ ... workspace ... ]; * [objects][tables ... ->] free space [<- ... aligned][<- ... buffers]; *; * The various objects that live in the workspace are divided into the; * following categories, and are allocated separately:; *; * - Static objects: this is optionally the enclosing ZSTD_CCtx or ZSTD_CDict,; * so that literally everything fits in a single buffer. Note: if present,; * this must be the first object in the workspace, since ZSTD_customFree{CCtx,; * CDict}() rely on a pointer comparison to see whether one or two frees are; * required.; *; * - Fixed size objects: these are fixed-size, fixed-count objects that are; * nonetheless ""dynamically"" allocated in the workspace so that we can; * control how they're initialized separately from the broader ZSTD_CCtx.; * Examples:; * - Entropy Workspace; * - 2 x ZSTD_compressedBlockState_t; * - CDict dictionary contents; *; * - Tables: these are any of several different datastructures (hash tables,; * chain tables, binary trees) that all respect a common format: they are; * uint32_t arrays, all of whose values are between 0 and (nextSrc - base).; * Their sizes depend on the cparams.; *; * - Aligned: these buffers are used for various purposes that require 4 byte; * alignment, but don't require any initialization before they're used.; *; * - Buffers: these buffers are used for various purposes that don't require; * any alignment or initialization before they're used. This means they can; * be moved around at no cost for a new compression.; *; * Allocating Memory:; *; * The various types of objects must be allocated in order, so they can be; * correctly packed into the workspace buffer. Tha",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_cwksp.h:2478,allocate,allocated,2478,builtins/zstd/compress/zstd_cwksp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_cwksp.h,1,['allocate'],['allocated']
Energy Efficiency,"lhost will be available:; ///; /// WebGui.HttpLoopback: yes; ///; /// Or one could specify hostname which should be used for binding of server socket; ///; /// WebGui.HttpBind: hostname | ipaddress; ///; /// To use secured protocol, following parameter should be specified; ///; /// WebGui.UseHttps: yes; /// WebGui.ServerCert: sertificate_filename.pem; ///; /// Alternatively, one can specify unix socket to handle requests:; ///; /// WebGui.UnixSocket: /path/to/unix/socket; /// WebGui.UnixSocketMode: 0700; ///; /// Typically one used unix sockets together with server mode like `root --web=server:/tmp/root.socket` and; /// then redirect it via ssh tunnel (e.g. using `rootssh`) to client node; ///; /// All incoming requests processed in THttpServer in timer handler with 10 ms timeout.; /// One may decrease value to improve latency or increase value to minimize CPU load; ///; /// WebGui.HttpTimer: 10; ///; /// To processing incoming http requests and websockets, THttpServer allocate 10 threads; /// One have to increase this number if more simultaneous connections are expected:; ///; /// WebGui.HttpThrds: 10; ///; /// One also can configure usage of special thread of processing of http server requests; ///; /// WebGui.HttpThrd: no; ///; /// Extra threads can be used to send data to different clients via websocket (default no); ///; /// WebGui.SenderThrds: no; ///; /// If required, one could change websocket timeouts (default is 10000 ms); ///; /// WebGui.HttpWSTmout: 10000; ///; /// By default, THttpServer created in restricted mode which only allows websocket handlers; /// and processes only very few other related http requests. For security reasons such mode; /// should be always enabled. Only if it is really necessary to process all other kinds; /// of HTTP requests, one could specify no for following parameter (default yes):; ///; /// WebGui.WSOnly: yes; ///; /// In some applications one may need to force longpoll websocket emulations from the beginning,; /// for insta",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx:1592,allocate,allocate,1592,gui/webdisplay/src/RWebWindowsManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindowsManager.cxx,1,['allocate'],['allocate']
Energy Efficiency,"ll blocks, there is; a predefined set of codes, called the fixed codes. The fixed method is; used if the block ends up smaller that way (usually for quite small; chunks); otherwise the dynamic method is used. In the latter case, the; codes are customized to the probabilities in the current block and so; can code it much better than the pre-determined fixed codes can. The Huffman codes themselves are decoded using a mutli-level table; lookup, in order to maximize the speed of decoding plus the speed of; building the decoding tables. See the comments below that precede the; lbits and dbits tuning parameters.; */; /*; Notes beyond the 1.93a appnote.txt:. 1. Distance pointers never point before the beginning of the output; stream.; 2. Distance pointers can point back across blocks, up to 32k away.; 3. There is an implied maximum of 7 bits for the bit length table and; 15 bits for the actual data.; 4. If only one code exists, then it is encoded using one bit. (Zero; would be more efficient, but perhaps a little confusing.) If two; codes exist, they are coded using one bit each (0 and 1).; 5. There is no way of sending zero distance codes--a dummy must be; sent if there are none. (History: a pre 2.0 version of PKZIP would; store blocks with no distance codes, but this was discovered to be; too harsh a criterion.) Valid only for 1.93a. 2.04c does allow; zero distance codes, which is sent as one code of zero bits in; length.; 6. There are up to 286 literal/length codes. Code 256 represents the; end-of-block. Note however that the static length tree defines; 288 codes just to fill out the Huffman codes. Codes 286 and 287; cannot be used though, since there is no length base or extra bits; defined for them. Similarily, there are up to 30 distance codes.; However, static trees define 32 codes (all 5 bits) to fill out the; Huffman codes, but the last two had better not show up in the data.; 7. Unzip can check dynamic Huffman blocks for complete code sets.; The exception is that",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:6720,efficient,efficient,6720,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['efficient'],['efficient']
Energy Efficiency,"ll the bin is; very slow. The alternative is to divide the histogram into virtual rectangular regions; called ""cells"". Each cell stores the pointers of the bins intersecting it.; When a coordinate is to be filled, the method finds which cell the coordinate; falls into. Since the cells are rectangular, this can be done very quickly.; It then only loops over the bins associated with that cell and calls `IsInside()`; only on that bins. This reduces considerably the number of bins on which `IsInside()`; is called and therefore speed up by a huge factor the filling compare to the brute force; approach where `IsInside()` is called for all bins. The addition of bins to the appropriate cells is done when the bin is added; to the histogram. To do this, `AddBin()` calls the; `AddBinToPartition()` method.; This method adds the input bin to the partitioning matrix. The number of partition cells per axis can be specified in the constructor.; If it is not specified, the default value of 25 along each axis will be; assigned. This value was chosen because it is small enough to avoid slowing; down AddBin(), while being large enough to enhance Fill() by a considerable; amount. Regardless of how it is initialized at construction time, it can be; changed later with the `ChangePartition()` method.; `ChangePartition()` deletes the; old partition matrix and generates a new one with the specified number of cells; on each axis. The optimum number of partition cells per axis changes with the number of; times `Fill()` will be called. Although partitioning greatly speeds up; filling, it also adds a constant time delay into the code. When `Fill()`; is to be called many times, it is more efficient to divide the histogram into; a large number cells. However, if the histogram is to be filled only a few; times, it is better to divide into a small number of cells.; */; ////////////////////////////////////////////////////////////////////////////////; /// Default Constructor. No boundaries specified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2Poly.cxx:5207,efficient,efficient,5207,hist/hist/src/TH2Poly.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH2Poly.cxx,1,['efficient'],['efficient']
Energy Efficiency,"lows the caller to determine the length of the; deflate block header for later use in random access within a deflate block.; 256 is added to the value of strm->data_type when inflate() returns; immediately after reaching the end of the deflate block header. inflate() should normally be called until it returns Z_STREAM_END or an; error. However if all decompression is to be performed in a single step (a; single call of inflate), the parameter flush should be set to Z_FINISH. In; this case all pending input is processed and all pending output is flushed;; avail_out must be large enough to hold all of the uncompressed data for the; operation to complete. (The size of the uncompressed data may have been; saved by the compressor for this purpose.) The use of Z_FINISH is not; required to perform an inflation in one step. However it may be used to; inform inflate that a faster approach can be used for the single inflate(); call. Z_FINISH also informs inflate to not maintain a sliding window if the; stream completes, which reduces inflate's memory footprint. If the stream; does not complete, either because not all of the stream is provided or not; enough output space is provided, then a sliding window will be allocated and; inflate() can be called again to continue the operation as if Z_NO_FLUSH had; been used. In this implementation, inflate() always flushes as much output as; possible to the output buffer, and always uses the faster approach on the; first call. So the effects of the flush parameter in this implementation are; on the return value of inflate() as noted below, when inflate() returns early; when Z_BLOCK or Z_TREES is used, and when inflate() avoids the allocation of; memory for a sliding window when Z_FINISH is used. If a preset dictionary is needed after this call (see inflateSetDictionary; below), inflate sets strm->adler to the Adler-32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the Adler-",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:4130,reduce,reduces,4130,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['reduce'],['reduces']
Energy Efficiency,"lows:; //; // The stack grows downward.; //; // All of the individual frame areas on the frame below are optional, i.e. it's; // possible to create a function so that the particular area isn't present; // in the frame.; //; // At function entry, the ""frame"" looks as follows:; //; // | | Higher address; // |----------------------------------------------|; // | Parameter area for this function |; // |----------------------------------------------|; // | Register save area (RSA) for this function |; // |----------------------------------------------|; // | Return address for this function |; // |----------------------------------------------|; // | Frame pointer for this function |; // |----------------------------------------------| <- sp; // | | Lower address; //; // VE doesn't use on demand stack allocation, so user code generated by LLVM; // needs to call VEOS to allocate stack frame. VE's ABI want to reduce the; // number of VEOS calls, so ABI requires to allocate not only RSA (in general; // CSR, callee saved register) area but also call frame at the prologue of; // caller function.; //; // After the prologue has run, the frame has the following general structure.; // Note that technically the last frame area (VLAs) doesn't get created until; // in the main function body, after the prologue is run. However, it's depicted; // here for completeness.; //; // | | Higher address; // |----------------------------------------------|; // | Parameter area for this function |; // |----------------------------------------------|; // | Register save area (RSA) for this function |; // |----------------------------------------------|; // | Return address for this function |; // |----------------------------------------------|; // | Frame pointer for this function |; // |----------------------------------------------| <- fp(=old sp); // |.empty.space.to.make.part.below.aligned.in....|; // |.case.it.needs.more.than.the.standard.16-byte.| (size of this area is; // |.alignment....",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp:1419,reduce,reduce,1419,interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp,2,"['allocate', 'reduce']","['allocate', 'reduce']"
Energy Efficiency,"m.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This tblgen backend emits the node table (the .def file) for Clang; // type nodes.; //; // This file defines the AST type info database. Each type node is; // enumerated by providing its name (e.g., ""Builtin"" or ""Enum"") and; // base class (e.g., ""Type"" or ""TagType""). Depending on where in the; // abstract syntax tree the type will show up, the enumeration uses; // one of five different macros:; //; // TYPE(Class, Base) - A type that can show up anywhere in the AST,; // and might be dependent, canonical, or non-canonical. All clients; // will need to understand these types.; //; // ABSTRACT_TYPE(Class, Base) - An abstract class that shows up in; // the type hierarchy but has no concrete instances.; //; // NON_CANONICAL_TYPE(Class, Base) - A type that can show up; // anywhere in the AST but will never be a part of a canonical; // type. Clients that only need to deal with canonical types; // (ignoring, e.g., typedefs and other type aliases used for; // pretty-printing) can ignore these types.; //; // DEPENDENT_TYPE(Class, Base) - A type that will only show up; // within a C++ template that has not been instantiated, e.g., a; // type that is always dependent. Clients that do not need to deal; // with uninstantiated C++ templates can ignore these types.; //; // NON_CANONICAL_UNLESS_DEPENDENT_TYPE(Class, Base) - A type that; // is non-canonical unless it is dependent. Defaults to TYPE because; // it is neither reliably dependent nor reliably non-canonical.; //; // There is a sixth macro, independent of the others. Most clients; // will not need to use it.; //; // LEAF_TYPE(Class) - A type that never has inner types. Clients; // which can operate on such types more efficiently may wish to do so.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangTypeNodesEmitter.cpp:2070,efficient,efficiently,2070,interpreter/llvm-project/clang/utils/TableGen/ClangTypeNodesEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangTypeNodesEmitter.cpp,1,['efficient'],['efficiently']
Energy Efficiency,"machine, there is a major difference.; *; * x ^= (x >> 47) looks like this:; *; * x.lo ^= (x.hi >> (47 - 32));; *; * while x ^= (x >> 13) looks like this:; *; * // note: funnel shifts are not usually cheap.; * x.lo ^= (x.lo >> 13) | (x.hi << (32 - 13));; * x.hi ^= (x.hi >> 13);; *; * The first one is significantly faster than the second, simply because the; * shift is larger than 32. This means:; * - All the bits we need are in the upper 32 bits, so we can ignore the lower; * 32 bits in the shift.; * - The shift result will always fit in the lower 32 bits, and therefore,; * we can ignore the upper 32 bits in the xor.; *; * Thanks to this optimization, XXH3 only requires these features to be efficient:; *; * - Usable unaligned access; * - A 32-bit or 64-bit ALU; * - If 32-bit, a decent ADC instruction; * - A 32 or 64-bit multiply with a 64-bit result; * - For the 128-bit variant, a decent byteswap helps short inputs.; *; * The first two are already required by XXH32, and almost all 32-bit and 64-bit; * platforms which can run XXH32 can run XXH3 efficiently.; *; * Thumb-1, the classic 16-bit only subset of ARM's instruction set, is one; * notable exception.; *; * First of all, Thumb-1 lacks support for the UMULL instruction which; * performs the important long multiply. This means numerous __aeabi_lmul; * calls.; *; * Second of all, the 8 functional registers are just not enough.; * Setup for __aeabi_lmul, byteshift loads, pointers, and all arithmetic need; * Lo registers, and this shuffling results in thousands more MOVs than A32.; *; * A32 and T32 don't have this limitation. They can access all 14 registers,; * do a 32->64 multiply with UMULL, and the flexible operand allowing free; * shifts is helpful, too.; *; * Therefore, we do a quick sanity check.; *; * If compiling Thumb-1 for a target which supports ARM instructions, we will; * emit a warning, as it is not a ""sane"" platform to compile for.; *; * Usually, if this happens, it is because of an accident and you pr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1506,efficient,efficiently,1506,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['efficient'],['efficiently']
Energy Efficiency,"max}\f$ to the number of terms in; \f$ D_p\f$ (TMultiDimFit::SetMaxTerms). However, since there's an infinite number of \f$ F_l\f$ to choose from, the; user is asked to give the maximum power. \f$ P_{max,i}\f$, of each variable; \f$ x_i\f$ to be considered in the minimization of \f$ S\f$ (TMultiDimFit::SetMaxPowers). One way of obtaining values for the maximum power in variable \f$ i\f$, is; to perform a regular fit to the dependent quantity \f$ D\f$, using a; polynomial only in \f$ x_i\f$. The maximum power is \f$ P_{max,i}\f$ is then the; power that does not significantly improve the one-dimensional; least-square fit over \f$ x_i\f$ to \f$ D\f$ [5]. There are still a huge amount of possible choices for \f$ F_l\f$; in fact; there are \f$\prod_{i=1}^{N} (P_{max,i} + 1)\f$ possible; choices. Obviously we need to limit this. To this end, the user is; asked to set a *power control limit*, \f$ Q\f$ (TMultiDimFit::SetPowerLimit), and a function; \f$ F_l\f$ is only accepted if; \f[; Q_l = \sum_{i=1}^{N} \frac{P_{li}}{P_{max,i}} < Q; \f]; where \f$ P_{li}\f$ is the leading power of variable \f$ x_i\f$ in function \f$ F_l\f$ (TMultiDimFit::MakeCandidates).; So the number of functions increase with \f$ Q\f$ (1, 2 is fine, 5 is way out). ## Gram-Schmidt Orthogonalisation; To further reduce the number of functions in the final expression,; only those functions that significantly reduce \f$ S\f$ is chosen. What; `significant' means, is chosen by the user, and will be; discussed below (see [2.3](TMultiFimFit.html#sec:selectiondetail)). The functions \f$ F_l\f$ are generally not orthogonal, which means one will; have to evaluate all possible \f$ F_l\f$'s over all data-points before; finding the most significant [1]. We can, however, do; better then that. By applying the *modified Gram-Schmidt; orthogonalisation* algorithm [5] [3] to the; functions \f$ F_l\f$, we can evaluate the contribution to the reduction of; \f$ S\f$ from each function in turn, and we may delay the actual inv",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:5082,power,power,5082,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,2,['power'],['power']
Energy Efficiency,"memory.; ///; /// ret = __kmpc_nvptx_teams_reduce_nowait(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn,; /// scratchpadCopyFn, loadAndReduceFn); ///; /// 'scratchpadCopyFn' is a helper that stores reduced; /// data from the team master to a scratchpad array in; /// global memory.; ///; /// 'loadAndReduceFn' is a helper that loads data from; /// the scratchpad array and reduces it with the input; /// operand.; ///; /// These compiler generated functions hide address; /// calculation and alignment information from the runtime.; /// 5. if ret == 1:; /// The team master of the last team stores the reduced; /// result to the globals in memory.; /// foo += reduceData.foo; bar *= reduceData.bar; ///; ///; /// Warp Reduction Algorithms; ///; /// On the warp level, we have three algorithms implemented in the; /// OpenMP runtime depending on the number of active lanes:; ///; /// Full Warp Reduction; ///; /// The reduce algorithm within a warp where all lanes are active; /// is implemented in the runtime as follows:; ///; /// full_warp_reduce(void *reduce_data,; /// kmp_ShuffleReductFctPtr ShuffleReduceFn) {; /// for (int offset = WARPSIZE/2; offset > 0; offset /= 2); /// ShuffleReduceFn(reduce_data, 0, offset, 0);; /// }; ///; /// The algorithm completes in log(2, WARPSIZE) steps.; ///; /// 'ShuffleReduceFn' is used here with lane_id set to 0 because it is; /// not used therefore we save instructions by not retrieving lane_id; /// from the corresponding special registers. The 4th parameter, which; /// represents the version of the algorithm being used, is set to 0 to; /// signify full warp reduction.; ///; /// In this version, 'ShuffleReduceFn' behaves, per element, as follows:; ///; /// #reduce_elem refers to an element in the local lane's data structure; /// #remote_elem is retrieved from a remote lane; /// remote_elem = shuffle_down(reduce_elem, offset, WARPSIZE);; /// reduce_elem = reduce_elem REDUCE_OP remote_elem;; ///; /// Contiguous Partial Warp Reduction; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:4774,reduce,reduce,4774,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['reduce'],['reduce']
Energy Efficiency,"mmediately after reaching the end of the deflate block header. inflate() should normally be called until it returns Z_STREAM_END or an; error. However if all decompression is to be performed in a single step (a; single call of inflate), the parameter flush should be set to Z_FINISH. In; this case all pending input is processed and all pending output is flushed;; avail_out must be large enough to hold all of the uncompressed data for the; operation to complete. (The size of the uncompressed data may have been; saved by the compressor for this purpose.) The use of Z_FINISH is not; required to perform an inflation in one step. However it may be used to; inform inflate that a faster approach can be used for the single inflate(); call. Z_FINISH also informs inflate to not maintain a sliding window if the; stream completes, which reduces inflate's memory footprint. If the stream; does not complete, either because not all of the stream is provided or not; enough output space is provided, then a sliding window will be allocated and; inflate() can be called again to continue the operation as if Z_NO_FLUSH had; been used. In this implementation, inflate() always flushes as much output as; possible to the output buffer, and always uses the faster approach on the; first call. So the effects of the flush parameter in this implementation are; on the return value of inflate() as noted below, when inflate() returns early; when Z_BLOCK or Z_TREES is used, and when inflate() avoids the allocation of; memory for a sliding window when Z_FINISH is used. If a preset dictionary is needed after this call (see inflateSetDictionary; below), inflate sets strm->adler to the Adler-32 checksum of the dictionary; chosen by the compressor and returns Z_NEED_DICT; otherwise it sets; strm->adler to the Adler-32 checksum of all output produced so far (that is,; total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described; below. At the end of the stream, inflate() checks that its com",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:4320,allocate,allocated,4320,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['allocate'],['allocated']
Energy Efficiency,"modifies both parameters in place instead of; * taking the usual 3-operand form.; *; * Therefore, if we want to do this, we can simply use a D-form VZIP.32 on the; * lower and upper halves of the Q register to end up with the high and low; * halves where we want - all in one instruction.; *; * vzip.32 d10, d11 @ d10 = { d10[0], d11[0] }; d11 = { d10[1], d11[1] }; *; * Unfortunately we need inline assembly for this: Instructions modifying two; * registers at once is not possible in GCC or Clang's IR, and they have to; * create a copy.; *; * aarch64 requires a different approach.; *; * In order to make it easier to write a decent compiler for aarch64, many; * quirks were removed, such as conditional execution.; *; * NEON was also affected by this.; *; * aarch64 cannot access the high bits of a Q-form register, and writes to a; * D-form register zero the high bits, similar to how writes to W-form scalar; * registers (or DWORD registers on x86_64) work.; *; * The formerly free vget_high intrinsics now require a vext (with a few; * exceptions); *; * Additionally, VZIP was replaced by ZIP1 and ZIP2, which are the equivalent; * of PUNPCKL* and PUNPCKH* in SSE, respectively, in order to only modify one; * operand.; *; * The equivalent of the VZIP.32 on the lower and upper halves would be this; * mess:; *; * ext v2.4s, v0.4s, v0.4s, #2 // v2 = { v0[2], v0[3], v0[0], v0[1] }; * zip1 v1.2s, v0.2s, v2.2s // v1 = { v0[0], v2[0] }; * zip2 v0.2s, v0.2s, v1.2s // v0 = { v0[1], v2[1] }; *; * Instead, we use a literal downcast, vmovn_u64 (XTN), and vshrn_n_u64 (SHRN):; *; * shrn v1.2s, v0.2d, #32 // v1 = (uint32x2_t)(v0 >> 32);; * xtn v0.2s, v0.2d // v0 = (uint32x2_t)(v0 & 0xFFFFFFFF);; *; * This is available on ARMv7-A, but is less efficient than a single VZIP.32.; */; /*; * Function-like macro:; * void XXH_SPLIT_IN_PLACE(uint64x2_t &in, uint32x2_t &outLo, uint32x2_t &outHi); * {; * outLo = (uint32x2_t)(in & 0xFFFFFFFF);; * outHi = (uint32x2_t)(in >> 32);; * in = UNDEFINED;; * }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:2683,efficient,efficient,2683,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['efficient'],['efficient']
Energy Efficiency,"mory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more memory fragmentation and slower code. ### NOTE 2. When investigating misuse of TClonesArray, please make sure of the following:. - Use Clear() or Clear(""C"") instead of Delete(). This will improve; program execution time.; - TClonesArray object classes containing pointers allocate memory.; To avoid causing memory leaks, special Clear(""C"") must be used; for clearing TClonesArray. When option ""C"" is specified, ROOT; automatically executes the Clear() method (by default it is; empty contained in TObject). This method must be overridden in; the relevant TClonesArray ob",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:3404,allocate,allocated,3404,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,1,['allocate'],['allocated']
Energy Efficiency,"n all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */; /**; * @license; * (c) Dean McNamee <dean@gmail.com>, 2013.; *; * https://github.com/deanm/omggif; *; * Permission is hereby granted, free of charge, to any person obtaining a copy; * of this software and associated documentation files (the ""Software""), to; * deal in the Software without restriction, including without limitation the; * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or; * sell copies of the Software, and to permit persons to whom the Software is; * furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included in; * all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING; * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS; * IN THE SOFTWARE.; *; * omggif is a JavaScript implementation of a GIF 89a encoder and decoder,; * including animation and compression. It does not rely on any specific; * underlying system, so should run in the browser, Node, or",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/jspdf.mjs:1380,charge,charge,1380,js/modules/jspdf.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/jspdf.mjs,1,['charge'],['charge']
Energy Efficiency,"n be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example 1 - script Transform2.c:; ///; /// \image html spectrum2transform_transform_image002.jpg Fig. 1 Original two-dimensional noisy spectrum; ///; /// \image html spectrum2transform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform. Energy of the transformed data is concentrated around the beginning of the coordinate system; ///; /// #### Script:; ///; /// Example to illustrate Transform function (class TSpectrumTransform2).; /// To execute this example, do; ///; /// `root > .x Transform2.C`; ///; /// ~~~ {.cpp}; /// void Transform2() {; /// Int_t i, j;; /// Int_t nbinsx = 256;; /// Int_t nbinsy = 256;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Double_t ** source = new Double_t *[nbinsx];; /// Double_t ** dest = new Double_t *[nbinsx];; /// for (i=0;i<nbinsx;i++); /// source[i]=newDouble_t[nbinsy",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:2057,adapt,adaptive,2057,hist/spectrum/src/TSpectrum2Transform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx,1,['adapt'],['adaptive']
Energy Efficiency,"n is to retrieve frame parameters, using ZSTD_getFrameHeader().; Frame header is extracted from the beginning of compressed frame, so providing only the frame's beginning is enough.; Data fragment must be large enough to ensure successful decoding.; `ZSTD_frameHeaderSize_max` bytes is guaranteed to always be large enough.; @result : 0 : successful decoding, the `ZSTD_frameHeader` structure is correctly filled.; >0 : `srcSize` is too small, please provide at least @result bytes on next attempt.; errorCode, which can be tested using ZSTD_isError(). It fills a ZSTD_frameHeader structure with important information to correctly decode the frame,; such as the dictionary ID, content size, or maximum back-reference distance (`windowSize`).; Note that these values could be wrong, either because of data corruption, or because a 3rd party deliberately spoofs false information.; As a consequence, check that values remain within valid application range.; For example, do not allocate memory blindly, check that `windowSize` is within expectation.; Each application can set its own limits, depending on local restrictions.; For extended interoperability, it is recommended to support `windowSize` of at least 8 MB. ZSTD_decompressContinue() needs previous data blocks during decompression, up to `windowSize` bytes.; ZSTD_decompressContinue() is very sensitive to contiguity,; if 2 blocks don't follow each other, make sure that either the compressor breaks contiguity at the same place,; or that previous contiguous segment is large enough to properly handle maximum back-reference distance.; There are multiple ways to guarantee this condition. The most memory efficient way is to use a round buffer of sufficient size.; Sufficient size is determined by invoking ZSTD_decodingBufferSize_min(),; which can @return an error code if required value is too large for current system (in 32-bits mode).; In a round buffer methodology, ZSTD_decompressContinue() decompresses each block next to previous one,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:1227,allocate,allocate,1227,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['allocate'],['allocate']
Energy Efficiency,"n obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; * ; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; * ; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */; /**; * This file adds the standard font metrics to jsPDF.; *; * Font metrics data is reprocessed derivative of contents of; * ""Font Metrics for PDF Core 14 Fonts"" package, which exhibits the following copyright and license:; *; * Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated. All Rights Reserved.; *; * This file and the 14 PostScript(R) AFM files it accompanies may be used,; * copied, and distributed for any purpose and without charge, with or without; * modification, provided that all copyright notices are retained; that the AFM; * files are not distributed without this file; that all modifications to this; * file or any of the AFM files are prominently noted in the modified file(s);; * and that this paragraph is not modified. Adobe Systems has no responsibility; * or obligation to support the use of the AFM files.; *; * @name standard_fonts_metrics; * @module; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:1765,charge,charge,1765,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['charge'],['charge']
Energy Efficiency,"n to provide; /// more precise answers to certain TTI queries, while letting the target; /// independent and default TTI implementations handle the rest.; ///; //===----------------------------------------------------------------------===//; /// About Cost Model numbers used below it's necessary to say the following:; /// the numbers correspond to some ""generic"" X86 CPU instead of usage of a; /// specific CPU model. Usually the numbers correspond to the CPU where the; /// feature first appeared. For example, if we do Subtarget.hasSSE42() in; /// the lookups below the cost is based on Nehalem as that was the first CPU; /// to support that feature level and thus has most likely the worst case cost,; /// although we may discard an outlying worst cost from one CPU (e.g. Atom).; ///; /// Some examples of other technologies/CPUs:; /// SSE 3 - Pentium4 / Athlon64; /// SSE 4.1 - Penryn; /// SSE 4.2 - Nehalem / Silvermont; /// AVX - Sandy Bridge / Jaguar / Bulldozer; /// AVX2 - Haswell / Ryzen; /// AVX-512 - Xeon Phi / Skylake; ///; /// And some examples of instruction target dependent costs (latency); /// divss sqrtss rsqrtss; /// AMD K7 11-16 19 3; /// Piledriver 9-24 13-15 5; /// Jaguar 14 16 2; /// Pentium II,III 18 30 2; /// Nehalem 7-14 7-18 3; /// Haswell 10-13 11 5; ///; /// Interpreting the 4 TargetCostKind types:; /// TCK_RecipThroughput and TCK_Latency should try to match the worst case; /// values reported by the CPU scheduler models (and llvm-mca).; /// TCK_CodeSize should match the instruction count (e.g. divss = 1), NOT the; /// actual encoding size of the instruction.; /// TCK_SizeAndLatency should match the worst case micro-op counts reported by; /// by the CPU scheduler models (and llvm-mca), to ensure that they are; /// compatible with the MicroOpBufferSize and LoopMicroOpBufferSize values which are; /// often used as the cost thresholds where TCK_SizeAndLatency is requested.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp:1973,schedul,scheduler,1973,interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp,2,['schedul'],['scheduler']
Energy Efficiency,"n tutorial: df106_HiggstoFourLeptons.py, which also; provides a corresponding exemplary JSON file for the dataset specification. \anchor progressbar; ### Adding a progress bar . A progress bar showing the processed event statistics can be added to any RDataFrame program.; The event statistics include elapsed time, currently processed file, currently processed events, the rate of event processing ; and an estimated remaining time (per file being processed). It is recorded and printed in the terminal every m events and every ; n seconds (by default m = 1000 and n = 1). The ProgressBar can be also added when the multithread (MT) mode is enabled. . ProgressBar is added after creating the dataframe object (df):; ~~~{.cpp}; ROOT::RDataFrame df(""tree"", ""file.root"");; ROOT::RDF::Experimental::AddProgressBar(df);; ~~~. Alternatively, RDataFrame can be cast to an RNode first, giving the user more flexibility ; For example, it can be called at any computational node, such as Filter or Define, not only the head node,; with no change to the ProgressBar function itself (please see the [Efficient analysis in Python](#python) ; section for appropriate usage in Python): ; ~~~{.cpp}; ROOT::RDataFrame df(""tree"", ""file.root"");; auto df_1 = ROOT::RDF::RNode(df.Filter(""x>1""));; ROOT::RDF::Experimental::AddProgressBar(df_1);; ~~~; Examples of implemented progress bars can be seen by running [Higgs to Four Lepton tutorial](https://root.cern/doc/master/df106__HiggsToFourLeptons_8py_source.html) and [Dimuon tutorial](https://root.cern/doc/master/df102__NanoAODDimuonAnalysis_8C.html). . \anchor missing-values; ### Working with missing values in the dataset. In certain situations a dataset might be missing one or more values at one or; more of its entries. For example:. - If the dataset is composed of multiple files and one or more files is; missing one or more columns required by the analysis.; - When joining different datasets horizontally according to some index value; (e.g. the event numbe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:80622,Efficient,Efficient,80622,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['Efficient'],['Efficient']
Energy Efficiency,"n will work inside any buffer; * which size is >= LZ4_DECOMPRESS_INPLACE_BUFFER_SIZE(decompressedSize).; * This presumes that decompressedSize > compressedSize.; * Otherwise, it means compression actually expanded data,; * and it would be more efficient to store such data with a flag indicating it's not compressed.; * This can happen when data is not compressible (already compressed, or encrypted).; *; * For in-place compression, margin is larger, as it must be able to cope with both; * history preservation, requiring input data to remain unmodified up to LZ4_DISTANCE_MAX,; * and data expansion, which can happen when input is not compressible.; * As a consequence, buffer size requirements are much higher,; * and memory savings offered by in-place compression are more limited.; *; * There are ways to limit this cost for compression :; * - Reduce history size, by modifying LZ4_DISTANCE_MAX.; * Note that it is a compile-time constant, so all compressions will apply this limit.; * Lower values will reduce compression ratio, except when input_size < LZ4_DISTANCE_MAX,; * so it's a reasonable trick when inputs are known to be small.; * - Require the compressor to deliver a ""maximum compressed size"".; * This is the `dstCapacity` parameter in `LZ4_compress*()`.; * When this size is < LZ4_COMPRESSBOUND(inputSize), then compression can fail,; * in which case, the return code will be 0 (zero).; * The caller must be ready for these cases to happen,; * and typically design a backup scheme to send data uncompressed.; * The combination of both techniques can significantly reduce; * the amount of margin required for in-place compression.; *; * In-place compression can work in any buffer; * which size is >= (maxCompressedSize); * with maxCompressedSize == LZ4_COMPRESSBOUND(srcSize) for guaranteed compression success.; * LZ4_COMPRESS_INPLACE_BUFFER_SIZE() depends on both maxCompressedSize and LZ4_DISTANCE_MAX,; * so it's possible to reduce memory requirements by playing with them.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1717,reduce,reduce,1717,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,3,['reduce'],['reduce']
Energy Efficiency,"n, 'ShuffleReduceFn' behaves, per element, as follows:; ///; /// #reduce_elem refers to an element in the local lane's data structure; /// #remote_elem is retrieved from a remote lane; /// remote_elem = shuffle_down(reduce_elem, offset, WARPSIZE);; /// reduce_elem = reduce_elem REDUCE_OP remote_elem;; ///; /// Contiguous Partial Warp Reduction; ///; /// This reduce algorithm is used within a warp where only the first; /// 'n' (n <= WARPSIZE) lanes are active. It is typically used when the; /// number of OpenMP threads in a parallel region is not a multiple of; /// WARPSIZE. The algorithm is implemented in the runtime as follows:; ///; /// void; /// contiguous_partial_reduce(void *reduce_data,; /// kmp_ShuffleReductFctPtr ShuffleReduceFn,; /// int size, int lane_id) {; /// int curr_size;; /// int offset;; /// curr_size = size;; /// mask = curr_size/2;; /// while (offset>0) {; /// ShuffleReduceFn(reduce_data, lane_id, offset, 1);; /// curr_size = (curr_size+1)/2;; /// offset = curr_size/2;; /// }; /// }; ///; /// In this version, 'ShuffleReduceFn' behaves, per element, as follows:; ///; /// remote_elem = shuffle_down(reduce_elem, offset, WARPSIZE);; /// if (lane_id < offset); /// reduce_elem = reduce_elem REDUCE_OP remote_elem; /// else; /// reduce_elem = remote_elem; ///; /// This algorithm assumes that the data to be reduced are located in a; /// contiguous subset of lanes starting from the first. When there is; /// an odd number of active lanes, the data in the last lane is not; /// aggregated with any other lane's dat but is instead copied over.; ///; /// Dispersed Partial Warp Reduction; ///; /// This algorithm is used within a warp when any discontiguous subset of; /// lanes are active. It is used to implement the reduction operation; /// across lanes in an OpenMP simd region or in a nested parallel region.; ///; /// void; /// dispersed_partial_reduce(void *reduce_data,; /// kmp_ShuffleReductFctPtr ShuffleReduceFn) {; /// int size, remote_id;; /// int logical_la",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:6839,reduce,reduced,6839,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['reduce'],['reduced']
Energy Efficiency,"nctional expression by specifying; the powers of each variable in \f$ L\f$ specified functions \f$ F_1, \ldots,F_L\f$ (TMultiDimFit::SetPowers).; In that case, only the coefficients \f$ c_l\f$ is calculated by the class. ## Limiting the Number of Terms; As always when dealing with fits, there's a real chance of *over fitting*. As is well-known, it's; always possible to fit an \f$ N-1\f$ polynomial in \f$ x\f$ to \f$ N\f$ points \f$ (x,y)\f$ with; \f$\chi^2 = 0\f$, but the polynomial is not likely to fit new data at all [1].; Therefore, the user is asked to provide an upper limit, \f$ L_{max}\f$ to the number of terms in; \f$ D_p\f$ (TMultiDimFit::SetMaxTerms). However, since there's an infinite number of \f$ F_l\f$ to choose from, the; user is asked to give the maximum power. \f$ P_{max,i}\f$, of each variable; \f$ x_i\f$ to be considered in the minimization of \f$ S\f$ (TMultiDimFit::SetMaxPowers). One way of obtaining values for the maximum power in variable \f$ i\f$, is; to perform a regular fit to the dependent quantity \f$ D\f$, using a; polynomial only in \f$ x_i\f$. The maximum power is \f$ P_{max,i}\f$ is then the; power that does not significantly improve the one-dimensional; least-square fit over \f$ x_i\f$ to \f$ D\f$ [5]. There are still a huge amount of possible choices for \f$ F_l\f$; in fact; there are \f$\prod_{i=1}^{N} (P_{max,i} + 1)\f$ possible; choices. Obviously we need to limit this. To this end, the user is; asked to set a *power control limit*, \f$ Q\f$ (TMultiDimFit::SetPowerLimit), and a function; \f$ F_l\f$ is only accepted if; \f[; Q_l = \sum_{i=1}^{N} \frac{P_{li}}{P_{max,i}} < Q; \f]; where \f$ P_{li}\f$ is the leading power of variable \f$ x_i\f$ in function \f$ F_l\f$ (TMultiDimFit::MakeCandidates).; So the number of functions increase with \f$ Q\f$ (1, 2 is fine, 5 is way out). ## Gram-Schmidt Orthogonalisation; To further reduce the number of functions in the final expression,; only those functions that significantly reduce \f$ S\f$ ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:4568,power,power,4568,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['power'],['power']
Energy Efficiency,"ng of OpenMP clause 'private', 'firstprivate', 'lastprivate',; /// 'shared', 'copyin', 'copyprivate', 'flush', 'reduction', 'task_reduction',; /// 'in_reduction', 'nontemporal', 'exclusive' or 'inclusive'.; ///; /// private-clause:; /// 'private' '(' list ')'; /// firstprivate-clause:; /// 'firstprivate' '(' list ')'; /// lastprivate-clause:; /// 'lastprivate' '(' list ')'; /// shared-clause:; /// 'shared' '(' list ')'; /// linear-clause:; /// 'linear' '(' linear-list [ ':' linear-step ] ')'; /// aligned-clause:; /// 'aligned' '(' list [ ':' alignment ] ')'; /// reduction-clause:; /// 'reduction' '(' [ modifier ',' ] reduction-identifier ':' list ')'; /// task_reduction-clause:; /// 'task_reduction' '(' reduction-identifier ':' list ')'; /// in_reduction-clause:; /// 'in_reduction' '(' reduction-identifier ':' list ')'; /// copyprivate-clause:; /// 'copyprivate' '(' list ')'; /// flush-clause:; /// 'flush' '(' list ')'; /// depend-clause:; /// 'depend' '(' in | out | inout : list | source ')'; /// map-clause:; /// 'map' '(' [ [ always [,] ] [ close [,] ]; /// [ mapper '(' mapper-identifier ')' [,] ]; /// to | from | tofrom | alloc | release | delete ':' ] list ')';; /// to-clause:; /// 'to' '(' [ mapper '(' mapper-identifier ')' ':' ] list ')'; /// from-clause:; /// 'from' '(' [ mapper '(' mapper-identifier ')' ':' ] list ')'; /// use_device_ptr-clause:; /// 'use_device_ptr' '(' list ')'; /// use_device_addr-clause:; /// 'use_device_addr' '(' list ')'; /// is_device_ptr-clause:; /// 'is_device_ptr' '(' list ')'; /// has_device_addr-clause:; /// 'has_device_addr' '(' list ')'; /// allocate-clause:; /// 'allocate' '(' [ allocator ':' ] list ')'; /// nontemporal-clause:; /// 'nontemporal' '(' list ')'; /// inclusive-clause:; /// 'inclusive' '(' list ')'; /// exclusive-clause:; /// 'exclusive' '(' list ')'; ///; /// For 'linear' clause linear-list may have the following forms:; /// list; /// modifier(list); /// where modifier is 'val' (C) or 'ref', 'val' or 'uval'(C++).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp:1616,allocate,allocate-clause,1616,interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp,2,['allocate'],"['allocate', 'allocate-clause']"
Energy Efficiency,"ng-spark), then hook the; connection instance to the distributed `RDataFrame` object like so:. ~~~{.py}; import pyspark; import ROOT. # Create a SparkContext object with the right configuration for your Spark cluster; conf = SparkConf().setAppName(appName).setMaster(master); sc = SparkContext(conf=conf). # Point RDataFrame calls to the Spark specific RDataFrame; RDataFrame = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame. # The Spark RDataFrame constructor accepts an optional ""sparkcontext"" parameter; # and it will distribute the application to the connected cluster; df = RDataFrame(""mytree"", ""myfile.root"", sparkcontext = sc); ~~~. If an instance of [SparkContext](https://spark.apache.org/docs/latest/api/python/reference/api/pyspark.SparkContext.html); is not provided, the default behaviour is to create one in the background for you. ### Connecting to a Dask cluster. Similarly, you can connect to a Dask cluster by creating your own connection object which internally operates with one; of the cluster schedulers supported by Dask (more information in the; [Dask distributed docs](http://distributed.dask.org/en/stable/)):. ~~~{.py}; import ROOT; from dask.distributed import Client. # Point RDataFrame calls to the Dask specific RDataFrame; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. # In a Python script the Dask client needs to be initalized in a context; # Jupyter notebooks / Python session don't need this; if __name__ == ""__main__"":; # With an already setup cluster that exposes a Dask scheduler endpoint; client = Client(""dask_scheduler.domain.com:8786""). # The Dask RDataFrame constructor accepts the Dask Client object as an optional argument; df = RDataFrame(""mytree"",""myfile.root"", daskclient=client); # Proceed as usual; df.Define(""x"",""someoperation"").Histo1D((""name"", ""title"", 10, 0, 10), ""x""); ~~~. If an instance of [distributed.Client](http://distributed.dask.org/en/stable/api.html#distributed.Client) is not; provided to the RDataFrame object,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:39299,schedul,schedulers,39299,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['schedul'],['schedulers']
Energy Efficiency,"ng. - *Rotation*:. When the plot is selected, it can be rotated by pressing and holding the left mouse button and move the cursor.; - *Zoom/Unzoom*:. Mouse wheel or `'j'`, `'J'`, `'k'`, `'K'` keys. #### Panning. The selected plot can be moved in a pad's area by; pressing and holding the left mouse button and the shift key. ### Box cut; Surface, iso, box, TF3 and parametric painters support box cut by pressing the `'c'` or; `'C'` key when the mouse cursor is in a plot's area. That will display a transparent box,; cutting away part of the surface (or boxes) in order to show internal part of plot.; This box can be moved inside the plot's area (the full size of the box is equal to the plot's; surrounding box) by selecting one of the box cut axes and pressing the left mouse button to move it. ### Plot specific interactions (dynamic slicing etc.); Currently, all gl-plots support some form of slicing.; When back plane is selected (and if it's highlighted in green); you can press and hold left mouse button and shift key; and move this back plane inside plot's area, creating the slice.; During this ""slicing"" plot becomes semi-transparent. To remove all slices (and projected curves for surfaces); - double click with left mouse button in a plot's area. #### Surface with option `""GLSURF""`. The surface profile is displayed on the slicing plane.; The profile projection is drawn on the back plane; by pressing `'p'` or `'P'` key. #### TF3. The contour plot is drawn on the slicing plane.; For `TF3` the color scheme can be changed by pressing `'s'` or `'S'`. #### Box. The contour plot corresponding to slice plane position is drawn in real time. #### Iso. Slicing is similar to `""GLBOX""` option. #### Parametric plot. No slicing. Additional keys: `'s'` or `'S'` to change color scheme - about 20 color schemes supported; (`'s'` for ""scheme""); `'l'` or `'L'` to increase number of polygons (`'l'` for ""level"" of details),; `'w'` or `'W'` to show outlines (`'w'` for ""wireframe"").; */; ///////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLHistPainter.cxx:4453,green,green,4453,graf3d/gl/src/TGLHistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLHistPainter.cxx,1,['green'],['green']
Energy Efficiency,"nline information stores the name of the inline function along with; /// an array of address ranges. It also stores the call file and call line; /// that called this inline function. This allows us to unwind inline call; /// stacks back to the inline or concrete function that called this; /// function. Inlined functions contained in this function are stored in the; /// ""Children"" variable. All address ranges must be sorted and all address; /// ranges of all children must be contained in the ranges of this function.; /// Any clients that encode information will need to ensure the ranges are; /// all contined correctly or lookups could fail. Add ranges in these objects; /// must be contained in the top level FunctionInfo address ranges as well.; ///; /// ENCODING; ///; /// When saved to disk, the inline info encodes all ranges to be relative to; /// a parent address range. This will be the FunctionInfo's start address if; /// the InlineInfo is directly contained in a FunctionInfo, or a the start; /// address of the containing parent InlineInfo's first ""Ranges"" member. This; /// allows address ranges to be efficiently encoded using ULEB128 encodings as; /// we encode the offset and size of each range instead of full addresses. This; /// also makes any encoded addresses easy to relocate as we just need to; /// relocate the FunctionInfo's start address.; ///; /// - The AddressRanges member ""Ranges"" is encoded using an appropriate base; /// address as described above.; /// - UINT8 boolean value that specifies if the InlineInfo object has children.; /// - UINT32 string table offset that points to the name of the inline; /// function.; /// - ULEB128 integer that specifies the file of the call site that called; /// this function.; /// - ULEB128 integer that specifies the source line of the call site that; /// called this function.; /// - if this object has children, enocode each child InlineInfo using the; /// the first address range's start address as the base address.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/InlineInfo.h:1126,efficient,efficiently,1126,interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/InlineInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/GSYM/InlineInfo.h,1,['efficient'],['efficiently']
Energy Efficiency,"nsforms an AST node; /// or the parts of an AST node using the various transformation functions,; /// then passes the pieces on to the ""rebuild"" step, which constructs a new AST; /// node of the appropriate kind from the pieces. The default transformation; /// routines recursively transform the operands to composite AST nodes (e.g.,; /// the pointee type of a PointerType node) and, if any of those operand nodes; /// were changed by the transformation, invokes the rebuild operation to create; /// a new AST node.; ///; /// Subclasses can customize the transformation at various levels. The; /// most coarse-grained transformations involve replacing TransformType(),; /// TransformExpr(), TransformDecl(), TransformNestedNameSpecifierLoc(),; /// TransformTemplateName(), or TransformTemplateArgument() with entirely; /// new implementations.; ///; /// For more fine-grained transformations, subclasses can replace any of the; /// \c TransformXXX functions (where XXX is the name of an AST node, e.g.,; /// PointerType, StmtExpr) to alter the transformation. As mentioned previously,; /// replacing TransformTemplateTypeParmType() allows template instantiation; /// to substitute template arguments for their corresponding template; /// parameters. Additionally, subclasses can override the \c RebuildXXX; /// functions to control how AST nodes are rebuilt when their operands change.; /// By default, \c TreeTransform will invoke semantic analysis to rebuild; /// AST nodes. However, certain other tree transformations (e.g, cloning) may; /// be able to use more efficient rebuild steps.; ///; /// There are a handful of other functions that can be overridden, allowing one; /// to avoid traversing nodes that don't need any transformation; /// (\c AlreadyTransformed()), force rebuilding AST nodes even when their; /// operands have not changed (\c AlwaysRebuild()), and customize the; /// default locations and entity names used for type-checking; /// (\c getBaseLocation(), \c getBaseEntity()).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h:2722,efficient,efficient,2722,interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,1,['efficient'],['efficient']
Energy Efficiency,"nsforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac; M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac; M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac; M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example - script Transform.c:; ///; /// \image html spectrumtransform_transform_image002.jpg Fig. 1 Original gamma-ray spectrum; /// \image html spectrumtransform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform; ///; /// #### Script:; /// Example to illustrate Transform function (class TSpectrumTransform).; /// To execute this example, do:; ///; /// `root > .x Transform.C`; ///; /// ~~~ {.cpp}; /// #include <TSpectrum>; /// #include <TSpectrumTransform>; /// void Transform() {; /// Int_t i;; /// Double_t nbins = 4096;; /// Double_t xmin = 0;; /// Double_t xmax = (Double_t)nbins;; /// Double_t * source = new Double_t[nbins];; /// Double_t * dest = new Double_t[nbins];; /// TH1F *h = new TH1F(""h"",""Transformed spec",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:1786,adapt,adaptive,1786,hist/spectrum/src/TSpectrumTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx,1,['adapt'],['adaptive']
Energy Efficiency,"nst char *path, const char *mode));. Opens a gzip (.gz) file for reading or writing. The mode parameter is as; in fopen (""rb"" or ""wb"") but can also include a compression level (""wb9"") or; a strategy: 'f' for filtered data as in ""wb6f"", 'h' for Huffman-only; compression as in ""wb1h"", 'R' for run-length encoding as in ""wb1R"", or 'F'; for fixed code compression as in ""wb9F"". (See the description of; deflateInit2 for more information about the strategy parameter.) 'T' will; request transparent writing or appending with no compression and not using; the gzip format. ""a"" can be used instead of ""w"" to request that the gzip stream that will; be written be appended to the file. ""+"" will result in an error, since; reading and writing to the same gzip file is not supported. The addition of; ""x"" when writing will create the file exclusively, which fails if the file; already exists. On systems that support it, the addition of ""e"" when; reading or writing will set the flag to close the file on an execve() call. These functions, as well as gzip, will read and decode a sequence of gzip; streams in a file. The append function of gzopen() can be used to create; such a file. (Also see gzflush() for another way to do this.) When; appending, gzopen does not test whether the file begins with a gzip stream,; nor does it look for the end of the gzip streams to begin appending. gzopen; will simply append a gzip stream to the existing file. gzopen can be used to read a file which is not in gzip format; in this; case gzread will directly read from the file without decompression. When; reading, this will be detected automatically by looking for the magic two-; byte gzip header. gzopen returns NULL if the file could not be opened, if there was; insufficient memory to allocate the gzFile state, or if an invalid mode was; specified (an 'r', 'w', or 'a' was not provided, or '+' was provided).; errno can be checked to determine if the reason gzopen failed was that the; file could not be opened.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1849,allocate,allocate,1849,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['allocate'],['allocate']
Energy Efficiency,"nstructions with close by immediate offsets.; // This will fuse operations such as; // ds_read_b32 v0, v2 offset:16; // ds_read_b32 v1, v2 offset:32; // ==>; // ds_read2_b32 v[0:1], v2, offset0:4 offset1:8; //; // The same is done for certain SMEM and VMEM opcodes, e.g.:; // s_buffer_load_dword s4, s[0:3], 4; // s_buffer_load_dword s5, s[0:3], 8; // ==>; // s_buffer_load_dwordx2 s[4:5], s[0:3], 4; //; // This pass also tries to promote constant offset to the immediate by; // adjusting the base. It tries to use a base from the nearby instructions that; // allows it to have a 13bit constant offset and then promotes the 13bit offset; // to the immediate.; // E.g.; // s_movk_i32 s0, 0x1800; // v_add_co_u32_e32 v0, vcc, s0, v2; // v_addc_co_u32_e32 v1, vcc, 0, v6, vcc; //; // s_movk_i32 s0, 0x1000; // v_add_co_u32_e32 v5, vcc, s0, v2; // v_addc_co_u32_e32 v6, vcc, 0, v6, vcc; // global_load_dwordx2 v[5:6], v[5:6], off; // global_load_dwordx2 v[0:1], v[0:1], off; // =>; // s_movk_i32 s0, 0x1000; // v_add_co_u32_e32 v5, vcc, s0, v2; // v_addc_co_u32_e32 v6, vcc, 0, v6, vcc; // global_load_dwordx2 v[5:6], v[5:6], off; // global_load_dwordx2 v[0:1], v[5:6], off offset:2048; //; // Future improvements:; //; // - This is currently missing stores of constants because loading; // the constant into the data register is placed between the stores, although; // this is arguably a scheduling problem.; //; // - Live interval recomputing seems inefficient. This currently only matches; // one pair, and recomputes live intervals and moves on to the next pair. It; // would be better to compute a list of all merges that need to occur.; //; // - With a list of instructions to process, we can also merge more. If a; // cluster of loads have offsets that are too large to fit in the 8-bit; // offsets, but are close enough to fit in the 8 bits, we can add to the base; // pointer and use the new reduced offsets.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILoadStoreOptimizer.cpp:1797,schedul,scheduling,1797,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILoadStoreOptimizer.cpp,2,"['reduce', 'schedul']","['reduced', 'scheduling']"
Energy Efficiency,"nt as long as they are; /// consistent. Inaccuracies arise when instructions have different execution; /// delays relative to each other, in addition to their intrinsic latency. Those; /// special cases can be handled by TableGen constructs such as, ReadAdvance,; /// which reduces latency when reading data, and ReleaseAtCycles, which consumes; /// a processor resource when writing data for a number of abstract; /// cycles.; ///; /// TODO: One tool currently missing is the ability to add a delay to; /// ReleaseAtCycles. That would be easy to add and would likely cover all cases; /// currently handled by the legacy itinerary tables.; ///; /// A note on out-of-order execution and, more generally, instruction; /// buffers. Part of the CPU pipeline is always in-order. The issue point, which; /// is the point of reference for counting cycles, only makes sense as an; /// in-order part of the pipeline. Other parts of the pipeline are sometimes; /// falling behind and sometimes catching up. It's only interesting to model; /// those other, decoupled parts of the pipeline if they may be predictably; /// resource constrained in a way that the scheduler can exploit.; ///; /// The LLVM machine model distinguishes between in-order constraints and; /// out-of-order constraints so that the target's scheduling strategy can apply; /// appropriate heuristics. For a well-balanced CPU pipeline, out-of-order; /// resources would not typically be treated as a hard scheduling; /// constraint. For example, in the GenericScheduler, a delay caused by limited; /// out-of-order resources is not directly reflected in the number of cycles; /// that the scheduler sees between issuing an instruction and its dependent; /// instructions. In other words, out-of-order resources don't directly increase; /// the latency between pairs of instructions. However, they can still be used; /// to detect potential bottlenecks across a sequence of instructions and bias; /// the scheduling heuristics appropriately.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h:2706,schedul,scheduler,2706,interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCSchedule.h,5,['schedul'],"['scheduler', 'scheduling']"
Energy Efficiency,"nt() will ensure that sum of frequencies is == 2 ^'tableLog'.; It also guarantees a minimum of 1 to any Symbol with frequency >= 1.; You can use 'tableLog'==0 to mean ""use default tableLog value"".; If you are unsure of which tableLog value to use, you can ask FSE_optimalTableLog(),; which will provide the optimal valid tableLog given sourceSize, maxSymbolValue, and a user-defined maximum (0 means ""default""). The result of FSE_normalizeCount() will be saved into a table,; called 'normalizedCounter', which is a table of signed short.; 'normalizedCounter' must be already allocated, and have at least 'maxSymbolValue+1' cells.; The return value is tableLog if everything proceeded as expected.; It is 0 if there is a single symbol within distribution.; If there is an error (ex: invalid tableLog value), the function will return an ErrorCode (which can be tested using FSE_isError()). 'normalizedCounter' can be saved in a compact manner to a memory area using FSE_writeNCount().; 'buffer' must be already allocated.; For guaranteed success, buffer size must be at least FSE_headerBound().; The result of the function is the number of bytes written into 'buffer'.; If there is an error, the function will return an ErrorCode (which can be tested using FSE_isError(); ex : buffer size too small). 'normalizedCounter' can then be used to create the compression table 'CTable'.; The space required by 'CTable' must be already allocated, using FSE_createCTable().; You can then use FSE_buildCTable() to fill 'CTable'.; If there is an error, both functions will return an ErrorCode (which can be tested using FSE_isError()). 'CTable' can then be used to compress 'src', with FSE_compress_usingCTable().; Similar to FSE_count(), the convention is that 'src' is assumed to be a table of char of size 'srcSize'; The function returns the size of compressed data (without header), necessarily <= `dstCapacity`.; If it returns '0', compressed data could not fit into 'dst'.; If there is an error, the function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:1803,allocate,allocated,1803,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['allocate'],['allocated']
Energy Efficiency,"ntry.; ///; /// Based on the timeline view information from the example, instruction 0; /// at iteration 0 was dispatched at cycle 0, and was retired at cycle 3.; /// Instruction [0,1] was also dispatched at cycle 0, and it retired at; /// the same cycle than instruction [0,0].; /// Instruction [0,4] has been dispatched at cycle 2. However, it had to; /// wait for two cycles before being issued. That is because operands; /// became ready only at cycle 5.; ///; /// This view helps further understanding bottlenecks and the impact of; /// resource pressure on the code.; ///; /// To better understand why instructions had to wait for multiple cycles in; /// the scheduler's queue, class TimelineView also reports extra timing info; /// in another table named ""Average Wait times"" (see example below).; ///; ///; /// Average Wait times (based on the timeline view):; /// [0]: Executions; /// [1]: Average time spent waiting in a scheduler's queue; /// [2]: Average time spent waiting in a scheduler's queue while ready; /// [3]: Average time elapsed from WB until retire stage; ///; ///	[0]	[1]	[2]	[3]; /// 0.	 2	1.0	1.0	3.0	vmovshdup %xmm0, %xmm1; /// 1.	 2	1.0	1.0	3.0	vpermilpd $1, %xmm0, %xmm2; /// 2.	 2	1.0	1.0	2.5	vpermilps $231, %xmm0, %xmm5; /// 3.	 2	1.5	0.5	1.0	vaddss %xmm1, %xmm0, %xmm3; /// 4.	 2	3.5	0.0	0.0	vaddss %xmm3, %xmm2, %xmm4; /// 5.	 2	6.5	0.0	0.0	vaddss %xmm4, %xmm5, %xmm6; /// 2	2.4	0.6	1.6 <total>; ///; /// By comparing column [2] with column [1], we get an idea about how many; /// cycles were spent in the scheduler's queue due to data dependencies.; ///; /// In this example, instruction 5 spent an average of ~6 cycles in the; /// scheduler's queue. As soon as operands became ready, the instruction; /// was immediately issued to the pipeline(s).; /// That is expected because instruction 5 cannot transition to the ""ready""; /// state until %xmm4 is written by instruction 4.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.h:4064,schedul,scheduler,4064,interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.h,2,['schedul'],['scheduler']
Energy Efficiency,"nts (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func.; ///; /// ### ROOT::Internal::TExecutor::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. The signature of the reduce function should be `(const std::vector<T>) -> T`; ///; /// An integer can be passed as the fourth argument indicating the number of chunks we want to divide our work in.; /// <b>(Note: Please be aware that chunking is only available when the policy is kMultiThread, ignoring this argument in; /// other cases)</b> This may be useful to avoid the overhead introduced when running really short tasks. In this case,; /// the reduction function should be independent of the size of the vector returned by Map due to optimization of the; /// number of chunks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// root[] ROOT::Internal::TExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const std::vector<int>; /// &v) { return std::accumulate(v.begin(), v.end(), 0); }); /// root[] ROOT::Internal::TExecutor; /// pool(ROOT::EExecutionPolicy::kMultiProcess); auto hist = pool.MapReduce(CreateAndFillHists, 10,; /// PoolUtils::ReduceObjects);; /// ~~~; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx:2239,reduce,reduce,2239,core/imt/src/TExecutor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/src/TExecutor.cxx,2,"['Reduce', 'reduce']","['ReduceObjects', 'reduce']"
Energy Efficiency,"o draw text on client side as well.; *; * The solution is to provide transparent interface that could use both; * X fonts and FreeType, cache glyphs on the client side and possibly; * perform smoothing of ugly X fonts.; *; * There is no library solving all this problems in one fell swoop,; * except for monstrous ones, like ImLib.; *; * Hence libAfterImage has come to life.; *; * DESCRIPTION; * libAfterStep provides sevarl facilities.; *; * 1. X Visual abstruction layer via ASVisual. This layer handles color; * management, transfer of data to and from X Server, and other screen; * related stuff.; *; * 2. Scanline handling facility via ASScanline. ASScanline is the most; * widely used structure since image handling is implemented on; * per-scanline basis.; *; * 3. Image storage, trasformation and rendering via ASImage. ASImage; * provides for generic container used for any image or text; * manipulation. It incorporates such a robust facilities as in-memory; * RLE compression, separate channel storage of 4 channels ( Alpha, Red,; * Green, and Blue ) with 8 bit per channel.; *; * 4. Simplified font handling facility via ASFont and ASFointManager.; * All the font handling is done using ASFont structure, no matter what; * type of font is used. Any font supported by X11 and FreeType can be; * used.; *; * 5. Transparent image file reading for many different formats. Included; * built-in XPM reading code and XCF ( GIMP's native format ).; * Overall supported:; * via external libraries :; * XPM, JPEG, PNG, TIFF, GIF; * via built in code :; * XPM, XCF, PNM, PPM, BMP, ICO, CUR; * Note that XPM can be supported both via built-in code or via libXpm,; * depending on compilation configuration.; * Actuall image file format is autodetected from the file contents -; * file name extention is not used and can be anything at all.; *; * 6. Image export into many popular file formats. Currently implemented :; * XPM, JPEG, PNG, GIF. Work is underway to implement support for TIFF,; * XCF, BM",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h:3844,Green,Green,3844,graf2d/asimage/src/libAfterImage/afterimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterimage.h,1,['Green'],['Green']
Energy Efficiency,"o indicate that it should take advantage of a pool of worker threads. **Each worker thread processes a distinct; subset of entries**, and their partial results are merged before returning the final values to the user.; There are no guarantees on the order in which threads will process the batches of entries.; In particular, note that this means that, for multi-thread event loops, there is no; guarantee on the order in which Snapshot() will _write_ entries: they could be scrambled with respect to the input dataset. The values of the special `rdfentry_` column will also not correspond to the entry numbers in the input dataset (e.g. TChain) in multi-thread runs. \warning By default, RDataFrame will use as many threads as the hardware supports, using up **all** the resources on; a machine. This might be undesirable on shared computing resources such as a batch cluster. Therefore, when running on shared computing resources, use; ~~~{.cpp}; ROOT::EnableImplicitMT(i); ~~~; replacing `i` with the number of CPUs/slots that were allocated for this job. ### Thread-safety of user-defined expressions; RDataFrame operations such as Histo1D() or Snapshot() are guaranteed to work correctly in multi-thread event loops.; User-defined expressions, such as strings or lambdas passed to Filter(), Define(), Foreach(), Reduce() or Aggregate(); will have to be thread-safe, i.e. it should be possible to call them concurrently from different threads. Note that simple Filter() and Define() transformations will inherently satisfy this requirement: Filter() / Define(); expressions will often be *pure* in the functional programming sense (no side-effects, no dependency on external state),; which eliminates all risks of race conditions. In order to facilitate writing of thread-safe operations, some RDataFrame features such as Foreach(), Define() or \link ROOT::RDF::RResultPtr::OnPartialResult OnPartialResult()\endlink; offer thread-aware counterparts (ForeachSlot(), DefineSlot(), \link ROOT::RDF::R",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:48385,allocate,allocated,48385,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['allocate'],['allocated']
Energy Efficiency,o last track; // TRef fHistoWeb; //EXEC:GetHistoWeb reference to an histogram in a TWebFile; // TH1F *fH;; // TBits fTriggerBits; //Bits triggered by this event.; //; // The EventHeader class has 3 data members (integers):; // public:; // Int_t fEvtNum;; // Int_t fRun;; // Int_t fDate;; //; //; // The Event data member fTracks is a pointer to a TClonesArray.; // It is an array of a variable number of tracks per event.; // Each element of the array is an object of class Track with the members:; // private:; // Float_t fPx; //X component of the momentum; // Float_t fPy; //Y component of the momentum; // Float_t fPz; //Z component of the momentum; // Float_t fRandom; //A random track quantity; // Float_t fMass2; //The mass square of this particle; // Float_t fBx; //X intercept at the vertex; // Float_t fBy; //Y intercept at the vertex; // Float_t fMeanCharge; //Mean charge deposition of all hits of this track; // Float_t fXfirst; //X coordinate of the first point; // Float_t fXlast; //X coordinate of the last point; // Float_t fYfirst; //Y coordinate of the first point; // Float_t fYlast; //Y coordinate of the last point; // Float_t fZfirst; //Z coordinate of the first point; // Float_t fZlast; //Z coordinate of the last point; // Double32_t fCharge; //Charge of this track; // Double32_t fVertex[3]; //Track vertex position; // Int_t fNpoint; //Number of points for this track; // Short_t fValid; //Validity criterion; // Int_t fNsp; //Number of points for this track with a special value; // Double32_t *fPointValue; //[fNsp] a special quantity for some point.; // TBits fTriggerBits; //Bits triggered by this track.; //; // An example of a batch program to use the Event/Track classes is given; // in this directory: MainEvent.; // Look also in the same directory at the following macros:; // - eventa.C an example how to read the tree; // - eventb.C how to read events conditionally; //; // During the processing of the event (optionally) also a large number; // of histograms ca,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/Event.cxx:1639,charge,charge,1639,test/Event.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/Event.cxx,4,"['Charge', 'charge']","['Charge', 'charge']"
Energy Efficiency,"object via hist->GetListOfFunctions()->Add(exec).; When the histogram (or graph) is drawn, the TExec will be executed.; If the histogram is made persistent on a file, the TExec object; is also saved with the histogram. When redrawing the histogram in a; new session, the TExec will be executed. Example:. Assume an histogram TH1F *h already filled.; ~~~ {.cpp}; TExec *ex1 = new TExec(""ex1"",""DoSomething()"");; TExec *ex2 = new TExec(""ex2"","".x macro.C"");; h->GetListOfFunctions()->Add(ex1);; h->GetListOfFunctions()->Add(ex2);; h->Draw();; ~~~. When the Paint function for the histogram will be called, the ""DoSomething""; function will be called (interpreted or compiled) and also the macro.C. ### Case 3:. A TExec object is automatically generated when invoking TPad::AddExec.; Each pad contains a TList of TExecs (0, 1 or more). When a mouse event; (motion, click, etc) happens, the pad object executes sequentially; this list of TExecs. In the code (interpreted or compiled) executed; by the TExec referenced command, one can call the pad service functions; such as TPad::GetEvent, TPad::GetEventX, TPad::GetEventY to find; which type of event and the X,Y position of the mouse.; By default, the list of TExecs is executed. This can be disabled; via the canvas menu ""Option"".; See $ROOTSYS/tutorials/hist/exec2.C for an example.; ~~~ {.cpp}; Root > TFile f(""hsimple.root"");; Root > hpxpy.Draw();; Root > c1.AddExec(""ex2"","".x exec2.C"");; ~~~; When moving the mouse in the canvas, a second canvas shows the; projection along X of the bin corresponding to the Y position; of the mouse. The resulting histogram is fitted with a gaussian.; A ""dynamic"" line shows the current bin position in Y.; This more elaborated example can be used as a starting point; to develop more powerful interactive applications exploiting CINT; as a development engine. The 3 options above can be combined.; */; ////////////////////////////////////////////////////////////////////////////////; /// Exec default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TExec.cxx:2847,power,powerful,2847,core/base/src/TExec.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TExec.cxx,1,['power'],['powerful']
Energy Efficiency,"of sub; /// expressions in the stride and base of a SCEV corresponding to the; /// computation of a GCD (greatest common divisor) of base and stride. When; /// SCEV->delinearize fails, it returns the SCEV unchanged.; ///; /// For example: when analyzing the memory access A[i][j][k] in this loop nest; ///; /// void foo(long n, long m, long o, double A[n][m][o]) {; ///; /// for (long i = 0; i < n; i++); /// for (long j = 0; j < m; j++); /// for (long k = 0; k < o; k++); /// A[i][j][k] = 1.0;; /// }; ///; /// the delinearization input is the following AddRec SCEV:; ///; /// AddRec: {{{%A,+,(8 * %m * %o)}<%for.i>,+,(8 * %o)}<%for.j>,+,8}<%for.k>; ///; /// From this SCEV, we are able to say that the base offset of the access is %A; /// because it appears as an offset that does not divide any of the strides in; /// the loops:; ///; /// CHECK: Base offset: %A; ///; /// and then SCEV->delinearize determines the size of some of the dimensions of; /// the array as these are the multiples by which the strides are happening:; ///; /// CHECK: ArrayDecl[UnknownSize][%m][%o] with elements of sizeof(double); /// bytes.; ///; /// Note that the outermost dimension remains of UnknownSize because there are; /// no strides that would help identifying the size of the last dimension: when; /// the array has been statically allocated, one could compute the size of that; /// dimension by dividing the overall size of the array by the size of the known; /// dimensions: %m * %o * 8.; ///; /// Finally delinearize provides the access functions for the array reference; /// that does correspond to A[i][j][k] of the above C testcase:; ///; /// CHECK: ArrayRef[{0,+,1}<%for.i>][{0,+,1}<%for.j>][{0,+,1}<%for.k>]; ///; /// The testcases are checking the output of a function pass:; /// DelinearizationPass that walks through all loads and stores of a function; /// asking for the SCEV of the memory access with respect to all enclosing; /// loops, calling SCEV->delinearize on that and printing the results.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/Delinearization.cpp:1629,allocate,allocated,1629,interpreter/llvm-project/llvm/lib/Analysis/Delinearization.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/Delinearization.cpp,1,['allocate'],['allocated']
Energy Efficiency,"ol over alignment via padding.; //; // Uses from functions are more complicated and the primary purpose of this; // IR pass. Several different lowering are chosen between to meet requirements; // to avoid allocating any LDS where it is not necessary, as that impacts; // occupancy and may fail the compilation, while not imposing overhead on a; // feature whose primary advantage over global memory is performance. The basic; // design goal is to avoid one kernel imposing overhead on another.; //; // Implementation.; //; // LDS variables with constant annotation or non-undef initializer are passed; // through unchanged for simplification or error diagnostics in later passes.; // Non-undef initializers are not yet implemented for LDS.; //; // LDS variables that are always allocated at the same address can be found; // by lookup at that address. Otherwise runtime information/cost is required.; //; // The simplest strategy possible is to group all LDS variables in a single; // struct and allocate that struct in every kernel such that the original; // variables are always at the same address. LDS is however a limited resource; // so this strategy is unusable in practice. It is not implemented here.; //; // Strategy | Precise allocation | Zero runtime cost | General purpose |; // --------+--------------------+-------------------+-----------------+; // Module | No | Yes | Yes |; // Table | Yes | No | Yes |; // Kernel | Yes | Yes | No |; // Hybrid | Yes | Partial | Yes |; //; // ""Module"" spends LDS memory to save cycles. ""Table"" spends cycles and global; // memory to save LDS. ""Kernel"" is as fast as kernel allocation but only works; // for variables that are known reachable from a single kernel. ""Hybrid"" picks; // between all three. When forced to choose between LDS and cycles we minimise; // LDS use.; // The ""module"" lowering implemented here finds LDS variables which are used by; // non-kernel functions and creates a new struct with a field for each of those; // LDS variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:3031,allocate,allocate,3031,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['allocate'],['allocate']
Energy Efficiency,"olled to:; //; // gep %a, 0, %x, %y; load; // gep %a, 0, %x, %y + 1; load; // gep %a, 0, %x + 1, %y; load; // gep %a, 0, %x + 1, %y + 1; load; //; // LLVM's GVN does not use partial redundancy elimination yet, and is thus; // unable to reuse (gep %a, 0, %x, %y). As a result, this misoptimization incurs; // significant slowdown in targets with limited addressing modes. For instance,; // because the PTX target does not support the reg+reg addressing mode, the; // NVPTX backend emits PTX code that literally computes the pointer address of; // each GEP, wasting tons of registers. It emits the following PTX for the; // first load and similar PTX for other loads.; //; // mov.u32 %r1, %x;; // mov.u32 %r2, %y;; // mul.wide.u32 %rl2, %r1, 128;; // mov.u64 %rl3, a;; // add.s64 %rl4, %rl3, %rl2;; // mul.wide.u32 %rl5, %r2, 4;; // add.s64 %rl6, %rl4, %rl5;; // ld.global.f32 %f1, [%rl6];; //; // To reduce the register pressure, the optimization implemented in this file; // merges the common part of a group of GEPs, so we can compute each pointer; // address by adding a simple offset to the common part, saving many registers.; //; // It works by splitting each GEP into a variadic base and a constant offset.; // The variadic base can be computed once and reused by multiple GEPs, and the; // constant offsets can be nicely folded into the reg+immediate addressing mode; // (supported by most targets) without using any extra register.; //; // For instance, we transform the four GEPs and four loads in the above example; // into:; //; // base = gep a, 0, x, y; // load base; // laod base + 1 * sizeof(float); // load base + 32 * sizeof(float); // load base + 33 * sizeof(float); //; // Given the transformed IR, a backend that supports the reg+immediate; // addressing mode can easily fold the pointer arithmetics into the loads. For; // example, the NVPTX backend can easily fold the pointer arithmetics into the; // ld.global.f32 instructions, and the resultant PTX uses much fewer registers.;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp:1570,reduce,reduce,1570,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SeparateConstOffsetFromGEP.cpp,1,['reduce'],['reduce']
Energy Efficiency,"ollowing characteristics (only): overall sample means, \f$ x_i \f$,; for each input variable, \f$ i \f$,; class-specific sample means, \f$ x_{S(B),i}\f$,; and total covariance matrix \f$ T_{ij} \f$. The covariance matrix; can be decomposed into the sum of a _within_ (\f$ W_{ij} \f$); and a _between-class_ (\f$ B_{ij} \f$) class matrix. They describe; the dispersion of events relative to the means of their own class (within-class; matrix), and relative to the overall sample means (between-class matrix).; The Fisher coefficients, \f$ F_i \f$, are then given by. \f[; F_i = \frac{\sqrt{N_s N_b}}{N_s + N_b} \sum_{j=1}^{N_{SB}} W_{ij}^{-1} (\bar{X}_{Sj} - \bar{X}_{Bj}); \f]. where in TMVA is set \f$ N_S = N_B \f$, so that the factor; in front of the sum simplifies to \f$ \frac{1}{2}\f$.; The Fisher discriminant then reads. \f[; X_{Fi} = F_0 + \sum_{i=1}^{N_{SB}} F_i X_i; \f]. The offset \f$ F_0 \f$ centers the sample mean of \f$ x_{Fi} \f$; at zero. Instead of using the within-class matrix, the Mahalanobis variant; determines the Fisher coefficients as follows:. \f[; F_i = \frac{\sqrt{N_s N_b}}{N_s + N_b} \sum_{j=1}^{N_{SB}} (W + B)_{ij}^{-1} (\bar{X}_{Sj} - \bar{X}_{Bj}); \f]. with resulting \f$ x_{Ma} \f$ that are very similar to the \f$ x_{Fi} \f$. TMVA provides two outputs for the ranking of the input variables:. - __Fisher test:__ the Fisher analysis aims at simultaneously maximising; the between-class separation, while minimising the within-class dispersion.; A useful measure of the discrimination power of a variable is hence given; by the diagonal quantity: \f$ \frac{B_{ii}}{W_{ii}} \f$ . - __Discrimination power:__ the value of the Fisher coefficient is a; measure of the discriminating power of a variable. The discrimination power; of set of input variables can therefore be measured by the scalar. \f[; \lambda = \frac{\sqrt{N_s N_b}}{N_s + N_b} \sum_{j=1}^{N_{SB}} F_i (\bar{X}_{Sj} - \bar{X}_{Bj}); \f]. The corresponding numbers are printed on standard output.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx:3639,power,power,3639,tmva/tmva/src/MethodFisher.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx,4,['power'],['power']
Energy Efficiency,"on should copy the subset of dependents it can analytically; integrate to `anaIntSet`, and return a unique identification code for; this integration configuration. If no integration can be; performed, zero should be returned. Second,. ```; double analyticalIntegral(Int_t code); ```. implements the actual analytical integral(s) advertised by; `getAnalyticalIntegral()`. This function will only be called with; codes returned by `getAnalyticalIntegral()`, except code zero. The integration range for each dependent to be integrated can; be obtained from the dependent's proxy functions `min()` and; `max()`. Never call these proxy functions for any proxy not known to; be a dependent via the integration code. Doing so may be; ill-defined, e.g., in case the proxy holds a function, and will; trigger an assert. Integrated category dependents should always be; summed over all of their states. ### Direct generation of observables. Distributions for any PDF can be generated with the accept/reject method,; but for certain PDFs, more efficient methods may be implemented. To; implement direct generation of one or more observables, two; functions need to be implemented, similar to those for analytical; integrals:. ```; Int_t getGenerator(const RooArgSet& generateVars, RooArgSet& directVars); ```; and; ```; void generateEvent(Int_t code); ```. The first function advertises observables, for which distributions can be generated,; similar to the way analytical integrals are advertised. The second; function implements the actual generator for the advertised observables. The generated dependent values should be stored in the proxy; objects. For this, the assignment operator can be used (i.e. `xProxy; = 3.0` ). Never call assign to any proxy not known to be a dependent; via the generation code. Doing so may be ill-defined, e.g. in case; the proxy holds a function, and will trigger an assert. ### Batched function evaluations (Advanced usage). To speed up computations with large numbers of dat",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:4527,efficient,efficient,4527,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['efficient'],['efficient']
Energy Efficiency,"oncatenated strings.; ///; /// Twines support a special 'null' value, which always concatenates to form; /// itself, and renders as an empty string. This can be returned from APIs to; /// effectively nullify any concatenations performed on the result.; ///; /// \b Implementation; ///; /// Given the nature of a Twine, it is not possible for the Twine's; /// concatenation method to construct interior nodes; the result must be; /// represented inside the returned value. For this reason a Twine object; /// actually holds two values, the left- and right-hand sides of a; /// concatenation. We also have nullary Twine objects, which are effectively; /// sentinel values that represent empty strings.; ///; /// Thus, a Twine can effectively have zero, one, or two children. The \see; /// isNullary(), \see isUnary(), and \see isBinary() predicates exist for; /// testing the number of children.; ///; /// We maintain a number of invariants on Twine objects (FIXME: Why):; /// - Nullary twines are always represented with their Kind on the left-hand; /// side, and the Empty kind on the right-hand side.; /// - Unary twines are always represented with the value on the left-hand; /// side, and the Empty kind on the right-hand side.; /// - If a Twine has another Twine as a child, that child should always be; /// binary (otherwise it could have been folded into the parent).; ///; /// These invariants are check by \see isValid().; ///; /// \b Efficiency Considerations; ///; /// The Twine is designed to yield efficient and small code for common; /// situations. For this reason, the concat() method is inlined so that; /// concatenations of leaf nodes can be optimized into stores directly into a; /// single stack allocated object.; ///; /// In practice, not all compilers can be trusted to optimize concat() fully,; /// so we provide two additional methods (and accompanying operator+; /// overloads) to guarantee that particularly important cases (cstring plus; /// StringRef) codegen as desired.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Twine.h:2547,efficient,efficient,2547,interpreter/llvm-project/llvm/include/llvm/ADT/Twine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Twine.h,2,"['allocate', 'efficient']","['allocated', 'efficient']"
Energy Efficiency,"ons into blocks, schedules; // locally inside the blocks where it takes care of low latencies, and then; // chooses the order of the blocks by taking care of high latencies.; // Dividing the instructions into blocks helps control keeping register; // usage low.; //; // First the instructions are put into blocks.; // We want the blocks help control register usage and hide high latencies; // later. To help control register usage, we typically want all local; // computations, when for example you create a result that can be consumed; // right away, to be contained in a block. Block inputs and outputs would; // typically be important results that are needed in several locations of; // the shader. Since we do want blocks to help hide high latencies, we want; // the instructions inside the block to have a minimal set of dependencies; // on high latencies. It will make it easy to pick blocks to hide specific; // high latencies.; // The block creation algorithm is divided into several steps, and several; // variants can be tried during the scheduling process.; //; // Second the order of the instructions inside the blocks is chosen.; // At that step we do take into account only register usage and hiding; // low latency instructions; //; // Third the block order is chosen, there we try to hide high latencies; // and keep register usage low.; //; // After the third step, a pass is done to improve the hiding of low; // latencies.; //; // Actually when talking about 'low latency' or 'high latency' it includes; // both the latency to get the cache (or global mem) data go to the register,; // and the bandwidth limitations.; // Increasing the number of active wavefronts helps hide the former, but it; // doesn't solve the latter, thus why even if wavefront count is high, we have; // to try have as many instructions hiding high latencies as possible.; // The OpenCL doc says for example latency of 400 cycles for a global mem; // access, which is hidden by 10 instructions if the wavefro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp:2858,schedul,scheduling,2858,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,1,['schedul'],['scheduling']
Energy Efficiency,"onsiderations. To obtain the maximum performance out of RDataFrame, make sure to avoid just-in-time compiled versions of transformations and actions if at all possible.; For instance, `Filter(""x > 0"")` requires just-in-time compilation of the corresponding C++ logic, while the equivalent `Filter([](float x) { return x > 0.; }, {""x""})` does not.; Similarly, `Histo1D(""x"")` requires just-in-time compilation after the type of `x` is retrieved from the dataset, while `Histo1D<float>(""x"")` does not; the latter spelling; should be preferred for performance-critical applications. Python applications cannot easily specify template parameters or pass C++ callables to RDataFrame.; See [Efficient analysis in Python](#python) for possible ways to speed up hot paths in this case. Just-in-time compilation happens once, right before starting an event loop. To reduce the runtime cost of this step, make sure to book all operations *for all RDataFrame computation graphs*; before the first event loop is triggered: just-in-time compilation will happen once for all code required to be generated up to that point, also across different computation graphs. Also make sure not to count the just-in-time compilation time (which happens once before the event loop and does not depend on the size of the dataset) as part of the event loop runtime (which scales with the size of the dataset). RDataFrame has an experimental logging feature that simplifies measuring the time spent in just-in-time compilation and in the event loop (as well as providing some more interesting information). See [Activating RDataFrame execution logs](\ref rdf-logging). ### Memory usage. There are two reasons why RDataFrame may consume more memory than expected. Firstly, each result is duplicated for each worker thread, which e.g. in case of many (possibly multi-dimensional) histograms with fine binning can result in visible memory consumption during the event loop. The thread-local copies of the results are destroyed when th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:52275,reduce,reduce,52275,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['reduce'],['reduce']
Energy Efficiency,"oot' and its use is deprecated.; ///; /// A. If nentries <= 0, the file is opened and the tree header read; /// into memory to get the number of entries.; ///; /// B. If nentries > 0, the file is not opened, and nentries is assumed; /// to be the number of entries in the file. In this case, no check; /// is made that the file exists nor that the tree exists in the file,; /// nor that the real TTree entries match with the input argument.; /// This second mode is interesting in case the number of entries in; /// the file is already stored in a run database for example.; /// \warning If you pass `nentries` > `tree_entries`, this may lead to silent; /// data corruption in your analysis or undefined behavior in your program.; /// Use the other options if unsure.; ///; /// C. If nentries == TTree::kMaxEntries (default), the file is not opened.; /// The number of entries in each file will be read only when the file; /// is opened to read an entry. This option is the default and very; /// efficient if one processes the chain sequentially. Note that in; /// case GetEntry(entry) is called and entry refers to an entry in the; /// third file, for example, this forces the tree headers in the first; /// and second file to be read to find the number of entries in those; /// files. Note that if one calls GetEntriesFast() after having created; /// a chain with this default, GetEntriesFast() will return TTree::kMaxEntries!; /// Using the GetEntries() function instead will force all of the tree; /// headers in the chain to be read to read the number of entries in; /// each tree.; ///; /// D. The TChain data structure; /// Each TChainElement has a name equal to the tree name of this TChain; /// and a title equal to the file name. So, to loop over the; /// TFiles that have been added to this chain:; /// ~~~ {.cpp}; /// TObjArray *fileElements=chain->GetListOfFiles();; /// TIter next(fileElements);; /// TChainElement *chEl=0;; /// while (( chEl=(TChainElement*)next() )) {; /// TFile f(ch",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx:1948,efficient,efficient,1948,tree/tree/src/TChain.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TChain.cxx,1,['efficient'],['efficient']
Energy Efficiency,"orkerExecutor<F, T, R>; /// The most general case, used by; /// TProcessExecutor::MapReduce(F func, T& args, R redfunc).; /// This worker is build with:; /// * a function of signature F (the one to be executed); /// * a collection of arguments of type T on which to apply the function; /// * a reduce function with signature R to be used to squash many; /// returned values together.; ///; /// ### Partial specializations; /// A few partial specializations are provided for less general cases:; /// * TMPWorkerExecutor<F, T, void> handles the case of a function that takes; /// one argument and does not perform reduce operations; /// (TProcessExecutor::Map(F func, T& args)).; /// * TMPWorkerExecutor<F, void, R> handles the case of a function that takes; /// no arguments, to be executed a specified amount of times, which; /// returned values are squashed together (reduced); /// (TProcessExecutor::Map(F func, unsigned nTimes, R redfunc)); /// * TMPWorkerExecutor<F, void, void> handles the case of a function that takes; /// no arguments and whose arguments are not ""reduced""; /// (TProcessExecutor::Map(F func, unsigned nTimes)); ///; /// Since all the important data are passed to TMPWorkerExecutor at construction; /// time, the kind of messages that client and workers have to exchange; /// are usually very simple.; ///; //////////////////////////////////////////////////////////////////////////; // Quick guide to TMPWorkerExecutor:; // For each TProcessExecutor::Map and TProcessExecutor::MapReduce signature; // there's a corresponding; // specialization of TMPWorkerExecutor:; // * Map(func, nTimes) --> TMPWorkerExecutor<F, void, void>; // * Map(func, args) --> TMPWorkerExecutor<F, T, void>; // * MapReduce(func, nTimes, redfunc) --> TMPWorkerExecutor<F, void, R>; // * MapReduce(func, args, redfunc) --> TMPWorkerExecutor<F, T, R>; // I thought about having four different classes (with different names); // instead of four specializations of the same class template, but it really; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h:1243,reduce,reduced,1243,core/multiproc/inc/TMPWorkerExecutor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/multiproc/inc/TMPWorkerExecutor.h,2,['reduce'],['reduced']
Energy Efficiency,"orm.h ximage.h; * AUTHOR; * Sasha Vasko <sasha at aftercode dot net>; *******/; /****f* libAfterImage/transform/scale_asimage(); * NAME; * scale_asimage() - scales source ASImage into new image of requested ; * dimensions. ; * SYNOPSIS; * ASImage *scale_asimage( struct ASVisual *asv,; * ASImage *src,; * unsigned int to_width,; * unsigned int to_height,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality );; * INPUTS; * asv 		- pointer to valid ASVisual structure; * src 		- source ASImage; * to_width 	- desired width of the resulting image; * to_height	- desired height of the resulting image; * out_format 	- optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out- compression level of resulting image in range 0-100.; * quality 	- output quality; * RETURN VALUE; * returns newly created and encoded ASImage on success, NULL of failure.; * DESCRIPTION; * If size has to be reduced - then several neighboring pixels will be ; * averaged into single pixel. If size has to be increased then new ; * pixels will be interpolated based on values of four neighboring pixels.; * EXAMPLE; * ASScale; *********/; /****f* libAfterImage/transform/tile_asimage(); * NAME; * tile_asimage() - tiles/crops ASImage to desired size, while optionaly ; * tinting it at the same time.; * SYNOPSIS; * ASImage *tile_asimage ( struct ASVisual *asv,; * ASImage *src,; * int offset_x,; * int offset_y,; * unsigned int to_width,; * unsigned int to_height,; * ARGB32 tint,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality );; * INPUTS; * asv - pointer to valid ASVisual structure; * src - source ASImage; * offset_x - left clip margin; * offset_y - right clip margin; * to_width - desired width of the resulting image; * to_height - desired height of the resulting image; * tint - ARGB32 value describing tinting color.; * out_format 	- optionally describes alternative ASImage format that; * shou",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h:2283,reduce,reduced,2283,graf2d/asimage/src/libAfterImage/transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h,1,['reduce'],['reduced']
Energy Efficiency,"ose; * together.; *; * So this code uses the perhaps slightly less optimal but more; * understandable and totally obvious approach of calculating color-scale.; *; * This algorithm depends on the precision in white-scale and that is; * (1/white-y), so we can immediately see that as white-y approaches 0 the; * accuracy inherent in the cHRM chunk drops off substantially.; *; * libpng arithmetic: a simple inversion of the above equations; * ------------------------------------------------------------; *; * white_scale = 1/white-y; * white-X = white-x * white-scale; * white-Y = 1.0; * white-Z = (1 - white-x - white-y) * white_scale; *; * white-C = red-C + green-C + blue-C; * = red-c*red-scale + green-c*green-scale + blue-c*blue-scale; *; * This gives us three equations in (red-scale,green-scale,blue-scale) where; * all the coefficients are now known:; *; * red-x*red-scale + green-x*green-scale + blue-x*blue-scale; * = white-x/white-y; * red-y*red-scale + green-y*green-scale + blue-y*blue-scale = 1; * red-z*red-scale + green-z*green-scale + blue-z*blue-scale; * = (1 - white-x - white-y)/white-y; *; * In the last equation color-z is (1 - color-x - color-y) so we can add all; * three equations together to get an alternative third:; *; * red-scale + green-scale + blue-scale = 1/white-y = white-scale; *; * So now we have a Cramer's rule solution where the determinants are just; * 3x3 - far more tractible. Unfortunately 3x3 determinants still involve; * multiplication of three coefficients so we can't guarantee to avoid; * overflow in the libpng fixed point representation. Using Cramer's rule in; * floating point is probably a good choice here, but it's not an option for; * fixed point. Instead proceed to simplify the first two equations by; * eliminating what is likely to be the largest value, blue-scale:; *; * blue-scale = white-scale - red-scale - green-scale; *; * Hence:; *; * (red-x - blue-x)*red-scale + (green-x - blue-x)*green-scale =; * (white-x - blue-x)*white-scale; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:3515,green,green-C,3515,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,11,['green'],"['green-C', 'green-c', 'green-scale', 'green-x', 'green-y', 'green-z']"
Energy Efficiency,"ou don't understand what follows.; *; * The simplified API hides the details of both libpng and the PNG file format; * itself. It allows PNG files to be read into a very limited number of; * in-memory bitmap formats or to be written from the same formats. If these; * formats do not accommodate your needs then you can, and should, use the more; * sophisticated APIs above - these support a wide variety of in-memory formats; * and a wide variety of sophisticated transformations to those formats as well; * as a wide variety of APIs to manipulate ancillary information.; *; * To read a PNG file using the simplified API:; *; * 1) Declare a 'png_image' structure (see below) on the stack, set the; * version field to PNG_IMAGE_VERSION and the 'opaque' pointer to NULL; * (this is REQUIRED, your program may crash if you don't do it.); * 2) Call the appropriate png_image_begin_read... function.; * 3) Set the png_image 'format' member to the required sample format.; * 4) Allocate a buffer for the image and, if required, the color-map.; * 5) Call png_image_finish_read to read the image and, if required, the; * color-map into your buffers.; *; * There are no restrictions on the format of the PNG input itself; all valid; * color types, bit depths, and interlace methods are acceptable, and the; * input image is transformed as necessary to the requested in-memory format; * during the png_image_finish_read() step. The only caveat is that if you; * request a color-mapped image from a PNG that is full-color or makes; * complex use of an alpha channel the transformation is extremely lossy and the; * result may look terrible.; *; * To write a PNG file using the simplified API:; *; * 1) Declare a 'png_image' structure on the stack and memset() it to all zero.; * 2) Initialize the members of the structure that describe the image, setting; * the 'format' member to the format of the image samples.; * 3) Call the appropriate png_image_write... function with a pointer to the; * image and, if nece",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:1291,Allocate,Allocate,1291,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['Allocate'],['Allocate']
Energy Efficiency,"ou might need to replace PNG_DEFAULT_sRGB with the; * correct value for your system.; *; * png_set_alpha_mode(pp, PNG_ALPHA_OPTIMIZED, PNG_DEFAULT_sRGB);; * If you just need to composite the PNG image onto an existing background; * and if you control the code that does this you can use the optimization; * setting. In this case you just copy completely opaque pixels to the; * output. For pixels that are not completely transparent (you just skip; * those) you do the composition math using png_composite or png_composite_16; * below then encode the resultant 8-bit or 16-bit values to match the output; * encoding.; *; * Other cases; * If neither the PNG nor the standard linear encoding work for you because; * of the software or hardware you use then you have a big problem. The PNG; * case will probably result in halos around the image. The linear encoding; * will probably result in a washed out, too bright, image (it's actually too; * contrasty.) Try the ALPHA_OPTIMIZED mode above - this will probably; * substantially reduce the halos. Alternatively try:; *; * png_set_alpha_mode(pp, PNG_ALPHA_BROKEN, PNG_DEFAULT_sRGB);; * This option will also reduce the halos, but there will be slight dark; * halos round the opaque parts of the image where the background is light.; * In the OPTIMIZED mode the halos will be light halos where the background; * is dark. Take your pick - the halos are unavoidable unless you can get; * your hardware/software fixed! (The OPTIMIZED approach is slightly; * faster.); *; * When the default gamma of PNG files doesn't match the output gamma.; * If you have PNG files with no gamma information png_set_alpha_mode allows; * you to provide a default gamma, but it also sets the output gamma to the; * matching value. If you know your PNG files have a gamma that doesn't; * match the output you can take advantage of the fact that; * png_set_alpha_mode always sets the output gamma but only sets the PNG; * default if it is not already set:; *; * png_set_alpha",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:2676,reduce,reduce,2676,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['reduce'],['reduce']
Energy Efficiency,"own_colormap, black_pixel, white_pixel.; * DESCRIPTION; * query_screen_visual_id() will go though prioritized list of possible; * Visuals and attempt to match those to what is available on the; * specified screen. If all items from list fail, then it goes about; * querying default visual.; * query_screen_visual is identical to query_screen_visual_id with; * visual_id and cmap set to 0.; * Once X Visual has been identified, we create X colormap and allocate; * white and black pixels from it.; *********/; /****f* libAfterImage/setup_truecolor_visual(); * NAME; * setup_truecolor_visual(); * SYNOPSIS; * Bool setup_truecolor_visual( ASVisual *asv );; * INPUTS; * asv 		- preallocated ASVisual structure.; * RETURN VALUE; * True on success, False if visual is not TrueColor.; * DESCRIPTION; * setup_truecolor_visual() checks if Visual is indeed TrueColor and if; * so it goes about querying color masks, deducing real XImage; * colordepth, and whether we work in BGR mode. It then goes about; * setting up correct hooks to X IO functions.; *********/; /****f* libAfterImage/setup_pseudo_visual(); * NAME; * setup_pseudo_visual(); * SYNOPSIS; * void setup_pseudo_visual( ASVisual *asv );; * INPUTS; * asv 		- preallocated ASVisual structure.; * DESCRIPTION; * setup_pseudo_visual() assumes that Visual is PseudoColor. It then; * tries to decide as to how many colors preallocate, and goes about; * setting up correct X IO hooks and possibly initialization of reverse; * colormap in case ASVisual already has colormap preallocated.; *********/; /****f* libAfterImage/setup_as_colormap(); * NAME; * setup_as_colormap(); * SYNOPSIS; * void setup_as_colormap( ASVisual *asv );; * INPUTS; * asv 		- preallocated ASVisual structure.; * DESCRIPTION; * That has to be called in order to pre-allocate sufficient number of; * colors. It uses colormap size identification supplied in ASVisual; * structure. If colors where preallocated successfully - it will also; * create reverse lookup colormap.; *********/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h:2681,allocate,allocate,2681,graf2d/asimage/src/libAfterImage/asvisual.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asvisual.h,1,['allocate'],['allocate']
Energy Efficiency,"p"", where ""p"" is the smallest pad; // that aligns AP to the required boundary (a maximum of the alignments of; // all stack objects, fixed- and variable-sized). All local objects[1] will; // then use AP as the base pointer.; // [1] The exception is with ""fixed"" stack objects. ""Fixed"" stack objects get; // their name from being allocated at fixed locations on the stack, relative; // to the FP. In the presence of dynamic allocation and local alignment, such; // objects can only be accessed through the FP.; //; // Illustration of the AP:; // FP --+; // |; // ---------------+---------------------+-----+-----------------------++-+--; // Rest of the | Local stack objects | Pad | Fixed stack objects |LR|; // stack frame | (aligned) | | (CSR, spills, etc.) |FP|; // ---------------+---------------------+-----+-----------------+-----+--+--; // |<-- Multiple of the -->|; // stack alignment +-- AP; //; // The AP is set up at the beginning of the function. Since it is not a dedi-; // cated (reserved) register, it needs to be kept live throughout the function; // to be available as the base register for local object accesses.; // Normally, an address of a stack objects is obtained by a pseudo-instruction; // PS_fi. To access local objects with the AP register present, a different; // pseudo-instruction needs to be used: PS_fia. The PS_fia takes one extra; // argument compared to PS_fi: the first input register is the AP register.; // This keeps the register live between its definition and its uses.; // The AP register is originally set up using pseudo-instruction PS_aligna:; // AP = PS_aligna A; // where; // A - required stack alignment; // The alignment value must be the maximum of all alignments required by; // any stack object.; // The dynamic allocation uses a pseudo-instruction PS_alloca:; // Rd = PS_alloca Rs, A; // where; // Rd - address of the allocated space; // Rs - minimum size (the actual allocated can be larger to accommodate; // alignment); // A - required alignment",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp:3704,allocate,allocated,3704,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp,2,['allocate'],['allocated']
Energy Efficiency,"physical representation (svbool, <vscale x 16 x i1>) -- a 16-element; /// scalable vector of i1s, i.e. <vscale x 16 x i1>.; ///; /// The SVE ptrue intrinsic is used to create a logical representation of an SVE; /// predicate. Suppose that we have two SVE ptrue intrinsic calls: P1 and P2. If; /// P1 creates a logical SVE predicate that is at least as wide as the logical; /// SVE predicate created by P2, then all of the bits that are true in the; /// physical representation of P2 are necessarily also true in the physical; /// representation of P1. P1 'encompasses' P2, therefore, the intrinsic call to; /// P2 is redundant and can be replaced by an SVE reinterpret of P1 via; /// convert.{to,from}.svbool.; ///; /// Currently, this pass only coalesces calls to SVE ptrue intrinsics; /// if they match the following conditions:; ///; /// - the call to the intrinsic uses either the SV_ALL or SV_POW2 patterns.; /// SV_ALL indicates that all bits of the predicate vector are to be set to; /// true. SV_POW2 indicates that all bits of the predicate vector up to the; /// largest power-of-two are to be set to true.; /// - the result of the call to the intrinsic is not promoted to a wider; /// predicate. In this case, keeping the extra ptrue leads to better codegen; /// -- coalescing here would create an irreducible chain of SVE reinterprets; /// via convert.{to,from}.svbool.; ///; /// EXAMPLE:; ///; /// %1 = <vscale x 8 x i1> ptrue(i32 SV_ALL); /// ; Logical: <1, 1, 1, 1, 1, 1, 1, 1>; /// ; Physical: <1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0>; /// ...; ///; /// %2 = <vscale x 4 x i1> ptrue(i32 SV_ALL); /// ; Logical: <1, 1, 1, 1>; /// ; Physical: <1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0>; /// ...; ///; /// Here, %2 can be replaced by an SVE reinterpret of %1, giving, for instance:; ///; /// %1 = <vscale x 8 x i1> ptrue(i32 i31); /// %2 = <vscale x 16 x i1> convert.to.svbool(<vscale x 8 x i1> %1); /// %3 = <vscale x 4 x i1> convert.from.svbool(<vscale x 16 x i1> %2); ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/SVEIntrinsicOpts.cpp:1393,power,power-of-two,1393,interpreter/llvm-project/llvm/lib/Target/AArch64/SVEIntrinsicOpts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/SVEIntrinsicOpts.cpp,1,['power'],['power-of-two']
Energy Efficiency,"plitting a very; /// long string can be done in constant time by splitting a RopePiece that; /// references the whole string into two rope pieces that reference each half.; /// Once split, another string can be inserted in between the two halves by; /// inserting a RopePiece in between the two others. All of this is very; /// inexpensive: it takes time proportional to the number of RopePieces, not the; /// length of the strings they represent.; ///; /// While a linear sequences of RopePieces is the conceptual model, the actual; /// implementation captures them in an adapted B+ Tree. Using a B+ tree (which; /// is a tree that keeps the values in the leaves and has where each node; /// contains a reasonable number of pointers to children/values) allows us to; /// maintain efficient operation when the RewriteRope contains a *huge* number; /// of RopePieces. The basic idea of the B+ Tree is that it allows us to find; /// the RopePiece corresponding to some offset very efficiently, and it; /// automatically balances itself on insertions of RopePieces (which can happen; /// for both insertions and erases of string ranges).; ///; /// The one wrinkle on the theory is that we don't attempt to keep the tree; /// properly balanced when erases happen. Erases of string data can both insert; /// new RopePieces (e.g. when the middle of some other rope piece is deleted,; /// which results in two rope pieces, which is just like an insert) or it can; /// reduce the number of RopePieces maintained by the B+Tree. In the case when; /// the number of RopePieces is reduced, we don't attempt to maintain the; /// standard 'invariant' that each node in the tree contains at least; /// 'WidthFactor' children/values. For our use cases, this doesn't seem to; /// matter.; ///; /// The implementation below is primarily implemented in terms of three classes:; /// RopePieceBTreeNode - Common base class for:; ///; /// RopePieceBTreeLeaf - Directly manages up to '2*WidthFactor' RopePiece; /// nodes. T",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp:1412,efficient,efficiently,1412,interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp,1,['efficient'],['efficiently']
Energy Efficiency,"posal. To use; only the local machine (e.g. your laptop), a `LocalCluster` object can be; used. This step can be skipped if you have access to an existing Dask; cluster; in that case, the cluster administrator should provide you with a; URL to connect to the cluster in step 2. More options for cluster creation; can be found in the Dask docs at; http://distributed.dask.org/en/stable/api.html#cluster .; 2. Creating a Dask client object that connects to the cluster. This accepts; directly the object previously created. In case the cluster was setup; externally, you need to provide an endpoint URL to the client, e.g.; 'https://myscheduler.domain:8786'. Through Dask, you can connect to various types of cluster resources. For; example, you can connect together a set of machines through SSH and use them; to run your computations. This is done through the `SSHCluster` class. For; example:. ```python; from dask.distributed import SSHCluster; cluster = SSHCluster(; # A list with machine host names, the first name will be used as; # scheduler, following names will become workers.; hosts=[""machine1"",""machine2"",""machine3""],; # A dictionary of options for each worker node, here we set the number; # of cores to be used on each node.; worker_options={""nprocs"":4,},; ); ```. Another common usecase is interfacing Dask to a batch system like HTCondor or; Slurm. A separate package called dask-jobqueue (https://jobqueue.dask.org); extends the available Dask cluster classes to enable running Dask computations; as batch jobs. In this case, the cluster object usually receives the parameters; that would be written in the job description file. For example:. ```python; from dask_jobqueue import HTCondorCluster; cluster = HTCondorCluster(; cores=1,; memory='2000MB',; disk='1000MB',; ); # Use the scale method to send as many jobs as needed; cluster.scale(4); ```. In this tutorial, a cluster object is created for the local machine, using; multiprocessing (processes=True) on 2 workers (n_workers=2)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py:1249,schedul,scheduler,1249,tutorials/dataframe/distrdf002_dask_connection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py,1,['schedul'],['scheduler']
Energy Efficiency,"r data flow (RDF); // for a non-SSA program representation (e.g. post-RA machine code).; //; //; // *** Introduction; //; // The RDF graph is a collection of nodes, each of which denotes some element; // of the program. There are two main types of such elements: code and refe-; // rences. Conceptually, ""code"" is something that represents the structure; // of the program, e.g. basic block or a statement, while ""reference"" is an; // instance of accessing a register, e.g. a definition or a use. Nodes are; // connected with each other based on the structure of the program (such as; // blocks, instructions, etc.), and based on the data flow (e.g. reaching; // definitions, reached uses, etc.). The single-reaching-definition principle; // of SSA is generally observed, although, due to the non-SSA representation; // of the program, there are some differences between the graph and a ""pure""; // SSA representation.; //; //; // *** Implementation remarks; //; // Since the graph can contain a large number of nodes, memory consumption; // was one of the major design considerations. As a result, there is a single; // base class NodeBase which defines all members used by all possible derived; // classes. The members are arranged in a union, and a derived class cannot; // add any data members of its own. Each derived class only defines the; // functional interface, i.e. member functions. NodeBase must be a POD,; // which implies that all of its members must also be PODs.; // Since nodes need to be connected with other nodes, pointers have been; // replaced with 32-bit identifiers: each node has an id of type NodeId.; // There are mapping functions in the graph that translate between actual; // memory addresses and the corresponding identifiers.; // A node id of 0 is equivalent to nullptr.; //; //; // *** Structure of the graph; //; // A code node is always a collection of other nodes. For example, a code; // node corresponding to a basic block will contain code nodes corresponding; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RDFGraph.h:1465,consumption,consumption,1465,interpreter/llvm-project/llvm/include/llvm/CodeGen/RDFGraph.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/RDFGraph.h,1,['consumption'],['consumption']
Energy Efficiency,"r is as follows:; ///; /// 1. Create private copies of reduction variables on each OpenMP; /// thread: 'foo_private', 'bar_private'; /// 2. Each OpenMP thread reduces the chunk of 'A' and 'B' assigned; /// to it and writes the result in 'foo_private' and 'bar_private'; /// respectively.; /// 3. Call the OpenMP runtime on the GPU to reduce within a team; /// and store the result on the team master:; ///; /// __kmpc_nvptx_parallel_reduce_nowait_v2(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn); ///; /// where:; /// struct ReduceData {; /// double *foo;; /// double *bar;; /// } reduceData; /// reduceData.foo = &foo_private; /// reduceData.bar = &bar_private; ///; /// 'shuffleReduceFn' and 'interWarpCpyFn' are pointers to two; /// auxiliary functions generated by the compiler that operate on; /// variables of type 'ReduceData'. They aid the runtime perform; /// algorithmic steps in a data agnostic manner.; ///; /// 'shuffleReduceFn' is a pointer to a function that reduces data; /// of type 'ReduceData' across two OpenMP threads (lanes) in the; /// same warp. It takes the following arguments as input:; ///; /// a. variable of type 'ReduceData' on the calling lane,; /// b. its lane_id,; /// c. an offset relative to the current lane_id to generate a; /// remote_lane_id. The remote lane contains the second; /// variable of type 'ReduceData' that is to be reduced.; /// d. an algorithm version parameter determining which reduction; /// algorithm to use.; ///; /// 'shuffleReduceFn' retrieves data from the remote lane using; /// efficient GPU shuffle intrinsics and reduces, using the; /// algorithm specified by the 4th parameter, the two operands; /// element-wise. The result is written to the first operand.; ///; /// Different reduction algorithms are implemented in different; /// runtime functions, all calling 'shuffleReduceFn' to perform; /// the essential reduction step. Therefore, based on the 4th; /// parameter, this function behaves slightly differently to; /// c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:2373,reduce,reduces,2373,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,2,"['Reduce', 'reduce']","['ReduceData', 'reduces']"
Energy Efficiency,"r written permission.; **; ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" ; ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE ; ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE; ** ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE ; ** LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR ; ** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF ; ** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS; ** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN; ** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE); ** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF; ** THE POSSIBILITY OF SUCH DAMAGE.; */; /*; ** Copyright (c) 2007 The Khronos Group Inc.; ** ; ** Permission is hereby granted, free of charge, to any person obtaining a; ** copy of this software and/or associated documentation files (the; ** ""Materials""), to deal in the Materials without restriction, including; ** without limitation the rights to use, copy, modify, merge, publish,; ** distribute, sublicense, and/or sell copies of the Materials, and to; ** permit persons to whom the Materials are furnished to do so, subject to; ** the following conditions:; ** ; ** The above copyright notice and this permission notice shall be included; ** in all copies or substantial portions of the Materials.; ** ; ** THE MATERIALS ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.; ** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY; ** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,; ** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE; ** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/wglew.h:1893,charge,charge,1893,builtins/glew/inc/GL/wglew.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/wglew.h,1,['charge'],['charge']
Energy Efficiency,"r-defined maximum (0 means ""default""). The result of FSE_normalizeCount() will be saved into a table,; called 'normalizedCounter', which is a table of signed short.; 'normalizedCounter' must be already allocated, and have at least 'maxSymbolValue+1' cells.; The return value is tableLog if everything proceeded as expected.; It is 0 if there is a single symbol within distribution.; If there is an error (ex: invalid tableLog value), the function will return an ErrorCode (which can be tested using FSE_isError()). 'normalizedCounter' can be saved in a compact manner to a memory area using FSE_writeNCount().; 'buffer' must be already allocated.; For guaranteed success, buffer size must be at least FSE_headerBound().; The result of the function is the number of bytes written into 'buffer'.; If there is an error, the function will return an ErrorCode (which can be tested using FSE_isError(); ex : buffer size too small). 'normalizedCounter' can then be used to create the compression table 'CTable'.; The space required by 'CTable' must be already allocated, using FSE_createCTable().; You can then use FSE_buildCTable() to fill 'CTable'.; If there is an error, both functions will return an ErrorCode (which can be tested using FSE_isError()). 'CTable' can then be used to compress 'src', with FSE_compress_usingCTable().; Similar to FSE_count(), the convention is that 'src' is assumed to be a table of char of size 'srcSize'; The function returns the size of compressed data (without header), necessarily <= `dstCapacity`.; If it returns '0', compressed data could not fit into 'dst'.; If there is an error, the function will return an ErrorCode (which can be tested using FSE_isError()).; */; /* *** DECOMPRESSION *** */; /*! FSE_readNCount():; Read compactly saved 'normalizedCounter' from 'rBuffer'.; @return : size read from 'rBuffer',; or an errorCode, which can be tested using FSE_isError().; maxSymbolValuePtr[0] and tableLogPtr[0] will also be updated with their respective values */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:2220,allocate,allocated,2220,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['allocate'],['allocated']
Energy Efficiency,"ransforms; ///; /// - orthogonal transforms can be successfully used for the processing of; /// nuclear spectra (not only); ///; /// - they can be used to remove high frequency noise, to increase; /// signal-to-background ratio as well as to enhance low intensity components [1],; /// to carry out e.g. Fourier analysis etc.; ///; /// - we have implemented the function for the calculation of the commonly; /// used orthogonal transforms as well as functions for the filtration and; /// enhancement of experimental data; ///; /// #### References:; ///; /// [1] C.V. Hampton, B. Lian, Wm. C.; /// McHarris: Fast-Fourier-transform spectral enhancement techniques for gamma-ray; /// spectroscopy. NIM A353 (1994) 280-284.; ///; /// [2] Morhac M., Matouoek V.,; /// New adaptive Cosine-Walsh transform and its application to nuclear data; /// compression, IEEE Transactions on Signal Processing 48 (2000) 2693.; ///; /// [3] Morhac M., Matouoek V.,; /// Data compression using new fast adaptive Cosine-Haar transforms, Digital Signal; /// Processing 8 (1998) 63.; ///; /// [4] Morhac M., Matouoek V.:; /// Multidimensional nuclear data compression using fast adaptive Walsh-Haar; /// transform. Acta Physica Slovaca 51 (2001) 307.; ///; /// ### Example 1 - script Transform2.c:; ///; /// \image html spectrum2transform_transform_image002.jpg Fig. 1 Original two-dimensional noisy spectrum; ///; /// \image html spectrum2transform_transform_image003.jpg Fig. 2 Transformed spectrum from Fig. 1 using Cosine transform. Energy of the transformed data is concentrated around the beginning of the coordinate system; ///; /// #### Script:; ///; /// Example to illustrate Transform function (class TSpectrumTransform2).; /// To execute this example, do; ///; /// `root > .x Transform2.C`; ///; /// ~~~ {.cpp}; /// void Transform2() {; /// Int_t i, j;; /// Int_t nbinsx = 256;; /// Int_t nbinsy = 256;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// Double_t ** ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:1884,adapt,adaptive,1884,hist/spectrum/src/TSpectrum2Transform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx,1,['adapt'],['adaptive']
Energy Efficiency,"remain to be distributed. Each chunk contains chunk_size; // iterations, except for the last chunk to be distributed, which may have; // fewer iterations. When no chunk_size is specified, it defaults to 1.; //; // When schedule(guided,chunk_size) is specified, the iterations are assigned; // to threads in the team in chunks as the executing threads request them.; // Each thread executes a chunk of iterations, then requests another chunk,; // until no chunks remain to be assigned. For a chunk_size of 1, the size of; // each chunk is proportional to the number of unassigned iterations divided; // by the number of threads in the team, decreasing to 1. For a chunk_size; // with value k (greater than 1), the size of each chunk is determined in the; // same way, with the restriction that the chunks do not contain fewer than k; // iterations (except for the last chunk to be assigned, which may have fewer; // than k iterations).; //; // When schedule(auto) is specified, the decision regarding scheduling is; // delegated to the compiler and/or runtime system. The programmer gives the; // implementation the freedom to choose any possible mapping of iterations to; // threads in the team.; //; // When schedule(runtime) is specified, the decision regarding scheduling is; // deferred until run time, and the schedule and chunk size are taken from the; // run-sched-var ICV. If the ICV is set to auto, the schedule is; // implementation defined; //; // while(__kmpc_dispatch_next(&LB, &UB)) {; // idx = LB;; // while (idx <= UB) { BODY; ++idx;; // __kmpc_dispatch_fini_(4|8)[u](); // For ordered loops only.; // } // inner loop; // }; //; // OpenMP [2.7.1, Loop Construct, Description, table 2-1]; // When schedule(static, chunk_size) is specified, iterations are divided into; // chunks of size chunk_size, and the chunks are assigned to the threads in; // the team in a round-robin fashion in the order of the thread number.; //; // while(UB = min(UB, GlobalUB), idx = LB, idx < UB) {; // whi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:1277,schedul,schedule,1277,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,2,['schedul'],"['schedule', 'scheduling']"
Energy Efficiency,"rg/copyright.html>; for definitions of Unicode Inc.’s Data Files and Software. NOTICE TO USER: Carefully read the following legal agreement.; BY DOWNLOADING, INSTALLING, COPYING OR OTHERWISE USING UNICODE INC.'S; DATA FILES (""DATA FILES""), AND/OR SOFTWARE (""SOFTWARE""),; YOU UNEQUIVOCALLY ACCEPT, AND AGREE TO BE BOUND BY, ALL OF THE; TERMS AND CONDITIONS OF THIS AGREEMENT.; IF YOU DO NOT AGREE, DO NOT DOWNLOAD, INSTALL, COPY, DISTRIBUTE OR USE; THE DATA FILES OR SOFTWARE. COPYRIGHT AND PERMISSION NOTICE. Copyright © 1991-2022 Unicode, Inc. All rights reserved.; Distributed under the Terms of Use in https://www.unicode.org/copyright.html. Permission is hereby granted, free of charge, to any person obtaining; a copy of the Unicode data files and any associated documentation; (the ""Data Files"") or Unicode software and any associated documentation; (the ""Software"") to deal in the Data Files or Software; without restriction, including without limitation the rights to use,; copy, modify, merge, publish, distribute, and/or sell copies of; the Data Files or Software, and to permit persons to whom the Data Files; or Software are furnished to do so, provided that either; (a) this copyright and permission notice appear with all copies; of the Data Files or Software, or; (b) this copyright and permission notice appear in associated; Documentation. THE DATA FILES AND SOFTWARE ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF; ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE; WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; NONINFRINGEMENT OF THIRD PARTY RIGHTS.; IN NO EVENT SHALL THE COPYRIGHT HOLDER OR HOLDERS INCLUDED IN THIS; NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL INDIRECT OR CONSEQUENTIAL; DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,; DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER; TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR; PERFORMANCE OF THE DATA FILES OR SOFTWARE. Except as co",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/UnicodeNameToCodepointGenerated.cpp:1426,charge,charge,1426,interpreter/llvm-project/llvm/lib/Support/UnicodeNameToCodepointGenerated.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/UnicodeNameToCodepointGenerated.cpp,2,['charge'],['charge']
Energy Efficiency,"rkby@uci.edu *; * *; * Copyright (c) 2000-2020, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; * \class RooBinSamplingPdf; * The RooBinSamplingPdf is supposed to be used as an adapter between a continuous PDF; * and a binned distribution.; * When RooFit is used to fit binned data, and the PDF is continuous, it takes the probability density; * at the bin centre as a proxy for the probability averaged (integrated) over the entire bin. This is; * correct only if the second derivative of the function vanishes, though. This is shown in the plots; * below.; *; * For PDFs that have larger curvatures, the RooBinSamplingPdf can be used. It integrates the PDF in each; * bin using an adaptive integrator. This usually requires 21 times more function evaluations, but significantly; * reduces biases due to better sampling of the PDF. The integrator can be accessed from the outside; * using integrator(). This can be used to change the integration rules, so less/more function evaluations are; * performed. The target precision of the integrator can be set in the constructor.; *; *; * ### How to use it; * There are two ways to use this class:; * - Manually wrap a PDF:; * ```; * RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; * binSampler.fitTo(data);; * ```; * When a PDF is wrapped with a RooBinSamplingPDF, just use the bin sampling PDF instead of the original one for fits; * or plotting etc.; * \note The binning will be taken from the observable. Make sure that this binning is the same as the one of the dataset that should be fit.; * Use RooRealVar::setBinning() to adapt it.; * - In",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:1305,adapt,adaptive,1305,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['adapt'],['adaptive']
Energy Efficiency,"rmation.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // This file implements PGO instrumentation using a minimum spanning tree based; // on the following paper:; // [1] Donald E. Knuth, Francis R. Stevenson. Optimal measurement of points; // for program frequency counts. BIT Numerical Mathematics 1973, Volume 13,; // Issue 3, pp 313-322; // The idea of the algorithm based on the fact that for each node (except for; // the entry and exit), the sum of incoming edge counts equals the sum of; // outgoing edge counts. The count of edge on spanning tree can be derived from; // those edges not on the spanning tree. Knuth proves this method instruments; // the minimum number of edges.; //; // The minimal spanning tree here is actually a maximum weight tree -- on-tree; // edges have higher frequencies (more likely to execute). The idea is to; // instrument those less frequently executed edges to reduce the runtime; // overhead of instrumented binaries.; //; // This file contains two passes:; // (1) Pass PGOInstrumentationGen which instruments the IR to generate edge; // count profile, and generates the instrumentation for indirect call; // profiling.; // (2) Pass PGOInstrumentationUse which reads the edge count profile and; // annotates the branch weights. It also reads the indirect call value; // profiling records and annotate the indirect call instructions.; //; // To get the precise counter information, These two passes need to invoke at; // the same compilation point (so they see the same IR). For pass; // PGOInstrumentationGen, the real work is done in instrumentOneFunc(). For; // pass PGOInstrumentationUse, the real work in done in class PGOUseFunc and; // the profile is opened in module level and passed to each PGOUseFunc instance.; // The shared code for PGOInstrumentationGen and PGOInstrumentationUse is put; // in class FuncPGOInstrumentation.; //; // Class PGO",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PGOInstrumentation.cpp:1227,reduce,reduce,1227,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PGOInstrumentation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PGOInstrumentation.cpp,1,['reduce'],['reduce']
Energy Efficiency,"rmats out_format,; * unsigned int compression_out, int quality);; * INPUTS; * asv - pointer to valid ASVisual structure; * src - ASImage to adjust colors of.; * offset_x,; * offset_y - position on infinite surface tiled with original image,; * of the left-top corner of the area to be used for new; * image.; * to_width,; * to_height - size of the area of the original image to be used; * for new image.; * affected_hue - hue in degrees in range 0-360. This allows to limit; * impact of color adjustment to affect only limited; * range of hues.; * affected_radius Sets the diapason of the range of affected hues.; * hue_offset - value by which to change hues in affected range.; * saturation_offset -; * value by which to change saturation of the pixels in; * affected hue range.; * value_offset - value by which to change Value(brightness) of pixels; * in affected hue range.; * out_format 	- optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out- compression level of resulting image in range 0-100.; * quality - output quality; * RETURN VALUE; * returns newly created and encoded ASImage on success, NULL of failure.; * DESCRIPTION; * This function will tile original image to specified size with offsets; * requested, and then it will go though it and adjust hue, saturation and; * value of those pixels that have specific hue, set by affected_hue/; * affected_radius parameters. When affected_radius is greater then 180; * entire image will be adjusted. Note that since grayscale colors have; * no hue - the will not get adjusted. Only saturation and value will be; * adjusted in gray pixels.; * Hue is measured as an angle on a 360 degree circle, The following is; * relationship of hue values to regular color names :; * red - 0; * yellow - 60; * green - 120; * cyan - 180; * blue - 240; * magenta - 300; * red - 360; *; * All the hue values in parameters will be adjusted to fall withing; * 0-360 range.; *********/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h:13813,green,green,13813,graf2d/asimage/src/libAfterImage/transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h,1,['green'],['green']
Energy Efficiency,"rod_{i=1}^{N} p_{li}\left(x_i\right); = \sum_{l=1}^{L} c_l F_l(\mathbf{x}); \f]; such that. \f[; S \equiv \sum_{j=1}^{M} \left(D_j - D_p\left(\mathbf{x}_j\right)\right)^2; \f]; is minimal. Here \f$p_{li}(x_i)\f$ are monomials, or Chebyshev or Legendre; polynomials, labelled \f$l = 1, \ldots, L\f$, in each variable \f$ x_i\f$,\f$ i=1, \ldots, N\f$. So what TMultiDimFit does, is to determine the number of terms \f$ L\f$, and then \f$ L\f$ terms; (or functions) \f$ F_l\f$, and the \f$ L\f$ coefficients \f$ c_l\f$, so that \f$ S\f$ is minimal; (TMultiDimFit::FindParameterization). Of course it's more than a little unlikely that \f$ S\f$ will ever become; exact zero as a result of the procedure outlined below. Therefore, the; user is asked to provide a minimum relative error \f$ \epsilon\f$ (TMultiDimFit::SetMinRelativeError),; and \f$ S\f$ will be considered minimized when. \f[; R = \frac{S}{\sum_{j=1}^M D_j^2} < \epsilon; \f]; Optionally, the user may impose a functional expression by specifying; the powers of each variable in \f$ L\f$ specified functions \f$ F_1, \ldots,F_L\f$ (TMultiDimFit::SetPowers).; In that case, only the coefficients \f$ c_l\f$ is calculated by the class. ## Limiting the Number of Terms; As always when dealing with fits, there's a real chance of *over fitting*. As is well-known, it's; always possible to fit an \f$ N-1\f$ polynomial in \f$ x\f$ to \f$ N\f$ points \f$ (x,y)\f$ with; \f$\chi^2 = 0\f$, but the polynomial is not likely to fit new data at all [1].; Therefore, the user is asked to provide an upper limit, \f$ L_{max}\f$ to the number of terms in; \f$ D_p\f$ (TMultiDimFit::SetMaxTerms). However, since there's an infinite number of \f$ F_l\f$ to choose from, the; user is asked to give the maximum power. \f$ P_{max,i}\f$, of each variable; \f$ x_i\f$ to be considered in the minimization of \f$ S\f$ (TMultiDimFit::SetMaxPowers). One way of obtaining values for the maximum power in variable \f$ i\f$, is; to perform a regular fit to the depen",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:3650,power,powers,3650,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['power'],['powers']
Energy Efficiency,"rt list(""list"");; TRFunctionImport asformula(""as.formula"");; TRFunctionImport nls(""nls"");; TRFunctionImport confint(""confint"");; TRFunctionImport summary(""summary"");; TRFunctionImport print(""print"");; TRFunctionImport plot(""plot"");; TRFunctionImport lines(""lines"");; TRFunctionImport devnew(""dev.new"");; TRFunctionImport devoff(""dev.off"");; TRFunctionImport min(""min"");; TRFunctionImport max(""max"");; TRFunctionImport seq(""seq"");; TRFunctionImport predict(""predict"");. r<<""options(device='png')"";//enable plot in png file. ////////////////////////; //doing the procedure //; ////////////////////////; TRObject xdata = c(-2,-1.64,-1.33,-0.7,0,0.45,1.2,1.64,2.32,2.9);; TRObject ydata = c(0.699369,0.700462,0.695354,1.03905,1.97389,2.41143,1.91091,0.919576,-0.730975,-1.42001);. TRDataFrame data;; data[""xdata""]=xdata;; data[""ydata""]=ydata;. //fit = nls(ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata), start=list(p1=1,p2=0.2)) <- R code; TRObject fit = nls(asformula(""ydata ~ p1*cos(p2*xdata) + p2*sin(p1*xdata)""),Label[""data""]=data, Label[""start""]=list(Label[""p1""]=1,Label[""p2""]=0.2));; print(summary(fit));. print(confint(fit));. devnew(""Fitting Regression"");; plot(xdata,ydata);. TRObject xgrid=seq(min(xdata),max(xdata),Label[""len""]=10);; lines(xgrid,predict(fit,xgrid),Label[""col""] = ""green"");; devoff();; }; \endcode. Output; \code; Formula: ydata ~ p1 * cos(p2 * xdata) + p2 * sin(p1 * xdata). Parameters:; Estimate Std. Error t value Pr(>|t|); p1 1.881851 0.027430 68.61 2.27e-12 ***; p2 0.700230 0.009153 76.51 9.50e-13 ***; ---; Signif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1. Residual standard error: 0.08202 on 8 degrees of freedom. Number of iterations to convergence: 7; Achieved convergence tolerance: 2.189e-06. Waiting for profiling to be done...; 2.5% 97.5%; p1 1.8206081 1.9442365; p2 0.6794193 0.7209843; \endcode; <h2>Users Guide </h2>; <a href=""https://oproject.org/pages/ROOT%20R%20Users%20Guide""> https://oproject.org/pages/ROOT R Users Guide</a><br>. @ingroup R; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport.h:1927,green,green,1927,bindings/r/inc/TRFunctionImport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRFunctionImport.h,1,['green'],['green']
Energy Efficiency,"rted in between the two halves by; /// inserting a RopePiece in between the two others. All of this is very; /// inexpensive: it takes time proportional to the number of RopePieces, not the; /// length of the strings they represent.; ///; /// While a linear sequences of RopePieces is the conceptual model, the actual; /// implementation captures them in an adapted B+ Tree. Using a B+ tree (which; /// is a tree that keeps the values in the leaves and has where each node; /// contains a reasonable number of pointers to children/values) allows us to; /// maintain efficient operation when the RewriteRope contains a *huge* number; /// of RopePieces. The basic idea of the B+ Tree is that it allows us to find; /// the RopePiece corresponding to some offset very efficiently, and it; /// automatically balances itself on insertions of RopePieces (which can happen; /// for both insertions and erases of string ranges).; ///; /// The one wrinkle on the theory is that we don't attempt to keep the tree; /// properly balanced when erases happen. Erases of string data can both insert; /// new RopePieces (e.g. when the middle of some other rope piece is deleted,; /// which results in two rope pieces, which is just like an insert) or it can; /// reduce the number of RopePieces maintained by the B+Tree. In the case when; /// the number of RopePieces is reduced, we don't attempt to maintain the; /// standard 'invariant' that each node in the tree contains at least; /// 'WidthFactor' children/values. For our use cases, this doesn't seem to; /// matter.; ///; /// The implementation below is primarily implemented in terms of three classes:; /// RopePieceBTreeNode - Common base class for:; ///; /// RopePieceBTreeLeaf - Directly manages up to '2*WidthFactor' RopePiece; /// nodes. This directly represents a chunk of the string with those; /// RopePieces concatenated.; /// RopePieceBTreeInterior - An interior node in the B+ Tree, which manages; /// up to '2*WidthFactor' other nodes in the tree.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp:1894,reduce,reduce,1894,interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Rewrite/RewriteRope.cpp,2,['reduce'],"['reduce', 'reduced']"
Energy Efficiency,"s a `begin` parameter of 10, that means the range will skip the first 10 entries *that pass the; preceding filter*. Ranges allow ""early quitting"": if all branches of execution of a functional graph reached their `end` value of; processed entries, the event-loop is immediately interrupted. This is useful for debugging and quick data explorations. \anchor custom-columns; ### Custom columns; Custom columns are created by invoking `Define(name, f, columnList)`. As usual, `f` can be any callable object; (function, lambda expression, functor class...); it takes the values of the columns listed in `columnList` (a list of; strings) as parameters, in the same order as they are listed in `columnList`. `f` must return the value that will be; assigned to the temporary column. A new variable is created called `name`, accessible as if it was contained in the dataset from subsequent; transformations/actions. Use cases include:; - caching the results of complex calculations for easy and efficient multiple access; - extraction of quantities of interest from complex objects; - branch aliasing, i.e. changing the name of a branch. An exception is thrown if the `name` of the new column/branch is already in use for another branch in the TTree. It is also possible to specify the quantity to be stored in the new temporary column as a C++ expression with the method; `Define(name, expression)`. For example this invocation. ~~~{.cpp}; df.Define(""pt"", ""sqrt(px*px + py*py)"");; ~~~. will create a new column called ""pt"" the value of which is calculated starting from the columns px and py. The system; builds a just-in-time compiled function starting from the expression after having deduced the list of necessary branches; from the names of the variables specified by the user. #### Custom columns as function of slot and entry number. It is possible to create custom columns also as a function of the processing slot and entry numbers. The methods that can; be invoked are:; - `DefineSlot(name, f, column",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:32681,efficient,efficient,32681,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['efficient'],['efficient']
Energy Efficiency,"s class doesn't know about the existence of different memory; /// types for memory operations (example: write-through, write-combining, etc.).; /// Derived classes are responsible for implementing that extra knowledge, and; /// provide different sets of rules for loads and stores by overriding method; /// `isReady()`.; /// To emulate a write-combining memory type, rule 2. must be relaxed in a; /// derived class to enable the reordering of non-aliasing store operations.; ///; /// No assumptions are made by this class on the size of the store buffer. This; /// class doesn't know how to identify cases where store-to-load forwarding may; /// occur.; ///; /// LSUnit doesn't attempt to predict whether a load or store hits or misses; /// the L1 cache. To be more specific, LSUnit doesn't know anything about; /// cache hierarchy and memory types.; /// It only knows if an instruction ""mayLoad"" and/or ""mayStore"". For loads, the; /// scheduling model provides an ""optimistic"" load-to-use latency (which usually; /// matches the load-to-use latency for when there is a hit in the L1D).; /// Derived classes may expand this knowledge.; ///; /// Class MCInstrDesc in LLVM doesn't know about serializing operations, nor; /// memory-barrier like instructions.; /// LSUnit conservatively assumes that an instruction which `mayLoad` and has; /// `unmodeled side effects` behave like a ""soft"" load-barrier. That means, it; /// serializes loads without forcing a flush of the load queue.; /// Similarly, instructions that both `mayStore` and have `unmodeled side; /// effects` are treated like store barriers. A full memory; /// barrier is a 'mayLoad' and 'mayStore' instruction with unmodeled side; /// effects. This is obviously inaccurate, but this is the best that we can do; /// at the moment.; ///; /// Each load/store barrier consumes one entry in the load/store queue. A; /// load/store barrier enforces ordering of loads/stores:; /// - A younger load cannot pass a load barrier.; /// - A younger sto",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/LSUnit.h:1942,schedul,scheduling,1942,interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/LSUnit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MCA/HardwareUnits/LSUnit.h,1,['schedul'],['scheduling']
Energy Efficiency,"s mark channels that has to be; * 			decoded.; * offset_x - left margin inside im, from which we should start; * 			reading pixel data, effectively clipping source image.; * offset_y - top margin inside im, from which we should start; * 			reading scanlines, effectively clipping source image.; * 			Note that when edge of the image is reached,; * 			subsequent requests for scanlines will wrap around to; * 			the top of the image, and not offset_y.; * out_width- width of the scanline needed. If it is larger then; * 			source image - then image data will be tiled in it.; * 			If it is smaller - then image data will be clipped.; * out_height - height of the output drawable. -1 means that same as; * image height. if out_height is greater then image height,; * then image will be tiled.; * bevel - NULL or pointer to valid ASImageBevel structure if; * 			decoded data should be overlayed with bevel at the; * 			time of decoding.; * RETURN VALUE; * start_image_decoding() returns pointer to newly allocated; * ASImageDecoder structure on success, NULL on failure.; * DESCRIPTION; * Normal process of reading image data from ASImage consists of; * 3 steps :; * 1) start decoding by calling start_image_decoding.; * 2) call decode_image_scanline() method of returned structure, for; * each scanline upto desired height of the target image. Decoded data; * will be returned in buffer member of the ASImageDecoder structure.; * 3) finish decoding and deallocated all the used memory by calling; * stop_image_decoding(); *********/; /****f* libAfterImage/asimage/set_decoder_bevel_geom(); * NAME; * set_decoder_bevel_geom() - changes default placement of the bevel on ; * decoded image. ; * SYNOPSIS; * void set_decoder_bevel_geom( ASImageDecoder *imdec, int x, int y,; * unsigned int width, unsigned int height );; * INPUTS; * imdec - pointer to pointer to structure, previously created; * by start_image_decoding.; * x,y - left top position of the inner border of the Bevel outline; * as related to ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h:1550,allocate,allocated,1550,graf2d/asimage/src/libAfterImage/imencdec.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h,1,['allocate'],['allocated']
Energy Efficiency,"s); // can be obtained with GetNumFields() and GetFieldName() methods.; // To receive data for the next result row, NextResultRow() method should be called.; // Value from each column can be retrieved with the GetInt(), GetDouble(),; // GetString() and other methods.; //; // There are no strict limitations on which method should be used; // to get column values. GetString() can be used as a generic method,; // which should always return correct result, but also conversions between most; // basic data types are supported. For instance, if a column contains integer; // values, GetInt(), GetLong64(), GetDouble() and GetString() methods can be used.; // If column has floating point format, GetDouble() and GetString() methods can; // be used without loss of precision while GetInt() or GetLong64() will return; // only the integer part of the value. One also can test whether; // a value is NULL with the IsNull() method.; //; // The buffer length specified for a statement in the TSQLServer::Statement() call; // will also be used to allocate buffers for column values. Usage of these; // buffers is transparent for users and does not limit the number of rows; // which can be accessed with one statement. Again, local databases do not work; // with buffers inside TSQLStatement at all and ignore this value.; // Example of select query:; //; // stmt = serv->Statement(""SELECT * FROM TESTTABLE"", 100);; // // process statement; // if (stmt->Process()) {; // // store result of statement in buffer; // stmt->StoreResult();; //; // // display info about selected field; // std::cout << ""NumFields = "" << stmt->GetNumFields() << std::endl;; // for (int n=0;n<stmt->GetNumFields();n++); // std::cout << ""Field "" << n << "" = "" << stmt->GetFieldName(n) << std::endl;; //; // // extract rows one after another; // while (stmt->NextResultRow()) {; // Double_t id1 = stmt->GetDouble(0);; // UInt_t id2 = stmt->GetUInt(1);; // const char* name1 = stmt->GetString(2);; // const char* name2 = stmt->GetStrin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx:7586,allocate,allocate,7586,net/net/src/TSQLStatement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLStatement.cxx,1,['allocate'],['allocate']
Energy Efficiency,"sArray a(""TTrack"", 10000);; while (TEvent *ev = (TEvent *)next()) { // O(100000) events; for (int i = 0; i < ev->Ntracks; i++) { // O(10000) tracks; TTrack *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do n",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:2684,allocate,allocate,2684,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,1,['allocate'],['allocate']
Energy Efficiency,"same as PxPyPzEVector but float). More details can be found in the documentation of the @ref GenVector package.; \endparblock. ### Description; TLorentzVector is a general four-vector class, which can be used; either for the description of position and time (x,y,z,t) or momentum and; energy (px,py,pz,E). ### Declaration; TLorentzVector has been implemented as a set a TVector3 and a Double_t variable.; By default all components are initialized by zero. ~~~ {.cpp}; TLorentzVector v1; // initialized by (0., 0., 0., 0.); TLorentzVector v2(1., 1., 1., 1.);; TLorentzVector v3(v1);; TLorentzVector v4(TVector3(1., 2., 3.),4.);; ~~~. For backward compatibility there are two constructors from an Double_t; and Float_t C array. ### Access to the components; There are two sets of access functions to the components of a LorentzVector:; X(), Y(), Z(), T() and Px(),; Py(), Pz() and E(). Both sets return the same values; but the first set is more relevant for use where TLorentzVector; describes a combination of position and time and the second set is more; relevant where TLorentzVector describes momentum and energy:. ~~~ {.cpp}; Double_t xx =v.X();; ...; Double_t tt = v.T();. Double_t px = v.Px();; ...; Double_t ee = v.E();; ~~~. The components of TLorentzVector can also accessed by index:. ~~~ {.cpp}; xx = v(0); or xx = v[0];; yy = v(1); yy = v[1];; zz = v(2); zz = v[2];; tt = v(3); tt = v[3];; ~~~. You can use the Vect() member function to get the vector component; of TLorentzVector:. ~~~ {.cpp}; TVector3 p = v.Vect();; ~~~. For setting components also two sets of member functions can be used:. ~~~ {.cpp}; v.SetX(1.); or v.SetPx(1.);; ... ...; v.SetT(1.); v.SetE(1.);; ~~~. To set more the one component by one call you can use the SetVect(); function for the TVector3 part or SetXYZT(), SetPxPyPzE(). For convenience there is. also a SetXYZM():. ~~~ {.cpp}; v.SetVect(TVector3(1,2,3));; v.SetXYZT(x,y,z,t);; v.SetPxPyPzE(px,py,pz,e);; v.SetXYZM(x,y,z,m); // -> v=(x,y,z,e=Sqrt(x*x+y*y+z",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TLorentzVector.cxx:2298,energy,energy,2298,math/physics/src/TLorentzVector.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TLorentzVector.cxx,1,['energy'],['energy']
Energy Efficiency,"samplers really only need one sample row of context. An upsampler; * supporting arbitrary output rescaling might wish for more than one row; * group of context when shrinking the image; tough, we don't handle that.; * (This is justified by the assumption that downsizing will be handled mostly; * by adjusting the DCT_scaled_size values, so that the actual scale factor at; * the upsample step needn't be much less than one.); *; * To provide the desired context, we have to retain the last two row groups; * of one iMCU row while reading in the next iMCU row. (The last row group; * can't be processed until we have another row group for its below-context,; * and so we have to save the next-to-last group too for its above-context.); * We could do this most simply by copying data around in our buffer, but; * that'd be very slow. We can avoid copying any data by creating a rather; * strange pointer structure. Here's how it works. We allocate a workspace; * consisting of M+2 row groups (where M = min_DCT_scaled_size is the number; * of row groups per iMCU row). We create two sets of redundant pointers to; * the workspace. Labeling the physical row groups 0 to M+1, the synthesized; * pointer lists look like this:; * M+1 M-1; * master pointer --> 0 master pointer --> 0; * 1 1; * ... ...; * M-3 M-3; * M-2 M; * M-1 M+1; * M M-2; * M+1 M-1; * 0 0; * We read alternate iMCU rows using each master pointer; thus the last two; * row groups of the previous iMCU row remain un-overwritten in the workspace.; * The pointer lists are set up so that the required context rows appear to; * be adjacent to the proper places when we pass the pointer lists to the; * upsampler.; *; * The above pictures describe the normal state of the pointer lists.; * At top and bottom of the image, we diddle the pointer lists to duplicate; * the first or last sample row as necessary (this is cheaper than copying; * sample rows around).; *; * This scheme breaks down if M < 2, ie, min_DCT_scaled_size is 1. In that; *",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c:3512,allocate,allocate,3512,graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,1,['allocate'],['allocate']
Energy Efficiency,"se, and; /// - the reduction is performed efficiently in a hierarchical; /// manner as follows: within OpenMP threads in the same warp,; /// across warps in a threadblock, and finally across teams on; /// the NVPTX device.; ///; /// Introduction to Decoupling; ///; /// We would like to decouple the compiler and the runtime so that the; /// latter is ignorant of the reduction variables (number, data types); /// and the reduction operators. This allows a simpler interface; /// and implementation while still attaining good performance.; ///; /// Pseudocode for the aforementioned OpenMP program generated by the; /// compiler is as follows:; ///; /// 1. Create private copies of reduction variables on each OpenMP; /// thread: 'foo_private', 'bar_private'; /// 2. Each OpenMP thread reduces the chunk of 'A' and 'B' assigned; /// to it and writes the result in 'foo_private' and 'bar_private'; /// respectively.; /// 3. Call the OpenMP runtime on the GPU to reduce within a team; /// and store the result on the team master:; ///; /// __kmpc_nvptx_parallel_reduce_nowait_v2(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn); ///; /// where:; /// struct ReduceData {; /// double *foo;; /// double *bar;; /// } reduceData; /// reduceData.foo = &foo_private; /// reduceData.bar = &bar_private; ///; /// 'shuffleReduceFn' and 'interWarpCpyFn' are pointers to two; /// auxiliary functions generated by the compiler that operate on; /// variables of type 'ReduceData'. They aid the runtime perform; /// algorithmic steps in a data agnostic manner.; ///; /// 'shuffleReduceFn' is a pointer to a function that reduces data; /// of type 'ReduceData' across two OpenMP threads (lanes) in the; /// same warp. It takes the following arguments as input:; ///; /// a. variable of type 'ReduceData' on the calling lane,; /// b. its lane_id,; /// c. an offset relative to the current lane_id to generate a; /// remote_lane_id. The remote lane contains the second; /// variable of type 'ReduceData' that is to",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:1724,reduce,reduce,1724,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['reduce'],['reduce']
Energy Efficiency,"selected, it can be rotated by pressing and; holding the left mouse button and move the cursor.; - Zoom/Unzoom:; Mouse wheel or 'j', 'J', 'k', 'K' keys. \anchor HP29i; #### Panning. The selected plot can be moved in a pad's area by pressing and; holding the left mouse button and the shift key. \anchor HP29j; #### Box cut. Surface, iso, box, TF3 and parametric painters support box cut by; pressing the 'c' or 'C' key when the mouse cursor is in a plot's; area. That will display a transparent box, cutting away part of the; surface (or boxes) in order to show internal part of plot. This box; can be moved inside the plot's area (the full size of the box is; equal to the plot's surrounding box) by selecting one of the box; cut axes and pressing the left mouse button to move it. \anchor HP29k; #### Plot specific interactions (dynamic slicing etc.). Currently, all gl-plots support some form of slicing. When back plane; is selected (and if it's highlighted in green) you can press and hold; left mouse button and shift key and move this back plane inside; plot's area, creating the slice. During this ""slicing"" plot becomes; semi-transparent. To remove all slices (and projected curves for; surfaces) double click with left mouse button in a plot's area. \anchor HP29l; #### Surface with option ""GLSURF"". The surface profile is displayed on the slicing plane.; The profile projection is drawn on the back plane; by pressing `'p'` or `'P'` key. \anchor HP29m; #### TF3. The contour plot is drawn on the slicing plane. For TF3 the color; scheme can be changed by pressing 's' or 'S'. \anchor HP29n; #### Box. The contour plot corresponding to slice plane position is drawn in real time. \anchor HP29o; #### Iso. Slicing is similar to ""GLBOX"" option. \anchor HP29p; #### Parametric plot. No slicing. Additional keys: 's' or 'S' to change color scheme -; about 20 color schemes supported ('s' for ""scheme""); 'l' or 'L' to; increase number of polygons ('l' for ""level"" of details), 'w' or 'W'; to sho",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:103809,green,green,103809,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['green'],['green']
Energy Efficiency,"small; * strings is inspired from that of Rabin & Karp. A brute force approach; * is used to find longer strings when a small match has been found.; * A similar algorithm is used in comic (by Jan-Mark Wams) and freeze; * (by Leonid Broukhis).; * A previous version of this file used a more sophisticated algorithm; * (by Fiala and Greene) which is guaranteed to run in linear amortized; * time, but has a larger average cost, uses more memory and is patented.; * However the F&G algorithm may be faster for some highly redundant; * files if the parameter max_chain_length (described below) is too large.; *; * ACKNOWLEDGEMENTS; *; * The idea of lazy evaluation of matches is due to Jan-Mark Wams, and; * I found it in 'freeze' written by Leonid Broukhis.; * Thanks to many info-zippers for bug reports and testing.; *; * REFERENCES; *; * APPNOTE.TXT documentation file in PKZIP 1.93a distribution.; *; * A description of the Rabin and Karp algorithm is given in the book; * ""Algorithms"" by R. Sedgewick, Addison-Wesley, p252.; *; * Fiala,E.R., and Greene,D.H.; * Data Compression with Finite Windows, Comm.ACM, 32,4 (1989) 490-595; *; * INTERFACE; *; * void lm_init (int pack_level, ush *flags); * Initialize the ""longest match"" routines for a new file; *; * ulg deflate (void); * Processes a new input file and return its compressed length. Sets; * the compressed length, crc, deflate flags and internal file; * attributes.; */; /* #include ""zip.h"" */; /* #include ""ZIP.h"" */; /* ===========================================================================; * Configuration parameters; */; /* Compile with MEDIUM_MEM to reduce the memory requirements or; * with SMALL_MEM to use as little memory as possible. Use BIG_MEM if the; * entire input file can be held in memory (not possible on 16 bit systems).; * Warning: defining these symbols affects HASH_BITS (see below) and thus; * affects the compression ratio. The compressed output; * is still correct, and might even be smaller in some cases.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c:2018,Green,Greene,2018,core/zip/src/ZDeflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c,2,"['Green', 'reduce']","['Greene', 'reduce']"
Energy Efficiency,"so valid for 2-dim); /// - ""N"" include comparison of normalizations; /// - ""D"" Put out a line of ""Debug"" printout; /// - ""M"" Return the Maximum Kolmogorov distance instead of prob; /// - ""X"" Run the pseudo experiments post-processor with the following procedure:; /// make pseudoexperiments based on random values from the parent distribution,; /// compare the KS distance of the pseudoexperiment to the parent; /// distribution, and count all the KS values above the value; /// obtained from the original data to Monte Carlo distribution.; /// The number of pseudo-experiments nEXPT is by default 1000, and; /// it can be changed by specifying the option as ""X=number"",; /// for example ""X=10000"" for 10000 toys.; /// The function returns the probability.; /// (thanks to Ben Kilminster to submit this procedure). Note that; /// this option ""X"" is much slower.; ///; /// The returned function value is the probability of test; /// (much less than one means NOT compatible); ///; /// Code adapted by Rene Brun from original HBOOK routine HDIFF; ///; /// NOTE1; /// A good description of the Kolmogorov test can be seen at:; /// http://www.itl.nist.gov/div898/handbook/eda/section3/eda35g.htm; ///; /// NOTE2; /// see also alternative function TH1::Chi2Test; /// The Kolmogorov test is assumed to give better results than Chi2Test; /// in case of histograms with low statistics.; ///; /// NOTE3 (Jan Conrad, Fred James); /// ""The returned value PROB is calculated such that it will be; /// uniformly distributed between zero and one for compatible histograms,; /// provided the data are not binned (or the number of bins is very large; /// compared with the number of events). Users who have access to unbinned; /// data and wish exact confidence levels should therefore not put their data; /// into histograms, but should call directly TMath::KolmogorovTest. On; /// the other hand, since TH1 is a convenient way of collecting data and; /// saving space, this function has been provided. However, the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:1660,adapt,adapted,1660,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['adapt'],['adapted']
Energy Efficiency,"ssure, the best load latencies are hidden; //; // Moreover some specifities (like the fact a lot of instructions in the shader; // have few dependencies) makes the generic scheduler have some unpredictable; // behaviours. For example when register pressure becomes high, it can either; // manage to prevent register pressure from going too high, or it can; // increase register pressure even more than if it hadn't taken register; // pressure into account.; //; // Also some other bad behaviours are generated, like loading at the beginning; // of the shader a constant in VGPR you won't need until the end of the shader.; //; // The scheduling problem for SI can distinguish three main parts:; // . Hiding high latencies (texture sampling, etc); // . Hiding low latencies (SGPR constant loading, etc); // . Keeping register usage low for better latency hiding and general; // performance; //; // Some other things can also affect performance, but are hard to predict; // (cache usage, the fact the HW can issue several instructions from different; // wavefronts if different types, etc); //; // This scheduler tries to solve the scheduling problem by dividing it into; // simpler sub-problems. It divides the instructions into blocks, schedules; // locally inside the blocks where it takes care of low latencies, and then; // chooses the order of the blocks by taking care of high latencies.; // Dividing the instructions into blocks helps control keeping register; // usage low.; //; // First the instructions are put into blocks.; // We want the blocks help control register usage and hide high latencies; // later. To help control register usage, we typically want all local; // computations, when for example you create a result that can be consumed; // right away, to be contained in a block. Block inputs and outputs would; // typically be important results that are needed in several locations of; // the shader. Since we do want blocks to help hide high latencies, we want; // the instruction",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp:1692,schedul,scheduler,1692,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,2,['schedul'],"['scheduler', 'scheduling']"
Energy Efficiency,"stage); /// R: Instruction retired; /// =: Instruction waiting in the Scheduler's queue; /// -: Instruction executed, waiting to retire in order.; ///; /// dots ('.') and empty spaces are cycles where the instruction is not; /// in-flight.; ///; /// The last column is the assembly instruction associated to the entry.; ///; /// Based on the timeline view information from the example, instruction 0; /// at iteration 0 was dispatched at cycle 0, and was retired at cycle 3.; /// Instruction [0,1] was also dispatched at cycle 0, and it retired at; /// the same cycle than instruction [0,0].; /// Instruction [0,4] has been dispatched at cycle 2. However, it had to; /// wait for two cycles before being issued. That is because operands; /// became ready only at cycle 5.; ///; /// This view helps further understanding bottlenecks and the impact of; /// resource pressure on the code.; ///; /// To better understand why instructions had to wait for multiple cycles in; /// the scheduler's queue, class TimelineView also reports extra timing info; /// in another table named ""Average Wait times"" (see example below).; ///; ///; /// Average Wait times (based on the timeline view):; /// [0]: Executions; /// [1]: Average time spent waiting in a scheduler's queue; /// [2]: Average time spent waiting in a scheduler's queue while ready; /// [3]: Average time elapsed from WB until retire stage; ///; ///	[0]	[1]	[2]	[3]; /// 0.	 2	1.0	1.0	3.0	vmovshdup %xmm0, %xmm1; /// 1.	 2	1.0	1.0	3.0	vpermilpd $1, %xmm0, %xmm2; /// 2.	 2	1.0	1.0	2.5	vpermilps $231, %xmm0, %xmm5; /// 3.	 2	1.5	0.5	1.0	vaddss %xmm1, %xmm0, %xmm3; /// 4.	 2	3.5	0.0	0.0	vaddss %xmm3, %xmm2, %xmm4; /// 5.	 2	6.5	0.0	0.0	vaddss %xmm4, %xmm5, %xmm6; /// 2	2.4	0.6	1.6 <total>; ///; /// By comparing column [2] with column [1], we get an idea about how many; /// cycles were spent in the scheduler's queue due to data dependencies.; ///; /// In this example, instruction 5 spent an average of ~6 cycles in the; /// scheduler's queue. A",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.h:3188,schedul,scheduler,3188,interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.h,1,['schedul'],['scheduler']
Energy Efficiency,"structedAt(i);; track->Set(x,y,z,....);; ...; ...; }; ...; a.Clear(); // or a.Clear(""C"");; }; ~~~; Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. ### NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more me",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx:2890,reduce,reduce,2890,core/cont/src/TClonesArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TClonesArray.cxx,1,['reduce'],['reduce']
Energy Efficiency,"t chunk to be distributed, which may have; // fewer iterations. When no chunk_size is specified, it defaults to 1.; //; // When schedule(guided,chunk_size) is specified, the iterations are assigned; // to threads in the team in chunks as the executing threads request them.; // Each thread executes a chunk of iterations, then requests another chunk,; // until no chunks remain to be assigned. For a chunk_size of 1, the size of; // each chunk is proportional to the number of unassigned iterations divided; // by the number of threads in the team, decreasing to 1. For a chunk_size; // with value k (greater than 1), the size of each chunk is determined in the; // same way, with the restriction that the chunks do not contain fewer than k; // iterations (except for the last chunk to be assigned, which may have fewer; // than k iterations).; //; // When schedule(auto) is specified, the decision regarding scheduling is; // delegated to the compiler and/or runtime system. The programmer gives the; // implementation the freedom to choose any possible mapping of iterations to; // threads in the team.; //; // When schedule(runtime) is specified, the decision regarding scheduling is; // deferred until run time, and the schedule and chunk size are taken from the; // run-sched-var ICV. If the ICV is set to auto, the schedule is; // implementation defined; //; // while(__kmpc_dispatch_next(&LB, &UB)) {; // idx = LB;; // while (idx <= UB) { BODY; ++idx;; // __kmpc_dispatch_fini_(4|8)[u](); // For ordered loops only.; // } // inner loop; // }; //; // OpenMP [2.7.1, Loop Construct, Description, table 2-1]; // When schedule(static, chunk_size) is specified, iterations are divided into; // chunks of size chunk_size, and the chunks are assigned to the threads in; // the team in a round-robin fashion in the order of the thread number.; //; // while(UB = min(UB, GlobalUB), idx = LB, idx < UB) {; // while (idx <= UB) { BODY; ++idx; } // inner loop; // LB = LB + ST;; // UB = UB + ST;; // }; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:1538,schedul,schedule,1538,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,5,['schedul'],"['schedule', 'scheduling']"
Energy Efficiency,"t limitation; * the rights to use, copy, modify, merge, publish, distribute, sublicense,; * and/or sell copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included; * in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS; * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL; * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; */; /*; ** Copyright (c) 2007 The Khronos Group Inc.; ** ; ** Permission is hereby granted, free of charge, to any person obtaining a; ** copy of this software and/or associated documentation files (the; ** ""Materials""), to deal in the Materials without restriction, including; ** without limitation the rights to use, copy, modify, merge, publish,; ** distribute, sublicense, and/or sell copies of the Materials, and to; ** permit persons to whom the Materials are furnished to do so, subject to; ** the following conditions:; ** ; ** The above copyright notice and this permission notice shall be included; ** in all copies or substantial portions of the Materials.; ** ; ** THE MATERIALS ARE PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.; ** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY; ** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,; ** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE; ** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/eglew.h:3058,charge,charge,3058,builtins/glew/inc/GL/eglew.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/eglew.h,3,['charge'],['charge']
Energy Efficiency,"t size, or maximum back-reference distance (`windowSize`).; Note that these values could be wrong, either because of data corruption, or because a 3rd party deliberately spoofs false information.; As a consequence, check that values remain within valid application range.; For example, do not allocate memory blindly, check that `windowSize` is within expectation.; Each application can set its own limits, depending on local restrictions.; For extended interoperability, it is recommended to support `windowSize` of at least 8 MB. ZSTD_decompressContinue() needs previous data blocks during decompression, up to `windowSize` bytes.; ZSTD_decompressContinue() is very sensitive to contiguity,; if 2 blocks don't follow each other, make sure that either the compressor breaks contiguity at the same place,; or that previous contiguous segment is large enough to properly handle maximum back-reference distance.; There are multiple ways to guarantee this condition. The most memory efficient way is to use a round buffer of sufficient size.; Sufficient size is determined by invoking ZSTD_decodingBufferSize_min(),; which can @return an error code if required value is too large for current system (in 32-bits mode).; In a round buffer methodology, ZSTD_decompressContinue() decompresses each block next to previous one,; up to the moment there is not enough room left in the buffer to guarantee decoding another full block,; which maximum size is provided in `ZSTD_frameHeader` structure, field `blockSizeMax`.; At which point, decoding can resume from the beginning of the buffer.; Note that already decoded data stored in the buffer should be flushed before being overwritten. There are alternatives possible, for example using two or more buffers of size `windowSize` each, though they consume more memory. Finally, if you control the compression process, you can also ignore all buffer size rules,; as long as the encoder and decoder progress in ""lock-step"",; aka use exactly the same buffer sizes,",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:1914,efficient,efficient,1914,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['efficient'],['efficient']
Energy Efficiency,"taining values for the maximum power in variable \f$ i\f$, is; to perform a regular fit to the dependent quantity \f$ D\f$, using a; polynomial only in \f$ x_i\f$. The maximum power is \f$ P_{max,i}\f$ is then the; power that does not significantly improve the one-dimensional; least-square fit over \f$ x_i\f$ to \f$ D\f$ [5]. There are still a huge amount of possible choices for \f$ F_l\f$; in fact; there are \f$\prod_{i=1}^{N} (P_{max,i} + 1)\f$ possible; choices. Obviously we need to limit this. To this end, the user is; asked to set a *power control limit*, \f$ Q\f$ (TMultiDimFit::SetPowerLimit), and a function; \f$ F_l\f$ is only accepted if; \f[; Q_l = \sum_{i=1}^{N} \frac{P_{li}}{P_{max,i}} < Q; \f]; where \f$ P_{li}\f$ is the leading power of variable \f$ x_i\f$ in function \f$ F_l\f$ (TMultiDimFit::MakeCandidates).; So the number of functions increase with \f$ Q\f$ (1, 2 is fine, 5 is way out). ## Gram-Schmidt Orthogonalisation; To further reduce the number of functions in the final expression,; only those functions that significantly reduce \f$ S\f$ is chosen. What; `significant' means, is chosen by the user, and will be; discussed below (see [2.3](TMultiFimFit.html#sec:selectiondetail)). The functions \f$ F_l\f$ are generally not orthogonal, which means one will; have to evaluate all possible \f$ F_l\f$'s over all data-points before; finding the most significant [1]. We can, however, do; better then that. By applying the *modified Gram-Schmidt; orthogonalisation* algorithm [5] [3] to the; functions \f$ F_l\f$, we can evaluate the contribution to the reduction of; \f$ S\f$ from each function in turn, and we may delay the actual inversion; of the curvature-matrix (TMultiDimFit::MakeGramSchmidt). So we are let to consider an \f$ M\times L\f$ matrix \f$\mathsf{F}\f$, an; element of which is given by; \f[; f_{jl} = F_j\left(x_{1j} , x_{2j}, \ldots, x_{Nj}\right); = F_l(\mathbf{x}_j)\, \quad\mbox{with}~j=1,2,\ldots,M,; \f]; where \f$ j\f$ labels the \f$ M\f$ row",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:5499,reduce,reduce,5499,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,2,['reduce'],['reduce']
Energy Efficiency,"tanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; * \class RooBinSamplingPdf; * The RooBinSamplingPdf is supposed to be used as an adapter between a continuous PDF; * and a binned distribution.; * When RooFit is used to fit binned data, and the PDF is continuous, it takes the probability density; * at the bin centre as a proxy for the probability averaged (integrated) over the entire bin. This is; * correct only if the second derivative of the function vanishes, though. This is shown in the plots; * below.; *; * For PDFs that have larger curvatures, the RooBinSamplingPdf can be used. It integrates the PDF in each; * bin using an adaptive integrator. This usually requires 21 times more function evaluations, but significantly; * reduces biases due to better sampling of the PDF. The integrator can be accessed from the outside; * using integrator(). This can be used to change the integration rules, so less/more function evaluations are; * performed. The target precision of the integrator can be set in the constructor.; *; *; * ### How to use it; * There are two ways to use this class:; * - Manually wrap a PDF:; * ```; * RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; * binSampler.fitTo(data);; * ```; * When a PDF is wrapped with a RooBinSamplingPDF, just use the bin sampling PDF instead of the original one for fits; * or plotting etc.; * \note The binning will be taken from the observable. Make sure that this binning is the same as the one of the dataset that should be fit.; * Use RooRealVar::setBinning() to adapt it.; * - Instruct test statistics to carry out this wrapping automatically:; * ```; * pdf.fitTo(data, Integra",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:1405,reduce,reduces,1405,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['reduce'],['reduces']
Energy Efficiency,"te; /// reduce elements.; /// Remote Reduce list:; /// Remote Reduce list refers to a collection of remote (relative to; /// the current thread) reduce elements.; ///; /// We distinguish between three states of threads that are important to; /// the implementation of this function.; /// Alive threads:; /// Threads in a warp executing the SIMT instruction, as distinguished from; /// threads that are inactive due to divergent control flow.; /// Active threads:; /// The minimal set of threads that has to be alive upon entry to this; /// function. The computation is correct iff active threads are alive.; /// Some threads are alive but they are not active because they do not; /// contribute to the computation in any useful manner. Turning them off; /// may introduce control flow overheads without any tangible benefits.; /// Effective threads:; /// In order to comply with the argument requirements of the shuffle; /// function, we must keep all lanes holding data alive. But at most; /// half of them perform value aggregation; we refer to this half of; /// threads as effective. The other half is simply handing off their; /// data.; ///; /// Procedure; /// Value shuffle:; /// In this step active threads transfer data from higher lane positions; /// in the warp to lower lane positions, creating Remote Reduce list.; /// Value aggregation:; /// In this step, effective threads combine their thread local Reduce list; /// with Remote Reduce list and store the result in the thread local; /// Reduce list.; /// Value copy:; /// In this step, we deal with the assumption made by algorithm 2; /// (i.e. contiguity assumption). When we have an odd number of lanes; /// active, say 2k+1, only k threads will be effective and therefore k; /// new values will be produced. However, the Reduce list owned by the; /// (2k+1)th thread is ignored in the value aggregation. Therefore; /// we copy the Reduce list from the (2k+1)th lane to (k+1)th lane so; /// that the contiguity assumption still holds.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:2732,Reduce,Reduce,2732,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,6,['Reduce'],['Reduce']
Energy Efficiency,"ted option is:. - `""GLCOL"" :` TH3 is drawn using semi-transparent colored boxes.; See `$ROOTSYS/tutorials/gl/glvox1.C`. #### `TF3` (implicit function) - (`TGLTF3Painter`); The supported option is:. - `""GLTF3"" :` Draw a `TF3`. #### Parametric surfaces - (`TGLParametricPlot`); `$ROOTSYS/tutorials/gl/glparametric.C` shows how to create parametric equations and; visualize the surface. ### Interaction with the plots. #### General information. All the interactions are implemented via standard methods `DistancetoPrimitive` and; `ExecuteEvent`. That's why all the interactions with the OpenGL plots are possible i; only when the mouse cursor is in the plot's area (the plot's area is the part of a the pad; occupied by gl-produced picture). If the mouse cursor is not above gl-picture,; the standard pad interaction is performed. #### Selectable parts. Different parts of the plot can be selected:. - *xoz, yoz, xoy back planes*:; When such a plane selected, it's highlighted in green if the dynamic slicing; by this plane is supported, and it's highlighted in red, if the dynamic slicing; is not supported.; -*The plot itself*:; On surfaces, the selected surface is outlined in red. (TF3 and ISO are not; outlined). On lego plots, the selected bin is highlihted. The bin number and content are displayed in pad's status; bar. In box plots, the box or sphere is highlighted and the bin info is displayed in pad's status bar. #### Rotation and zooming. - *Rotation*:. When the plot is selected, it can be rotated by pressing and holding the left mouse button and move the cursor.; - *Zoom/Unzoom*:. Mouse wheel or `'j'`, `'J'`, `'k'`, `'K'` keys. #### Panning. The selected plot can be moved in a pad's area by; pressing and holding the left mouse button and the shift key. ### Box cut; Surface, iso, box, TF3 and parametric painters support box cut by pressing the `'c'` or; `'C'` key when the mouse cursor is in a plot's area. That will display a transparent box,; cutting away part of the surface (or ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLHistPainter.cxx:3019,green,green,3019,graf3d/gl/src/TGLHistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLHistPainter.cxx,1,['green'],['green']
Energy Efficiency,"ted, with its real value (necessarily <= original value); FSE_count() will return the number of occurrence of the most frequent symbol.; This can be used to know if there is a single symbol within 'src', and to quickly evaluate its compressibility.; If there is an error, the function will return an ErrorCode (which can be tested using FSE_isError()). The next step is to normalize the frequencies.; FSE_normalizeCount() will ensure that sum of frequencies is == 2 ^'tableLog'.; It also guarantees a minimum of 1 to any Symbol with frequency >= 1.; You can use 'tableLog'==0 to mean ""use default tableLog value"".; If you are unsure of which tableLog value to use, you can ask FSE_optimalTableLog(),; which will provide the optimal valid tableLog given sourceSize, maxSymbolValue, and a user-defined maximum (0 means ""default""). The result of FSE_normalizeCount() will be saved into a table,; called 'normalizedCounter', which is a table of signed short.; 'normalizedCounter' must be already allocated, and have at least 'maxSymbolValue+1' cells.; The return value is tableLog if everything proceeded as expected.; It is 0 if there is a single symbol within distribution.; If there is an error (ex: invalid tableLog value), the function will return an ErrorCode (which can be tested using FSE_isError()). 'normalizedCounter' can be saved in a compact manner to a memory area using FSE_writeNCount().; 'buffer' must be already allocated.; For guaranteed success, buffer size must be at least FSE_headerBound().; The result of the function is the number of bytes written into 'buffer'.; If there is an error, the function will return an ErrorCode (which can be tested using FSE_isError(); ex : buffer size too small). 'normalizedCounter' can then be used to create the compression table 'CTable'.; The space required by 'CTable' must be already allocated, using FSE_createCTable().; You can then use FSE_buildCTable() to fill 'CTable'.; If there is an error, both functions will return an ErrorCode (wh",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:1369,allocate,allocated,1369,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['allocate'],['allocated']
Energy Efficiency,"ter considering all the; examples, with the total derivative dEdw. The parameters for this; method are Eta, EtaDecay, Delta and Epsilon. #### Steepest descent algorithm:. Weights are set to the minimum along the line defined by the gradient. The; only parameter for this method is Tau. Lower tau = higher precision =; slower search. A value Tau = 3 seems reasonable. #### Conjugate gradients with the Polak-Ribiere updating formula:. Weights are set to the minimum along the line defined by the conjugate gradient.; Parameters are Tau and Reset, which defines the epochs where the direction is; reset to the steepest descent. #### Conjugate gradients with the Fletcher-Reeves updating formula:. Weights are set to the minimum along the line defined by the conjugate gradient. Parameters; are Tau and Reset, which defines the epochs where the direction is; reset to the steepest descent. #### Broyden, Fletcher, Goldfarb, Shanno (BFGS) method:. Implies the computation of a NxN matrix; computation, but seems more powerful at least for less than 300; weights. Parameters are Tau and Reset, which defines the epochs where; the direction is reset to the steepest descent. ### How to use it... TMLP is build from 3 classes: TNeuron, TSynapse and; TMultiLayerPerceptron. Only TMultiLayerPerceptron should be used; explicitly by the user. TMultiLayerPerceptron will take examples from a TTree; given in the constructor. The network is described by a simple; string: The input/output layers are defined by giving the expression for; each neuron, separated by comas. Hidden layers are just described; by the number of neurons. The layers are separated by colons.; In addition, input/output layer formulas can be preceded by '@' (e.g ""@out""); if one wants to also normalize the data from the TTree.; Input and outputs are taken from the TTree given as second argument.; Expressions are evaluated as for TTree::Draw(), arrays are expended in; distinct neurons, one for each index.; This can only be done for fix",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx:6138,power,powerful,6138,math/mlp/src/TMultiLayerPerceptron.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMultiLayerPerceptron.cxx,1,['power'],['powerful']
Energy Efficiency,"the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~{.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~{.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; /// ~~~{.cpp}; /// if (cutfilename()) htemp->Fill(macrofilename());; /// ~~~; /// This 2 functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example; /// ~~~{.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~{.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Access to TClonesArray.; ///; /// If a branch (or member) is a TClonesArray (let's say fTracks), you; /// can access the TClonesArray itself by using ->:; /// ~~~{.cpp}; /// fTracks->GetLast();; /// ~~~; /// However this will load the full TClonesArray object and its content.; /// To quickly read the size of the TClonesArray use (note the dot):; /// ~~~{.cpp}; /// fTracks.GetEntries();; /// ~~~; /// This will read only the size from disk if the TClonesArray has been; /// split.; /// To access the content of the TClonesArray, use the [] operator:; /// ~~~; /// float px = fTracks[i].fPx; // fPx of the i-th track; /// ~~~; /// Warning:; ///; /// The variable actually use for access are 'wrapper' around the; /// real data type (to add autoload for example) and hence getting to; /// the data involves the implicit call to a C++ conversion operator.; /// This conversion is automatic in most case. However ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:3109,efficient,efficient,3109,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['efficient'],['efficient']
Energy Efficiency,"the event weights, or can be another column designated; /// by the YVar() argument. The y value must have errors defined for the \f$ \chi^2 \f$ to; /// be well defined.; ///; /// <table>; /// <tr><th><th> Options to control construction of the chi-square; /// <tr><td> `YVar(RooRealVar& yvar)` <td> Designate given column in dataset as Y value; /// <tr><td> `Integrate(bool flag)` <td> Integrate function over range specified by X errors; /// rather than take value at bin center.; ///; /// <tr><th><th> Options to control flow of fit procedure; /// <tr><td> `InitialHesse(bool flag)` <td> Flag controls if HESSE before MIGRAD as well, off by default; /// <tr><td> `Hesse(bool flag)` <td> Flag controls if HESSE is run after MIGRAD, on by default; /// <tr><td> `Minos(bool flag)` <td> Flag controls if MINOS is run after HESSE, on by default; /// <tr><td> `Minos(const RooArgSet& set)` <td> Only run MINOS on given subset of arguments; /// <tr><td> `Save(bool flag)` <td> Flag controls if RooFitResult object is produced and returned, off by default; /// <tr><td> `Strategy(Int_t flag)` <td> Set Minuit strategy (0 through 2, default is 1); ///; /// <tr><th><th> Options to control informational output; /// <tr><td> `Verbose(bool flag)` <td> Flag controls if verbose output is printed (NLL, parameter changes during fit; /// <tr><td> `Timer(bool flag)` <td> Time CPU and wall clock consumption of fit steps, off by default; /// <tr><td> `PrintLevel(Int_t level)` <td> Set Minuit print level (-1 through 3, default is 1). At -1 all RooFit informational; /// messages are suppressed as well; /// <tr><td> `Warnings(bool flag)` <td> Enable or disable MINUIT warnings (enabled by default); /// <tr><td> `PrintEvalErrors(Int_t numErr)` <td> Control number of p.d.f evaluation errors printed per likelihood evaluation. A negative; /// value suppress output completely, a zero value will only print the error count per p.d.f component,; /// a positive value is will print details of each error up to numErr ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:1599,consumption,consumption,1599,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['consumption'],['consumption']
Energy Efficiency,"the file remains opened (it is not closed). If the Postscript file name; finishes with "")"" and the file has been opened with ""("", the file is closed. Example:; ~~~ {.cpp}; {; TCanvas c1(""c1"");; h1.Draw();; c1.Print(""c1.ps(""); // write canvas and keep the ps file open; h2.Draw();; c1.Print(""c1.ps""); // canvas is added to ""c1.ps""; h3.Draw();; c1.Print(""c1.ps)""); // canvas is added to ""c1.ps"" and ps file is closed; }; ~~~; The `TCanvas::Print(""file.ps("")` mechanism is very useful, but it can; be a little inconvenient to have the action of opening/closing a file being; atomic with printing a page. Particularly if pages are being generated in some; loop one needs to detect the special cases of first and last page and then; munge the argument to Print() accordingly.; The ""["" and ""]"" can be used instead of ""("" and "")"" as shown below. Example:; ~~~ {.cpp}; c1.Print(""file.ps[""); // No actual print, just open file.ps. for (int i=0; i<10; ++i) {; // fill canvas for context i; // ... c1.Print(""file.ps""); // Actually print canvas to the file; }. c1.Print(""file.ps]""); // No actual print, just close the file; ~~~. ## Color Model. TPostScript support two color model RGB and CMYK. CMY and CMYK models are; subtractive color models unlike RGB which is an additive. They are mainly; used for printing purposes. CMY means Cyan Magenta Yellow to convert RGB; to CMY it is enough to do: C=1-R, M=1-G and Y=1-B. CMYK has one more; component K (black). The conversion from RGB to CMYK is:. ~~~ {.cpp}; Double_t Black = TMath::Min(TMath::Min(1-Red,1-Green),1-Blue);; Double_t Cyan = (1-Red-Black)/(1-Black);; Double_t Magenta = (1-Green-Black)/(1-Black);; Double_t Yellow = (1-Blue-Black)/(1-Black);; ~~~; CMYK add the black component which allows to have a better quality for black; printing. PostScript support the CMYK model. To change the color model use `gStyle->SetColorModelPS(c)`. - c = 0 means TPostScript will use RGB color model (default); - c = 1 means TPostScript will use CMYK color model; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TPostScript.cxx:7022,Green,Green,7022,graf2d/postscript/src/TPostScript.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/postscript/src/TPostScript.cxx,2,['Green'],"['Green', 'Green-Black']"
Energy Efficiency,"the overdetermined system of; /// linear equations, i.e., the calculation of the field -x.; ///; /// - from numerical stability point of view the operation of deconvolution is; /// extremely critical (ill-posed problem) as well as time consuming operation.; ///; /// - the Gold deconvolution algorithm proves to work very well even for; /// 2-dimensional systems. Generalization of the algorithm for 2-dimensional; /// systems was presented in [1], and for multidimensional systems in [2].; ///; /// - for Gold deconvolution algorithm as well as for boosted deconvolution; /// algorithm we refer also to TSpectrum and TSpectrum2; ///; /// #### References:; ///; /// [1] M.Morhac, J. Kliman, V. Matouoek, M. Veselsky, I. Turzo.: Efficient; /// one- and two-dimensional Gold deconvolution and its application to gamma-ray; /// spectra decomposition. NIM, A401 (1997) 385-408.; ///; /// [2] Morhac M., Matouoek V.,; /// Kliman J., Efficient algorithm of multidimensional deconvolution and its; /// application to nuclear data processing, Digital Signal Processing 13 (2003) 144.; ///; /// ### Example 1 - script Decon.c :; ///; /// response function (usually peak) should be shifted to the beginning of; /// the coordinate system (see Fig. 1); ///; /// \image html spectrum3_deconvolution_image003.jpg Fig. 1 Three-dimensional response spectrum; /// \image html spectrum3_deconvolution_image004.jpg Fig. 2 Three-dimensional input spectrum (before deconvolution); /// \image html spectrum3_deconvolution_image005.jpg Fig. 3 Spectrum from Fig. 2 after deconvolution (100 iterations); ///; /// #### Script:; ///; /// Example to illustrate the Gold deconvolution (class TSpectrum3).; /// To execute this example, do:; ///; /// `root > .x Decon3.C`; ///; /// ~~~ {.cpp}; /// #include <TSpectrum3>; /// void Decon3() {; /// Int_t i, j, k;; /// Int_t nbinsx = 32;; /// Int_t nbinsy = 32;; /// Int_t nbinsz = 32;; /// Int_t xmin = 0;; /// Int_t xmax = nbinsx;; /// Int_t ymin = 0;; /// Int_t ymax = nbinsy;; /// ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx:2236,Efficient,Efficient,2236,hist/spectrum/src/TSpectrum3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum3.cxx,1,['Efficient'],['Efficient']
Energy Efficiency,"the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumConvPdf.cxx; \class RooNumConvPdf; \ingroup Roofitcore. Numeric 1-dimensional convolution operator PDF. This class can convolve any PDF; with any other PDF using a straightforward numeric calculation of the; convolution integral; This class should be used as last resort as numeric convolution calculated; this way is computationally intensive and prone to stability fitting problems.; <b>The preferred way to compute numeric convolutions is RooFFTConvPdf</b>,; which calculates convolutions using Fourier Transforms (requires external free; FFTW3 package); RooNumConvPdf implements reasonable defaults that should convolve most; functions reasonably well, but results strongly depend on the shape of your; input PDFS so always check your result.; The default integration engine for the numeric convolution is the; adaptive Gauss-Kronrod method, which empirically seems the most robust; for this task. You can override the convolution integration settings via; the RooNumIntConfig object reference returned by the convIntConfig() member; function; By default the numeric convolution is integrated from -infinity to; +infinity through a <pre>x -> 1/x</pre> coordinate transformation of the; tails. For convolution with a very small bandwidth it may be; advantageous (for both CPU consumption and stability) if the; integration domain is limited to a finite range. The function; setConvolutionWindow(mean,width,scale) allows to set a sliding; window around the x value to be calculated taking a RooAbsReal; expression for an offset and a width to be taken around the x; value. These input expression can be RooFormulaVars or other; function objects although the 3d 'scale' argument 'scale'; multiplies the width RooAbsReal expression given in the 2nd; argument, allowing for an appropriate window definition for most; cases wi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:1527,adapt,adaptive,1527,roofit/roofitcore/src/RooNumConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx,1,['adapt'],['adaptive']
Energy Efficiency,"threadblock.; /// Our goal is to efficiently aggregate values across all OpenMP; /// threads such that:; ///; /// - the compiler and runtime are logically concise, and; /// - the reduction is performed efficiently in a hierarchical; /// manner as follows: within OpenMP threads in the same warp,; /// across warps in a threadblock, and finally across teams on; /// the NVPTX device.; ///; /// Introduction to Decoupling; ///; /// We would like to decouple the compiler and the runtime so that the; /// latter is ignorant of the reduction variables (number, data types); /// and the reduction operators. This allows a simpler interface; /// and implementation while still attaining good performance.; ///; /// Pseudocode for the aforementioned OpenMP program generated by the; /// compiler is as follows:; ///; /// 1. Create private copies of reduction variables on each OpenMP; /// thread: 'foo_private', 'bar_private'; /// 2. Each OpenMP thread reduces the chunk of 'A' and 'B' assigned; /// to it and writes the result in 'foo_private' and 'bar_private'; /// respectively.; /// 3. Call the OpenMP runtime on the GPU to reduce within a team; /// and store the result on the team master:; ///; /// __kmpc_nvptx_parallel_reduce_nowait_v2(...,; /// reduceData, shuffleReduceFn, interWarpCpyFn); ///; /// where:; /// struct ReduceData {; /// double *foo;; /// double *bar;; /// } reduceData; /// reduceData.foo = &foo_private; /// reduceData.bar = &bar_private; ///; /// 'shuffleReduceFn' and 'interWarpCpyFn' are pointers to two; /// auxiliary functions generated by the compiler that operate on; /// variables of type 'ReduceData'. They aid the runtime perform; /// algorithmic steps in a data agnostic manner.; ///; /// 'shuffleReduceFn' is a pointer to a function that reduces data; /// of type 'ReduceData' across two OpenMP threads (lanes) in the; /// same warp. It takes the following arguments as input:; ///; /// a. variable of type 'ReduceData' on the calling lane,; /// b. its lane_id,; /// c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:1549,reduce,reduces,1549,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['reduce'],['reduces']
Energy Efficiency,"three dimensions,; and if a large fraction of all bins are filled.; Better alternatives are; - THnSparse if a fraction of all bins are filled; - TTree. The major problem of THn is the memory use caused by n-dimensional; histogramming: a THnD with 8 dimensions and 100 bins per dimension needs; more than 2.5GB of RAM!. To construct a THn object you must use one of its templated, derived; classes:. THnD (typedef for THnT<Double_t>): bin content held by a Double_t,; THnF (typedef for THnT<Float_t>): bin content held by a Float_t,; THnL (typedef for THnT<Long64_t>): bin content held by a Long64_t,; THnI (typedef for THnT<Int_t>): bin content held by an Int_t,; THnS (typedef for THnT<Short_t>): bin content held by a Short_t,; THnC (typedef for THnT<Char_t>): bin content held by a Char_t,. They take name and title, the number of dimensions, and for each dimension; the number of bins, the minimal, and the maximal value on the dimension's; axis. A TH2F h(""h"",""h"",10, 0., 10., 20, -5., 5.) would correspond to. Int_t bins[2] = {10, 20};; Double_t xmin[2] = {0., -5.};; Double_t xmax[2] = {10., 5.};; THnF hn(""hn"", ""hn"", 2, bins, xmin, xmax);. ## Filling; A THn is filled just like a regular histogram, using; THn::Fill(x, weight), where x is a n-dimensional Double_t value.; To take errors into account, Sumw2() must be called before filling the; histogram.; Storage is allocated when the first bin content is stored. ## Projections; The dimensionality of a THn can be reduced by projecting it to; 1, 2, 3, or n dimensions, which can be represented by a TH1, TH2, TH3, or; a THn. See the Projection() members. To only project parts of the; histogram, call. hn->GetAxis(12)->SetRange(from_bin, to_bin);. ## Conversion from other histogram classes; The static factory function THn::CreateHn() can be used to create a THn; from a TH1, TH2, TH3, THnSparse and (for copying) even from a THn. The; created THn will have compatble storage type, i.e. calling CreateHn() on; a TH2F will create a THnF.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THn.cxx:1516,allocate,allocated,1516,hist/hist/src/THn.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/THn.cxx,2,"['allocate', 'reduce']","['allocated', 'reduced']"
Energy Efficiency,"tice in zlib.h; */; /*; * ALGORITHM; *; * The ""deflation"" process depends on being able to identify portions; * of the input text which are identical to earlier input (within a; * sliding window trailing behind the input currently being processed).; *; * The most straightforward technique turns out to be the fastest for; * most input files: try all possible matches and select the longest.; * The key feature of this algorithm is that insertions into the string; * dictionary are very simple and thus fast, and deletions are avoided; * completely. Insertions are performed at each input character, whereas; * string matches are performed only when the previous match ends. So it; * is preferable to spend more time in matches to allow very fast string; * insertions and avoid deletions. The matching algorithm for small; * strings is inspired from that of Rabin & Karp. A brute force approach; * is used to find longer strings when a small match has been found.; * A similar algorithm is used in comic (by Jan-Mark Wams) and freeze; * (by Leonid Broukhis).; * A previous version of this file used a more sophisticated algorithm; * (by Fiala and Greene) which is guaranteed to run in linear amortized; * time, but has a larger average cost, uses more memory and is patented.; * However the F&G algorithm may be faster for some highly redundant; * files if the parameter max_chain_length (described below) is too large.; *; * ACKNOWLEDGEMENTS; *; * The idea of lazy evaluation of matches is due to Jan-Mark Wams, and; * I found it in 'freeze' written by Leonid Broukhis.; * Thanks to many people for bug reports and testing.; *; * REFERENCES; *; * Deutsch, L.P.,""DEFLATE Compressed Data Format Specification"".; * Available in http://tools.ietf.org/html/rfc1951; *; * A description of the Rabin and Karp algorithm is given in the book; * ""Algorithms"" by R. Sedgewick, Addison-Wesley, p252.; *; * Fiala,E.R., and Greene,D.H.; * Data Compression with Finite Windows, Comm.ACM, 32,4 (1989) 490-595; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.c:1325,Green,Greene,1325,builtins/zlib/deflate_cf.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.c,2,['Green'],['Greene']
Energy Efficiency,"tile; /// register. If the R bit is set to 0, then only integer registers are; /// saved (r4-rN, where N is 4 + Reg). If the R bit is set to 1, then; /// only floating-point registers are being saved (d8-dN, where N is; /// 8 + Reg). The special case of the R bit being set to 1 and Reg equal; /// to 7 indicates that no registers are saved.; /// R : 1-bit flag indicating whether the non-volatile registers are integer or; /// floating-point. 0 indicates integer, 1 indicates floating-point. The; /// special case of the R-flag being set and Reg being set to 7 indicates; /// that no non-volatile registers are saved.; /// L : 1-bit flag indicating whether the function saves/restores the link; /// register (LR); /// C : 1-bit flag indicating whether the function includes extra instructions; /// to setup a frame chain for fast walking. If this flag is set, r11 is; /// implicitly added to the list of saved non-volatile integer registers.; /// Stack Adjust : 10-bit field indicating the number of bytes of stack that are; /// allocated for this function. Only values between 0x000 and; /// 0x3f3 can be directly encoded. If the value is 0x3f4 or; /// greater, then the low 4 bits have special meaning as follows:; /// - Bit 0-1; /// indicate the number of words' of adjustment (1-4), minus 1; /// - Bit 2; /// indicates if the prologue combined adjustment into push; /// - Bit 3; /// indicates if the epilogue combined adjustment into pop; ///; /// RESTRICTIONS:; /// - IF C is SET:; /// + L flag must be set since frame chaining requires r11 and lr; /// + r11 must NOT be included in the set of registers described by Reg; /// - IF Ret is 0:; /// + L flag must be set; // NOTE: RuntimeFunction is meant to be a simple class that provides raw access; // to all fields in the structure. The accessor methods reflect the names of; // the bitfields that they correspond to. Although some obvious simplifications; // are possible via merging of methods, it would prevent the use of this class; // to ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ARMWinEH.h:2747,allocate,allocated,2747,interpreter/llvm-project/llvm/include/llvm/Support/ARMWinEH.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ARMWinEH.h,1,['allocate'],['allocated']
Energy Efficiency,"tion; //; //===----------------------------------------------------------------------===//; //; // This file provides an interface for customizing the standard MachineScheduler; // pass. Note that the entire pass may be replaced as follows:; //; // <Target>TargetMachine::createPassConfig(PassManagerBase &PM) {; // PM.substitutePass(&MachineSchedulerID, &CustomSchedulerPassID);; // ...}; //; // The MachineScheduler pass is only responsible for choosing the regions to be; // scheduled. Targets can override the DAG builder and scheduler without; // replacing the pass as follows:; //; // ScheduleDAGInstrs *<Target>PassConfig::; // createMachineScheduler(MachineSchedContext *C) {; // return new CustomMachineScheduler(C);; // }; //; // The default scheduler, ScheduleDAGMILive, builds the DAG and drives list; // scheduling while updating the instruction stream, register pressure, and live; // intervals. Most targets don't need to override the DAG builder and list; // scheduler, but subtargets that require custom scheduling heuristics may; // plugin an alternate MachineSchedStrategy. The strategy is responsible for; // selecting the highest priority node from the list:; //; // ScheduleDAGInstrs *<Target>PassConfig::; // createMachineScheduler(MachineSchedContext *C) {; // return new ScheduleDAGMILive(C, CustomStrategy(C));; // }; //; // The DAG builder can also be customized in a sense by adding DAG mutations; // that will run after DAG building and before list scheduling. DAG mutations; // can adjust dependencies based on target-specific knowledge or add weak edges; // to aid heuristics:; //; // ScheduleDAGInstrs *<Target>PassConfig::; // createMachineScheduler(MachineSchedContext *C) {; // ScheduleDAGMI *DAG = createGenericSchedLive(C);; // DAG->addMutation(new CustomDAGMutation(...));; // return DAG;; // }; //; // A target that supports alternative schedulers can use the; // MachineSchedRegistry to allow command line selection. This can be done by; // implementing the fol",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:1259,schedul,scheduler,1259,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,2,['schedul'],"['scheduler', 'scheduling']"
Energy Efficiency,"tlined below. Therefore, the; user is asked to provide a minimum relative error \f$ \epsilon\f$ (TMultiDimFit::SetMinRelativeError),; and \f$ S\f$ will be considered minimized when. \f[; R = \frac{S}{\sum_{j=1}^M D_j^2} < \epsilon; \f]; Optionally, the user may impose a functional expression by specifying; the powers of each variable in \f$ L\f$ specified functions \f$ F_1, \ldots,F_L\f$ (TMultiDimFit::SetPowers).; In that case, only the coefficients \f$ c_l\f$ is calculated by the class. ## Limiting the Number of Terms; As always when dealing with fits, there's a real chance of *over fitting*. As is well-known, it's; always possible to fit an \f$ N-1\f$ polynomial in \f$ x\f$ to \f$ N\f$ points \f$ (x,y)\f$ with; \f$\chi^2 = 0\f$, but the polynomial is not likely to fit new data at all [1].; Therefore, the user is asked to provide an upper limit, \f$ L_{max}\f$ to the number of terms in; \f$ D_p\f$ (TMultiDimFit::SetMaxTerms). However, since there's an infinite number of \f$ F_l\f$ to choose from, the; user is asked to give the maximum power. \f$ P_{max,i}\f$, of each variable; \f$ x_i\f$ to be considered in the minimization of \f$ S\f$ (TMultiDimFit::SetMaxPowers). One way of obtaining values for the maximum power in variable \f$ i\f$, is; to perform a regular fit to the dependent quantity \f$ D\f$, using a; polynomial only in \f$ x_i\f$. The maximum power is \f$ P_{max,i}\f$ is then the; power that does not significantly improve the one-dimensional; least-square fit over \f$ x_i\f$ to \f$ D\f$ [5]. There are still a huge amount of possible choices for \f$ F_l\f$; in fact; there are \f$\prod_{i=1}^{N} (P_{max,i} + 1)\f$ possible; choices. Obviously we need to limit this. To this end, the user is; asked to set a *power control limit*, \f$ Q\f$ (TMultiDimFit::SetPowerLimit), and a function; \f$ F_l\f$ is only accepted if; \f[; Q_l = \sum_{i=1}^{N} \frac{P_{li}}{P_{max,i}} < Q; \f]; where \f$ P_{li}\f$ is the leading power of variable \f$ x_i\f$ in function \f$ F_l\f",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:4391,power,power,4391,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['power'],['power']
Energy Efficiency,"too many steps on the average 32-bit machine.; *; * For example, these two lines seem similar, and run equally fast on 64-bit:; *; * xxh_u64 x;; * x ^= (x >> 47); // good; * x ^= (x >> 13); // bad; *; * However, to a 32-bit machine, there is a major difference.; *; * x ^= (x >> 47) looks like this:; *; * x.lo ^= (x.hi >> (47 - 32));; *; * while x ^= (x >> 13) looks like this:; *; * // note: funnel shifts are not usually cheap.; * x.lo ^= (x.lo >> 13) | (x.hi << (32 - 13));; * x.hi ^= (x.hi >> 13);; *; * The first one is significantly faster than the second, simply because the; * shift is larger than 32. This means:; * - All the bits we need are in the upper 32 bits, so we can ignore the lower; * 32 bits in the shift.; * - The shift result will always fit in the lower 32 bits, and therefore,; * we can ignore the upper 32 bits in the xor.; *; * Thanks to this optimization, XXH3 only requires these features to be efficient:; *; * - Usable unaligned access; * - A 32-bit or 64-bit ALU; * - If 32-bit, a decent ADC instruction; * - A 32 or 64-bit multiply with a 64-bit result; * - For the 128-bit variant, a decent byteswap helps short inputs.; *; * The first two are already required by XXH32, and almost all 32-bit and 64-bit; * platforms which can run XXH32 can run XXH3 efficiently.; *; * Thumb-1, the classic 16-bit only subset of ARM's instruction set, is one; * notable exception.; *; * First of all, Thumb-1 lacks support for the UMULL instruction which; * performs the important long multiply. This means numerous __aeabi_lmul; * calls.; *; * Second of all, the 8 functional registers are just not enough.; * Setup for __aeabi_lmul, byteshift loads, pointers, and all arithmetic need; * Lo registers, and this shuffling results in thousands more MOVs than A32.; *; * A32 and T32 don't have this limitation. They can access all 14 registers,; * do a 32->64 multiply with UMULL, and the flexible operand allowing free; * shifts is helpful, too.; *; * Therefore, we do a quick sanity c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:1146,efficient,efficient,1146,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['efficient'],['efficient']
Energy Efficiency,"torials/spectrum/Background_decr.C; /// End_Macro; ///; /// ### Example 3 script Background_width.C:; ///; /// The question is how to choose the width of the clipping window, i.e.,; /// numberIterations parameter. The influence of this parameter on the estimated; /// background is illustrated in Example 3.; ///; /// Example of the influence of clipping window width on the estimated background; /// for numberIterations=4 (red line), 6 (orange line) 8 (green line) using decreasing; /// clipping window algorithm.; ///; /// in general one should set this parameter so that the value; /// 2*numberIterations+1 was greater than the widths of preserved objects (peaks).; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_width.C; /// End_Macro; ///; /// ### Example 4 script Background_width2.C:; ///; /// another example for very complex spectrum is given here.; ///; /// Example of the influence of clipping window width on the estimated background; /// for numberIterations=10 (red line), 20 (blue line), 30 (green line) and; /// 40 (magenta line) using decreasing clipping window algorithm.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_width2.C; /// End_Macro; ///; /// ### Example 5 script Background_order.C:; ///; /// Second order difference filter removes linear (quasi-linear) background and; /// preserves symmetrical peaks. However if the shape of the background is more; /// complex one can employ higher-order clipping filters.; ///; /// Example of the influence of clipping filter difference order on the estimated; /// background for fNnumberIterations=40, 2-nd order red line, 4-th order blue line,; /// 6-th order green line and 8-th order magenta line, and using decreasing; /// clipping window algorithm.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_order.C; /// End_Macro; ///; /// ### Example 6 script Background_smooth.C:; ///; /// The estimate of the background can be influenced by noise present ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:4413,green,green,4413,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,1,['green'],['green']
Energy Efficiency,"ts at is; /// zero, then we allocate a branch object and set the passed; /// pointer to point at the allocated object. The caller; /// owns the allocated object and is responsible for deleting; /// it when it is no longer needed.; ///; /// Example:; /// ~~~ {.cpp}; /// Event* event = 0;; /// branch->SetAddress(&event);; /// ... Do some work.; /// delete event;; /// event = 0;; /// ~~~; /// If addr is not zero and the pointer addr points at is; /// also not zero, then the caller has allocated a branch; /// object and is asking us to use it. The caller owns it; /// and must delete it when it is no longer needed.; ///; /// Example:; /// ~~~ {.cpp}; /// Event* event = new Event();; /// branch->SetAddress(&event);; /// ... Do some work.; /// delete event;; /// event = 0;; /// ~~~; /// These rules affect users of TTree::Branch(),; /// TTree::SetBranchAddress(), and TChain::SetBranchAddress(); /// as well because those routines call this one.; ///; /// An example of a tree with branches with objects allocated; /// and owned by us:; /// ~~~ {.cpp}; /// TFile* f1 = new TFile(""myfile_original.root"");; /// TTree* t1 = (TTree*) f->Get(""MyTree"");; /// TFile* f2 = new TFile(""myfile_copy.root"", ""recreate"");; /// TTree* t2 = t1->Clone(0);; /// for (Int_t i = 0; i < 10; ++i) {; /// t1->GetEntry(i);; /// t2->Fill();; /// }; /// t2->Write(); /// delete f2;; /// f2 = 0;; /// delete f1;; /// f1 = 0;; /// ~~~; /// An example of a branch with an object allocated by us,; /// but owned by the caller:; /// ~~~ {.cpp}; /// TFile* f = new TFile(""myfile.root"", ""recreate"");; /// TTree* t = new TTree(""t"", ""A test tree.""); /// Event* event = 0;; /// TBranchElement* br = t->Branch(""event."", &event);; /// for (Int_t i = 0; i < 10; ++i) {; /// ... Fill event with meaningful data in some way.; /// t->Fill();; /// }; /// t->Write();; /// delete event;; /// event = 0;; /// delete f;; /// f = 0;; /// ~~~; /// Notice that the only difference between this example; /// and the following example is that the ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:1778,allocate,allocated,1778,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['allocate'],['allocated']
Energy Efficiency,"type PDFs, each to be customized; * by a separate customizer instance, that share parameters. To ensure that; * the customized clones also share their respective split leaves, i.e.; * ```; * PDF1(x,y, A) and PDF2(z, A) ---> PDF1_run1(x,y, A_run1) and PDF2_run1(x,y, A_run1); * PDF1_run2(x,y, A_run2) and PDF2_run2(x,y, A_run2); * ```; * feed the same split leaf list into both customizers. In that case, the second customizer; * will pick up the split leaves instantiated by the first customizer and the link between; * the two PDFs is retained.; *; * ### Customising with pre-defined leaves; * If leaf nodes are provided in the sets, the customiser will use them. This is a complete; * example that customises the `yield` parameter, and splits (automatically clones) the; * mean of the Gaussian. This is a short version of the tutorial rf514_RooCustomizer.C.; * ```; * RooRealVar E(""Energy"",""Energy"",0,3000);; *; * RooRealVar meanG(""meanG"",""meanG"", peak[1]);; * RooRealVar fwhm(""fwhm"", ""fwhm"", 5/(2*Sqrt(2*Log(2))));; * RooGaussian gauss(""gauss"", ""gauss"", E, meanG, fwhm);; *; * RooPolynomial linear(""linear"",""linear"",E,RooArgList());; *; * RooRealVar yieldSig(""yieldSig"", ""yieldSig"", 1, 0, 1.E4);; * RooRealVar yieldBkg(""yieldBkg"", ""yieldBkg"", 1, 0, 1.E4);; *; * RooAddPdf model(""model"",""model"",; * RooArgList(gauss,linear),; * RooArgList(yieldSig, yieldBkg));; *; * RooCategory sample(""sample"",""sample"");; * sample.defineType(""BBG1m2T"");; * sample.defineType(""BBG2m2T"");; *; *; * RooArgSet customisedLeaves;; * RooArgSet allLeaves;; *; * RooRealVar mass(""M"", ""M"", 1, 0, 12000);; * RooFormulaVar yield1(""yieldSig_BBG1m2T"",""sigy1"",""M/3.360779"",mass);; * RooFormulaVar yield2(""yieldSig_BBG2m2T"",""sigy2"",""M/2"",mass);; * allLeaves.add(yield1);; * allLeaves.add(yield2);; *; *; * RooCustomizer cust(model, sample, customisedLeaves, &allLeaves);; * cust.splitArg(yieldSig, sample);; * cust.splitArg(meanG, sample);; *; * auto pdf1 = cust.build(""BBG1m2T"");; * auto pdf2 = cust.build(""BBG2m2T"");; * ```; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCustomizer.cxx:4798,Energy,Energy,4798,roofit/roofitcore/src/RooCustomizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCustomizer.cxx,2,['Energy'],['Energy']
Energy Efficiency,"uadp:$Id$; // Author: Eddy Offermann May 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; ///; /// \class TGondzioSolver; ///; /// Derived class of TQpSolverBase implementing Gondzio-correction; /// version of Mehrotra's original predictor-corrector algorithm.; ///; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TGondzioSolver.cxx:1586,ENERGY,ENERGY,1586,math/quadp/src/TGondzioSolver.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TGondzioSolver.cxx,1,['ENERGY'],['ENERGY']
Energy Efficiency,"ulated with the squared weights.; * <tr><td> `AsymptoticError()` <td> Use the asymptotically correct approach to estimate errors in the presence of weights.; * This is slower but more accurate than `SumW2Error`. See also https://arxiv.org/abs/1911.01303).; This option even correctly implements the case of extended likelihood fits; (see this [writeup on extended weighted fits](https://root.cern/files/extended_weighted_fits.pdf) that complements the paper linked before).; * <tr><td> `PrefitDataFraction(double fraction)`; * <td> Runs a prefit on a small dataset of size fraction*(actual data size). This can speed up fits; * by finding good starting values for the parameters for the actual fit.; * \warning Prefitting may give bad results when used in binned analysis.; *; * <tr><th><th> Options to control informational output; * <tr><td> `Verbose(bool flag)` <td> Flag controls if verbose output is printed (NLL, parameter changes during fit).; * <tr><td> `Timer(bool flag)` <td> Time CPU and wall clock consumption of fit steps, off by default.; * <tr><td> `PrintLevel(Int_t level)` <td> Set Minuit print level (-1 to 3, default is 1). At -1 all RooFit informational messages are suppressed as well.; * See RooMinimizer::PrintLevel for the meaning of the levels.; * <tr><td> `Warnings(bool flag)` <td> Enable or disable MINUIT warnings (enabled by default); * <tr><td> `PrintEvalErrors(Int_t numErr)` <td> Control number of p.d.f evaluation errors printed per likelihood evaluation.; * A negative value suppresses output completely, a zero value will only print the error count per p.d.f component,; * a positive value will print details of each error up to `numErr` messages per p.d.f component.; * <tr><td> `Parallelize(Int_t nWorkers)` <td> Control global parallelization settings. Arguments 1 and above enable the use of RooFit's parallel minimization; * backend and uses the number given as the number of workers to use in the parallelization. -1 also enables; * RooFit's parallel minimiz",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:6094,consumption,consumption,6094,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['consumption'],['consumption']
Energy Efficiency,"und is to; // allocate the fixed-address variables immediately upon starting the function; // where they can be placed as intended. This requires a means of mapping from; // the function to the variables that it allocates. For the module scope lds,; // this is via metadata indicating whether the variable is not required. If a; // pass deletes that metadata, a fatal error on disagreement with the absolute; // symbol metadata will occur. For kernel scope and dynamic, this is by _name_; // correspondence between the function and the variable. It requires the; // kernel to have a name (which is only a limitation for tests in practice) and; // for nothing to rename the corresponding symbols. This is a hazard if the pass; // is run multiple times during debugging. Alternative schemes considered all; // involve bespoke metadata.; //; // If the name correspondence can be replaced, multiple distinct kernels that; // have the same memory layout can map to the same kernel id (as the address; // itself is handled by the absolute symbol metadata) and that will allow more; // uses of the ""kernel"" style faster lowering and reduce the size of the lookup; // tables.; //; // There is a test that checks this does not fire for a graphics shader. This; // lowering is expected to work for graphics if the isKernel test is changed.; //; // The current markUsedByKernel is sufficient for PromoteAlloca but is elided; // before codegen. Replacing this with an equivalent intrinsic which lasts until; // shortly after the machine function lowering of LDS would help break the name; // mapping. The other part needed is probably to amend PromoteAlloca to embed; // the LDS variables it creates in the same struct created here. That avoids the; // current hazard where a PromoteAlloca LDS variable might be allocated before; // the kernel scope (and thus error on the address check). Given a new invariant; // that no LDS variables exist outside of the structs managed here, and an; // intrinsic that lasts ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:9465,reduce,reduce,9465,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['reduce'],['reduce']
Energy Efficiency,"upported LOHs are:; // * So called non-ADRP-related:; // - .loh AdrpAddLdr L1, L2, L3:; // L1: adrp xA, sym@PAGE; // L2: add xB, xA, sym@PAGEOFF; // L3: ldr xC, [xB, #imm]; // - .loh AdrpLdrGotLdr L1, L2, L3:; // L1: adrp xA, sym@GOTPAGE; // L2: ldr xB, [xA, sym@GOTPAGEOFF]; // L3: ldr xC, [xB, #imm]; // - .loh AdrpLdr L1, L3:; // L1: adrp xA, sym@PAGE; // L3: ldr xC, [xA, sym@PAGEOFF]; // - .loh AdrpAddStr L1, L2, L3:; // L1: adrp xA, sym@PAGE; // L2: add xB, xA, sym@PAGEOFF; // L3: str xC, [xB, #imm]; // - .loh AdrpLdrGotStr L1, L2, L3:; // L1: adrp xA, sym@GOTPAGE; // L2: ldr xB, [xA, sym@GOTPAGEOFF]; // L3: str xC, [xB, #imm]; // - .loh AdrpAdd L1, L2:; // L1: adrp xA, sym@PAGE; // L2: add xB, xA, sym@PAGEOFF; // For all these LOHs, L1, L2, L3 form a simple chain:; // L1 result is used only by L2 and L2 result by L3.; // L3 LOH-related argument is defined only by L2 and L2 LOH-related argument; // by L1.; // All these LOHs aim at using more efficient load/store patterns by folding; // some instructions used to compute the address directly into the load/store.; //; // * So called ADRP-related:; // - .loh AdrpAdrp L2, L1:; // L2: ADRP xA, sym1@PAGE; // L1: ADRP xA, sym2@PAGE; // L2 dominates L1 and xA is not redifined between L2 and L1; // This LOH aims at getting rid of redundant ADRP instructions.; //; // The overall design for emitting the LOHs is:; // 1. AArch64CollectLOH (this pass) records the LOHs in the AArch64FunctionInfo.; // 2. AArch64AsmPrinter reads the LOHs from AArch64FunctionInfo and it:; // 1. Associates them a label.; // 2. Emits them in a MCStreamer (EmitLOHDirective).; // - The MCMachOStreamer records them into the MCAssembler.; // - The MCAsmStreamer prints them.; // - Other MCStreamers ignore them.; // 3. Closes the MCStreamer:; // - The MachObjectWriter gets them from the MCAssembler and writes; // them in the object file.; // - Other ObjectWriters ignore them.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp:3105,efficient,efficient,3105,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp,1,['efficient'],['efficient']
Energy Efficiency,"urce in bottom and top; /// scheduling.; ///; /// Consider an instruction that uses resources X0, X1 and X2 as follows:; ///; /// X0 X1 X1 X2 +--------+-------------+--------------+; /// |Resource|AcquireAtCycle|ReleaseAtCycle|; /// +--------+-------------+--------------+; /// | X0 | 0 | 1 |; /// +--------+-------------+--------------+; /// | X1 | 1 | 3 |; /// +--------+-------------+--------------+; /// | X2 | 3 | 4 |; /// +--------+-------------+--------------+; ///; /// If we can schedule the instruction at cycle C, we need to; /// compute the interval of the resource as follows:; ///; /// # TOP DOWN SCHEDULING; ///; /// Cycles scheduling flows to the _right_, in the same direction; /// of time.; ///; /// C 1 2 3 4 5 ...; /// ------|------|------|------|------|------|----->; /// X0 X1 X1 X2 ---> direction of time; /// X0 [C, C+1); /// X1 [C+1, C+3); /// X2 [C+3, C+4); ///; /// Therefore, the formula to compute the interval for a resource; /// of an instruction that can be scheduled at cycle C in top-down; /// scheduling is:; ///; /// [C+AcquireAtCycle, C+ReleaseAtCycle); ///; ///; /// # BOTTOM UP SCHEDULING; ///; /// Cycles scheduling flows to the _left_, in opposite direction; /// of time.; ///; /// In bottom up scheduling, the scheduling happens in opposite; /// direction to the execution of the cycles of the; /// instruction. When the instruction is scheduled at cycle `C`,; /// the resources are allocated in the past relative to `C`:; ///; /// 2 1 C -1 -2 -3 -4 -5 ...; /// <-----|------|------|------|------|------|------|------|---; /// X0 X1 X1 X2 ---> direction of time; /// X0 (C+1, C]; /// X1 (C, C-2]; /// X2 (C-2, C-3]; ///; /// Therefore, the formula to compute the interval for a resource; /// of an instruction that can be scheduled at cycle C in bottom-up; /// scheduling is:; ///; /// [C-ReleaseAtCycle+1, C-AcquireAtCycle+1); ///; ///; /// NOTE: In both cases, the number of cycles booked by a; /// resources is the value (ReleaseAtCycle - AcquireAtCycle).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:1289,schedul,scheduling,1289,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,6,"['allocate', 'schedul']","['allocated', 'scheduled', 'scheduling']"
Energy Efficiency,"use the color palette:. Begin_Macro(source); {; auto c1 = new TCanvas(""c1"",""c1"",0,0,600,400);; TF2 *f1 = new TF2(""f1"",""0.1+(1-(x-2)*(x-2))*(1-(y-2)*(y-2))"",1,3,1,3);; Int_t palette[5];; palette[0] = 15;; palette[1] = 20;; palette[2] = 23;; palette[3] = 30;; palette[4] = 32;; gStyle->SetPalette(5,palette);; f1->Draw(""colz"");; return c1;; }; End_Macro. To define more a complex palette with a continuous gradient of color, one; should use the static function `TColor::CreateGradientColorTable()`.; The following example demonstrates how to proceed:. Begin_Macro(source); {; auto c2 = new TCanvas(""c2"",""c2"",0,0,600,400);; auto f2 = new TF2(""f2"",""0.1+(1-(x-2)*(x-2))*(1-(y-2)*(y-2))"",1,3,1,3);; const Int_t Number = 3;; Double_t Red[Number] = { 1.00, 0.00, 0.00};; Double_t Green[Number] = { 0.00, 1.00, 0.00};; Double_t Blue[Number] = { 1.00, 0.00, 1.00};; Double_t Length[Number] = { 0.00, 0.50, 1.00 };; Int_t nb=50;; TColor::CreateGradientColorTable(Number,Length,Red,Green,Blue,nb);; f2->SetContour(nb);; f2->SetLineWidth(1);; f2->SetLineColor(kBlack);; f2->Draw(""surf1z"");; return c2;; }; End_Macro. The function `TColor::CreateGradientColorTable()` automatically; calls `gStyle->SetPalette()`, so there is not need to add one. After a call to `TColor::CreateGradientColorTable()` it is sometimes; useful to store the newly create palette for further use. In particular, it is; recommended to do if one wants to switch between several user define palettes.; To store a palette in an array it is enough to do:. ~~~ {.cpp}; Int_t MyPalette[100];; Double_t Red[] = {0., 0.0, 1.0, 1.0, 1.0};; Double_t Green[] = {0., 0.0, 0.0, 1.0, 1.0};; Double_t Blue[] = {0., 1.0, 0.0, 0.0, 1.0};; Double_t Length[] = {0., .25, .50, .75, 1.0};; Int_t FI = TColor::CreateGradientColorTable(5, Length, Red, Green, Blue, 100);; for (int i=0;i<100;i++) MyPalette[i] = FI+i;; ~~~. Later on to reuse the palette `MyPalette` it will be enough to do. ~~~ {.cpp}; gStyle->SetPalette(100, MyPalette);; ~~~. As only one palett",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx:7380,Green,Green,7380,core/base/src/TColor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColor.cxx,1,['Green'],['Green']
Energy Efficiency,"ver delete what they return, they simply forget it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func. The ordering of the elements corresponds to the ordering of; /// the arguments.; ///; /// ### ROOT::TExecutorCRTP<SubC>::Reduce; /// These set of methods combine all elements from a std::vector into a single value.; /// \param redfunc; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes an std::vector and combines all its elements into a single result.\n; /// \endparblock; /// \param [args]; /// \parblock; /// a standard vector\n; /// \endparblock; ///; /// ### ROOT::TExecutorCRTP<SubC>::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects returned by the corresponding Map execution to ""squash"" them; /// into a single object. This function should be independent of the size of; /// the vector returned by Map due to optimization of the number of chunks.; ///; /// #### Examples:; /// ~~~{.cpp}; /// Generate 1 ten times and sum those tens; /// root[] ROOT::TProcessExecutor pool; auto ten = pool.MapReduce([]() { return 1; }, 10, [](const s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx:2049,Reduce,Reduce,2049,core/base/inc/ROOT/TExecutorCRTP.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx,1,['Reduce'],['Reduce']
Energy Efficiency,"w; - sqrt, cbrt; - sin, cos, tan, asin, acos, atan, atan2, hypot; - sinh, cosh, tanh, asinh, acosh; - erf, erfc; - lgamma, tgamma. If the VDT library is available, the following functions can be invoked. Internally the calculations; are vectorized:; - fast_expf, fast_logf, fast_sinf, fast_cosf, fast_tanf, fast_asinf, fast_acosf, fast_atanf; - fast_exp, fast_log, fast_sin, fast_cos, fast_tan, fast_asin, fast_acos, fast_atan. \anchor owningandadoptingmemory; ## Owning and adopting memory; RVec has contiguous memory associated to it. It can own it or simply adopt it. In the latter case,; it can be constructed with the address of the memory associated to it and its length. For example:; ~~~{.cpp}; std::vector<int> myStlVec {1,2,3};; RVec<int> myRVec(myStlVec.data(), myStlVec.size());; ~~~; In this case, the memory associated to myStlVec and myRVec is the same, myRVec simply ""adopted it"".; If any method which implies a re-allocation is called, e.g. *emplace_back* or *resize*, the adopted; memory is released and new one is allocated. The previous content is copied in the new memory and; preserved. \anchor sorting; ## Sorting and manipulation of indices. ### Sorting; RVec complies to the STL interfaces when it comes to iterations. As a result, standard algorithms; can be used, for example sorting:; ~~~{.cpp}; RVec<double> v{6., 4., 5.};; std::sort(v.begin(), v.end());; ~~~. For convenience, helpers are provided too:; ~~~{.cpp}; auto sorted_v = Sort(v);; auto reversed_v = Reverse(v);; ~~~. ### Manipulation of indices. It is also possible to manipulated the RVecs acting on their indices. For example,; the following syntax; ~~~{.cpp}; RVecD v0 {9., 7., 8.};; auto v1 = Take(v0, {1, 2, 0});; ~~~; will yield a new RVec<double> the content of which is the first, second and zeroth element of; v0, i.e. `{7., 8., 9.}`. The `Argsort` and `StableArgsort` helper extracts the indices which order the content of a `RVec`.; For example, this snippet accomplishes in a more expressive way wh",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx:5079,allocate,allocated,5079,math/vecops/inc/ROOT/RVec.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx,1,['allocate'],['allocated']
Energy Efficiency,"web/20000816232553/www.inforamp.net/; * ~poynton/notes/colour_and_gamma/ColorFAQ.txt ); * Charles Poynton poynton at poynton.com; *; * Y = 0.212671 * R + 0.715160 * G + 0.072169 * B; *; * which can be expressed with integers as; *; * Y = (6969 * R + 23434 * G + 2365 * B)/32768; *; * Poynton's current link (as of January 2003 through July 2011):; * <http://www.poynton.com/notes/colour_and_gamma/>; * has changed the numbers slightly:; *; * Y = 0.2126*R + 0.7152*G + 0.0722*B; *; * which can be expressed with integers as; *; * Y = (6966 * R + 23436 * G + 2366 * B)/32768; *; * Historically, however, libpng uses numbers derived from the ITU-R Rec 709; * end point chromaticities and the D65 white point. Depending on the; * precision used for the D65 white point this produces a variety of different; * numbers, however if the four decimal place value used in ITU-R Rec 709 is; * used (0.3127,0.3290) the Y calculation would be:; *; * Y = (6968 * R + 23435 * G + 2366 * B)/32768; *; * While this is correct the rounding results in an overflow for white, because; * the sum of the rounded coefficients is 32769, not 32768. Consequently; * libpng uses, instead, the closest non-overflowing approximation:; *; * Y = (6968 * R + 23434 * G + 2366 * B)/32768; *; * Starting with libpng-1.5.5, if the image being converted has a cHRM chunk; * (including an sRGB chunk) then the chromaticities are used to calculate the; * coefficients. See the chunk handling in pngrutil.c for more information.; *; * In all cases the calculation is to be done in a linear colorspace. If no; * gamma information is available to correct the encoding of the original RGB; * values this results in an implicit assumption that the original PNG RGB; * values were linear.; *; * Other integer coefficients can be used via png_set_rgb_to_gray(). Because; * the API takes just red and green coefficients the blue coefficient is; * calculated to make the sum 32768. This will result in different rounding; * to that used above.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:2144,green,green,2144,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['green'],['green']
Energy Efficiency,"widths of preserved objects (peaks).; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_width.C; /// End_Macro; ///; /// ### Example 4 script Background_width2.C:; ///; /// another example for very complex spectrum is given here.; ///; /// Example of the influence of clipping window width on the estimated background; /// for numberIterations=10 (red line), 20 (blue line), 30 (green line) and; /// 40 (magenta line) using decreasing clipping window algorithm.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_width2.C; /// End_Macro; ///; /// ### Example 5 script Background_order.C:; ///; /// Second order difference filter removes linear (quasi-linear) background and; /// preserves symmetrical peaks. However if the shape of the background is more; /// complex one can employ higher-order clipping filters.; ///; /// Example of the influence of clipping filter difference order on the estimated; /// background for fNnumberIterations=40, 2-nd order red line, 4-th order blue line,; /// 6-th order green line and 8-th order magenta line, and using decreasing; /// clipping window algorithm.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_order.C; /// End_Macro; ///; /// ### Example 6 script Background_smooth.C:; ///; /// The estimate of the background can be influenced by noise present in the; /// spectrum. We proposed the algorithm of the background estimate with; /// simultaneous smoothing. In the original algorithm without smoothing, the; /// estimated background snatches the lower spikes in the noise. Consequently,; /// the areas of peaks are biased by this error.; ///; /// \image html TSpectrum_Background_smooth1.jpg Principle of background estimation algorithm with simultaneous smoothing.; ///; /// Begin_Macro(source); /// ../../../tutorials/spectrum/Background_smooth.C; /// End_Macro; ///; /// ### Example 8 script Background_compton.C:; ///; /// Sometimes it is necessary to include also the Compton e",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx:5061,green,green,5061,hist/spectrum/src/TSpectrum.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum.cxx,1,['green'],['green']
Energy Efficiency,"will then use for compression). When this; * guarantee is provided to them, they can use the memory without any setup; * work. When it can't, they have to clear the area.; *; * - These buffers also have different alignment requirements.; *; * - We would like to reuse the objects in the workspace for multiple; * compressions without having to perform any expensive reallocation or; * reinitialization work.; *; * - We would like to be able to efficiently reuse the workspace across; * multiple compressions **even when the compression parameters change** and; * we need to resize some of the objects (where possible).; *; * To attempt to manage this buffer, given these constraints, the ZSTD_cwksp; * abstraction was created. It works as follows:; *; * Workspace Layout:; *; * [ ... workspace ... ]; * [objects][tables ... ->] free space [<- ... aligned][<- ... buffers]; *; * The various objects that live in the workspace are divided into the; * following categories, and are allocated separately:; *; * - Static objects: this is optionally the enclosing ZSTD_CCtx or ZSTD_CDict,; * so that literally everything fits in a single buffer. Note: if present,; * this must be the first object in the workspace, since ZSTD_customFree{CCtx,; * CDict}() rely on a pointer comparison to see whether one or two frees are; * required.; *; * - Fixed size objects: these are fixed-size, fixed-count objects that are; * nonetheless ""dynamically"" allocated in the workspace so that we can; * control how they're initialized separately from the broader ZSTD_CCtx.; * Examples:; * - Entropy Workspace; * - 2 x ZSTD_compressedBlockState_t; * - CDict dictionary contents; *; * - Tables: these are any of several different datastructures (hash tables,; * chain tables, binary trees) that all respect a common format: they are; * uint32_t arrays, all of whose values are between 0 and (nextSrc - base).; * Their sizes depend on the cparams.; *; * - Aligned: these buffers are used for various purposes that require 4 by",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_cwksp.h:2022,allocate,allocated,2022,builtins/zstd/compress/zstd_cwksp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_cwksp.h,1,['allocate'],['allocated']
Energy Efficiency,"xmm2; /// [1,2]	. DeE-----R ..	vpermilps $231, %xmm0, %xmm5; /// [1,3]	. D=eeeE--R ..	vaddss %xmm1, %xmm0, %xmm3; /// [1,4]	. D===eeeER ..	vaddss %xmm3, %xmm2, %xmm4; /// [1,5]	. D======eeeER	vaddss %xmm4, %xmm5, %xmm6; ///; /// There is an entry for every instruction in the input assembly sequence.; /// The first field is a pair of numbers obtained from the instruction index.; /// The first element of the pair is the iteration index, while the second; /// element of the pair is a sequence number (i.e. a position in the assembly; /// sequence).; /// The second field of the table is the actual timeline information; each; /// column is the information related to a specific cycle of execution.; /// The timeline of an instruction is described by a sequence of character; /// where each character represents the instruction state at a specific cycle.; ///; /// Possible instruction states are:; /// D: Instruction Dispatched; /// e: Instruction Executing; /// E: Instruction Executed (write-back stage); /// R: Instruction retired; /// =: Instruction waiting in the Scheduler's queue; /// -: Instruction executed, waiting to retire in order.; ///; /// dots ('.') and empty spaces are cycles where the instruction is not; /// in-flight.; ///; /// The last column is the assembly instruction associated to the entry.; ///; /// Based on the timeline view information from the example, instruction 0; /// at iteration 0 was dispatched at cycle 0, and was retired at cycle 3.; /// Instruction [0,1] was also dispatched at cycle 0, and it retired at; /// the same cycle than instruction [0,0].; /// Instruction [0,4] has been dispatched at cycle 2. However, it had to; /// wait for two cycles before being issued. That is because operands; /// became ready only at cycle 5.; ///; /// This view helps further understanding bottlenecks and the impact of; /// resource pressure on the code.; ///; /// To better understand why instructions had to wait for multiple cycles in; /// the scheduler's queue, cla",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.h:2280,Schedul,Scheduler,2280,interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/TimelineView.h,1,['Schedul'],['Scheduler']
Energy Efficiency,"y affect violin charts of course. \anchor HP140a; #### The CANDLE option. <a href=""http://en.wikipedia.org/wiki/Box_plot"">A Candle plot</a> (also known as; a ""box plot"" or ""whisker plot"") was invented in 1977 by John Tukey. It is a convenient; way to describe graphically a data distribution (D) with only five numbers:. 1. The minimum value of the distribution D (bottom or left whisker).; 2. The lower quartile (Q1): 25% of the data points in D are less than Q1 (bottom of the box).; 3. The median (M): 50% of the data points in D are less than M.; 4. The upper quartile (Q3): 75% of the data points in D are less than Q3 (top of the box).; 5. The maximum value of the distribution D (top or right whisker). In this implementation a TH2 is considered as a collection of TH1 along; X (option `CANDLE` or `CANDLEX`) or Y (option `CANDLEY`).; Each TH1 is represented as one candle. Begin_Macro(source); ../../../tutorials/hist/candleplotwhiskers.C; End_Macro. The candle reduces the information coming from a whole distribution into few values.; Independently from the number of entries or the significance of the underlying distribution; a candle will always look like a candle. So candle plots should be used carefully in; particular with unknown distributions. The definition of a candle is based on; __unbinned data__. Here, candles are created from binned data. Because of this, the; deviation is connected to the bin width used. The calculation of the quantiles; normally done on unbinned data also. Because data are binned, this will; only work the best possible way within the resolution of one bin. Because of all these facts one should take care that:. - there are enough points per candle; - the bin width is small enough (more bins will increase the maximum; available resolution of the quantiles although there will be some; bins with no entries); - never make a candle-plot if the underlying distribution is double-distributed; - only create candles of distributions that are more-or-less",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx:45841,reduce,reduces,45841,hist/histpainter/src/THistPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/THistPainter.cxx,1,['reduce'],['reduces']
Energy Efficiency,"ystem (Cartesian, ..; Spheric) see THistPainter::Paint; 'Error' : see 2D plot; 'Bar' : change the bar attributes; 'W' : change Bar Width; 'O' : change Bar Offset; 'Percentage': specifies the percentage of the bar which is drawn; brighter and darker (10% == BAR1 drawoption); 'Horizontal Bar': draw a horizontal bar chart. 'Marker' : change the Marker attributes (color, appearance,; thickness) see TAttMarkerEditor. This Tab has two different layouts. One is for a histogram which; is not drawn from an ntuple. The other one is available for a; histogram which is drawn from an ntuple. In this case the rebin; algorithm can create a rebinned histogram from the original data; i.e. the ntuple.; To see te differences do:; TFile f(""hsimple.root"");; hpx->Draw(""BAR1""); // non ntuple histogram; ntuple->Draw(""px""); // ntuple histogram; Non ntuple histogram:; 'Rebin': with the Slider the number of bins (shown in the field; below the Slider) can be changed to any number which; divides the number of bins of the original histogram.; Pushing 'Apply' will delete the origin histogram and; replace it by the rebinned one on the screen; Pushing 'Ignore' the origin histogram will be restored; Histogram drawn from an ntuple:; 'Rebin' with the slider the number of bins can be enlarged by; a factor of 2,3,4,5 (moving to the right) or reduced; by a factor of 1/2, 1/3, 1/4, 1/5; 'BinOffset': with the BinOffset slider the origin of the; histogram can be changed within one binwidth; Using this slider the effect of binning the data into; bins can be made visible => statistical fluctuations; 'Axis Range': with the DoubleSlider it is possible to zoom into; the specified axis range. It is also possible to set; the upper and lower limit in fields below the slider; 'Delayed drawing': all the Binning sliders can set to delay; draw mode. Then the changes on the histogram are only; updated, when the Slider is released. This should be; activated if the redrawing of the histogram is too; time consuming. //. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx:3373,reduce,reduced,3373,gui/ged/src/TH1Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx,1,['reduce'],['reduced']
Energy Efficiency,"{; public:; virtual int Get() = 0;. ClassDef(SecondAbstract, 2);; };. class Third : public SecondAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(Third, 2);; };. class FirstOverloadCorrect : public TObject; {; public:; ~FirstOverloadCorrect() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }; virtual ULong_t Hash() const { return 3; }. ClassDefInline(FirstOverloadCorrect, 2);; };. class SecondCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual int Get() = 0;. ClassDef(SecondCorrectAbstract, 2);; };. class SecondCorrectAbstractHash : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; ~SecondCorrectAbstractHash() {; ROOT::CallRecursiveRemoveIfNeeded(*this);; }. virtual ULong_t Hash() const { return 4; }; virtual int Get() = 0;. ClassDef(SecondCorrectAbstractHash, 2);; };. class ThirdCorrect : public SecondCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdCorrect, 2);; };. class SecondInCorrectAbstract : public FirstOverloadCorrect // Could also have used TNamed.; {; public:; virtual ULong_t Hash() const { return 5; }; virtual int Get() = 0;. ClassDef(SecondInCorrectAbstract, 2);; };. class ThirdInCorrect : public SecondInCorrectAbstract; {; public:; int Get() override { return 0; };. ClassDefInlineOverride(ThirdInCorrect, 2);; };. // Just declare this one so Cling will know it, but; // do not use it to avoid the TClass being stuck in; // kInterpreted state.; class WrongSetup : public TObject; {; public:; virtual ULong_t Hash() const { return 6; }. ClassDefInline(WrongSetup, 2);; };. // This example is valid according to C++11, 9.2/16: In addition, if class T has a user-declared constructor (12.1),; // every non-static data member of class T shall have a name different from T.; //; class Rho: public TObject; {; public:; Float_t Rho; // rho energy density; Float_t Edges[2]; // pseudorapidity range edges. ClassDef(Rho, 1); };; )CODE""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx:2465,energy,energy,2465,core/meta/test/testHashRecursiveRemove.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/test/testHashRecursiveRemove.cxx,1,['energy'],['energy']
Energy Efficiency,"| No |; // Hybrid | Yes | Partial | Yes |; //; // ""Module"" spends LDS memory to save cycles. ""Table"" spends cycles and global; // memory to save LDS. ""Kernel"" is as fast as kernel allocation but only works; // for variables that are known reachable from a single kernel. ""Hybrid"" picks; // between all three. When forced to choose between LDS and cycles we minimise; // LDS use.; // The ""module"" lowering implemented here finds LDS variables which are used by; // non-kernel functions and creates a new struct with a field for each of those; // LDS variables. Variables that are only used from kernels are excluded.; //; // The ""table"" lowering implemented here has three components.; // First kernels are assigned a unique integer identifier which is available in; // functions it calls through the intrinsic amdgcn_lds_kernel_id. The integer; // is passed through a specific SGPR, thus works with indirect calls.; // Second, each kernel allocates LDS variables independent of other kernels and; // writes the addresses it chose for each variable into an array in consistent; // order. If the kernel does not allocate a given variable, it writes undef to; // the corresponding array location. These arrays are written to a constant; // table in the order matching the kernel unique integer identifier.; // Third, uses from non-kernel functions are replaced with a table lookup using; // the intrinsic function to find the address of the variable.; //; // ""Kernel"" lowering is only applicable for variables that are unambiguously; // reachable from exactly one kernel. For those cases, accesses to the variable; // can be lowered to ConstantExpr address of a struct instance specific to that; // one kernel. This is zero cost in space and in compute. It will raise a fatal; // error on any variable that might be reachable from multiple kernels and is; // thus most easily used as part of the hybrid lowering strategy.; //; // Hybrid lowering is a mixture of the above. It uses the zero cost kernel; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:4417,allocate,allocates,4417,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['allocate'],['allocates']
Integrability," ### Logical & Physical Objects. There are two cases of object addition:. - Add this object as a single independent entity in the world reference frame.; - Add a physical placement (copy) of this logical object (described in local reference frame). The second case is very typical in geometry packages, GEANT4, where we have; very large number repeated placements of relatively few logical (unique) shapes.; Some viewers (OpenGL only at present) are able to take advantage of this by; identifying unique logical shapes from the fID logical ID member of; TBuffer3D. If repeated addition of the same fID is found, the shape; is cached already - and the costly tessellation does not need to be sent again.; The viewer can also perform internal GL specific caching with considerable performance gains; in these cases. For this to work correctly the logical object in must be described in TBuffer3D; in the local reference frame, complete with the local/master translation. The; viewer indicates this through the interface method; ~~~ {.cpp}; PreferLocalFrame(); ~~~. If this returns kTRUE you can make repeated calls to AddObject(), with TBuffer3D; containing the same fID, and different fLocalMaster placements. For viewers supporting logical/physical objects, the TBuffer3D content refers; to the properties of logical object, with the fLocalMaster transform and the; fColor and fTransparency attributes, which can be varied for each physical; object. As a minimum requirement all clients must be capable of filling the raw tessellation; of the object buffer, in the master reference frame. Conversely viewers must; always be capable of displaying the object described by this buffer. ## Scene Rebuilds. It should be understood that AddObject is not an explicit command to the viewer; - it may for various reasons decide to ignore it:. - It already has the object internally cached .; - The object falls outside some 'interest' limits of the viewer camera.; - The object is too small to be worth drawin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx:8031,interface,interface,8031,core/base/src/TVirtualViewer3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TVirtualViewer3D.cxx,1,['interface'],['interface']
Integrability," 'env'. A BB with setjmp is split into two after setjmp call in; /// order to make the post-setjmp BB the possible destination of longjmp BB.; ///; /// 4) Lower every call that might longjmp into; /// __THREW__ = 0;; /// call @__invoke_SIG(func, arg1, arg2); /// %__THREW__.val = __THREW__;; /// __THREW__ = 0;; /// %__threwValue.val = __threwValue;; /// if (%__THREW__.val != 0 & %__threwValue.val != 0) {; /// %label = testSetjmp(mem[%__THREW__.val], setjmpTable,; /// setjmpTableSize);; /// if (%label == 0); /// emscripten_longjmp(%__THREW__.val, %__threwValue.val);; /// setTempRet0(%__threwValue.val);; /// } else {; /// %label = -1;; /// }; /// longjmp_result = getTempRet0();; /// switch %label {; /// label 1: goto post-setjmp BB 1; /// label 2: goto post-setjmp BB 2; /// ...; /// default: goto splitted next BB; /// }; /// testSetjmp examines setjmpTable to see if there is a matching setjmp; /// call. After calling an invoke wrapper, if a longjmp occurred, __THREW__; /// will be the address of matching jmp_buf buffer and __threwValue be the; /// second argument to longjmp. mem[%__THREW__.val] is a setjmp ID that is; /// stored in saveSetjmp. testSetjmp returns a setjmp label, a unique ID to; /// each setjmp callsite. Label 0 means this longjmp buffer does not; /// correspond to one of the setjmp callsites in this function, so in this; /// case we just chain the longjmp to the caller. Label -1 means no longjmp; /// occurred. Otherwise we jump to the right post-setjmp BB based on the; /// label.; ///; /// * Wasm setjmp / longjmp handling; /// This mode still uses some Emscripten library functions but not JavaScript's; /// try-catch mechanism. It instead uses Wasm exception handling intrinsics,; /// which will be lowered to exception handling instructions.; ///; /// If there are calls to longjmp(); ///; /// 1) Lower; /// longjmp(env, val); /// into; /// __wasm_longjmp(env, val); ///; /// If there are calls to setjmp(); ///; /// 2) and 3): The same as 2) and 3) in Emscrip",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp:7589,wrap,wrapper,7589,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,1,['wrap'],['wrapper']
Integrability," (a combination of Simplex + Migrad); - Minimize; - Scan; - Seek. - Minuit2 (class ROOT::Minuit2::Minuit2Minimizer); - Migrad (default); - Simplex; - Minimize; - Fumili (Fumili2); - Scan. - Fumili (class TFumiliMinimizer). - GSLMultiMin (class ROOT::Math::GSLMinimizer) available when ROOT is built with `mathmore` support; - BFGS2 (Default); - BFGS; - ConjugateFR; - ConjugatePR; - SteepestDescent. - GSLMultiFit (class ROOT::Math::GSLNLMinimizer) available when ROOT is built `mathmore` support. - GSLSimAn (class ROOT::Math::GSLSimAnMinimizer) available when ROOT is built with `mathmore` support. - Genetic (class ROOT::Math::GeneticMinimizer). - RMinimizer (class ROOT::Math::RMinimizer) available when ROOT is built with `r` support; - BFGS (default); - L-BFGS-S; - Nelder-Mead; - CG; - and more methods, see the Details in the documentation of the function `optimix` of the [optmix R package](https://cran.r-project.org/web/packages/optimx/optimx.pdf). The Minimizer class provides the interface to perform the minimization including. In addition to provide the API for function minimization (via ROOT::Math::Minimizer::Minimize) the Minimizer class provides:; - the interface for setting the function to be minimized. The objective function passed to the Minimizer must implement the multi-dimensional generic interface; ROOT::Math::IBaseFunctionMultiDim. If the function provides gradient calculation (e.g. implementing the ROOT::Math::IGradientFunctionMultiDim interface); the gradient will be used by the Minimizer class, when needed. There are convenient classes for the users to wrap their own functions in this required interface for minimization.; These are the `ROOT::Math::Functor` class and the `ROOT::Math::GradFunctor` class for wrapping functions providing both evaluation and gradient. Some methods, like Fumili, Fumili2 and GSLMultiFit are; specialized method for least-square and also likelihood minimizations. They require then that the given function implements in addition;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:2028,interface,interface,2028,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['interface'],['interface']
Integrability," (memory ...); // 'call' '*' %epc; //; // The assembly matcher is responsible for converting this input into a precise; // machine instruction (i.e., an instruction with a well defined encoding). This; // mapping has several properties which complicate matching:; //; // - It may be ambiguous; many architectures can legally encode particular; // variants of an instruction in different ways (for example, using a smaller; // encoding for small immediates). Such ambiguities should never be; // arbitrarily resolved by the assembler, the assembler is always responsible; // for choosing the ""best"" available instruction.; //; // - It may depend on the subtarget or the assembler context. Instructions; // which are invalid for the current mode, but otherwise unambiguous (e.g.,; // an SSE instruction in a file being assembled for i486) should be accepted; // and rejected by the assembler front end. However, if the proper encoding; // for an instruction is dependent on the assembler context then the matcher; // is responsible for selecting the correct machine instruction for the; // current mode.; //; // The core matching algorithm attempts to exploit the regularity in most; // instruction sets to quickly determine the set of possibly matching; // instructions, and the simplify the generated code. Additionally, this helps; // to ensure that the ambiguities are intentionally resolved by the user.; //; // The matching is divided into two distinct phases:; //; // 1. Classification: Each operand is mapped to the unique set which (a); // contains it, and (b) is the largest such subset for which a single; // instruction could match all members.; //; // For register classes, we can generate these subgroups automatically. For; // arbitrary operands, we expect the user to define the classes and their; // relations to one another (for example, 8-bit signed immediates as a; // subset of 32-bit immediates).; //; // By partitioning the operands in this way, we guarantee that for any; // tupl",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp:2156,depend,dependent,2156,interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/AsmMatcherEmitter.cpp,1,['depend'],['dependent']
Integrability," **initial** <td> Offset likelihood by initial value (so that starting value of FCN in minuit is zero).; * This can improve numeric stability in simultaneous fits with components with large likelihood values.; * <tr><td> **bin** <td> Offset likelihood bin-by-bin with a template histogram model based on the obersved data.; * This results in per-bin values that are all in the same order of magnitude, which reduces precision loss in the sum,; * which can drastically improve numeric stability.; * Furthermore, \f$2\cdot \text{NLL}\f$ defined like this is approximately chi-square distributed, allowing for goodness-of-fit tests.; * </table>; * <tr><td> `IntegrateBins(double precision)` <td> In binned fits, integrate the PDF over the bins instead of using the probability density at the bin centre.; * This can reduce the bias observed when fitting functions with high curvature to binned data.; * - precision > 0: Activate bin integration everywhere. Use precision between 0.01 and 1.E-6, depending on binning.; * Note that a low precision such as 0.01 might yield identical results to 1.E-4, since the integrator might reach 1.E-4 already in its first; * integration step. If lower precision is desired (more speed), a RooBinSamplingPdf has to be created manually, and its integrator; * has to be manipulated directly.; * - precision = 0: Activate bin integration only for continuous PDFs fit to a RooDataHist.; * - precision < 0: Deactivate.; * \see RooBinSamplingPdf; * <tr><td> `ModularL(bool flag)` <td> Enable or disable modular likelihoods, which will become the default in a future release.; * This does not change any user-facing code, but only enables a different likelihood class in the back-end. Note that this; * should be set to true for parallel minimization of likelihoods!; * Note that it is currently not recommended to use Modular likelihoods without any parallelization enabled in the minimization, since; * some features such as offsetting might not yet work in this case.; * ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:9368,depend,depending,9368,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['depend'],['depending']
Integrability," +1 or three states with indices -1,0 and +1.; /// <tr><td> `ShiftToZero(bool flag)` <td> Shift entire curve such that lowest visible point is at exactly zero.; /// Mostly useful when plotting -log(L) or \f$ \chi^2 \f$ distributions; /// <tr><td> `AddTo(const char* name, double_t wgtSelf, double_t wgtOther)` <td> Create a projection of this PDF onto the x-axis, but; /// instead of plotting it directly, add it to an existing curve with given name (and relative weight factors).; /// <tr><td> `Components(const char* names)` <td> When plotting sums of PDFs, plot only the named components (*e.g.* only; /// the signal of a signal+background model).; /// <tr><td> `Components(const RooArgSet& compSet)` <td> As above, but pass a RooArgSet of the components themselves.; ///; /// <tr><th> Type of argument <th> Projection control; /// <tr><td> `Slice(const RooArgSet& set)` <td> Override default projection behaviour by omitting observables listed; /// in set from the projection, i.e. by not integrating over these.; /// Slicing is usually only sensible in discrete observables, by e.g. creating a slice; /// of the PDF at the current value of the category observable.; /// <tr><td> `Slice(RooCategory& cat, const char* label)` <td> Override default projection behaviour by omitting the specified category; /// observable from the projection, i.e., by not integrating over all states of this category.; /// The slice is positioned at the given label value. Multiple Slice() commands can be given to specify slices; /// in multiple observables, e.g.; /// ```{.cpp}; /// pdf.plotOn(frame, Slice(tagCategory, ""2tag""), Slice(jetCategory, ""3jet""));; /// ```; /// <tr><td> `Project(const RooArgSet& set)` <td> Override default projection behaviour by projecting; /// over observables given in set, completely ignoring the default projection behavior. Advanced use only.; /// <tr><td> `ProjWData(const RooAbsData& d)` <td> Override default projection _technique_ (integration). For observables; /// present ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:3697,integrat,integrating,3697,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['integrat'],['integrating']
Integrability," - Constructors and destructor have been added. - Instead of passing the FCN function in the argument; list, the addresses of this function is stored as pointer; in the data members of the class. This is by far more elegant; and flexible in an interactive environment.; The member function SetFCN can be used to define this pointer. - The ROOT static function Printf is provided to replace all; format statements and to print on currently defined output file.; - The functions SetObjectFit(TObject * obj)/GetObjectFit() can be; used inside the FCN function to set/get a referenced object; instead of using global variables. ## Basic concepts of MINUIT. The [MINUIT](https://root.cern/download/minuit.pdf); package acts on a multiparameter Fortran function to which one; must give the generic name <TT>FCN</TT>. In the ROOT implementation,; the function <TT>FCN</TT> is defined via the MINUIT SetFCN member function; when an Histogram.Fit command is invoked.; The value of <TT>FCN</TT> will in general depend on one; or more variable parameters. To take a simple example, in case of ROOT histograms (classes TH1C,TH1S,TH1F,TH1D); the Fit function defines the Minuit fitting function as being H1FitChisquare; or H1FitLikelihood depending on the options selected.; H1FitChisquare; calculates the chisquare between the user fitting function (gaussian, polynomial,; user defined,etc) and the data for given values of the parameters.; It is the task of MINUIT to find those values of the parameters; which give the lowest value of chisquare. ### Basic concepts - The transformation for parameters with limits. For variable parameters with limits, MINUIT uses the following; transformation:. \f[; P_{\mathrm{int}} = \arcsin; \left( 2\: \frac{P_{\mathrm{ext}}-a}{b-a} - 1 \right); P_{\mathrm{ext}} = a + \frac{b - a}{2} \left( \sin P_{\mathrm{int}} + 1 \right); \f]. so that the internal value \f$P_{\mathrm{int}}\f$ can take on any value, while; the external value \f$P_{\mathrm{ext}}\f$ can take on values o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:2269,depend,depend,2269,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['depend'],['depend']
Integrability," // Loop:; // t0 = a[i];; // t1 = f(t0);; // t2 = g(t1);; // ...; // t3 = a[i+1];; // t4 = f(t3);; // t5 = g(t4);; // t6 = op(t2, t5); // cond_branch <Loop>; //; // This can be converted to; // t00 = a[0];; // t10 = f(t00);; // t20 = g(t10);; // Loop:; // t2 = t20;; // t3 = a[i+1];; // t4 = f(t3);; // t5 = g(t4);; // t6 = op(t2, t5); // t20 = t5; // cond_branch <Loop>; //; // SROA does a good job of reusing a[i+1] as a[i] in the next iteration.; // Such a loop comes to this pass in the following form.; //; // LoopPreheader:; // X0 = a[0];; // Loop:; // X2 = PHI<(X0, LoopPreheader), (X1, Loop)>; // t1 = f(X2) <-- I1; // t2 = g(t1); // ...; // X1 = a[i+1]; // t4 = f(X1) <-- I2; // t5 = g(t4); // t6 = op(t2, t5); // cond_branch <Loop>; //; // In this pass, we look for PHIs such as X2 whose incoming values come only; // from the Loop Preheader and over the backedge and additionaly, both these; // values are the results of the same operation in terms of opcode. We call such; // a PHI node a dependence chain or DepChain. In this case, the dependence of X2; // over X1 is carried over only one iteration and so the DepChain is only one; // PHI node long.; //; // Then, we traverse the uses of the PHI (X2) and the uses of the value of the; // PHI coming over the backedge (X1). We stop at the first pair of such users; // I1 (of X2) and I2 (of X1) that meet the following conditions.; // 1. I1 and I2 are the same operation, but with different operands.; // 2. X2 and X1 are used at the same operand number in the two instructions.; // 3. All other operands Op1 of I1 and Op2 of I2 are also such that there is a; // a DepChain from Op1 to Op2 of the same length as that between X2 and X1.; //; // We then make the following transformation; // LoopPreheader:; // X0 = a[0];; // Y0 = f(X0);; // Loop:; // X2 = PHI<(X0, LoopPreheader), (X1, Loop)>; // Y2 = PHI<(Y0, LoopPreheader), (t4, Loop)>; // t1 = f(X2) <-- Will be removed by DCE.; // t2 = g(Y2); // ...; // X1 = a[i+1]; // t4 = f(X1); //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorLoopCarriedReuse.h:1800,depend,dependence,1800,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorLoopCarriedReuse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVectorLoopCarriedReuse.h,1,['depend'],['dependence']
Integrability," /// ### Fit status; ///; /// The status of the fit is obtained converting the TFitResultPtr to an integer; /// independently if the fit option ""S"" is used or not:; ///; /// ~~~ {.cpp}; /// TFitResultPtr r = h->Fit(myFunc,opt);; /// Int_t fitStatus = r;; /// ~~~; ///; /// - `status = 0` : the fit has been performed successfully (i.e no error occurred).; /// - `status < 0` : there is an error not connected with the minimization procedure, for example when a wrong function is used.; /// - `status > 0` : return status from Minimizer, depends on used Minimizer. For example for TMinuit and Minuit2 we have:; /// - `status = migradStatus + 10*minosStatus + 100*hesseStatus + 1000*improveStatus`.; /// TMinuit returns 0 (for migrad, minos, hesse or improve) in case of success and 4 in case of error (see the documentation of TMinuit::mnexcm). For example, for an error; /// only in Minos but not in Migrad a fitStatus of 40 will be returned.; /// Minuit2 returns 0 in case of success and different values in migrad,minos or; /// hesse depending on the error. See in this case the documentation of; /// Minuit2Minimizer::Minimize for the migrad return status, Minuit2Minimizer::GetMinosError for the; /// minos return status and Minuit2Minimizer::Hesse for the hesse return status.; /// If other minimizers are used see their specific documentation for the status code returned.; /// For example in the case of Fumili, see TFumili::Minimize.; ///; /// \anchor HFitRange; /// ### Fitting in a range; ///; /// In order to fit in a sub-range of the histogram you have two options:; /// - pass to this function the lower (`xxmin`) and upper (`xxmax`) values for the fitting range;; /// - define a specific range in the fitted function and use the fitting option ""R"".; /// For example, if your histogram has a defined range between -4 and 4 and you want to fit a gaussian; /// only in the interval 1 to 3, you can do:; ///; /// ~~~ {.cpp}; /// TF1 *f1 = new TF1(""f1"", ""gaus"", 1, 3);; /// histo->Fit(""f1"", """,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:12915,depend,depending,12915,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['depend'],['depending']
Integrability," /// <table>; /// <tr><th> Interface to %RooSimWSTool <th>; /// <tr><td> `SIMCLONE::name( modelPdf, $ParamSplit(...), $ParamSplitConstrained(...), $Restrict(...) ]`; /// <td> Clone-and-customize modelPdf according to ParamSplit and ParamSplitConstrained(); /// specifications and return a RooSimultaneous pdf of all built clones; ///; /// <tr><td> `MSIMCLONE::name( masterIndex, $AddPdf(mstate1, modelPdf1, $ParamSplit(...)), $AddPdf(mstate2,modelPdf2),...) ]`; /// <td> Clone-and-customize multiple models (modelPdf1,modelPdf2) according to ParamSplit and; /// ParamSplitConstrained() specifications and return a RooSimultaneous pdf of all built clones,; /// using the specified master index to map prototype pdfs to master states; /// <tr><th> Interface to %RooCustomizer <th>; /// <tr><td> `EDIT::name( orig, substNode=origNode), ... ]` <td> Create a clone of input object orig, with the specified replacements operations executed; /// <tr><td> `EDIT::name( orig, origNode=$REMOVE(), ... ]` <td> Create clone of input removing term origNode from all PROD() terms that contained it; /// <tr><td> `EDIT::name( orig, origNode=$REMOVE(prodname,...), ... ]` <td> As above, but restrict removal of origNode to PROD term(s) prodname,...; ///; ///; /// <tr><th> Interface to %RooClassFactory <th>; /// <tr><td> `CEXPR::name(<expr>,var,...]` <td> Create a custom compiled pdf that evaluates the given expression; /// <tr><td> `cexpr::name(<expr>,var,...]` <td> Create a custom compiled function that evaluates the given expression; ///; ///; /// <tr><td> `$MetaType(...)` <td> Meta argument that does not result in construction of an object but is used logically organize; /// input arguments in certain operator pdf constructions. The defined meta arguments are context dependent.; /// The only meta argument that is defined globally is `$Alias(typeName,aliasName)` to; /// define aliases for type names. For the definition of meta arguments in operator pdfs; /// see the definitions below.; /// </table>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:5477,Interface,Interface,5477,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,2,"['Interface', 'depend']","['Interface', 'dependent']"
Integrability," /// This file defines the pass that looks through the machine instructions; /// late in the compilation, and finds byte or word instructions that; /// can be profitably replaced with 32 bit instructions that give equivalent; /// results for the bits of the results that are used. There are two possible; /// reasons to do this.; ///; /// One reason is to avoid false-dependences on the upper portions; /// of the registers. Only instructions that have a destination register; /// which is not in any of the source registers can be affected by this.; /// Any instruction where one of the source registers is also the destination; /// register is unaffected, because it has a true dependence on the source; /// register already. So, this consideration primarily affects load; /// instructions and register-to-register moves. It would; /// seem like cmov(s) would also be affected, but because of the way cmov is; /// really implemented by most machines as reading both the destination and; /// and source registers, and then ""merging"" the two based on a condition,; /// it really already should be considered as having a true dependence on the; /// destination register as well.; ///; /// The other reason to do this is for potential code size savings. Word; /// operations need an extra override byte compared to their 32 bit; /// versions. So this can convert many word operations to their larger; /// size, saving a byte in encoding. This could introduce partial register; /// dependences where none existed however. As an example take:; /// orw ax, $0x1000; /// addw ax, $3; /// now if this were to get transformed into; /// orw ax, $1000; /// addl eax, $3; /// because the addl encodes shorter than the addw, this would introduce; /// a use of a register that was only partially written earlier. On older; /// Intel processors this can be quite a performance penalty, so this should; /// probably only be done when it can be proven that a new partial dependence; /// wouldn't be created, or when ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupBWInsts.cpp:1509,depend,dependence,1509,interpreter/llvm-project/llvm/lib/Target/X86/X86FixupBWInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupBWInsts.cpp,1,['depend'],['dependence']
Integrability," /// of the loop iteration variable and is always an unsigned integer type; /// appropriate to represent the range of the loop iteration variable. Its; /// value corresponds to the logical iteration number in the OpenMP; /// specification.; ///; /// This AST node provides two captured statements:; /// * The distance function which computes the number of iterations.; /// * The loop user variable function that computes the loop user variable when; /// given a logical iteration number.; ///; /// These captured statements provide the link between C/C++ semantics and the; /// logical iteration counters used by the OpenMPIRBuilder which is; /// language-agnostic and therefore does not know e.g. how to advance a; /// random-access iterator. The OpenMPIRBuilder will use this information to; /// apply simd, workshare-loop, distribute, taskloop and loop directives to the; /// loop. For compatibility with the non-OpenMPIRBuilder codegen path, an; /// OMPCanonicalLoop can itself also be wrapped into the CapturedStmts of an; /// OMPLoopDirective and skipped when searching for the associated syntactical; /// loop.; ///; /// Example:; /// <code>; /// std::vector<std::string> Container{1,2,3};; /// for (std::string Str : Container); /// Body(Str);; /// </code>; /// which is syntactic sugar for approximately:; /// <code>; /// auto &&__range = Container;; /// auto __begin = std::begin(__range);; /// auto __end = std::end(__range);; /// for (; __begin != __end; ++__begin) {; /// std::String Str = *__begin;; /// Body(Str);; /// }; /// </code>; /// In this example, the loop user variable is `Str`, the loop iteration; /// variable is `__begin` of type `std::vector<std::string>::iterator` and the; /// logical iteration number type is `size_t` (unsigned version of; /// `std::vector<std::string>::iterator::difference_type` aka `ptrdiff_t`).; /// Therefore, the distance function will be; /// <code>; /// [&](size_t &Result) { Result = __end - __begin; }; /// </code>; /// and the loop variable ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:3869,wrap,wrapped,3869,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['wrap'],['wrapped']
Integrability," 3) Lower; /// invoke @func(arg1, arg2) to label %invoke.cont unwind label %lpad; /// into; /// __THREW__ = 0;; /// call @__invoke_SIG(func, arg1, arg2); /// %__THREW__.val = __THREW__;; /// __THREW__ = 0;; /// if (%__THREW__.val == 1); /// goto %lpad; /// else; /// goto %invoke.cont; /// SIG is a mangled string generated based on the LLVM IR-level function; /// signature. After LLVM IR types are lowered to the target wasm types,; /// the names for these wrappers will change based on wasm types as well,; /// as in invoke_vi (function takes an int and returns void). The bodies of; /// these wrappers will be generated in JS glue code, and inside those; /// wrappers we use JS try-catch to generate actual exception effects. It; /// also calls the original callee function. An example wrapper in JS code; /// would look like this:; /// function invoke_vi(index,a1) {; /// try {; /// Module[""dynCall_vi""](index,a1); // This calls original callee; /// } catch(e) {; /// if (typeof e !== 'number' && e !== 'longjmp') throw e;; /// _setThrew(1, 0); // setThrew is called here; /// }; /// }; /// If an exception is thrown, __THREW__ will be set to true in a wrapper,; /// so we can jump to the right BB based on this value.; ///; /// 4) Lower; /// %val = landingpad catch c1 catch c2 catch c3 ...; /// ... use %val ...; /// into; /// %fmc = call @__cxa_find_matching_catch_N(c1, c2, c3, ...); /// %val = {%fmc, getTempRet0()}; /// ... use %val ...; /// Here N is a number calculated based on the number of clauses.; /// setTempRet0 is called from __cxa_find_matching_catch() in JS glue code.; ///; /// 5) Lower; /// resume {%a, %b}; /// into; /// call @__resumeException(%a); /// where __resumeException() is a function in JS glue code.; ///; /// 6) Lower; /// call @llvm.eh.typeid.for(type) (intrinsic); /// into; /// call @llvm_eh_typeid_for(type); /// llvm_eh_typeid_for function will be generated in JS glue code.; ///; /// * Emscripten setjmp / longjmp handling; ///; /// If there are calls to lo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp:4375,wrap,wrapper,4375,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,2,['wrap'],['wrapper']
Integrability," <-- a root increment; // f(%iv.1); // %iv.2 = add %iv, 2 <-- a root increment; // f(%iv.2); // %iv.scale_m_1 = add %iv, scale-1 <-- a root increment; // f(%iv.scale_m_1); // ...; // %iv.next = add %iv, scale; // %cmp = icmp(%iv, ...); // br %cmp, header, exit; //; // Notably, we do not require that f(%iv), f(%iv.1), etc. be isolated groups of; // instructions. In other words, the instructions in f(%iv), f(%iv.1), etc. can; // be intermixed with eachother. The restriction imposed by this algorithm is; // that the relative order of the isomorphic instructions in f(%iv), f(%iv.1),; // etc. be the same.; //; // First, we collect the use set of %iv, excluding the other increment roots.; // This gives us f(%iv). Then we iterate over the loop instructions (scale-1); // times, having collected the use set of f(%iv.(i+1)), during which we:; // - Ensure that the next unmatched instruction in f(%iv) is isomorphic to; // the next unmatched instruction in f(%iv.(i+1)).; // - Ensure that both matched instructions don't have any external users; // (with the exception of last-in-chain reduction instructions).; // - Track the (aliasing) write set, and other side effects, of all; // instructions that belong to future iterations that come before the matched; // instructions. If the matched instructions read from that write set, then; // f(%iv) or f(%iv.(i+1)) has some dependency on instructions in; // f(%iv.(j+1)) for some j > i, and we cannot reroll the loop. Similarly,; // if any of these future instructions had side effects (could not be; // speculatively executed), and so do the matched instructions, when we; // cannot reorder those side-effect-producing instructions, and rerolling; // fails.; //; // Finally, we make sure that all loop instructions are either loop increment; // roots, belong to simple latch code, parts of validated reductions, part of; // f(%iv) or part of some f(%iv.i). If all of that is true (and all reductions; // have been validated), then we reroll the loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp:1591,depend,dependency,1591,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp,1,['depend'],['dependency']
Integrability," = null;; bool _call_try_exit = true;. objc_exception_try_enter(&d);; if (!setjmp(d.jmp_buf)) {; ... try body ...; } else {; // exception path; id _caught = objc_exception_extract(&d);. // enter new try scope for handlers; if (!setjmp(d.jmp_buf)) {; ... match exception and execute catch blocks ... // fell off end, rethrow.; _rethrow = _caught;; ... jump-through-finally to finally_rethrow ...; } else {; // exception in catch block; _rethrow = objc_exception_extract(&d);; _call_try_exit = false;; ... jump-through-finally to finally_rethrow ...; }; }; ... jump-through-finally to finally_end ... finally:; if (_call_try_exit); objc_exception_try_exit(&d);. ... finally block ....; ... dispatch to finally destination ... finally_rethrow:; objc_exception_throw(_rethrow);. finally_end:; }. This framework differs slightly from the one gcc uses, in that gcc; uses _rethrow to determine if objc_exception_try_exit should be called; and if the object should be rethrown. This breaks in the face of; throwing nil and introduces unnecessary branches. We specialize this framework for a few particular circumstances:. - If there are no catch blocks, then we avoid emitting the second; exception handling context. - If there is a catch-all catch block (i.e. @catch(...) or @catch(id; e)) we avoid emitting the code to rethrow an uncaught exception. - FIXME: If there is no @finally block we can do a few more; simplifications. Rethrows and Jumps-Through-Finally; --. '@throw;' is supported by pushing the currently-caught exception; onto ObjCEHStack while the @catch blocks are emitted. Branches through the @finally block are handled with an ordinary; normal cleanup. We do not register an EH cleanup; fragile-ABI ObjC; exceptions are not compatible with C++ exceptions, and this is; hardly the only place where this will go wrong. @synchronized(expr) { stmt; } is emitted as if it were:; id synch_value = expr;; objc_sync_enter(synch_value);; @try { stmt; } @finally { objc_sync_exit(synch_value); }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:3334,synchroniz,synchronized,3334,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['synchroniz'],['synchronized']
Integrability," Even if a result depends on multiple variations, only one variation is applied at a time, i.e. there will be no result produced; by applying multiple systematic variations at the same time.; For example, in the following example snippet, the RResultMap instance `all_h` will contain keys ""nominal"", ""pt:down"",; ""pt:up"", ""eta:0"", ""eta:1"", but no ""pt:up&&eta:0"" or similar:. ~~~{.cpp}; auto df = _df.Vary(""pt"",; ""ROOT::RVecD{pt*0.9, pt*1.1}"",; {""down"", ""up""}); .Vary(""eta"",; [](float eta) { return RVecF{eta*0.9f, eta*1.1f}; },; {""eta""},; 2);. auto nom_h = df.Histo2D(histoModel, ""pt"", ""eta"");; auto all_hs = VariationsFor(nom_h);; all_hs.GetKeys(); // returns {""nominal"", ""pt:down"", ""pt:up"", ""eta:0"", ""eta:1""}; ~~~. Note how we passed the integer `2` instead of a list of variation tags to the second Vary() invocation: this is a; shorthand that automatically generates tags 0 to N-1 (in this case 0 and 1). \note Currently, VariationsFor() and RResultMap are in the `ROOT::RDF::Experimental` namespace, to indicate that these; interfaces might still evolve and improve based on user feedback. We expect that some aspects of the related; programming model will be streamlined in future versions. \note Currently, the results of a Snapshot(), Report() or Display() call cannot be varied (i.e. it is not possible to; call \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" on them. These limitations will be lifted in future releases. See the Vary() method for more information and [this tutorial](https://root.cern/doc/master/df106__HiggsToFourLeptons_8C.html) ; for an example usage of Vary and \ref ROOT::RDF::Experimental::VariationsFor ""VariationsFor()"" in the analysis. \anchor rnode; ### RDataFrame objects as function arguments and return values; RDataFrame variables/nodes are relatively cheap to copy and it's possible to both pass them to (or move them into); functions and to return them from functions. However, in general each dataframe node will have a different C++ type,; wh",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:59487,interface,interfaces,59487,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['interface'],['interfaces']
Integrability," LHS, and a new ID is given; /// to its RHS. At the end of the walk, all leaf-level conditions will have a; /// unique ID -- keep in mind that the final set of IDs may not be in; /// numerical order from left to right.; ///; /// Example: ""x = (A && B) || (C && D) || (D && F)""; ///; /// Visit Depth1:; /// (A && B) || (C && D) || (D && F); /// ^-------LHS--------^ ^-RHS--^; /// ID=1 ID=2; ///; /// Visit LHS-Depth2:; /// (A && B) || (C && D); /// ^-LHS--^ ^-RHS--^; /// ID=1 ID=3; ///; /// Visit LHS-Depth3:; /// (A && B); /// LHS RHS; /// ID=1 ID=4; ///; /// Visit RHS-Depth3:; /// (C && D); /// LHS RHS; /// ID=3 ID=5; ///; /// Visit RHS-Depth2: (D && F); /// LHS RHS; /// ID=2 ID=6; ///; /// Visit Depth1:; /// (A && B) || (C && D) || (D && F); /// ID=1 ID=4 ID=3 ID=5 ID=2 ID=6; ///; /// A node ID of '0' always means MC/DC isn't being tracked.; ///; /// As the AST walk proceeds recursively, the algorithm will also use a stack; /// to track the IDs of logical-AND and logical-OR operations on the RHS so; /// that it can be determined which nodes are executed next, depending on how; /// a LHS or RHS of a logical-AND or logical-OR is evaluated. This; /// information relies on the assigned IDs and are embedded within the; /// coverage region IDs of each branch region associated with a leaf-level; /// condition. This information helps the visualization tool reconstruct all; /// possible test vectors for the purposes of MC/DC analysis. If a ""next"" node; /// ID is '0', it means it's the end of the test vector. The following rules; /// are used:; ///; /// For logical-AND (""LHS && RHS""):; /// - If LHS is TRUE, execution goes to the RHS node.; /// - If LHS is FALSE, execution goes to the LHS node of the next logical-OR.; /// If that does not exist, execution exits (ID == 0).; ///; /// - If RHS is TRUE, execution goes to LHS node of the next logical-AND.; /// If that does not exist, execution exits (ID == 0).; /// - If RHS is FALSE, execution goes to the LHS node of the next logical-O",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.cpp:1586,depend,depending,1586,interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.cpp,1,['depend'],['depending']
Integrability," On the other hand, more; effort is needed to handle several TEfficiency objects instead of one; histogram. In the case of many different or even continuously distributed; weights, this approach becomes cumbersome. One possibility to overcome this; problem is the usage of binned weights. \anchor EFF05a; ### Example; In particle physics weights arises from the fact that you want to; normalise your results to a certain reference value. A very common formula for; calculating weights is. \f{eqnarray*}{; w &=& \frac{\sigma L}{N_{gen} \epsilon_{trig}} \\; &-& \sigma ...\ cross\ section \\; &-& L ...\ luminosity \\; &-& N_{gen}\ ... number\ of\ generated\ events \\; &-& \epsilon_{trig}\ ...\ (known)\ trigger\ efficiency \\; \f}. The reason for different weights can therefore be:; - different processes; - other integrated luminosity; - varying trigger efficiency; - different sample sizes; - ...; - or even combination of them. Depending on the actual meaning of different weights in your case, you; should either merge or combine them to get the overall efficiency. \anchor EFF051; ### V.1 When should I use merging?; If the weights are artificial and do not represent real alternative hypotheses,; you should merge the different TEfficiency objects. That means especially for; the Bayesian case that the prior probability should be the same for all merged; TEfficiency objects. The merging can be done by invoking one of the following; operations:; - eff1.Add(eff2); - eff1 += eff2; - eff1 = eff1 + eff2. The result of the merging is stored in the TEfficiency object which is marked; bold above. The contents of the internal histograms of both TEfficiency; objects are added and a new weight is assigned. The statistic options are not; changed. \f[; \frac{1}{w_{new}} = \frac{1}{w_{1}} + \frac{1}{w_{2}}; \f]. \anchor EFF05b; ### Example:; If you use two samples with different numbers of generated events for the same; process and you want to normalise both to the same integrated luminosity an",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx:16777,Depend,Depending,16777,hist/hist/src/TEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TEfficiency.cxx,1,['Depend'],['Depending']
Integrability," Poynton's ColorFAQ of 1998-01-04 at; * <http://www.inforamp.net/~poynton/> (THIS LINK IS DEAD June 2008 but; * versions dated 1998 through November 2002 have been archived at; * https://web.archive.org/web/20000816232553/www.inforamp.net/; * ~poynton/notes/colour_and_gamma/ColorFAQ.txt ); * Charles Poynton poynton at poynton.com; *; * Y = 0.212671 * R + 0.715160 * G + 0.072169 * B; *; * which can be expressed with integers as; *; * Y = (6969 * R + 23434 * G + 2365 * B)/32768; *; * Poynton's current link (as of January 2003 through July 2011):; * <http://www.poynton.com/notes/colour_and_gamma/>; * has changed the numbers slightly:; *; * Y = 0.2126*R + 0.7152*G + 0.0722*B; *; * which can be expressed with integers as; *; * Y = (6966 * R + 23436 * G + 2366 * B)/32768; *; * Historically, however, libpng uses numbers derived from the ITU-R Rec 709; * end point chromaticities and the D65 white point. Depending on the; * precision used for the D65 white point this produces a variety of different; * numbers, however if the four decimal place value used in ITU-R Rec 709 is; * used (0.3127,0.3290) the Y calculation would be:; *; * Y = (6968 * R + 23435 * G + 2366 * B)/32768; *; * While this is correct the rounding results in an overflow for white, because; * the sum of the rounded coefficients is 32769, not 32768. Consequently; * libpng uses, instead, the closest non-overflowing approximation:; *; * Y = (6968 * R + 23434 * G + 2366 * B)/32768; *; * Starting with libpng-1.5.5, if the image being converted has a cHRM chunk; * (including an sRGB chunk) then the chromaticities are used to calculate the; * coefficients. See the chunk handling in pngrutil.c for more information.; *; * In all cases the calculation is to be done in a linear colorspace. If no; * gamma information is available to correct the encoding of the original RGB; * values this results in an implicit assumption that the original PNG RGB; * values were linear.; *; * Other integer coefficients can be used via png_",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:995,Depend,Depending,995,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['Depend'],['Depending']
Integrability," SetCommand()) then this; command string will be executed via the interpreter whenever a; button is selected. A command string can contain the macros:. - $MSG -- kC_COMMAND, kCMCHECKBUTTON packed message; (use GET_MSG() and GET_SUBMSG() to unpack); - $PARM1 -- button id; - $PARM2 -- user data pointer. Before executing these macros are expanded into the respective Long_t's; */; /** \class TGRadioButton; \ingroup guiwidgets. Selects different options. Like text buttons, they have text or hot string as a label. Radio buttons are grouped usually in logical sets of two or more; buttons to present mutually exclusive choices. Selecting a radio button will generate the event:; - kC_COMMAND, kCM_RADIOBUTTON, button id, user data. If a command string has been specified (via SetCommand()) then this; command string will be executed via the interpreter whenever a; button is selected. A command string can contain the macros:. - $MSG -- kC_COMMAND, kCMRADIOBUTTON packed message; (use GET_MSG() and GET_SUBMSG() to unpack); - $PARM1 -- button id; - $PARM2 -- user data pointer. Before executing these macros are expanded into the respective Long_t's; */; /** \class TGSplitButton; \ingroup guiwidgets. Implements a button with added menu functionality.; There are 2 modes of operation available. If the button is split, a menu will popup when the menu area of the; button is clicked. Activating a menu item changes the functionality; of the button by having it emit a additional signal when it is; clicked. The signal emitted when the button is clicked, is the; ItemClicked(Int_t) signal with a different fixed value for the; Int_t that corresponds to the id of the activated menu entry. If the button is not split, clicking it will popup the menu and the; ItemClicked(Int_t) signal will be emitted when a menu entry is; activated. The value of the Int_t is again equal to the value of; the id of the activated menu entry. The mode of operation of a SplitButton can be changed on the fly; by calling th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButton.cxx:3806,message,message,3806,gui/gui/src/TGButton.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGButton.cxx,1,['message'],['message']
Integrability, The current cases; /// that trigger this are:; ///; /// * When parsing X::Y (with no 'typename') where X is dependent; /// * When parsing X<Y> where X is undeclared; ///; /// decl-specifier:; /// storage-class-specifier; /// type-specifier; /// function-specifier; /// 'friend'; /// 'typedef'; /// [C++11] 'constexpr'; /// [C++20] 'consteval'; /// [GNU] attributes declaration-specifiers[opt]; ///; /// storage-class-specifier:; /// 'register'; /// 'static'; /// 'extern'; /// 'mutable'; /// 'auto'; /// [GNU] '__thread'; /// [C++11] 'thread_local'; /// [C11] '_Thread_local'; ///; /// function-specifier:; /// 'inline'; /// 'virtual'; /// 'explicit'; ///; /// typedef-name:; /// identifier; ///; /// type-specifier:; /// simple-type-specifier; /// class-specifier; /// enum-specifier; /// elaborated-type-specifier; /// typename-specifier; /// cv-qualifier; ///; /// simple-type-specifier:; /// '::'[opt] nested-name-specifier[opt] type-name; /// '::'[opt] nested-name-specifier 'template'; /// simple-template-id [TODO]; /// 'char'; /// 'wchar_t'; /// 'bool'; /// 'short'; /// 'int'; /// 'long'; /// 'signed'; /// 'unsigned'; /// 'float'; /// 'double'; /// 'void'; /// [GNU] typeof-spec,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp:921,depend,dependent,921,interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseTentative.cpp,1,['depend'],['dependent']
Integrability," The values that arrive here via Gradient will be in internal coordinates if that is; /// what this class expects, and indeed this is the case for MinuitFcnGrad's current implementation. This is; /// communicated to Minuit via MinuitFcnGrad::returnsInMinuit2ParameterSpace. Inside Minuit, that function determines; /// whether this class's gradient calculator is wrapped inside a AnalyticalGradientCalculator, to which Minuit passes; /// ""external"" parameter values, or as an ExternalInternalGradientCalculator, which gets ""internal"" parameter values.; /// Long story short: when MinuitFcnGrad::returnsInMinuit2ParameterSpace() returns true, Minuit will pass ""internal""; /// values to Gradient. These cannot be synced with this function's RooFit parameters using; /// SetPdfParamVal, unless a manual transformation step is performed in advance. However, they do need to be passed; /// on to the gradient calculator, since indeed we expect values there to be in ""internal"" space. However, this is; /// calculator dependent. Note that in the current MinuitFcnGrad implementation we do not actually allow for; /// calculators in ""external"" (i.e. regular RooFit parameter space) values, since; /// MinuitFcnGrad::returnsInMinuit2ParameterSpace is hardcoded to true. This should in a future version be changed so; /// that the calculator (the wrapper) is queried for this information.; /// Because some gradient calculators may also use the regular RooFit parameters (e.g. for calculating the likelihood's; /// value itself), this information is also passed on to the gradient wrapper. Vice versa, when updated ""internal""; /// parameters are passed to Gradient, the likelihood may be affected as well. Even though a; /// transformation from internal to ""external"" may be necessary before the values can be used, the likelihood can at; /// least log that its parameter values are possibly no longer in sync with those of the gradient.; ///; /// The second twist is that the Minuit external parameters may s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:1972,depend,dependent,1972,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,1,['depend'],['dependent']
Integrability," ```; should return the analytical integrals that are supported. `integSet`; is the set of dependents for which integration is requested. The; function should copy the subset of dependents it can analytically; integrate to `anaIntSet`, and return a unique identification code for; this integration configuration. If no integration can be; performed, zero should be returned. Second,. ```; double analyticalIntegral(Int_t code); ```. implements the actual analytical integral(s) advertised by; `getAnalyticalIntegral()`. This function will only be called with; codes returned by `getAnalyticalIntegral()`, except code zero. The integration range for each dependent to be integrated can; be obtained from the dependent's proxy functions `min()` and; `max()`. Never call these proxy functions for any proxy not known to; be a dependent via the integration code. Doing so may be; ill-defined, e.g., in case the proxy holds a function, and will; trigger an assert. Integrated category dependents should always be; summed over all of their states. ### Direct generation of observables. Distributions for any PDF can be generated with the accept/reject method,; but for certain PDFs, more efficient methods may be implemented. To; implement direct generation of one or more observables, two; functions need to be implemented, similar to those for analytical; integrals:. ```; Int_t getGenerator(const RooArgSet& generateVars, RooArgSet& directVars); ```; and; ```; void generateEvent(Int_t code); ```. The first function advertises observables, for which distributions can be generated,; similar to the way analytical integrals are advertised. The second; function implements the actual generator for the advertised observables. The generated dependent values should be stored in the proxy; objects. For this, the assignment operator can be used (i.e. `xProxy; = 3.0` ). Never call assign to any proxy not known to be a dependent; via the generation code. Doing so may be ill-defined, e.g. in case; the prox",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:4305,Integrat,Integrated,4305,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,"['Integrat', 'depend']","['Integrated', 'dependents']"
Integrability," accuracy in double precision floating point arithmetic; * for most of the upper half of the complex plane, chose @f$t_m=12@f$ and; * @f$N=23@f$ as is done in the paper.; *; * There are two complications: For Im(z) negative, the exponent in the; * equation above becomes so large that the roundoff in the rest of the; * calculation is amplified enough that the result cannot be trusted.; * Therefore, for Im(z) < 0, the symmetry of the erfc function under the; * transformation z --> -z is used to avoid accuracy issues for Im(z) < 0 by; * formulating the problem such that the calculation can be done for Im(z) > 0; * where the accuracy of the method is fine, and some postprocessing then; * yields the desired final result.; *; * Second, the denominators in the equation above become singular at; * @f$z = n * pi / 12@f$ (for 0 <= n < 24). In a tiny disc around these; * points, Taylor expansions are used to overcome that difficulty.; *; * This routine precomputes everything it can, and tries to write out complex; * operations to minimise subroutine calls, e.g. for the multiplication of; * complex numbers.; *; * In the square -8 <= Re(z) <= 8, -8 <= Im(z) <= 8, the routine is accurate; * to better than 4e-13 relative, the average relative error is better than; * 7e-16. On a modern x86_64 machine, the routine is roughly three times as; * fast than the old CERNLIB implementation and offers better accuracy.; *; * For large @f$|z|@f$, the familiar continued fraction approximation; *; * @f[ w(z)=\frac{-iz/\sqrt{\pi}}{-z^2+\frac{1/2}{1+\frac{2/2}{-z^2 +; * \frac{3/2}{1+\frac{4/2}{-z^2+\frac{5/2}{1+\frac{6/2}{-z^2+\frac{7/2; * }{1+\frac{8/2}{-z^2+\frac{9/2}{1+\ldots}}}}}}}}}} @f]; *; * is used, truncated at the ellipsis (""..."") in the formula; for @f$|z| >; * 12@f$, @f$Im(z)>0@f$ it will give full double precision at a smaller; * computational cost than the method described above. (For @f$|z|>12@f$,; * @f$Im(z)<0@f$, the symmetry property @f$w(x-iy)=2e^{-(x+iy)^2-w(x+iy)}@f$; * is us",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMath.h:2010,rout,routine,2010,roofit/roofitcore/inc/RooMath.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMath.h,1,['rout'],['routine']
Integrability," achieve that, one approach is to generate instructions that do not have; // data dependencies between them.; //; // For some instructions, this is trivial:; // mov rax, qword ptr [rsi]; // mov rax, qword ptr [rsi]; // mov rax, qword ptr [rsi]; // mov rax, qword ptr [rsi]; // For the above snippet, haswell just renames rax four times and executes the; // four instructions two at a time on P23 and P0126.; //; // For some instructions, we just need to make sure that the source is; // different from the destination. For example, IDIV8r reads from GPR and; // writes to AX. We just need to ensure that the Var is assigned a; // register which is different from AX:; // idiv bx; // idiv bx; // idiv bx; // idiv bx; // The above snippet will be able to fully saturate the ports, while the same; // with ax would issue one uop every `latency(IDIV8r)` cycles.; //; // Some instructions make this harder because they both read and write from; // the same register:; // inc rax; // inc rax; // inc rax; // inc rax; // This has a data dependency from each instruction to the next, limit the; // number of instructions that can be issued in parallel.; // It turns out that this is not a big issue on recent Intel CPUs because they; // have heuristics to balance port pressure. In the snippet above, subsequent; // instructions will end up evenly distributed on {P0,P1,P5,P6}, but some CPUs; // might end up executing them all on P0 (just because they can), or try; // avoiding P5 because it's usually under high pressure from vector; // instructions.; // This issue is even more important for high-latency instructions because; // they increase the idle time of the CPU, e.g. :; // imul rax, rbx; // imul rax, rbx; // imul rax, rbx; // imul rax, rbx; //; // To avoid that, we do the renaming statically by generating as many; // independent exclusive assignments as possible (until all possible registers; // are exhausted) e.g.:; // imul rax, rbx; // imul rcx, rbx; // imul rdx, rbx; // imul r8, rbx; //; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/ParallelSnippetGenerator.cpp:1360,depend,dependency,1360,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/ParallelSnippetGenerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/ParallelSnippetGenerator.cpp,1,['depend'],['dependency']
Integrability," and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAbsCategory.cxx; \class RooAbsCategory; \ingroup Roofitcore. RooAbsCategory is the base class for objects that represent a discrete value with a finite number of states. Each state is denoted by an integer and a name. Both can be used to retrieve and; set states, but referring to states by index is more efficient. Conversion between; index and name can be done using lookupName() or lookupIndex().; It is possible to iterate through all defined states using begin() and end(). For category classes deriving from RooAbsCategory, states can only be evaluated, *i.e.*, queried.; Refer to RooAbsCategoryLValue and its derived classes for categories where states can also be set. The; simplest category class whose states can be set, queried and saved in a dataset, refer to RooCategory. ### Interface change in ROOT-6.22; Category data were based in the class RooCatType, holding an index state and a category name truncated to 256; characters. This wastes 64 bytes of storage space per entry, and prevents fast retrieval of category data.; Since ROOT-6.22, categories are only represented by an integer. RooAbsCategory::lookupName() can be used to; retrieve the corresponding state name. There is no limit for the length of the state name. To not break old code, the old RooCatType interfaces are still available. Whenever possible,; the following replacements should be used:; - lookupType() \f$ \rightarrow \f$ lookupName() / lookupIndex(); - typeIterator() \f$ \rightarrow \f$ range-based for loop / begin() / end(); - isValidIndex(Int_t index) \f$ \rightarrow \f$ hasIndex(); - isValid(const RooCatType&) \f$ \rightarrow \f$ hasIndex() / hasLabel(); **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCategory.cxx:1498,Interface,Interface,1498,roofit/roofitcore/src/RooAbsCategory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCategory.cxx,2,"['Interface', 'interface']","['Interface', 'interfaces']"
Integrability," and its configuration parameters by calling these static functions before fitting (before calling `TH1::Fit`):; /// - `ROOT::Math::MinimizerOptions::SetDefaultMinimizer(minimizerName, minimizerAgorithm)` for changing the minmizer and/or the corresponding algorithm.; /// For example `ROOT::Math::MinimizerOptions::SetDefaultMinimizer(""GSLMultiMin"",""BFGS"");` will set the usage of the BFGS algorithm of the GSL multi-dimensional minimization; /// The current defaults are (""Minuit"",""Migrad"").; /// See the documentation of the `ROOT::Math::MinimizerOptions` for the available minimizers in ROOT and their corresponding algorithms.; /// - `ROOT::Math::MinimizerOptions::SetDefaultTolerance` for setting a different tolerance value for the minimization.; /// - `ROOT::Math::MinimizerOptions::SetDefaultMaxFunctionCalls` for setting the maximum number of function calls.; /// - `ROOT::Math::MinimizerOptions::SetDefaultPrintLevel` for changing the minimizer print level from level=0 (minimal printing) to level=3 maximum printing; ///; /// Other options are possible depending on the Minimizer used, see the corresponding documentation.; /// The default minimizer can be also set in the resource file in etc/system.rootrc. For example; ///; /// ~~~ {.cpp}; /// Root.Fitter: Minuit2; /// ~~~; ///; /// \anchor HFitChi2; /// ### Chi-square Fits; ///; /// By default a chi-square (least-square) fit is performed on the histogram. The so-called modified least-square method; /// is used where the residual for each bin is computed using as error the observed value (the bin error) returned by `TH1::GetBinError`; ///; /// \f[; /// Chi2 = \sum_{i}{ \left(\frac{y(i) - f(x(i) | p )}{e(i)} \right)^2 }; /// \f]; ///; /// where `y(i)` is the bin content for each bin `i`, `x(i)` is the bin center and `e(i)` is the bin error (`sqrt(y(i)` for; /// an un-weighted histogram). Bins with zero errors are excluded from the fit. See also later the note on the treatment; /// of empty bins. When using option ""I"" the r",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:6142,depend,depending,6142,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['depend'],['depending']
Integrability," and; * the 'C' calling convention (from PNGCAPI) for; * callbacks (PNGCBAPI). This is no longer required; * in any known environment - if it has to be used; * please post an explanation of the problem to the; * libpng mailing list.; *; * These cases only differ if the operating system does not use the C; * calling convention, at present this just means the above cases; * (x86 DOS/Windows systems) and, even then, this does not apply to; * Cygwin running on those systems.; *; * Note that the value must be defined in pnglibconf.h so that what; * the application uses to call the library matches the conventions; * set when building the library.; */; /* Symbol export; * =============; * When building a shared library it is almost always necessary to tell; * the compiler which symbols to export. The png.h macro 'PNG_EXPORT'; * is used to mark the symbols. On some systems these symbols can be; * extracted at link time and need no special processing by the compiler,; * on other systems the symbols are flagged by the compiler and just; * the declaration requires a special tag applied (unfortunately) in a; * compiler dependent way. Some systems can do either.; *; * A small number of older systems also require a symbol from a DLL to; * be flagged to the program that calls it. This is a problem because; * we do not know in the header file included by application code that; * the symbol will come from a shared library, as opposed to a statically; * linked one. For this reason the application must tell us by setting; * the magic flag PNG_USE_DLL to turn on the special processing before; * it includes png.h.; *; * Four additional macros are used to make this happen:; *; * PNG_IMPEXP The magic (if any) to cause a symbol to be exported from; * the build or imported if PNG_USE_DLL is set - compiler; * and system specific.; *; * PNG_EXPORT_TYPE(type) A macro that pre or appends PNG_IMPEXP to; * 'type', compiler specific.; *; * PNG_DLL_EXPORT Set to the magic to use during a libpng bui",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngconf.h:2483,depend,dependent,2483,graf2d/asimage/src/libAfterImage/libpng/pngconf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngconf.h,1,['depend'],['dependent']
Integrability," array expands automatically; when objects are added (shrinking can be done by hand using Expand() ). The TRefArray can be filled with:; ~~~ {.cpp}; array.Add(obj); array.AddAt(obj,i); but not array[i] = obj !!!; ~~~; The array elements can be retrieved with:; ~~~ {.cpp}; TObject *obj = array.At(i);; ~~~; By default the TRefArray 'points' to the current process and can only; receive object that have been created in this process.; To point the TRefArray to a different process do:; ~~~ {.cpp}; TRefArray array( processId );; ~~~; For example, if 'obj' is an instance that was created in the different; process and you do:; ~~~ {.cpp}; TRefArray array( TProcessID::GetProcessWithUID( obj ) );; ~~~; Then; ~~~ {.cpp}; array.Add(obj);; ~~~; is correct (obj comes from the process the array is pointed to; while; ~~~ {.cpp}; TObject *nobj = new TObject;; array.Add(nobj);; ~~~; is incorrect since 'nobj' was created in a different process than the; one the array is pointed to. In this case you will see error message:; ~~~ {.cpp}; Error in <TRefArray::AddAtAndExpand>: The object at 0x... is not; registered in the process the TRefArray point to; (pid = ProcessID../....); ~~~; When a TRefArray is Streamed, only the pointer unique id is written,; not the referenced object. TRefArray may be assigned to different; branches of one Tree or several Trees.; The branch containing the TRefArray can be read before or after the; array (eg TClonesArray, STL vector,..) of the referenced objects. See an example in $ROOTSYS/test/Event.h. ### RESTRICTIONS when using TRefArray. - Elements in a TRefArray cannot point to a TFile or TDirectory.; - All elements of a TRefArray must be set in the same process,; In particular, one cannot modify some elements of the array in; a different process. Use an array of TRef when one of the above restrictions is met. The number of TRef handled by a single process id is limited to; 16777215 (see TRef for more detail). When the TProcessID is full; (has seen 16777215 ob",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx:1505,message,message,1505,core/cont/src/TRefArray.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TRefArray.cxx,1,['message'],['message']
Integrability," base pointer). They can each be; // shared with a, non-virtual bases. These bases need not be the same. vfptrs; // always occur at offset 0. vbptrs can occur at an arbitrary offset and are; // placed after the lexicographically last non-virtual base. This placement; // is always before fields but can be in the middle of the non-virtual bases; // due to the two-pass layout scheme for non-virtual-bases.; // * Virtual bases sometimes require a 'vtordisp' field that is laid out before; // the virtual base and is used in conjunction with virtual overrides during; // construction and destruction. This is always a 4 byte value and is used as; // an alternative to constructor vtables.; // * vtordisps are allocated in a block of memory with size and alignment equal; // to the alignment of the completed structure (before applying __declspec(; // align())). The vtordisp always occur at the end of the allocation block,; // immediately prior to the virtual base.; // * vfptrs are injected after all bases and fields have been laid out. In; // order to guarantee proper alignment of all fields, the vfptr injection; // pushes all bases and fields back by the alignment imposed by those bases; // and fields. This can potentially add a significant amount of padding.; // vfptrs are always injected at offset 0.; // * vbptrs are injected after all bases and fields have been laid out. In; // order to guarantee proper alignment of all fields, the vfptr injection; // pushes all bases and fields back by the alignment imposed by those bases; // and fields. This can potentially add a significant amount of padding.; // vbptrs are injected immediately after the last non-virtual base as; // lexicographically ordered in the code. If this site isn't pointer aligned; // the vbptr is placed at the next properly aligned location. Enough padding; // is added to guarantee a fit.; // * The last zero sized non-virtual base can be placed at the end of the; // struct (potentially aliasing another object), or ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp:1752,inject,injected,1752,interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,1,['inject'],['injected']
Integrability," be believed, and <TT>APPROXIMATE ERROR</TT> means that they have; been calculated but there is reason to believe that they may not be; accurate. If no mitigating adjective is given, then at least MINUIT believes the; errors are accurate, although there is always a small chance that MINUIT; has been fooled. Some visible signs that MINUIT may have been fooled are:. 1. Warning messages produced during the minimization or error analysis. 2. Failure to find new minimum. 3. Value of <TT>EDM</TT> too big (estimated Distance to Minimum). 4. Correlation coefficients exactly equal to zero, unless some parameters; are known to be uncorrelated with the others. 5. Correlation coefficients very close to one (greater than 0.99). This; indicates both an exceptionally difficult problem, and one which has been; badly parameterised so that individual errors are not very meaningful; because they are so highly correlated. 6. Parameter at limit. This condition, signalled by a MINUIT warning; message, may make both the function minimum and parameter errors; unreliable. See the discussion above ``Getting the right parameter errors; with limits''. The best way to be absolutely sure of the errors, is to use; ``independent'' calculations and compare them, or compare the calculated; errors with a picture of the function. Theoretically, the covariance; matrix for a ``physical'' function must be positive-definite at the; minimum, although it may not be so for all points far away from the; minimum, even for a well-determined physical problem. Therefore, if MIGRAD; reports that it has found a non-positive-definite covariance matrix, this; may be a sign of one or more of the following:. ##### A non-physical region:. On its way to the minimum, MIGRAD may have traversed a region which has; unphysical behaviour, which is of course not a serious problem as long as; it recovers and leaves such a region. ##### An underdetermined problem:. If the matrix is not positive-definite even at the minimum, this m",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:9714,message,message,9714,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['message'],['message']
Integrability," be forwarded to the hasher type:; /// * decltype(std::declval<HasherT &>().final()) final(); /// * decltype(std::declval<HasherT &>().result()) result(); ///; /// From a user point of view, the interface provides the following:; /// * `template<typename T> add(const T &Value)`; /// The `add` function implements hashing of various types.; /// * `template <typename ItT> void addRange(ItT First, ItT Last)`; /// The `addRange` function is designed to aid hashing a range of values.; /// It explicitly adds the size of the range in the hash.; /// * `template <typename ItT> void addRangeElements(ItT First, ItT Last)`; /// The `addRangeElements` function is also designed to aid hashing a range of; /// values. In contrast to `addRange`, it **ignores** the size of the range,; /// behaving as if elements were added one at a time with `add`.; ///; /// User-defined `struct` types can participate in this interface by providing; /// an `addHash` templated function. See the associated template specialization; /// for details.; ///; /// This interface does not impose requirements on the hasher; /// `update(ArrayRef<uint8_t> Data)` method. We want to avoid collisions for; /// variable-size types; for example for; /// ```; /// builder.add({1});; /// builder.add({2, 3});; /// ```; /// and; /// ```; /// builder.add({1, 2});; /// builder.add({3});; /// ```; /// . Thus, specializations of `add` and `addHash` for variable-size types must; /// not assume that the hasher type considers the size as part of the hash; they; /// must explicitly add the size to the hash. See for example specializations; /// for `ArrayRef` and `StringRef`.; ///; /// Additionally, since types are eventually forwarded to the hasher's; /// `void update(ArrayRef<uint8_t>)` method, endianness plays a role in the hash; /// computation (for example when computing `add((int)123)`).; /// Specifiying a non-`native` `Endianness` template parameter allows to compute; /// stable hash across platforms with different endianness.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h:1518,interface,interface,1518,interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,1,['interface'],['interface']
Integrability," bread. The Job must define the; * tasks through its execution (evaluate_task), based on a task index argument.; *; * Classes inheriting from Job must implement the pure virtual methods:; * - void evaluate_task(std::size_t task); * - void send_back_task_result_from_worker(std::size_t task); * - void receive_task_result_on_master(const zmq::message_t & message); *; * An example/reference implementation can be found in test_Job.cxx.; *; * Most Jobs will also want to override the virtual update_state() function.; * This function can be used to send and receive state from master to worker.; * In the worker loop, when something is received over the ZeroMQ ""SUB"" socket,; * update_state() is called to put the received data into the right places,; * thus updating for instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to w",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:1086,Message,Message,1086,roofit/multiprocess/src/Job.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx,4,"['Message', 'message', 'protocol']","['Message', 'message', 'messages', 'protocol']"
Integrability," but more accurate than `SumW2Error`. See also https://arxiv.org/abs/1911.01303).; This option even correctly implements the case of extended likelihood fits; (see this [writeup on extended weighted fits](https://root.cern/files/extended_weighted_fits.pdf) that complements the paper linked before).; * <tr><td> `PrefitDataFraction(double fraction)`; * <td> Runs a prefit on a small dataset of size fraction*(actual data size). This can speed up fits; * by finding good starting values for the parameters for the actual fit.; * \warning Prefitting may give bad results when used in binned analysis.; *; * <tr><th><th> Options to control informational output; * <tr><td> `Verbose(bool flag)` <td> Flag controls if verbose output is printed (NLL, parameter changes during fit).; * <tr><td> `Timer(bool flag)` <td> Time CPU and wall clock consumption of fit steps, off by default.; * <tr><td> `PrintLevel(Int_t level)` <td> Set Minuit print level (-1 to 3, default is 1). At -1 all RooFit informational messages are suppressed as well.; * See RooMinimizer::PrintLevel for the meaning of the levels.; * <tr><td> `Warnings(bool flag)` <td> Enable or disable MINUIT warnings (enabled by default); * <tr><td> `PrintEvalErrors(Int_t numErr)` <td> Control number of p.d.f evaluation errors printed per likelihood evaluation.; * A negative value suppresses output completely, a zero value will only print the error count per p.d.f component,; * a positive value will print details of each error up to `numErr` messages per p.d.f component.; * <tr><td> `Parallelize(Int_t nWorkers)` <td> Control global parallelization settings. Arguments 1 and above enable the use of RooFit's parallel minimization; * backend and uses the number given as the number of workers to use in the parallelization. -1 also enables; * RooFit's parallel minimization backend, and sets the number of workers to the number of available processes.; * 0 disables this feature.; * In case parallelization is requested, this option implies `",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:6258,message,messages,6258,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['message'],['messages']
Integrability," can improve numeric stability in simultaneous fits with components with large likelihood values.; * <tr><td> **bin** <td> Offset likelihood bin-by-bin with a template histogram model based on the obersved data.; * This results in per-bin values that are all in the same order of magnitude, which reduces precision loss in the sum,; * which can drastically improve numeric stability.; * Furthermore, \f$2\cdot \text{NLL}\f$ defined like this is approximately chi-square distributed, allowing for goodness-of-fit tests.; * </table>; * <tr><td> `IntegrateBins(double precision)` <td> In binned fits, integrate the PDF over the bins instead of using the probability density at the bin centre.; * This can reduce the bias observed when fitting functions with high curvature to binned data.; * - precision > 0: Activate bin integration everywhere. Use precision between 0.01 and 1.E-6, depending on binning.; * Note that a low precision such as 0.01 might yield identical results to 1.E-4, since the integrator might reach 1.E-4 already in its first; * integration step. If lower precision is desired (more speed), a RooBinSamplingPdf has to be created manually, and its integrator; * has to be manipulated directly.; * - precision = 0: Activate bin integration only for continuous PDFs fit to a RooDataHist.; * - precision < 0: Deactivate.; * \see RooBinSamplingPdf; * <tr><td> `ModularL(bool flag)` <td> Enable or disable modular likelihoods, which will become the default in a future release.; * This does not change any user-facing code, but only enables a different likelihood class in the back-end. Note that this; * should be set to true for parallel minimization of likelihoods!; * Note that it is currently not recommended to use Modular likelihoods without any parallelization enabled in the minimization, since; * some features such as offsetting might not yet work in this case.; * </table>; */; /** @brief Protected implementation of the NLL creation routine.; *; * This virtual function can ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:9482,integrat,integrator,9482,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['integrat'],['integrator']
Integrability," controlled by DynamicExprTransformer comes; /// into play. It marks all unknown symbols as dependent as if they are; /// templates and are going to be resolved at first instantiation, with the; /// only difference that an instantiation never happens. The advantage is that; /// the unknown symbols are not diagnosed but the disadvantage is that; /// somebody needs to transform them into valid expressions with valid types.; ///; /// 2. Replace all dependent symbols - all artificially dependent symbols need; /// to be replaced with appropriate valid symbols in order the compiler to; /// produce executable machine code. The DynamicExprTransformer walks up all; /// statements and declarations that might be possibly marked earlier as; /// dependent and replaces them with valid expression, which preserves the; /// meant behavior. Main implementation goal is to replace the as little; /// as possible part of the statement. The replacement is done immediately; /// after the expected type can be deduced.; ///; /// 2.1. EvaluateT - this is a templated function, which is put at the; /// place of the dependent expression. It will be called at runtime and it; /// will use the runtime instance of the interpreter (cling interprets itself); /// to evaluate the replaced expression. The template parameter of the; /// function carries the expected expression type. If unknown symbol is; /// encountered as a right-hand-side of an assignment one can claim that; /// the type of the unknown expression should be compatible with the type of; /// the left-hand-side.; ///; /// 2.2 LifetimeHandler - in some more complex situation in order to preserve; /// the behavior the expression must be replaced with more complex structures.; ///; /// 3. Evaluate interface - this is the core function in the interpreter,; /// which does the delayed evaluation. It uses a callback function, which; /// should be reimplemented in the subsystem that provides the runtime types; /// and addresses of the expressions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h:2210,depend,dependent,2210,interpreter/cling/lib/Interpreter/DynamicLookup.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.h,2,"['depend', 'interface']","['dependent', 'interface']"
Integrability," data as it is unnecessary for the; // purposes of validation, with the synthesis being required only by a proper; // unwinder.; //; // For functions that are large or do not match canonical forms, the data is; // split up into two portions, with the actual data residing in the ""exception; // data"" table (.xdata) with a reference to the entry from the ""procedure data""; // (.pdata) entry.; //; // The exception data contains information about the frame setup, all of the; // epilogue scopes (for functions for which there are multiple exit points) and; // the associated exception handler. Additionally, the entry contains byte-code; // describing how to unwind the function (c.f. Decoder::decodeOpcodes).; //; // +---------------------------------------+; // | Function Entry Address |; // +---------------------------------------+; // | Exception Data Entry Address |; // +---------------------------------------+; //; // This layout is parsed by Decoder::dumpUnpackedEntry. Such an entry must; // first resolve the exception data entry address. This structure; // (ExceptionDataRecord) has a variable sized header; // (c.f. ARM::WinEH::HeaderWords) and encodes most of the same information as; // the packed form. However, because this information is insufficient to; // synthesize the unwinding, there are associated unwinding bytecode which make; // up the bulk of the Decoder.; //; // The decoder itself is table-driven, using the first byte to determine the; // opcode and dispatching to the associated printing routine. The bytecode; // itself is a variable length instruction encoding that can fully describe the; // state of the stack and the necessary operations for unwinding to the; // beginning of the frame.; //; // The byte-code maintains a 1-1 instruction mapping, indicating both the width; // of the instruction (Thumb2 instructions are variable length, 16 or 32 bits; // wide) allowing the program to unwind from any point in the prologue, body, or; // epilogue of the function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-readobj/ARMWinEHPrinter.cpp:2764,rout,routine,2764,interpreter/llvm-project/llvm/tools/llvm-readobj/ARMWinEHPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-readobj/ARMWinEHPrinter.cpp,1,['rout'],['routine']
Integrability," data.; ///; /// ### Input:; /// a,b: One-dimensional arrays of length na, nb, respectively.; /// The elements of a and b must be given in ascending order.; /// option is a character string to specify options; /// ""D"" Put out a line of ""Debug"" printout; /// ""M"" Return the Maximum Kolmogorov distance instead of prob; ///; /// ### Output:; /// The returned value prob is a calculated confidence level which gives a; /// statistical test for compatibility of a and b.; /// Values of prob close to zero are taken as indicating a small probability; /// of compatibility. For two point sets drawn randomly from the same parent; /// distribution, the value of prob should be uniformly distributed between; /// zero and one.; /// in case of error the function return -1; /// If the 2 sets have a different number of points, the minimum of; /// the two sets is used.; ///; /// ### Method:; /// The Kolmogorov test is used. The test statistic is the maximum deviation; /// between the two integrated distribution functions, multiplied by the; /// normalizing factor (rdmax*sqrt(na*nb/(na+nb)).; ///; /// Code adapted by Rene Brun from CERNLIB routine TKOLMO (Fred James); /// (W.T. Eadie, D. Drijard, F.E. James, M. Roos and B. Sadoulet,; /// Statistical Methods in Experimental Physics, (North-Holland,; /// Amsterdam 1971) 269-271); ///; /// ### Method Improvement by Jason A Detwiler (JADetwiler@lbl.gov); ///; /// The nuts-and-bolts of the TMath::KolmogorovTest() algorithm is a for-loop; /// over the two sorted arrays a and b representing empirical distribution; /// functions. The for-loop handles 3 cases: when the next points to be; /// evaluated satisfy a>b, a<b, or a=b:; ///; /// ~~~ {.cpp}; /// for (Int_t i=0;i<na+nb;i++) {; /// if (a[ia-1] < b[ib-1]) {; /// rdiff -= sa;; /// ia++;; /// if (ia > na) {ok = kTRUE; break;}; /// } else if (a[ia-1] > b[ib-1]) {; /// rdiff += sb;; /// ib++;; /// if (ib > nb) {ok = kTRUE; break;}; /// } else {; /// rdiff += sb - sa;; /// ia++;; /// ib++;; /// if ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx:1299,integrat,integrated,1299,math/mathcore/src/TMath.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TMath.cxx,1,['integrat'],['integrated']
Integrability," deflateReset, and before any call of deflate. When doing raw deflate, this; function must be called either before any call of deflate, or immediately; after the completion of a deflate block, i.e. after all input has been; consumed and all output has been delivered when using any of the flush; options Z_BLOCK, Z_PARTIAL_FLUSH, Z_SYNC_FLUSH, or Z_FULL_FLUSH. The; compressor and decompressor must use exactly the same dictionary (see; inflateSetDictionary). The dictionary should consist of strings (byte sequences) that are likely; to be encountered later in the data to be compressed, with the most commonly; used strings preferably put towards the end of the dictionary. Using a; dictionary is most useful when the data to be compressed is short and can be; predicted with good accuracy; the data can then be compressed better than; with the default empty dictionary. Depending on the size of the compression data structures selected by; deflateInit or deflateInit2, a part of the dictionary may in effect be; discarded, for example if the dictionary is larger than the window size; provided in deflateInit or deflateInit2. Thus the strings most likely to be; useful should be put at the end of the dictionary, not at the front. In; addition, the current implementation of deflate will use at most the window; size minus 262 bytes of the provided dictionary. Upon return of this function, strm->adler is set to the adler32 value; of the dictionary; the decompressor may later use this value to determine; which dictionary has been used by the compressor. (The adler32 value; applies to the whole dictionary even if only a subset of the dictionary is; actually used by the compressor.) If a raw deflate was requested, then the; adler32 value is not computed and strm->adler is not set. deflateSetDictionary returns Z_OK if success, or Z_STREAM_ERROR if a; parameter is invalid (e.g. dictionary being Z_NULL) or the stream state is; inconsistent (for example if deflate has already been called for",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1092,Depend,Depending,1092,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['Depend'],['Depending']
Integrability," delegate N ;; Where will this delegate to?; // catch ;; N == 0; // end; // end ;; N == 1 (invalid; will not be generated); // delegate ;; N == 2; // catch ;; N == 3; // end; // ;; N == 4 (to caller); // 1. When an instruction may throw, but the EH pad it will unwind to can be; // different from the original CFG.; //; // Example: we have the following CFG:; // bb0:; // call @foo ; if it throws, unwind to bb2; // bb1:; // call @bar ; if it throws, unwind to bb3; // bb2 (ehpad):; // catch; // ...; // bb3 (ehpad); // catch; // ...; //; // And the CFG is sorted in this order. Then after placing TRY markers, it; // will look like: (BB markers are omitted); // try; // try; // call @foo; // call @bar ;; if it throws, unwind to bb3; // catch ;; ehpad (bb2); // ...; // end_try; // catch ;; ehpad (bb3); // ...; // end_try; //; // Now if bar() throws, it is going to end up ip in bb2, not bb3, where it; // is supposed to end up. We solve this problem by wrapping the mismatching; // call with an inner try-delegate that rethrows the exception to the right; // 'catch'.; //; // try; // try; // call @foo; // try ;; (new); // call @bar; // delegate 1 (bb3) ;; (new); // catch ;; ehpad (bb2); // ...; // end_try; // catch ;; ehpad (bb3); // ...; // end_try; //; // ---; // 2. The same as 1, but in this case an instruction unwinds to a caller; // function and not another EH pad.; //; // Example: we have the following CFG:; // bb0:; // call @foo ; if it throws, unwind to bb2; // bb1:; // call @bar ; if it throws, unwind to caller; // bb2 (ehpad):; // catch; // ...; //; // And the CFG is sorted in this order. Then after placing TRY markers, it; // will look like:; // try; // call @foo; // call @bar ;; if it throws, unwind to caller; // catch ;; ehpad (bb2); // ...; // end_try; //; // Now if bar() throws, it is going to end up ip in bb2, when it is supposed; // throw up to the caller. We solve this problem in the same way, but in this; // case 'delegate's immediate argument is the number of ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyCFGStackify.cpp:1946,wrap,wrapping,1946,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyCFGStackify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyCFGStackify.cpp,1,['wrap'],['wrapping']
Integrability," existence of setThrew and setTempRet0/getTempRet0 functions; /// at link time. setThrew exists in Emscripten's compiler-rt:; ///; /// void setThrew(uintptr_t threw, int value) {; /// if (__THREW__ == 0) {; /// __THREW__ = threw;; /// __threwValue = value;; /// }; /// }; //; /// setTempRet0 is called from __cxa_find_matching_catch() in JS glue code.; /// In exception handling, getTempRet0 indicates the type of an exception; /// caught, and in setjmp/longjmp, it means the second argument to longjmp; /// function.; ///; /// 3) Lower; /// invoke @func(arg1, arg2) to label %invoke.cont unwind label %lpad; /// into; /// __THREW__ = 0;; /// call @__invoke_SIG(func, arg1, arg2); /// %__THREW__.val = __THREW__;; /// __THREW__ = 0;; /// if (%__THREW__.val == 1); /// goto %lpad; /// else; /// goto %invoke.cont; /// SIG is a mangled string generated based on the LLVM IR-level function; /// signature. After LLVM IR types are lowered to the target wasm types,; /// the names for these wrappers will change based on wasm types as well,; /// as in invoke_vi (function takes an int and returns void). The bodies of; /// these wrappers will be generated in JS glue code, and inside those; /// wrappers we use JS try-catch to generate actual exception effects. It; /// also calls the original callee function. An example wrapper in JS code; /// would look like this:; /// function invoke_vi(index,a1) {; /// try {; /// Module[""dynCall_vi""](index,a1); // This calls original callee; /// } catch(e) {; /// if (typeof e !== 'number' && e !== 'longjmp') throw e;; /// _setThrew(1, 0); // setThrew is called here; /// }; /// }; /// If an exception is thrown, __THREW__ will be set to true in a wrapper,; /// so we can jump to the right BB based on this value.; ///; /// 4) Lower; /// %val = landingpad catch c1 catch c2 catch c3 ...; /// ... use %val ...; /// into; /// %fmc = call @__cxa_find_matching_catch_N(c1, c2, c3, ...); /// %val = {%fmc, getTempRet0()}; /// ... use %val ...; /// Here N is a number c",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp:4044,wrap,wrappers,4044,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,1,['wrap'],['wrappers']
Integrability," existing replacements. Callers must; /// explicitly check the Error returned, and the returned error can be; /// converted to a string message with `llvm::toString()`. This prevents users; /// from adding order-dependent replacements. To control the order in which; /// order-dependent replacements are applied, use merge({R}) with R referring; /// to the changed code after applying all existing replacements.; /// Two replacements A and B are considered order-independent if applying them; /// in either order produces the same result. Note that the range of the; /// replacement that is applied later still refers to the original code.; /// These include (but not restricted to) replacements that:; /// - don't overlap (being directly adjacent is fine) and; /// - are overlapping deletions.; /// - are insertions at the same offset and applying them in either order; /// has the same effect, i.e. X + Y = Y + X when inserting X and Y; /// respectively.; /// - are identical replacements, i.e. applying the same replacement twice; /// is equivalent to applying it once.; /// Examples:; /// 1. Replacement A(0, 0, ""a"") and B(0, 0, ""aa"") are order-independent since; /// applying them in either order gives replacement (0, 0, ""aaa"").; /// However, A(0, 0, ""a"") and B(0, 0, ""b"") are order-dependent since; /// applying A first gives (0, 0, ""ab"") while applying B first gives (B, A,; /// ""ba"").; /// 2. Replacement A(0, 2, ""123"") and B(0, 2, ""123"") are order-independent; /// since applying them in either order gives (0, 2, ""123"").; /// 3. Replacement A(0, 3, ""123"") and B(2, 3, ""321"") are order-independent; /// since either order gives (0, 5, ""12321"").; /// 4. Replacement A(0, 3, ""ab"") and B(0, 3, ""ab"") are order-independent since; /// applying the same replacement twice is equivalent to applying it once.; /// Replacements with offset UINT_MAX are special - we do not detect conflicts; /// for such replacements since users may add them intentionally as a special; /// category of replacements.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Core/Replacement.h:1694,depend,dependent,1694,interpreter/llvm-project/clang/include/clang/Tooling/Core/Replacement.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Core/Replacement.h,1,['depend'],['dependent']
Integrability," extracted; /// \param[in] axisSteering (default=nullptr) detailed steering within the extracted; /// distribution; /// \param[in] useAxisBinning (default=true) if set to true, try to extract a histogram with; /// proper binning and axis labels; ///; /// return value: pointer to a new histogram. If; /// <b>useAxisBinning</b> is set and if the selected distribution fits; /// into a root histogram (1,2,3 dimensions) then return a histogram; /// with the proper binning on each axis. Otherwise, return a 1D; /// histogram with equidistant binning. If the histogram title is; /// zero, a title is assigned automatically.; ///; /// The <b>axisSteering</b> is defines as follows: ""axis[mode];axis[mode];...""; /// where:; /// <ul>; /// <li>axis = name of an axis or *</li>; /// <li>mode = any combination of the letters CUO0123456789; /// <ul>; /// <li>C collapse axis into one bin (add up results). If; /// any of the numbers 0-9 are given in addition, only these bins are added up.; /// Here bins are counted from zero, whereas in root, bins are counted; /// from 1. Obviously, this only works for up to 10 bins.</li>; /// <li>U discarde underflow bin</li>; /// <li>O discarde overflow bin</li>; /// </ul>; /// </ul>; /// examples: imagine the binning has two axis, named x and y.; /// <ul>; /// <li>""*[UO]"" exclude underflow and overflow bins for all axis.; /// So here a TH2 is returned but all undeflow and overflow bins are empty</li>; /// <li>""x[UOC123]"" integrate over the variable x but only using the; /// bins 1,2,3 and not the underflow and overflow in x.; /// Here a TH1 is returned, the axis is labelled ""y"" and; /// the underflow and overflow (in y) are filled. However only the x-bins; /// 1,2,3 are used to determine the content.</li>; /// <li>""x[C];y[UO]"" integrate over the variable x, including; /// underflow and overflow but exclude underflow and overflow in y.; /// Here a TH1 is returned, the axis is labelled ""y"". The underflow; /// and overflow in y are empty.</li>; /// </ul>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx:1797,integrat,integrate,1797,hist/unfold/src/TUnfoldDensity.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldDensity.cxx,2,['integrat'],['integrate']
Integrability," fFinalResult; }. // Called at the beginning of the event loop.; void Initialize() {}. // Called at the beginning of each processing task.; void InitTask(TTreeReader *, int) {}. /// Called at every entry.; void Exec(unsigned int slot); {; fPerThreadResults[slot]++;; }. // Called at the end of the event loop.; void Finalize(); {; *fFinalResult = std::accumulate(fPerThreadResults.begin(), fPerThreadResults.end(), 0);; }. // Called by RDataFrame to retrieve the name of this action.; std::string GetActionName() const { return ""MyCounter""; }; };. int main() {; ROOT::RDataFrame df(10);; ROOT::RDF::RResultPtr<int> resultPtr = df.Book<>(MyCounter{df.GetNSlots()}, {});; // The GetValue call triggers the event loop; std::cout << ""Number of processed entries: "" << resultPtr.GetValue() << std::endl;; }; ~~~. See the Book() method for more information and [this tutorial](https://root.cern/doc/master/df018__customActions_8C.html); for a more complete example. #### Injecting arbitrary code in the event loop with Foreach() and ForeachSlot(). Foreach() takes a callable (lambda expression, free function, functor...) and a list of columns and; executes the callable on the values of those columns for each event that passes all upstream selections.; It can be used to perform actions that are not already available in the interface. For example, the following snippet; evaluates the root mean square of column ""x"":; ~~~{.cpp}; // Single-thread evaluation of RMS of column ""x"" using Foreach; double sumSq = 0.;; unsigned int n = 0;; df.Foreach([&sumSq, &n](double x) { ++n; sumSq += x*x; }, {""x""});; std::cout << ""rms of x: "" << std::sqrt(sumSq / n) << std::endl;; ~~~; In multi-thread runs, users are responsible for the thread-safety of the expression passed to Foreach():; thread will execute the expression concurrently.; The code above would need to employ some resource protection mechanism to ensure non-concurrent writing of `rms`; but; this is probably too much head-scratch for such a simple ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:69192,Inject,Injecting,69192,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['Inject'],['Injecting']
Integrability," file. If you are writing the file, fill in the information; * you want to put into the PNG file, using png_set_*() functions, then; * call png_write_info().; *; * The names chosen should be very close to the PNG specification, so; * consult that document for information about the meaning of each field.; *; * With libpng < 0.95, it was only possible to directly set and read the; * the values in the png_info_struct, which meant that the contents and; * order of the values had to remain fixed. With libpng 0.95 and later,; * however, there are now functions that abstract the contents of; * png_info_struct from the application, so this makes it easier to use; * libpng with dynamic libraries, and even makes it possible to use; * libraries that don't have all of the libpng ancillary chunk-handing; * functionality. In libpng-1.5.0 this was moved into a separate private; * file that is not visible to applications.; *; * The following members may have allocated storage attached that should be; * cleaned up before the structure is discarded: palette, trans, text,; * pcal_purpose, pcal_units, pcal_params, hist, iccp_name, iccp_profile,; * splt_palettes, scal_unit, row_pointers, and unknowns. By default, these; * are automatically freed when the info structure is deallocated, if they were; * allocated internally by libpng. This behavior can be changed by means; * of the png_data_freer() function.; *; * More allocation details: all the chunk-reading functions that; * change these members go through the corresponding png_set_*; * functions. A function to clear these members is available: see; * png_free_data(). The png_set_* functions do not depend on being; * able to point info structure members to any of the storage they are; * passed (they make their own copies), EXCEPT that the png_set_text; * functions use the same storage passed to them in the text_ptr or; * itxt_ptr structure argument, and the png_set_rows and png_set_unknowns; * functions do not make their own copies.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pnginfo.h:2288,depend,depend,2288,graf2d/asimage/src/libAfterImage/libpng/pnginfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pnginfo.h,1,['depend'],['depend']
Integrability," func is executed as many times as needed by a pool of; /// n workers, where n typically defaults to the number of available cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included. ROOT::TExecutorCRTP derived classes; /// never delete what they return, they simply forget it.\n; ///; /// \param func; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard vector, a ROOT::TSeq of integer type or an initializer list for the second signature.; /// An integer only for the first.\n; /// \endparblock; ///; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; ///; /// #### Return value:; /// An std::vector. The elements in the container; /// will be the objects returned by func. The ordering of the elements corresponds to the ordering of; /// the arguments.; ///; /// ### ROOT::TExecutorCRTP<SubC>::Reduce; /// These set of methods combine all elements from a std::vector into a single value.; /// \param redfunc; /// \parblock; /// a callable object, such as a lambda expression, an std::function, a; /// functor object or a function that takes an std::vector and combines all its elements into a single result.\n; /// \endparblock; /// \param [args]; /// \parblock; /// a standard vector\n; /// \endparblock; ///; /// ### ROOT::TExecutorCRTP<SubC>::MapReduce; /// This set of methods behaves exactly like Map, but takes an additional; /// function as a third argument. This function is applied to the set of; /// objects retu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx:1729,wrap,wrapped,1729,core/base/inc/ROOT/TExecutorCRTP.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/TExecutorCRTP.hxx,1,['wrap'],['wrapped']
Integrability," has some additional limitation that make; // it can only run after SIAnnotateControlFlow.; //; // To achieve optimal code generation for AMDGPU, we assume that uniformity; // analysis reports the PHI in join block of divergent branch as uniform if; // it has one unique uniform value plus additional undefined/poisoned incoming; // value. That is to say the later compiler pipeline will ensure such PHI always; // return uniform value and ensure it work correctly. Let's take a look at two; // typical patterns in structured CFG that need to be taken care: (In both; // patterns, block %if terminate with divergent branch.); //; // Pattern A: Block with undefined incoming value dominates defined predecessor; // %if; // | \; // | %then; // | /; // %endif: %phi = phi [%undef, %if], [%uniform, %then]; //; // Pattern B: Block with defined incoming value dominates undefined predecessor; // %if; // | \; // | %then; // | /; // %endif: %phi = phi [%uniform, %if], [%undef, %then]; //; // For pattern A, by reporting %phi as uniform, the later pipeline need to make; // sure it be handled correctly. The backend usually allocates a scalar register; // and if any thread in a wave takes %then path, the scalar register will get; // the %uniform value.; //; // For pattern B, we will replace the undef operand with the other defined value; // in this pass. So the scalar register allocated for such PHI will get correct; // liveness. Without this transformation, the scalar register may be overwritten; // in the %then block.; //; // Limitation note:; // If the join block of divergent threads is a loop header, the pass cannot; // handle it correctly right now. For below case, the undef in %phi should also; // be rewritten. Currently we depend on SIAnnotateControlFlow to split %header; // block to get a separate join block, then we can rewrite the undef correctly.; // %if; // | \; // | %then; // | /; // -> %header: %phi = phi [%uniform, %if], [%undef, %then], [%uniform2, %header]; // | |; // \---",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURewriteUndefForPHI.cpp:2309,depend,depend,2309,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURewriteUndefForPHI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURewriteUndefForPHI.cpp,1,['depend'],['depend']
Integrability," have the name; NameSpace@@BaseClass as `:` is a reserved pathname character on some; operating systems. Macros not beginning with 'P' and ending with "".C""; are ignored. These macros typically look like:; ~~~ {.cpp}; void P10_TDCacheFile(); {; gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; ""DCache"", ""TDCacheFile(const char*,Option_t*)"");; }; ~~~; Plugin handlers can also be defined via resources in the .rootrc; file. Although now deprecated this method still works for backward; compatibility, e.g.:; ~~~ {.cpp}; Plugin.TSQLServer: ^mysql: TMySQLServer MySQL ""<constructor>""; +Plugin.TSQLServer: ^pgsql: TPgSQLServer PgSQL ""<constructor>""; Plugin.TVirtualFitter: * TFitter Minuit ""TFitter(Int_t)""; ~~~; Where the + in front of Plugin.TSQLServer says that it extends the; existing definition of TSQLServer, useful when there is more than; one plugin that can extend the same base class. The ""<constructor>""; should be the constructor or a static method that generates an; instance of the specified class. Global methods should start with; ""::"" in their name, like ""::CreateFitter()"".; Instead of being a shared library a plugin can also be a CINT; script, so instead of libDialog.so one can have Dialog.C.; The * is a placeholder in case there is no need for a URI to; differentiate between different plugins for the same base class.; For the default plugins see $ROOTSYS/etc/system.rootrc. Plugin handlers can also be registered at run time, e.g.:; ~~~ {.cpp}; gPluginMgr->AddHandler(""TSQLServer"", ""^sqlite:"",; ""TSQLiteServer"", ""RSQLite"",; ""TSQLiteServer(const char*,const char*,const char*)"");; ~~~; A list of currently defined handlers can be printed using:; ~~~ {.cpp}; gPluginMgr->Print(); // use option=""a"" to see ctors; ~~~; The use of the plugin library manager removes all textual references; to hard-coded class and library names and the resulting dependencies; in the base classes. The plugin manager is used to extend a.o.; TFile, TSQLServer, TGrid, etc. functionality.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:3476,depend,dependencies,3476,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,1,['depend'],['dependencies']
Integrability," if the user has installed a concurrent dispatcher.; //; // We satisfy these constraints by implementing a bootstrap phase during which; // allocation actions generated by MachOPlatform are appended to a list of; // deferred allocation actions, rather than to the graphs themselves. At the; // end of the bootstrap process the deferred actions are attached to a final; // ""complete-bootstrap"" graph that causes them to be run.; //; // The bootstrap steps are as follows:; //; // 1. Request the graph containing the mach header. This graph is guaranteed; // not to have any metadata so the fact that the registration functions; // are not available yet is not a problem.; //; // 2. Look up the registration functions and discard the results. This will; // trigger linking of the graph containing these functions, and; // consequently any graphs that it depends on. We do not use the lookup; // result to find the addresses of the functions requested (as described; // above the lookup will return too late for that), instead we capture the; // addresses in a post-allocation pass injected by the platform runtime; // during bootstrap only.; //; // 3. During bootstrap the MachOPlatformPlugin keeps a count of the number of; // graphs being linked (potentially concurrently), and we block until all; // of these graphs have completed linking. This is to avoid a race on the; // deferred-actions vector: the lookup for the runtime registration; // functions may return while some functions (those that are being; // incidentally linked in, but aren't reachable via the runtime functions); // are still being linked, and we need to capture any allocation actions; // for this incidental code before we proceed.; //; // 4. Once all active links are complete we transfer the deferred actions to; // a newly added CompleteBootstrap graph and then request a symbol from; // the CompleteBootstrap graph to trigger materialization. This will cause; // all deferred actions to be run, and once this lookup return",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MachOPlatform.cpp:1989,inject,injected,1989,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MachOPlatform.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/MachOPlatform.cpp,1,['inject'],['injected']
Integrability," including. In addition to provide the API for function minimization (via ROOT::Math::Minimizer::Minimize) the Minimizer class provides:; - the interface for setting the function to be minimized. The objective function passed to the Minimizer must implement the multi-dimensional generic interface; ROOT::Math::IBaseFunctionMultiDim. If the function provides gradient calculation (e.g. implementing the ROOT::Math::IGradientFunctionMultiDim interface); the gradient will be used by the Minimizer class, when needed. There are convenient classes for the users to wrap their own functions in this required interface for minimization.; These are the `ROOT::Math::Functor` class and the `ROOT::Math::GradFunctor` class for wrapping functions providing both evaluation and gradient. Some methods, like Fumili, Fumili2 and GSLMultiFit are; specialized method for least-square and also likelihood minimizations. They require then that the given function implements in addition; the `ROOT::Math::FitMethodFunction` interface.; - The interface for setting the initial values for the function variables (which are the parameters in; of the model function in case of solving for fitting) and specifying their limits.; - The interface to set and retrieve basic minimization parameters. These parameter are controlled by the class `ROOT::Math::MinimizerOptions`.; When no parameters are specified the default ones are used. Specific Minimizer options can also be passed via the `MinimizerOptions` class.; For the list of the available option parameter one must look at the documentation of the corresponding derived class.; - The interface to retrieve the result of minimization ( minimum X values, function value, gradient, error on the minimum, etc...); - The interface to perform a Scan, Hesse or a Contour plot (for the minimizers that support this, i.e. Minuit and Minuit2). An example on how to use this interface is the tutorial NumericalMinimization.C in the tutorials/fit directory. @ingroup MultiMin; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:3090,interface,interface,3090,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,5,['interface'],['interface']
Integrability," input a pointer to the fitted parameter values; /// and a pointer the covariance matrix from the fit. These pointers should be retrieved from the; /// previously performed fit using the TFitResult class.; /// Note that to get the TFitResult, te fit should be done using the fit option `S`.; /// Example:; /// ~~~~{.cpp}; /// TFitResultPtr r = histo->Fit(func, ""S"");; /// func->IntegralError(x1,x2,r->GetParams(), r->GetCovarianceMatrix()->GetMatrixArray() );; /// ~~~~; ///; /// IMPORTANT NOTE1:; ///; /// A null pointer to the parameter values vector and to the covariance matrix can be passed.; /// In this case, when the parameter values pointer is null, the parameter values stored in this; /// TF1 function object are used in the integral error computation.; /// When the poassed pointer to the covariance matrix is null, a covariance matrix from the last fit is retrieved; /// from a global fitter instance when it exists. Note that the global fitter instance; /// esists only when ROOT is not running with multi-threading enabled (ROOT::IsImplicitMTEnabled() == True).; /// When the ovariance matrix from the last fit cannot be retrieved, an error message is printed and a zero value is; /// returned.; ///; ///; /// IMPORTANT NOTE2:; ///; /// When no covariance matrix is passed and in the meantime a fit is done; /// using another function, the routine will signal an error and it will return zero only; /// when the number of fit parameter is different than the values stored in TF1 (TF1::GetNpar() ).; /// In the case that npar is the same, an incorrect result is returned.; ///; /// IMPORTANT NOTE3:; ///; /// The user must pass a pointer to the elements of the full covariance matrix; /// dimensioned with the right size (npar*npar), where npar is the total number of parameters (TF1::GetNpar()),; /// including also the fixed parameters. The covariance matrix must be retrieved from the TFitResult class as; /// shown above and not from TVirtualFitter::GetCovarianceMatrix() function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:1451,message,message,1451,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,2,"['message', 'rout']","['message', 'routine']"
Integrability," is:; /// * void update(ArrayRef<uint8_t> Data); ///; /// Additionally, the following methods will be forwarded to the hasher type:; /// * decltype(std::declval<HasherT &>().final()) final(); /// * decltype(std::declval<HasherT &>().result()) result(); ///; /// From a user point of view, the interface provides the following:; /// * `template<typename T> add(const T &Value)`; /// The `add` function implements hashing of various types.; /// * `template <typename ItT> void addRange(ItT First, ItT Last)`; /// The `addRange` function is designed to aid hashing a range of values.; /// It explicitly adds the size of the range in the hash.; /// * `template <typename ItT> void addRangeElements(ItT First, ItT Last)`; /// The `addRangeElements` function is also designed to aid hashing a range of; /// values. In contrast to `addRange`, it **ignores** the size of the range,; /// behaving as if elements were added one at a time with `add`.; ///; /// User-defined `struct` types can participate in this interface by providing; /// an `addHash` templated function. See the associated template specialization; /// for details.; ///; /// This interface does not impose requirements on the hasher; /// `update(ArrayRef<uint8_t> Data)` method. We want to avoid collisions for; /// variable-size types; for example for; /// ```; /// builder.add({1});; /// builder.add({2, 3});; /// ```; /// and; /// ```; /// builder.add({1, 2});; /// builder.add({3});; /// ```; /// . Thus, specializations of `add` and `addHash` for variable-size types must; /// not assume that the hasher type considers the size as part of the hash; they; /// must explicitly add the size to the hash. See for example specializations; /// for `ArrayRef` and `StringRef`.; ///; /// Additionally, since types are eventually forwarded to the hasher's; /// `void update(ArrayRef<uint8_t>)` method, endianness plays a role in the hash; /// computation (for example when computing `add((int)123)`).; /// Specifiying a non-`native` `Endianness` ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h:1381,interface,interface,1381,interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/HashBuilder.h,1,['interface'],['interface']
Integrability," is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (version $2) has been detected. It is recommended to uninstall it if you intend to use the same installation directory. Do you want to proceed with the installation anyway?"" IDYES done IDNO 0; Abort; done:; ClearErrors; Pop $2; Pop $1; Pop $0; FunctionEnd; '''",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:1408,Message,MessageBox,1408,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,2,['Message'],['MessageBox']
Integrability," it; * There are two ways to use this class:; * - Manually wrap a PDF:; * ```; * RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; * binSampler.fitTo(data);; * ```; * When a PDF is wrapped with a RooBinSamplingPDF, just use the bin sampling PDF instead of the original one for fits; * or plotting etc.; * \note The binning will be taken from the observable. Make sure that this binning is the same as the one of the dataset that should be fit.; * Use RooRealVar::setBinning() to adapt it.; * - Instruct test statistics to carry out this wrapping automatically:; * ```; * pdf.fitTo(data, IntegrateBins(<precision>));; * ```; * This method is especially useful when used with a simultaneous PDF, since each component will automatically be wrapped,; * depending on the value of `precision`:; * - `precision < 0.`: None of the PDFs are touched, bin sampling is off.; * - `precision = 0.`: Continuous PDFs that are fit to a RooDataHist are wrapped into a RooBinSamplingPdf. The target precision; * forwarded to the integrator is 1.E-4 (the default argument of the constructor).; * - `precision > 0.`: All continuous PDFs are automatically wrapped into a RooBinSamplingPdf, regardless of what data they are; * fit to (see next paragraph). The same `'precision'` is used for all integrators.; *; * ### Simulating a binned fit using RooDataSet; * Some frameworks use unbinned data (RooDataSet) to simulate binned datasets. By adding one entry for each bin centre with the; * appropriate weight, one can achieve the same result as fitting with RooDataHist. In this case, however, RooFit cannot; * auto-detect that a binned fit is running, and that an integration over the bin is desired (note that there are no bins to; * integrate over in this kind of dataset).; *; * In this case, `IntegrateBins(>0.)` needs to be used, and the desired binning needs to be assigned to the observable; * of the dataset:; * ```; * RooRealVar x(""x"", ""x",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:2731,wrap,wrapped,2731,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['wrap'],['wrapped']
Integrability," method is especially useful when used with a simultaneous PDF, since each component will automatically be wrapped,; * depending on the value of `precision`:; * - `precision < 0.`: None of the PDFs are touched, bin sampling is off.; * - `precision = 0.`: Continuous PDFs that are fit to a RooDataHist are wrapped into a RooBinSamplingPdf. The target precision; * forwarded to the integrator is 1.E-4 (the default argument of the constructor).; * - `precision > 0.`: All continuous PDFs are automatically wrapped into a RooBinSamplingPdf, regardless of what data they are; * fit to (see next paragraph). The same `'precision'` is used for all integrators.; *; * ### Simulating a binned fit using RooDataSet; * Some frameworks use unbinned data (RooDataSet) to simulate binned datasets. By adding one entry for each bin centre with the; * appropriate weight, one can achieve the same result as fitting with RooDataHist. In this case, however, RooFit cannot; * auto-detect that a binned fit is running, and that an integration over the bin is desired (note that there are no bins to; * integrate over in this kind of dataset).; *; * In this case, `IntegrateBins(>0.)` needs to be used, and the desired binning needs to be assigned to the observable; * of the dataset:; * ```; * RooRealVar x(""x"", ""x"", 0., 5.);; * x.setBins(10);; *; * // <create dataset and model>; *; * model.fitTo(data, IntegrateBins(>0.));; * ```; *; * \see RooAbsPdf::fitTo(); * \see IntegrateBins(); *; * \note This feature is currently limited to one-dimensional PDFs.; *; *; * \htmlonly <style>div.image img[src=""RooBinSamplingPdf_OFF.png""]{width:12cm;}</style> \endhtmlonly; * \htmlonly <style>div.image img[src=""RooBinSamplingPdf_ON.png"" ]{width:12cm;}</style> \endhtmlonly; * <table>; * <tr><th> Binned fit without %RooBinSamplingPdf <th> Binned fit with %RooBinSamplingPdf </td></tr>; * <tr><td> \image html RooBinSamplingPdf_OFF.png """"; * </td>; * <td> \image html RooBinSamplingPdf_ON.png """"; * </td></tr>; * </table>; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:3438,integrat,integration,3438,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,5,"['Integrat', 'integrat']","['IntegrateBins', 'integrate', 'integration']"
Integrability," must implement the pure virtual methods:; * - void evaluate_task(std::size_t task); * - void send_back_task_result_from_worker(std::size_t task); * - void receive_task_result_on_master(const zmq::message_t & message); *; * An example/reference implementation can be found in test_Job.cxx.; *; * Most Jobs will also want to override the virtual update_state() function.; * This function can be used to send and receive state from master to worker.; * In the worker loop, when something is received over the ZeroMQ ""SUB"" socket,; * update_state() is called to put the received data into the right places,; * thus updating for instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part must be; * a state identifier. This identifier will also be sent along with tasks to; * the queue. When a worker then takes a task from the queue, it can check; * whether it has already updated its state to what is expected to be there; * for the task at hand. If not, it should wait for the new state to arrive; * over the state subscription socket. Not",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:1356,message,message,1356,roofit/multiprocess/src/Job.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx,1,['message'],['message']
Integrability," must retain the above copyright notice, ; ** this list of conditions and the following disclaimer.; ** * Redistributions in binary form must reproduce the above copyright notice, ; ** this list of conditions and the following disclaimer in the documentation ; ** and/or other materials provided with the distribution.; ** * The name of the author may be used to endorse or promote products ; ** derived from this software without specific prior written permission.; **; ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" ; ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE ; ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE; ** ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE ; ** LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR ; ** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF ; ** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS; ** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN; ** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE); ** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF; ** THE POSSIBILITY OF SUCH DAMAGE.; */; /*; * Mesa 3-D graphics library; * Version: 7.0; *; * Copyright (C) 1999-2007 Brian Paul All Rights Reserved.; *; * Permission is hereby granted, free of charge, to any person obtaining a; * copy of this software and associated documentation files (the ""Software""),; * to deal in the Software without restriction, including without limitation; * the rights to use, copy, modify, merge, publish, distribute, sublicense,; * and/or sell copies of the Software, and to permit persons to whom the; * Software is furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included; * in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/eglew.h:1609,CONTRACT,CONTRACT,1609,builtins/glew/inc/GL/eglew.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/eglew.h,3,['CONTRACT'],['CONTRACT']
Integrability," must retain the above copyright notice, ; ** this list of conditions and the following disclaimer.; ** * Redistributions in binary form must reproduce the above copyright notice, ; ** this list of conditions and the following disclaimer in the documentation ; ** and/or other materials provided with the distribution.; ** * The name of the author may be used to endorse or promote products ; ** derived from this software without specific prior written permission.; **; ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" ; ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE ; ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE; ** ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE ; ** LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR ; ** CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF ; ** SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS; ** INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN; ** CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE); ** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF; ** THE POSSIBILITY OF SUCH DAMAGE.; */; /*; ** Copyright (c) 2007 The Khronos Group Inc.; ** ; ** Permission is hereby granted, free of charge, to any person obtaining a; ** copy of this software and/or associated documentation files (the; ** ""Materials""), to deal in the Materials without restriction, including; ** without limitation the rights to use, copy, modify, merge, publish,; ** distribute, sublicense, and/or sell copies of the Materials, and to; ** permit persons to whom the Materials are furnished to do so, subject to; ** the following conditions:; ** ; ** The above copyright notice and this permission notice shall be included; ** in all copies or substantial portions of the Materials.; ** ; ** THE MATERIALS ARE PROVIDED ""AS IS"", WITHOUT WARRA",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/wglew.h:1609,CONTRACT,CONTRACT,1609,builtins/glew/inc/GL/wglew.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/wglew.h,1,['CONTRACT'],['CONTRACT']
Integrability," not worth it.; * The relative difference of the single log-likelihoods with respect to the legacy mode is usually better than \f$10^{-12}\f$,; * and for fit parameters it's usually better than \f$10^{-6}\f$. In past ROOT releases, this backend could be activated with the now deprecated `BatchMode()` option.; * <tr><td> **cuda** <td> Evaluate the likelihood on a GPU that supports CUDA.; * This backend re-uses code from the **cpu** backend, but compiled in CUDA kernels.; * Hence, the results are expected to be identical, modulo some numerical differences that can arise from the different order in which the GPU is summing the log probabilities.; * This backend can drastically speed up the fit if all RooAbsArg object in the model support it.; * <tr><td> **legacy** <td> The original likelihood evaluation method.; * Evaluates the PDF for each single data entry at a time before summing the negative log probabilities.; * <tr><td> **codegen** <td> **Experimental** - Generates and compiles minimal C++ code for the NLL on-the-fly and wraps it in the returned RooAbsReal.; * Also generates and compiles the code for the gradient using Automatic Differentiation (AD) with [Clad](https://github.com/vgvassilev/clad).; * This analytic gradient is passed to the minimizer, which can result in significant speedups for many-parameter fits,; * even compared to the **cpu** backend. However, if one of the RooAbsArg objects in the model does not support the code generation,; * this backend can't be used.; * <tr><td> **codegen_no_grad** <td> **Experimental** - Same as **codegen**, but doesn't generate and compile the gradient code and use the regular numerical differentiation instead.; * This is expected to be slower, but useful for debugging problems with the analytic gradient.; * </table>; * <tr><td> `Optimize(bool flag)` <td> Activate constant term optimization (on by default); * <tr><td> `SplitRange(bool flag)` <td> Use separate fit ranges in a simultaneous fit. Actual range name for each",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:4905,wrap,wraps,4905,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['wrap'],['wraps']
Integrability," occur at offset 0. vbptrs can occur at an arbitrary offset and are; // placed after the lexicographically last non-virtual base. This placement; // is always before fields but can be in the middle of the non-virtual bases; // due to the two-pass layout scheme for non-virtual-bases.; // * Virtual bases sometimes require a 'vtordisp' field that is laid out before; // the virtual base and is used in conjunction with virtual overrides during; // construction and destruction. This is always a 4 byte value and is used as; // an alternative to constructor vtables.; // * vtordisps are allocated in a block of memory with size and alignment equal; // to the alignment of the completed structure (before applying __declspec(; // align())). The vtordisp always occur at the end of the allocation block,; // immediately prior to the virtual base.; // * vfptrs are injected after all bases and fields have been laid out. In; // order to guarantee proper alignment of all fields, the vfptr injection; // pushes all bases and fields back by the alignment imposed by those bases; // and fields. This can potentially add a significant amount of padding.; // vfptrs are always injected at offset 0.; // * vbptrs are injected after all bases and fields have been laid out. In; // order to guarantee proper alignment of all fields, the vfptr injection; // pushes all bases and fields back by the alignment imposed by those bases; // and fields. This can potentially add a significant amount of padding.; // vbptrs are injected immediately after the last non-virtual base as; // lexicographically ordered in the code. If this site isn't pointer aligned; // the vbptr is placed at the next properly aligned location. Enough padding; // is added to guarantee a fit.; // * The last zero sized non-virtual base can be placed at the end of the; // struct (potentially aliasing another object), or may alias with the first; // field, even if they are of the same type.; // * The last zero size virtual base may be placed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp:1876,inject,injection,1876,interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,1,['inject'],['injection']
Integrability," of a custom action using a user-defined helper object.; /// \tparam FirstColumn The type of the first column used by this action. Inferred together with OtherColumns if not present.; /// \tparam OtherColumns A list of the types of the other columns used by this action; /// \tparam Helper The type of the user-defined helper. See below for the required interface it should expose.; /// \param[in] helper The Action Helper to be scheduled.; /// \param[in] columns The names of the columns on which the helper acts.; /// \return the result of the helper wrapped in a RResultPtr.; ///; /// This method books a custom action for execution. The behavior of the action is completely dependent on the; /// Helper object provided by the caller. The required interface for the helper is described below (more; /// methods that the ones required can be present, e.g. a constructor that takes the number of worker threads is usually useful):; ///; /// ### Mandatory interface; ///; /// * `Helper` must publicly inherit from `ROOT::Detail::RDF::RActionImpl<Helper>`; /// * `Helper::Result_t`: public alias for the type of the result of this action helper. `Result_t` must be default-constructible.; /// * `Helper(Helper &&)`: a move-constructor is required. Copy-constructors are discouraged.; /// * `std::shared_ptr<Result_t> GetResultPtr() const`: return a shared_ptr to the result of this action (of type; /// Result_t). The RResultPtr returned by Book will point to this object. Note that this method can be called; /// _before_ Initialize(), because the RResultPtr is constructed before the event loop is started.; /// * `void Initialize()`: this method is called once before starting the event-loop. Useful for setup operations.; /// It must reset the state of the helper to the expected state at the beginning of the event loop: the same helper,; /// or copies of it, might be used for multiple event loops (e.g. in the presence of systematic variations).; /// * `void InitTask(TTreeReader *, unsigned int",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1080,interface,interface,1080,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['interface'],['interface']
Integrability," optional gzip encoding. Add; 16 to windowBits to write a simple gzip header and trailer around the; compressed data instead of a zlib wrapper. The gzip header will have no; file name, no extra data, no comment, no modification time (set to zero),; no header crc, and the operating system will be set to 255 (unknown). If a; gzip stream is being written, strm->adler is a crc32 instead of an adler32. The memLevel parameter specifies how much memory should be allocated; for the internal compression state. memLevel=1 uses minimum memory but; is slow and reduces compression ratio; memLevel=9 uses maximum memory; for optimal speed. The default value is 8. See zconf.h for total memory; usage as a function of windowBits and memLevel. The strategy parameter is used to tune the compression algorithm. Use the; value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a; filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no; string match), or Z_RLE to limit match distances to one (run-length; encoding). Filtered data consists mostly of small values with a somewhat; random distribution. In this case, the compression algorithm is tuned to; compress them better. The effect of Z_FILTERED is to force more Huffman; coding and less string matching; it is somewhat intermediate between; Z_DEFAULT and Z_HUFFMAN_ONLY. Z_RLE is designed to be almost as fast as; Z_HUFFMAN_ONLY, but give better compression for PNG image data. The strategy; parameter only affects the compression ratio but not the correctness of the; compressed output even if it is not set appropriately. Z_FIXED prevents the; use of dynamic Huffman codes, allowing for a simpler decoder for special; applications. deflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_STREAM_ERROR if a parameter is invalid (such as an invalid; method). msg is set to null if there is no error message. deflateInit2 does; not perform any compression: this will be done by deflate().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:3355,message,message,3355,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['message'],['message']
Integrability," placed) by dragging them to the left at least 10 pixels. ### Editing expressions:. Any editable expression from the right panel has two components : a; true name (that will be used when TTree::Draw() commands are issued) and an; alias. The visible name is the alias. Aliases of user defined expressions have; a leading ~ and may be used in new expressions. Expressions containing boolean; operators have a specific icon and may be dragged to the active cut (scissors; item) position. The expression editor can be activated by double-clicking empty expression,; using `<EditExpression>` from the selected expression context menu or using; `<Edit/Expression>` menu. The editor will pop-up in the left part, but it can be moved.; The editor usage is the following :. - you can write C expressions made of leaf names by hand or you can insert; any item from the right panel by clicking on it (recommandable);; - you can click on other expressions/leaves to paste them in the editor;; - you should write the item alias by hand since it not only make the; expression meaningful, but it also highly improve the layout for big; expressions; - you may redefine an old alias - the other expressions depending on it will; be modified accordingly. An alias must not be the leading string of other; aliases. When Draw commands are issued, the name of the corresponding; histogram axes will become the aliases of the expressions. User commands can be issued directly from the textbox labeled ""Command""; from the upper-left toolbar by typing and pressing Enter at the end. Another way is from the right panel context menu : ExecuteCommand.; All commands can be interrupted at any time by pressing the STOP button; from the bottom-left; You can toggle recording of the current command in the history file by; checking the Rec button from the top-right. ### Context menus. You can activate context menus by right-clicking on items or inside the; right panel. Context menus for mapped items from the left tree-type li",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:5164,depend,depending,5164,tree/treeviewer/src/TTreeViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx,1,['depend'],['depending']
Integrability," plotted in an empty frame, it; /// will show a unit normalized curve in the frame variable, taken at the present value; /// of other observables defined for this PDF.; ///; /// \param[in] frame pointer to RooPlot; /// \param[in] arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10 Ordered arguments; ///; /// If a PDF is plotted in a frame in which a dataset has already been plotted, it will; /// show a projected curve integrated over all variables that were present in the shown; /// dataset except for the one on the x-axis. The normalization of the curve will also; /// be adjusted to the event count of the plotted dataset. An informational message; /// will be printed for each projection step that is performed.; ///; /// This function takes the following named arguments; /// <table>; /// <tr><th><th> Projection control; /// <tr><td> `Slice(const RooArgSet& set)` <td> Override default projection behaviour by omitting observables listed; /// in set from the projection, i.e. by not integrating over these.; /// Slicing is usually only sensible in discrete observables, by e.g. creating a slice; /// of the PDF at the current value of the category observable.; ///; /// <tr><td> `Slice(RooCategory& cat, const char* label)` <td> Override default projection behaviour by omitting the specified category; /// observable from the projection, i.e., by not integrating over all states of this category.; /// The slice is positioned at the given label value. To pass multiple Slice() commands, please use the; /// Slice(std::map<RooCategory*, std::string> const&) argument explained below.; ///; /// <tr><td> `Slice(std::map<RooCategory*, std::string> const&)` <td> Omits multiple categories from the projection, as explianed above.; /// Can be used with initializer lists for convenience, e.g.; /// ```{.cpp}; /// pdf.plotOn(frame, Slice({{&tagCategory, ""2tag""}, {&jetCategory, ""3jet""}});; /// ```; ///; /// <tr><td> `Project(const RooArgSet& set)` <td> Override default projection behaviour by p",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:1129,integrat,integrating,1129,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integrating']
Integrability," pointer; in the data members of the class. This is by far more elegant; and flexible in an interactive environment.; The member function SetFCN can be used to define this pointer. - The ROOT static function Printf is provided to replace all; format statements and to print on currently defined output file.; - The functions SetObjectFit(TObject * obj)/GetObjectFit() can be; used inside the FCN function to set/get a referenced object; instead of using global variables. ## Basic concepts of MINUIT. The [MINUIT](https://root.cern/download/minuit.pdf); package acts on a multiparameter Fortran function to which one; must give the generic name <TT>FCN</TT>. In the ROOT implementation,; the function <TT>FCN</TT> is defined via the MINUIT SetFCN member function; when an Histogram.Fit command is invoked.; The value of <TT>FCN</TT> will in general depend on one; or more variable parameters. To take a simple example, in case of ROOT histograms (classes TH1C,TH1S,TH1F,TH1D); the Fit function defines the Minuit fitting function as being H1FitChisquare; or H1FitLikelihood depending on the options selected.; H1FitChisquare; calculates the chisquare between the user fitting function (gaussian, polynomial,; user defined,etc) and the data for given values of the parameters.; It is the task of MINUIT to find those values of the parameters; which give the lowest value of chisquare. ### Basic concepts - The transformation for parameters with limits. For variable parameters with limits, MINUIT uses the following; transformation:. \f[; P_{\mathrm{int}} = \arcsin; \left( 2\: \frac{P_{\mathrm{ext}}-a}{b-a} - 1 \right); P_{\mathrm{ext}} = a + \frac{b - a}{2} \left( \sin P_{\mathrm{int}} + 1 \right); \f]. so that the internal value \f$P_{\mathrm{int}}\f$ can take on any value, while; the external value \f$P_{\mathrm{ext}}\f$ can take on values only between the lower; limit \f$a\f$ and the upper limit \f$b\f$.; Since the transformation is necessarily non-linear, it would transform a; nice linea",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:2494,depend,depending,2494,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['depend'],['depending']
Integrability," requested. Must not exceed maxpts.; if minpts < 1 minpts is set to \f$ 2^n +2n(n+1) +1 \f$ where n is the function dimension; - \f$ maxpts \f$: Maximum number of function evaluations to be allowed.; \f$ maxpts >= 2^n +2n(n+1) +1 \f$; if \f$ maxpts<minpts \f$, \f$ maxpts \f$ is set to \f$ 10minpts \f$; - \f$ epstol \f$, \f$ epsrel \f$ : Specified relative and absolute accuracy. The integral will stop if the relative error is less than relative tolerance OR the; absolute error is less than the absolute tolerance. The class computes in addition to the integral of the function in the desired interval:. - an estimation of the relative accuracy of the result.; - number of function evaluations performed.; - status code:; 0. Normal exit. . At least minpts and at most maxpts calls to the function were performed.; 1. maxpts is too small for the specified accuracy eps.; The result and relerr contain the values obtainable for the; specified value of maxpts.; 2. size is too small for the specified number MAXPTS of function evaluations.; 3. n<2 or n>15. ### Method:. An integration rule of degree seven is used together with a certain; strategy of subdivision.; For a more detailed description of the method see References. ### Notes:. 1..Multi-dimensional integration is time-consuming. For each rectangular; subregion, the routine requires function evaluations.; Careful programming of the integrand might result in substantial saving; of time.; 2..Numerical integration usually works best for smooth functions.; Some analysis or suitable transformations of the integral prior to; numerical work may contribute to numerical efficiency. ### References:. 1. A.C. Genz and A.A. Malik, Remarks on algorithm 006:; An adaptive algorithm for numerical integration over; an N-dimensional rectangular region, J. Comput. Appl. Math. 6 (1980) 295-302.; 2. A. van Doren and L. de Ridder, An adaptive algorithm for numerical; integration over an n-dimensional cube, J.Comput. Appl. Math. 2 (1976) 207-217. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:1622,integrat,integration,1622,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,6,"['integrat', 'rout']","['integration', 'routine']"
Integrability," similarly to what happens during Filter and Define calls. It must; /// return an RVec of varied values, one for each variation tag, in the same order as the tags.; /// \param[in] inputColumns the names of the columns to be passed to the callable.; /// \param[in] variationTags names for each of the varied values, e.g. `""up""` and `""down""`.; /// \param[in] variationName a generic name for this set of varied values, e.g. `""ptvariation""`.; ///; /// Vary provides a natural and flexible syntax to define systematic variations that automatically propagate to; /// Filters, Defines and results. RDataFrame usage of columns with attached variations does not change, but for; /// results that depend on any varied quantity, a map/dictionary of varied results can be produced with; /// ROOT::RDF::Experimental::VariationsFor (see the example below).; ///; /// The dictionary will contain a ""nominal"" value (accessed with the ""nominal"" key) for the unchanged result, and; /// values for each of the systematic variations that affected the result (via upstream Filters or via direct or; /// indirect dependencies of the column values on some registered variations). The keys will be a composition of; /// variation names and tags, e.g. ""pt:up"" and ""pt:down"" for the example below.; ///; /// In the following example we add up/down variations of pt and fill a histogram with a quantity that depends on pt.; /// We automatically obtain three histograms in output (""nominal"", ""pt:up"" and ""pt:down""):; /// ~~~{.cpp}; /// auto nominal_hx =; /// df.Vary(""pt"", [] (double pt) { return RVecD{pt*0.9, pt*1.1}; }, {""down"", ""up""}); /// .Filter(""pt > k""); /// .Define(""x"", someFunc, {""pt""}); /// .Histo1D(""x"");; ///; /// auto hx = ROOT::RDF::Experimental::VariationsFor(nominal_hx);; /// hx[""nominal""].Draw();; /// hx[""pt:down""].Draw(""SAME"");; /// hx[""pt:up""].Draw(""SAME"");; /// ~~~; /// RDataFrame computes all variations as part of a single loop over the data.; /// In particular, this means that I/O and computation o",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1425,depend,dependencies,1425,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['depend'],['dependencies']
Integrability," speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table() to avoid compiler warnings; * - Move a comment on output buffer sizes from inffast.c to inflate.c; * - Add comments in inffast.c to introduce the inflate_fast() routine; * - Rearrange window copies in inflate_fast() for speed and simplification; * - Unroll last copy for window match in inflate_fast(); * - Use local copies of window variables in inflate_fast() for speed; * - Pull out common wnext == 0 case for speed in inflate_fast(); * - Make op and len in inflate_fast() unsigned for consistency; * - Add FAR to lcode and dcode declarations in inflate_fast(); * - Simplified bad distance check in inflate_fast(); * - Added inflateBackInit(), inflateBack(), and inflateBackEnd() in new; * source file infback.c to provide a call-back interface to inflate for; * programs like gzip and unzip -- uses window as output buffer to avoid; * window copying; *; * 1.2.beta5 1 Jan 2003; * - Improved inflateBack() interface to allow the caller to provide initial; * input in strm.; * - Fixed stored blocks bug in inflateBack(); *; * 1.2.beta6 4 Jan 2003; * - Added comments in inffast.c on effectiveness of POSTINC; * - Typecasting all around to reduce compiler warnings; * - Changed loops from while (1) or do {} while (1) to for (;;), again to; * make compilers happy; * - Changed type of window in inflateBackInit() to unsigned char *; *; * 1.2.beta7 27 Jan 2003; * - Changed many types to unsigned or unsigned short to avoid warnings; * - Added inflateCopy() function; *; * 1.2.0 9 Mar 2003; * - Changed inflateBack() interface to provide separate opaque descriptors; * for the in() and out() functions; * - Changed inflateBack() argument and in_func typedef to swap the length; * and buffer address return values for the input function; * - Check next_in and next_out for Z_NULL on entry to inflate(); *; * The history for versions after 1.2.0 are in ChangeLog in zlib distribution.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:2912,interface,interface,2912,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,2,['interface'],['interface']
Integrability," speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table() to avoid compiler warnings; * - Move a comment on output buffer sizes from inffast.c to inflate.c; * - Add comments in inffast.c to introduce the inflate_fast() routine; * - Rearrange window copies in inflate_fast() for speed and simplification; * - Unroll last copy for window match in inflate_fast(); * - Use local copies of window variables in inflate_fast() for speed; * - Pull out common write == 0 case for speed in inflate_fast(); * - Make op and len in inflate_fast() unsigned for consistency; * - Add FAR to lcode and dcode declarations in inflate_fast(); * - Simplified bad distance check in inflate_fast(); * - Added inflateBackInit(), inflateBack(), and inflateBackEnd() in new; * source file infback.c to provide a call-back interface to inflate for; * programs like gzip and unzip -- uses window as output buffer to avoid; * window copying; *; * 1.2.beta5 1 Jan 2003; * - Improved inflateBack() interface to allow the caller to provide initial; * input in strm.; * - Fixed stored blocks bug in inflateBack(); *; * 1.2.beta6 4 Jan 2003; * - Added comments in inffast.c on effectiveness of POSTINC; * - Typecasting all around to reduce compiler warnings; * - Changed loops from while (1) or do {} while (1) to for (;;), again to; * make compilers happy; * - Changed type of window in inflateBackInit() to unsigned char *; *; * 1.2.beta7 27 Jan 2003; * - Changed many types to unsigned or unsigned short to avoid warnings; * - Added inflateCopy() function; *; * 1.2.0 9 Mar 2003; * - Changed inflateBack() interface to provide separate opaque descriptors; * for the in() and out() functions; * - Changed inflateBack() argument and in_func typedef to swap the length; * and buffer address return values for the input function; * - Check next_in and next_out for Z_NULL on entry to inflate(); *; * The history for versions after 1.2.0 are in ChangeLog in zlib distribution.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inflate.c:2912,interface,interface,2912,graf2d/asimage/src/libAfterImage/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inflate.c,2,['interface'],['interface']
Integrability," statistical frameworks, and also ease of manipulation, it; may be useful to store statistical models in text form. The RooJSONFactoryWSTool is a helper class to achieve exactly this,; exporting to and importing from JSON and YML. In order to import a workspace from a JSON file, you can do. ~~~ {.py}; ws = ROOT.RooWorkspace(""ws""); tool = ROOT.RooJSONFactoryWSTool(ws); tool.importJSON(""myjson.json""); ~~~. Similarly, in order to export a workspace to a JSON file, you can do. ~~~ {.py}; tool = ROOT.RooJSONFactoryWSTool(ws); tool.exportJSON(""myjson.json""); ~~~. Analogously, in C++, you can do. ~~~ {.cxx}; #include ""RooFitHS3/RooJSONFactoryWSTool.h""; // ...; RooWorkspace ws(""ws"");; RooJSONFactoryWSTool tool(ws);; tool.importJSON(""myjson.json"");; ~~~. and. ~~~ {.cxx}; #include ""RooFitHS3/RooJSONFactoryWSTool.h""; // ...; RooJSONFactoryWSTool tool(ws);; tool.exportJSON(""myjson.json"");; ~~~. For more details, consult the tutorial <a href=""rf515__hfJSON_8py.html"">rf515_hfJSON</a>. In order to import and export YML files, `ROOT` needs to be compiled; with the external dependency <a; href=""https://github.com/biojppm/rapidyaml"">RapidYAML</a>, which needs; to be installed on your system when building `ROOT`. The RooJSONFactoryWSTool only knows about a limited set of classes for; import and export. If import or export of a class you're interested in; fails, you might need to add your own importer or exporter. Please; consult the relevant section in the \ref roofit_dev_docs to learn how to do that (\ref roofit_dev_docs_hs3). You can always get a list of all the available importers and exporters by calling the following functions:; ~~~ {.py}; ROOT.RooFit.JSONIO.printImporters(); ROOT.RooFit.JSONIO.printExporters(); ROOT.RooFit.JSONIO.printFactoryExpressions(); ROOT.RooFit.JSONIO.printExportKeys(); ~~~. Alternatively, you can generate a LaTeX version of the available importers and exporters by calling; ~~~ {.py}; tool = ROOT.RooJSONFactoryWSTool(ws); tool.writedoc(""hs3.tex""); ~~~; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:1296,depend,dependency,1296,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,1,['depend'],['dependency']
Integrability," std::endl;; * }; * // send shutdown request acknowledged; * pipe << """" << BidirMMapPipe::flush;; *; * pipe.close();; * return 0;; * }; *; * BidirMMapPipe* spawnChild(int (*childexec)(BidirMMapPipe&)); * {; * BidirMMapPipe *p = new BidirMMapPipe();; * if (p->isChild()) {; * int retVal = childexec(*p);; * delete p;; * std::exit(retVal);; * }; * return p;; * }; *; * int main(); * {; * std::cout << ""[PARENT]: simple challenge-response test, one child:"" <<; * std::endl;; * BidirMMapPipe* pipe = spawnChild(simplechild);; * for (int i = 0; i < 5; ++i) {; * std::string str(""What shall we do with a drunken sailor..."");; * *pipe << str << BidirMMapPipe::flush;; * if (!*pipe) return -1;; * std::cout << ""[PARENT]: wrote: "" << str << std::endl;; * *pipe >> str;; * if (!*pipe) return -1;; * std::cout << ""[PARENT]: read: "" << str << std::endl;; * }; * // ask child to shut down; * pipe << """" << BidirMMapPipe::flush;; * // wait for it to see the shutdown request; * std::string s;; * pipe >> s;; * std::cout << ""[PARENT]: exit status of child: "" << pipe->close() <<; * std::endl;; * delete pipe;; * return 0;; * }; * @endcode; *; * When designing your own protocols to use over the pipe, there are a few; * things to bear in mind:; * - Do as http does: When building a request, send all the options and; * properties of that request with the request itself in a single go (one; * flush). Then, the server has everything it needs, and hopefully, it'll; * shut up for a while and to let the client do something useful in the; * meantime... The same goes when the server replies to the request: include; * everything there is to know about the result of the request in the reply.; * - The expensive operation should be the request that is made, all other; * operations should somehow be formulated as options or properties to that; * request.; * - Include a shutdown handshake in whatever protocol you send over the; * pipe. That way, you can shut things down in a controlled way. Otherwise,; * and depend",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:7164,protocol,protocols,7164,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['protocol'],['protocols']
Integrability," the /HEPEVT/ common block ; Then the default implementation of ImportParticles should suffice. ; The common block /HEPEVT/ is structed like ; ; \verbatim; // C ; typedef struct { ; Int_t nevhep; // Event number ; Int_t nhep; // # of particles ; Int_t isthep[4000]; // Status flag of i'th particle ; Int_t idhep[4000]; // PDG # of particle ; Int_t jmohep[4000][2]; // 1st & 2nd mother particle # ; Int_t jdahep[4000][2]; // 1st & 2nd daughter particle # ; Double_t phep[4000][5]; // 4-momentum and 1 word ; Double_t vhep[4000][4]; // 4-position of production ; } HEPEVT_DEF; ; ; ; C Fortran ; COMMON/HEPEVT/NEVHEP,NHEP,ISTHEP(4000),IDHEP(4000), ; + JMOHEP(2,4000),JDAHEP(2,4000),PHEP(5,4000),VHEP(4,4000) ; INTEGER NEVHEP,NHEP,ISTHEP,IDHEP,JMOHEP,JDAHEP ; DOUBLE PRECISION PHEP,VHEP ; \endverbatim. The generic member functions SetParameter and GetParameter can be; overloaded to set and get parameters of the event generator. Note, if the derived class interfaces a (set of) Fortran common; blocks (like TPythia, TVenus does), one better make the derived; class a singleton. That is, something like; ; \verbatim; class MyGenerator : public TGenerator ; { ; public: ; static MyGenerator* Instance() ; { ; if (!fgInstance) fgInstance = new MyGenerator; ; return fgInstance; ; } ; void GenerateEvent() { ... } ; void ImportParticles(TClonesArray* a, Option_t opt="""") {...} ; Int_t ImportParticles(Option_t opt="""") { ... } ; Int_t SetParameter(const char* name, Double_t val) { ... } ; Double_t GetParameter(const char* name) { ... } ; virtual ~MyGenerator() { ... } ; protected: ; MyGenerator() { ... } ; MyGenerator(const MyGenerator& o) { ... } ; MyGenerator& operator=(const MyGenerator& o) { ... } ; static MyGenerator* fgInstance; ; ClassDefOverride(MyGenerator,0); ; }; ; \endverbatim; ; Having multiple objects accessing the same common blocks is not ; safe. ; ; Concrete TGenerator classes can be loaded in scripts and subseqent- ; ly used in compiled code: ; ; \verbatim; // MyRun.h ; class MyR",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/src/TGenerator.cxx:2005,interface,interfaces,2005,montecarlo/eg/src/TGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/src/TGenerator.cxx,1,['interface'],['interfaces']
Integrability," the contention on floating point adder JFPA accessible from; /// pipeline resource JFPU0.; ///; /// At the end of each cycle, if pressure on the simulated out-of-order buffers; /// has increased, a backend pressure event is reported.; /// In particular, this occurs when there is a delta between the number of uOps; /// dispatched and the number of uOps issued to the underlying pipelines.; ///; /// The bottleneck analysis view is also responsible for identifying and; /// printing the most ""critical"" sequence of dependent instructions according to; /// the simulated run.; ///; /// Below is the critical sequence computed for the dot-product example on; /// btver2:; ///; /// Instruction Dependency Information; /// +----< 2. vhaddps %xmm3, %xmm3, %xmm4; /// |; /// | < loop carried > ; /// |; /// | 0. vmulps	 %xmm0, %xmm0, %xmm2; /// +----> 1. vhaddps %xmm2, %xmm2, %xmm3 ## RESOURCE interference: JFPA [ probability: 73% ]; /// +----> 2. vhaddps %xmm3, %xmm3, %xmm4 ## REGISTER dependency: %xmm3; /// |; /// | < loop carried > ; /// |; /// +----> 1. vhaddps %xmm2, %xmm2, %xmm3 ## RESOURCE interference: JFPA [ probability: 73% ]; ///; ///; /// The algorithm that computes the critical sequence is very similar to a; /// critical path analysis.; /// ; /// A dependency graph is used internally to track dependencies between nodes.; /// Nodes of the graph represent instructions from the input assembly sequence,; /// and edges of the graph represent data dependencies or processor resource; /// interferences.; ///; /// Edges are dynamically 'discovered' by observing instruction state; /// transitions and backend pressure increase events. Edges are internally; /// ranked based on their ""criticality"". A dependency is considered to be; /// critical if it takes a long time to execute, and if it contributes to; /// backend pressure increases. Criticality is internally measured in terms of; /// cycles; it is computed for every edge in the graph as a function of the edge; /// latency and th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h:2140,depend,dependency,2140,interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-mca/Views/BottleneckAnalysis.h,1,['depend'],['dependency']
Integrability," the dependents of the top-level PDF: these are; functions with potentially non-trivial Jacobian terms themselves.; \note Therefore, no explicit attempt should be made to normalize the; function output in evaluate(). In particular, normalisation constants; can be omitted to speed up the function evaluations, and included later; in the integration of the PDF (see below), which is rarely called in; comparison to the `evaluate()` function. In addition, RooAbsPdf objects do not have a static concept of what; variables are parameters, and what variables are dependents (which; need to be integrated over for a correct PDF normalization).; Instead, the choice of normalization is always specified each time a; normalized value is requested from the PDF via the getVal(); method. RooAbsPdf manages the entire normalization logic of each PDF with; the help of a RooRealIntegral object, which coordinates the integration; of a given choice of normalization. By default, RooRealIntegral will; perform an entirely numeric integration of all dependents. However,; PDFs can advertise one or more (partial) analytical integrals of; their function, and these will be used by RooRealIntegral, if it; determines that this is safe (i.e., no hidden Jacobian terms,; multiplication with other PDFs that have one or more dependents in; common, etc). #### Implementing analytical integrals; To implement analytical integrals, two functions must be implemented. First,. ```; Int_t getAnalyticalIntegral(const RooArgSet& integSet, RooArgSet& anaIntSet); ```; should return the analytical integrals that are supported. `integSet`; is the set of dependents for which integration is requested. The; function should copy the subset of dependents it can analytically; integrate to `anaIntSet`, and return a unique identification code for; this integration configuration. If no integration can be; performed, zero should be returned. Second,. ```; double analyticalIntegral(Int_t code); ```. implements the actual analytical ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:2827,integrat,integration,2827,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,"['depend', 'integrat']","['dependents', 'integration']"
Integrability," the objects (where possible).; *; * To attempt to manage this buffer, given these constraints, the ZSTD_cwksp; * abstraction was created. It works as follows:; *; * Workspace Layout:; *; * [ ... workspace ... ]; * [objects][tables ... ->] free space [<- ... aligned][<- ... buffers]; *; * The various objects that live in the workspace are divided into the; * following categories, and are allocated separately:; *; * - Static objects: this is optionally the enclosing ZSTD_CCtx or ZSTD_CDict,; * so that literally everything fits in a single buffer. Note: if present,; * this must be the first object in the workspace, since ZSTD_customFree{CCtx,; * CDict}() rely on a pointer comparison to see whether one or two frees are; * required.; *; * - Fixed size objects: these are fixed-size, fixed-count objects that are; * nonetheless ""dynamically"" allocated in the workspace so that we can; * control how they're initialized separately from the broader ZSTD_CCtx.; * Examples:; * - Entropy Workspace; * - 2 x ZSTD_compressedBlockState_t; * - CDict dictionary contents; *; * - Tables: these are any of several different datastructures (hash tables,; * chain tables, binary trees) that all respect a common format: they are; * uint32_t arrays, all of whose values are between 0 and (nextSrc - base).; * Their sizes depend on the cparams.; *; * - Aligned: these buffers are used for various purposes that require 4 byte; * alignment, but don't require any initialization before they're used.; *; * - Buffers: these buffers are used for various purposes that don't require; * any alignment or initialization before they're used. This means they can; * be moved around at no cost for a new compression.; *; * Allocating Memory:; *; * The various types of objects must be allocated in order, so they can be; * correctly packed into the workspace buffer. That order is:; *; * 1. Objects; * 2. Buffers; * 3. Aligned; * 4. Tables; *; * Attempts to reserve objects of different types out of order will fail.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_cwksp.h:2943,depend,depend,2943,builtins/zstd/compress/zstd_cwksp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_cwksp.h,1,['depend'],['depend']
Integrability," to CFG: %bb.4(?%); ///; /// %bb.4: derived from LLVM BB %entry; /// Predecessors according to CFG: %bb.2 %bb.3; /// %13 = PHI %12, <%bb.3>, %2, <%bb.2>;; /// F8RC:%13,%12,%2; /// <SNIP3>; /// BLR8 implicit %lr8, implicit %rm, implicit %f1; ///; /// When this pattern is detected, branch coalescing will try to collapse; /// it by moving code in %bb.2 to %bb.0 and/or %bb.4 and removing %bb.3.; ///; /// If all conditions are meet, IR should collapse to:; ///; /// %bb.0: derived from LLVM BB %entry; /// liveins: %f1 %f3 %x6; /// <SNIP1>; /// %0 = COPY %f1; F8RC:%0; /// %5 = CMPLWI killed %4, 0; CRRC:%5 GPRC:%4; /// %8 = LXSDX %zero8, killed %7, implicit %rm;; /// mem:LD8[ConstantPool] F8RC:%8 G8RC:%7; /// <SNIP2>; /// BCC 76, %5, <%bb.4>; CRRC:%5; /// Successors according to CFG: %bb.1(0x2aaaaaaa / 0x80000000 = 33.33%); /// %bb.4(0x55555554 / 0x80000000 = 66.67%); ///; /// %bb.1: derived from LLVM BB %entry; /// Predecessors according to CFG: %bb.0; /// Successors according to CFG: %bb.4(0x40000000 / 0x80000000 = 50.00%); ///; /// %bb.4: derived from LLVM BB %entry; /// Predecessors according to CFG: %bb.0 %bb.1; /// %9 = PHI %8, <%bb.1>, %0, <%bb.0>;; /// F8RC:%9,%8,%0; /// %13 = PHI %12, <%bb.1>, %2, <%bb.0>;; /// F8RC:%13,%12,%2; /// <SNIP3>; /// BLR8 implicit %lr8, implicit %rm, implicit %f1; ///; /// Branch Coalescing does not split blocks, it moves everything in the same; /// direction ensuring it does not break use/definition semantics.; ///; /// PHI nodes and its corresponding use instructions are moved to its successor; /// block if there are no uses within the successor block PHI nodes. PHI; /// node ordering cannot be assumed.; ///; /// Non-PHI can be moved up to the predecessor basic block or down to the; /// successor basic block following any PHI instructions. Whether it moves; /// up or down depends on whether the register(s) defined in the instructions; /// are used in current block or in any PHI instructions at the beginning of; /// the successor block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp:3609,depend,depends,3609,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCBranchCoalescing.cpp,1,['depend'],['depends']
Integrability," to integrate using efficient ""adaptive"" MC method.; (The distribution does not need to be normalized to one.). ### How does it work?. FOAM is the simplified version of the multi-dimensional general purpose; Monte Carlo event generator (integrator) FOAM.; It creates hyper-rectangular ""foam of cells"", which is more dense around its peaks.; See the following 2-dim. example of the map of 1000 cells for doubly peaked distribution:. \image html foam_MapCamel1000.png width=400. FOAM is now fully integrated with the ROOT package.; The important bonus of the ROOT use is persistency of the FOAM objects!. For more sophisticated problems full version of FOAM may be more appropriate:; See [full version of FOAM](http://jadach.home.cern.ch/jadach/Foam/Index.html). ### Simple example of the use of FOAM:. Begin_Macro(source); ../../../tutorials/foam/foam_kanwa.C; End_Macro. ### Canonical nine steering parameters of FOAM. | Name | default | Description |; |----------|----------|--------------------------------------------------------|; | kDim | 0 | Dimension of the integration space. Must be redefined! |; | nCells | 1000 | No of allocated number of cells, |; | nSampl | 200 | No. of MC events in the cell MC exploration |; | nBin | 8 | No. of bins in edge-histogram in cell exploration |; | OptRej | 1 | OptRej = 0, weighted; OptRej=1, wt=1 MC events |; | OptDrive | 2 | Maximum weight reduction, =1 for variance reduction |; | EvPerBin | 25 | Maximum number of the effective wt=1 events/bin, |; | | | EvPerBin=0 deactivates this option |; | Chat | 1 | =0,1,2 is the ``chat level'' in the standard output |; | MaxWtRej | 1.1 | Maximum weight used to get w=1 MC events |. The above can be redefined before calling Initialize() method,; for instance `FoamObject->SetkDim(15)` sets dimension of the distribution to 15.; Only `kDim` HAS TO BE redefined, the other parameters may be left at their defaults.; `nCell` may be increased up to about million cells for wildly peaked distributions.; Increasing `",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx:1860,integrat,integration,1860,math/foam/src/TFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx,1,['integrat'],['integration']
Integrability," up to the implementation of the NLL creation method if the data is cloned or not.; * <tr><td> `Offset(std::string const& mode)` <td> Likelihood offsetting mode. Can be either:; * <table>; * <tr><th> Mode <th> Description; * <tr><td> **none** - *default* <td> No offsetting.; * <tr><td> **initial** <td> Offset likelihood by initial value (so that starting value of FCN in minuit is zero).; * This can improve numeric stability in simultaneous fits with components with large likelihood values.; * <tr><td> **bin** <td> Offset likelihood bin-by-bin with a template histogram model based on the obersved data.; * This results in per-bin values that are all in the same order of magnitude, which reduces precision loss in the sum,; * which can drastically improve numeric stability.; * Furthermore, \f$2\cdot \text{NLL}\f$ defined like this is approximately chi-square distributed, allowing for goodness-of-fit tests.; * </table>; * <tr><td> `IntegrateBins(double precision)` <td> In binned fits, integrate the PDF over the bins instead of using the probability density at the bin centre.; * This can reduce the bias observed when fitting functions with high curvature to binned data.; * - precision > 0: Activate bin integration everywhere. Use precision between 0.01 and 1.E-6, depending on binning.; * Note that a low precision such as 0.01 might yield identical results to 1.E-4, since the integrator might reach 1.E-4 already in its first; * integration step. If lower precision is desired (more speed), a RooBinSamplingPdf has to be created manually, and its integrator; * has to be manipulated directly.; * - precision = 0: Activate bin integration only for continuous PDFs fit to a RooDataHist.; * - precision < 0: Deactivate.; * \see RooBinSamplingPdf; * <tr><td> `ModularL(bool flag)` <td> Enable or disable modular likelihoods, which will become the default in a future release.; * This does not change any user-facing code, but only enables a different likelihood class in the back-end. Note",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:9031,Integrat,IntegrateBins,9031,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,"['Integrat', 'integrat']","['IntegrateBins', 'integrate']"
Integrability," variables are functions instead of variables. In; such cases, the normalization of the composite PDF may not simply be; integral over the dependents of the top-level PDF: these are; functions with potentially non-trivial Jacobian terms themselves.; \note Therefore, no explicit attempt should be made to normalize the; function output in evaluate(). In particular, normalisation constants; can be omitted to speed up the function evaluations, and included later; in the integration of the PDF (see below), which is rarely called in; comparison to the `evaluate()` function. In addition, RooAbsPdf objects do not have a static concept of what; variables are parameters, and what variables are dependents (which; need to be integrated over for a correct PDF normalization).; Instead, the choice of normalization is always specified each time a; normalized value is requested from the PDF via the getVal(); method. RooAbsPdf manages the entire normalization logic of each PDF with; the help of a RooRealIntegral object, which coordinates the integration; of a given choice of normalization. By default, RooRealIntegral will; perform an entirely numeric integration of all dependents. However,; PDFs can advertise one or more (partial) analytical integrals of; their function, and these will be used by RooRealIntegral, if it; determines that this is safe (i.e., no hidden Jacobian terms,; multiplication with other PDFs that have one or more dependents in; common, etc). #### Implementing analytical integrals; To implement analytical integrals, two functions must be implemented. First,. ```; Int_t getAnalyticalIntegral(const RooArgSet& integSet, RooArgSet& anaIntSet); ```; should return the analytical integrals that are supported. `integSet`; is the set of dependents for which integration is requested. The; function should copy the subset of dependents it can analytically; integrate to `anaIntSet`, and return a unique identification code for; this integration configuration. If no integration ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:2716,integrat,integration,2716,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['integrat'],['integration']
Integrability," with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; /// Finalize v8.1-m low-overhead loops by converting the associated pseudo; /// instructions into machine operations.; /// The expectation is that the loop contains three pseudo instructions:; /// - t2*LoopStart - placed in the preheader or pre-preheader. The do-loop; /// form should be in the preheader, whereas the while form should be in the; /// preheaders only predecessor.; /// - t2LoopDec - placed within in the loop body.; /// - t2LoopEnd - the loop latch terminator.; ///; /// In addition to this, we also look for the presence of the VCTP instruction,; /// which determines whether we can generated the tail-predicated low-overhead; /// loop form.; ///; /// Assumptions and Dependencies:; /// Low-overhead loops are constructed and executed using a setup instruction:; /// DLS, WLS, DLSTP or WLSTP and an instruction that loops back: LE or LETP.; /// WLS(TP) and LE(TP) are branching instructions with a (large) limited range; /// but fixed polarity: WLS can only branch forwards and LE can only branch; /// backwards. These restrictions mean that this pass is dependent upon block; /// layout and block sizes, which is why it's the last pass to run. The same is; /// true for ConstantIslands, but this pass does not increase the size of the; /// basic blocks, nor does it change the CFG. Instructions are mainly removed; /// during the transform and pseudo instructions are replaced by real ones. In; /// some cases, when we have to revert to a 'normal' loop, we have to introduce; /// multiple instructions for a single pseudo (see RevertWhile and; /// RevertLoopEnd). To handle this situation, t2WhileLoopStartLR and t2LoopEnd; /// are defined to be as large as this maximum sequence of replacement; /// instructions.; ///; /// A note on VPR.P",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp:1071,Depend,Dependencies,1071,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLowOverheadLoops.cpp,1,['Depend'],['Dependencies']
Integrability," with UPLO = 'U' or 'u', the array AP must */; /* contain the Upper triangular part of the symmetric matrix */; /* packed sequentially, column by column, so that AP( 1 ) */; /* contains a( 1, 1 ), AP( 2 ) and AP( 3 ) contain a( 1, 2 ) */; /* and a( 2, 2 ) respectively, and so on. */; /* Before entry with UPLO = 'L' or 'l', the array AP must */; /* contain the Lower triangular part of the symmetric matrix */; /* packed sequentially, column by column, so that AP( 1 ) */; /* contains a( 1, 1 ), AP( 2 ) and AP( 3 ) contain a( 2, 1 ) */; /* and a( 3, 1 ) respectively, and so on. */; /* Unchanged on exit. */; /* X - DOUBLE PRECISION array of dimension at least */; /* ( 1 + ( n - 1 )*abs( INCX ) ). */; /* Before entry, the incremented array X must contain the n */; /* element vector x. */; /* Unchanged on exit. */; /* INCX - INTEGER. */; /* On entry, INCX specifies the increment for the Elements of */; /* X. INCX must not be zero. */; /* Unchanged on exit. */; /* BETA - DOUBLE PRECISION. */; /* On entry, BETA specifies the scalar beta. When BETA is */; /* supplied as zero then Y need not be set on input. */; /* Unchanged on exit. */; /* Y - DOUBLE PRECISION array of dimension at least */; /* ( 1 + ( n - 1 )*abs( INCY ) ). */; /* Before entry, the incremented array Y must contain the n */; /* element vector y. On exit, Y is overwritten by the updated */; /* vector y. */; /* INCY - INTEGER. */; /* On entry, INCY specifies the increment for the Elements of */; /* Y. INCY must not be zero. */; /* Unchanged on exit. */; /* Level 2 Blas routine. */; /* -- Written on 22-October-1986. */; /* Jack Dongarra, Argonne National Lab. */; /* Jeremy Du Croz, Nag Central Office. */; /* Sven Hammarling, Nag Central Office. */; /* Richard Hanson, Sandia National Labs. */; /* .. Parameters .. */; /* .. Local Scalars .. */; /* .. External Functions .. */; /* .. External Subroutines .. */; /* .. */; /* .. Executable Statements .. */; /* Test the input parameters. */; /* Parameter adjustments */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/mndspmv.cxx:2622,rout,routine,2622,math/minuit2/src/mndspmv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/mndspmv.cxx,1,['rout'],['routine']
Integrability,""""""" This module is responsible for the Clang executable. Since Clang command line interface is so rich, but this project is using only; a subset of that, it makes sense to create a function specific wrapper. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/clang.py:82,interface,interface,82,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/clang.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/clang.py,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,""""""" This module is responsible to capture the compiler invocation of any; build process. The result of that should be a compilation database. This implementation is using the LD_PRELOAD or DYLD_INSERT_LIBRARIES; mechanisms provided by the dynamic linker. The related library is implemented; in C language and can be found under 'libear' directory. The 'libear' library is capturing all child process creation and logging the; relevant information about it into separate files in a specified directory.; The parameter of this process is the output directory name, where the report; files shall be placed. This parameter is passed as an environment variable. The module also implements compiler wrappers to intercept the compiler calls. The module implements the build command execution and the post-processing of; the output files, which will condensates into a compilation database. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py:693,wrap,wrappers,693,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py,1,['wrap'],['wrappers']
Integrability,""""""" This module parses and validates arguments for command-line interfaces. It uses argparse module to create the command line parser. (This library is; in the standard python library since 3.2 and backported to 2.7, but not; earlier.). It also implements basic validation methods, related to the command.; Validations are mostly calling specific help methods, or mangling values.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py:64,interface,interfaces,64,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,1,['interface'],['interfaces']
Integrability,"""""""*************************************************; * Principal Component Analysis *; * *; * Number of variables: {0:4d} *; * Number of data points: {1:8d} *; * Number of dependent variables: {2:4d} *; * *; *************************************************""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py:173,depend,dependent,173,tutorials/math/principal.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py,1,['depend'],['dependent']
Integrability,"""""""//#include ""TSocket.h""; enum ESockOptions {; kSendBuffer, // size of send buffer; kRecvBuffer, // size of receive buffer; kOobInline, // OOB message inline; kKeepAlive, // keep socket alive; kReuseAddr, // allow reuse of local portion of address 5-tuple; kNoDelay, // send without delay; kNoBlock, // non-blocking I/O; kProcessGroup, // socket process group (used for SIGURG and SIGIO); kAtMark, // are we at out-of-band mark (read only); kBytesToRead // get number of bytes to read, FIONREAD (read only); };. enum ESendRecvOptions {; kDefault, // default option (= 0); kOob, // send or receive out-of-band data; kPeek, // peek at incoming message (receive only); kDontBlock // send/recv as much data as possible without blocking; };; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py:144,message,message,144,bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/create_src_directory.py,2,['message'],['message']
Integrability,"""""""; // Inject the C++ class CustomObject in the C++ runtime.; class CustomObject {; public:; int x = 42;; };; // Create a function that returns such an object. This is called to fill the dataframe.; CustomObject fill_object() { return CustomObject(); }; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df026_AsNumpyArrays.py:8,Inject,Inject,8,tutorials/dataframe/df026_AsNumpyArrays.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df026_AsNumpyArrays.py,1,['Inject'],['Inject']
Integrability,"""""""; <head>; <title>Bug Submission</title>; <link rel=""stylesheet"" type=""text/css"" href=""/scanview.css"" />; </head>; <body>; <h3>; <a href=""/"">Summary</a> > ; %(reportingFor)s; %(fileBug)s; Submit</h3>; <form name=""form"" action="""">; <table class=""form"">; <tr><td>; <table class=""form_group"">; <tr>; <td class=""form_clabel"">Title:</td>; <td class=""form_value"">; <input type=""text"" name=""title"" size=""50"" value=""%(title)s"" disabled>; </td>; </tr>; <tr>; <td class=""form_label"">Description:</td>; <td class=""form_value"">; <textarea rows=""10"" cols=""80"" name=""description"" disabled>; %(description)s; </textarea>; </td>; </table>; </td></tr>; </table>; </form>; <h1 class=""%(statusClass)s"">Submission %(statusName)s</h1>; %(message)s; <p>; <hr>; <a href=""/"">Return to Summary</a>; </body>; </html>""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py:719,message,message,719,interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/ScanView.py,1,['message'],['message']
Integrability,"""""""; <html>; <title>{}</title>; <meta charset=""utf-8"" />; <head>; <link rel='stylesheet' type='text/css' href='style.css'>; <script type=""text/javascript"">; /* Simple helper to show/hide the expanded message of a remark. */; function toggleExpandedMessage(e) {{; var FullTextElems = e.parentElement.parentElement.getElementsByClassName(""full-info"");; if (!FullTextElems || FullTextElems.length < 1) {{; return false;; }}; var FullText = FullTextElems[0];; if (FullText.style.display == 'none') {{; e.innerHTML = '-';; FullText.style.display = 'block';; }} else {{; e.innerHTML = '+';; FullText.style.display = 'none';; }}; }}; </script>; </head>; <body>; <div class=""centered"">; <table class=""source"">; <thead>; <tr>; <th style=""width: 2%"">Line</td>; <th style=""width: 3%"">Hotness</td>; <th style=""width: 10%"">Optimization</td>; <th style=""width: 70%"">Source</td>; <th style=""width: 15%"">Inline Context</td>; </tr>; </thead>; <tbody>""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt-viewer/opt-viewer.py:200,message,message,200,interpreter/llvm-project/llvm/tools/opt-viewer/opt-viewer.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt-viewer/opt-viewer.py,1,['message'],['message']
Integrability,"""""""; <tr>; <td></td>; <td>{r.RelativeHotness}</td>; <td class=\""column-entry-{r.color}\"">{r.PassWithDiffPrefix}</td>; <td><pre style=""display:inline"">{indent}</pre><span class=\""column-entry-yellow\"">{expand_link} {message}&nbsp;</span>{expand_message}</td>; <td class=\""column-entry-yellow\"">{inlining_context}</td>; </tr>""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt-viewer/opt-viewer.py:215,message,message,215,interpreter/llvm-project/llvm/tools/opt-viewer/opt-viewer.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt-viewer/opt-viewer.py,1,['message'],['message']
Integrability,"""""""; A 3-line progress bar, which looks like::. Header; 20% [===========----------------------------------]; progress message. The progress bar is colored, if the terminal supports color; output; and adjusts to the width of the terminal.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py:118,message,message,118,interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/ProgressBar.py,1,['message'],['message']
Integrability,"""""""; A Class that represents a node in RDataFrame operations graph. A Node; houses an operation and has references to children nodes. Attributes:; get_head: A function returning the head node in the graph. node_id: The id of this node, given sequentially in the order of; creation with respect to the head node of the graph. operation: The operation that this node represents. `None` if the node; is the head node. parent: A reference to the parent node of this node. `None` if the node; is the head node. nchildren: A counter of how many children this node has. _new_op_name (str): The name of the new incoming operation of the next; child, which is the last child node among the current node's; children. value: The computed value after executing the operation in the current; node for a particular DistRDF graph. This is permanently :obj:`None`; for transformation nodes and the action nodes get a; :obj:`ROOT.RResultPtr` after event-loop execution. has_user_references (bool): A flag to check whether the node has; direct user references, that is if it is assigned to a variable.; Default value is :obj:`True`, turns to :obj:`False` if the proxy; that wraps the node gets garbage collected by Python. rdf_node: A reference to the result of calling a function of the; RDataFrame API with the current operation. This is practically a; node of the true computation graph, which is being executed in some; distributed task. It is a transient attribute. On the client, it; is always None. The value is computed and stored only during a task; on a worker.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Node.py:1156,wrap,wraps,1156,bindings/experimental/distrdf/python/DistRDF/Node.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Node.py,1,['wrap'],['wraps']
Integrability,"""""""; A factory for different kinds of head nodes of the RDataFrame computation; graph, depending on the arguments to the RDataFrame constructor. Parses the; arguments and compares them against the possible RDataFrame constructors.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:87,depend,depending,87,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py,1,['depend'],['depending']
Integrability,"""""""; A logical range of entries in which a dataset is split. Depending on the; input data source, this can have different attributes. Attributes:. exec_id: An identifier for the current execution. id: A sequential counter to identify this range.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py:61,Depend,Depending,61,bindings/experimental/distrdf/python/DistRDF/Ranges.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py,1,['Depend'],['Depending']
Integrability,"""""""; A script had a fatal error such that there's no point in retrying. The; message has not been emitted on stdout or stderr but is instead included in; this exception.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:77,message,message,77,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['message'],['message']
Integrability,"""""""; A wrapper class that inherits from `numpy.ndarray` and allows to attach the; result pointer of the `Take` action in an `RDataFrame` event loop to the; collection of values returned by that action. See; https://docs.scipy.org/doc/numpy/user/basics.subclassing.html for more; information on subclassing numpy arrays.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_utils.py:7,wrap,wrapper,7,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_utils.py,1,['wrap'],['wrapper']
Integrability,"""""""; Allow access to objects through the method Get(). This concerns both TDirectoryFile and TFile, since the latter; inherits the Get method from the former.; We decided not to inject this behavior directly in TDirectory; because this one already has a templated method Get which, when; invoked from Python, returns an object of the derived class (e.g. TH1F); and not a generic TObject.; In case the object is not found, a null pointer is returned.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py:178,inject,inject,178,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectoryfile.py,1,['inject'],['inject']
Integrability,"""""""; An enumeration representing the style of an integrated test keyword or; command. TAG: A keyword taking no value. Ex 'END.'; COMMAND: A keyword taking a list of shell commands. Ex 'RUN:'; LIST: A keyword taking a comma-separated list of values.; SPACE_LIST: A keyword taking a space-separated list of values.; BOOLEAN_EXPR: A keyword taking a comma-separated list of; boolean expressions. Ex 'XFAIL:'; INTEGER: A keyword taking a single integer. Ex 'ALLOW_RETRIES:'; CUSTOM: A keyword with custom parsing semantics.; DEFINE: A keyword taking a new lit substitution definition. Ex; 'DEFINE: %{name}=value'; REDEFINE: A keyword taking a lit substitution redefinition. Ex; 'REDEFINE: %{name}=value'; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:49,integrat,integrated,49,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['integrat'],['integrated']
Integrability,"""""""; Attach the array interface as property if the data-type of the RTensor; elements is one of the supported basic types. Parameters:; klass: class to be pythonized; name: string containing the name of the class; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py:22,interface,interface,22,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py,1,['interface'],['interface']
Integrability,"""""""; CmpRuns - A simple tool for comparing two static analyzer runs to determine; which reports have been added, removed, or changed. This is designed to support automated testing using the static analyzer, from; two perspectives:; 1. To monitor changes in the static analyzer's reports on real code bases,; for regression testing. 2. For use by end users who want to integrate regular static analyzer testing; into a buildbot like environment. Usage:. # Load the results of both runs, to obtain lists of the corresponding; # AnalysisDiagnostic objects.; #; resultsA = load_results_from_single_run(singleRunInfoA, delete_empty); resultsB = load_results_from_single_run(singleRunInfoB, delete_empty). # Generate a relation from diagnostics in run A to diagnostics in run B; # to obtain a list of triples (a, b, confidence).; diff = compare_results(resultsA, resultsB). """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/CmpRuns.py:368,integrat,integrate,368,interpreter/llvm-project/clang/utils/analyzer/CmpRuns.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/CmpRuns.py,1,['integrat'],['integrate']
Integrability,"""""""; Common interface for lit directives for which any lit substitutions must be; expanded to produce the shell script. It includes directives (e.g., 'RUN:'); specifying shell commands that might have lit substitutions to be expanded.; It also includes lit directives (e.g., 'DEFINE:') that adjust substitutions. start_line_number: The directive's starting line number.; end_line_number: The directive's ending line number, which is; start_line_number if the directive has no line continuations.; keyword: The keyword that specifies the directive. For example, 'RUN:'.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:12,interface,interface,12,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['interface'],['interface']
Integrability,"""""""; Contains constants needed for _rdf_pyz to convert datatypes for numba declarable types.; It is in a separate module so as to avoid a numpy dependency for ROOT.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_conversion_maps.py:144,depend,dependency,144,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_conversion_maps.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_conversion_maps.py,1,['depend'],['dependency']
Integrability,"""""""; Create the ROOT.RDF.Experimental.Distributed python module. This module will be injected into the ROOT.RDF namespace. Arguments:; parent: The ROOT.RDF namespace. Needed to define __package__. Returns:; types.ModuleType: The ROOT.RDF.Experimental.Distributed submodule.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:85,inject,injected,85,bindings/pyroot/pythonizations/python/ROOT/_facade.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py,1,['inject'],['injected']
Integrability,"""""""; Creates a new `Proxy` object for a given node. Args:; proxied_node: The node that the current Proxy should wrap.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py:112,wrap,wrap,112,bindings/experimental/distrdf/python/DistRDF/Proxy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py,1,['wrap'],['wrap']
Integrability,"""""""; Creates a new cppyy std::runtime_error proxy with the original message.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_runtime_error.py:68,message,message,68,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_runtime_error.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_runtime_error.py,1,['message'],['message']
Integrability,"""""""; Establish the strategy to recreate a std::runtime_error when unpickling. Creates a new error from the original message. Need to use a separate free; function instead of an inline lambda to help pickle.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_runtime_error.py:116,message,message,116,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_runtime_error.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_runtime_error.py,1,['message'],['message']
Integrability,"""""""; Executes an RDataFrame computation graph on a distributed backend. The needed ingredients are:. - A collection of logical ranges in which the dataset is split. Each; range is going to be assigned to a distributed task.; - A representation of the computation graph that the task needs to; execute.; - A way to generate an RDataFrame instance starting from the logical; range of the task.; - Optionally, some setup code to be run at the beginning of each task. These are used as inputs to a generic mapper function. Results from the; various mappers are then reduced and the final results are retrieved in; the local session. These are properly handled to perform extra checks,; depending on the data source. Finally, the local user-facing nodes are; filled with the values that were computed distributedly so that they; can be accessed in the application like with local RDataFrame.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:682,depend,depending,682,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py,1,['depend'],['depending']
Integrability,"""""""; FIXME: consider if serializing to JSON would bring interoperability; advantages over serializing to pickle.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/Reviewing/find_interesting_reviews.py:56,interoperab,interoperability,56,interpreter/llvm-project/llvm/utils/Reviewing/find_interesting_reviews.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/Reviewing/find_interesting_reviews.py,1,['interoperab'],['interoperability']
Integrability,"""""""; Force numeric integration and do this numeric integration with the; RooBinIntegrator, which sums the function values at the bin centers.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:19,integrat,integration,19,tutorials/roofit/rf614_binned_fit_problems.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py,2,['integrat'],['integration']
Integrability,"""""""; Given a SARIF message object, checks if the text property contains an embedded link and; updates the run index if necessary.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py:19,message,message,19,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py,1,['message'],['message']
Integrability,"""""""; Given a SARIF object, checks its dictionary entries for a 'message' property.; If it exists, updates the message index of embedded links in the run index. Recursively looks through entries in the dictionary.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py:64,message,message,64,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py,2,['message'],['message']
Integrability,"""""""; Helper script to print out the raw content of an ELF section.; Example usages:; ```; # print out as bits by default; extract-section.py .text --input-file=foo.o; ```; ```; # read from stdin and print out in hex; cat foo.o | extract-section.py -h .text; ```; This is merely a wrapper around `llvm-readobj` that focuses on the binary; content as well as providing more formatting options.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/extract-section.py:280,wrap,wrapper,280,interpreter/llvm-project/llvm/utils/extract-section.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/extract-section.py,1,['wrap'],['wrapper']
Integrability,"""""""; Hi!. This issue may be a good introductory issue for people new to working on LLVM. If you would like to work on this issue, your first steps are:. 1. In the comments of the issue, request for it to be assigned to you.; 2. Fix the issue locally.; 3. [Run the test suite](https://llvm.org/docs/TestingGuide.html#unit-and-regression-tests) locally. Remember that the subdirectories under `test/` create fine-grained testing targets, so you can e.g. use `make check-clang-ast` to only run Clang's AST tests.; 4. Create a Git commit.; 5. Run [`git clang-format HEAD~1`](https://clang.llvm.org/docs/ClangFormat.html#git-integration) to format your changes.; 6. Open a [pull request](https://github.com/llvm/llvm-project/pulls) to the [upstream repository](https://github.com/llvm/llvm-project) on GitHub. Detailed instructions can be found [in GitHub's documentation](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request). If you have any further questions about this issue, don't hesitate to ask via a comment in the thread below.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/github-automation.py:620,integrat,integration,620,interpreter/llvm-project/llvm/utils/git/github-automation.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/github-automation.py,1,['integrat'],['integration']
Integrability,"""""""; Interface for getting maximum time to spend executing; a single test; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py:5,Interface,Interface,5,interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,1,['Interface'],['Interface']
Integrability,"""""""; Interface for getting the per_test_coverage value; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py:5,Interface,Interface,5,interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,1,['Interface'],['Interface']
Integrability,"""""""; Interface for setting maximum time to spend executing; a single test; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py:5,Interface,Interface,5,interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,1,['Interface'],['Interface']
Integrability,"""""""; Interface for setting the per_test_coverage value; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py:5,Interface,Interface,5,interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,1,['Interface'],['Interface']
Integrability,"""""""; Interface to an RDataFrame that can run its computation graph distributedly.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/DataFrame.py:5,Interface,Interface,5,bindings/experimental/distrdf/python/DistRDF/DataFrame.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/DataFrame.py,1,['Interface'],['Interface']
Integrability,"""""""; Jits the provided function using ROOT's NumbaDeclare.; Also checks if the function was jitted earlier in which case it won't jit again but if signature does not match. It raises an error. Arguments:; func: A python callable; cols_list: A list of columns of RDF on which func depends on.; extra_args: A dict of extra arguments that func requires.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py:280,depend,depends,280,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdf_pyz.py,1,['depend'],['depends']
Integrability,"""""""; Main function. Calls all other functions, depending on whether the macro input is in python or c++.; It adds the header information. Also, it adds a cell that draws all canvases. The working text is; then converted to a version 3 jupyter notebook, subsequently updated to a version 4. Then, metadata; associated with the language the macro is written in is attatched to he notebook. Finally the; notebook is executed and output as a Jupyter notebook.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py:47,depend,depending,47,documentation/doxygen/converttonotebook.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/converttonotebook.py,1,['depend'],['depending']
Integrability,"""""""; Minimal clang-rename integration with Vim. Before installing make sure one of the following is satisfied:. * clang-rename is in your PATH; * `g:clang_rename_path` in ~/.vimrc points to valid clang-rename executable; * `binary` in clang-rename.py points to valid to clang-rename executable. To install, simply put this into your ~/.vimrc for python2 support. noremap <leader>cr :pyf <path-to>/clang-rename.py<cr>. For python3 use the following command (note the change from :pyf to :py3f). noremap <leader>cr :py3f <path-to>/clang-rename.py<cr>. IMPORTANT NOTE: Before running the tool, make sure you saved the file. All you have to do now is to place a cursor on a variable/function/class which; you would like to rename and press '<leader>cr'. You will be prompted for a new; name if the cursor points to a valid symbol.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-rename/clang-rename.py:26,integrat,integration,26,interpreter/llvm-project/clang/tools/clang-rename/clang-rename.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-rename/clang-rename.py,1,['integrat'],['integration']
Integrability,"""""""; NodeProxy object is of type `DistRDF.NodeProxy` and; wraps a node object.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py:58,wrap,wraps,58,bindings/experimental/distrdf/test/test_proxy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py,1,['wrap'],['wraps']
Integrability,"""""""; Reset the integrator config to disable the RooBinIntegrator.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:15,integrat,integrator,15,tutorials/roofit/rf614_binned_fit_problems.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py,1,['integrat'],['integrator']
Integrability,"""""""; ResultPtrProxy object is of type `DistRDF.ResultPtrProxy` and; wraps a node object.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py:68,wrap,wraps,68,bindings/experimental/distrdf/test/test_proxy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/test_proxy.py,1,['wrap'],['wraps']
Integrability,"""""""; Return a default number of partitions to split the dataframe in,; depending on the backend.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py:71,depend,depending,71,bindings/experimental/distrdf/python/DistRDF/Backends/Base.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py,1,['depend'],['depending']
Integrability,"""""""; Return the array interface dictionary. Parameters:; self: RTensor object; Returns:; Dictionary following the Numpy array interface specifications; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py:22,interface,interface,22,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_rtensor.py,2,['interface'],['interface']
Integrability,"""""""; Returns a tuple (<supported> , <error message>); where; `<supported>` is True if `killProcessAndChildren()` is supported on; the current host, returns False otherwise.; `<error message>` is an empty string if `<supported>` is True,; otherwise is contains a string describing why the function is; not supported.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/util.py:43,message,message,43,interpreter/llvm-project/llvm/utils/lit/lit/util.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/util.py,2,['message'],['message']
Integrability,"""""""; Returns a tuple (<supported> , <error message>); where; `<supported>` is True if setting maxIndividualTestTime is supported; on the current host, returns False otherwise.; `<error message>` is an empty string if `<supported>` is True,; otherwise is contains a string describing why setting; maxIndividualTestTime is not supported.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py:43,message,message,43,interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,2,['message'],['message']
Integrability,"""""""; Set a function that will be executed as a first step on every backend before; any other operation. This method also executes the function on the current; user environment so changes are visible on the running session. This allows users to inject and execute custom code on the worker; environment without being part of the RDataFrame computational graph. Args:; fun (function): Function to be executed. *args (list): Variable length argument list used to execute the; function. **kwargs (dict): Keyword arguments used to execute the function.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py:244,inject,inject,244,bindings/experimental/distrdf/python/DistRDF/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py,1,['inject'],['inject']
Integrability,"""""""; Setup connection to a Dask cluster. Two ingredients are needed:; 1. Creating a cluster object that represents computing resources. This can be; done in various ways depending on the type of resources at disposal. To use; only the local machine (e.g. your laptop), a `LocalCluster` object can be; used. This step can be skipped if you have access to an existing Dask; cluster; in that case, the cluster administrator should provide you with a; URL to connect to the cluster in step 2. More options for cluster creation; can be found in the Dask docs at; http://distributed.dask.org/en/stable/api.html#cluster .; 2. Creating a Dask client object that connects to the cluster. This accepts; directly the object previously created. In case the cluster was setup; externally, you need to provide an endpoint URL to the client, e.g.; 'https://myscheduler.domain:8786'. Through Dask, you can connect to various types of cluster resources. For; example, you can connect together a set of machines through SSH and use them; to run your computations. This is done through the `SSHCluster` class. For; example:. ```python; from dask.distributed import SSHCluster; cluster = SSHCluster(; # A list with machine host names, the first name will be used as; # scheduler, following names will become workers.; hosts=[""machine1"",""machine2"",""machine3""],; # A dictionary of options for each worker node, here we set the number; # of cores to be used on each node.; worker_options={""nprocs"":4,},; ); ```. Another common usecase is interfacing Dask to a batch system like HTCondor or; Slurm. A separate package called dask-jobqueue (https://jobqueue.dask.org); extends the available Dask cluster classes to enable running Dask computations; as batch jobs. In this case, the cluster object usually receives the parameters; that would be written in the job description file. For example:. ```python; from dask_jobqueue import HTCondorCluster; cluster = HTCondorCluster(; cores=1,; memory='2000MB',; disk='1000MB',; ); # ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py:170,depend,depending,170,tutorials/dataframe/distrdf002_dask_connection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py,1,['depend'],['depending']
Integrability,"""""""; Static Analyzer qualification infrastructure. This source file contains all the functionality related to benchmarking; the analyzer on a set projects. Right now, this includes measuring; execution time and peak memory usage. Benchmark runs analysis on every; project multiple times to get a better picture about the distribution; of measured values. Additionally, this file includes a comparison routine for two benchmarking; results that plots the result together on one chart.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBenchmark.py:401,rout,routine,401,interpreter/llvm-project/clang/utils/analyzer/SATestBenchmark.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBenchmark.py,1,['rout'],['routine']
Integrability,"""""""; Summarize the information in the given coverage files. Emits the number of rules covered or the percentage of rules covered depending; on whether --num-rules has been used to specify the total number of rules.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/llvm-gisel-cov.py:129,depend,depending,129,interpreter/llvm-project/llvm/utils/llvm-gisel-cov.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/llvm-gisel-cov.py,1,['depend'],['depending']
Integrability,"""""""; Test RBDT interface; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/rbdt_xgboost.py:15,interface,interface,15,tmva/tmva/test/rbdt_xgboost.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/rbdt_xgboost.py,1,['interface'],['interface']
Integrability,"""""""; Test compliance of the RTensor methods with the numpy interface; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py:59,interface,interface,59,bindings/pyroot/pythonizations/test/rtensor.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py,1,['interface'],['interface']
Integrability,"""""""; Test decorator to create C++ wrapper for Python callables using numba with RVecs; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:34,wrap,wrapper,34,bindings/pyroot/pythonizations/test/numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py,1,['wrap'],['wrapper']
Integrability,"""""""; Test decorator to create C++ wrapper for Python callables using numba with fundamental types; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:34,wrap,wrapper,34,bindings/pyroot/pythonizations/test/numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py,1,['wrap'],['wrapper']
Integrability,"""""""; Test memory adoption of RTensor array interface.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py:43,interface,interface,43,bindings/pyroot/pythonizations/test/rtensor.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rtensor.py,1,['interface'],['interface']
Integrability,"""""""; Test memory adoption of std::vector and ROOT::RVec with the numpy; array interface.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/array_interface.py:78,interface,interface,78,bindings/pyroot/pythonizations/test/array_interface.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/array_interface.py,1,['interface'],['interface']
Integrability,"""""""; Test optional name of wrapper function; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:27,wrap,wrapper,27,bindings/pyroot/pythonizations/test/numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py,1,['wrap'],['wrapper']
Integrability,"""""""; Test wrapper with different input/output configurations; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:10,wrap,wrapper,10,bindings/pyroot/pythonizations/test/numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py,29,['wrap'],['wrapper']
Integrability,"""""""; TestCase adaptor for providing a Python 'unittest' compatible interface to 'lit'; tests.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitTestCase.py:67,interface,interface,67,interpreter/llvm-project/llvm/utils/lit/lit/LitTestCase.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitTestCase.py,1,['interface'],['interface']
Integrability,"""""""; Testing reading a custom class injected in the interpreter; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py:36,inject,injected,36,bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rdataframe_asnumpy.py,1,['inject'],['injected']
Integrability,"""""""; Tests for passing Python callables when constructing TFX classes. This feature is not implemented by a PyROOT pythonization, but by a converter of; Cppyy that creates a C++ wrapper to invoke the Python callable.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py:178,wrap,wrapper,178,bindings/pyroot/pythonizations/test/tf_pycallables.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/tf_pycallables.py,1,['wrap'],['wrapper']
Integrability,"""""""; Tests for the AsRVec feature enabling to adopt memory of Python objects; with an array interface member using RVec as C++ container.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec_asrvec.py:92,interface,interface,92,bindings/pyroot/pythonizations/test/rvec_asrvec.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/rvec_asrvec.py,1,['interface'],['interface']
Integrability,"""""""; Tests that counting the entries in the dataset does not depend on the; number of partitions. This could have happened if we used TEntryList; to restrict processing on a certain range of entries of the TChain in a; distributed task, but the changes in; https://github.com/root-project/root/commit/77bd5aa82e9544811e0d5fce197ab87c739c2e23; were not implemented yet.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_dist.py:61,depend,depend,61,bindings/experimental/distrdf/test/backend/test_dist.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_dist.py,1,['depend'],['depend']
Integrability,"""""""; The result of distributed execution should not depend on the number of; partitions assigned to the dataframe.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_dist.py:52,depend,depend,52,bindings/experimental/distrdf/test/backend/test_dist.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/test/backend/test_dist.py,1,['depend'],['depend']
Integrability,"""""""; This function is called right before the current Proxy gets deleted by; Python. Its purpose is to show that the wrapped node has no more; user references, which is one of the conditions for the node to be; pruned from the computational graph.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py:117,wrap,wrapped,117,bindings/experimental/distrdf/python/DistRDF/Proxy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Proxy.py,1,['wrap'],['wrapped']
Integrability,"""""""; With local RDataFrame, Snapshot returns another RDataFrame object that; can be used to continue the application. The equivalent in the; distributed scenario is to create a distributed RDataFrame. This is done by constructing a TChain with the name and the list of; paths stored in this object. The chain is then passed to the; `make_dataframe` function that changes depending on the backend. For example, if the original RDataFrame that triggered the distributed; computation was created via a Spark backend, then this function will; return another distributed RDataFrame build from a Spark backend; instance. And so on for all other DistRDF backends.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/PythonMergeables.py:371,depend,depending,371,bindings/experimental/distrdf/python/DistRDF/PythonMergeables.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/PythonMergeables.py,1,['depend'],['depending']
Integrability,"""""""; Wrap an arbitrary function defined in Python or C++. If you're wrapping a Python function, it must take numpy arrays of type; float64 as input and output types. Parameters:; - name (str): Name of the function.; - func (callable): Function that defines the function.; - variables (list): List of variables to be used in the function. Returns:; - RooAbsReal wrapping the given function; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooglobalfunc.py:5,Wrap,Wrap,5,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooglobalfunc.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooglobalfunc.py,3,"['Wrap', 'wrap']","['Wrap', 'wrapping']"
Integrability,"""""""; Wrap setuptools.setup for some bindings. :param pkg: Name of the bindings.; :param setup_py: Base __init__.py file of the bindings.; :param cmake_shared_library_prefix:; ${cmake_shared_library_prefix}; :param cmake_shared_library_suffix:; ${cmake_shared_library_suffix}; :param extra_pythons: Semicolon-separated list of customisation code.; :param pkg_version: The version of the bindings.; :param author: The name of the library author.; :param author_email: The email address of the library author.; :param url: The home page for the library.; :param license: The license.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py:5,Wrap,Wrap,5,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,1,['Wrap'],['Wrap']
Integrability,"""""""; Wrapper around _executeShCmd that handles; timeout; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:5,Wrap,Wrapper,5,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['Wrap'],['Wrapper']
Integrability,"""""""; Wrapper class for graph_nets' GNN model;s parsing and inference generation. graph_nets' GNN model comprises of three components, the nodes, edges and globals.; The entire model and its inference is based on the respective update functions,; and aggregate function with other components.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:5,Wrap,Wrapper,5,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,1,['Wrap'],['Wrapper']
Integrability,"""""""; Wrapper class for graph_nets' GraphIndependent model's parsing and inference generation. graph_nets' GraphIndependent model is similar to the GNN implementation, with the; difference being that it has no aggregate function. GraphIndependent is useful; for independent transformation on the graph data. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py:5,Wrap,Wrapper,5,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_gnn.py,1,['Wrap'],['Wrapper']
Integrability,"""""""; Wrapper function to facilitate calling LiveVisualize with a list or a tuple of drawable objects. Args:; drawables (list | tuple): Drawable objects to visualize.; 		; callback (function): An optional callback function to be applied to the drawable objects. Notes:; This function constructs a dictionary of drawable objects and their associated callback functions,; and then calls the main LiveVisualize function with the constructed dictionary.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py:5,Wrap,Wrapper,5,bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/LiveVisualize.py,1,['Wrap'],['Wrapper']
Integrability,"""""""; define i32 @main() {; entry:; ; Create a scratch space to print error messages.; %%str = alloca [128 x i8]; %%str.ptr = getelementptr inbounds [128 x i8], [128 x i8]* %%str, i32 0, i32 0. ; Build the input vector and call the test function.; %%v = call fastcc <%(N)d x %(T)s> @test_wrapper(%(inputs)s); ; We need to cast this back to an integer type vector to easily check the; ; result.; %%v.cast = bitcast <%(N)d x %(T)s> %%v to <%(N)d x %(IT)s>; br label %%test.0; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_fuzz.py:75,message,messages,75,interpreter/llvm-project/llvm/utils/shuffle_fuzz.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_fuzz.py,1,['message'],['messages']
Integrability,"""""""; lit - LLVM Integrated Tester. See lit.pod for more information.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/main.py:16,Integrat,Integrated,16,interpreter/llvm-project/llvm/utils/lit/lit/main.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/main.py,1,['Integrat'],['Integrated']
Integrability,"""""""; parseIntegratedTestScriptCommands(source_path) -> commands. Parse the commands in an integrated test script file into a list of; (line_number, command_type, line).; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:90,integrat,integrated,90,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['integrat'],['integrated']
Integrability,"""""""; pre-push git hook integration; =============================. This script is intended to be setup as a pre-push hook, from the root of the; repo run:. ln -sf ../../llvm/utils/git/pre-push.py .git/hooks/pre-push. From the git doc:. The pre-push hook runs during git push, after the remote refs have been; updated but before any objects have been transferred. It receives the name; and location of the remote as parameters, and a list of to-be-updated refs; through stdin. You can use it to validate a set of ref updates before a push; occurs (a non-zero exit code will abort the push).; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/pre-push.py:23,integrat,integration,23,interpreter/llvm-project/llvm/utils/git/pre-push.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/pre-push.py,1,['integrat'],['integration']
Integrability,"""""""; test.%(i)d:; %%v.%(i)d = extractelement <%(N)d x %(IT)s> %%v.cast, i32 %(i)d; %%cmp.%(i)d = icmp ne %(IT)s %%v.%(i)d, %(r)d; br i1 %%cmp.%(i)d, label %%die.%(i)d, label %%test.%(next_i)d. die.%(i)d:; ; Capture the actual value and print an error message.; %%tmp.%(i)d = zext %(IT)s %%v.%(i)d to i2048; %%bad.%(i)d = trunc i2048 %%tmp.%(i)d to i32; call i32 (i8*, i8*, ...) @sprintf(i8* %%str.ptr, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @error.%(i)d, i32 0, i32 0), i32 %%bad.%(i)d); %%length.%(i)d = call i32 @strlen(i8* %%str.ptr); call i32 @write(i32 2, i8* %%str.ptr, i32 %%length.%(i)d); call void @llvm.trap(); unreachable; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_fuzz.py:251,message,message,251,interpreter/llvm-project/llvm/utils/shuffle_fuzz.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_fuzz.py,1,['message'],['message']
Integrability,"""""""; using namespace RooFit;; using namespace RooStats;. class BinCountTestStat : public TestStatistic {; public:; BinCountTestStat(void) : fColumnName(""tmp"") {}; BinCountTestStat(string columnName) : fColumnName(columnName) {}. virtual Double_t Evaluate(RooAbsData &data, RooArgSet & /*nullPOI*/); {; // This is the main method in the interface; Double_t value = 0.0;; for (int i = 0; i < data.numEntries(); i++) {; value += data.get(i)->getRealValue(fColumnName.c_str());; }; return value;; }; virtual const TString GetVarName() const { return fColumnName; }. private:; string fColumnName;. protected:; ClassDef(BinCountTestStat, 1); };; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:336,interface,interface,336,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,2,['interface'],['interface']
Integrability,"""""""A parser for LLVM/Clang style integrated test scripts. keyword: The keyword to parse for. It must end in either '.' or ':'.; kind: An value of ParserKind.; parser: A custom parser. This value may only be specified with; ParserKind.CUSTOM.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:33,integrat,integrated,33,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['integrat'],['integrated']
Integrability,"""""""A shuffle-select vector fuzz tester. This is a python program to fuzz test the LLVM shufflevector and select; instructions. It generates a function with a random sequnece of shufflevectors; while optionally attaching it with a select instruction (regular or zero merge),; maintaining the element mapping accumulated across the function. It then; generates a main function which calls it with a different value in each element; and checks that the result matches the expected mapping. Take the output IR printed to stdout, compile it to an executable using whatever; set of transforms you want to test, and run the program. If it crashes, it found; a bug (an error message with the expected and actual result is printed).; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py:667,message,message,667,interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,1,['message'],['message']
Integrability,"""""""A tool for looking for indirect jumps and calls in x86 binaries. Helpful to verify whether or not retpoline mitigations are catching; all of the indirect branches in a binary and telling you which; functions the remaining ones are in (assembly, etc). Depends on llvm-objdump being in your path and is tied to the; dump format.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/indirect_calls.py:254,Depend,Depends,254,interpreter/llvm-project/llvm/utils/indirect_calls.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/indirect_calls.py,1,['Depend'],['Depends']
Integrability,"""""""Add a regular expression option value to a list of regular expressions.; This compiles the expression, wraps it in a Regex and adds it to the option; value list.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py:106,wrap,wraps,106,interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,1,['wrap'],['wraps']
Integrability,"""""""Always resort to the compiler wrapper even when better; intercept methods are available.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py:33,wrap,wrapper,33,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,1,['wrap'],['wrapper']
Integrability,"""""""Bindings for {}.; These bindings are based on https://cppyy.readthedocs.io/en/latest/, and can be; used as per the documentation provided via the cppyy.cgl namespace. The environment; variable LD_LIBRARY_PATH must contain the path of the {}.rootmap file. Use; ""import cppyy; from cppyy.gbl import <some-C++-entity>"". Alternatively, use ""import {}"". This convenience wrapper supports ""discovery"" of the; available C++ entities using, for example Python 3's command line completion support.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py:369,wrap,wrapper,369,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,1,['wrap'],['wrapper']
Integrability,"""""""Capture stdout, stderr and sideband. Forward them as stream messages.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/Jupyter/kernel/clingkernel.py:63,message,messages,63,interpreter/cling/tools/Jupyter/kernel/clingkernel.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/Jupyter/kernel/clingkernel.py,1,['message'],['messages']
Integrability,"""""""Check CFC - Check Compile Flow Consistency. This is a compiler wrapper for testing that code generation is consistent with; different compilation processes. It checks that code is not unduly affected by; compiler options or other changes which should not have side effects. To use:; -Ensure that the compiler under test (i.e. clang, clang++) is on the PATH; -On Linux copy this script to the name of the compiler; e.g. cp check_cfc.py clang && cp check_cfc.py clang++; -On Windows use setup.py to generate check_cfc.exe and copy that to clang.exe; and clang++.exe; -Enable the desired checks in check_cfc.cfg (in the same directory as the; wrapper); e.g.; [Checks]; dash_g_no_change = true; dash_s_no_change = false. -The wrapper can be run using its absolute path or added to PATH before the; compiler under test; e.g. export PATH=<path to check_cfc>:$PATH; -Compile as normal. The wrapper intercepts normal -c compiles and will return; non-zero if the check fails.; e.g.; $ clang -c test.cpp; Code difference detected with -g; --- /tmp/tmp5nv893.o; +++ /tmp/tmp6Vwjnc.o; @@ -1 +1 @@; - 0: 48 8b 05 51 0b 20 00 mov 0x200b51(%rip),%rax; + 0: 48 39 3d 51 0b 20 00 cmp %rdi,0x200b51(%rip). -To run LNT with Check CFC specify the absolute path to the wrapper to the --cc; and --cxx options; e.g.; lnt runtest nt --cc <path to check_cfc>/clang \\; --cxx <path to check_cfc>/clang++ ... To add a new check:; -Create a new subclass of WrapperCheck; -Implement the perform_check() method. This should perform the alternate compile; and do the comparison.; -Add the new check to check_cfc.cfg. The check has the same name as the; subclass.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py:66,wrap,wrapper,66,interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py,6,"['Wrap', 'wrap']","['WrapperCheck', 'wrapper']"
Integrability,"""""""Check the intent of the build command. When static analyzer run against project configure step, it should be; silent and no need to run the analyzer or generate report. To run `scan-build` against the configure step might be necessary,; when compiler wrappers are used. That's the moment when build setup; check the compiler and capture the location for the build process.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py:254,wrap,wrappers,254,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,1,['wrap'],['wrappers']
Integrability,"""""""Creates command line parser for all build wrapper commands.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py:45,wrap,wrapper,45,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,1,['wrap'],['wrapper']
Integrability,"""""""Do housekeeping tasks and execute the wrapped method.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py:41,wrap,wrapped,41,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py,1,['wrap'],['wrapped']
Integrability,"""""""Entry point for `analyze-cc` and `analyze-c++` compiler wrappers.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py:59,wrap,wrappers,59,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,1,['wrap'],['wrappers']
Integrability,"""""""Entry point to run (or not) static analyzer against a single entry; of the compilation database. This complex task is decomposed into smaller methods which are calling; each other in chain. If the analysis is not possible the given method; just return and break the chain. The passed parameter is a python dictionary. Each method first check; that the needed parameters received. (This is done by the 'require'; decorator. It's like an 'assert' to check the contract between the; caller and the called method.)""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py:461,contract,contract,461,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,1,['contract'],['contract']
Integrability,"""""""Find out was it a C++ compiler call. Compiler wrapper names; contain the compiler type. C++ compiler wrappers ends with `c++`,; but might have `.exe` extension on windows.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py:49,wrap,wrapper,49,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py,2,['wrap'],"['wrapper', 'wrappers']"
Integrability,"""""""Generate the difference of two YAML files into a new YAML file (works on; pair of directories too). A new attribute 'Added' is set to True or False; depending whether the entry is added or removed from the first input to the; next. The tools requires PyYAML.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt-viewer/opt-diff.py:152,depend,depending,152,interpreter/llvm-project/llvm/tools/opt-viewer/opt-diff.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt-viewer/opt-diff.py,1,['depend'],['depending']
Integrability,"""""""Implement intercept compiler wrapper functionality. It does generate execution report into target directory.; The target directory name is from environment variables.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py:32,wrap,wrapper,32,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py,1,['wrap'],['wrapper']
Integrability,"""""""Implements analyzer compiler wrapper functionality.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py:32,wrap,wrapper,32,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,1,['wrap'],['wrapper']
Integrability,"""""""Implements compiler wrapper base functionality. A compiler wrapper executes the real compiler, then implement some; functionality, then returns with the real compiler exit code. :param function: the extra functionality what the wrapper want to; do on top of the compiler call. If it throws exception, it will be; caught and logged.; :return: the exit code of the real compiler. The :param function: will receive the following arguments:. :param result: the exit code of the compilation.; :param execution: the command executed by the wrapper.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py:23,wrap,wrapper,23,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py,4,['wrap'],['wrapper']
Integrability,"""""""Injection of TDirectory.__getitem__ that raises AttributeError on failure. Method that is assigned to TDirectory.__getitem__. It relies on Get to; obtain the object from the TDirectory and adds on top:; - Raising an AttributeError if the object does not exist; - Caching the result of a successful get for future re-attempts.; Once cached, the same object is retrieved every time.; This pythonisation is inherited by TDirectoryFile and TFile. Example:; ```; myfile.mydir.mysubdir.myHist.Draw(); ```; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py:3,Inject,Injection,3,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tdirectory.py,1,['Inject'],['Injection']
Integrability,"""""""Internal class to manage lookups of gROOT in the facade.; This wrapper calls _finalSetup on the facade when it; receives a lookup, unless the lookup is for SetBatch.; This allows to evaluate the command line parameters; before checking if batch mode is on in _finalSetup; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:66,wrap,wrapper,66,bindings/pyroot/pythonizations/python/ROOT/_facade.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py,1,['wrap'],['wrapper']
Integrability,"""""""Loading external checkers using the clang plugin interface.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py:52,interface,interface,52,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,1,['interface'],['interface']
Integrability,"""""""Log a string to the RooFit message log for the WARNING level on; the DataHandling topic.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py:30,message,message,30,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodataset.py,1,['message'],['message']
Integrability,"""""""Parse the file generated by the 'libear' preloaded library. Given filename points to a file which contains the basic report; generated by the interception library or wrapper command. A single; report file _might_ contain multiple process creation info.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py:169,wrap,wrapper,169,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py,1,['wrap'],['wrapper']
Integrability,"""""""Python errors should propagate through wrapper""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:42,wrap,wrapper,42,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,1,['wrap'],['wrapper']
Integrability,"""""""Reads and merges all .sarif files in the given output directory. Each sarif file in the output directory is understood as a single run; and thus appear separate in the top level runs array. This requires; modifying the run index of any embedded links in messages.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py:257,message,messages,257,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/report.py,1,['message'],['messages']
Integrability,"""""""Reduces GlobalISel failures. This script is a utility to reduce tests that GlobalISel; fails to compile. It runs llc to get the error message using a regex and creates; a custom command to check that specific error. Then, it runs bugpoint; with the custom command. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/bugpoint_gisel_reducer.py:137,message,message,137,interpreter/llvm-project/llvm/utils/bugpoint_gisel_reducer.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/bugpoint_gisel_reducer.py,1,['message'],['message']
Integrability,"""""""Run the build commands first, intercept compiler; calls and then run the static analyzer afterwards.; Generally speaking it has better coverage on build commands.; With '--override-compiler' it use compiler wrapper, but does; not run the analyzer till the build is finished.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py:210,wrap,wrapper,210,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,1,['wrap'],['wrapper']
Integrability,"""""""STL sequence iterator injected in RooAbsCollection, inherited by RooArgSet""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py:25,inject,injected,25,bindings/pyroot/pythonizations/test/roofit/rooabscollection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/roofit/rooabscollection.py,1,['inject'],['injected']
Integrability,"""""""Script to find missing formal dependencies in a build.ninja file. Suppose you have a header file that's autogenerated by (for example) Tablegen.; If a C++ compilation step needs to include that header, then it must be; executed after the Tablegen build step that generates the header. So the; dependency graph in build.ninja should have the Tablegen build step as an; ancestor of the C++ one. If it does not, then there's a latent build-failure; bug, because depending on the order that ninja chooses to schedule its build; steps, the C++ build step could run first, and fail because the header it needs; does not exist yet. But because that kind of bug can easily be latent or intermittent, you might; not notice, if your local test build happens to succeed. What you'd like is a; way to detect problems of this kind reliably, even if they _didn't_ cause a; failure on your first test. This script tries to do that. It's specific to the 'ninja' build tool, because; ninja has useful auxiliary output modes that produce the necessary data:. - 'ninja -t graph' emits the full DAG of formal dependencies derived from; build.ninja (in Graphviz format). - 'ninja -t deps' dumps the database of dependencies discovered at build time; by finding out which headers each source file actually included. By cross-checking these two sources of data against each other, you can find; true dependencies shown by 'deps' that are not reflected as formal dependencies; in 'graph', i.e. a generated header that is required by a given source file but; not forced to be built first. To run it:. - set up a build directory using ninja as the build tool (cmake -G Ninja). - in that build directory, run ninja to perform an actual build (populating; the dependency database). - then, in the same build directory, run this script. No arguments are needed; (but -C and -f are accepted, and propagated to ninja for convenience). Requirements outside core Python: the 'pygraphviz' module, available via pip or; as the 'pytho",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/check_ninja_deps.py:33,depend,dependencies,33,interpreter/llvm-project/llvm/utils/check_ninja_deps.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/check_ninja_deps.py,3,['depend'],"['dependencies', 'dependency', 'depending']"
Integrability,"""""""Sequence using iterator protocol defined with a generator""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:27,protocol,protocol,27,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,1,['protocol'],['protocol']
Integrability,"""""""Sequence using iterator protocol""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:27,protocol,protocol,27,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,1,['protocol'],['protocol']
Integrability,"""""""Set up environment for build command to interpose compiler wrapper.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py:62,wrap,wrapper,62,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,1,['wrap'],['wrapper']
Integrability,"""""""Set up environment for interpose compiler wrapper.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py:45,wrap,wrapper,45,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py,1,['wrap'],['wrapper']
Integrability,"""""""Sets up the environment for the build command. It sets the required environment variables and execute the given command.; The exec calls will be logged by the 'libear' preloaded library or by the; 'wrapper' programs.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py:201,wrap,wrapper,201,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py,1,['wrap'],['wrapper']
Integrability,"""""""Silences all log messages. Also collects info about log messages that would've been emitted.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/revert_checker_test.py:20,message,messages,20,interpreter/llvm-project/llvm/utils/revert_checker_test.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/revert_checker_test.py,2,['message'],['messages']
Integrability,"""""""Test the iterator protocol mapping for an STL like class""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py:21,protocol,protocol,21,bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_stltypes.py,1,['protocol'],['protocol']
Integrability,"""""""This function kills a process with ``pid`` and all its running children; (recursively). It is currently implemented using the psutil module on some; platforms which provides a simple platform neutral implementation. TODO: Reimplement this without using psutil on all platforms so we can; remove our dependency on it. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/util.py:302,depend,dependency,302,interpreter/llvm-project/llvm/utils/lit/lit/util.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/util.py,1,['depend'],['dependency']
Integrability,"""""""This mainly functions as a shell script, but python is used for its; superior control flow. An important requirement of the CI is easily; reproducible builds, therefore a wrapper is made for running shell; commands so that they are also logged. The log is printed when build fails/succeeds and needs to perfectly; reproduce the build when pasted into a shell. Therefore all file system; modifying code not executed from shell needs a shell equivalent; explicitly appended to the shell log.; e.g. `os.chdir(x)` requires `cd x` to be appended to the shell log """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py:174,wrap,wrapper,174,.github/workflows/root-ci-config/build_root.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_root.py,1,['wrap'],['wrapper']
Integrability,"""""""When '%(prog)s' analyzes a project by interposing a compiler; wrapper, which executes a real compiler for compilation and do other; tasks (record the compiler invocation). Because of this interposing,; '%(prog)s' does not know what compiler your project normally uses.; Instead, it simply overrides the CC environment variable, and guesses; your default compiler. If you need '%(prog)s' to use a specific compiler for *compilation*; then you can use this option to specify a path to that compiler.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py:65,wrap,wrapper,65,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/arguments.py,1,['wrap'],['wrapper']
Integrability,"""""""Wrap a compiled regular expression object to allow deep copy of a regexp.; This is required for the deep copy done in do_scrub. """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py:3,Wrap,Wrap,3,interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,1,['Wrap'],['Wrap']
Integrability,"""""""Wrap a likely AST node name in a link to its clang docs. We want to do this only if the page exists, in which case it will be; referenced from the class index page.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py:3,Wrap,Wrap,3,interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/docs/tools/dump_ast_matchers.py,1,['Wrap'],['Wrap']
Integrability,"""""""Wrapper around the Cpp RBatchGenerator. Args:; tree_name (str): Name of the tree in the ROOT file; file_name (str): Path to the ROOT file; batch_size (int): Size of the returned chunks.; chunk_size (int):; The size of the chunks loaded from the ROOT file. Higher chunk; size results in better randomization, but higher memory usage.; columns (list[str], optional):; Columns to be returned. If not given, all columns are used.; filters (list[str], optional):; Filters to apply during loading. If not given, no filters; are applied.; max_vec_sizes (dict[std, int], optional):; Size of each column that consists of vectors.; Required when using vector based columns.; vec_padding (int):; Value to pad vectors with if the vector is smaller; than the given max vector length. Defaults is 0; target (str, optional): Column that is used as target.; weights (str, optional):; Column used to weight events.; Can only be used when a target is given.; validation_split (float, optional):; The ratio of batches being kept for validation.; Value has to be between 0 and 1. Defaults to 0.0.; max_chunks (int, optional):; The number of chunks that should be loaded for an epoch.; If not given, the whole file is used.; shuffle (bool):; Batches consist of random events and are shuffled every epoch.; Defaults to True.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py:3,Wrap,Wrapper,3,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tmva/_batchgenerator.py,1,['Wrap'],['Wrapper']
Integrability,"""""""Wrapper for the results of executing an individual test.""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py:3,Wrap,Wrapper,3,interpreter/llvm-project/llvm/utils/lit/lit/Test.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/Test.py,1,['Wrap'],['Wrapper']
Integrability,"""""""\; namespace Numba {{; /*; * C++ wrapper function around the jitted Python wrapping which calls the jitted Python callable; */; {RETURN_TYPE} {FUNC_NAME}({INPUT_SIGNATURE}) {{; // Create a function pointer from the jitted Python wrapper; const auto funcptr = reinterpret_cast<{FUNC_PTR_TYPE}>({FUNC_PTR});; // Perform conversion of RVec<bool>; {VECBOOL_CONVERSION}; // Return the result; {RETURN_OP}; }}; }}""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:36,wrap,wrapper,36,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,3,['wrap'],"['wrapper', 'wrapping']"
Integrability,"""""""_parseKeywords. Scan an LLVM/Clang style integrated test script and extract all the lines; pertaining to a special parser. This includes 'RUN', 'XFAIL', 'REQUIRES',; 'UNSUPPORTED', 'ALLOW_RETRIES', 'END', 'DEFINE', 'REDEFINE', as well as; other specified custom parsers. Returns a dictionary mapping each custom parser to its value after; parsing the test.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:44,integrat,integrated,44,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['integrat'],['integrated']
Integrability,"""""""check_output returns bytes or string depend on python version""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py:40,depend,depend,40,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py,1,['depend'],['depend']
Integrability,"""""""gen_std.py is a tool to generate a lookup table (from qualified names to; include headers) for C/C++ Standard Library symbols by parsing archived HTML; files from cppreference. The generated files are located in clang/include/Tooling/Inclusions. Caveats and FIXMEs:; - only symbols directly in ""std"" namespace are added, we should also add std's; subnamespace symbols (e.g. chrono).; - symbols with multiple variants or defined in multiple headers aren't added,; e.g. std::move, std::swap. Usage:; 1. Install BeautifulSoup dependency, see instruction:; https://www.crummy.com/software/BeautifulSoup/bs4/doc/#installing-beautiful-soup; 2. Download cppreference offline HTML files (html_book_20220730.zip in Unofficial Release) at; https://en.cppreference.com/w/Cppreference:Archives; 3. Unzip the zip file from step 2 (e.g., to a ""cppreference"" directory). You should; get a ""cppreference/reference"" directory.; 4. Run the command:; // Generate C++ symbols; python3 gen_std.py -cppreference cppreference/reference -symbols=cpp > StdSymbolMap.inc; // Generate C symbols; python3 gen_std.py -cppreference cppreference/reference -symbols=c > CSymbolMap.inc; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/include-mapping/gen_std.py:526,depend,dependency,526,interpreter/llvm-project/clang/tools/include-mapping/gen_std.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/include-mapping/gen_std.py,1,['depend'],['dependency']
Integrability,"""""""namespace abstract_classes {; class Base {; public:; virtual ~Base() {}; virtual std::string whoami() = 0;; virtual std::string message() = 0;; };. std::string whois(Base& obj) { return obj.whoami(); }; std::string saywot(Base& obj) { return obj.message(); } }""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:131,message,message,131,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,2,['message'],['message']
Integrability,"""""""parseIntegratedTestScript - Scan an LLVM/Clang style integrated test; script and extract the lines to 'RUN' as well as 'XFAIL', 'REQUIRES',; 'UNSUPPORTED' and 'ALLOW_RETRIES' information into the given test. If additional parsers are specified then the test is also scanned for the; keywords they specify and all matches are passed to the custom parser. If 'require_script' is False an empty script; may be returned. This can be used for test formats where the actual script; is optional or ignored.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:56,integrat,integrated,56,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['integrat'],['integrated']
Integrability,"""""""part of public interface""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libear/__init__.py:18,interface,interface,18,interpreter/llvm-project/clang/tools/scan-build-py/lib/libear/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libear/__init__.py,3,['interface'],['interface']
Integrability,"""""""prints message using select graphic rendition, defaults to bold text; https://en.wikipedia.org/wiki/ANSI_escape_code#SGR_(Select_Graphic_Rendition)_parameters""""""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_utils.py:10,message,message,10,.github/workflows/root-ci-config/build_utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/.github/workflows/root-ci-config/build_utils.py,1,['message'],['message']
Integrability,"""""""publish display-data messages on IOPub.; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/Jupyter/kernel/clingkernel.py:24,message,messages,24,interpreter/cling/tools/Jupyter/kernel/clingkernel.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/Jupyter/kernel/clingkernel.py,1,['message'],['messages']
Integrability,"""""""rootls main routine for an arbitrary number of files. args:; oneColumn (bool):; longListing (bool):; treeListing (bool):; recursiveListing(bool):; sourceList: a list of tuples with one list element per file; the first tuple entry being the root file,; the second a list of subdirectories,; each being represented as a list itself with a string per level; e.g.; rootls tutorial/tmva/TMVA.root:Method_BDT/BDT turns into; [('tutorials/tmva/TMVA.root', [['Method_BDT','BDT']])]. returns:; retcode (int): 0 in case of success; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/python/cmdLineUtils.py:15,rout,routine,15,main/python/cmdLineUtils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/python/cmdLineUtils.py,1,['rout'],['routine']
Integrability,"""""""rootls main routine for one file looping over paths in the file. sorts out directories and key, and loops over all paths, then forwards to; (_rootLsPrintLongLs or _rootLsPrintSimpleLs) - split in _rootLsPrint. args:; oneColumn (bool):; longListing (bool):; treeListing (bool):; recursiveListing(bool):; indent (int): how many columns the printout should be indented globally; manySources (bool): if more than one file is printed; fileName (str): the root file name; pathSplitList: a list of subdirectories,; each being represented as a list itself with a string per level; e.g.; [['Method_BDT','BDT']]; Returns:; retcode (int): 0 in case of success, 1 if the file could not be opened; """"""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/python/cmdLineUtils.py:15,rout,routine,15,main/python/cmdLineUtils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/python/cmdLineUtils.py,1,['rout'],['routine']
Integrability,"""internal"" parameter values.; /// Long story short: when MinuitFcnGrad::returnsInMinuit2ParameterSpace() returns true, Minuit will pass ""internal""; /// values to Gradient. These cannot be synced with this function's RooFit parameters using; /// SetPdfParamVal, unless a manual transformation step is performed in advance. However, they do need to be passed; /// on to the gradient calculator, since indeed we expect values there to be in ""internal"" space. However, this is; /// calculator dependent. Note that in the current MinuitFcnGrad implementation we do not actually allow for; /// calculators in ""external"" (i.e. regular RooFit parameter space) values, since; /// MinuitFcnGrad::returnsInMinuit2ParameterSpace is hardcoded to true. This should in a future version be changed so; /// that the calculator (the wrapper) is queried for this information.; /// Because some gradient calculators may also use the regular RooFit parameters (e.g. for calculating the likelihood's; /// value itself), this information is also passed on to the gradient wrapper. Vice versa, when updated ""internal""; /// parameters are passed to Gradient, the likelihood may be affected as well. Even though a; /// transformation from internal to ""external"" may be necessary before the values can be used, the likelihood can at; /// least log that its parameter values are possibly no longer in sync with those of the gradient.; ///; /// The second twist is that the Minuit external parameters may still be different from the ones used in RooFit. This; /// happens when Minuit tries out values that lay outside the RooFit parameter's range(s). RooFit's setVal (called; /// inside SetPdfParamVal) then clips the RooAbsArg's value to one of the range limits, instead of setting it to the; /// value Minuit intended. When this happens, i.e. syncParameterValuesFromMinuitCalls is called with; /// minuit_internal = false and the values do not match the previous values stored in _minuitInternalX *but* the; /// values after Set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx:2532,wrap,wrapper,2532,roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/MinuitFcnGrad.cxx,1,['wrap'],['wrapper']
Integrability,"# """"""Build the ranges for this dataset.""""""; # For the moment, we explicitly pass only one ""subname"", since there is; # only one name possible for the whole RNTuple; # TODO: implement action cloning for RNTuple; # Inject a sentinel flag in the execution identifier to specify this; # RDataFrame instance is going to process RNTuple data and the computation; # graph needs to be recreated at every task",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:213,Inject,Inject,213,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py,1,['Inject'],['Inject']
Integrability,"# ***** Condition 1 *****; # If the node does not have children, it might be prunable.; # ***** Condition 2 *****; # If the node is wrapped by a proxy which is not directly; # assigned to a variable, then it will be flagged for pruning; # ***** Condition 3 *****; # If the current node's value was already computed, it should; # get pruned. Only action nodes may possess a value attribute; # which is not None",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Node.py:132,wrap,wrapped,132,bindings/experimental/distrdf/python/DistRDF/Node.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Node.py,1,['wrap'],['wrapped']
Integrability,"# ----------------------------------------------------; # P A R T 2 : D I R E C T I N T E G R A T I O N; # ====================================================; # This is not the 'RooStats' way, but in this case the distribution; # of the test statistic is simply x and can be calculated directly; # from the PDF using RooFit's built-in integration.; # Note, this does not generalize to situations in which the test statistic; # depends on many events (rows in a dataset).; # construct the Bayesian-averaged model (eg. a projection pdf); # $p'(x|s) = \int db p(x|s+b) * [ p(y|b) * prior(b) ]$",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:337,integrat,integration,337,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,2,"['depend', 'integrat']","['depends', 'integration']"
Integrability,"# -----------------------------------------; # OUTPUT W/O PROOF (2.66 GHz Intel Core i7); # =========================================; # -----------------------------------------; # Part 2; # Hybrid p-value from direct integration = 0.00094165; # Z_Gamma Significance = 3.10804; # -----------------------------------------; #; # Part 3; # Z_Bi p-value (analytic): 0.00094165; # Z_Bi significance (analytic): 3.10804; # Real time 0:00:00, CP time 0.610; # -----------------------------------------; # Part 4; # Results HybridCalculator_result:; # - Null p-value = 0.00115 +/- 0.000228984; # - Significance = 3.04848 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 20000; # - Test statistic evaluated on data: 150; # - CL_b: 0.99885 +/- 0.000239654; # - CL_s+b: 0.476 +/- 0.0157932; # - CL_s: 0.476548 +/- 0.0158118; # Real time 0:00:07, CP time 7.620; # -----------------------------------------; # Part 5; # Results HybridCalculator_result:; # - Null p-value = 0.0009 +/- 0.000206057; # - Significance = 3.12139 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 20000; # - Test statistic evaluated on data: 10.8198; # - CL_b: 0.9991 +/- 0.000212037; # - CL_s+b: 0.465 +/- 0.0157726; # - CL_s: 0.465419 +/- 0.0157871; # Real time 0:00:34, CP time 34.360; # -----------------------------------------; # Part 6; # Results HybridCalculator_result:; # - Null p-value = 0.000666667 +/- 0.000149021; # - Significance = 3.20871 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 30000; # - Test statistic evaluated on data: 5.03388; # - CL_b: 0.999333 +/- 0.000149021; # - CL_s+b: 0.511 +/- 0.0158076; # - CL_s: 0.511341 +/- 0.0158183; # Real time 0:05:06, CP time 306.330; # ---------------------------------------------------------; # OUTPUT w/ PROOF (2.66 GHz Intel Core i7, 4 virtual cores); # =========================================================; # -----------------------------------------; # Part 5; # Results HybridCalculator_result:; # - Null p-value = 0.00075 +/- 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:219,integrat,integration,219,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,1,['integrat'],['integration']
Integrability,"# ----------------------------------; # The Actual Tutorial Macro; # This tutorial has 6 parts; # Table of Contents; # Setup; # 1. Make the model for the 'prototype problem'; # Special cases; # 2. Use RooFit's direct integration to get p-value & significance; # 3. Use RooStats analytic solution for this problem; # RooStats HybridCalculator -- can be generalized; # 4. RooStats ToyMC version of 2. & 3.; # 5. RooStats ToyMC with an equivalent test statistic; # 6. RooStats ToyMC with simultaneous control & main measurement; # It takes ~4 min without PROOF and ~2 min with PROOF on 4 cores.; # Of course, everything looks nicer with more toys, which takes longer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:217,integrat,integration,217,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,1,['integrat'],['integration']
Integrability,# A comment in a build script which disables wrapping.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:45,wrap,wrapping,45,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,1,['wrap'],['wrapping']
Integrability,"# A dummy module to inject in the parent module",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/__init__.py:20,inject,inject,20,bindings/experimental/distrdf/python/DistRDF/Backends/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/__init__.py,1,['inject'],['inject']
Integrability,"# A list of ignored prefixes for module index sorting.; #modindex_common_prefix = []; # If true, keep warnings as ""system message"" paragraphs in the built documents.; #keep_warnings = False; # If true, `todo` and `todoList` produce output, else they produce nothing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:122,message,message,122,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py,1,['message'],['message']
Integrability,"# Activate debug-level messages for topic integration to be able to follow; # actions below",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:23,message,messages,23,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,2,"['integrat', 'message']","['integration', 'messages']"
Integrability,"# Add Integration topic to existing INFO stream",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:6,Integrat,Integration,6,tutorials/roofit/rf506_msgservice.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py,1,['Integrat'],['Integration']
Integrability,"# Adding integration topic to existing INFO stream; # ---------------------------------------------------; # Print streams configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:9,integrat,integration,9,tutorials/roofit/rf506_msgservice.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py,1,['integrat'],['integration']
Integrability,"# Adjust global 1D integration precision; # ----------------------------------------------------------------------------; # Print current global default configuration for numeric integration; # strategies",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:19,integrat,integration,19,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,2,['integrat'],['integration']
Integrability,"# Adjusting default config for a specific pdf; # -------------------------------------------------------------------------------------; # Another possibility: associate custom numeric integration configuration; # as default for object 'landau'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:184,integrat,integration,184,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,1,['integrat'],['integration']
Integrability,"# Advanced pdf constructor arguments; # ----------------------------------------------------------------; #; # P.d.f. constructor arguments may by any type of ROOT.RooAbsArg, also; #; # Double_t -. converted to ROOT.RooConst(...); # {a,b,c} -. converted to ROOT.RooArgSet() or ROOT.RooArgList() depending on required ctor arg; # dataset name -. converted to ROOT.RooAbsData reference for any dataset residing in the workspace; # enum -. Any enum label that belongs to an enum defined in the (base); # class; # Make a dummy dataset pdf 'model' and import it in the workspace",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf511_wsfactory_basic.py:295,depend,depending,295,tutorials/roofit/rf511_wsfactory_basic.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf511_wsfactory_basic.py,1,['depend'],['depending']
Integrability,"# Alternative: fit chi^2 integrating f(x) over ranges defined by X errors, rather; # than taking point at center of bin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py:25,integrat,integrating,25,tutorials/roofit/rf609_xychi2fit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py,1,['integrat'],['integrating']
Integrability,"# An important thing to notice is that the counts of a filter are relative to the; # number of entries a filter ""sees"". Therefore, if a Range depends on a filter,; # the Range will act on the entries passing the filter only.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df006_ranges.py:142,depend,depends,142,tutorials/dataframe/df006_ranges.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df006_ranges.py,1,['depend'],['depends']
Integrability,"# Another possibility: Change global default for 1D numeric integration; # strategy on finite domains",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:60,integrat,integration,60,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,1,['integrat'],['integration']
Integrability,"# Apply additional cuts depending on lepton flavour",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:24,depend,depending,24,tutorials/dataframe/df106_HiggsToFourLeptons.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py,1,['depend'],['depending']
Integrability,"# Avoid wrapping the , or ; to the new line",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/update_options_td_flags.py:8,wrap,wrapping,8,interpreter/llvm-project/clang/utils/update_options_td_flags.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/update_options_td_flags.py,1,['wrap'],['wrapping']
Integrability,# Be verbose with messages.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py:18,message,messages,18,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py,1,['message'],['messages']
Integrability,# Bring max_hotness into the remarks so that; # RelativeHotness does not depend on an external global.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt-viewer/optrecord.py:73,depend,depend,73,interpreter/llvm-project/llvm/tools/opt-viewer/optrecord.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt-viewer/optrecord.py,1,['depend'],['depend']
Integrability,"# Build C++ wrapper for jitting with cling; # Define:; # - Input signature; # - Function pointer types",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:12,wrap,wrapper,12,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,1,['wrap'],['wrapper']
Integrability,"# Build wrapper code",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:8,wrap,wrapper,8,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,2,['wrap'],['wrapper']
Integrability,"# C++ object to Python proxy wrapping for returns from Numba trace",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py:29,wrap,wrapping,29,bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/numba_ext.py,1,['wrap'],['wrapping']
Integrability,"# CMS data taken in 2012 (11.6 fb^-1 integrated luminosity)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py:37,integrat,integrated,37,tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,1,['integrat'],['integrated']
Integrability,"# Calculate integral over landau custom numeric integrator specified as; # object default",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:48,integrat,integrator,48,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,1,['integrat'],['integrator']
Integrability,"# Calculate integral over landau with default choice of numeric integrator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:64,integrat,integrator,64,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,1,['integrat'],['integrator']
Integrability,# Call the wrapped method and ignore it's return value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py:11,wrap,wrapped,11,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/__init__.py,1,['wrap'],['wrapped']
Integrability,"# Certain kinds of complex manglings we assume cannot be part of a public; # interface, and we handle them by raising an exception.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/extract_symbols.py:77,interface,interface,77,interpreter/llvm-project/llvm/utils/extract_symbols.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/extract_symbols.py,1,['interface'],['interface']
Integrability,"# Change global strategy for 1D sampling problems without conditional observable; # (1st kFALSE) and without discrete observable (2nd kFALSE) from ROOT.RooFoamGenerator,; # ( an interface to the ROOT.TFoam MC generator with adaptive subdivisioning strategy ) to ROOT.RooAcceptReject,; # a plain accept/reject sampling algorithm [ ROOT.RooFit default before; # ROOT 5.23/04 ]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:178,interface,interface,178,tutorials/roofit/rf902_numgenconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py,1,['interface'],['interface']
Integrability,"# Compute clusters and entries of the first tree in the dataset.; # This will call once TFile::Open, but we pay this cost to get an estimate; # on whether the number of requested partitions is reasonable.; # Depending on the cluster setup, this may still be quite costly, so; # we decide to pay the price only if the user explicitly requested; # warning logging.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py:208,Depend,Depending,208,bindings/experimental/distrdf/python/DistRDF/HeadNode.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/HeadNode.py,2,['Depend'],['Depending']
Integrability,"# Construct integral over gauss to demonstrate message stream",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:47,message,message,47,tutorials/roofit/rf506_msgservice.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py,1,['message'],['message']
Integrability,"# Create Python wrapper with C++ friendly signature; # Define signature",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:16,wrap,wrapper,16,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,1,['wrap'],['wrapper']
Integrability,# Create expanded message and link if we have a multiline message.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt-viewer/opt-viewer.py:18,message,message,18,interpreter/llvm-project/llvm/tools/opt-viewer/opt-viewer.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/opt-viewer/opt-viewer.py,2,['message'],['message']
Integrability,"# Create function wrapper for minimizer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/NumericalMinimization.py:18,wrap,wrapper,18,tutorials/fit/NumericalMinimization.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/NumericalMinimization.py,1,['wrap'],['wrapper']
Integrability,"# Create manager; # ---------------------------; # Instantiate ROOT.RooMCStudy manager on model with x as observable and given choice of fit options; #; # The Silence() option kills all messages below the PROGRESS level, only a single message; # per sample executed, any error message that occur during fitting; #; # The Extended() option has two effects:; # 1) The extended ML term is included in the likelihood and; # 2) A poisson fluctuation is introduced on the number of generated events; #; # The FitOptions() given here are passed to the fitting stage of each toy experiment.; # If Save() is specified, fit result of each experiment is saved by the manager; #; # A Binned() option is added in self example to bin the data between generation and fitting; # to speed up the study at the expemse of some precision",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py:186,message,messages,186,tutorials/roofit/rf801_mcstudy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py,3,['message'],"['message', 'messages']"
Integrability,"# Create pdf m(x,y) = gx(x|y) * g(y); # --------------------------------------------------------------; # Increase default precision of numeric integration; # as self exercise has high sensitivity to numeric integration precision",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf315_projectpdf.py:144,integrat,integration,144,tutorials/roofit/rf315_projectpdf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf315_projectpdf.py,2,['integrat'],['integration']
Integrability,"# Create wrapped pdf to generate 2D dataset of cHq3 as a function of pTV; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf711_lagrangianmorph.py:9,wrap,wrapped,9,tutorials/roofit/rf711_lagrangianmorph.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf711_lagrangianmorph.py,1,['wrap'],['wrapped']
Integrability,# Creating a dependency file as a side effect still outputs an object file,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/test_check_cfc.py:13,depend,dependency,13,interpreter/llvm-project/clang/utils/check_cfc/test_check_cfc.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/test_check_cfc.py,1,['depend'],['dependency']
Integrability,# Define a wrapper function which is marked 'optnone' to prevent; # interprocedural optimizations from deleting the test.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_fuzz.py:11,wrap,wrapper,11,interpreter/llvm-project/llvm/utils/shuffle_fuzz.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_fuzz.py,1,['wrap'],['wrapper']
Integrability,"# Define projected signal likelihood ratio; # ----------------------------------------------------------------------------------; # Calculate projection of signal and total likelihood on (y,z) observables; # i.e. integrate signal and composite model over x",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf316_llratioplot.py:213,integrat,integrate,213,tutorials/roofit/rf316_llratioplot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf316_llratioplot.py,1,['integrat'],['integrate']
Integrability,# Deserialized messages from a single checker in a single program state.; # Basically a list of raw strings.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/exploded-graph-rewriter.py:15,message,messages,15,interpreter/llvm-project/clang/utils/analyzer/exploded-graph-rewriter.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/exploded-graph-rewriter.py,1,['message'],['messages']
Integrability,"# Deserialized messages of all checkers, separated by checker.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/exploded-graph-rewriter.py:15,message,messages,15,interpreter/llvm-project/clang/utils/analyzer/exploded-graph-rewriter.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/exploded-graph-rewriter.py,1,['message'],['messages']
Integrability,# Determine the builtin includes directory so that we can update tests that; # depend on the builtin headers. See get_clang_builtin_include_dir() and; # use_clang() in llvm/utils/lit/lit/llvm/config.py.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_cc_test_checks.py:79,depend,depend,79,interpreter/llvm-project/llvm/utils/update_cc_test_checks.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_cc_test_checks.py,1,['depend'],['depend']
Integrability,"# Disable analytic integration from demonstration purposes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:19,integrat,integration,19,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,1,['integrat'],['integration']
Integrability,# Emit failure handler for each runtime check with proper error message,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py:64,message,message,64,interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,1,['message'],['message']
Integrability,"# Evaluate the systematic uncertainty; # The systematic uncertainty in this analysis is the MC scale factor uncertainty that depends on lepton; # kinematics such as pT or pseudorapidity.; # Muons uncertainties are negligible, as stated in https://atlas.web.cern.ch/Atlas/GROUPS/PHYSICS/PAPERS/MUON-2018-03/.; # Electrons uncertainties are evaluated based on the plots available in https://doi.org/10.48550/arXiv.1908.00005.; # The uncertainties are linearly interpolated, using the `TGraph::Eval()` method, to cover a range of pT values covered by the analysis.; # Create a VaryHelper to interpolate the available data.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:125,depend,depends,125,tutorials/dataframe/df106_HiggsToFourLeptons.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py,1,['depend'],['depends']
Integrability,"# Example of RooCustomizer interface; # -------------------------------------------------------------------; #; # Class ROOT.RooCustomizer makes clones of existing pdfs with certain prescribed; # modifications (branch of leaf node replacements); #; # Here we take our model (the original before ROOT.RooSimWSTool modifications); # and request that the parameter w (the mistag rate) is replaced with; # an expression-based function that calculates w in terms of the Dilution; # parameter D that is defined D = 1-2*w; # Make a clone model_D of original 'model' replacing 'w' with; # 'expr('0.5-D/2',D[0,1])'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf513_wsfactory_tools.py:27,interface,interface,27,tutorials/roofit/rf513_wsfactory_tools.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf513_wsfactory_tools.py,1,['interface'],['interface']
Integrability,"# Example of RooSimWSTool interface; # ------------------------------------------------------------------; # Introduce a flavour tagging category tagCat as observable with 4 states corresponding; # to 4 flavour tagging techniques with different performance that require different; # parameterizations of the fit model; #; # ROOT.RooSimWSTool operation:; # - Make 4 clones of model (for each tagCat) state, will gain an individual; # copy of parameters w, and biasC. The other parameters remain common; # - Make a simultaneous pdf of the 4 clones assigning each to the appropriate; # state of the tagCat index category; # ROOT.RooSimWSTool is interfaced as meta-type SIMCLONE in the factory. The $SplitParam(); # argument maps to the SplitParam() named argument in the; # ROOT.RooSimWSTool constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf513_wsfactory_tools.py:26,interface,interface,26,tutorials/roofit/rf513_wsfactory_tools.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf513_wsfactory_tools.py,2,['interface'],"['interface', 'interfaced']"
Integrability,"# Example of another debugging stream; # ---------------------------------------------------------------------; # Show DEBUG level messages on client/server link state management",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:131,message,messages,131,tutorials/roofit/rf506_msgservice.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py,1,['message'],['messages']
Integrability,"# Example of how to change the parameters of a numeric integrator; # (Each config section is a ROOT.RooArgSet with ROOT.RooRealVars holding real-valued parameters; # and ROOT.RooCategories holding parameters with a finite set of options)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:55,integrat,integrator,55,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,2,['integrat'],['integrator']
Integrability,"# Example: Change global precision for 1D integrals from 1e-7 to 1e-6; #; # The relative epsilon (change as fraction of current best integral estimate) and; # absolute epsilon (absolute change w.r.t last best integral estimate) can be specified; # separately. For most pdf integrals the relative change criterium is the most important,; # however for certain non-pdf functions that integrate out to zero a separate absolute; # change criterium is necessary to declare convergence of the integral; #; # NB: ROOT.This change is for illustration only. In general the precision should be at least 1e-7; # for normalization integrals for MINUIT to succeed.; #",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:382,integrat,integrate,382,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,1,['integrat'],['integrate']
Integrability,"# Examples of pdf value tracing; # -----------------------------------------------------------------------; # Show DEBUG level message on function tracing, ROOT.RooGaussian only",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:127,message,message,127,tutorials/roofit/rf506_msgservice.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py,1,['message'],['message']
Integrability,"# Execute the pywrapper code and generate the wrapper function; # which calls the jitted C function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:46,wrap,wrapper,46,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,1,['wrap'],['wrapper']
Integrability,"# FIXME: Add fuzzy matching. One simple and possible effective idea would; # be to bin the diagnostics, print them in a normalized form (based solely; # on the structure of the diagnostic), compute the diff, then use that as; # the basis for matching. This has the nice property that we don't depend; # in any way on the diagnostic format.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/CmpRuns.py:293,depend,depend,293,interpreter/llvm-project/clang/utils/analyzer/CmpRuns.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/CmpRuns.py,1,['depend'],['depend']
Integrability,# Fetch the cached dependency data and check it against our formal ancestry; # data.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/check_ninja_deps.py:19,depend,dependency,19,interpreter/llvm-project/llvm/utils/check_ninja_deps.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/check_ninja_deps.py,1,['depend'],['dependency']
Integrability,# Find all subclasses of WrapperCheck,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py:25,Wrap,WrapperCheck,25,interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py,1,['Wrap'],['WrapperCheck']
Integrability,"# Fit model to data; # ---------------------------------; # The ARGUS background shape has a sharp kinematic cutoff at m=m0; # and is prone to evaluation errors if the cutoff parameter m0; # is floated: when the pdf cutoff value is lower than that in data; # events with m>m0 will have zero probability; # Perform unbinned ML fit. Print detailed error messages for up to; # 10 events per likelihood evaluation. The default error handling strategy; # is to return a very high value of the likelihood to MINUIT if errors occur,; # which will force MINUIT to retreat from the problematic area",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:352,message,messages,352,tutorials/roofit/rf606_nllerrorhandling.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py,1,['message'],['messages']
Integrability,"# Get address of jitted wrapper function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:24,wrap,wrapper,24,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,1,['wrap'],['wrapper']
Integrability,"# Get array interface of object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rvec.py:12,interface,interface,12,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rvec.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rvec.py,2,['interface'],['interface']
Integrability,# Get the file/line where this message was generated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py:31,message,message,31,interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,1,['message'],['message']
Integrability,# Get the formal dependency graph and decode it using pygraphviz.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/check_ninja_deps.py:17,depend,dependency,17,interpreter/llvm-project/llvm/utils/check_ninja_deps.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/check_ninja_deps.py,1,['depend'],['dependency']
Integrability,# How we determine which symbols to keep and which to discard depends on; # the mangling scheme,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/extract_symbols.py:62,depend,depends,62,interpreter/llvm-project/llvm/utils/extract_symbols.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/extract_symbols.py,1,['depend'],['depends']
Integrability,"# If a set contains function objects, the head node; # is cloned in a snapshot. To make a snapshot of all; # servers of a function object do as follows. The result; # of a RooArgSet snapshot with deepCloning option is a set; # of cloned objects, all their clone (recursive) server; # dependencies, together form a self-consistent; # set that is free of external dependencies",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf508_listsetmanip.py:284,depend,dependencies,284,tutorials/roofit/rf508_listsetmanip.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf508_listsetmanip.py,2,['depend'],['dependencies']
Integrability,"# If no message was found, use the top five stack trace functions,; # ignoring some common functions; # Five is a somewhat arbitrary number; the goal is to get a small number; # of identifying functions with some leeway for common functions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/creduce-clang-crash.py:8,message,message,8,interpreter/llvm-project/clang/utils/creduce-clang-crash.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/creduce-clang-crash.py,1,['message'],['message']
Integrability,"# Import here to avoid circular dependencies in main module",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py:32,depend,dependencies,32,bindings/experimental/distrdf/python/DistRDF/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py,1,['depend'],['dependencies']
Integrability,"# In the case of an exponential function, the bias that you get by; # evaluating the pdf only at the bin centers is a constant scale factor in; # each bin. Here, we can do a trick to get rid of the bias: we also; # evaluate the normalization integral for the pdf the same way, i.e.,; # summing the values of the unnormalized pdf at the bin centers. Like this; # the bias cancels out. You can achieve this by customizing the way how the; # pdf is integrated (see also the rf901_numintconfig tutorial).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:446,integrat,integrated,446,tutorials/roofit/rf614_binned_fit_problems.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py,1,['integrat'],['integrated']
Integrability,# In the unlikely case that the output contains the CDATA; # terminator we wrap it by creating a new CDATA block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/reports.py:75,wrap,wrap,75,interpreter/llvm-project/llvm/utils/lit/lit/reports.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/reports.py,1,['wrap'],['wrap']
Integrability,"# Infer name of the C++ wrapper function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:24,wrap,wrapper,24,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,1,['wrap'],['wrapper']
Integrability,"# Inject Experimental.Distributed package into namespace RDF if available",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:2,Inject,Inject,2,bindings/pyroot/pythonizations/python/ROOT/_facade.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py,1,['Inject'],['Inject']
Integrability,"# Inject comparison operators",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tobject.py:2,Inject,Inject,2,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tobject.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tobject.py,1,['Inject'],['Inject']
Integrability,"# Inject custom vector<char>::data()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_stl_vector.py:2,Inject,Inject,2,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_stl_vector.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_stl_vector.py,1,['Inject'],['Inject']
Integrability,"# Inject gROOT global",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:2,Inject,Inject,2,bindings/pyroot/pythonizations/python/ROOT/_facade.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py,1,['Inject'],['Inject']
Integrability,"# Inject top-level functions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py:2,Inject,Inject,2,bindings/experimental/distrdf/python/DistRDF/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/__init__.py,1,['Inject'],['Inject']
Integrability,"# Inject version as __version__ property in ROOT module",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:2,Inject,Inject,2,bindings/pyroot/pythonizations/python/ROOT/_facade.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py,1,['Inject'],['Inject']
Integrability,"# Instruct model to precalculate normalization integral that integrate at least; # two dimensions numerically. In self specific case the integral value for; # all values of parameter 'a' are stored in a histogram and available for use; # in subsequent fitting and plotting operations (interpolation is; # applied); # w.pdf(""model"").setNormValueCaching(3)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:61,integrat,integrate,61,tutorials/roofit/rf903_numintcache.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py,1,['integrat'],['integrate']
Integrability,"# Integrate IPython >= 5 with ROOT's event loop; # Check for new GUI events until there is some user input to process",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py:2,Integrat,Integrate,2,bindings/pyroot/pythonizations/python/ROOT/_application.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_application.py,1,['Integrat'],['Integrate']
Integrability,"# Integrate model over projModel = Int model dmean",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf211_paramconv.py:2,Integrat,Integrate,2,tutorials/roofit/rf211_paramconv.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf211_paramconv.py,1,['Integrat'],['Integrate']
Integrability,"# Integrate normalized pdf over subrange; # ----------------------------------------------------------------------------; # Define a range named ""signal"" in x from -5,5",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf110_normintegration.py:2,Integrat,Integrate,2,tutorials/roofit/rf110_normintegration.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf110_normintegration.py,2,['Integrat'],['Integrate']
Integrability,"# Integrated luminosity of the data samples",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py:2,Integrat,Integrated,2,tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,1,['Integrat'],['Integrated']
Integrability,"# Interactive minimization, error analysis; # -------------------------------------------------------------------------------; # Create MINUIT interface object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py:143,interface,interface,143,tutorials/roofit/rf601_intminuit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py,1,['interface'],['interface']
Integrability,"# Interface ROOT vector with a numpy array",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot001_arrayInterface.py:2,Interface,Interface,2,tutorials/pyroot/pyroot001_arrayInterface.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot001_arrayInterface.py,1,['Interface'],['Interface']
Integrability,"# It may happen that the user is connected to a batch system. We try; # to import the 'dask_jobqueue' module lazily to avoid a dependency.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py:127,depend,dependency,127,bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,1,['depend'],['dependency']
Integrability,"# Jit a wrapper for the ttabcom",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py:8,wrap,wrapper,8,bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py,1,['wrap'],['wrapper']
Integrability,"# Jit the Python wrapper code",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:17,wrap,wrapper,17,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,1,['wrap'],['wrapper']
Integrability,"# Jit wrapper C++ code",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:6,wrap,wrapper,6,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,1,['wrap'],['wrapper']
Integrability,"# Kills warning messages",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py:16,message,messages,16,tutorials/roofit/rf615_simulation_based_inference.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py,3,['message'],['messages']
Integrability,# Look for specific error messages,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/creduce-clang-crash.py:26,message,messages,26,interpreter/llvm-project/clang/utils/creduce-clang-crash.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/creduce-clang-crash.py,1,['message'],['messages']
Integrability,"# Look for undefined symbols, which have type U and may or may not; # (depending on which nm is being used) have value and size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/extract_symbols.py:71,depend,depending,71,interpreter/llvm-project/llvm/utils/extract_symbols.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/extract_symbols.py,1,['depend'],['depending']
Integrability,"# Make MC projection of pdf with same LL ratio cut; # ---------------------------------------------------------------------------------------------; # Generate large number of events for MC integration of pdf projection",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf316_llratioplot.py:190,integrat,integration,190,tutorials/roofit/rf316_llratioplot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf316_llratioplot.py,1,['integrat'],['integration']
Integrability,"# Make a difficult to normalize pdf in 3 dimensions that is; # integrated numerically.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:63,integrat,integrated,63,tutorials/roofit/rf903_numintcache.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py,1,['integrat'],['integrated']
Integrability,"# Make a log; # Set the format of the log messages:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py:42,message,messages,42,tutorials/histfactory/makeQuickModel.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py,1,['message'],['messages']
Integrability,"# Make projection of decay(dt|dterr) on dt.; #; # Instead of integrating out dterr, a weighted average of curves; # at values dterr_i as given in the external dataset.; # (The kTRUE argument bins the data before projection to speed up the process)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf306_condpereventerrors.py:61,integrat,integrating,61,tutorials/roofit/rf306_condpereventerrors.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf306_condpereventerrors.py,1,['integrat'],['integrating']
Integrability,"# Many people pythonized the RooWorkspace themselves, by adding a new; # attribute `_import` that calls getattr(self, ""import"") under the; # hood. However, `_import` is now the reference to the original cppyy; # overload, and resetting it with a wrapper around `import` would cause; # infinite recursions! We prevent resetting any import-related function; # here, which results in a clearer error to the user than an infinite; # call stack involving the internal pythonization code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py:246,wrap,wrapper,246,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_rooworkspace.py,1,['wrap'],['wrapper']
Integrability,"# Many uses of this tool will not need an opt binary, because it's only; # needed for updating a test that runs clang | opt | FileCheck. So we; # defer this error message until we find that opt is actually needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_cc_test_checks.py:163,message,message,163,interpreter/llvm-project/llvm/utils/update_cc_test_checks.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/update_cc_test_checks.py,1,['message'],['message']
Integrability,"# NB: It is also possible to fit a ROOT.RooAbsReal function to a ROOT.RooDataHist; # using chi2FitTo().; # Note that entries with zero bins are _not_ allowed; # for a proper chi^2 calculation and will give error; # messages",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf602_chi2fit.py:215,message,messages,215,tutorials/roofit/rf602_chi2fit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf602_chi2fit.py,1,['message'],['messages']
Integrability,"# Next, we define a pythonizor function: the function that will be responsible; # for injecting new behaviour in our C++ class `MyClass`.; #; # To convert a given Python function into a pythonizor, we need to decorate it; # with the @pythonization decorator. Such decorator allows us to define which; # which class we want to pythonize by providing its class name and its; # namespace (if the latter is not specified, it defaults to the global; # namespace, i.e. '::').; #; # The decorated function - the pythonizor - must accept either one or two; # parameters:; # 1. The class to be pythonized (proxy object where new behaviour can be; # injected); # 2. The fully-qualified name of that class (optional).; #; # Let's see all this with a simple example. Suppose I would like to define how; # `MyClass` objects are represented as a string in Python (i.e. what would be; # shown when I print that object). For that purpose, I can define the following; # pythonizor function. There are two important things to be noted here:; # - The @pythonization decorator has one argument that specifies our target; # class is `MyClass`.; # - The pythonizor function `pythonizor_of_myclass` provides and injects a new; # implementation for `__str__`, the mechanism that Python provides to define; # how to represent objects as strings. This new implementation; # always returns the string ""This is a MyClass object"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py:86,inject,injecting,86,tutorials/pyroot/pyroot002_pythonizationDecorator.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py,3,['inject'],"['injected', 'injecting', 'injects']"
Integrability,"# Normalizes the morphed object to be a pdf, set it false to prevent warning messages and gain computational speed up",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf616_morphing.py:77,message,messages,77,tutorials/roofit/rf616_morphing.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf616_morphing.py,1,['message'],['messages']
Integrability,"# Now, upon reallocation, the RVec stops adopting the memory and starts owning it. And yes,; # a copy is triggered. Indeed internally the storage of the RVec is an std::vector. Moreover,; # the interface of the RVec is very, very similar to the one of std::vector: you have already; # noticed it when the `data()` method was invoked, right?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/vecops/vo001_AdoptOrOwnMemory.py:194,interface,interface,194,tutorials/vecops/vo001_AdoptOrOwnMemory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/vecops/vo001_AdoptOrOwnMemory.py,1,['interface'],['interface']
Integrability,"# Ok, time to wrap up: let's print all counts!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df006_ranges.py:14,wrap,wrap,14,tutorials/dataframe/df006_ranges.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df006_ranges.py,1,['wrap'],['wrap']
Integrability,# On OS X the 'cc' and 'c++' compilers are wrappers for; # 'clang' therefore both call would be logged. To avoid; # this the hash does not contain the first word of the; # command.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py:43,wrap,wrappers,43,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/intercept.py,1,['wrap'],['wrappers']
Integrability,"# One of Prev and PrevAndSentinel exists. Depending on #defines used to; # compile LLVM, the base_type's template argument is either true of false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/gdb-scripts/prettyprinters.py:42,Depend,Depending,42,interpreter/llvm-project/llvm/utils/gdb-scripts/prettyprinters.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/gdb-scripts/prettyprinters.py,1,['Depend'],['Depending']
Integrability,"# Operations on the dataframe; # We now review some *actions* which can be performed on the data frame.; # Actions can be divided into instant actions (e. g. Foreach()) and lazy; # actions (e. g. Count()), depending on whether they trigger the event ; # loop immediately or only when one of the results is accessed for the ; # first time. Actions that return ""something"" either return their result ; # wrapped in a RResultPtr or in a RDataFrame.; # But first of all, let us we define now our cut-flow with two strings.; # Filters can be expressed as strings. The content must be C++ code. The; # name of the variables must be the name of the branches. The code is; # just-in-time compiled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py:206,depend,depending,206,tutorials/dataframe/df001_introduction.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py,2,"['depend', 'wrap']","['depending', 'wrapped']"
Integrability,# Options to output dependency files for make,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py:20,depend,dependency,20,interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/check_cfc.py,1,['depend'],['dependency']
Integrability,"# Otherwise, compile line and index from number of times we; # wrap.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/ABITest/Enumeration.py:63,wrap,wrap,63,interpreter/llvm-project/clang/utils/ABITest/Enumeration.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/ABITest/Enumeration.py,1,['wrap'],['wrap']
Integrability,# Outputting dependency files is not a normal compile,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/test_check_cfc.py:13,depend,dependency,13,interpreter/llvm-project/clang/utils/check_cfc/test_check_cfc.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/check_cfc/test_check_cfc.py,1,['depend'],['dependency']
Integrability,"# Owning RooArgSets; # ---------------------------------; # You can create a RooArgSet that owns copies of the objects instead of; # referencing the originals. A set either owns all of its components or none,; # so once addClone() is used, add() can no longer be used and will result in an; # error message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf508_listsetmanip.py:299,message,message,299,tutorials/roofit/rf508_listsetmanip.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf508_listsetmanip.py,1,['message'],['message']
Integrability,"# Parameters:; # - idx: index whose type needs to be checked; # - msg: message to show in case of type issue",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py:71,message,message,71,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_tseqcollection.py,1,['message'],['message']
Integrability,"# Parameters:; # klass: class to be pythonized; # TChain needs to be explicitly pythonized because it redefines; # SetBranchAddress in C++. As a consequence, TChain does not; # inherit TTree's pythonization for SetBranchAddress, which; # needs to be injected to TChain too. This is not the case for; # other classes like TNtuple, which will inherit all the; # pythonizations added here for TTree.; # SetBranchAddress",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py:250,inject,injected,250,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py,1,['inject'],['injected']
Integrability,"# Parameters:; # klass: class to be pythonized; # name: string containing the name of the class; # Add numpy array interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rvec.py:115,interface,interface,115,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rvec.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rvec.py,2,['interface'],['interface']
Integrability,"# Parameters:; # klass: class to be pythonized; # name: string containing the name of the class; # Add numpy array interface; # NOTE: The pythonization is reused from ROOT::VecOps::RVec",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_stl_vector.py:115,interface,interface,115,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_stl_vector.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_stl_vector.py,1,['interface'],['interface']
Integrability,"# Parameters:; # klass: class to be pythonized; # name: string containing the name of the class; # Pythonizations that are common to TTree and its subclasses.; # To avoid duplicating the same logic in the pythonizors of; # the subclasses, inject the pythonizations for all the target; # classes here.; # Pythonic iterator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py:239,inject,inject,239,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_ttree.py,1,['inject'],['inject']
Integrability,"# Part 3b : Choose Test Statistic; # --------------------------------------------------------------; # To make an equivalent calculation we need to use x as the test; # statistic. This is not a built-in test statistic in RooStats; # so we define it above. The new class inherits from the; # RooStats.TestStatistic interface, and simply returns the value; # of x in the dataset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:314,interface,interface,314,tutorials/roostats/HybridStandardForm.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py,1,['interface'],['interface']
Integrability,"# Part 3b : Choose Test Statistic; # ----------------------------------; # To make an equivalent calculation we need to use x as the test; # statistic. This is not a built-in test statistic in RooStats; # so we define it above. The new class inherits from the; # TestStatistic interface, and simply returns the value; # of x in the dataset.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:277,interface,interface,277,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,1,['interface'],['interface']
Integrability,"# Perform a fit to generate some tracing messages",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:41,message,messages,41,tutorials/roofit/rf506_msgservice.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py,2,['message'],['messages']
Integrability,"# Perform parallel projection using MC integration of pdf using given input dataSet.; # In self mode the data-weighted average of the pdf is calculated by splitting the; # input dataset in N equal pieces and calculating in parallel the weighted average; # one each subset. The N results of those calculations are then weighted into the; # final result; # Use four processes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf603_multicpu.py:39,integrat,integration,39,tutorials/roofit/rf603_multicpu.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf603_multicpu.py,1,['integrat'],['integration']
Integrability,"# Plot ""physics"" slice of simultaneous pdf.; # NB: You *must* project the sample index category with data using ProjWData as; # a RooSimultaneous makes no prediction on the shape in the index category and; # can thus not be integrated. In other words: Since the PDF doesn't know the; # number of events in the different category states, it doesn't know how much; # of each component it has to project out. This info is read from the data.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf501_simultaneouspdf.py:224,integrat,integrated,224,tutorials/roofit/rf501_simultaneouspdf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf501_simultaneouspdf.py,1,['integrat'],['integrated']
Integrability,"# Plot full decay distribution; # ----------------------------------------------------------; # Create frame, data and pdf projection (integrated over tagFlav and; # mixState)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py:135,integrat,integrated,135,tutorials/roofit/rf310_sliceplot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py,1,['integrat'],['integrated']
Integrability,"# Plot likelihood in m0 in range that includes problematic values; # In self configuration no messages are printed for likelihood evaluation errors,; # but if an likelihood value evaluates with error, corresponding value; # on the curve will be set to the value given in EvalErrorValue().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:94,message,messages,94,tutorials/roofit/rf606_nllerrorhandling.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py,1,['message'],['messages']
Integrability,"# Plotting a PDF with disallowed parameters doesn't work. We would get a lot of error messages.; # Therefore, we disable plotting messages in RooFit's message streams:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:86,message,messages,86,tutorials/roofit/rf612_recoverFromInvalidParameters.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py,3,['message'],"['message', 'messages']"
Integrability,"# Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate; # over data (integrated over tagFlav)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py:88,integrat,integrated,88,tutorials/roofit/rf310_sliceplot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py,1,['integrat'],['integrated']
Integrability,"# Position slice in mixState at ""unmixed"" and plot slice of pdf in; # mixstate over data (integrated over tagFlav)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py:90,integrat,integrated,90,tutorials/roofit/rf310_sliceplot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py,1,['integrat'],['integrated']
Integrability,"# Prevent this method from being re-entered through the gROOT wrapper",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py:62,wrap,wrapper,62,bindings/pyroot/pythonizations/python/ROOT/_facade.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_facade.py,1,['wrap'],['wrapper']
Integrability,"# Print configuration of message service; # ------------------------------------------; # Print streams configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:25,message,message,25,tutorials/roofit/rf506_msgservice.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py,1,['message'],['message']
Integrability,# Print the error message templates as global strings,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py:18,message,message,18,interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/shuffle_select_fuzz_tester.py,1,['message'],['message']
Integrability,"# Prints if a RooFit message stream listens for debug messages. Use Q for quiet.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py:21,message,message,21,tutorials/roofit/rf102_dataimport.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py,2,['message'],"['message', 'messages']"
Integrability,"# Project 3D parameter pdf down to 3 permutations of two-dimensional pdfs; # The integrations corresponding to these projections are performed analytically; # by the MV Gaussian pdf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf608_fitresultaspdf.py:81,integrat,integrations,81,tutorials/roofit/rf608_fitresultaspdf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf608_fitresultaspdf.py,1,['integrat'],['integrations']
Integrability,"# Python's strerror may not supply the same message; # as C++ std::error_code. One example of such a platform is; # Visual Studio. errc_messages may be supplied which contains the error; # messages for ENOENT, EISDIR, EINVAL and EACCES as a semi colon; # separated string. LLVM testsuites can use get_errc_messages in cmake; # to automatically get the messages and pass them into lit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py:44,message,message,44,interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/llvm/config.py,3,['message'],"['message', 'messages']"
Integrability,# Receive messages,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/CIndex/completion_logger_server.py:10,message,messages,10,interpreter/llvm-project/clang/utils/CIndex/completion_logger_server.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/CIndex/completion_logger_server.py,1,['message'],['messages']
Integrability,"# Remove v itself from the set before yielding it, so that the caller; # doesn't get the trivial dependency of v on itself.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/check_ninja_deps.py:97,depend,dependency,97,interpreter/llvm-project/llvm/utils/check_ninja_deps.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/check_ninja_deps.py,1,['depend'],['dependency']
Integrability,"# Reopen stdout in binary mode to avoid CRLF translation. The versions; # of echo we are replacing on Windows all emit plain LF, and the LLVM; # tests now depend on this.; # When we open as binary, however, this also means that we have to write; # 'bytes' objects to stdout instead of 'str' objects.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:155,depend,depend,155,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['depend'],['depend']
Integrability,# Reporter interfaces.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/Reporter.py:11,interface,interfaces,11,interpreter/llvm-project/clang/tools/scan-view/share/Reporter.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-view/share/Reporter.py,1,['interface'],['interfaces']
Integrability,"# Reset message service to default stream configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:8,message,message,8,tutorials/roofit/rf506_msgservice.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py,3,['message'],['message']
Integrability,"# Right:; # ----------------------------------------------------------------------------------------------------------; # Make the same plot, but normalise each piece with respect to the regions ""left"" AND ""right"". This requires setting; # a ""NormRange"", which tells RooFit over which range the PDF has to be integrated to normalise.; # This means that the normalisation of the blue and green curves is slightly different from the left plot,; # because they get a common scale factor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf212_plottingInRanges_blinding.py:309,integrat,integrated,309,tutorials/roofit/rf212_plottingInRanges_blinding.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf212_plottingInRanges_blinding.py,1,['integrat'],['integrated']
Integrability,"# Run against a build command. there are cases, when analyzer run; # is not required. But we need to set up everything for the; # wrappers, because 'configure' needs to capture the CC/CXX values; # for the Makefile.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py:130,wrap,wrappers,130,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,1,['wrap'],['wrappers']
Integrability,# Run build command and analyzer with compiler wrappers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py:47,wrap,wrappers,47,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,1,['wrap'],['wrappers']
Integrability,"# See C++ wrapper code for the reason using these arguments",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:10,wrap,wrapper,10,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,1,['wrap'],['wrapper']
Integrability,"# See C++ wrapper code for the reason using these types",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:10,wrap,wrapper,10,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,1,['wrap'],['wrapper']
Integrability,"# Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # You can find all configuration options and more details in the official Spark; # documentation at https://spark.apache.org/docs/latest/configuration.html .; # Create a SparkConf object with all the desired Spark configuration parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:833,Depend,Depending,833,tutorials/dataframe/distrdf001_spark_connection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py,1,['Depend'],['Depending']
Integrability,"# Show DEBUG level message on function tracing on all objects, output to; # file",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:19,message,message,19,tutorials/roofit/rf506_msgservice.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py,1,['message'],['message']
Integrability,"# So far we have seen how pythonizations can be registered for classes that; # have not been used yet. We have discussed how, in that case, the pythonizor; # functions are executed lazily when their target class/es are used for the; # first time in the application.; # However, it can also happen that our target class/es have already been; # accessed by the time we register a pythonization. In such a scenario, the; # pythonizor is applied immediately (at registration time) to the target; # class/es.; # Let's see an example of what was just explained. We will define a new class; # and immediately create an object of that class. We can check how the object; # still does not have a new attribute `pythonized` that we are going to inject; # in the next step.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py:735,inject,inject,735,tutorials/pyroot/pyroot002_pythonizationDecorator.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py,1,['inject'],['inject']
Integrability,"# Special unhandled cases:; # __builtin_ia32_vec_ext_*(__P, idx) -> _mm_store_sd/_mm_storeh_pd; # depending on index. No abstract insert/extract for these oddly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/www/builtins.py:98,depend,depending,98,interpreter/llvm-project/clang/www/builtins.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/www/builtins.py,1,['depend'],['depending']
Integrability,"# Step out of _write_message, and then out of wrapper.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py:46,wrap,wrapper,46,interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/LitConfig.py,1,['wrap'],['wrapper']
Integrability,"# Synchronized with arraysizeInner in TreeHelper.h",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch_attr.py:2,Synchroniz,Synchronized,2,bindings/pyroot/pythonizations/test/ttree_branch_attr.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/ttree_branch_attr.py,1,['Synchroniz'],['Synchronized']
Integrability,"# TODO: The BayesianCalculator and MCMCCalculator have to be destructed first.; # Otherwise, we can get segmentation faults depending on the destruction order,; # which is random in Python. Probably the issue is that some object has a; # non-owning pointer to another object, which it uses in its destructor. This; # should be fixed either in the design of RooStats in C++, or with; # phythonizations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/IntervalExamples.py:124,depend,depending,124,tutorials/roostats/IntervalExamples.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/IntervalExamples.py,1,['depend'],['depending']
Integrability,"# TODO: The BayesianCalculator has to be destructed first. Otherwise, we can get; # segmentation faults depending on the destruction order, which is random in; # Python. Probably the issue is that some object has a non-owning pointer to; # another object, which it uses in its destructor. This should be fixed either; # in the design of RooStats in C++, or with phythonizations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs701_BayesianCalculator.py:104,depend,depending,104,tutorials/roostats/rs701_BayesianCalculator.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs701_BayesianCalculator.py,1,['depend'],['depending']
Integrability,"# TODO: The MCMCCalculator has to be destructed first. Otherwise, we can get; # segmentation faults depending on the destruction order, which is random in; # Python. Probably the issue is that some object has a non-owning pointer to; # another object, which it uses in its destructor. This should be fixed either; # in the design of RooStats in C++, or with phythonizations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/MultivariateGaussianTest.py:100,depend,depending,100,tutorials/roostats/MultivariateGaussianTest.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/MultivariateGaussianTest.py,1,['depend'],['depending']
Integrability,"# TODO: The calculators have to be destructed first. Otherwise, we can get; # segmentation faults depending on the destruction order, which is random in; # Python. Probably the issue is that some object has a non-owning pointer to; # another object, which it uses in its destructor. This should be fixed either; # in the design of RooStats in C++, or with phythonizations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:98,depend,depending,98,tutorials/roostats/FourBinInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py,1,['depend'],['depending']
Integrability,"# TODO: pypy-c does not indicate which argument failed to convert, CPython does; # likewise there are still minor differences in descriptiveness of messages",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:148,message,messages,148,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py,1,['message'],['messages']
Integrability,"# TODO: the following error message is rather confusing :(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py:28,message,message,28,bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_doc_features.py,1,['message'],['message']
Integrability,# TODO: use debug levels for VERBOSE messages,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:37,message,messages,37,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,1,['message'],['messages']
Integrability,"# Test RDataFrame integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:18,integrat,integration,18,bindings/pyroot/pythonizations/test/numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py,1,['integrat'],['integration']
Integrability,"# Test cling integration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:13,integrat,integration,13,bindings/pyroot/pythonizations/test/numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py,1,['integrat'],['integration']
Integrability,"# Test wrappings",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py:7,wrap,wrappings,7,bindings/pyroot/pythonizations/test/numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/numbadeclare.py,1,['wrap'],['wrappings']
Integrability,# The SDKs used by default in compiler-rt/cmake/base-config-ix.cmake.; # COMPILER_RT_ENABLE_IOS defaults to on.; # COMPILER_RT_ENABLE_WATCHOS and COMPILER_RT_ENABLE_TV default to off.; # compiler-rt/cmake/config-ix.cmake sets DARWIN_EMBEDDED_PLATFORMS; # depending on these.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/sysroot.py:255,depend,depending,255,interpreter/llvm-project/llvm/utils/sysroot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/sysroot.py,1,['depend'],['depending']
Integrability,"# The add_*_checks routines expect a run list whose items are; # tuples that have a list of prefixes as their first element and; # tool command args string as their second element. They output; # checks for each prefix in the list of prefixes. By doing so, it; # implicitly assumes that for each function every run line will; # generate something for that function. That is not the case for; # generated functions as some run lines might not generate them; # (e.g. -fopenmp vs. no -fopenmp).; #; # Therefore, pass just the prefix we're interested in. This has; # the effect of generating all of the checks for functions of a; # single prefix before moving on to the next prefix. So checks; # are ordered by prefix instead of by function as in ""normal""; # mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py:19,rout,routines,19,interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/UpdateTestChecks/common.py,1,['rout'],['routines']
Integrability,"# The array values should be the same!; # Importing a RooDataHist from NumPy arrays with histogram counts and bin edges; # -----------------------------------------------------------------------------; # There is also a `RooDataHist.from_numpy` function, again with an interface; # inspired by `numpy.histogramdd`. You need to pass at least the histogram; # counts and the list of variables. The binning is optional: the default; # binning of the RooRealVars is used if not explicitly specified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf409_NumPyPandasToRooFit.py:269,interface,interface,269,tutorials/roofit/rf409_NumPyPandasToRooFit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf409_NumPyPandasToRooFit.py,1,['interface'],['interface']
Integrability,"# The following create a unique type for fixed-size C arrays: ctypes.c_char_Array_9; # and neither inherits from a non-sized type nor implements the buffer interface.; # As such, it can't be handled. TODO?; #pbuf = ctypes.create_string_buffer(len(buf), buf); #assert f(pbuf, len(buf)) == total",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py:156,interface,interface,156,bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_datatypes.py,1,['interface'],['interface']
Integrability,"# The indexes of ending files in each task depend on what is the percentage; # considered for that file. Also, they are exclusive. When the percentage is; # zero, i.e. we are at a file boundary, we want to consider the whole; # (previous) file, we just take the file index (shifting the list by one).; # When the percentage is above zero, we increase the index (shifted by one); # by one to be able to consider also the current file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py:43,depend,depend,43,bindings/experimental/distrdf/python/DistRDF/Ranges.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Ranges.py,1,['depend'],['depend']
Integrability,# The interesting header content (e.g. <cstdlib>) is wrapped in <code>.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/include-mapping/cppreference_parser.py:53,wrap,wrapped,53,interpreter/llvm-project/clang/tools/include-mapping/cppreference_parser.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/include-mapping/cppreference_parser.py,1,['wrap'],['wrapped']
Integrability,"# The purpose of an ""@echo"" command is merely to add a debugging message; # directly to lit's output. It is used internally by lit's internal; # shell and is not currently documented for use in lit tests. However,; # if someone misuses it (e.g., both ""echo"" and ""@echo"" complain about; # stdin redirection), produce the normal execution trace to facilitate; # debugging.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:65,message,message,65,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['message'],['message']
Integrability,"# This creates only the wrapping of the objects and does not copy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py:24,wrap,wrapping,24,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_rdataframe.py,1,['wrap'],['wrapping']
Integrability,"# This file is a minimal clang-format sublime-integration. To install:; # - Change 'binary' if clang-format is not on the path (see below).; # - Put this file into your sublime Packages directory, e.g. on Linux:; # ~/.config/sublime-text-2/Packages/User/clang-format-sublime.py; # - Add a key binding:; # { ""keys"": [""ctrl+shift+c""], ""command"": ""clang_format"" },; #; # With this integration you can press the bound key and clang-format will; # format the current lines and selections for all cursor positions. The lines; # or regions are extended to the next bigger syntactic entities.; #; # It operates on the current, potentially unsaved buffer and does not create; # or save any files. To revert a formatting, just undo.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format/clang-format-sublime.py:46,integrat,integration,46,interpreter/llvm-project/clang/tools/clang-format/clang-format-sublime.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format/clang-format-sublime.py,2,['integrat'],['integration']
Integrability,"# This file is a minimal clang-format vim-integration. To install:; # - Change 'binary' if clang-format is not on the path (see below).; # - Add to your .vimrc:; #; # if has('python'); # map <C-I> :pyf <path-to-this-file>/clang-format.py<cr>; # imap <C-I> <c-o>:pyf <path-to-this-file>/clang-format.py<cr>; # elseif has('python3'); # map <C-I> :py3f <path-to-this-file>/clang-format.py<cr>; # imap <C-I> <c-o>:py3f <path-to-this-file>/clang-format.py<cr>; # endif; #; # The if-elseif-endif conditional should pick either the python3 or python2; # integration depending on your vim setup.; #; # The first mapping enables clang-format for NORMAL and VISUAL mode, the second; # mapping adds support for INSERT mode. Change ""C-I"" to another binding if you; # need clang-format on a different key (C-I stands for Ctrl+i).; #; # With this integration you can press the bound key and clang-format will; # format the current line in NORMAL and INSERT mode or the selected region in; # VISUAL mode. The line or region is extended to the next bigger syntactic; # entity.; #; # You can also pass in the variable ""l:lines"" to choose the range for; # formatting. This variable can either contain ""<start line>:<end line>"" or; # ""all"" to format the full file. So, to format the full file, write a function; # like:; # :function FormatFile(); # : let l:lines=""all""; # : if has('python'); # : pyf <path-to-this-file>/clang-format.py; # : elseif has('python3'); # : py3f <path-to-this-file>/clang-format.py; # : endif; # :endfunction; #; # It operates on the current, potentially unsaved buffer and does not create; # or save any files. To revert a formatting, just undo.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format/clang-format.py:42,integrat,integration,42,interpreter/llvm-project/clang/tools/clang-format/clang-format.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format/clang-format.py,4,"['depend', 'integrat']","['depending', 'integration']"
Integrability,"# This is an internal option in CPT, meant to be integrated into Cling's build system.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:49,integrat,integrated,49,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,1,['integrat'],['integrated']
Integrability,"# This time, the bias is not the same factor in each bin! This means our; # trick by sampling the integral in the same way doesn't cancel out the; # bias completely. The average bias is canceled, but there are per-bin; # biases that remain. Still, this method has some value: it is cheaper than; # rigurously correcting the bias by integrating the pdf in each bin. So if; # you know your per-bin bias variations are small or performance is an; # issue, this approach can be sufficient.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:332,integrat,integrating,332,tutorials/roofit/rf614_binned_fit_problems.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py,1,['integrat'],['integrating']
Integrability,"# This tutorial uses Python multiprocessing, so the creation of the cluster; # needs to be wrapped in the main clause as described in the Python docs; # https://docs.python.org/3/library/multiprocessing.html",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py:91,wrap,wrapped,91,tutorials/dataframe/distrdf002_dask_connection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py,1,['wrap'],['wrapped']
Integrability,"# To get rid of the binning effects in the general case, one can use the; # IntegrateBins() command argument. Now, the pdf is not evaluated at the; # bin centers, but numerically integrated over each bin and divided by the; # bin width. The parameter for IntegrateBins() is the required precision; # for the numeric integrals. This is computationally expensive, but the; # bias is now not a problem anymore.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:76,Integrat,IntegrateBins,76,tutorials/roofit/rf614_binned_fit_problems.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py,3,"['Integrat', 'integrat']","['IntegrateBins', 'integrated']"
Integrability,# Untar the dependencies in the temporary directory and remove the tarball.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/remote-exec.py:12,depend,dependencies,12,interpreter/llvm-project/llvm/utils/remote-exec.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/remote-exec.py,1,['depend'],['dependencies']
Integrability,"# Use object factory to build pdf of tutorial rs502_wspacewrite but; # - Contracted to a single line recursive expression,; # - Omitting explicit names for components that are not referred to explicitly later",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf511_wsfactory_basic.py:73,Contract,Contracted,73,tutorials/roofit/rf511_wsfactory_basic.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf511_wsfactory_basic.py,1,['Contract'],['Contracted']
Integrability,"# WVE Add reduction by range; # Binned (RooDataHist) and unbinned datasets (RooDataSet) share; # many properties and inherit from a common abstract base class; # (RooAbsData), provides an interface for all operations; # that can be performed regardless of the data format",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py:188,interface,interface,188,tutorials/roofit/rf402_datahandling.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py,1,['interface'],['interface']
Integrability,"# We return an RVec through pointers as part of the input arguments. Note that the; # pointer type in numba is always an int64 and is later on cast in C++ to the correct type.; # In addition, we provide the size of the data type of the array for preallocating memory of; # the returned array.; # See the Python wrapper for further information why we are using these types.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:311,wrap,wrapper,311,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,1,['wrap'],['wrapper']
Integrability,"# We will control the output level in a few places to avoid; # verbose progress messages. We start by keeping track; # of the current threshold on messages.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:80,message,messages,80,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,4,['message'],['messages']
Integrability,"# We're only interested in this dependency if it's a *generated*; # file, i.e. it is in our set of targets. Also, we must check that; # currtarget is actually a target we know about: the dependency; # cache is not cleared when build.ninja changes, so it can contain; # stale data from targets that existed only in past builds in the; # same directory.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/check_ninja_deps.py:32,depend,dependency,32,interpreter/llvm-project/llvm/utils/check_ninja_deps.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/check_ninja_deps.py,2,['depend'],['dependency']
Integrability,"# Within lit, we try to always add '%dbg(...)' to command lines in order; # to maximize debuggability. However, custom lit test formats might not; # always add it, so add a generic debug message in that case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py:187,message,message,187,interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/lit/lit/TestRunner.py,1,['message'],['message']
Integrability,"# Wrap code that may be calling into C++ in a try-except block in order; # to better propagate exceptions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py:2,Wrap,Wrap,2,bindings/experimental/distrdf/python/DistRDF/Backends/Base.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Base.py,2,['Wrap'],['Wrap']
Integrability,"# Wrap pdf on morphfunc and fit to data histogram; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; # wrapper pdf to normalise morphing function to a morphing pdf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf712_lagrangianmorphfit.py:2,Wrap,Wrap,2,tutorials/roofit/rf712_lagrangianmorphfit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf712_lagrangianmorphfit.py,2,"['Wrap', 'wrap']","['Wrap', 'wrapper']"
Integrability,"# Wrapping in a try-block in case any of the dictionaries do not have the; # needed keys",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py:2,Wrap,Wrapping,2,bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/experimental/distrdf/python/DistRDF/Backends/Dask/Backend.py,1,['Wrap'],['Wrapping']
Integrability,"# You can read-out all objects from ROOT files since these are wrapped by PyROOT; # in the Python world. However, be aware that objects other than fundamental types,; # such as complex C++ objects and not int or float, are costly to read-out.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df026_AsNumpyArrays.py:63,wrap,wrapped,63,tutorials/dataframe/df026_AsNumpyArrays.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df026_AsNumpyArrays.py,1,['wrap'],['wrapped']
Integrability,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # Example demonstrating usage of HybridCalcultor; #; # A hypothesis testing example based on number counting; # with background uncertainty.; #; # NOTE: This example must be run with the ACLIC (the + option ) due to the; # new class that is defined.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to base it on an auxiliary measurement. In this case, the auxiliary; # measurement (aka control measurement, sideband) is another counting experiment; # with measurement y and expectation tau*b. With an 'original prior' on b,; # called \f$\eta(b)\f$ then one can obtain a posterior from the auxiliary measurement; # \f$\pi(b) = \eta(b) * Pois(y|tau*b).\f$ This is a principled choice for a prior; # on b in the main measurement of x, which can then be treated in a hybrid; # Bayesian/Frequentist way. Additionally, one can try to treat the two; # measurements simultaneously, which is detailed in Part 6 of the tutorial.; #; # This tutorial is related to the FourBin.C tutorial in the modeling, but; # focuses on hypothesis testing instead of interval estimation.; #; # More background on this 'prototype problem' can be found in the; # following papers:; #; # - Evaluation of three methods for calculating statistical significance; # when incorporating a systematic uncertainty into a test of the; # background-only hypothesis for a Poisson process; # Authors: Robert D. Cous",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:420,integrat,integration,420,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,1,['integrat'],['integration']
Integrability,"# add recurrent neural network depending on type / Use option to return the full output",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:31,depend,depending,31,tutorials/tmva/TMVA_RNN_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py,1,['depend'],['depending']
Integrability,"# by libRIO if uring option is enabled; # On centos7 libssl links against kerberos pulling in all dependencies below, removed with libssl1.1.0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py:98,depend,dependencies,98,bindings/pyroot/pythonizations/test/import_load_libs.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py,1,['depend'],['dependencies']
Integrability,"# by libncurses (on some older platforms); # libTree and dependencies",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py:57,depend,dependencies,57,bindings/pyroot/pythonizations/test/import_load_libs.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py,1,['depend'],['dependencies']
Integrability,"# clarifying message",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py:13,message,message,13,bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_crossinheritance.py,1,['message'],['message']
Integrability,"# depending on goal, copy over pre-installed tree",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py:2,depend,depending,2,bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,2,['depend'],['depending']
Integrability,# display error message from the static analyzer,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py:16,message,message,16,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,2,['message'],['message']
Integrability,"# failed ... load dependencies explicitly",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/loader.py:18,depend,dependencies,18,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/loader.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/loader.py,1,['depend'],['dependencies']
Integrability,"# first load the dependency libraries of the backend, then pull in the; # libcppyy extension module",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py:17,depend,dependency,17,bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_cpython_cppyy.py,1,['depend'],['dependency']
Integrability,"# first load the dependency libraries of the backend, then; # pull in the built-in low-level cppyy",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_pypy_cppyy.py:17,depend,dependency,17,bindings/pyroot/cppyy/cppyy/python/cppyy/_pypy_cppyy.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_pypy_cppyy.py,1,['depend'],['dependency']
Integrability,"# from six.py ---; # Copyright (c) 2010-2017 Benjamin Peterson; #; # Permission is hereby granted, free of charge, to any person obtaining a copy; # of this software and associated documentation files (the ""Software""), to deal; # in the Software without restriction, including without limitation the rights; # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; # copies of the Software, and to permit persons to whom the Software is; # furnished to do so, subject to the following conditions:; #; # The above copyright notice and this permission notice shall be included in all; # copies or substantial portions of the Software.; #; # THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; # IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; # FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; # AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; # OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE; # SOFTWARE.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_typemap.py:1001,CONTRACT,CONTRACT,1001,bindings/pyroot/cppyy/cppyy/python/cppyy/_typemap.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_typemap.py,1,['CONTRACT'],['CONTRACT']
Integrability,"# generate global observables; # need to be careful for simpdf.; # In ROOT 5.28 there is a problem with generating global observables; # with a simultaneous PDF. In 5.29 there is a solution with; # RooSimultaneous::generateSimGlobal, but this may change to; # the standard generate interface in 5.30.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:282,interface,interface,282,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,1,['interface'],['interface']
Integrability,"# get ugly print messages out of the way",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:17,message,messages,17,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,2,['message'],['messages']
Integrability,"# if you wanted to use the ad hoc Gaussian prior instead; # ~~~; # hc1.ForcePriorNuisanceAlt(w.pdf(""gauss_prior"")); # hc1.ForcePriorNuisanceNull(w.pdf(""gauss_prior"")); # ~~~; # if you wanted to use the ad hoc log-normal prior instead; # ~~~; # hc1.ForcePriorNuisanceAlt(w.pdf(""lognorm_prior"")); # hc1.ForcePriorNuisanceNull(w.pdf(""lognorm_prior"")); # ~~~; # these lines save current msg level and then kill any messages below ERROR",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:411,message,messages,411,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,2,['message'],['messages']
Integrability,"# if you wanted to use the ad hoc Gaussian prior instead; # ~~~; # hc2.ForcePriorNuisanceAlt(w.pdf(""gauss_prior"")); # hc2.ForcePriorNuisanceNull(w.pdf(""gauss_prior"")); # ~~~; # if you wanted to use the ad hoc log-normal prior instead; # ~~~; # hc2.ForcePriorNuisanceAlt(w.pdf(""lognorm_prior"")); # hc2.ForcePriorNuisanceNull(w.pdf(""lognorm_prior"")); # ~~~; # these lines save current msg level and then kill any messages below ERROR",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:411,message,messages,411,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,2,['message'],['messages']
Integrability,"# inject a vector in the global namespace",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:2,inject,inject,2,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py,1,['inject'],['inject']
Integrability,"# libCling and dependencies",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py:15,depend,dependencies,15,bindings/pyroot/pythonizations/test/import_load_libs.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py,1,['depend'],['dependencies']
Integrability,"# libCore and dependencies",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py:14,depend,dependencies,14,bindings/pyroot/pythonizations/test/import_load_libs.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/test/import_load_libs.py,1,['depend'],['dependencies']
Integrability,"# lower message level; # plot it, red is averaged model, green is b known exactly, blue is s+b av model",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:8,message,message,8,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,1,['message'],['message']
Integrability,"# pip does not resolve dependencies before building binaries, so unless; # packages are installed one-by-one, on old install is used or the build; # will simply fail hard. The following is not completely quiet, but at; # least a lot less conspicuous.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py:23,depend,dependencies,23,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/setup.py,1,['depend'],['dependencies']
Integrability,"# plot the correction term (* norm constant) in dashed green; # should make norm constant just be 1, not depend on binning of data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py:105,depend,depend,105,tutorials/roostats/rs_bernsteinCorrection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py,1,['depend'],['depend']
Integrability,"# prevent auto-casting (e.g. for interfaces)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_pythonization.py:33,interface,interfaces,33,bindings/pyroot/cppyy/cppyy/python/cppyy/_pythonization.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/_pythonization.py,1,['interface'],['interfaces']
Integrability,"# return weight of last loaded coordinates; # Reduce the 2-dimensional binned dataset to a 1-dimensional binned dataset; #; # All reduce() methods are interfaced in RooAbsData. All reduction techniques; # demonstrated on unbinned datasets can be applied to binned datasets as; # well.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py:151,interface,interfaced,151,tutorials/roofit/rf402_datahandling.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py,1,['interface'],['interfaced']
Integrability,"# some reverse-computation that can't be avoided with the current C++ RooDataHist interface",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py:82,interface,interface,82,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_roofit/_roodatahist.py,1,['interface'],['interface']
Integrability,"# to suppress messages when pdf goes to zero",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs701_BayesianCalculator.py:14,message,messages,14,tutorials/roostats/rs701_BayesianCalculator.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs701_BayesianCalculator.py,1,['message'],['messages']
Integrability,"# toymcs3.SetTestStatistic(ropl); # toymcs3.SetTestStatistic(mlets); # these lines save current msg level and then kill any messages below ERROR",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:124,message,messages,124,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,1,['message'],['messages']
Integrability,"# we can't pass the Python object globalChi2 directly to FitFCN.; # It needs to be wrapped in a ROOT::Math::Functor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/combinedFit.py:83,wrap,wrapped,83,tutorials/fit/combinedFit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/combinedFit.py,1,['wrap'],['wrapped']
Integrability,"#!/usr/bin/env python3; #; # ======- github-automation - LLVM GitHub Automation Routines--*- python -*--==#; #; # Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; # See https://llvm.org/LICENSE.txt for license information.; # SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; #; # ==-------------------------------------------------------------------------==#",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/github-automation.py:80,Rout,Routines,80,interpreter/llvm-project/llvm/utils/git/github-automation.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/github-automation.py,1,['Rout'],['Routines']
Integrability,"#!/usr/bin/env python3; #; # ======- pre-push - LLVM Git Help Integration ---------*- python -*--========#; #; # Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; # See https://llvm.org/LICENSE.txt for license information.; # SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; #; # ==------------------------------------------------------------------------==#",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/pre-push.py:62,Integrat,Integration,62,interpreter/llvm-project/llvm/utils/git/pre-push.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/git/pre-push.py,1,['Integrat'],['Integration']
Integrability,"#!/usr/bin/env python; # This script extracts the VPlan digraphs from the vectoriser debug messages; # and saves them in individual dot files (one for each plan). Optionally, and; # providing 'dot' is installed, it can also render the dot into a PNG file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/extract_vplan.py:91,message,messages,91,interpreter/llvm-project/llvm/utils/extract_vplan.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/extract_vplan.py,1,['message'],['messages']
Integrability,"## Function inserter class; # This class contains the methods which are invoked by using jsmva magic, and will inject the new methods; # to TMVA::Factory, TMVA::DataLoader",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/JPyInterface.py:111,inject,inject,111,bindings/pyroot/pythonizations/python/ROOT/JsMVA/JPyInterface.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/JPyInterface.py,1,['inject'],['inject']
Integrability,"## Graphical interface for booking DNN; # @param self object pointer; # @param loader the DataLoader object; # @param title classifier title",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:13,interface,interface,13,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,1,['interface'],['interface']
Integrability,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Use the ""trivial data source"", an example data source implementation.; ##; ## This tutorial illustrates how use the RDataFrame in combination with a; ## RDataSource. In this case we use a RTrivialDS, which is nothing more; ## than a simple generator: it does not interface to any existing dataset.; ## The RTrivialDS has a single column, col0, which has value n for entry n.; ##; ## Note that RTrivialDS is only a demo data source implementation and superior alternatives; ## typically exist for production use (e.g. constructing an empty RDataFrame as `RDataFrame(nEntries)`).; ##; ## \macro_code; ##; ## \date September 2017; ## \author Danilo Piparo (CERN)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df010_trivialDataSource.py:328,interface,interface,328,tutorials/dataframe/df010_trivialDataSource.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df010_trivialDataSource.py,1,['interface'],['interface']
Integrability,"## \file; ## \ingroup tutorial_roofit; ## \notebook -js; ## A tutorial that explains you how to solve problems with binning effects and; ## numerical stability in binned fits.; ##; ## ### Introduction; ##; ## In this tutorial, you will learn three new things:; ##; ## 1. How to reduce the bias in binned fits by changing the definition of the; ## normalization integral; ##; ## 2. How to completely get rid of binning effects by integrating the pdf over each bin; ##; ## 3. How to improve the numeric stability of fits with a greatly different; ## number of events per bin, using a constant per-bin counterterm; ##; ## \macro_code; ## \macro_output; ##; ## \date January 2023; ## \author Jonas Rembser",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:429,integrat,integrating,429,tutorials/roofit/rf614_binned_fit_problems.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py,1,['integrat'],['integrating']
Integrability,"## \file; ## \ingroup tutorial_roofit; ## \notebook -js; ## This tutorial explains the concept of global observables in RooFit, and; ## showcases how their values can be stored either in the model or in the; ## dataset.; ##; ## ### Introduction; ##; ## Note: in this tutorial, we are multiplying the likelihood with an additional; ## likelihood to constrain the parameters with auxiliary measurements. This is; ## different from the `rf604_constraints` tutorial, where the likelihood is; ## multiplied with a Bayesian prior to constrain the parameters.; ##; ##; ## With RooFit, you usually optimize some model parameters `p` to maximize the; ## likelihood `L` given the per-event or per-bin observations `x`:; ##; ## \f[ L( x | p ) \f]; ##; ## Often, the parameters are constrained with some prior likelihood `C`, which; ## doesn't depend on the observables `x`:; ##; ## \f[ L'( x | p ) = L( x | p ) * C( p ) \f]; ##; ## Usually, these constraint terms depend on some auxiliary measurements of; ## other observables `g`. The constraint term is then the likelihood of the; ## so-called global observables:; ##; ## \f[ L'( x | p ) = L( x | p ) * C( g | p ) \f]; ##; ## For example, think of a model where the true luminosity `lumi` is a; ## nuisance parameter that is constrained by an auxiliary measurement; ## `lumi_obs` with uncertainty `lumi_obs_sigma`:; ##; ## \f[ L'(data | mu, lumi) = L(data | mu, lumi) * \text{Gauss}(lumi_obs | lumi, lumi_obs_sigma) \f]; ##; ## As a Gaussian is symmetric under exchange of the observable and the mean; ## parameter, you can also sometimes find this equivalent but less conventional; ## formulation for Gaussian constraints:; ##; ## \f[ L'(data | mu, lumi) = L(data | mu, lumi) * \text{Gauss}(lumi | lumi_obs, lumi_obs_sigma) \f]; ##; ## If you wanted to constrain a parameter that represents event counts, you; ## would use a Poissonian constraint, e.g.:; ##; ## \f[ L'(data | mu, count) = L(data | mu, count) * \text{Poisson}(count_obs | count) \f]; ##; ## Un",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf613_global_observables.py:832,depend,depend,832,tutorials/roofit/rf613_global_observables.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf613_global_observables.py,2,['depend'],['depend']
Integrability,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## Organization and simultaneous fits: illustration use of ROOT.RooCustomizer and; ## ROOT.RooSimWSTool interface in factory workspace tool in a complex standalone B physics example; ##; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf513_wsfactory_tools.py:165,interface,interface,165,tutorials/roofit/rf513_wsfactory_tools.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf513_wsfactory_tools.py,1,['interface'],['interface']
Integrability,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## Organization and simultaneous fits: tuning and customizing the ROOT.RooFit message logging facility; ##; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:139,message,message,139,tutorials/roofit/rf506_msgservice.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py,1,['message'],['message']
Integrability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Basic functionality: examples on normalization and integration of pdfs, construction; ## of cumulative distribution functions from monodimensional pdfs; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf110_normintegration.py:107,integrat,integration,107,tutorials/roofit/rf110_normintegration.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf110_normintegration.py,1,['integrat'],['integration']
Integrability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: marginizalization of multi-dimensional pdfs through integration; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf315_projectpdf.py:133,integrat,integration,133,tutorials/roofit/rf315_projectpdf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf315_projectpdf.py,1,['integrat'],['integration']
Integrability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: multi-dimensional pdfs through composition, e.g. substituting; ## a pdf parameter with a function that depends on other observables; ##; ## `pdf = gauss(x,f(y),s)` with `f(y) = a0 + a1*y`; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf301_composition.py:184,depend,depends,184,tutorials/roofit/rf301_composition.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf301_composition.py,1,['depend'],['depends']
Integrability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: normalization and integration of pdfs, construction of; ## cumulative distribution functions from pdfs in two dimensions; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf308_normintegration2d.py:99,integrat,integration,99,tutorials/roofit/rf308_normintegration2d.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf308_normintegration2d.py,1,['integrat'],['integration']
Integrability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: working with parameterized ranges to define non-rectangular; ## regions for fitting and integration; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf313_paramranges.py:169,integrat,integration,169,tutorials/roofit/rf313_paramranges.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf313_paramranges.py,1,['integrat'],['integration']
Integrability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Use of mixture models in RooFit.; ##; ## This tutorial shows, how to use mixture models for Likelihood Calculation in ROOT. Instead of directly; ## calculating the likelihood we use simulation based inference (SBI) as shown in tutorial 'rf615_simulation_based_inference.py'.; ## We train the classifier to discriminate between samples from an background hypothesis here the zz samples and a target; ## hypothesis, here the higgs samples. The data preparation is based on the tutorial 'df106_HiggsToFourLeptons.py'.; ##; ## An introduction to mixture models can be found here https://arxiv.org/pdf/1506.02169.; ##; ## A short summary:; ## We assume the whole probability distribution can be written as a mixture of several components, i.e.; ## $$p(x|\theta)= \sum_{c}w_{c}(\theta)p_{c}(x|\theta)$$; ## We can write the likelihood ratio in terms of pairwise classification problems; ## \begin{align*}; ## \frac{p(x|\mu)}{p(x|0)}&= \frac{\sum_{c}w_{c}(\mu)p_{c}(x|\mu)}{\sum_{c'}w_{c'}(0)p_{c'}(x|0)}\\; ## &=\sum_{c}\Bigg[\sum_{c'}\frac{w_{c'}(0)}{w_{c}(\mu)}\frac{p_{c'}(x|0)}{p_{c}(x|\mu)}\Bigg]^{-1},; ## \end{align*}; ## where mu is the signal strength, and a value of 0 corresponds to the background hypothesis. Using this decomposition, one is able to use the pairwise likelihood ratios.; ##; ## Since the only free parameter in our case is mu, the distributions are independent of this parameter and the dependence on the signal strength can be encoded into the weights.; ## Thus, the subratios simplify dramatically since they are independent of theta and these ratios can be pre-computed and the classifier does; ## not need to be parametrized.; ##; ## If you wish to see an analysis done with template histograms see 'hf001_example.py'.; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date September 2024; ## \author Robin Syring",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf618_mixture_models.py:1465,depend,dependence,1465,tutorials/roofit/rf618_mixture_models.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf618_mixture_models.py,1,['depend'],['dependence']
Integrability,"## \file; ## \ingroup tutorial_tmva; ## \notebook; ## TMVA Classification Example Using a Recurrent Neural Network; ##; ## This is an example of using a RNN in TMVA. We do classification using a toy time dependent data set; ## that is generated when running this example macro; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \author Harshal Shende; # TMVA Classification Example Using a Recurrent Neural Network; # This is an example of using a RNN in TMVA.; # We do the classification using a toy data set containing a time series of data sample ntimes; # and with dimension ndim that is generated when running the provided function `MakeTimeData (nevents, ntime, ndim)`",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:204,depend,dependent,204,tutorials/tmva/TMVA_RNN_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py,1,['depend'],['dependent']
Integrability,###; # Toggle to use checked versions of enumeration routines.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/ABITest/Enumeration.py:53,rout,routines,53,interpreter/llvm-project/clang/utils/ABITest/Enumeration.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/ABITest/Enumeration.py,1,['rout'],['routines']
Integrability,"#--- interface to Cling ------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py:5,interface,interface,5,bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/python/cppyy/__init__.py,1,['interface'],['interface']
Integrability,"#; # Depending on the type of the SIP entry, replace the Clang; # version of the value with the actual version.; #",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py:5,Depend,Depending,5,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py,1,['Depend'],['Depending']
Integrability,"#; # Happens e.g. if the template is a dependent type; instead, try to parse; # its definition (brittle, but the original code just had '1' as a guess,; # which is even worse ...).; #; # logger.error(_(""Unexpected template_arg_count={} for {}"").format(tmp, typedef.type.get_typedef_name()))",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py:39,depend,dependent,39,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/_cppyy_generator.py,1,['depend'],['dependent']
Integrability,"#; # Valid customisations are routines named ""c13n_<something>"".; #",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py:30,rout,routines,30,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,1,['rout'],['routines']
Integrability,"#; # platform-dependent helpers; #",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py:14,depend,dependent,14,bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,3,['depend'],['dependent']
Integrability,"$; // Author: Valeriy Onuchin 20/04/2005; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun, Fons Rademakers and Reiner Rohlfs *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /************************************************************************. Copyright 1987, 1998 The Open Group. All Rights Reserved. The above copyright notice and this permission notice shall be included in; all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of The Open Group shall not be; used in advertising or otherwise to promote the sale, use or other dealings; in this Software without prior written authorization from The Open Group. Copyright 1987 by Digital Equipment Corporation, Maynard, Massachusetts. All Rights Reserved. Permission to use, copy, modify, and distribute this software and its; documentation for any purpose and without fee is hereby granted,; provided that the above copyright notice appear in all copies and that; both that copyright notice and this permission notice appear in; supporting documentation, and that the name of Digital not be; used in advertising or publicity pertaining to distribution of the; software without specific, written prior permission. DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING; ALL IMPLIED WARRANTIES ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPolyUtils.c:1014,CONTRACT,CONTRACT,1014,graf2d/asimage/src/TASPolyUtils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPolyUtils.c,1,['CONTRACT'],['CONTRACT']
Integrability,"$ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::ProfileLikelihoodCalculator; \ingroup Roostats. The ProfileLikelihoodCalculator is a concrete implementation of CombinedCalculator; (the interface class for tools which can produce both a RooStats HypoTestResult; and ConfInterval). The tool uses the profile likelihood ratio as a test statistic,; and assumes that Wilks' theorem is valid. Wilks' theorem states that \f$ -2 \cdot \ln(\lambda) \f$; (profile likelihood ratio) is asymptotically distributed as a \f$ \chi^2 \f$ distribution; with \f$ N \f$ degrees of freedom. Thus, \f$p\f$-values can be; constructed, and the profile likelihood ratio can be used to construct a; LikelihoodInterval. (In the future, this class could be extended to use toy; Monte Carlo to calibrate the distribution of the test statistic). Usage: It uses the interface of the CombinedCalculator, so that it can be; configured by specifying:. - A model common model (*e.g.* a family of specific models, which includes both; the null and alternate); - A data set; - A set of parameters of interest. The nuisance parameters will be all other; parameters of the model.; - A set of parameters which specify the null hypothesis (including values; and const/non-const status). The interface allows one to pass the model, data, and parameters either directly; or via a ModelConfig class. The alternate hypothesis leaves the parameter free; to take any value other than those specified by the null hypothesis. There is; therefore no need to specify the alternate parameters. After configuring the calculator, one only needs to call GetHypoTest() (which; will return a HypoTestResult pointer) or GetInterval() (which will return a; ConfInterval pointer). This calculator can work with both one-dimensional intervals or multi-; dimensional ones (contours). Note that for hypothesis tests, it is often ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodCalculator.cxx:1230,interface,interface,1230,roofit/roostats/src/ProfileLikelihoodCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodCalculator.cxx,1,['interface'],['interface']
Integrability,"'''; Abstract base class that defines some common logic to properly pythonize; method templates. More precisely, it provides an implementation of; `__getitem__` that makes wrappers subscriptable and allows them to capture; template arguments.; Subclasses of this class must redefine `__call__` with the actual; pythonization of the method template. Attributes:; _original_method (cppyy TemplateProxy): original implementation of the; method template that is bound to the instance on which the template; was accessed.; _extra_args (tuple): extra arguments to be used when receiving a call.; '''",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:172,wrap,wrappers,172,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,1,['wrap'],['wrappers']
Integrability,"'''; Captures the template arguments used to instantiate the method template. Args:; template_args (tuple): template arguments. Returns:; instance of MethodTemplateWrapper subclass: a new wrapper instance; is returned, with an original method on which the template; arguments have been applied.; '''",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:188,wrap,wrapper,188,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,1,['wrap'],['wrapper']
Integrability,"'''; Completer which interfaces to the TTabCom of ROOT. It is activated; (deactivated) upon the load(unload) of the load of the extension. >>> comp = CppCompleter(); >>> comp.activate(); >>> for suggestion in comp._completeImpl(""TTreeF""):; ... print(suggestion); TTreeFormula; TTreeFormulaManager; TTreeFriendLeafIter; >>> garbage = ROOT.gInterpreter.ProcessLine(""TH1F* h""); >>> for suggestion in comp._completeImpl(""h->GetA""):; ... print(suggestion); h->GetArray; h->GetAsymmetry; h->GetAt; h->GetAxisColor; >>> garbage = ROOT.gInterpreter.ProcessLine(""TH1F aa""); >>> for suggestion in comp._completeImpl(""aa.Add(""):; ... print(suggestion.replace(""\\t"","" "")); <BLANKLINE>; Bool_t Add(TF1* h1, Double_t c1 = 1, Option_t* option = """"); Bool_t Add(const TH1* h, const TH1* h2, Double_t c1 = 1, Double_t c2 = 1) // *MENU*; Bool_t Add(const TH1* h1, Double_t c1 = 1); >>> for suggestion in comp._completeImpl(""TROOT::Is""):; ... print(suggestion); TROOT::IsA; TROOT::IsBatch; TROOT::IsBuilt; TROOT::IsDestructed; TROOT::IsEqual; TROOT::IsEscaped; TROOT::IsExecutingMacro; TROOT::IsFolder; TROOT::IsInterrupted; TROOT::IsLineProcessing; TROOT::IsModified; TROOT::IsOnHeap; TROOT::IsProofServ; TROOT::IsRootFile; TROOT::IsSortable; TROOT::IsWebDisplay; TROOT::IsWebDisplayBatch; TROOT::IsWritable; TROOT::IsZombie; >>> comp.deactivate(); >>> for suggestion in comp._completeImpl(""TG""):; ... print(suggestion); '''",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py:21,interface,interfaces,21,bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/jupyroot/python/JupyROOT/helpers/cppcompleter.py,1,['interface'],['interfaces']
Integrability,'''; Construct the type of an RVec input parameter for its use in the C++; wrapper function signature.; ''',MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:75,wrap,wrapper,75,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,1,['wrap'],['wrapper']
Integrability,'''; Construct the type of an RVec input parameter for its use in the cast; of the function pointer of the jitted Python wrapper.; ''',MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:121,wrap,wrapper,121,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,1,['wrap'],['wrapper']
Integrability,'''; Constructor of a wrapper object for a method template. Args:; original_method (cppyy TemplateProxy): original implementation of; the method template that is bound to the instance on which the; template was accessed.; extra_args (tuple): extra arguments to be used when receiving a; call.; ''',MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:22,wrap,wrapper,22,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,1,['wrap'],['wrapper']
Integrability,"'''; Creates and returns a wrapper object for a method template. The type of; the wrapper is a subclass of MethodTemplateWrapper.; By implementing `__get__`, we obtain a handle to the instance of the; pythonized class on which the application accessed the method template.; That allows us to get an original implementation of the method template; that is bound to that instance, and pass such implementation along to; the wrapper object for later use. Args:; instance (class instance): instance of the pythonized class on; which the application accessed the method template.; instance_type (class type): type of the instance. Returns:; instance of MethodTemplateWrapper subclass: contains a handle to; the original implementation of the method template that is; bound to `instance` and, possibly, some extra arguments to be; used when receiving a call.; '''",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:27,wrap,wrapper,27,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,3,['wrap'],['wrapper']
Integrability,"'''; Decorator for making Python callables accessible in C++ by just-in-time compilation; with numba and cling. The decorator takes the given Python callable and just-in-time compiles (jits); wrapper functions with the given C++ types for input and return types. Eventually,; the Python callable is accessible in the Numba namespace in C++. The implementation first jits with numba the Python callable. We support fundamental types and; ROOT::VecOps::RVecs thereof. Note that you can get the jitted Python callable by the attribute; numba_func. The C++ types are converted to the respective numba types and RVecs are accessible; in Python by numpy arrays. After jitting the actual Python callable, we jit another Python wrapper,; which converts the Python signature to a C-friendly signature. The wrapper code is accessible by; the attribute __py_wrapper__. Next, the Python wrapper is given to cling to jit a C++ wrapper function,; making the original Python callable accessible in C++. The wrapper code in C++ is accessible by; the attribute __cpp_wrapper__. Note that the callable is fully compiled without side-effects. The numba jitting uses the nopython; option which does not allow interaction with the Python interpreter. This means that you can use; the resulting function also safely in multi-threaded environments.; '''",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:192,wrap,wrapper,192,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,6,['wrap'],['wrapper']
Integrability,"'''; Decorator that allows to pythonize C++ classes. To pythonize means to add; some extra behaviour to a C++ class that is used from Python via PyROOT,; so that such a class can be used in an easier / more ""pythonic"" way.; When a pythonization is registered with this decorator, the injection of; the new behaviour in the C++ class is done immediately, if the class has; already been used from the application, or lazily, i.e. only when the class; is first accessed from the application. Args:; class_name (string/iterable[string]): specifies either a single string or; multiple strings, where each string can be either (i) the name of a; C++ class to be pythonized, or (ii) a prefix to match all classes; whose name starts with that prefix.; ns (string): namespace of the classes to be pythonized. Default is the; global namespace (`::`).; is_prefix (boolean): if True, `class_name` contains one or multiple; prefixes, each prefix potentially matching multiple classes.; Default is False.; These are examples of prefixes and namespace and what they match:; - class_name="""", ns=""::"" : all classes in the global namespace.; - class_name=""C"", ns=""::"" : all classes in the global namespace; whose name starts with ""C""; - class_name="""", ns=""NS1::NS2"" : all classes in namespace ""NS1::NS2""; - class_name=""C"", ns=""NS1::NS2"" : all classes in namespace; ""NS1::NS2"" whose name starts with ""C"". Returns:; function: function that receives the user-defined function and; decorates it.; '''",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py:284,inject,injection,284,bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,1,['inject'],['injection']
Integrability,"'''; Get C friendly signature as numba type objects from C++ typenames. We need the types to jit a Python wrapper, which can be accessed as a function pointer in C++.; '''",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:106,wrap,wrapper,106,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,1,['wrap'],['wrapper']
Integrability,"'''; Initializes the getter object of a method template.; Saves the original implementation of the method template to be replaced; (i.e. the one provided by cppyy) so that it can be later used in the; implementation of the pythonization by the wrapper object. Args:; original_method (cppyy TemplateProxy): original cppyy method; template being pythonized.; wrapper_class (subclass of MethodTemplateWrapper): class that wraps; a pythonized method template.; extra_args (tuple, optional): extra arguments to be forwarded to; `wrapper_class`'s __init__ method, to be used by the wrapper; object when receiving a call.; '''",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:244,wrap,wrapper,244,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,3,['wrap'],"['wrapper', 'wraps']"
Integrability,"'''; Instances of this class can be injected in class proxies to replace method; templates that we want to pythonize. Similarly to what `partialmethod`; does, this class implements `__get__` to return a wrapper object of a; method that is bound to an instance of the pythonized class. Such object is; both callable and subscriptable. Attributes:; _original_method (cppyy TemplateProxy): original cppyy method template; being pythonized.; _wrapper_class (subclass of MethodTemplateWrapper): class that wraps a; pythonized method template.; _extra_args (tuple): extra arguments to be forwarded to; `_wrapper_class`'s __init__ method, to be used by the wrapper object; when receiving a call.; '''",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py:36,inject,injected,36,bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/_pyz_utils.py,4,"['inject', 'wrap']","['injected', 'wrapper', 'wraps']"
Integrability,'''; Registers the ROOT pythonizations with cppyy for lazy injection.; ''',MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py:59,inject,injection,59,bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,1,['inject'],['injection']
Integrability,"'''; SectionEnd. ; Function to detect Windows version and abort if Cling is unsupported in the current platform; Function DetectWinVer; Push $0; Push $1; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" CurrentVersion; IfErrors is_error is_winnt; is_winnt:; StrCpy $1 $0 1; StrCmp $1 4 is_error ; Aborting installation for Windows versions older than Windows 2000; StrCmp $0 ""5.0"" is_error ; Removing Windows 2000 as supported Windows version; StrCmp $0 ""5.1"" is_winnt_XP; StrCmp $0 ""5.2"" is_winnt_2003; StrCmp $0 ""6.0"" is_winnt_vista; StrCmp $0 ""6.1"" is_winnt_7; StrCmp $0 ""6.2"" is_winnt_8; StrCmp $1 6 is_winnt_8 ; Checking for future versions of Windows 8; Goto is_error. is_winnt_XP:; is_winnt_2003:; is_winnt_vista:; is_winnt_7:; is_winnt_8:; Goto done; is_error:; StrCpy $1 $0; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" ProductName; IfErrors 0 +4; ReadRegStr $0 HKLM ""SOFTWARE\\Microsoft\\Windows\\CurrentVersion"" Version; IfErrors 0 +2; StrCpy $0 ""Unknown""; MessageBox MB_ICONSTOP|MB_OK ""This version of Cling cannot be installed on this system. Cling is supported only on Windows NT systems. Current system: $0 (version: $1)""; Abort; done:; Pop $1; Pop $0; FunctionEnd. ; Function to check any previously installed version of Cling in the system; Function CheckPrevVersion; Push $0; Push $1; Push $2; IfFileExists ""$INSTDIR\\bin\\cling.exe"" 0 otherver; MessageBox MB_OK|MB_ICONSTOP ""Another Cling installation (with the same version) has been detected. Please uninstall it first.""; Abort; otherver:; StrCpy $0 0; StrCpy $2 """"; loop:; EnumRegKey $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" $0; StrCmp $1 """" loopend; IntOp $0 $0 + 1; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; Goto loop; loopend:; ReadRegStr $1 ${PRODUCT_ROOT_KEY} ""${PRODUCT_KEY}"" ""Version""; IfErrors finalcheck; StrCmp $2 """" 0 +2; StrCpy $2 ""$1""; StrCpy $2 ""$2, $1""; finalcheck:; StrCmp $2 """" done; MessageBox MB_YESNO|MB_ICONEXCLAMATION ""Another Cling installation (vers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:1012,Message,MessageBox,1012,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,1,['Message'],['MessageBox']
Integrability,"'''; Source: cling; Section: devel; Priority: optional; Maintainer: Cling Developer Team <cling-dev@cern.ch>; Uploaders: %s; Build-Depends: debhelper (>= 9.0.0); Standards-Version: 3.9.5; Homepage: http://cling.web.cern.ch/; Vcs-Git: http://root.cern.ch/git/cling.git; Vcs-Browser: http://root.cern.ch/gitweb?p=cling.git;a=summary. Package: cling; Priority: optional; Architecture: any; Depends: ${shlibs:Depends}, ${misc:Depends}; Description: interactive C++ interpreter; Cling is a new and interactive C++11 standard compliant interpreter built; on the top of Clang and LLVM compiler infrastructure. Its advantages over; the standard interpreters are that it has command line prompt and uses; Just In Time (JIT) compiler for compilation. Many of the developers; (e.g. Mono in their project called CSharpRepl) of such kind of software; applications name them interactive compilers.; .; One of Cling's main goals is to provide contemporary, high-performance; alternative of the current C++ interpreter in the ROOT project - CINT. Cling; serves as a core component of the ROOT system for storing and analyzing the; data of the Large Hadron Collider (LHC) experiments. The; backward-compatibility with CINT is major priority during the development.; '''",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:131,Depend,Depends,131,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,4,['Depend'],['Depends']
Integrability,"'''; The real decorator. Accepts a user-provided function and decorates it.; An inner function - a wrapper of the user function - is registered in; cppyy as a pythonizor. Args:; user_pythonizor (function): user-provided function to be decorated.; It implements some pythonization. It can accept two parameters:; the class to be pythonized, i.e. the Python proxy of the class; in which new behaviour can be injected, and optionally the name; of that class (can be used e.g. to do some more complex; filtering). Returns:; function: the user function, after being registered as a; pythonizor.; '''",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py:99,wrap,wrapper,99,bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,2,"['inject', 'wrap']","['injected', 'wrapper']"
Integrability,'''; Wrapper function with the parameters that cppyy requires for a; pythonizor function (class proxy and class name). It invokes the; user function only if the current class - a candidate for being; pythonized - matches the `target` argument of the decorator. Args:; klass (class type): cppyy proxy of the class that is the; current candidate to be pythonized.; name (string): name of the class that is the current candidate; to be pythonized.; ''',MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py:5,Wrap,Wrapper,5,bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_pythonization/__init__.py,1,['Wrap'],['Wrapper']
Integrability,"'''\; def pywrapper({SIGNATURE}):; """"""; Wrapper function for the jitted Python callable with special treatment of arrays; """"""; # If an RVec is given, define numba carray wrapper for the input types; {ARGS_DEF}; # Call the jitted Python function; r = nbjit({ARGS}); # Return the result; {RETURN}; '''",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py:40,Wrap,Wrapper,40,bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/_numbadeclare.py,2,"['Wrap', 'wrap']","['Wrapper', 'wrapper']"
Integrability,"(TMultiDimFit::MakeCoefficientErrors). ## Considerations; It's important to realize that the training sample should be; representative of the problem at hand, in particular along the borders; of the region of interest. This is because the algorithm presented; here, is a *interpolation*, rather then a *extrapolation* [5]. Also, the independent variables \f$ x_{i}\f$ need to be linear; independent, since the procedure will perform poorly if they are not; [5]. One can find an linear transformation from ones; original variables \f$ \xi_{i}\f$ to a set of linear independent variables; \f$ x_{i}\f$, using a *Principal Components Analysis* (see TPrincipal), and; then use the transformed variable as input to this class [5] [6]. H. Wind also outlines a method for parameterising a multidimensional; dependence over a multidimensional set of variables. An example; of the method from [5], is a follows (please refer to; [5] for a full discussion):. 1. Define \f$\mathbf{P} = (P_1, \ldots, P_5)\f$ are the 5 dependent; quantities that define a track.; 2. Compute, for \f$ M\f$ different values of \f$\mathbf{P}\f$, the tracks; through the magnetic field, and determine the corresponding; \f$\mathbf{x} = (x_1, \ldots, x_N)\f$.; 3. Use the simulated observations to determine, with a simple; approximation, the values of \f$\mathbf{P}_j\f$. We call these values; \f$\mathbf{P}^\prime_j, j = 1, \ldots, M\f$.; 4. Determine from \f$\mathbf{x}\f$ a set of at least five relevant; coordinates \f$\mathbf{x}^\prime\f$, using contrains, *or; alternative:*; 5. Perform a Principal Component Analysis (using TPrincipal), and use; to get a linear transformation \f$\mathbf{x} \rightarrow \mathbf{x}^\prime\f$, so that; \f$\mathbf{x}^\prime\f$ are constrained and linear independent.; 6. Perform a Principal Component Analysis on; \f$Q_i = P_i / P^\prime_i\, i = 1, \ldots, 5\f$, to get linear; indenpendent (among themselves, but not independent of \f$\mathbf{x}\f$) quantities; \f$\mathbf{Q}^\prime\f$; 7. For ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:14567,depend,dependent,14567,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['depend'],['dependent']
Integrability,")""]` <td> Create a RooLagrangianMorphFunc function for the observable obs as a function of `var1`, `var2` based on input templates stored in the folders in the file; /// </table>; ///; /// The functionality of high-level object creation tools like RooSimWSTool, RooCustomizer and RooClassFactory; /// is also interfaced through meta-types in the factory.; /// <table>; /// <tr><th> Interface to %RooSimWSTool <th>; /// <tr><td> `SIMCLONE::name( modelPdf, $ParamSplit(...), $ParamSplitConstrained(...), $Restrict(...) ]`; /// <td> Clone-and-customize modelPdf according to ParamSplit and ParamSplitConstrained(); /// specifications and return a RooSimultaneous pdf of all built clones; ///; /// <tr><td> `MSIMCLONE::name( masterIndex, $AddPdf(mstate1, modelPdf1, $ParamSplit(...)), $AddPdf(mstate2,modelPdf2),...) ]`; /// <td> Clone-and-customize multiple models (modelPdf1,modelPdf2) according to ParamSplit and; /// ParamSplitConstrained() specifications and return a RooSimultaneous pdf of all built clones,; /// using the specified master index to map prototype pdfs to master states; /// <tr><th> Interface to %RooCustomizer <th>; /// <tr><td> `EDIT::name( orig, substNode=origNode), ... ]` <td> Create a clone of input object orig, with the specified replacements operations executed; /// <tr><td> `EDIT::name( orig, origNode=$REMOVE(), ... ]` <td> Create clone of input removing term origNode from all PROD() terms that contained it; /// <tr><td> `EDIT::name( orig, origNode=$REMOVE(prodname,...), ... ]` <td> As above, but restrict removal of origNode to PROD term(s) prodname,...; ///; ///; /// <tr><th> Interface to %RooClassFactory <th>; /// <tr><td> `CEXPR::name(<expr>,var,...]` <td> Create a custom compiled pdf that evaluates the given expression; /// <tr><td> `cexpr::name(<expr>,var,...]` <td> Create a custom compiled function that evaluates the given expression; ///; ///; /// <tr><td> `$MetaType(...)` <td> Meta argument that does not result in construction of an object but is use",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:4966,Interface,Interface,4966,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,1,['Interface'],['Interface']
Integrability,"). And, so,; // we might produce code like this:; //; // .Ltmp526:; // addis 3, 2, .LC12@toc@ha; // .Ltmp1628:; // std 2, 40(1); // ld 5, 0(27); // ld 2, 8(27); // ld 11, 16(27); // ld 3, .LC12@toc@l(3); // rldicl 4, 4, 0, 32; // mtctr 5; // bctrl; // ld 2, 40(1); //; // And there is nothing wrong with this code, as such, but there is a linker bug; // in binutils (https://sourceware.org/bugzilla/show_bug.cgi?id=18414) that will; // misoptimize this code sequence to this:; // nop; // std r2,40(r1); // ld r5,0(r27); // ld r2,8(r27); // ld r11,16(r27); // ld r3,-32472(r2); // clrldi r4,r4,32; // mtctr r5; // bctrl; // ld r2,40(r1); // because the linker does not know (and does not check) that the value in r2; // changed in between the instruction using the .LC12@toc@ha (TOC-relative); // relocation and the instruction using the .LC12@toc@l(3) relocation.; // Because it finds these instructions using the relocations (and not by; // scanning the instructions), it has been asserted that there is no good way; // to detect the change of r2 in between. As a result, this bug may never be; // fixed (i.e. it may become part of the definition of the ABI). GCC was; // updated to add extra dependencies on r2 to instructions using the @toc@l; // relocations to avoid this problem, and we'll do the same here.; //; // This is done as a separate pass because:; // 1. These extra r2 dependencies are not really properties of the; // instructions, but rather due to a linker bug, and maybe one day we'll be; // able to get rid of them when targeting linkers without this bug (and,; // thus, keeping the logic centralized here will make that; // straightforward).; // 2. There are ISel-level peephole optimizations that propagate the @toc@l; // relocations to some user instructions, and so the exta dependencies do; // not apply only to a fixed set of instructions (without undesirable; // definition replication).; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTOCRegDeps.cpp:1800,depend,dependencies,1800,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTOCRegDeps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCTOCRegDeps.cpp,3,['depend'],['dependencies']
Integrability,");; /// ~~~; /// will print on one line the value of arr1 and (arr2,0) that will be; /// matched by; /// ~~~ {.cpp}; /// tree->Draw(""arr1-Alt$(arr2,0)"");; /// ~~~; /// The ternary operator is not directly supported in TTree::Draw however, to plot the; /// equivalent of `var2<20 ? -99 : var1`, you can use:; /// ~~~ {.cpp}; /// tree->Draw(""(var2<20)*99+(var2>=20)*var1"","""");; /// ~~~; ///; /// ### Drawing a user function accessing the TTree data directly; ///; /// If the formula contains a file name, TTree::MakeProxy will be used; /// to load and execute this file. In particular it will draw the; /// result of a function with the same name as the file. The function; /// will be executed in a context where the name of the branches can; /// be used as a C++ variable.; ///; /// For example draw px using the file hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; /// ~~~ {.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~ {.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// `h1analysisProxy.cxx`, `h1analysProxy.h` and `h1analysisProxyCut.C`; /// which reimplement the selector found in `h1analysis.C`; ///; /// The main features of this facility are:; ///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bound; /// * ability to use the branch data as object (when the user code is available); ///; /// See TTree::MakeProxy for more details.; ///; /// ### Making a Profile histogram; ///; /// In case of a 2-Dim expression, one can generate a TProfile histogram; /// instead of a TH2F histogram by specifying option=prof or option=profs; /// or option=profi or option=profg ; the trailing letter select the way; /// the bin error are computed, Se",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:19209,interface,interface,19209,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['interface'],['interface']
Integrability,")root/gdml:$Id$ */; // Author: Ben Lloyd 09/11/06; /*************************************************************************; * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGDMLParse; \ingroup Geometry_gdml. This class contains the implementation of the GDML parser associated to; all the supported GDML elements. User should never need to explicitly; instaciate this class. It is internally used by the TGeoManager. Each element process has a 'Binding' to ROOT. The 'binding' is specific; mapping of GDML elements (materials, solids, etc) to specific objects which; should be instanciated by the converted. In the present case (ROOT) the; binding is implemented at the near the end of each process function. Most; bindings follow similar format, dependent on what is being added to the; geometry. This file also contains the implementation of the TGDMLRefl class. This is; just a small helper class used internally by the 'reflection' method (for; reflected solids). The presently supported list of TGeo classes is the following:. #### Materials:; - TGeoElement; - TGeoMaterial; - TGeoMixture. #### Solids:; - TGeoBBox; - TGeoArb8; - TGeoTubeSeg; - TGeoConeSeg; - TGeoCtub; - TGeoPcon; - TGeoTrap; - TGeoGtra; - TGeoTrd2; - TGeoSphere; - TGeoPara; - TGeoTorus; - TGeoHype; - TGeoPgon; - TGeoXtru; - TGeoEltu; - TGeoParaboloid; - TGeoCompositeShape (subtraction, union, intersection). #### Approximated Solids:; - Ellipsoid (approximated to a TGeoBBox); - Elliptical cone (approximated to a TGeoCone). #### Geometry:; - TGeoVolume; - TGeoVolumeAssembly; - divisions; - reflection. When most solids or volumes are added to the geometry they. Whenever a new element is added to GDML schema, this class needs to be extended.; The appropriate method (proces",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx:1001,depend,dependent,1001,geom/gdml/src/TGDMLParse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/gdml/src/TGDMLParse.cxx,1,['depend'],['dependent']
Integrability,"* This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains a slow-but-accurate integer implementation of the; * forward DCT (Discrete Cosine Transform).; *; * A 2-D DCT can be done by 1-D DCT on each row followed by 1-D DCT; * on each column. Direct algorithms are also available, but they are; * much more complex and seem not to be any faster when reduced to code.; *; * This implementation is based on an algorithm described in; * C. Loeffler, A. Ligtenberg and G. Moschytz, ""Practical Fast 1-D DCT; * Algorithms with 11 Multiplications"", Proc. Int'l. Conf. on Acoustics,; * Speech, and Signal Processing 1989 (ICASSP '89), pp. 988-991.; * The primary algorithm described there uses 11 multiplies and 29 adds.; * We use their alternate method with 12 multiplies and 32 adds.; * The advantage of this method is that no data path contains more than one; * multiplication; this allows a very simple and accurate implementation in; * scaled fixed-point arithmetic, with a minimal number of shifts.; *; * We also provide FDCT routines with various input sample block sizes for; * direct resolution reduction or enlargement and for direct resolving the; * common 2x1 and 1x2 subsampling cases without additional resampling: NxN; * (N=1...16), 2NxN, and Nx2N (N=1...8) pixels for one 8x8 output DCT block.; *; * For N<8 we fill the remaining block coefficients with zero.; * For N>8 we apply a partial N-point FDCT on the input samples, computing; * just the lower 8 frequency coefficients and discarding the rest.; *; * We must scale the output coefficients of the N-point FDCT appropriately; * to the standard 8-point FDCT level by 8/N per 1-D pass. This scaling; * is folded into the constant multipliers (pass 2) and/or final/initial; * shifting.; *; * CAUTION: We rely on the FIX() macro except for the N=1,2,4,8 cases; * since there would be too many additional constants to pre-calculate.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c:1251,rout,routines,1251,graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,1,['rout'],['routines']
Integrability,"* ```; * RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; * binSampler.fitTo(data);; * ```; * When a PDF is wrapped with a RooBinSamplingPDF, just use the bin sampling PDF instead of the original one for fits; * or plotting etc.; * \note The binning will be taken from the observable. Make sure that this binning is the same as the one of the dataset that should be fit.; * Use RooRealVar::setBinning() to adapt it.; * - Instruct test statistics to carry out this wrapping automatically:; * ```; * pdf.fitTo(data, IntegrateBins(<precision>));; * ```; * This method is especially useful when used with a simultaneous PDF, since each component will automatically be wrapped,; * depending on the value of `precision`:; * - `precision < 0.`: None of the PDFs are touched, bin sampling is off.; * - `precision = 0.`: Continuous PDFs that are fit to a RooDataHist are wrapped into a RooBinSamplingPdf. The target precision; * forwarded to the integrator is 1.E-4 (the default argument of the constructor).; * - `precision > 0.`: All continuous PDFs are automatically wrapped into a RooBinSamplingPdf, regardless of what data they are; * fit to (see next paragraph). The same `'precision'` is used for all integrators.; *; * ### Simulating a binned fit using RooDataSet; * Some frameworks use unbinned data (RooDataSet) to simulate binned datasets. By adding one entry for each bin centre with the; * appropriate weight, one can achieve the same result as fitting with RooDataHist. In this case, however, RooFit cannot; * auto-detect that a binned fit is running, and that an integration over the bin is desired (note that there are no bins to; * integrate over in this kind of dataset).; *; * In this case, `IntegrateBins(>0.)` needs to be used, and the desired binning needs to be assigned to the observable; * of the dataset:; * ```; * RooRealVar x(""x"", ""x"", 0., 5.);; * x.setBins(10);; *; * // <create dataset and model>; *; * ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:2806,integrat,integrator,2806,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['integrat'],['integrator']
Integrability,"* processes are inner loops and need to be as fast as possible. On most; * machines, particularly CPUs with pipelines or instruction prefetch,; * a (subscript-check-less) C table lookup; *		x = sample_range_limit[x];; * is faster than explicit tests; *		if (x < 0) x = 0;; *		else if (x > MAXJSAMPLE) x = MAXJSAMPLE;; * These processes all use a common table prepared by the routine below.; *; * For most steps we can mathematically guarantee that the initial value; * of x is within MAXJSAMPLE+1 of the legal range, so a table running from; * -(MAXJSAMPLE+1) to 2*MAXJSAMPLE+1 is sufficient. But for the initial; * limiting step (just after the IDCT), a wildly out-of-range value is ; * possible if the input data is corrupt. To avoid any chance of indexing; * off the end of memory and getting a bad-pointer trap, we perform the; * post-IDCT limiting thus:; *		x = range_limit[x & MASK];; * where MASK is 2 bits wider than legal sample data, ie 10 bits for 8-bit; * samples. Under normal circumstances this is more than enough range and; * a correct output will be generated; with bogus input data the mask will; * cause wraparound, and we will safely generate a bogus-but-in-range output.; * For the post-IDCT step, we want to convert the data from signed to unsigned; * representation by adding CENTERJSAMPLE at the same time that we limit it.; * So the post-IDCT limiting table ends up looking like this:; * CENTERJSAMPLE,CENTERJSAMPLE+1,...,MAXJSAMPLE,; * MAXJSAMPLE (repeat 2*(MAXJSAMPLE+1)-CENTERJSAMPLE times),; * 0 (repeat 2*(MAXJSAMPLE+1)-CENTERJSAMPLE times),; * 0,1,...,CENTERJSAMPLE-1; * Negative inputs select values from the upper half of the table after; * masking.; *; * We can save some space by overlapping the start of the post-IDCT table; * with the simpler range limiting table. The post-IDCT table begins at; * sample_range_limit + CENTERJSAMPLE.; *; * Note that the table is allocated in near data space on PCs; it's small; * enough and used often enough to justify this.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c:1344,wrap,wraparound,1344,graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,1,['wrap'],['wraparound']
Integrability,"* the child's standard input is attached to /dev/null).; * %G_SPAWN_FILE_AND_ARGV_ZERO means that the first element of @argv is; * the file to execute, while the remaining elements are the; * actual argument vector to pass to the file. Normally; * g_spawn_async_with_pipes() uses @argv[0] as the file to execute, and; * passes all of @argv to the child.; *; * @child_setup and @user_data are a function and user data to be; * called in the child after GLib has performed all the setup it plans; * to perform (including creating pipes, closing file descriptors,; * etc.) but before calling exec(). That is, @child_setup is called; * just before calling exec() in the child. Obviously actions taken in; * this function will only affect the child, not the parent. ; *; * If non-NULL, @child_pid will be filled with the child's process; * ID. You can use the process ID to send signals to the child, or; * to waitpid() if you specified the %G_SPAWN_DO_NOT_REAP_CHILD flag.; *; * If non-NULL, the @standard_input, @standard_output, @standard_error; * locations will be filled with file descriptors for writing to the child's; * standard input or reading from its standard output or standard error.; * The caller of g_spawn_async_with_pipes() must close these file descriptors; * when they are no longer in use. If these parameters are NULL, the; * corresponding pipe won't be created.; *; * @error can be NULL to ignore errors, or non-NULL to report errors.; * If an error is set, the function returns FALSE. Errors; * are reported even if they occur in the child (for example if the; * executable in <literal>argv[0]</literal> is not found). Typically; * the <literal>message</literal> field of returned errors should be displayed; * to users. Possible errors are those from the #G_SPAWN_ERROR domain.; *; * If an error occurs, @child_pid, @standard_input, @standard_output,; * and @standard_error will not be filled with valid values.; * ; * Return value: TRUE on success, FALSE if an error was set; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c:4146,message,message,4146,graf2d/win32gdk/gdk/src/glib/gspawn.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.c,1,['message'],['message']
Integrability,"* the virtual array manager expects this. The source arrays will be scanned; * in the corresponding order, which means multiple passes through the source; * arrays for most of the transforms. That could result in much thrashing; * if the image is larger than main memory.; *; * If cropping or trimming is involved, the destination arrays may be smaller; * than the source arrays. Note it is not possible to do horizontal flip; * in-place when a nonzero Y crop offset is specified, since we'd have to move; * data from one block row to another but the virtual array manager doesn't; * guarantee we can touch more than one row at a time. So in that case,; * we have to use a separate destination array.; *; * Some notes about the operating environment of the individual transform; * routines:; * 1. Both the source and destination virtual arrays are allocated from the; * source JPEG object, and therefore should be manipulated by calling the; * source's memory manager.; * 2. The destination's component count should be used. It may be smaller; * than the source's when forcing to grayscale.; * 3. Likewise the destination's sampling factors should be used. When; * forcing to grayscale the destination's sampling factors will be all 1,; * and we may as well take that as the effective iMCU size.; * 4. When ""trim"" is in effect, the destination's dimensions will be the; * trimmed values but the source's will be untrimmed.; * 5. When ""crop"" is in effect, the destination's dimensions will be the; * cropped values but the source's will be uncropped. Each transform; * routine is responsible for picking up source data starting at the; * correct X and Y offset for the crop region. (The X and Y offsets; * passed to the transform routines are measured in iMCU blocks of the; * destination.); * 6. All the routines assume that the source and destination buffers are; * padded out to a full iMCU boundary. This is true, although for the; * source buffer it is an undocumented property of jdcoefct.c.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:2303,rout,routine,2303,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,3,['rout'],"['routine', 'routines']"
Integrability,"************************************************************************; * Some parts of this source are based on libAfterImage 2.00.00; * (http://www.afterstep.org/); *; * Copyright (c) 2002 Sasha Vasko <sasha@aftercode.net>; * Copyright (c) 1998, 1999 Ethan Fischer <allanon@crystaltokyo.com>; *; * This program is free software; you can redistribute it and/or modify; * it under the terms of the GNU Library General Public License as; * published by the Free Software Foundation; either version 2 of the; * License, or (at your option) any later version.; *; * This program is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; * GNU General Public License for more details.; *; * You should have received a copy of the GNU Library General Public; * License along with this program; if not, write to the Free Software; * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.; *; **************************************************************************/; /** \class TASImage; \ingroup asimage. Image class. TASImage is the concrete interface to the image processing library; libAfterImage. It allows reading and writing of images in different formats, several image; manipulations (scaling, tiling, merging, etc.) and displaying in pads. The size; of the image on the screen does not depend on the original size of the image but; on the size of the pad. Therefore it is very easy to resize the image on the; screen by resizing the pad. Besides reading an image from a file an image can be defined by a two; dimensional array of values. A palette defines the color of each value. The image can be zoomed by defining a rectangle with the mouse. The color; palette can be modified with a GUI, just select StartPaletteEditor() from the; context menu. Several examples showing how to use this class are available in the; ROOT tutorials: `$ROOTSYS/tutorials/image/`; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASImage.cxx:1687,interface,interface,1687,graf2d/asimage/src/TASImage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASImage.cxx,2,"['depend', 'interface']","['depend', 'interface']"
Integrability,"**********************************************************************. Copyright 1987, 1998 The Open Group. All Rights Reserved. The above copyright notice and this permission notice shall be included in; all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of The Open Group shall not be; used in advertising or otherwise to promote the sale, use or other dealings; in this Software without prior written authorization from The Open Group. Copyright 1987 by Digital Equipment Corporation, Maynard, Massachusetts. All Rights Reserved. Permission to use, copy, modify, and distribute this software and its; documentation for any purpose and without fee is hereby granted,; provided that the above copyright notice appear in all copies and that; both that copyright notice and this permission notice appear in; supporting documentation, and that the name of Digital not be; used in advertising or publicity pertaining to distribution of the; software without specific, written prior permission. DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING; ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL; DIGITAL BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR; ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,; WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,; ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS; SOFTWARE. ************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPolyUtils.c:2240,CONTRACT,CONTRACT,2240,graf2d/asimage/src/TASPolyUtils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPolyUtils.c,1,['CONTRACT'],['CONTRACT']
Integrability,"************************************************/; /**; * \class RooBinSamplingPdf; * The RooBinSamplingPdf is supposed to be used as an adapter between a continuous PDF; * and a binned distribution.; * When RooFit is used to fit binned data, and the PDF is continuous, it takes the probability density; * at the bin centre as a proxy for the probability averaged (integrated) over the entire bin. This is; * correct only if the second derivative of the function vanishes, though. This is shown in the plots; * below.; *; * For PDFs that have larger curvatures, the RooBinSamplingPdf can be used. It integrates the PDF in each; * bin using an adaptive integrator. This usually requires 21 times more function evaluations, but significantly; * reduces biases due to better sampling of the PDF. The integrator can be accessed from the outside; * using integrator(). This can be used to change the integration rules, so less/more function evaluations are; * performed. The target precision of the integrator can be set in the constructor.; *; *; * ### How to use it; * There are two ways to use this class:; * - Manually wrap a PDF:; * ```; * RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; * binSampler.fitTo(data);; * ```; * When a PDF is wrapped with a RooBinSamplingPDF, just use the bin sampling PDF instead of the original one for fits; * or plotting etc.; * \note The binning will be taken from the observable. Make sure that this binning is the same as the one of the dataset that should be fit.; * Use RooRealVar::setBinning() to adapt it.; * - Instruct test statistics to carry out this wrapping automatically:; * ```; * pdf.fitTo(data, IntegrateBins(<precision>));; * ```; * This method is especially useful when used with a simultaneous PDF, since each component will automatically be wrapped,; * depending on the value of `precision`:; * - `precision < 0.`: None of the PDFs are touched, bin sampling is off.; * -",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:1656,integrat,integrator,1656,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['integrat'],['integrator']
Integrability,"**********************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \class RooCategory; \ingroup Roofitcore. Object to represent discrete states.; States have names and index numbers, and the index numbers can be written into datasets and; used in calculations.; A category is ""fundamental"", i.e., its value doesn't depend on the value of other objects.; (Objects in datasets cannot depend on other objects' values, they need to be self-consistent.). A category object can be used to *e.g.* conduct a simultaneous fit of; the same observable in multiple categories. ### Setting up a category; 1. A category can be set up like this:; ~~~{.cpp}; RooCategory myCat(""myCat"", ""Lepton multiplicity category"", {; {""0Lep"", 0},; {""1Lep"", 1},; {""2Lep"", 2},; {""3Lep"", 3}; });; ~~~; 2. Like this:; ~~~{.cpp}; RooCategory myCat(""myCat"", ""Asymmetry"");; myCat[""left""] = -1;; myCat[""right""] = 1;; ~~~; 3. Or like this:; ~~~{.cpp}; RooCategory myCat(""myCat"", ""Asymmetry"");; myCat.defineType(""left"", -1);; myCat.defineType(""right"", 1);; ~~~; Inspect the pairs of state names and state numbers like this:; ~~~{.cpp}; for (const auto& nameIdx : myCat) {; std::cout << nameIdx.first << "" --> "" << nameIdx.second << std::endl;; }; ~~~. ### Changing category states; Category states can be modified either by using the index state (faster) or state names.; For example:; ~~~{.cpp}; myCat.setIndex(5);; myCat.setLabel(""left"")",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCategory.cxx:1015,depend,depend,1015,roofit/roofitcore/src/RooCategory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCategory.cxx,1,['depend'],['depend']
Integrability,"***************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /* \class TGedEditor; \ingroup ged. The main class of ROOT graphics editor. It manages the appearance; of objects editors according to the selected object in the canvas; (an object became selected after the user click on it using the; left-mouse button). Every object editor provides an object specific GUI and follows a; simple naming convention: it has as a name the object class name; concatenated with 'Editor' (e.g. for TGraph objects the object; editor is TGraphEditor). The ROOT graphics editor can be activated by selecting 'Editor'; from the View canvas menu, or SetLine/Fill/Text/MarkerAttributes; from the context menu. The algorithm in use is simple: according to; the selected object <obj> in the canvas it looks for a class name; <obj>Editor. If a class with this name exists, the editor verifies; that this class derives from the base editor class TGedFrame.; It makes an instance of the object editor, scans all object base; classes searching the corresponding object editors and makes an; instance of the base class editor too. Once the object editor is in; place, it sets the user interface elements according to the object; state and is ready for interactions. When a new object of a; different class is selected, a new object editor is loaded in the; editor frame. The old one is cached in memory for potential reuse. Any created canvas will be shown with the editor if you have a; .rootrc file in your working directory containing the line:; Canvas.ShowEditor: true. An created object can be set as selected in a macro by:; canvas->Selected(parent_pad_of_object, object, 1);; The first parameter can be the canvas itself or the pad containing; 'object'. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedEditor.cxx:1530,interface,interface,1530,gui/ged/src/TGedEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TGedEditor.cxx,1,['interface'],['interface']
Integrability,"*******************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : TMVA::MethodCFMlpANN *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Xavier Prudent <prudent@lapp.in2p3.fr> - LAPP, France *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodCFMlpANN; \ingroup TMVA. Interface to Clermond-Ferrand artificial neural network. The CFMlpANN belong to the class of Multilayer Perceptrons (MLP), which are; feed-forward networks according to the following propagation schema:. \image html tmva_mlp.png Schema for artificial neural network. The input layer contains as many neurons as input variables used in the MVA.; The output layer contains two neurons for the signal and background; event classes. In between the input and output layers are a variable number; of <i>k</i> hidden layers with arbitrary numbers of neurons. (While the; structure of the input and output layers is determined by the problem, the; hidden layers can be configured by the user through the option string; of the method booking.). As indicated in the sketch, all neuron inputs to a layer are linear; combinations of the neuron output of the previous layer. The transfer; from input to output within a neuron is performed by means of an ""activation; function"". In general, the activation function of a neuron can be; zero (d",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx:1113,Interface,Interface,1113,tmva/tmva/src/MethodCFMlpANN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx,1,['Interface'],['Interface']
Integrability,"******************************/; /** \class RooStats::ProfileLikelihoodCalculator; \ingroup Roostats. The ProfileLikelihoodCalculator is a concrete implementation of CombinedCalculator; (the interface class for tools which can produce both a RooStats HypoTestResult; and ConfInterval). The tool uses the profile likelihood ratio as a test statistic,; and assumes that Wilks' theorem is valid. Wilks' theorem states that \f$ -2 \cdot \ln(\lambda) \f$; (profile likelihood ratio) is asymptotically distributed as a \f$ \chi^2 \f$ distribution; with \f$ N \f$ degrees of freedom. Thus, \f$p\f$-values can be; constructed, and the profile likelihood ratio can be used to construct a; LikelihoodInterval. (In the future, this class could be extended to use toy; Monte Carlo to calibrate the distribution of the test statistic). Usage: It uses the interface of the CombinedCalculator, so that it can be; configured by specifying:. - A model common model (*e.g.* a family of specific models, which includes both; the null and alternate); - A data set; - A set of parameters of interest. The nuisance parameters will be all other; parameters of the model.; - A set of parameters which specify the null hypothesis (including values; and const/non-const status). The interface allows one to pass the model, data, and parameters either directly; or via a ModelConfig class. The alternate hypothesis leaves the parameter free; to take any value other than those specified by the null hypothesis. There is; therefore no need to specify the alternate parameters. After configuring the calculator, one only needs to call GetHypoTest() (which; will return a HypoTestResult pointer) or GetInterval() (which will return a; ConfInterval pointer). This calculator can work with both one-dimensional intervals or multi-; dimensional ones (contours). Note that for hypothesis tests, it is often better to use the; AsymptoticCalculator, which can compute in addition the expected; \f$p\f$-value using an Asimov data set. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodCalculator.cxx:1645,interface,interface,1645,roofit/roostats/src/ProfileLikelihoodCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodCalculator.cxx,1,['interface'],['interface']
Integrability,"*************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMCStudy.cxx; \class RooMCStudy; \ingroup Roofitcore. Helper class to facilitate Monte Carlo studies; such as 'goodness-of-fit' studies, that involve fitting a PDF; to multiple toy Monte Carlo sets. These may be generated from either same PDF; or from a different PDF with similar parameters. Given a fit and a generator PDF (they might be identical), RooMCStudy can produce; toyMC samples and/or fit these.; It accumulates the post-fit parameters of each iteration in a dataset. These can be; retrieved using fitParams() or fitParDataSet(). This dataset additionally contains the; variables; - NLL: The value of the negative log-likelihood for each run.; - ngen: The number of events generated for each run. Additional plotting routines simplify the task of plotting; the distribution of the minimized likelihood, the fitted parameter values,; fitted error and pull distribution. RooMCStudy provides the option to insert add-in modules; that modify the generate-and-fit cycle and allow to perform; extra steps in the cycle. Output of these modules can be stored; alongside the fit results in the aggregate results dataset.; These study modules should derive from the class RooAbsMCStudyModule. Check the RooFit tutorials; - rf801_mcstudy.C; - rf802_mcstudy_addons.C; - rf803_mcstudy_addons2.C; - rf804_mcstudy_constr.C; for usage examples.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:1437,rout,routines,1437,roofit/roofitcore/src/RooMCStudy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx,1,['rout'],['routines']
Integrability,"********************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::BayesianCalculator; \ingroup Roostats. BayesianCalculator is a concrete implementation of IntervalCalculator, providing the computation; of a credible interval using a Bayesian method.; The class works only for one single parameter of interest and it integrates the likelihood function with the given prior; probability density function to compute the posterior probability. The result of the class is a one dimensional interval; (class SimpleInterval ), which is obtained from inverting the cumulative posterior distribution.; This calculator works then only for model with a single parameter of interest.; The model can instead have several nuisance parameters which are integrated (marginalized) in the computation of the posterior function.; The integration and normalization of the posterior is computed using numerical integration methods provided by ROOT.; See the MCMCCalculator for model with multiple parameters of interest. The interface allows one to construct the class by passing the data set, probability density function for the model, the prior; functions and then the parameter of interest to scan. The nuisance parameters can also be passed to be marginalized when; computing the posterior. Alternatively, the class can be constructed by passing the data and the ModelConfig containing; all the needed information (model pdf, prior pdf, parameter of interest, nuisance parameters, etc..). After configuring the calculator, one only needs to ask GetInterval(), which; will return an SimpleInterval object. By default the extreme of the integral are obtained by inverting directly the; cumulative posterior distribution. By using the method SetScanOfPosterio",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx:1153,integrat,integrated,1153,roofit/roostats/src/BayesianCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/BayesianCalculator.cxx,1,['integrat'],['integrated']
Integrability,"**************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TList; \ingroup Containers; A doubly linked list. All classes inheriting from TObject can be; inserted in a TList. Before being inserted into the list the object; pointer is wrapped in a TObjLink object which contains, besides; the object pointer also a previous and next pointer. There are several ways to iterate over a TList; in order of preference, if; not forced by other constraints:. 1. (Preferred way) Using the C++ range-based `for` or `begin()` / `end()`:; ~~~ {.cpp}; for(TObject *obj: *GetListOfPrimitives()); obj->Write();; ~~~; 2. Using the R__FOR_EACH macro:; ~~~ {.cpp}; GetListOfPrimitives()->R__FOR_EACH(TObject,Paint)(option);; ~~~; 3. Using the TList iterator TListIter (via the wrapper class TIter):; ~~~ {.cpp}; TIter next(GetListOfPrimitives());; while (TObject *obj = next()); obj->Draw(next.GetOption());; ~~~; 4. Using the TList iterator TListIter and std::for_each algorithm:; ~~~ {.cpp}; // A function object, which will be applied to each element; // of the given range.; struct STestFunctor {; bool operator()(TObject *aObj) {; ...; return true;; }; }; ...; ...; TIter iter(mylist);; for_each( iter.Begin(), TIter::End(), STestFunctor() );; ~~~; 5. Using the TObjLink list entries (that wrap the TObject*):; ~~~ {.cpp}; TObjLink *lnk = GetListOfPrimitives()->FirstLink();; while (lnk) {; lnk->GetObject()->Draw(lnk->GetOption());; lnk = lnk->Next();; }; ~~~; 6. Using the TList's After() and Before() member functions:; ~~~ {.cpp}; TFree *idcur = this;; while (idcur) {; ...; ...; idcur = (TFree*)GetListOfFree()->After(idcur);; }; ~~~; Methods 3, 4 and 5 can also easily iterate backwards using either; a backward TIter (using argument kIterBackward) or by usi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:1128,wrap,wrapper,1128,core/cont/src/TList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx,1,['wrap'],['wrapper']
Integrability,"********; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \class TZIPFile; \ingroup IO. Describes a ZIP archive file containing multiple sub-files. Typically the sub-files are ROOT files. Notice that; the ROOT files should not be compressed when being added to the; ZIP file, since ROOT files are normally already compressed.; Such a ZIP file should be created like:; zip -n root multi file1.root file2.root; which creates a ZIP file multi.zip.; A ZIP archive consists of files compressed with the popular ZLIB; compression algorithm. The archive format is used among others by; PKZip and Info-ZIP. The compression algorithm is also used by; GZIP and the PNG graphics standard. The format of the archives is; explained briefly below. This class provides an interface to read; such archives.; A ZIP archive contains a prefix, series of archive members; (sub-files), and a central directory. In theory the archive could; span multiple disks (or files) with the central directory of the; whole archive on the last disk, but this class does not support; such multi-part archives. The prefix is only used in self-extracting; executable archive files.; The members are stored in the archive sequentially, each with a; local header followed by the (optionally) compressed data; the local; header describes the member, including its file name and compressed; and real sizes. The central directory includes the member details; again, plus allows an extra member comment to be added. The last; member in the central directory is an end marker that can contain; a comment for the whole archive. Both the local header and the; central directory can also carry extra member-specific data; the; data in the local and global parts can be different.; The fact that the archive h",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TZIPFile.cxx:1135,interface,interface,1135,io/io/src/TZIPFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TZIPFile.cxx,1,['interface'],['interface']
Integrability,"********; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /** \class RooAbsPdf; \ingroup Roofitcore; \brief Abstract interface for all probability density functions. ## RooAbsPdf, the base class of all PDFs. RooAbsPdf is the base class for all probability density; functions (PDFs). The class provides hybrid analytical/numerical; normalization for its implementations, error tracing, and a Monte Carlo; generator interface. ### A Minimal PDF Implementation. A minimal implementation of a PDF class derived from RooAbsPdf; should override the `evaluate()` function. This function should; return the PDF's value (which does not need to be normalised). #### Normalization/Integration. Although the normalization of a PDF is an integral part of a; probability density function, normalization is treated separately; in RooAbsPdf. The reason is that a RooAbsPdf object is more than a; PDF: it can be a building block for a more complex composite PDF; if any of its variables are functions instead of variables. In; such cases, the normalization of the composite PDF may not simply be; integral over the dependents of the top-level PDF: these are; functions with potentially non-trivial Jacobian terms themselves.; \note Therefore, no explicit attempt should be made to normalize the; function output in evaluate(). In particular, normalisation constants; can",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:1131,interface,interface,1131,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['interface'],['interface']
Integrability,"*; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAbsData.cxx; \class RooAbsData; \ingroup Roofitcore. Abstract base class for binned and unbinned; datasets. The abstract interface defines plotting and tabulating entry; points for its contents and provides an iterator over its elements; (bins for binned data sets, data points for unbinned datasets). ### Storing global observables in RooFit datasets. RooFit groups model variables into *observables* and *parameters*, depending on; if their values are stored in the dataset. For fits with parameter; constraints, there is a third kind of variables, called *global observables*.; These represent the results of auxiliary measurements that constrain the; nuisance parameters. In the RooFit implementation, a likelihood is generally; the sum of two terms:; - the likelihood of the data given the parameters, where the normalization set; is the set of observables (implemented by RooNLLVar); - the constraint term, where the normalization set is the set of *global; observables* (implemented by RooConstraintSum). Before this release, the global observable values were always taken from the; model/pdf. With this release, a mechanism is added to store a snapshot of; global observables in any RooDataSet or RooDataHist. For toy studies where the; global observables assume a different values for each toy, the bookkeeping of; the set of global observables and in particular their values is much easier; with this cha",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:1129,depend,depending,1129,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['depend'],['depending']
Integrability,"*; *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooParametricStepFunction; \ingroup Roofit. The Parametric Step Function PDF is a binned distribution whose parameters; are the heights of each bin. This PDF was first used in BaBar's B0->pi0pi0; paper BABAR Collaboration (B. Aubert et al.) Phys.Rev.Lett.91:241801,2003. This PDF may be used to describe oddly shaped distributions. It differs; from a RooKeysPdf or a RooHistPdf in that a RooParametricStepFunction; has free parameters. In particular, any statistical uncertainty in; sample used to model this PDF may be understood with these free parameters;; this is not possible with non-parametric PDFs. The RooParametricStepFunction has Nbins-1 free parameters. Note that; the limits of the dependent variable must match the low and hi bin limits. Here is an example showing how to use the RooParametricStepFunction to fit toy; data generated from a uniform distribution:. ~~~ {.cpp}; // Define some constant parameters; const int nBins = 10;; const double xMin = 0.0;; const double xMax = 10.0;; const double binWidth = (xMax - xMin) / nBins;; const std::size_t nEvents = 10000;. // Fill the bin boundaries; std::vector<double> binBoundaries(nBins + 1);. for(int i = 0; i <= nBins; ++i) {; binBoundaries[i] = i * binWidth;; }. // The RooParametricStepFunction needs a TArrayD; TArrayD binBoundariesTArr{int(binBoundaries.size()), binBoundaries.data()};. RooRealVar x{""x"", ""x"", xMin, xMax};. // There are nBins-1 free coefficient parameters, whose sum must be <= 1.0.; // We all set them to 0.1, such that the resulting step function pdf is; // initially uniform.; RooArgList coefList;; for(int i = 0; i < nBins - 1; ++i) {; auto name = std::string(""coef_"") + std::to_string(i);; coefList.addOwned(std::m",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParametricStepFunction.cxx:1297,depend,dependent,1297,roofit/roofit/src/RooParametricStepFunction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParametricStepFunction.cxx,1,['depend'],['dependent']
Integrability,", *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; * \class RooBinSamplingPdf; * The RooBinSamplingPdf is supposed to be used as an adapter between a continuous PDF; * and a binned distribution.; * When RooFit is used to fit binned data, and the PDF is continuous, it takes the probability density; * at the bin centre as a proxy for the probability averaged (integrated) over the entire bin. This is; * correct only if the second derivative of the function vanishes, though. This is shown in the plots; * below.; *; * For PDFs that have larger curvatures, the RooBinSamplingPdf can be used. It integrates the PDF in each; * bin using an adaptive integrator. This usually requires 21 times more function evaluations, but significantly; * reduces biases due to better sampling of the PDF. The integrator can be accessed from the outside; * using integrator(). This can be used to change the integration rules, so less/more function evaluations are; * performed. The target precision of the integrator can be set in the constructor.; *; *; * ### How to use it; * There are two ways to use this class:; * - Manually wrap a PDF:; * ```; * RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; * binSampler.fitTo(data);; * ```; * When a PDF is wrapped with a RooBinSamplingPDF, just use the bin sampling PDF instead of the original one for fits; * or plotting etc.; * \note The binning will be taken from the observable. Make sure that this binning is the same as the one of the dataset that should be fit.; * Use RooRealVar::setBinning() to adapt it.; * - Instruct test statistics to carry out this wrapping automatically:; * ```; * pdf.fitTo(data, IntegrateBins(<precision>));; * ```; * This method is especially useful when used with a simultaneous PDF, ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:1459,integrat,integrator,1459,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,2,['integrat'],['integrator']
Integrability,", Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/; /*! \class TMVA::MethodBase; \ingroup TMVA. Virtual base Class for all MVA method. MethodBase hosts several specific evaluation methods. The kind of MVA that provides optimal performance in an analysis strongly; depends on the particular application. The evaluation factory provides a; number of numerical benchmark results to directly assess the performance; of the MVA training on the independent test sample. These are:. - The _signal efficiency_ at three representative background efficiencies; (which is 1 &minus; rejection).; - The _significance_ of an MVA estimator, defined by the difference; between the MVA mean values for signal and background, divided by the; quadratic sum of their root mean squares.; - The _separation_ of an MVA _x_, defined by the integral; \f[; \frac{1}{2} \int \frac{(S(x) - B(x))^2}{(S(x) + B(x))} dx; \f]; where; \f$ S(x) \f$ and \f$ B(x) \f$ are the signal and background distributions,; respectively. The separation is zero for identical signal and background MVA; shapes, and it is one for disjunctive shapes.; - The average, \f$ \int x \mu (S(x)) dx \f$, of the signal \f$ \mu_{transform} \f$.; The \f$ \mu_{transform} \f$ of an MVA denotes the transfo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx:1525,depend,depends,1525,tmva/tmva/src/MethodBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodBase.cxx,1,['depend'],['depends']
Integrability,", i.e.; /// \f[; /// \int_{x_\mathrm{lo}}^x f(x') \, \mathrm{d}x'; /// \f]; ///; /// The actual integration calculation is only performed when the return object is evaluated. The name; /// of the integral object is automatically constructed from the name of the input function, the variables; /// it integrates and the range integrates over. The default strategy to calculate the running integrals is; ///; /// - If the integrand (this object) supports analytical integration, construct an integral object; /// that calculate the running integrals value by calculating the analytical integral each; /// time the running integral object is evaluated; ///; /// - If the integrand (this object) requires numeric integration to construct the running integral; /// create an object of class RooNumRunningInt which first samples the entire function and integrates; /// the sampled function numerically. This method has superior performance as there is no need to; /// perform a full (numeric) integration for each evaluation of the running integral object, but; /// only when one of its parameters has changed.; ///; /// The choice of strategy can be changed with the ScanAll() argument, which forces the use of the; /// scanning technique implemented in RooNumRunningInt for all use cases, and with the ScanNone(); /// argument which forces the 'integrate each evaluation' technique for all use cases. The sampling; /// granularity for the scanning technique can be controlled with the ScanParameters technique; /// which allows to specify the number of samples to be taken, and to which order the resulting; /// running integral should be interpolated. The default values are 1000 samples and 2nd order; /// interpolation.; ///; /// The following named arguments are accepted; /// | | Effect on integral creation; /// |-|-------------------------------; /// | `SupNormSet(const RooArgSet&)` | Observables over which should be normalized _in addition_ to the integration observables; /// | `ScanParameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:1186,integrat,integration,1186,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['integrat'],['integration']
Integrability,", no hidden Jacobian terms,; multiplication with other PDFs that have one or more dependents in; common, etc). #### Implementing analytical integrals; To implement analytical integrals, two functions must be implemented. First,. ```; Int_t getAnalyticalIntegral(const RooArgSet& integSet, RooArgSet& anaIntSet); ```; should return the analytical integrals that are supported. `integSet`; is the set of dependents for which integration is requested. The; function should copy the subset of dependents it can analytically; integrate to `anaIntSet`, and return a unique identification code for; this integration configuration. If no integration can be; performed, zero should be returned. Second,. ```; double analyticalIntegral(Int_t code); ```. implements the actual analytical integral(s) advertised by; `getAnalyticalIntegral()`. This function will only be called with; codes returned by `getAnalyticalIntegral()`, except code zero. The integration range for each dependent to be integrated can; be obtained from the dependent's proxy functions `min()` and; `max()`. Never call these proxy functions for any proxy not known to; be a dependent via the integration code. Doing so may be; ill-defined, e.g., in case the proxy holds a function, and will; trigger an assert. Integrated category dependents should always be; summed over all of their states. ### Direct generation of observables. Distributions for any PDF can be generated with the accept/reject method,; but for certain PDFs, more efficient methods may be implemented. To; implement direct generation of one or more observables, two; functions need to be implemented, similar to those for analytical; integrals:. ```; Int_t getGenerator(const RooArgSet& generateVars, RooArgSet& directVars); ```; and; ```; void generateEvent(Int_t code); ```. The first function advertises observables, for which distributions can be generated,; similar to the way analytical integrals are advertised. The second; function implements the actual generator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:3972,integrat,integration,3972,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,4,"['depend', 'integrat']","['dependent', 'integrated', 'integration']"
Integrability,"- RooAbsData::Expected: Expected Poisson error (\f$ \sqrt{n_\text{expected}} \f$ from the PDF).; /// - RooAbsData::SumW2: The observed error from the square root of the sum of weights,; /// i.e., symmetric errors calculated with the standard deviation of a Poisson distribution.; /// - RooAbsData::Poisson: Asymmetric errors from the central 68 % interval around a Poisson distribution with mean \f$ n_\text{observed} \f$.; /// If for a given bin \f$ n_\text{expected} \f$ is lower than the \f$ n_\text{observed} \f$, the lower uncertainty is taken; /// (e.g., the difference between the mean and the 16 % quantile).; /// If \f$ n_\text{expected} \f$ is higher than \f$ n_\text{observed} \f$, the higher uncertainty is taken; /// (e.g., the difference between the 84 % quantile and the mean).; /// - RooAbsData::Auto (default): RooAbsData::Expected for unweighted data, RooAbsData::SumW2 for weighted data.; /// <tr><td>; /// `Extended()` <td> Use expected number of events of an extended p.d.f as normalization; /// <tr><td>; /// NumCPU() <td> Activate parallel processing feature; /// <tr><td>; /// Range() <td> Calculate \f$ \chi^2 \f$ only in selected region; /// <tr><td>; /// Verbose() <td> Verbose output of GOF framework; /// <tr><td>; /// IntegrateBins() <td> Integrate PDF within each bin. This sets the desired precision. Only useful for binned fits.; /// <tr><td> `SumCoefRange()` <td> Set the range in which to interpret the coefficients of RooAddPdf components; /// <tr><td> `SplitRange()` <td> Fit ranges used in different categories get named after the category.; /// Using `Range(""range""), SplitRange()` as switches, different ranges could be set like this:; /// ```; /// myVariable.setRange(""range_pi0"", 135, 210);; /// myVariable.setRange(""range_gamma"", 50, 210);; /// ```; /// <tr><td> `ConditionalObservables(Args_t &&... argsOrArgSet)` <td> Define projected observables.; /// Arguments can either be multiple RooRealVar or a single RooArgSet containing them.; ///; /// </table>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:1634,Integrat,IntegrateBins,1634,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['Integrat'],"['Integrate', 'IntegrateBins']"
Integrability,"- TrailingObjects.h - Variable-length classes ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This header defines support for implementing classes that have; /// some trailing object (or arrays of objects) appended to them. The; /// main purpose is to make it obvious where this idiom is being used,; /// and to make the usage more idiomatic and more difficult to get; /// wrong.; ///; /// The TrailingObject template abstracts away the reinterpret_cast,; /// pointer arithmetic, and size calculations used for the allocation; /// and access of appended arrays of objects, and takes care that they; /// are all allocated at their required alignment. Additionally, it; /// ensures that the base type is final -- deriving from a class that; /// expects data appended immediately after it is typically not safe.; ///; /// Users are expected to derive from this template, and provide; /// numTrailingObjects implementations for each trailing type except; /// the last, e.g. like this sample:; ///; /// \code; /// class VarLengthObj : private TrailingObjects<VarLengthObj, int, double> {; /// friend TrailingObjects;; ///; /// unsigned NumInts, NumDoubles;; /// size_t numTrailingObjects(OverloadToken<int>) const { return NumInts; }; /// };; /// \endcode; ///; /// You can access the appended arrays via 'getTrailingObjects', and; /// determine the size needed for allocation via; /// 'additionalSizeToAlloc' and 'totalSizeToAlloc'.; ///; /// All the methods implemented by this class are intended for use; /// by the implementation of the class, not as part of its interface; /// (thus, private inheritance is suggested).; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TrailingObjects.h:1864,interface,interface,1864,interpreter/llvm-project/llvm/include/llvm/Support/TrailingObjects.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TrailingObjects.h,1,['interface'],['interface']
Integrability,"-+ +-------------------+; // | C4h | | RXB | m-mmmm | | W | vvvv | L | pp |; // +-----+ +--------------+ +-------------------+; // VEX_R: opcode externsion equivalent to REX.R in; // 1's complement (inverted) form; //; // 1: Same as REX_R=0 (must be 1 in 32-bit mode); // 0: Same as REX_R=1 (64 bit mode only); // VEX_X: equivalent to REX.X, only used when a; // register is used for index in SIB Byte.; //; // 1: Same as REX.X=0 (must be 1 in 32-bit mode); // 0: Same as REX.X=1 (64-bit mode only); // VEX_B:; // 1: Same as REX_B=0 (ignored in 32-bit mode); // 0: Same as REX_B=1 (64 bit mode only); // VEX_W: opcode specific (use like REX.W, or used for; // opcode extension, or ignored, depending on the opcode byte); // VEX_5M (VEX m-mmmmm field):; //; // 0b00000: Reserved for future use; // 0b00001: implied 0F leading opcode; // 0b00010: implied 0F 38 leading opcode bytes; // 0b00011: implied 0F 3A leading opcode bytes; // 0b00100: Reserved for future use; // 0b00101: VEX MAP5; // 0b00110: VEX MAP6; // 0b00111: VEX MAP7; // 0b00111-0b11111: Reserved for future use; // 0b01000: XOP map select - 08h instructions with imm byte; // 0b01001: XOP map select - 09h instructions with no imm byte; // 0b01010: XOP map select - 0Ah instructions with imm dword; // VEX_4V (VEX vvvv field): a register specifier; // (in 1's complement form) or 1111 if unused.; // VEX_PP: opcode extension providing equivalent; // functionality of a SIMD prefix; // 0b00: None; // 0b01: 66; // 0b10: F3; // 0b11: F2; // EVEX (4 bytes); // +-----+ +---------------+ +--------------------+ +------------------------+; // | 62h | | RXBR' | B'mmm | | W | vvvv | X' | pp | | z | L'L | b | v' | aaa |; // +-----+ +---------------+ +--------------------+ +------------------------+; // EVEX_L2/VEX_L (Vector Length):; // L2 L; // 0 0: scalar or 128-bit vector; // 0 1: 256-bit vector; // 1 0: 512-bit vector; // 32-Register Support in 64-bit Mode Using EVEX with Embedded REX/REX2 Bits:; //; // +----------+---------+-------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp:1226,depend,depending,1226,interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp,1,['depend'],['depending']
Integrability,"-------------------------------+-------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------+; // | i386 | 64 | https://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-optimization-manual.pdf |; // | i486 | 16 | ""four doublewords"" (doubleword = 32 bits, 4 bits * 32 bits = 16 bytes) https://en.wikichip.org/w/images/d/d3/i486_MICROPROCESSOR_HARDWARE_REFERENCE_MANUAL_%281990%29.pdf and http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.126.4216&rep=rep1&type=pdf (page 29) |; // | i586/Pentium MMX | 32 | https://www.7-cpu.com/cpu/P-MMX.html |; // | i686/Pentium | 32 | https://www.7-cpu.com/cpu/P6.html |; // | Netburst/Pentium4 | 64 | https://www.7-cpu.com/cpu/P4-180.html |; // | Atom | 64 | https://www.7-cpu.com/cpu/Atom.html |; // | Westmere | 64 | https://en.wikichip.org/wiki/intel/microarchitectures/sandy_bridge_(client) ""Cache Architecture"" |; // | Sandy Bridge | 64 | https://en.wikipedia.org/wiki/Sandy_Bridge and https://www.7-cpu.com/cpu/SandyBridge.html |; // | Ivy Bridge | 64 | https://blog.stuffedcow.net/2013/01/ivb-cache-replacement/ and https://www.7-cpu.com/cpu/IvyBridge.html |; // | Haswell | 64 | https://www.7-cpu.com/cpu/Haswell.html |; // | Broadwell | 64 | https://www.7-cpu.com/cpu/Broadwell.html |; // | Skylake (including skylake-avx512) | 64 | https://www.nas.nasa.gov/hecc/support/kb/skylake-processors_550.html ""Cache Hierarchy"" |; // | Cascade Lake | 64 | https://www.nas.nasa.gov/hecc/support/kb/cascade-lake-processors_579.html ""Cache Hierarchy"" |; // | Skylake | 64 | https://en.wikichip.org/wiki/intel/microarchitectures/kaby_lake ""Memory Hierarchy"" |; // | Ice Lake | 64 | https://www.7-cpu.com/cpu/Ice_Lake.html |; // | Knights Landing | 64 | https://software.intel.com/en-us/articles/intel-xeon-phi-processor-7200-family-memory-management-optimizations ""The Intel® Xeon Phi™ Processor Arch",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp:1377,Bridg,Bridge,1377,interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp,1,['Bridg'],['Bridge']
Integrability,"--------------------------------------------------------------+; // | i386 | 64 | https://www.intel.com/content/dam/www/public/us/en/documents/manuals/64-ia-32-architectures-optimization-manual.pdf |; // | i486 | 16 | ""four doublewords"" (doubleword = 32 bits, 4 bits * 32 bits = 16 bytes) https://en.wikichip.org/w/images/d/d3/i486_MICROPROCESSOR_HARDWARE_REFERENCE_MANUAL_%281990%29.pdf and http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.126.4216&rep=rep1&type=pdf (page 29) |; // | i586/Pentium MMX | 32 | https://www.7-cpu.com/cpu/P-MMX.html |; // | i686/Pentium | 32 | https://www.7-cpu.com/cpu/P6.html |; // | Netburst/Pentium4 | 64 | https://www.7-cpu.com/cpu/P4-180.html |; // | Atom | 64 | https://www.7-cpu.com/cpu/Atom.html |; // | Westmere | 64 | https://en.wikichip.org/wiki/intel/microarchitectures/sandy_bridge_(client) ""Cache Architecture"" |; // | Sandy Bridge | 64 | https://en.wikipedia.org/wiki/Sandy_Bridge and https://www.7-cpu.com/cpu/SandyBridge.html |; // | Ivy Bridge | 64 | https://blog.stuffedcow.net/2013/01/ivb-cache-replacement/ and https://www.7-cpu.com/cpu/IvyBridge.html |; // | Haswell | 64 | https://www.7-cpu.com/cpu/Haswell.html |; // | Broadwell | 64 | https://www.7-cpu.com/cpu/Broadwell.html |; // | Skylake (including skylake-avx512) | 64 | https://www.nas.nasa.gov/hecc/support/kb/skylake-processors_550.html ""Cache Hierarchy"" |; // | Cascade Lake | 64 | https://www.nas.nasa.gov/hecc/support/kb/cascade-lake-processors_579.html ""Cache Hierarchy"" |; // | Skylake | 64 | https://en.wikichip.org/wiki/intel/microarchitectures/kaby_lake ""Memory Hierarchy"" |; // | Ice Lake | 64 | https://www.7-cpu.com/cpu/Ice_Lake.html |; // | Knights Landing | 64 | https://software.intel.com/en-us/articles/intel-xeon-phi-processor-7200-family-memory-management-optimizations ""The Intel® Xeon Phi™ Processor Architecture"" |; // | Knights Mill | 64 | https://software.intel.com/sites/default/files/managed/9e/bc/64-ia-32-architectures-optimization-manual.pdf?countryl",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp:1493,Bridg,Bridge,1493,interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp,1,['Bridg'],['Bridge']
Integrability,"--------------------------------------------------------------------===//; //; // DependenceAnalysis is an LLVM pass that analyses dependences between memory; // accesses. Currently, it is an (incomplete) implementation of the approach; // described in; //; // Practical Dependence Testing; // Goff, Kennedy, Tseng; // PLDI 1991; //; // There's a single entry point that analyzes the dependence between a pair; // of memory references in a function, returning either NULL, for no dependence,; // or a more-or-less detailed description of the dependence between them.; //; // Currently, the implementation cannot propagate constraints between; // coupled RDIV subscripts and lacks a multi-subscript MIV test.; // Both of these are conservative weaknesses;; // that is, not a source of correctness problems.; //; // Since Clang linearizes some array subscripts, the dependence; // analysis is using SCEV->delinearize to recover the representation of multiple; // subscripts, and thus avoid the more expensive and less precise MIV tests. The; // delinearization is controlled by the flag -da-delinearize.; //; // We should pay some careful attention to the possibility of integer overflow; // in the implementation of the various tests. This could happen with Add,; // Subtract, or Multiply, with both APInt's and SCEV's.; //; // Some non-linear subscript pairs can be handled by the GCD test; // (and perhaps other tests).; // Should explore how often these things occur.; //; // Finally, it seems like certain test cases expose weaknesses in the SCEV; // simplification, especially in the handling of sign and zero extensions.; // It could be useful to spend time exploring these.; //; // Please note that this is work in progress and the interface is subject to; // change.; //; //===----------------------------------------------------------------------===//; // //; // In memory of Ken Kennedy, 1945 - 2007 //; // //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:2039,interface,interface,2039,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['interface'],['interface']
Integrability,"---------------------------------------------------------===//; // getSplitIteration -; // Rather than spend rarely-used space recording the splitting iteration; // during the Weak-Crossing SIV test, we re-compute it on demand.; // The re-computation is basically a repeat of the entire dependence test,; // though simplified since we know that the dependence exists.; // It's tedious, since we must go through all propagations, etc.; //; // Care is required to keep this code up to date with respect to the routine; // above, depends().; //; // Generally, the dependence analyzer will be used to build; // a dependence graph for a function (basically a map from instructions; // to dependences). Looking for cycles in the graph shows us loops; // that cannot be trivially vectorized/parallelized.; //; // We can try to improve the situation by examining all the dependences; // that make up the cycle, looking for ones we can break.; // Sometimes, peeling the first or last iteration of a loop will break; // dependences, and we've got flags for those possibilities.; // Sometimes, splitting a loop at some other iteration will do the trick,; // and we've got a flag for that case. Rather than waste the space to; // record the exact iteration (since we rarely know), we provide; // a method that calculates the iteration. It's a drag that it must work; // from scratch, but wonderful in that it's possible.; //; // Here's an example:; //; // for (i = 0; i < 10; i++); // A[i] = ...; // ... = A[11 - i]; //; // There's a loop-carried flow dependence from the store to the load,; // found by the weak-crossing SIV test. The dependence will have a flag,; // indicating that the dependence can be broken by splitting the loop.; // Calling getSplitIteration will return 5.; // Splitting the loop breaks the dependence, like so:; //; // for (i = 0; i <= 5; i++); // A[i] = ...; // ... = A[11 - i]; // for (i = 6; i < 10; i++); // A[i] = ...; // ... = A[11 - i]; //; // breaks the dependence and allows us",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:1028,depend,dependences,1028,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['depend'],['dependences']
Integrability,"--------------------------------------------------===//; //; // This file contains the declaration of the MCPseudoProbe to support the pseudo; // probe encoding for AutoFDO. Pseudo probes together with their inline context; // are encoded in a DFS recursive way in the .pseudoprobe sections. For each; // .pseudoprobe section, the encoded binary data consist of a single or mutiple; // function records each for one outlined function. A function record has the; // following format :; //; // FUNCTION BODY (one for each outlined function present in the text section); // GUID (uint64); // GUID of the function's source name which may be different from the; // actual binary linkage name. This GUID will be used to decode and; // generate a profile against the source function name.; // NPROBES (ULEB128); // Number of probes originating from this function.; // NUM_INLINED_FUNCTIONS (ULEB128); // Number of callees inlined into this function, aka number of; // first-level inlinees; // PROBE RECORDS; // A list of NPROBES entries. Each entry contains:; // INDEX (ULEB128); // TYPE (uint4); // 0 - block probe, 1 - indirect call, 2 - direct call; // ATTRIBUTE (uint3); // 1 - reserved; // 2 - Sentinel; // 4 - HasDiscriminator; // ADDRESS_TYPE (uint1); // 0 - code address for regular probes (for downwards compatibility); // - GUID of linkage name for sentinel probes; // 1 - address delta; // CODE_ADDRESS (uint64 or ULEB128); // code address or address delta, depending on ADDRESS_TYPE; // DISCRIMINATOR (ULEB128) if HasDiscriminator; // INLINED FUNCTION RECORDS; // A list of NUM_INLINED_FUNCTIONS entries describing each of the inlined; // callees. Each record contains:; // INLINE SITE; // ID of the callsite probe (ULEB128); // FUNCTION BODY; // A FUNCTION BODY entry describing the inlined function.; //; // TODO: retire the ADDRESS_TYPE encoding for code addresses once compatibility; // is no longer an issue.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCPseudoProbe.h:1780,depend,depending,1780,interpreter/llvm-project/llvm/include/llvm/MC/MCPseudoProbe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/MC/MCPseudoProbe.h,1,['depend'],['depending']
Integrability,"-------------------------| <- sp; // | | Lower address; //; //; // To access the data in a frame, at-compile time, a constant offset must be; // computable from one of the pointers (fp, bp, sp) to access it. The size; // of the areas with a dotted background cannot be computed at compile-time; // if they are present, making it required to have all three of fp, bp and; // sp to be set up to be able to access all contents in the frame areas,; // assuming all of the frame areas are non-empty.; //; // For most functions, some of the frame areas are empty. For those functions,; // it may not be necessary to set up fp or bp:; // * A base pointer is definitely needed when there are both VLAs and local; // variables with more-than-default alignment requirements.; // * A frame pointer is definitely needed when there are local variables with; // more-than-default alignment requirements.; //; // For Darwin platforms the frame-record (fp, lr) is stored at the top of the; // callee-saved area, since the unwind encoding does not allow for encoding; // this dynamically and existing tools depend on this layout. For other; // platforms, the frame-record is stored at the bottom of the (gpr) callee-saved; // area to allow SVE stack objects (allocated directly below the callee-saves,; // if available) to be accessed directly from the framepointer.; // The SVE spill/fill instructions have VL-scaled addressing modes such; // as:; // ldr z8, [fp, #-7 mul vl]; // For SVE the size of the vector length (VL) is not known at compile-time, so; // '#-7 mul vl' is an offset that can only be evaluated at runtime. With this; // layout, we don't need to add an unscaled offset to the framepointer before; // accessing the SVE object in the frame.; //; // In some cases when a base pointer is not strictly needed, it is generated; // anyway when offsets from the frame pointer to access local variables become; // so large that the offset can't be encoded in the immediate fields of loads; // or stores.; //;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:3761,depend,depend,3761,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['depend'],['depend']
Integrability,"------------------===//; // AST classes for directives.; //===----------------------------------------------------------------------===//; /// Representation of an OpenMP canonical loop.; ///; /// OpenMP 1.0 C/C++, section 2.4.1 for Construct; canonical-shape; /// OpenMP 2.0 C/C++, section 2.4.1 for Construct; canonical-shape; /// OpenMP 2.5, section 2.5.1 Loop Construct; canonical form; /// OpenMP 3.1, section 2.5.1 Loop Construct; canonical form; /// OpenMP 4.0, section 2.6 Canonical Loop Form; /// OpenMP 4.5, section 2.6 Canonical Loop Form; /// OpenMP 5.0, section 2.9.1 Canonical Loop Form; /// OpenMP 5.1, section 2.11.1 Canonical Loop Nest Form; ///; /// An OpenMP canonical loop is a for-statement or range-based for-statement; /// with additional requirements that ensure that the number of iterations is; /// known before entering the loop and allow skipping to an arbitrary iteration.; /// The OMPCanonicalLoop AST node wraps a ForStmt or CXXForRangeStmt that is; /// known to fulfill OpenMP's canonical loop requirements because of being; /// associated to an OMPLoopBasedDirective. That is, the general structure is:; ///; /// OMPLoopBasedDirective; /// [`- CapturedStmt ]; /// [ `- CapturedDecl]; /// ` OMPCanonicalLoop; /// `- ForStmt/CXXForRangeStmt; /// `- Stmt; ///; /// One or multiple CapturedStmt/CapturedDecl pairs may be inserted by some; /// directives such as OMPParallelForDirective, but others do not need them; /// (such as OMPTileDirective). In The OMPCanonicalLoop and; /// ForStmt/CXXForRangeStmt pair is repeated for loop associated with the; /// directive. A OMPCanonicalLoop must not appear in the AST unless associated; /// with a OMPLoopBasedDirective. In an imperfectly nested loop nest, the; /// OMPCanonicalLoop may also be wrapped in a CompoundStmt:; ///; /// [...]; /// ` OMPCanonicalLoop; /// `- ForStmt/CXXForRangeStmt; /// `- CompoundStmt; /// |- Leading in-between code (if any); /// |- OMPCanonicalLoop; /// | `- ForStmt/CXXForRangeStmt; /// | `- ..",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h:994,wrap,wraps,994,interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/StmtOpenMP.h,1,['wrap'],['wraps']
Integrability,"----------------===//; // getSplitIteration -; // Rather than spend rarely-used space recording the splitting iteration; // during the Weak-Crossing SIV test, we re-compute it on demand.; // The re-computation is basically a repeat of the entire dependence test,; // though simplified since we know that the dependence exists.; // It's tedious, since we must go through all propagations, etc.; //; // Care is required to keep this code up to date with respect to the routine; // above, depends().; //; // Generally, the dependence analyzer will be used to build; // a dependence graph for a function (basically a map from instructions; // to dependences). Looking for cycles in the graph shows us loops; // that cannot be trivially vectorized/parallelized.; //; // We can try to improve the situation by examining all the dependences; // that make up the cycle, looking for ones we can break.; // Sometimes, peeling the first or last iteration of a loop will break; // dependences, and we've got flags for those possibilities.; // Sometimes, splitting a loop at some other iteration will do the trick,; // and we've got a flag for that case. Rather than waste the space to; // record the exact iteration (since we rarely know), we provide; // a method that calculates the iteration. It's a drag that it must work; // from scratch, but wonderful in that it's possible.; //; // Here's an example:; //; // for (i = 0; i < 10; i++); // A[i] = ...; // ... = A[11 - i]; //; // There's a loop-carried flow dependence from the store to the load,; // found by the weak-crossing SIV test. The dependence will have a flag,; // indicating that the dependence can be broken by splitting the loop.; // Calling getSplitIteration will return 5.; // Splitting the loop breaks the dependence, like so:; //; // for (i = 0; i <= 5; i++); // A[i] = ...; // ... = A[11 - i]; // for (i = 6; i < 10; i++); // A[i] = ...; // ... = A[11 - i]; //; // breaks the dependence and allows us to vectorize/parallelize; // both loops.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:1558,depend,dependence,1558,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,5,['depend'],['dependence']
Integrability,"-back to byte structure for speed; * - Remove distance extra == 0 check in inflate_fast()--only helps for lengths; * - Change post-increments to pre-increments in inflate_fast(), PPC biased?; * - Add compile time option, POSTINC, to use post-increments instead (Intel?); * - Make MATCH copy in inflate() much faster for when inflate_fast() not used; * - Use local copies of stream next and avail values, as well as local bit; * buffer and bit count in inflate()--for speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table() to avoid compiler warnings; * - Move a comment on output buffer sizes from inffast.c to inflate.c; * - Add comments in inffast.c to introduce the inflate_fast() routine; * - Rearrange window copies in inflate_fast() for speed and simplification; * - Unroll last copy for window match in inflate_fast(); * - Use local copies of window variables in inflate_fast() for speed; * - Pull out common wnext == 0 case for speed in inflate_fast(); * - Make op and len in inflate_fast() unsigned for consistency; * - Add FAR to lcode and dcode declarations in inflate_fast(); * - Simplified bad distance check in inflate_fast(); * - Added inflateBackInit(), inflateBack(), and inflateBackEnd() in new; * source file infback.c to provide a call-back interface to inflate for; * programs like gzip and unzip -- uses window as output buffer to avoid; * window copying; *; * 1.2.beta5 1 Jan 2003; * - Improved inflateBack() interface to allow the caller to provide initial; * input in strm.; * - Fixed stored blocks bug in inflateBack(); *; * 1.2.beta6 4 Jan 2003; * - Added comments in inffast.c on effectiveness of POSTINC; * - Typecasting all around to reduce compiler warnings; * - Changed loops from while (1) or do {} while (1) to for (;;), again to; * make compilers happy; * - Changed type of window in inflateBackInit() to unsigned char *; *; * 1.2.beta7 27 Jan 2003; * - Changed many types to unsigned or unsigned short to av",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:2164,rout,routine,2164,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,1,['rout'],['routine']
Integrability,"-back to byte structure for speed; * - Remove distance extra == 0 check in inflate_fast()--only helps for lengths; * - Change post-increments to pre-increments in inflate_fast(), PPC biased?; * - Add compile time option, POSTINC, to use post-increments instead (Intel?); * - Make MATCH copy in inflate() much faster for when inflate_fast() not used; * - Use local copies of stream next and avail values, as well as local bit; * buffer and bit count in inflate()--for speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table() to avoid compiler warnings; * - Move a comment on output buffer sizes from inffast.c to inflate.c; * - Add comments in inffast.c to introduce the inflate_fast() routine; * - Rearrange window copies in inflate_fast() for speed and simplification; * - Unroll last copy for window match in inflate_fast(); * - Use local copies of window variables in inflate_fast() for speed; * - Pull out common write == 0 case for speed in inflate_fast(); * - Make op and len in inflate_fast() unsigned for consistency; * - Add FAR to lcode and dcode declarations in inflate_fast(); * - Simplified bad distance check in inflate_fast(); * - Added inflateBackInit(), inflateBack(), and inflateBackEnd() in new; * source file infback.c to provide a call-back interface to inflate for; * programs like gzip and unzip -- uses window as output buffer to avoid; * window copying; *; * 1.2.beta5 1 Jan 2003; * - Improved inflateBack() interface to allow the caller to provide initial; * input in strm.; * - Fixed stored blocks bug in inflateBack(); *; * 1.2.beta6 4 Jan 2003; * - Added comments in inffast.c on effectiveness of POSTINC; * - Typecasting all around to reduce compiler warnings; * - Changed loops from while (1) or do {} while (1) to for (;;), again to; * make compilers happy; * - Changed type of window in inflateBackInit() to unsigned char *; *; * 1.2.beta7 27 Jan 2003; * - Changed many types to unsigned or unsigned short to av",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inflate.c:2164,rout,routine,2164,graf2d/asimage/src/libAfterImage/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inflate.c,1,['rout'],['routine']
Integrability,". ### Building a computation graph of RooFit objects; Therefore, RooAbsArg provides functionality to connect objects of type RooAbsArg into; a computation graph to pass values between those objects.; A value can e.g. be a real-valued number, (instances of RooAbsReal), or an integer, that is,; category index (instances of RooAbsCategory). The third subclass of RooAbsArg is RooStringVar,; but it is rarely used. The ""shapes"" that a RooAbsArg can possess can e.g. be the definition; range of an observable, or how many states a category object has. In computations,; values are expected to change often, while shapes remain mostly constant; (unless e.g. a new range is set for an observable). Nodes of a computation graph are connected using instances of RooAbsProxy.; If Node B declares a member `RooTemplateProxy<TypeOfNodeA>`, Node A will be; registered as a server of values to Node B, and Node B will know that it is; a client of node A. Using functions like dependsOn(), or getObservables(); / getParameters(), the relation of `A --> B` can be queried. Using graphVizTree(),; one can create a visualisation of the expression tree. An instance of RooAbsArg can have named attributes. It also has flags; to indicate that either its value or its shape were changed (= it is dirty).; RooAbsArg provides functionality to manage client/server relations in; a computation graph (\ref clientServerInterface), and helps propagating; value/shape changes through the graph. RooAbsArg implements interfaces; for inspecting client/server relationships (\ref clientServerInterface) and; setting/clearing/querying named attributes. ### Caching of values; The values of nodes in the computation graph are cached in RooFit. If; a value is used in two nodes of a graph, it doesn't need to be recomputed. If; a node acquires a new value, it notifies its consumers (""clients"") that; their cached values are dirty. See the functions in \ref optimisationInterface; for details.; A node uses its isValueDirty() and is",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx:2030,depend,dependsOn,2030,roofit/roofitcore/src/RooAbsArg.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsArg.cxx,1,['depend'],['dependsOn']
Integrability,".; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file; ///; /// This file defines the Pass Instrumentation classes that provide; /// instrumentation points into the pass execution by PassManager.; ///; /// There are two main classes:; /// - PassInstrumentation provides a set of instrumentation points for; /// pass managers to call on.; ///; /// - PassInstrumentationCallbacks registers callbacks and provides access; /// to them for PassInstrumentation.; ///; /// PassInstrumentation object is being used as a result of; /// PassInstrumentationAnalysis (so it is intended to be easily copyable).; ///; /// Intended scheme of use for Pass Instrumentation is as follows:; /// - register instrumentation callbacks in PassInstrumentationCallbacks; /// instance. PassBuilder provides helper for that.; ///; /// - register PassInstrumentationAnalysis with all the PassManagers.; /// PassBuilder handles that automatically when registering analyses.; ///; /// - Pass Manager requests PassInstrumentationAnalysis from analysis manager; /// and gets PassInstrumentation as its result.; ///; /// - Pass Manager invokes PassInstrumentation entry points appropriately,; /// passing StringRef identification (""name"") of the pass currently being; /// executed and IRUnit it works on. There can be different schemes of; /// providing names in future, currently it is just a name() of the pass.; ///; /// - PassInstrumentation wraps address of IRUnit into llvm::Any and passes; /// control to all the registered callbacks. Note that we specifically wrap; /// 'const IRUnitT*' so as to avoid any accidental changes to IR in; /// instrumenting callbacks.; ///; /// - Some instrumentation points (BeforePass) allow to control execution; /// of a pass. For those callbacks returning false means pass will not be; /// executed.; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassInstrumentation.h:1739,wrap,wraps,1739,interpreter/llvm-project/llvm/include/llvm/IR/PassInstrumentation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/PassInstrumentation.h,2,['wrap'],"['wrap', 'wraps']"
Integrability,".e., by not integrating over all states of this category.; /// The slice is positioned at the given label value. Multiple Slice() commands can be given to specify slices; /// in multiple observables, e.g.; /// ```{.cpp}; /// pdf.plotOn(frame, Slice(tagCategory, ""2tag""), Slice(jetCategory, ""3jet""));; /// ```; /// <tr><td> `Project(const RooArgSet& set)` <td> Override default projection behaviour by projecting; /// over observables given in set, completely ignoring the default projection behavior. Advanced use only.; /// <tr><td> `ProjWData(const RooAbsData& d)` <td> Override default projection _technique_ (integration). For observables; /// present in given dataset projection of PDF is achieved by constructing an average over all observable; /// values in given set. Consult RooFit plotting tutorial for further explanation of meaning & use of this technique; /// <tr><td> `ProjWData(const RooArgSet& s, const RooAbsData& d)` <td> As above but only consider subset 's' of; /// observables in dataset 'd' for projection through data averaging; /// <tr><td> `ProjectionRange(const char* rn)` <td> When projecting the PDF onto the plot axis, it is usually integrated; /// over the full range of the invisible variables. The ProjectionRange overrides this.; /// This is useful if the PDF was fitted in a limited range in y, but it is now projected onto x. If; /// `ProjectionRange(""<name of fit range>"")` is passed, the projection is normalised correctly.; ///; /// <tr><th> Type of argument <th> Plotting control; /// <tr><td> `LineStyle(Int_t style)` <td> Select line style by ROOT line style code, default is solid; /// <tr><td> `LineColor(Int_t color)` <td> Select line color by ROOT color code, default is blue; /// <tr><td> `LineWidth(Int_t width)` <td> Select line with in pixels, default is 3; /// <tr><td> `FillStyle(Int_t style)` <td> Select fill style, default is not filled. If a filled style is selected,; /// also use VLines() to add vertical downward lines at end of curve to ensu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:5211,integrat,integrated,5211,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['integrat'],['integrated']
Integrability,".h>, which is defined by the ACLE standard; // and provides a set of types and functions for (more or less) direct access; // to the MVE instruction set, including the scalar shifts as well as the; // vector instructions.; //; // MVE's standard intrinsic functions are unusual in that they have a system of; // polymorphism. For example, the function vaddq() can behave like vaddq_u16(),; // vaddq_f32(), vaddq_s8(), etc., depending on the types of the vector; // arguments you give it.; //; // This constrains the implementation strategies. The usual approach to making; // the user-facing functions polymorphic would be to either use; // __attribute__((overloadable)) to make a set of vaddq() functions that are; // all inline wrappers on the underlying clang builtins, or to define a single; // vaddq() macro which expands to an instance of _Generic.; //; // The inline-wrappers approach would work fine for most intrinsics, except for; // the ones that take an argument required to be a compile-time constant,; // because if you wrap an inline function around a call to a builtin, the; // constant nature of the argument is not passed through.; //; // The _Generic approach can be made to work with enough effort, but it takes a; // lot of machinery, because of the design feature of _Generic that even the; // untaken branches are required to pass all front-end validity checks such as; // type-correctness. You can work around that by nesting further _Generics all; // over the place to coerce things to the right type in untaken branches, but; // what you get out is complicated, hard to guarantee its correctness, and; // worst of all, gives _completely unreadable_ error messages if the user gets; // the types wrong for an intrinsic call.; //; // Therefore, my strategy is to introduce a new __attribute__ that allows a; // function to be mapped to a clang builtin even though it doesn't have the; // same name, and then declare all the user-facing MVE function names with that; // attribut",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:1368,wrap,wrappers,1368,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,2,['wrap'],"['wrap', 'wrappers']"
Integrability,"/ ); //; // What you do inside of that function is up to you, but it will usually; // involve generating C++ code to the provided raw_ostream.; //; // The RecordKeeper is just a top-level container for an in-memory; // representation of the data encoded in the TableGen file. What a TableGen; // backend does is walk around that in-memory representation and generate; // stuff based on the information it contains.; //; // The in-memory representation is a node-graph (think of it like JSON but; // with a richer ontology of types), where the nodes are subclasses of; // Record. The methods `getClass`, `getDef` are the basic interface to; // access the node-graph. RecordKeeper also provides a handy method; // `getAllDerivedDefinitions`. Consult ""include/llvm/TableGen/Record.h"" for; // the exact interfaces provided by Record's and RecordKeeper.; //; // A common pattern for TableGen backends is for the EmitFoo function to; // instantiate a class which holds some context for the generation process,; // and then have most of the work happen in that class's methods. This; // pattern partly has historical roots in the previous TableGen backend API; // that involved a class and an invocation like `FooEmitter(RK).run(OS)`.; //; // Remember to wrap private things in an anonymous namespace. For most; // backends, this means that the EmitFoo function is the only thing not in; // the anonymous namespace.; // FIXME: Reorganize TableGen so that build dependencies can be more; // accurately expressed. Currently, touching any of the emitters (or; // anything that they transitively depend on) causes everything dependent; // on TableGen to be rebuilt (this includes all the targets!). Perhaps have; // a standalone TableGen binary and have the backends be loadable modules; // of some sort; then the dependency could be expressed as being on the; // module, and all the modules would have a common dependency on the; // TableGen binary with as few dependencies as possible on the rest of; // LLVM.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/TableGenBackends.h:1378,wrap,wrap,1378,interpreter/llvm-project/llvm/utils/TableGen/TableGenBackends.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/TableGenBackends.h,7,"['depend', 'wrap']","['depend', 'dependencies', 'dependency', 'dependent', 'wrap']"
Integrability,"/ was known to clang already.; //; // The declarations use __attribute__(__clang_arm_builtin_alias),; // so that each function declared will be recognized as the; // appropriate MVE builtin in spite of its user-facing name.; //; // (That's better than making them all wrapper functions,; // partly because it avoids any compiler error message citing; // the wrapper function definition instead of the user's code,; // and mostly because some MVE intrinsics have arguments; // required to be compile-time constants, and that property; // can't be propagated through a wrapper function. It can be; // propagated through a macro, but macros can't be overloaded; // on argument types very easily - you have to use _Generic,; // which makes error messages very confusing when the user; // gets it wrong.); //; // Finally, the polymorphic versions of the intrinsics are; // also defined with __attribute__(overloadable), so that when; // the same name is defined with several type signatures, the; // right thing happens. Each one of the overloaded; // declarations is given a different builtin id, which; // has exactly the effect we want: first clang resolves the; // overload to the right function, then it knows which builtin; // it's referring to, and then the Sema checking for that; // builtin can check further things like the constant; // arguments.; //; // One more subtlety is the newline just before the return; // type name. That's a cosmetic tweak to make the error; // messages legible if the user gets the types wrong in a call; // to a polymorphic function: this way, clang will print just; // the _final_ line of each declaration in the header, to show; // the type signatures that would have been legal. So all the; // confusing machinery with __attribute__ is left out of the; // error message, and the user sees something that's more or; // less self-documenting: ""here's a list of actually readable; // type signatures for vfooq(), and here's why each one didn't; // match your call"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:1906,message,messages,1906,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,2,['message'],"['message', 'messages']"
Integrability,"/* !__GNUC__ */; /* Wrap the gcc __PRETTY_FUNCTION__ and __FUNCTION__ variables with; * macros, so we can refer to them as strings unconditionally.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmacros.h:20,Wrap,Wrap,20,graf2d/win32gdk/gdk/src/glib/gmacros.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmacros.h,1,['Wrap'],['Wrap']
Integrability,"/* $OpenBSD: strlcat.c,v 1.11 2003/06/17 21:56:24 millert Exp $ */; /*; * Copyright (c) 1998 Todd C. Miller <Todd.Miller@courtesan.com>; *; * Permission to use, copy, modify, and distribute this software for any; * purpose with or without fee is hereby granted, provided that the above; * copyright notice and this permission notice appear in all copies.; *; * THE SOFTWARE IS PROVIDED ""AS IS"" AND THE AUTHOR DISCLAIMS ALL WARRANTIES; * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF; * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR; * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES; * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN; * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF; * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/strlcat.c:737,CONTRACT,CONTRACT,737,core/clib/src/strlcat.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/strlcat.c,1,['CONTRACT'],['CONTRACT']
Integrability,"/* $OpenBSD: strlcpy.c,v 1.8 2003/06/17 21:56:24 millert Exp $ */; /*; * Copyright (c) 1998 Todd C. Miller <Todd.Miller@courtesan.com>; *; * Permission to use, copy, modify, and distribute this software for any; * purpose with or without fee is hereby granted, provided that the above; * copyright notice and this permission notice appear in all copies.; *; * THE SOFTWARE IS PROVIDED ""AS IS"" AND THE AUTHOR DISCLAIMS ALL WARRANTIES; * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF; * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR; * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES; * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN; * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF; * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/strlcpy.c:736,CONTRACT,CONTRACT,736,core/clib/src/strlcpy.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/strlcpy.c,1,['CONTRACT'],['CONTRACT']
Integrability,"/* $TOG: imakemdep.h /main/101 1997/06/06 09:13:20 bill $ */; /*. Copyright (c) 1993, 1994 X Consortium. Permission is hereby granted, free of charge, to any person obtaining a copy; of this software and associated documentation files (the ""Software""), to deal; in the Software without restriction, including without limitation the rights; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; copies of the Software, and to permit persons to whom the Software is; furnished to do so, subject to the following conditions:. The above copyright notice and this permission notice shall be included in; all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of the X Consortium shall not be; used in advertising or otherwise to promote the sale, use or other dealings; in this Software without prior written authorization from the X Consortium. */; /* $XFree86: xc/config/imake/imakemdep.h,v 3.24.2.3 1997/07/27 02:41:05 dawes Exp $ */; /*; * This file contains machine-dependent constants for the imake utility.; * When porting imake, read each of the steps below and add in any necessary; * definitions. In general you should *not* edit ccimake.c or imake.c!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/imakemdep.h:990,CONTRACT,CONTRACT,990,misc/rmkdepend/imakemdep.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/imakemdep.h,2,"['CONTRACT', 'depend']","['CONTRACT', 'dependent']"
Integrability,"/* $XConsortium: cppsetup.c /main/17 1996/09/28 16:15:03 rws $ */; /*. Copyright (c) 1993, 1994 X Consortium. Permission is hereby granted, free of charge, to any person obtaining a copy; of this software and associated documentation files (the ""Software""), to deal; in the Software without restriction, including without limitation the rights; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; copies of the Software, and to permit persons to whom the Software is; furnished to do so, subject to the following conditions:. The above copyright notice and this permission notice shall be included in; all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of the X Consortium shall not be; used in advertising or otherwise to promote the sale, use or other dealings; in this Software without prior written authorization from the X Consortium. */; /* $XFree86: xc/config/makedepend/cppsetup.c,v 3.2 1996/12/30 13:57:53 dawes Exp $ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/cppsetup.c:995,CONTRACT,CONTRACT,995,misc/rmkdepend/cppsetup.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/cppsetup.c,1,['CONTRACT'],['CONTRACT']
Integrability,"/* $XConsortium: def.h /main/30 1996/12/04 10:11:12 swick $ */; /* $XFree86: xc/config/makedepend/def.h,v 3.3 1997/01/12 10:38:17 dawes Exp $ */; /*. Copyright (c) 1993, 1994 X Consortium. Permission is hereby granted, free of charge, to any person obtaining a copy; of this software and associated documentation files (the ""Software""), to deal; in the Software without restriction, including without limitation the rights; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; copies of the Software, and to permit persons to whom the Software is; furnished to do so, subject to the following conditions:. The above copyright notice and this permission notice shall be included in; all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of the X Consortium shall not be; used in advertising or otherwise to promote the sale, use or other dealings; in this Software without prior written authorization from the X Consortium. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/def.h:1074,CONTRACT,CONTRACT,1074,misc/rmkdepend/def.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/def.h,1,['CONTRACT'],['CONTRACT']
Integrability,"/* $XConsortium: main.c /main/84 1996/12/04 10:11:23 swick $ */; /* $XFree86: xc/config/makedepend/main.c,v 3.11.2.1 1997/05/11 05:04:07 dawes Exp $ */; /*. Copyright (c) 1993, 1994 X Consortium. Permission is hereby granted, free of charge, to any person obtaining a copy; of this software and associated documentation files (the ""Software""), to deal; in the Software without restriction, including without limitation the rights; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; copies of the Software, and to permit persons to whom the Software is; furnished to do so, subject to the following conditions:. The above copyright notice and this permission notice shall be included in; all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of the X Consortium shall not be; used in advertising or otherwise to promote the sale, use or other dealings; in this Software without prior written authorization from the X Consortium. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/main.c:1081,CONTRACT,CONTRACT,1081,misc/rmkdepend/main.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/main.c,1,['CONTRACT'],['CONTRACT']
Integrability,"/* $XConsortium: parse.c /main/33 1996/12/04 10:11:28 swick $ */; /*. Copyright (c) 1993, 1994 X Consortium. Permission is hereby granted, free of charge, to any person obtaining a copy; of this software and associated documentation files (the ""Software""), to deal; in the Software without restriction, including without limitation the rights; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; copies of the Software, and to permit persons to whom the Software is; furnished to do so, subject to the following conditions:. The above copyright notice and this permission notice shall be included in; all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of the X Consortium shall not be; used in advertising or otherwise to promote the sale, use or other dealings; in this Software without prior written authorization from the X Consortium. */; /* $XFree86: xc/config/makedepend/parse.c,v 1.3 1997/01/12 10:39:45 dawes Exp $ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/parse.c:994,CONTRACT,CONTRACT,994,misc/rmkdepend/parse.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/parse.c,1,['CONTRACT'],['CONTRACT']
Integrability,"/* $XConsortium: pr.c /main/20 1996/12/04 10:11:41 swick $ */; /*. Copyright (c) 1993, 1994 X Consortium. Permission is hereby granted, free of charge, to any person obtaining a copy; of this software and associated documentation files (the ""Software""), to deal; in the Software without restriction, including without limitation the rights; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; copies of the Software, and to permit persons to whom the Software is; furnished to do so, subject to the following conditions:. The above copyright notice and this permission notice shall be included in; all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of the X Consortium shall not be; used in advertising or otherwise to promote the sale, use or other dealings; in this Software without prior written authorization from the X Consortium. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/pr.c:991,CONTRACT,CONTRACT,991,misc/rmkdepend/pr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/pr.c,1,['CONTRACT'],['CONTRACT']
Integrability,"/* $XFree86: xc/include/extensions/shape.h,v 1.3 2001/12/14 19:53:29 dawes Exp $ */; /************************************************************. Copyright 1989, 1998 The Open Group. Permission to use, copy, modify, distribute, and sell this software and its; documentation for any purpose is hereby granted without fee, provided that; the above copyright notice appear in all copies and that both that; copyright notice and this permission notice appear in supporting; documentation. The above copyright notice and this permission notice shall be included in; all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; OPEN GROUP BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of The Open Group shall not be; used in advertising or otherwise to promote the sale, use or other dealings; in this Software without prior written authorization from The Open Group. ********************************************************/; /* $Xorg: shape.h,v 1.4 2001/02/09 02:03:24 xorgcvs Exp $ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/inc/X11/extensions/shape.h:931,CONTRACT,CONTRACT,931,graf2d/x11/inc/X11/extensions/shape.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/inc/X11/extensions/shape.h,1,['CONTRACT'],['CONTRACT']
Integrability,"/* 'message' follows the X/Open approach of using @1, @2 to insert; * parameters previously supplied using the above functions. Errors in; * specifying the parameters will simply result in garbage substitutions.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:4,message,message,4,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['message'],['message']
Integrability,"/* 'value' is unsigned, ANSI-C90 requires the compiler to correctly; * convert this to a floating point value. This includes values that; * would overflow if 'value' were to be converted to 'int'.; *; * Apparently GCC, however, does an intermediate conversion to (int); * on some (ARM) but not all (x86) platforms, possibly because of; * hardware FP limitations. (E.g. if the hardware conversion always; * assumes the integer register contains a signed value.) This results; * in ANSI-C undefined behavior for large values.; *; * Other implementations on the same machine might actually be ANSI-C90; * conformant and therefore compile spurious extra code for the large; * values.; *; * We can be reasonably sure that an unsigned to float conversion; * won't be faster than an int to float one. Therefore this code; * assumes responsibility for the undefined behavior, which it knows; * can't happen because of the check above.; *; * Note the argument to this routine is an (unsigned int) because, on; * 16-bit platforms, it is assigned a value which might be out of; * range for an (int); that would result in undefined behavior in the; * caller if the *argument* ('value') were to be declared (int).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:959,rout,routine,959,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['rout'],['routine']
Integrability,"/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; * *; * Copyright (c) 2019, William C. Lenthe *; * All rights reserved. *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted provided that the following conditions are met: *; * *; * 1. Redistributions of source code must retain the above copyright notice, this *; * list of conditions and the following disclaimer. *; * *; * 2. Redistributions in binary form must reproduce the above copyright notice, *; * this list of conditions and the following disclaimer in the documentation *; * and/or other materials provided with the distribution. *; * *; * 3. Neither the name of the copyright holder nor the names of its *; * contributors may be used to endorse or promote products derived from *; * this software without specific prior written permission. *; * *; * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" *; * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE *; * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE *; * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE *; * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL *; * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR *; * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER *; * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, *; * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE *; * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. *; * *; * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/predicates.h:1521,CONTRACT,CONTRACT,1521,math/mathcore/src/CDT/predicates.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/predicates.h,1,['CONTRACT'],['CONTRACT']
Integrability,/* *** CGObjCMac Public Interface *** */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:24,Interface,Interface,24,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['Interface'],['Interface']
Integrability,/* *** Dependencies *** */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/huf.h:7,Depend,Dependencies,7,builtins/zstd/common/huf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/huf.h,2,['Depend'],['Dependencies']
Integrability,/* *** Dependency *** */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:7,Depend,Dependency,7,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['Depend'],['Dependency']
Integrability,/* *** Private Interface *** */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:15,Interface,Interface,15,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['Interface'],['Interface']
Integrability,"/* *** library symbols visibility *** */; /* Note : when linking with -fvisibility=hidden on gcc, or by default on Visual,; * HUF symbols remain ""private"" (internal symbols for library only).; * Set macro FSE_DLL_EXPORT to 1 if you want HUF symbols visible on DLL interface */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/huf.h:264,interface,interface,264,builtins/zstd/common/huf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/huf.h,1,['interface'],['interface']
Integrability,/* ************************************************************************ *; *; * Header file for the `xvertext 5.0' routines.; *; * Copyright (c) 1993 Alan Richardson (mppa3@uk.ac.sussex.syma); *; * ************************************************************************ */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/Rotated.cxx:119,rout,routines,119,graf2d/x11/src/Rotated.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/src/Rotated.cxx,1,['rout'],['routines']
Integrability,"/* ******************************************************************; * Common functions of New Generation Entropy library; * Copyright (c) 2016-2020, Yann Collet, Facebook, Inc.; *; * You can contact the author at :; * - FSE+HUF source repository : https://github.com/Cyan4973/FiniteStateEntropy; * - Public forum : https://groups.google.com/forum/#!forum/lz4c; *; * This source code is licensed under both the BSD-style license (found in the; * LICENSE file in the root directory of this source tree) and the GPLv2 (found; * in the COPYING file in the root directory of this source tree).; * You may select, at your option, one of the above-listed licenses.; ****************************************************************** */; /* *************************************; * Dependencies; ***************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/entropy_common.c:777,Depend,Dependencies,777,builtins/zstd/common/entropy_common.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/entropy_common.c,1,['Depend'],['Dependencies']
Integrability,"/* ******************************************************************; * hist : Histogram functions; * part of Finite State Entropy project; * Copyright (c) 2013-2020, Yann Collet, Facebook, Inc.; *; * You can contact the author at :; * - FSE source repository : https://github.com/Cyan4973/FiniteStateEntropy; * - Public forum : https://groups.google.com/forum/#!forum/lz4c; *; * This source code is licensed under both the BSD-style license (found in the; * LICENSE file in the root directory of this source tree) and the GPLv2 (found; * in the COPYING file in the root directory of this source tree).; * You may select, at your option, one of the above-listed licenses.; ****************************************************************** */; /* --- dependencies --- */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/hist.c:752,depend,dependencies,752,builtins/zstd/compress/hist.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/hist.c,2,['depend'],['dependencies']
Integrability,"/* ******************************************************************; * huff0 huffman decoder,; * part of Finite State Entropy library; * Copyright (c) 2013-2020, Yann Collet, Facebook, Inc.; *; * You can contact the author at :; * - FSE+HUF source repository : https://github.com/Cyan4973/FiniteStateEntropy; *; * This source code is licensed under both the BSD-style license (found in the; * LICENSE file in the root directory of this source tree) and the GPLv2 (found; * in the COPYING file in the root directory of this source tree).; * You may select, at your option, one of the above-listed licenses.; ****************************************************************** */; /* **************************************************************; * Dependencies; ****************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/huf_decompress.c:749,Depend,Dependencies,749,builtins/zstd/decompress/huf_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/huf_decompress.c,1,['Depend'],['Dependencies']
Integrability,/* ******************************************************************; Supporting functions: bundled here to avoid depending on a library; ****************************************************************** */; // Dean Edwards/Matthias Miller/John Resig; /* for Mozilla/Opera9 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build/share/scan-build/sorttable.js:115,depend,depending,115,interpreter/llvm-project/clang/tools/scan-build/share/scan-build/sorttable.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build/share/scan-build/sorttable.js,3,['depend'],['depending']
Integrability,/* **************************************************************; * BMI2 Variant Wrappers; ****************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/huf_decompress.c:82,Wrap,Wrappers,82,builtins/zstd/decompress/huf_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/huf_decompress.c,1,['Wrap'],['Wrappers']
Integrability,/* ****************************************; * Dependencies; ******************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/error_private.h:47,Depend,Dependencies,47,builtins/zstd/common/error_private.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/error_private.h,1,['Depend'],['Dependencies']
Integrability,/* *************************************; * Includes & Memory related functions; ***************************************/; /*!; * Modify the local functions below should you wish to use; * different memory routines for malloc() and free(); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:206,rout,routines,206,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['rout'],['routines']
Integrability,"/* *************************************; * Tuning parameters; ***************************************/; /*!; * XXH_FORCE_MEMORY_ACCESS:; * By default, access to unaligned memory is controlled by `memcpy()`, which is; * safe and portable.; *; * Unfortunately, on some target/compiler combinations, the generated assembly; * is sub-optimal.; *; * The below switch allow selection of a different access method; * in the search for improved performance.; * Method 0 (default):; * Use `memcpy()`. Safe and portable. Default.; * Method 1:; * `__attribute__((packed))` statement. It depends on compiler extensions; * and is therefore not portable.; * This method is safe if your compiler supports it, and *generally* as; * fast or faster than `memcpy`.; * Method 2:; * Direct access via cast. This method doesn't depend on the compiler but; * violates the C standard.; * It can generate buggy code on targets which do not support unaligned; * memory accesses.; * But in some circumstances, it's the only known way to get the most; * performance (example: GCC + ARMv6); * Method 3:; * Byteshift. This can generate the best code on old compilers which don't; * inline small `memcpy()` calls, and it might also be faster on big-endian; * systems which lack a native byteswap instruction.; * See https://stackoverflow.com/a/32095106/646947 for details.; * Prefer these methods in priority order (0 > 1 > 2 > 3); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:577,depend,depends,577,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,2,['depend'],"['depend', 'depends']"
Integrability,/* +1 or -1 depending on direction */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:12,depend,depending,12,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['depend'],['depending']
Integrability,"/* -*- C++ -*-; * This code is derived from (original license follows):; *; * This is an OpenSSL-compatible implementation of the RSA Data Security, Inc.; * MD5 Message-Digest Algorithm (RFC 1321).; *; * Homepage:; * http://openwall.info/wiki/people/solar/software/public-domain-source-code/md5; *; * Author:; * Alexander Peslyak, better known as Solar Designer <solar at openwall.com>; *; * This software was written by Alexander Peslyak in 2001. No copyright is; * claimed, and the software is hereby placed in the public domain.; * In case this attempt to disclaim copyright and place the software in the; * public domain is deemed null and void, then the software is; * Copyright (c) 2001 Alexander Peslyak and it is hereby released to the; * general public under the following terms:; *; * Redistribution and use in source and binary forms, with or without; * modification, are permitted.; *; * There's ABSOLUTELY NO WARRANTY, express or implied.; *; * See md5.c for more information.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MD5.h:161,Message,Message-Digest,161,interpreter/llvm-project/llvm/include/llvm/Support/MD5.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MD5.h,1,['Message'],['Message-Digest']
Integrability,"/* -*- coding: utf-8 -*-; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; */; /**; * This file implements a shared library. This library can be pre-loaded by; * the dynamic linker of the Operating System (OS). It implements a few function; * related to process creation. By pre-load this library the executed process; * uses these functions instead of those from the standard library.; *; * The idea here is to inject a logic before call the real methods. The logic is; * to dump the call into a file. To call the real method this library is doing; * the job of the dynamic linker.; *; * The only input for the log writing is about the destination directory.; * This is passed as environment variable.; */; // NOLINTNEXTLINE",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libear/ear.c:567,inject,inject,567,interpreter/llvm-project/clang/tools/scan-build-py/lib/libear/ear.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libear/ear.c,1,['inject'],['inject']
Integrability,/* --- Dependency --- */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:7,Depend,Dependency,7,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['Depend'],['Dependency']
Integrability,/* --- Messages that generate ---- */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSStepButton.h:7,Message,Messages,7,test/periodic/XSStepButton.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSStepButton.h,1,['Message'],['Messages']
Integrability,"/* --------------------------------------------------------------------- */; /* The interface converts a whole buffer to avoid function-call overhead.; * Constants have been gathered. Loops & conditionals have been removed as; * much as possible for efficiency, in favor of drop-through switches.; * (See ""Note A"" at the bottom of the file for equivalent code.); * If your compiler supports it, the ""isLegalUTF8"" call can be turned; * into an inline function.; */; /* --------------------------------------------------------------------- */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp:84,interface,interface,84,interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp,1,['interface'],['interface']
Integrability,"/* --------------------------------------------------------------------- */; /*; * Utility routine to tell whether a sequence of bytes is legal UTF-8.; * This must be called with the length pre-determined by the first byte.; * If not calling this from ConvertUTF8to*, then the length can be set by:; * length = trailingBytesForUTF8[*source]+1;; * and the sequence is illegal right away if there aren't that many bytes; * available.; * If presented with a length > 4, this returns false. The Unicode; * definition of UTF-8 goes up to 4-byte sequences.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp:91,rout,routine,91,interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp,1,['rout'],['routine']
Integrability,/* ... if not add an error message */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:27,message,message,27,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['message']
Integrability,"/* 0 or 1 */; // create function wrapper for minimizer (a IMultiGenFunction type)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx:33,wrap,wrapper,33,tutorials/fit/fitEllipseTGraphRMM.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx,1,['wrap'],['wrapper']
Integrability,/* 180 degree rotation is equivalent to; * 1. Vertical mirroring;; * 2. Horizontal mirroring.; * These two steps are merged into a single processing routine.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:149,rout,routine,149,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,1,['rout'],['routine']
Integrability,/* 270 degree rotation is equivalent to; * 1. Horizontal mirroring;; * 2. Transposing the image.; * These two steps are merged into a single processing routine.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:152,rout,routine,152,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,1,['rout'],['routine']
Integrability,"/* 32-bit */; /*; * 32-bit optimized version, which is more readable.; *; * On 32-bit, it removes an ADC and delays a dependency between the two; * halves of m128.high64, but it generates an extra mask on 64-bit.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:118,depend,dependency,118,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['depend'],['dependency']
Integrability,"/* 7 SYNCHRONIZATION, BARRIER AND HINT INTRINSICS */; /* 7.3 Memory barriers */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/arm_acle.h:5,SYNCHRONIZ,SYNCHRONIZATION,5,interpreter/llvm-project/clang/lib/Headers/arm_acle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/arm_acle.h,1,['SYNCHRONIZ'],['SYNCHRONIZATION']
Integrability,/* 90 degree rotation is equivalent to; * 1. Transposing the image;; * 2. Horizontal mirroring.; * These two steps are merged into a single processing routine.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:151,rout,routine,151,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,1,['rout'],['routine']
Integrability,/* === XXH3 128-bit streaming === */; /*; * All the functions are actually the same as for 64-bit streaming variant.; * The only difference is the finalizatiom routine.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:160,rout,routine,160,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['rout'],['routine']
Integrability,"/* === experimental parameters === */; /* these parameters can be used with ZSTD_setParameter(); * they are not guaranteed to remain supported in the future */; /* Enables rsyncable mode,; * which makes compressed files more rsync friendly; * by adding periodic synchronization points to the compressed data.; * The target average block size is ZSTD_c_jobSize / 2.; * It's possible to modify the job size to increase or decrease; * the granularity of the synchronization point.; * Once the jobSize is smaller than the window size,; * it will result in compression ratio degradation.; * NOTE 1: rsyncable mode only works when multithreading is enabled.; * NOTE 2: rsyncable performs poorly in combination with long range mode,; * since it will decrease the effectiveness of synchronization points,; * though mileage may vary.; * NOTE 3: Rsyncable mode limits maximum compression speed to ~400 MB/s.; * If the selected compression level is already running significantly slower,; * the overall speed won't be significantly impacted.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:262,synchroniz,synchronization,262,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,3,['synchroniz'],['synchronization']
Integrability,/* ===== Seq Pool Wrapper ====== */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:18,Wrap,Wrapper,18,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['Wrap'],['Wrapper']
Integrability,/* ====== Dependencies ====== */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:10,Depend,Dependencies,10,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['Depend'],['Dependencies']
Integrability,/* ====== Dependency ======*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:10,Depend,Dependency,10,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['Depend'],['Dependency']
Integrability,"/* ==========================================; * Short keys; * ==========================================; * One of the shortcomings of XXH32 and XXH64 was that their performance was; * sub-optimal on short lengths. It used an iterative algorithm which strongly; * favored lengths that were a multiple of 4 or 8.; *; * Instead of iterating over individual inputs, we use a set of single shot; * functions which piece together a range of lengths and operate in constant time.; *; * Additionally, the number of multiplies has been significantly reduced. This; * reduces latency, especially when emulating 64-bit multiplies on 32-bit.; *; * Depending on the platform, this may or may not be faster than XXH32, but it; * is almost guaranteed to be faster than XXH64.; */; /*; * At very short lengths, there isn't enough input to fully hide secrets, or use; * the entire secret.; *; * There is also only a limited amount of mixing we can do before significantly; * impacting performance.; *; * Therefore, we use different sections of the secret and always mix two secret; * samples with an XOR. This should have no effect on performance on the; * seedless or withSeed variants because everything _should_ be constant folded; * by modern compilers.; *; * The XOR mixing hides individual parts of the secret and increases entropy.; *; * This adds an extra layer of strength for custom secrets.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:638,Depend,Depending,638,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['Depend'],['Depending']
Integrability,"/* ==========================================; * XXH3 128 bits (a.k.a XXH128); * ==========================================; * XXH3's 128-bit variant has better mixing and strength than the 64-bit variant,; * even without counting the significantly larger output size.; *; * For example, extra steps are taken to avoid the seed-dependent collisions; * in 17-240 byte inputs (See XXH3_mix16B and XXH128_mix32B).; *; * This strength naturally comes at the cost of some speed, especially on short; * lengths. Note that longer hashes are about as fast as the 64-bit version; * due to it using only a slight modification of the 64-bit loop.; *; * XXH128 is also more oriented towards 64-bit machines. It is still extremely; * fast for a _128-bit_ hash on 32-bit (it usually clears XXH64).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:328,depend,dependent,328,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['depend'],['dependent']
Integrability,"/* ========================================================; * === Private interface, for use by ZSTD_compress.c ===; * === Not exposed in libzstd. Never invoke directly ===; * ======================================================== */; /* === Memory management === */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.h:75,interface,interface,75,builtins/zstd/compress/zstdmt_compress.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.h,1,['interface'],['interface']
Integrability,"/* =========================================================================; * For the default windowBits of 15 and memLevel of 8, this function returns; * a close to exact, as well as small, upper bound on the compressed size.; * They are coded as constants here for a reason--if the #define's are; * changed, then this function needs to be changed as well. The return; * value for 15 and 8 only works for those exact settings.; *; * For any setting other than those defaults for windowBits and memLevel,; * the value returned is a conservative worst case for the maximum expansion; * resulting from using fixed blocks instead of stored blocks, which deflate; * can emit on compressed data for some combinations of the parameters.; *; * This function could be more sophisticated to provide closer upper bounds; * for every combination of windowBits and memLevel, as well as wrap.; * But even the conservative upper bound of about 14% expansion does not; * seem onerous for output buffer allocation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/deflate.c:876,wrap,wrap,876,graf2d/asimage/src/libAfterImage/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/deflate.c,1,['wrap'],['wrap']
Integrability,"/* ===========================================================================; * Initialize the ""longest match"" routines for a new file; *; * IN assertion: window_size is > 0 if the input file is already read or; * mmap'ed in the window[] array, 0 otherwise. In the first case,; * window_size is sufficient to contain the whole input file plus; * MIN_LOOKAHEAD bytes (to avoid referencing memory beyond the end; * of window[] when looking for matches towards the end).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c:113,rout,routines,113,core/zip/src/ZDeflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c,1,['rout'],['routines']
Integrability,"/* ===========================================================================; * Initialize the ""longest match"" routines for a new zlib stream; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:113,rout,routines,113,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,3,['rout'],['routines']
Integrability,/* ===========================================================================; * Initialize the bit string routines.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.c:108,rout,routines,108,core/zip/src/Bits.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.c,2,['rout'],['routines']
Integrability,/* ===========================================================================; * Local (static) routines in this file.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c:97,rout,routines,97,builtins/zlib/trees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c,3,['rout'],['routines']
Integrability,"/* ===========================================================================; * Local data used by the ""bit string"" routines.; */; /* Number of bits used within bi_buf. (bi_buf might be implemented on; * more than 16 bits on some systems.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.c:118,rout,routines,118,core/zip/src/Bits.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.c,1,['rout'],['routines']
Integrability,"/* ===========================================================================; Returns the error message for the last error which occurred on the; given compressed file. errnum is set to zlib error number. If an; error occurred in the file system and not in the compression library,; errnum is set to Z_ERRNO and the application may consult errno; to get the exact error code.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:98,message,message,98,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,1,['message'],['message']
Integrability,"/* @(#)root/x3d:$Id$ */; /* Author: Mark Spychalla*/; /*; Copyright 1992 Mark Spychalla. Permission to use, copy, modify, distribute, and sell this software and; its documentation for any purpose is hereby granted without fee,; provided that the above copyright notice appear in all copies and that; both that copyright notice and this permission notice appear in; supporting documentation, and that the name of Mark Spychalla not be used; in advertising or publicity pertaining to distribution of the software; without specific, written prior permission. Mark Spychalla makes no; representations about the suitability of this software for any purpose.; It is provided ""as is"" without express or implied warranty. Mark Spychalla disclaims all warranties with regard to this software,; including all implied warranties of merchantability and fitness, in no; event shall Mark Spychalla be liable for any special, indirect or; consequential damages or any damages whatsoever resulting from loss of use,; data or profits, whether in an action of contract, negligence or other; tortious action, arising out of or in connection with the use or performance; of this software.; */; /*. NOTE ON X3D CODING STYLE:. Don't think I usually code in the gerberized fashion that X3D demonstrates.; X3D was written for speed at any cost. My goal was to write the fastest 3D; object viewer that I could, period. Regular programs ought to be written; with different goals in mind such as:. 1) A program has excellent documentation that ANYONE can read.; 2) A program when released has no strange ""features"" or bugs.; 3) A program is robust and handles ALL extreme and unusual cases.; 4) A program is written in phases and modules with hard tests for each one.; 5) A program is written for any user who doesn't need special knowledge; to use the program.; 6) A program has well defined user requirements and functional specifications.; 7) A program is written with regard to future expansion and integreation; with other ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:1042,contract,contract,1042,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,1,['contract'],['contract']
Integrability,"/* A bunch of private, handy routines. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp:29,rout,routines,29,interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,1,['rout'],['routines']
Integrability,"/* A function which may be called *only* within png_process_data to stop the; * processing of any more data. The function returns the number of bytes; * remaining, excluding any that libpng has cached internally. A subsequent; * call to png_process_data must supply these bytes again. If the argument; * 'save' is set to true the routine will first save all the pending data and; * will always return 0.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:330,rout,routine,330,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['rout'],['routine']
Integrability,/* A local convenience routine. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:23,rout,routine,23,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['rout'],['routine']
Integrability,/* A websocket protocoll has the following HTTP headers:; 	 *; 	 * Connection: Upgrade; 	 * Upgrade: Websocket; 	 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:15,protocol,protocoll,15,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['protocol'],['protocoll']
Integrability,/* A wrapper for POWER9's vec_revb. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:5,wrap,wrapper,5,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['wrap'],['wrapper']
Integrability,/* AC entropy table selector (0..3) */; /* Remaining fields should be treated as private by applications. */; /* These values are computed during compression or decompression startup: */; /* Component's size in DCT blocks.; * Any dummy blocks added to complete an MCU are not counted; therefore; * these values do not depend on whether a scan is interleaved or not.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:318,depend,depend,318,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['depend'],['depend']
Integrability,"/* ARM NEON optimizations are being controlled by the compiler settings,; * typically the target FPU. If the FPU has been set to NEON (-mfpu=neon; * with GCC) then the compiler will define __ARM_NEON__ and we can rely; * unconditionally on NEON instructions not crashing, otherwise we must; * disable use of NEON instructions.; *; * NOTE: at present these optimizations depend on 'ALIGNED_MEMORY', so they; * can only be turned on automatically if that is supported too. If; * PNG_ARM_NEON_OPT is set in CPPFLAGS (to >0) then arm/arm_init.c will fail; * to compile with an appropriate #error if ALIGNED_MEMORY has been turned; * off.; *; * Note that gcc-4.9 defines __ARM_NEON instead of the deprecated; * __ARM_NEON__, so we check both variants.; *; * To disable ARM_NEON optimizations entirely, and skip compiling the; * associated assembler code, pass --enable-arm-neon=no to configure; * or put -DPNG_ARM_NEON_OPT=0 in CPPFLAGS.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:370,depend,depend,370,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['depend'],['depend']
Integrability,"/* ASCII to FP interfaces, currently only implemented if sCAL; * support is required.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:15,interface,interfaces,15,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['interface'],['interfaces']
Integrability,"/* According to the HTTP standard; 	 * http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html#sec5.1.2; 	 * URI can be an asterisk (*) or should start with slash (relative uri),; 	 * or it should start with the protocol (absolute uri). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:57,Protocol,Protocols,57,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,"['Protocol', 'protocol']","['Protocols', 'protocol']"
Integrability,/* Added in 1.5.6: it should not be possible to enter this routine until at; * least one row has been read from the PNG data and transformed.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:59,rout,routine,59,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['rout'],['routine']
Integrability,/* Advance pointers with wraparound as necessary. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c:25,wrap,wraparound,25,graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,1,['wrap'],['wraparound']
Integrability,"/* Allocate workspace if needed.; * Note that we allocate arrays padded out to the next iMCU boundary,; * so that transform routines need not worry about missing edge blocks.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:124,rout,routines,124,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,1,['rout'],['routines']
Integrability,"/* Allow machine dependent optimization for post-increment or pre-increment.; Based on testing to date,; Pre-increment preferred for:; - PowerPC G3 (Adler); - MIPS R5000 (Randers-Pehrson); Post-increment preferred for:; - none; No measurable difference:; - Pentium III (Anderson); - M68060 (Nikl); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inffast.c:17,depend,dependent,17,builtins/zlib/inffast.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inffast.c,2,['depend'],['dependent']
Integrability,/* Always display the message */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:22,message,message,22,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,1,['message'],['message']
Integrability,"/* Always display the message. */; /* We could postpone this until after returning, if we chose. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c:22,message,message,22,graf2d/asimage/src/libAfterImage/import.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c,1,['message'],['message']
Integrability,/* Amount of resources used.; The units will depend on the resource kind. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:45,depend,depend,45,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['depend'],['depend']
Integrability,/* An l-value of this type has to be passed to the APIs below to cache the; * values of the parameters to a formatted warning message.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:126,message,message,126,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['message'],['message']
Integrability,"/* Analytical integrals need testing. Int_t RooHypatia2::getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char*) const; {; if (matchArgs(allVars, analVars, _x); && _beta == 0. && _beta.arg().isConstant(); && _zeta == 0. && _zeta.arg().isConstant(); && _lambda.max() < 0.) return 1;; return 0 ;; }. double RooHypatia2::analyticalIntegral(Int_t code, const char* rangeName) const; {; if (_beta != 0. || _zeta != 0. || _lambda >= 0) {; auto& logstream = coutF(Integration) << ""When the PDF "" << GetName(); << "" was constructed, beta,zeta were 0, lambda<0 and all three were constant.\n""; << ""This allowed for analytic integration, but now, numeric integration would be required.\n""; << ""These parameters must either be kept constant, or be floating from the beginning. ""; << "" Terminating fit ...""; << std::endl;; RooArgSet vars;; vars.add(_beta.arg());; vars.add(_zeta.arg());; vars.add(_lambda.arg());; vars.printStream(logstream, vars.defaultPrintContents(nullptr), RooPrintable::kVerbose);; throw std::runtime_error(""RooHypatia2 cannot be integrated analytically since parameters changed."");; }. // The formulae to follow still use beta and zeta to facilitate comparisons with the; // evaluate function. Since beta and zeta are zero, all relevant terms will be disabled; // by defining these two constexpr:; constexpr double beta = 0.;; constexpr double cons1 = 1.;. if (code != 1) {; throw std::logic_error(""Trying to compute analytic integral with unknown configuration."");; }. const double asigma = _a * _sigma;; const double a2sigma = _a2 * _sigma;; const double d0 = _x.min(rangeName) - _mu;; const double d1 = _x.max(rangeName) - _mu;. double delta;; if (_lambda <= -1.0) {; delta = _sigma * sqrt(-2. + -2.*_lambda);; }; else {; delta = _sigma;; }; const double deltaSq = delta*delta;. if ((d0 > -asigma) && (d1 < a2sigma)) {; return stIntegral(d1, delta, _lambda) - stIntegral(d0, delta, _lambda);; }. if (d0 > a2sigma) {; const double phi = 1. + a2sigma*a2sigma/deltaSq;; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooHypatia2.cxx:477,Integrat,Integration,477,roofit/roofitmore/src/RooHypatia2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooHypatia2.cxx,3,"['Integrat', 'integrat']","['Integration', 'integration']"
Integrability,"/* And simply copy these bytes. Some optimization is possible here,; * depending on the value of 'bytes_to_copy'. Special case the low; * byte counts, which we know to be frequent.; *; * Notice that these cases all 'return' rather than 'break' - this; * avoids an unnecessary test on whether to restore the last byte; * below.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:71,depend,depending,71,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['depend'],['depending']
Integrability,"/* And this is the formatted message. It may be larger than; * PNG_MAX_ERROR_TEXT, but that is only used for 'chunk' errors and these; * are not (currently) formatted.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:29,message,message,29,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['message'],['message']
Integrability,"/* Any definitions using GPollFD or GPollFunc are primarily; * for Unix and not guaranteed to be the compatible on all; * operating systems on which GLib runs. Right now, the; * GLib does use these functions on Win32 as well, but interprets; * them in a fairly different way than on Unix. If you use; * these definitions, you are should be prepared to recode; * for different operating systems.; *; *; * On Win32, the fd in a GPollFD should be Win32 HANDLE (*not* a file; * descriptor as provided by the C runtime) that can be used by; * MsgWaitForMultipleObjects. This does *not* include file handles; * from CreateFile, SOCKETs, nor pipe handles. (But you can use; * WSAEventSelect to signal events when a SOCKET is readable).; *; * On Win32, fd can also be the special value G_WIN32_MSG_HANDLE to; * indicate polling for messages. These message queue GPollFDs should; * be added with the g_main_poll_win32_msg_add function.; *; * But note that G_WIN32_MSG_HANDLE GPollFDs should not be used by GDK; * (GTK) programs, as GDK itself wants to read messages and convert them; * to GDK events.; *; * So, unless you really know what you are doing, it's best not to try; * to use the main loop polling stuff for your own needs on; * Win32. It's really only written for the GIMP's needs so; * far.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.h:824,message,messages,824,graf2d/win32gdk/gdk/src/glib/gmain.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.h,3,['message'],"['message', 'messages']"
Integrability,"/* Apollo 6.7, CRAY, old Sun, VAX/Ultrix vcc/cc and new ultrix; can't hack more than 31 arg's.; e.g. ultrix >= 4.3 gives message:; zow35> cc -c -DDECFortran cfortest.c; cfe: Fatal: Out of memory: cfortest.c; zow35>; Old __hpux had the problem, but new 'HP-UX A.09.03 A 9000/735' is fine; if using -Aa, otherwise we have a problem.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:121,message,message,121,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['message'],['message']
Integrability,/* As a side-effect this routine also returns the XYZ endpoints. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:25,rout,routine,25,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['rout'],['routine']
Integrability,/* At present if the check_gamma test fails the gamma of the colorspace is; * not updated however the colorspace is not invalidated. This; * corresponds to the case where the existing gamma comes from an sRGB; * chunk or profile. An error message has already been output.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:239,message,message,239,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['message'],['message']
Integrability,"/* At this point *message can't be '\0', even in the bad parameter case; * above where there is a lone '@' at the end of the message string.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:18,message,message,18,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,2,['message'],['message']
Integrability,"/* BUT we usually use UN for C macro to FORTRAN routines, so use LN here,*/; /* because VAX/VMS doesn't do recursive macros. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:48,rout,routines,48,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['rout'],['routines']
Integrability,"/* Because of the limit checks above we know that the new,; * expanded, size will fit in a size_t (let alone an; * png_alloc_size_t). Use png_malloc_base here to avoid an; * extra OOM message.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:184,message,message,184,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['message'],['message']
Integrability,/* Blocks until unique access is obtained to this connection. Intended for use; with websockets only.; Invoke this before mg_write or mg_printf when communicating with a; websocket if your code has server-initiated communication as well as; communication in direct response to a message.; Do not acquire this lock while holding mg_lock_context(). */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:279,message,message,279,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['message'],['message']
Integrability,/* Boolean declaring if we must flush because we found a synchronization point. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:57,synchroniz,synchronization,57,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['synchroniz'],['synchronization']
Integrability,/* BridgeCallBaseContext */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:3,Bridg,BridgeCallBaseContext,3,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,2,['Bridg'],['BridgeCallBaseContext']
Integrability,"/* Builds a module from the bitcode in the specified memory buffer, returning a; reference to the module via the OutModule parameter. Returns 0 on success.; Optionally returns a human-readable error message via OutMessage. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitReader.cpp:199,message,message,199,interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitReader.cpp,1,['message'],['message']
Integrability,/* CGI program explicitly sent an error */; /* Write the error message to the internal log */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:63,message,message,63,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['message']
Integrability,"/* CQTESTF -- ""Conditionally Quiet TEST with Fail message""; * macro that prints PASS or FAIL messages; * parms:	quiet:	if TRUE, only print FAIL messages; *		expr:	the expression to test; *		failfmt:if expr is FALSE, print this message; *			(both format and args); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/testgdk.c:50,message,message,50,graf2d/win32gdk/gdk/src/gdk/testgdk.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/testgdk.c,4,['message'],"['message', 'messages']"
Integrability,/* Calculate the CRC over a section of data. We can only pass as; * much data to this routine as the largest single buffer size. We; * also check that this data will actually be used before going to the; * trouble of calculating it.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:86,rout,routine,86,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['rout'],['routine']
Integrability,"/* Call CoCreateInstance to obtain the IShellLink interface; * pointer. This call fails if CoInitialize is not called, so it is; * assumed that CoInitialize has been called.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkdnd-win32.c:50,interface,interface,50,graf2d/win32gdk/gdk/src/gdk/win32/gdkdnd-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkdnd-win32.c,1,['interface'],['interface']
Integrability,"/* Called when civetweb is about to log a message. If callback returns; 	 non-zero, civetweb does not log anything. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:42,message,message,42,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['message'],['message']
Integrability,/* Called when civetweb is about to send HTTP error to the client.; 	 Implementing this callback allows to create custom error pages.; 	 Parameters:; 	 conn: current connection.; 	 status: HTTP error status code.; 	 errmsg: error message text.; 	 Return value:; 	 1: run civetweb error handler.; 	 0: callback already handled the error. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:230,message,message,230,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['message'],['message']
Integrability,/* Called when the libpng data must be transformed into the color-mapped; * form. There is a local row buffer in display->local and this routine must; * do the interlace handling.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:137,rout,routine,137,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['rout'],['routine']
Integrability,/* Can't end yet because the input is not fully consumed.; * We are in one of these cases:; * - mtctx->inBuff is NULL & empty: we couldn't get an input buffer so don't create a new job.; * - We filled the input buffer: flush this job but don't end the frame.; * - We hit a synchronization point: flush this job but don't end the frame.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:273,synchroniz,synchronization,273,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['synchroniz'],['synchronization']
Integrability,/* Cannot determine if socket is already closed. This should; 		 * not occur and never did in a test. Log an error message; 		 * and continue. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:115,message,message,115,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['message']
Integrability,"/* Cannot use TrackMouseEvent, as the stupid WM_MOUSELEAVE message; * doesn't tell us where the mouse has gone. Thus we cannot use it to; * generate a correct GdkNotifyType. Pity, as using TrackMouseEvent; * otherwise would make it possible to reliably generate; * GDK_LEAVE_NOTIFY events, which would help get rid of those pesky; * tooltips sometimes popping up in the wrong place.; */; /* define USE_TRACKMOUSEEVENT */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:59,message,message,59,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,1,['message'],['message']
Integrability,"/* Check for string parameter, as indicated by %s in the message text */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:57,message,message,57,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,1,['message'],['message']
Integrability,"/* Check for wraparound, which happens every 49.7 days. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gtimer.c:13,wrap,wraparound,13,graf2d/win32gdk/gdk/src/glib/gtimer.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gtimer.c,1,['wrap'],['wraparound']
Integrability,"/* Check that the tEXt or zTXt keyword is valid per PNG 1.0 specification,; * and if invalid, correct the keyword rather than discarding the entire; * chunk. The PNG 1.0 specification requires keywords 1-79 characters in; * length, forbids leading or trailing whitespace, multiple internal spaces,; * and the non-break space (0x80) from ISO 8859-1. Returns keyword length.; *; * The 'new_key' buffer must be 80 characters in size (for the keyword plus a; * trailing '\0'). If this routine returns 0 then there was no keyword, or a; * valid one could not be generated, and the caller must png_error.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c:481,rout,routine,481,graf2d/asimage/src/libAfterImage/libpng/pngset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c,1,['rout'],['routine']
Integrability,/* Choose processor routine to use.; * APP0/APP14 have special requirements.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:20,rout,routine,20,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['rout'],['routine']
Integrability,/* Choose the correct 'end' routine; for the color-map case; * all the setup has already been done.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:28,rout,routine,28,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['rout'],['routine']
Integrability,"/* Combines the row recently read in with the existing pixels in the row. This; * routine takes care of alpha and transparency if requested. This routine also; * handles the two methods of progressive display of interlaced images,; * depending on the 'display' value; if 'display' is true then the whole row; * (dp) is filled from the start by replicating the available pixels. If; * 'display' is false only those pixels present in the pass are filled in.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:82,rout,routine,82,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,3,"['depend', 'rout']","['depending', 'routine']"
Integrability,"/* Compile errors here mean that zlib now uses the value co-opted in; * pngpriv.h for PNG_UNEXPECTED_ZLIB_RETURN; update the switch above; * and change pngpriv.h. Note that this message is ""... return"",; * whereas the default/Z_OK one is ""... return code"".; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:178,message,message,178,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['message'],['message']
Integrability,"/* Compile time options.; * =====================; * In a multi-arch build the compiler may compile the code several times for the; * same object module, producing different binaries for different architectures.; * When this happens configure-time setting of the target host options cannot be; * done and this interferes with the handling of the ARM NEON optimizations, and; * possibly other similar optimizations. Put additional tests here; in general; * this is needed when the same option can be changed at both compile time and; * run time depending on the target OS (i.e. iOS vs Android.); *; * NOTE: symbol prefixing does not pass $(CFLAGS) to the preprocessor, because; * this is not possible with certain compilers (Oracle SUN OS CC), as a result; * it is necessary to ensure that all extern functions that *might* be used; * regardless of $(CFLAGS) get declared in this file. The test on __ARM_NEON__; * below is one example of this behavior because it is controlled by the; * presence or not of -mfpu=neon on the GCC command line, it is possible to do; * this in $(CC), e.g. ""CC=gcc -mfpu=neon"", but people who build libpng rarely; * do this.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:544,depend,depending,544,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['depend'],['depending']
Integrability,/* Compute the minimum space needed (maxaccess rows in each buffer); * and the maximum space needed (full image height in each buffer).; * These may be of use to the system-dependent jpeg_mem_available routine.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:173,depend,dependent,173,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,2,"['depend', 'rout']","['dependent', 'routine']"
Integrability,/* Compute the number of elements in the list to be maintained in; descending order. This number depends on the number of; subdivisions still allowed. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:97,depend,depends,97,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['depend'],['depends']
Integrability,"/* Conditional load ops */; /// Conditionally loads double-precision floating point elements from a; /// memory location pointed to by \a __p into a 128-bit vector of; /// [2 x double], depending on the mask bits associated with each data; /// element.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VMASKMOVPD </c> instruction.; ///; /// \param __p; /// A pointer to a memory location that contains the double-precision; /// floating point values.; /// \param __m; /// A 128-bit integer vector containing the mask. The most significant bit of; /// each data element represents the mask bits. If a mask bit is zero, the; /// corresponding value in the memory location is not loaded and the; /// corresponding field in the return value is set to zero.; /// \returns A 128-bit vector of [2 x double] containing the loaded values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h:186,depend,depending,186,interpreter/llvm-project/clang/lib/Headers/avxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avxintrin.h,1,['depend'],['depending']
Integrability,/* Conditionally emit a trace or warning message */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:41,message,message,41,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['message'],['message']
Integrability,"/* Connect to a TCP server as a client (can be used to connect to a HTTP server); Parameters:; host: host to connect to, i.e. ""www.wikipedia.org"" or ""192.168.1.1"" or; ""localhost""; port: server port; use_ssl: make a secure connection to server; error_buffer, error_buffer_size: buffer for an error message. Return:; On success, valid mg_connection object.; On error, NULL. Se error_buffer for details.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:297,message,message,297,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['message'],['message']
Integrability,"/* Connect to a websocket as a client; Parameters:; host: host to connect to, i.e. ""echo.websocket.org"" or ""192.168.1.1"" or; ""localhost""; port: server port; use_ssl: make a secure connection to server; error_buffer, error_buffer_size: buffer for an error message; path: server path you are trying to connect to, i.e. if connection to; localhost/app, path should be ""/app""; origin: value of the Origin HTTP header; data_func: callback that should be used when data is received from the; server; user_data: user supplied argument. Return:; On success, valid mg_connection object.; On error, NULL. Se error_buffer for details.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:255,message,message,255,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['message'],['message']
Integrability,"/* Consistent with all the above colorspace handling an obviously *invalid*; * chunk is just ignored, so does not invalidate the color space. An; * alternative is to set the 'invalid' flags at the start of this routine; * and only clear them in they were not set before and all the tests pass.; */; /* The keyword must be at least one character and there is a; * terminator (0) byte and the compression method byte, and the; * 'zlib' datastream is at least 11 bytes.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:211,rout,routine,211,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['rout'],['routine']
Integrability,"/* Control the overlap size, as a fraction of window size.; * The overlap size is an amount of data reloaded from previous job at the beginning of a new job.; * It helps preserve compression ratio, while each job is compressed in parallel.; * This value is enforced only when nbWorkers >= 1.; * Larger values increase compression ratio, but decrease speed.; * Possible values range from 0 to 9 :; * - 0 means ""default"" : value will be determined by the library, depending on strategy; * - 1 means ""no overlap""; * - 9 means ""full overlap"", using a full window size.; * Each intermediate rank increases/decreases load size by a factor 2 :; * 9: full window; 8: w/2; 7: w/4; 6: w/8; 5:w/16; 4: w/32; 3:w/64; 2:w/128; 1:no overlap; 0:default; * default value varies between 6 and 9, depending on strategy */; /* note : additional experimental parameters are also available; * within the experimental section of the API.; * At the time of this writing, they include :; * ZSTD_c_rsyncable; * ZSTD_c_format; * ZSTD_c_forceMaxWindow; * ZSTD_c_forceAttachDict; * ZSTD_c_literalCompressionMode; * ZSTD_c_targetCBlockSize; * ZSTD_c_srcSizeHint; * ZSTD_c_enableDedicatedDictSearch; * ZSTD_c_stableInBuffer; * ZSTD_c_stableOutBuffer; * ZSTD_c_blockDelimiters; * ZSTD_c_validateSequences; * Because they are not stable, it's necessary to define ZSTD_STATIC_LINKING_ONLY to access them.; * note : never ever use experimentalParam? names directly;; * also, the enums values themselves are unstable and can still change.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:462,depend,depending,462,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,2,['depend'],['depending']
Integrability,/* Convert the facename Windows fives us from the locale-dependent; * codepage to UTF-8.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkfont-win32.c:57,depend,dependent,57,graf2d/win32gdk/gdk/src/gdk/win32/gdkfont-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkfont-win32.c,1,['depend'],['dependent']
Integrability,"/* Convert to a US string format: there is no localization support in this; * routine. The original implementation used a 29 character buffer in; * png_struct, this will be removed in future versions.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:78,rout,routine,78,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['rout'],['routine']
Integrability,/* Copied from pngpriv.h but only used in error messages below. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:48,message,messages,48,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,1,['message'],['messages']
Integrability,"/* Copy markers saved in the given source object to the destination object.; * This should be called just after jpeg_start_compress() or; * jpeg_write_coefficients().; * Note that those routines will have written the SOI, and also the; * JFIF APP0 or Adobe APP14 markers if selected.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:186,rout,routines,186,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,1,['rout'],['routines']
Integrability,/* Copy the png_struct colorspace to the info_struct and call the above to; * synchronize the flags. Checks for NULL info_ptr and does nothing.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:78,synchroniz,synchronize,78,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['synchroniz'],['synchronize']
Integrability,"/* Copyright (c) 2013-2021 the Civetweb developers; * Copyright (c) 2004-2013 Sergey Lyubka; *; * Permission is hereby granted, free of charge, to any person obtaining a copy; * of this software and associated documentation files (the ""Software""), to deal; * in the Software without restriction, including without limitation the rights; * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; * copies of the Software, and to permit persons to whom the Software is; * furnished to do so, subject to the following conditions:; *; * The above copyright notice and this permission notice shall be included in; * all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER; * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,; * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN; * THE SOFTWARE.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:1030,CONTRACT,CONTRACT,1030,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['CONTRACT'],['CONTRACT']
Integrability,/* Correct error message? FIXME */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c:17,message,message,17,graf2d/win32gdk/gdk/src/glib/giowin32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c,3,['message'],['message']
Integrability,/* Could not parse the CGI response. Check if some error message on; 		 * stderr. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:57,message,message,57,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['message']
Integrability,/* Create an IO channel for Windows messages for window handle hwnd. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.h:36,message,messages,36,graf2d/win32gdk/gdk/src/glib/giochannel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.h,1,['message'],['messages']
Integrability,"/* Create an error message in allocated memory and set state->err and; state->msg accordingly. Free any previous error message already there. Do; not try to free or allocate space if the error is Z_MEM_ERROR (out of; memory). Simply save the error message as a static string. If there is an; allocation failure constructing the error message, then convert the error to; out of memory. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:19,message,message,19,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,4,['message'],['message']
Integrability,"/* Create socket. */; /* For a list of protocol numbers (e.g., TCP==6) see:; 		 * https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml; 		 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:39,protocol,protocol,39,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,3,['protocol'],"['protocol', 'protocol-numbers']"
Integrability,"/* Create the funny pointer lists discussed in the comments above.; * The actual workspace is already allocated (in mainptr->buffer),; * and the space for the pointer lists is allocated too.; * This routine just fills in the curiously ordered lists.; * This will be repeated at the beginning of each pass.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c:199,rout,routine,199,graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,1,['rout'],['routine']
Integrability,/* Create the message */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:14,message,message,14,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,1,['message'],['message']
Integrability,"/* Currently the above both depend on SETJMP_SUPPORTED, however it would be; * possible to implement without setjmp support just so long as there is some; * way to handle the error return here:; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:28,depend,depend,28,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['depend'],['depend']
Integrability,"/* Declarations */; /**; * A declaration whose specific kind is not exposed via this; * interface.; *; * Unexposed declarations have the same operations as any other kind; * of declaration; one can extract their location information,; * spelling, find their definitions, etc. However, the specific kind; * of the declaration is not reported.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:88,interface,interface,88,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['interface'],['interface']
Integrability,/* Decompression module initialization routines */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h:39,rout,routines,39,graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,1,['rout'],['routines']
Integrability,/* Defend against bogus message number */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:24,message,message,24,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,1,['message'],['message']
Integrability,/* Define to 1 if translation of program messages to the user's native; language is requested. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/config.h:41,message,messages,41,graf2d/win32gdk/gdk/src/iconv/config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/config.h,1,['message'],['messages']
Integrability,"/* Define to 1 or 0, depending whether the compiler supports simple visibility; declarations. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/config.h:21,depend,depending,21,graf2d/win32gdk/gdk/src/iconv/config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/config.h,1,['depend'],['depending']
Integrability,"/* Depending on USE_WEBSOCKET and NO_SSL, some oft the protocols might be; 	 * not supported. Clang raises an ""unreachable code"" warning for parts of ?:; 	 * unreachable, but splitting into four different #ifdef clauses here is; 	 * more complicated.; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,Depend,Depending,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,"['Depend', 'protocol']","['Depending', 'protocols']"
Integrability,/* Deprecated interface method (read Rolke.cxx). May be removed from future releases */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRolke.h:14,interface,interface,14,math/physics/inc/TRolke.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRolke.h,1,['interface'],['interface']
Integrability,"/* Design notes: 1) We want to delay the costly conversion from object references to; strings to a point after we have decided whether or not to; show that string to the user at all. 2) We want to offer a customization point for; external libraries that want to replace the MnPrint logging. The actual; implementation is in a separate file, MnPrintImpl.cxx file that external libraries; can replace with their own implementation.; */; // logging class for messages of varying severity",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnPrint.h:456,message,messages,456,math/minuit2/inc/Minuit2/MnPrint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnPrint.h,1,['message'],['messages']
Integrability,/* Display it in a message dialog box */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:19,message,message,19,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,1,['message'],['message']
Integrability,"/* Do all the *safe* initialization - 'safe' means that png_error won't be; * called, so setting up the jmp_buf is not required. This means that anything; * called from here must *not* call png_malloc - it has to call png_malloc_warn; * instead so that control is returned safely back to this routine.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:293,rout,routine,293,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['rout'],['routine']
Integrability,"/* Do the main body of a 'png_image_begin_read' function; read the PNG file; * header and fill in all the information. This is executed in a safe context,; * unlike the init routine above.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:174,rout,routine,174,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['rout'],['routine']
Integrability,"/* Do this directly, not using the png_colorspace functions, to ensure; * that it happens even if the colorspace is invalid (though probably if; * it is the setting will be ignored) Note that the same thing can be; * achieved at the application interface with png_set_gAMA.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:245,interface,interface,245,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['interface'],['interface']
Integrability,"/* Do this first in case of an error below; if the app implements its own; * memory management this can lead to png_free calling png_error, which; * will abort this routine and return control to the app error handler.; * An infinite loop may result if it then tries to free the same info; * ptr.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:165,rout,routine,165,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['rout'],['routine']
Integrability,/* Don't depend upon png_color being any order */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:9,depend,depend,9,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['depend'],['depend']
Integrability,/* Don't send the error message back to the client */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:24,message,message,24,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['message']
Integrability,"/* Download data from the remote web server.; host: host name to connect to, e.g. ""foo.com"", or ""10.12.40.1"".; port: port number, e.g. 80.; use_ssl: whether to use SSL connection.; error_buffer, error_buffer_size: error message placeholder.; request_fmt,...: HTTP request.; Return:; On success, valid pointer to the new connection, suitable for mg_read().; On error, NULL. error_buffer contains error message.; Example:; char ebuf[100];; struct mg_connection *conn;; conn = mg_download(""google.com"", 80, 0, ebuf, sizeof(ebuf),; ""%s"", ""GET / HTTP/1.0\r\nHost: google.com\r\n\r\n"");. mg_download is equivalent to calling mg_connect_client followed by; mg_printf and mg_get_response. Using these three functions directly may; allow more control as compared to using mg_download.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:220,message,message,220,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,2,['message'],['message']
Integrability,/* DumpScreen2Gif routine constants identify type of window/screen to dump. */; /* Note all values below 1000 are reserved for the IBMPC different display */; /* devices (it has many!) and are compatible with the numbering TC2.0 */; /* (Turbo C 2.0 compiler for IBM PC) gives to these devices.		 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_lib.h:18,rout,routine,18,graf2d/asimage/src/libAfterImage/libungif/gif_lib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_lib.h,1,['rout'],['routine']
Integrability,/* Each iteration through the following loop writes at most one character; * to msg[i++] then returns here to validate that there is still space for; * the trailing '\0'. It may (in the case of a parameter) read more than; * one character from message[]; it must check for '\0' and continue to the; * test if it finds the end of string.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:244,message,message,244,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['message'],['message']
Integrability,"/* Emit a DAC marker */; /* Since the useful info is so small, we want to emit all the tables in */; /* one DAC marker. Therefore this routine does its own scan of the table. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmarker.c:135,rout,routine,135,graf2d/asimage/src/libAfterImage/libjpeg/jcmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmarker.c,1,['rout'],['routine']
Integrability,/* Emulation of X11 control ROOT routines; **; ** ROOT_Control set; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/Win32Constants.h:33,rout,routines,33,core/winnt/inc/Win32Constants.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/Win32Constants.h,1,['rout'],['routines']
Integrability,/* Encodings used by system dependent locales. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/converters.h:28,depend,dependent,28,graf2d/win32gdk/gdk/src/iconv/converters.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/converters.h,1,['depend'],['dependent']
Integrability,/* Error message generation */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:9,message,message,9,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['message'],['message']
Integrability,/* Error message the same as for INSIDE_TEXT */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.c:9,message,message,9,graf2d/win32gdk/gdk/src/glib/gmarkup.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.c,1,['message'],['message']
Integrability,"/* Execute the actual transformation, if any.; *; * This must be called *after* jpeg_write_coefficients, because it depends; * on jpeg_write_coefficients to have computed subsidiary values such as; * the per-component width and height fields in the destination object.; *; * Note that some transformations will modify the source data arrays!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:116,depend,depends,116,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,1,['depend'],['depends']
Integrability,/* Expands a palette row to an RGB or RGBA row depending; * upon whether you supply trans and num_trans.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:47,depend,depending,47,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['depend'],['depending']
Integrability,"/* FAST_FLOAT should be either float or double, whichever is done faster; * by your compiler. (Note that this type is only used in the floating point; * DCT routines, so it only matters if you've defined DCT_FLOAT_SUPPORTED.); * Typically, float is faster in ANSI C compilers, while double is faster in; * pre-ANSI compilers (because they insist on converting to double anyway).; * The code below therefore chooses float if we have ANSI-style prototypes.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h:157,rout,routines,157,graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h,1,['rout'],['routines']
Integrability,"/* FIXME get all errors, better error messages */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c:38,message,messages,38,graf2d/win32gdk/gdk/src/glib/giowin32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c,2,['message'],['messages']
Integrability,"/* FIXME: this routine currently needs to be called between creation; and the corresponding configure event (because it doesn't get the; root_relative_geometry). This should work with; gtk_window_set_extension_events, but will likely fail in other; cases */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c:15,rout,routine,15,graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c,1,['rout'],['routine']
Integrability,"/* FIXME: this slows things down a little - it could be; * integrated into the strncpy below, perhaps. OTOH, strlen; * is fast.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkpixmap-win32.c:59,integrat,integrated,59,graf2d/win32gdk/gdk/src/gdk/win32/gdkpixmap-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkpixmap-win32.c,1,['integrat'],['integrated']
Integrability,/* Fetch component-dependent info */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdcoefct.c:19,depend,dependent,19,graf2d/asimage/src/libAfterImage/libjpeg/jdcoefct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdcoefct.c,1,['depend'],['dependent']
Integrability,"/* Fetch data and put it in the output buffer. Assumes state->x.have is 0.; Data is either copied from the input file or decompressed from the input; file depending on state->how. If state->how is LOOK, then a gzip header is; looked for to determine whether to copy or decompress. Returns -1 on error,; otherwise 0. gz_fetch() will leave state->how as COPY or GZIP unless the; end of the input file has been reached and all data has been processed. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c:155,depend,depending,155,builtins/zlib/gzread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c,1,['depend'],['depending']
Integrability,"/* Fill in any dummy blocks needed in this row.; 	 * Dummy blocks are filled in the same way as in jccoefct.c:; 	 * all zeroes in the AC entries, DC entries equal to previous; 	 * block's DC value. The init routine has already zeroed the; 	 * AC entries, so we need only set the DC entries correctly.; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jctrans.c:207,rout,routine,207,graf2d/asimage/src/libAfterImage/libjpeg/jctrans.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jctrans.c,1,['rout'],['routine']
Integrability,/* Fill in the above and below wraparound pointers */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c:31,wrap,wraparound,31,graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,1,['wrap'],['wraparound']
Integrability,/* Filters for client messages */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:22,message,messages,22,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,2,['message'],['messages']
Integrability,"/* Find the closest colormap entry for each cell in the update box,; * given the list of candidate colors prepared by find_nearby_colors.; * Return the indexes of the closest entries in the bestcolor[] array.; * This routine uses Thomas' incremental distance calculation method to; * find the distance from a colormap entry to successive cells in the box.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:217,rout,routine,217,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['rout'],['routine']
Integrability,"/* First monday/sunday is the start of week 1; if we haven't reached; * that day, return 0. These are not ISO weeks of the year; that; * routine needs to be added.; * these functions return the number of weeks, starting on the; * corrsponding day; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdate.h:137,rout,routine,137,graf2d/win32gdk/gdk/src/glib/gdate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdate.h,1,['rout'],['routine']
Integrability,"/* For checking call sequence validity */; /* Routines that are to be used by both halves of the library are declared; * to receive a pointer to this structure. There are no actual instances of; * jpeg_common_struct, only of jpeg_compress_struct and jpeg_decompress_struct.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:46,Rout,Routines,46,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['Rout'],['Routines']
Integrability,/* For implementation of legacy interfaces; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.h:32,interface,interfaces,32,graf2d/win32gdk/gdk/src/glib/gmain.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.h,1,['interface'],['interfaces']
Integrability,/* For older processor where we may not even have Program Priority; controls we can only depend on Heavy Weight Sync. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/xmmintrin.h:89,depend,depend,89,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/xmmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/xmmintrin.h,1,['depend'],['depend']
Integrability,"/* For other errors, send a generic error message. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:42,message,message,42,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['message']
Integrability,"/* For pixel depths up to 4 bpp the 8-pixel mask can be expanded to fit; * into 32 bits, then a single loop over the bytes using the four byte; * values in the 32-bit mask can be used. For the 'display' option the; * expanded mask may also not require any masking within a byte. To; * make this work the PACKSWAP option must be taken into account - it; * simply requires the pixels to be reversed in each byte.; *; * The 'regular' case requires a mask for each of the first 6 passes,; * the 'display' case does a copy for the even passes in the range; * 0..6. This has already been handled in the test above.; *; * The masks are arranged as four bytes with the first byte to use in; * the lowest bits (little-endian) regardless of the order (PACKSWAP or; * not) of the pixels in each byte.; *; * NOTE: the whole of this logic depends on the caller of this function; * only calling it on rows appropriate to the pass. This function only; * understands the 'x' logic; the 'y' logic is handled by the caller.; *; * The following defines allow generation of compile time constant bit; * masks for each pixel depth and each possibility of swapped or not; * swapped bytes. Pass 'p' is in the range 0..6; 'x', a pixel index,; * is in the range 0..7; and the result is 1 if the pixel is to be; * copied in the pass, 0 if not. 'S' is for the sparkle method, 'B'; * for the block method.; *; * With some compilers a compile time expression of the general form:; *; * (shift >= 32) ? (a >> (shift-32)) : (b >> shift); *; * Produces warnings with values of 'shift' in the range 33 to 63; * because the right hand side of the ?: expression is evaluated by; * the compiler even though it isn't used. Microsoft Visual C (various; * versions) and the Intel C compiler are known to do this. To avoid; * this the following macros are used in 1.5.6. This is a temporary; * solution to avoid destabilizing the code during the release process.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:826,depend,depends,826,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['depend'],['depends']
Integrability,"/* For some reason WTEnable and/or WTClose tend to crash here.; * Protect with __try/__except to avoid a message box.; * When compiling with gcc, we cannot use __try/__except, so; * don't call WTClose. I think this means that we'll; * eventually run out of Wintab contexts, sigh.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c:105,message,message,105,graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c,1,['message'],['message']
Integrability,"/* For user-constructed error messages, has no precise semantics */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.h:30,message,messages,30,graf2d/win32gdk/gdk/src/glib/gmarkup.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmarkup.h,1,['message'],['messages']
Integrability,/* Format a message string for the most recent JPEG error or message */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:12,message,message,12,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,2,['message'],['message']
Integrability,"/* Format strings */; // static char fmt_9999[] = ""(\002 ** On entry to \002,a6,\002 Parameter nu\// mber \002,i2,\002 had \002,\002an; // illegal Value\002)"";; /* -- LAPACK auxiliary routine (version 3.0) -- */; /* Univ. of Tennessee, Univ. of California Berkeley, NAG Ltd., */; /* Courant Institute, Argonne National Lab, and Rice University */; /* September 30, 1994 */; /* .. Scalar Arguments .. */; /* .. */; /* Purpose */; /* ======= */; /* XERBLA is an Error handler for the LAPACK routines. */; /* It is called by an LAPACK routine if an input Parameter has an */; /* invalid Value. A message is printed and execution stops. */; /* Installers may consider modifying the STOP statement in order to */; /* call system-specific exception-handling facilities. */; /* Arguments */; /* ========= */; /* SRNAME (input) CHARACTER*6 */; /* The Name of the routine which called XERBLA. */; /* INFO (input) INTEGER */; /* The position of the invalid Parameter in the Parameter list */; /* of the calling routine. */; /* ===================================================================== */; /* .. Executable Statements .. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/mnxerbla.cxx:184,rout,routine,184,math/minuit2/src/mnxerbla.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/mnxerbla.cxx,6,"['message', 'rout']","['message', 'routine', 'routines']"
Integrability,/* Format the message into the passed buffer */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:14,message,message,14,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,1,['message'],['message']
Integrability,"/* Found JFIF ""JFXX"" extension APP0 marker */; /* The library doesn't actually do anything with these,; * but we try to produce a helpful trace message.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:144,message,message,144,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['message'],['message']
Integrability,"/* GDate; *; * Date calculations (not time for now, to be resolved). These are a; * mutant combination of Steffen Beyer's DateCalc routines; * (http://www.perl.com/CPAN/authors/id/STBEY/) and Jon Trowbridge's; * date routines (written for in-house software). Written by Havoc; * Pennington <hp@pobox.com>; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdate.h:131,rout,routines,131,graf2d/win32gdk/gdk/src/glib/gdate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdate.h,2,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1991, 1992, 1996, 1997 Free Software Foundation, Inc.; * Copyright (C) 2000 Eazel, Inc.; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * This file was originally part of the GNU C Library, and was modified to allow; * user data to be passed in to the sorting function.; *; * Written by Douglas C. Schmidt (schmidt@ics.uci.edu).; * Modified by Maciej Stachowiak (mjs@eazel.com); *; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with GLib; * at ftp://ftp.gtk.org/pub/gtk/.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gqsort.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/gqsort.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gqsort.c,1,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * GAsyncQueue: asynchronous queue implementation, based on Gqueue.; * Copyright (C) 2000 Sebastian Wilhelmi; University of Karlsruhe; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * MT safe; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gasyncqueue.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/gasyncqueue.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gasyncqueue.c,1,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * GAsyncQueue: thread pool implementation.; * Copyright (C) 2000 Sebastian Wilhelmi; University of Karlsruhe; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * MT safe; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthreadpool.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/gthreadpool.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthreadpool.c,1,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * GHook: Callback maintenance functions; * Copyright (C) 1998 Tim Janik; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */; /* ; * MT safe; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/ghook.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/ghook.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/ghook.c,1,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * GNode: N-way tree implementation.; * Copyright (C) 1998 Tim Janik; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */; /* ; * MT safe; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gnode.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/gnode.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gnode.c,1,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * GQueue: Double ended queue implementation, piggy backed on GList.; * Copyright (C) 1998 Tim Janik; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * MT safe; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gqueue.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/gqueue.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gqueue.c,1,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * GScanner: Flexible lexical scanner for general purpose.; * Copyright (C) 1997, 1998 Tim Janik; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */; /* ; * MT safe; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gscanner.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/gscanner.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gscanner.c,1,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/garray.h:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/garray.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/garray.h,26,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */; /* ; * MT safe; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gcompletion.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/gcompletion.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gcompletion.c,5,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */; /* This file must not include any other glib header file and must thus; * not refer to variables from glibconfig.h ; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmacros.h:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/gmacros.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmacros.h,1,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */; /*; * MT safe; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gstrfuncs.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/gstrfuncs.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gstrfuncs.c,1,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the Free; * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */; /* ; * MT safe; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/grel.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/grel.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/grel.c,1,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /* Originally developed and coded by Makoto Matsumoto and Takuji; * Nishimura. Please mail <matumoto@math.keio.ac.jp>, if you're using; * code from this file in your own programs or libraries.; * Further information on the Mersenne Twister can be found at; * http://www.math.keio.ac.jp/~matumoto/emt.html; * This code was adapted to glib by Sebastian Wilhelmi <wilhelmi@ira.uka.de>.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */; /* ; * MT safe; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/grand.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/grand.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/grand.c,1,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /* acconfig.h; This file is in the public domain. Descriptive text for the C preprocessor macros that; the distributed Autoconf macros can define.; No software package will use all of them; autoheader copies the ones; your configure.in uses into your configuration header file templates. The entries are in sort -df order: alphabetical, case insensitive,; ignoring punctuation (such as underscores). Although this order; can split up related entries, it makes it easier to check whether; a given entry is in the file. Leave the following blank line there!! Autoheader needs it. */; /* Other stuff */; /* #undef PACKAGE */; /* #undef VERSION */; /* Leave that blank line there!! Autoheader needs it.; If you're adding to this file, keep in mind:; The entries are in sort -df order: alphabetical, case insensitive,; ignoring punctuation (such as underscores). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/acconfig.h:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/acconfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/acconfig.h,1,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/galloca.h:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/galloca.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/galloca.h,10,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */; /* ; * MT safe ; except for g_on_error_stack_trace, but who wants thread safety ; * then; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gbacktrace.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/gbacktrace.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gbacktrace.c,1,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */; /* ; * MT safe; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/garray.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/garray.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/garray.c,8,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * gdataset.c: Generic dataset mechanism, similar to GtkObject data.; * Copyright (C) 1998 Tim Janik; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the Free Software; * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */; /* ; * MT safe ; FIXME: might still freeze, watch out, not thoroughly; * looked at yet. ; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdataset.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/gdataset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdataset.c,1,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * giochannel.c: IO Channel abstraction; * Copyright 1998 Owen Taylor; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */; /* ; * MT safe; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/giochannel.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.c,1,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * giounix.c: IO Channels using unix file descriptors; * Copyright 1998 Owen Taylor; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */; /* ; * MT safe; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giounix.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/giounix.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giounix.c,1,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * giowin32.c: IO Channels for Win32.; * Copyright 1998 Owen Taylor and Tor Lillqvist; * Copyright 1999-2000 Tor Lillqvist and Craig Setera; * Copyright 2001 Andrew Lanoix; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/.; */; /* Define this to get (very) verbose logging of all channels */; /* #define G_IO_WIN32_DEBUG */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/giowin32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c,1,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * gmain.c: Main loop abstraction, timeouts, and idle functions; * Copyright 1998 Owen Taylor; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */; /* ; * MT safe; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/gmain.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.c,1,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * gmutex.c: MT safety related functions; * Copyright 1998 Sebastian Wilhelmi; University of Karlsruhe; * Owen Taylor; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */; /* ; * MT safe; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthread.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/gthread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthread.c,1,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997, 1999 Peter Mattis, Red Hat, Inc.; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gpattern.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/gpattern.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gpattern.c,2,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1998 Peter Mattis, Spencer Kimball and Josh MacDonald; * Copyright (C) 1998-1999 Tor Lillqvist; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */; /* ; * MT safe for the unix part, FIXME: make the win32 part MT safe as well.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gwin32.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/gwin32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gwin32.c,1,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1998 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */; /* ; * MT safe for the unix part, FIXME: make the win32 part MT safe as well.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutils.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/gutils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutils.c,1,['rout'],['routines']
Integrability,"/* GLIB - Library of useful routines for C programming; *; * gconvert.c: Convert between character sets using iconv; * Copyright Red Hat Inc., 2000; * Authors: Havoc Pennington <hp@redhat.com>, Owen Taylor <otaylor@redhat.com; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c:28,rout,routines,28,graf2d/win32gdk/gdk/src/glib/gconvert.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c,1,['rout'],['routines']
Integrability,/* GRR TO DO (2.0 or whenever): simplify other internal calling interfaces */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:64,interface,interfaces,64,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['interface'],['interfaces']
Integrability,/* Generate trace messages */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:18,message,messages,18,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['message'],['messages']
Integrability,"/* Get a copy of the background color (this avoids repeating the checks; * below.) The encoding is 8-bit sRGB or 16-bit linear, depending on the; * output format.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:128,depend,depending,128,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['depend'],['depending']
Integrability,"/* Given an valid file descriptor on an open file, test to see if that file; is a valid mmalloc produced file, and if so, attempt to remap it into the; current process at the same address to which it was previously mapped. Note that we have to update the file descriptor number in the malloc-; descriptor read from the file to match the current valid one, before; trying to map the file in, and again after a successful mapping and; after we've switched over to using the mapped in malloc descriptor; rather than the temporary one on the stack. Once we've switched over to using the mapped in malloc descriptor, we; have to update the pointer to the morecore function, since it almost; certainly will be at a different address if the process reusing the; mapped region is from a different executable. Also note that if the heap being remapped previously used the mmcheck(); routines, we need to update the hooks since their target functions; will have certainly moved if the executable has changed in any way.; We do this by calling mmcheck() internally. Returns a pointer to the malloc descriptor if successful, or NULL if; unsuccessful for some reason. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c:874,rout,routines,874,core/clib/src/attach.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/attach.c,1,['rout'],['routines']
Integrability,"/* HAVE_VARARGS_H */; /******************************************************************************; * O.K., here are the routines from GIF_LIB file GIF_ERR.C.		 *; ******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_lib.h:124,rout,routines,124,graf2d/asimage/src/libAfterImage/libungif/gif_lib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/gif_lib.h,1,['rout'],['routines']
Integrability,/* HTTP/1 allows protocol upgrade */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:17,protocol,protocol,17,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['protocol'],['protocol']
Integrability,"/* Handle gamma correction. Screen_gamma=(display_exponent).; * NOTE: this API simply sets the screen and file gamma values. It will; * therefore override the value for gamma in a PNG file if it is called after; * the file header has been read - use with care - call before reading the PNG; * file for best results!; *; * These routines accept the same gamma values as png_set_alpha_mode (described; * above). The PNG_GAMMA_ defines and PNG_DEFAULT_sRGB can be passed to either; * API (floating point or fixed.) Notice, however, that the 'file_gamma' value; * is the inverse of a 'screen gamma' value.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:328,rout,routines,328,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['rout'],['routines']
Integrability,/* Here we have a log message in log_buf. Call the callback */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:22,message,message,22,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['message']
Integrability,"/* Here we must output into a separate array because we can't touch; * different rows of a single virtual array simultaneously. Otherwise,; * this is essentially the same as the routine above.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:178,rout,routine,178,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,1,['rout'],['routine']
Integrability,/* Heuristic: This should cover most blocks <= 16K and; * start to fade out after 16K to about 32K depending on; * comprssibility.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_sequences.c:99,depend,depending,99,builtins/zstd/compress/zstd_compress_sequences.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_sequences.c,1,['depend'],['depending']
Integrability,/* Hide this not yet used implementation to suppress warnings message; from icc 11; Bool_t operator==(const TMemberInfo &other) {; return fName==other.fName; && fClassName == other.fClassName; && fComment == other.fComment;; }; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfo.cxx:62,message,message,62,io/io/src/TStreamerInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfo.cxx,1,['message'],['message']
Integrability,/* High water mark offset in window for initialized bytes -- bytes above; * this are set to zero in order to avoid memory check warnings when; * longest match routines access bytes past the input. This is then; * updated to the new high water mark.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:159,rout,routines,159,builtins/zlib/deflate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h,2,['rout'],['routines']
Integrability,/* Hook for GClosure / GSource integration. Don't touch */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.h:31,integrat,integration,31,graf2d/win32gdk/gdk/src/glib/giochannel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.h,2,['integrat'],['integration']
Integrability,/* INPUT_SMOOTHING_SUPPORTED */; /*; * Module initialization routine for downsampling.; * Note that we must select a routine for each component.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c:61,rout,routine,61,graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,2,['rout'],['routine']
Integrability,"/* If HAVE_CONFIG_H is defined during the build then the build system must; * provide an appropriate ""config.h"" file on the include path. The header file; * must provide definitions as required below (search for ""HAVE_CONFIG_H"");; * see configure.ac for more details of the requirements. The macro; * ""PNG_NO_CONFIG_H"" is provided for maintainers to test for dependencies on; * 'configure'; define this macro to prevent the configure build including the; * configure generated config.h. Libpng is expected to compile without *any*; * special build system support on a reasonably ANSI-C compliant system.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:359,depend,dependencies,359,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['depend'],['dependencies']
Integrability,"/* If correct type is being requested, allocate an; * instance of TestType and return the IUnknown interface.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rootsl/main.c:99,interface,interface,99,misc/rootsl/main.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rootsl/main.c,1,['interface'],['interface']
Integrability,"/* If correct type is being requested, allocate an; * instance of kQLGeneratorTypeID and return the IUnknown interface.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rootql/main.c:109,interface,interface,109,misc/rootql/main.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rootql/main.c,1,['interface'],['interface']
Integrability,/* If floating or fixed point APIs are disabled they may still be compiled; * internally. To handle this make sure they are declared as the appropriate; * internal extern function (otherwise the symbol prefixing stuff won't work and; * the functions will be used without definitions.); *; * NOTE: although all the API functions are declared here they are not all; * actually built! Because the declarations are still made it is necessary to; * fake out types that they depend on.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:469,depend,depend,469,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['depend'],['depend']
Integrability,"/* If the IUnknown interface was requested, same as above. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rootsl/main.c:19,interface,interface,19,misc/rootsl/main.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rootsl/main.c,1,['interface'],['interface']
Integrability,"/* If the Right interface was requested, bump the ref count,; * set the ppv parameter equal to the instance, and; * return good status.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rootql/main.c:16,interface,interface,16,misc/rootql/main.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rootql/main.c,2,['interface'],['interface']
Integrability,"/* If the WIN_INIT bytes after the end of the current data have never been; * written, then zero those bytes in order to avoid memory check reports of; * the use of uninitialized (or uninitialised as Julian writes) bytes by; * the longest match routines. Update the high water mark for the next; * time through here. WIN_INIT is set to MAX_MATCH since the longest match; * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:245,rout,routines,245,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,8,['rout'],['routines']
Integrability,/* If warnings or errors are turned off the code is disabled or redirected here.; * From 1.5.4 functions have been added to allow very limited formatting of; * error and warning messages - this code will also be disabled here.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:178,message,messages,178,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['message'],['messages']
Integrability,"/* If we did not get a log message from Lua, create it here. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:27,message,message,27,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['message']
Integrability,"/* If we did not get a protocol name, use TLS as default if it is; 			 * already used. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:23,protocol,protocol,23,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['protocol'],['protocol']
Integrability,"/* If we got a protocol name, use the default port accordingly. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:15,protocol,protocol,15,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['protocol'],['protocol']
Integrability,"/* If we haven't written our entropy tables, then we've violated our contract and; * must emit an uncompressed block.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_superblock.c:69,contract,contract,69,builtins/zstd/compress/zstd_compress_superblock.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_superblock.c,1,['contract'],['contract']
Integrability,"/* Impact of this field depends on strategy.; * For strategies btopt, btultra & btultra2:; * Length of Match considered ""good enough"" to stop search.; * Larger values make compression stronger, and slower.; * For strategy fast:; * Distance between match sampling.; * Larger values make compression faster, and weaker.; * Special: value 0 means ""use default targetLength"". */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:24,depend,depends,24,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['depend'],['depends']
Integrability,"/* Implementation note: unlike 'png_deflate_claim' this internal function; * does not take the size of the data as an argument. Some efficiency could; * be gained by using this when it is known *if* the zlib stream itself does; * not record the number; however, this is an illusion: the original writer; * of the PNG may have selected a lower window size, and we really must; * follow that because, for systems with with limited capabilities, we; * would otherwise reject the application's attempts to use a smaller window; * size (zlib doesn't have an interface to say ""this or lower""!).; *; * inflateReset2 was added to zlib 1.2.4; before this the window could not be; * reset, therefore it is necessary to always allocate the maximum window; * size with earlier zlibs just in case later compressed chunks need it.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:553,interface,interface,553,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['interface'],['interface']
Integrability,"/* Include the header file here, so the CivetWeb interface is defined for the; * entire implementation, including the following forward definitions. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:49,interface,interface,49,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['interface'],['interface']
Integrability,/* Informational/debugging messages */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.h:27,message,messages,27,graf2d/asimage/src/libAfterImage/libjpeg/jerror.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.h,1,['message'],['messages']
Integrability,/* Initialize everything needed for the read. This includes modifying; * the palette.; */; /* For the moment 'png_init_palette_transformations' and; * 'png_init_rgb_transformations' only do some flag canceling optimizations.; * The intent is that these two routines should have palette or rgb operations; * extracted from 'png_init_read_transformations'.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:257,rout,routines,257,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['rout'],['routines']
Integrability,/* Initialize everything not dependent on the color space */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c:29,depend,dependent,29,graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,1,['depend'],['dependent']
Integrability,"/* Initialize the default input/output functions for the PNG file. If you; * use your own read or write routines, you can call either png_set_read_fn(); * or png_set_write_fn() instead of png_init_io(). If you have defined; * PNG_NO_STDIO or otherwise disabled PNG_STDIO_SUPPORTED, you must use a; * function of your own because ""FILE *"" isn't necessarily available.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:104,rout,routines,104,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['rout'],['routines']
Integrability,"/* Inline macros to do direct reads of bytes from the input buffer.; * The png_get_int_32() routine assumes we are using two's complement; * format for negative values, which is almost certainly true.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:92,rout,routine,92,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['rout'],['routine']
Integrability,/* Interface member */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp:3,Interface,Interface,3,interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaType.cpp,1,['Interface'],['Interface']
Integrability,"/* Internal array allocator, outputs no error or warning messages on failure,; * just returns NULL.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:57,message,messages,57,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['message'],['messages']
Integrability,"/* Internal base allocator - no messages, NULL on failure to allocate. This; * does, however, call the application provided allocator and that could call; * png_error (although that would be a bug in the application implementation.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:32,message,messages,32,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['message'],['messages']
Integrability,"/* It is a bit strange for a header to play with the visibility of the; symbols it declares, but this matches gcc's behavior and some programs; depend on it */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/unwind.h:144,depend,depend,144,interpreter/llvm-project/clang/lib/Headers/unwind.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/unwind.h,1,['depend'],['depend']
Integrability,/* It's a trace message. Show it if trace_level >= msg_level. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:16,message,message,16,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,1,['message'],['message']
Integrability,"/* It's a warning message. Since corrupt files may generate many warnings,; * the policy implemented here is to show only the first warning,; * unless trace_level >= 3.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:18,message,message,18,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,1,['message'],['message']
Integrability,"/* It's quite normal to get these messages before we have; * had time to register the window in our lookup table, or; * when the window is being destroyed and we already have; * removed it. Repost the same message to our queue so that; * we will get it later when we are prepared.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:34,message,messages,34,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,2,['message'],"['message', 'messages']"
Integrability,"/* James Theiler's recursive algorithm for generating all routes */; // version used in GSL",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/simanTSP.cxx:58,rout,routes,58,math/mathmore/test/simanTSP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/simanTSP.cxx,1,['rout'],['routes']
Integrability,/* Just a single protocol -> accept it. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:17,protocol,protocol,17,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['protocol'],['protocol']
Integrability,/* Just set a flag so we don't get confused by empty contours; * -- these can be generated accidentally with the obsolete; * NextContour() interface.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/tess.c:139,interface,interface,139,graf3d/eve7/glu/tess.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/tess.c,1,['interface'],['interface']
Integrability,"/* Key kinds:. - C functions; - C++ functions (name + parameter types); - ObjC methods:; - Class, selector (class method); - Class, selector (instance method); - Category, selector (instance method); - Protocol, selector (instance method); - C++ methods; - Class, function name + parameter types + const; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SummaryManager.h:202,Protocol,Protocol,202,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SummaryManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/SummaryManager.h,1,['Protocol'],['Protocol']
Integrability,"/* LZ4 Frame header size can vary, depending on selected paramaters */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.h:35,depend,depending,35,builtins/lz4/lz4frame.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.h,1,['depend'],['depending']
Integrability,"/* LZ4_H_2983827168210 */; /*^*************************************; * !!!!!! STATIC LINKING ONLY !!!!!!; ***************************************/; /*-****************************************************************************; * Experimental section; *; * Symbols declared in this section must be considered unstable. Their; * signatures or semantics may change, or they may be removed altogether in the; * future. They are therefore only safe to depend on when the caller is; * statically linked against the library.; *; * To protect against unsafe usage, not only are the declarations guarded,; * the definitions are hidden by default; * when building LZ4 as a shared/dynamic library.; *; * In order to access these declarations,; * define LZ4_STATIC_LINKING_ONLY in your application; * before including LZ4's headers.; *; * In order to make their implementations accessible dynamically, you must; * define LZ4_PUBLISH_STATIC_FUNCTIONS when building the LZ4 library.; ******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:449,depend,depend,449,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['depend'],['depend']
Integrability,"/* Links the source module into the destination module. The source module is; * destroyed.; * The return value is true if an error occurred, false otherwise.; * Use the diagnostic handler to get any diagnostic message.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Linker.h:210,message,message,210,interpreter/llvm-project/llvm/include/llvm-c/Linker.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Linker.h,1,['message'],['message']
Integrability,"/* Local variables */; // integer inta, intb, zcode;; /* -- LAPACK auxiliary routine (version 2.0) -- */; /* Univ. of Tennessee, Univ. of California Berkeley, NAG Ltd., */; /* Courant Institute, Argonne National Lab, and Rice University */; /* January 31, 1994 */; /* .. Scalar Arguments .. */; /* .. */; /* Purpose */; /* ======= */; /* LSAME returns .TRUE. if CA is the same letter as CB regardless of */; /* case. */; /* Arguments */; /* ========= */; /* CA (input) CHARACTER*1 */; /* CB (input) CHARACTER*1 */; /* CA and CB specify the single characters to be compared. */; /* ===================================================================== */; /* .. Intrinsic Functions .. */; /* .. */; /* .. Local Scalars .. */; /* .. */; /* .. Executable Statements .. */; /* Test if the characters are equal */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/mnlsame.cxx:77,rout,routine,77,math/minuit2/src/mnlsame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/mnlsame.cxx,1,['rout'],['routine']
Integrability,"/* Locate the colormap entries close enough to an update box to be candidates; * for the nearest entry to some cell(s) in the update box. The update box; * is specified by the center coordinates of its first cell. The number of; * candidate colormap entries is returned, and their colormap indexes are; * placed in colorlist[].; * This routine uses Heckbert's ""locally sorted search"" criterion to select; * the colors that need further consideration.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:336,rout,routine,336,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['rout'],['routine']
Integrability,/* Look up message string in proper table */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:11,message,message,11,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,1,['message'],['message']
Integrability,"/* Loop continuously, reading messages from the socket, invoking the; 	 * callback, and waiting repeatedly until an error occurs. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:30,message,messages,30,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['messages']
Integrability,"/* MAKEFIXED */; /*; Update the window with the last wsize (normally 32K) bytes written before; returning. If window does not exist yet, create it. This is only called; when a window is already in use, or when output has been written during this; inflate call, but the end of the deflate stream has not been reached yet.; It is also called to create a window for dictionary data when a dictionary; is loaded. Providing output buffers larger than 32K to inflate() should provide a speed; advantage, since only the last 32K of output is copied to the sliding window; upon return from inflate(), and since all distances after the first 32K of; output will fall in the output data, making match copies simpler and faster.; The advantage may be dependent on the size of the processor's data caches.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:740,depend,dependent,740,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,2,['depend'],['dependent']
Integrability,"/* MSG_MOUSEWHEEL is delivered to the foreground window. Work; * around that. Also, the position is in screen coordinates, not; * client coordinates as with the button messages.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:168,message,messages,168,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,1,['message'],['messages']
Integrability,"/* Macros for inflate() bit peeking and grabbing.; The usage is:. NEEDBITS(j); x = b & mask[j];; DUMPBITS(j). where NEEDBITS makes sure that b has at least j bits in it, and; DUMPBITS removes the bits from b. The macros use the variable k; for the number of bits in b. Normally, b and k are register; variables for speed, and are initialized at the begining of a; routine that uses these macros from a global bit buffer and count. In order to not ask for more bits than there are in the compressed; stream, the Huffman tables are constructed to only ask for just; enough bits to make up the end-of-block code (value 256). Then no; bytes need to be ""returned"" to the buffer at the end of the last; block. See the huft_build() routine.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:364,rout,routine,364,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,2,['rout'],['routine']
Integrability,/* Macros to simplify using the error and trace message stuff */; /* The first parameter is either type of cinfo pointer */; /* Fatal errors (print message and exit) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.h:48,message,message,48,graf2d/asimage/src/libAfterImage/libjpeg/jerror.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.h,2,['message'],['message']
Integrability,/* Main integration function */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:8,integrat,integration,8,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['integrat'],['integration']
Integrability,"/* Major TODO Items:; - Control dependent poison UB; - Strict mode - (i.e. must analyze every operand); - Poison through memory; - Function ABIs; - Full coverage of intrinsics, etc.. (ouch). Instructions w/Unclear Semantics:; - shufflevector - It would seem reasonable for an out of bounds mask element; to produce poison, but the LangRef does not state.; - all binary ops w/vector operands - The likely interpretation would be that; any element overflowing should produce poison for the entire result, but; the LangRef does not state.; - Floating point binary ops w/fmf flags other than (nnan, noinfs). It seems; strange that only certian flags should be documented as producing poison. Cases of clear poison semantics not yet implemented:; - Exact flags on ashr/lshr produce poison; - NSW/NUW flags on shl produce poison; - Inbounds flag on getelementptr produce poison; - fptosi/fptoui (out of bounds input) produce poison; - Scalable vector types for insertelement/extractelement; - Floating point binary ops w/fmf nnan/noinfs flags produce poison; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PoisonChecking.cpp:32,depend,dependent,32,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PoisonChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PoisonChecking.cpp,1,['depend'],['dependent']
Integrability,/* Make memory region fully uninitialized (without changing its contents).; This is a legacy interface that does not update origin information. Use; __msan_allocated_memory() instead. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/compiler.h:93,interface,interface,93,builtins/zstd/common/compiler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/compiler.h,1,['interface'],['interface']
Integrability,/* Make sure we don't depend upon the order of PNG_COLOR_8 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:22,depend,depend,22,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['depend'],['depend']
Integrability,"/* Manage the read buffer; this simply reallocates the buffer if it is not small; * enough (or if it is not allocated). The routine returns a pointer to the; * buffer; if an error occurs and 'warn' is set the routine returns NULL, else; * it will call png_error (via png_malloc) on failure. (warn == 2 means; * 'silent').; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:124,rout,routine,124,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,2,['rout'],['routine']
Integrability,"/* Map the Windows error number in ERROR to a locale-dependent error message; string and return a pointer to it. Typically, the values for ERROR come; from GetLastError. The string pointed to shall not be modified by the application, but may be; overwritten by a subsequent call to gz_strwinerror. The gz_strwinerror function does not change the current setting of; GetLastError. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:53,depend,dependent,53,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,2,"['depend', 'message']","['dependent', 'message']"
Integrability,/* Master routine for color selection */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:10,rout,routine,10,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['rout'],['routine']
Integrability,"/* Matches of length 3 are discarded if their distance exceeds TOO_FAR */; /* Values for max_lazy_match, good_match and max_chain_length, depending on; * the desired pack level (0..9). The values given below have been tuned to; * exclude worst case performance for pathological files. Better values may be; * found for specific files.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:138,depend,depending,138,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,1,['depend'],['depending']
Integrability,/* Maybe we should make those test lead to warning messages */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:51,message,messages,51,tree/treeplayer/src/TTreeFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx,1,['message'],['messages']
Integrability,/* Message is a valid request */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,Message,Message,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['Message'],['Message']
Integrability,/* Message is a valid response */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,Message,Message,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['Message'],['Message']
Integrability,/* Message levels and error codes */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps/gl2ps.h:3,Message,Message,3,graf3d/gl/src/gl2ps/gl2ps.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps/gl2ps.h,1,['Message'],['Message']
Integrability,"/* Minimum amount of lookahead, except at the end of the input file.; * See deflate.c for comments about the MIN_MATCH+1.; */; /* Values for max_lazy_match, good_match and max_chain_length, depending on; * the desired pack level (0..9). The values given below have been tuned to; * exclude worst case performance for pathological files. Better values may be; * found for specific files.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/deflate.c:190,depend,depending,190,graf2d/asimage/src/libAfterImage/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/deflate.c,1,['depend'],['depending']
Integrability,/* Missing messages */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkprivate-win32.h:11,message,messages,11,graf2d/win32gdk/gdk/src/gdk/win32/gdkprivate-win32.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkprivate-win32.h,1,['message'],['messages']
Integrability,/* Modify the sequence depending on where endPosInSequence lies */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c:23,depend,depending,23,builtins/zstd/compress/zstd_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress.c,1,['depend'],['depending']
Integrability,/* Multiple protocols -> accept the last one. */; /* This is just a quick fix if the client offers multiple; 				 * protocols. The handler should have a list of accepted; 				 * protocols on his own; 				 * and use it to select one protocol among those the client; 				 * has; 				 * offered.; 				 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:12,protocol,protocols,12,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,4,['protocol'],"['protocol', 'protocols']"
Integrability,/* My own external interface */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:19,interface,interface,19,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,1,['interface'],['interface']
Integrability,"/* N.B. Create a separate function instead of using (call function, function; value here) because in order to create the variables needed for the input; arg.'s which may be const.'s one has to do the creation within {}, but these; can never be placed within ()'s. Therefore one must create wrapper functions.; gcc, on the other hand may be able to avoid the wrapper functions. */; /* Prototypes are needed to correctly handle the value returned correctly. N.B.; Can only have prototype arg.'s with difficulty, a la G... table since FORTRAN; functions returning strings have extra arg.'s. Don't bother, since this only; causes a compiler warning to come up when one uses FCALLSCFUNn and CCALLSFFUNn; for the same function in the same source code. Something done by the experts in; debugging only.*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:290,wrap,wrapper,290,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,2,['wrap'],['wrapper']
Integrability,/* NB: can't use last_row_height here; it is input-side-dependent! */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdcoefct.c:56,depend,dependent,56,graf2d/asimage/src/libAfterImage/libjpeg/jdcoefct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdcoefct.c,2,['depend'],['dependent']
Integrability,/* NEED_SHORT_EXTERNAL_NAMES */; /* Compression module initialization routines */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h:70,rout,routines,70,graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,1,['rout'],['routines']
Integrability,/* NEED_SHORT_EXTERNAL_NAMES */; /* Extern declarations for the forward and inverse DCT routines. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdct.h:88,rout,routines,88,graf2d/asimage/src/libAfterImage/libjpeg/jdct.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdct.h,1,['rout'],['routines']
Integrability,"/* NOTE: P_LINEAR values to this routine must be 16-bit, but P_FILE values must; * be 8-bit.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:33,rout,routine,33,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['rout'],['routine']
Integrability,"/* NOTE: prior to 1.6.0 this routine set the 'location' field of the added; * unknowns to the location currently stored in the png_struct. This is; * invariably the wrong value on write. To fix this call the following API; * for each chunk in the list with the correct location. If you know your; * code won't be compiled on earlier versions you can rely on; * png_set_unknown_chunks(write-ptr, png_get_unknown_chunks(read-ptr)) doing; * the correct thing.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:29,rout,routine,29,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['rout'],['routine']
Integrability,/* NOTE: this routine is not used internally! */; /* Build a grayscale palette. Palette is assumed to be 1 << bit_depth; * large of png_color. This lets grayscale images be treated as; * paletted. Most useful for gamma correction and simplification; * of code. This API is not used internally.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:14,rout,routine,14,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['rout'],['routine']
Integrability,"/* Need to store protocol in Thread Local Storage */; /* If there is no Thread Local Storage, don't use ALPN */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:17,protocol,protocol,17,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['protocol'],['protocol']
Integrability,"/* Need to suspend */; /* After the first iMCU, change wraparound pointers to normal state */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c:55,wrap,wraparound,55,graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,1,['wrap'],['wraparound']
Integrability,"/* New APIs for enhanced option and error handling.; These mg_*2 API functions have the same purpose as their original versions,; but provide additional options and/or provide improved error diagnostics. Note: Experimental interfaces may change; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:223,interface,interfaces,223,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['interface'],['interfaces']
Integrability,/* New connections must start with new protocol negotiation */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:39,protocol,protocol,39,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['protocol'],['protocol']
Integrability,"/* No need to call _endthreadex(), the actual thread starter routine; * in MSVCRT (see crt/src/threadex.c:_threadstartex) calls; * _endthreadex() for us.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c:61,rout,routine,61,graf2d/win32gdk/gdk/src/glib/giowin32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c,2,['rout'],['routine']
Integrability,/* No need to print an error message. We simply abandon the compression; the buffer cannot be compressed or compressed buffer would be larger than original buffer; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/lzma/src/ZipLZMA.c:29,message,message,29,core/lzma/src/ZipLZMA.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lzma/src/ZipLZMA.c,1,['message'],['message']
Integrability,/* No user write routine (MRB) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c:17,rout,routine,17,graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,1,['rout'],['routine']
Integrability,"/* Non-fatal error in libpng, chunk name is prepended to message. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:57,message,message,57,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['message'],['message']
Integrability,"/* Not enough to compute the hash.; * We will miss any synchronization points in this RSYNC_LENGTH byte; * window. However, since it depends only in the internal buffers, if the; * state is already synchronized, we will remain synchronized.; * Additionally, the probability that we miss a synchronization point is; * low: RSYNC_LENGTH / targetSectionSize.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:55,synchroniz,synchronization,55,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,5,"['depend', 'synchroniz']","['depends', 'synchronization', 'synchronized']"
Integrability,"/* Note : This is an internal API.; * These APIs used to be exposed with ZSTDLIB_API,; * because it used to be the only way to invoke MT compression.; * Now, you must use ZSTD_compress2 and ZSTD_compressStream2() instead.; *; * This API requires ZSTD_MULTITHREAD to be defined during compilation,; * otherwise ZSTDMT_createCCtx*() will fail.; */; /* === Dependencies === */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.h:354,Depend,Dependencies,354,builtins/zstd/compress/zstdmt_compress.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.h,1,['Depend'],['Dependencies']
Integrability,"/* Note: Prevent compiler warnings, null #define PROTOCCALLSFSUB14/20 after; #include-ing cfortran.h if calling the FORTRAN wrapper within the same; source code where the wrapper is created. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:124,wrap,wrapper,124,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,2,['wrap'],['wrapper']
Integrability,/* Note: this depends on the fact that we can't switch; 	 * sources from one main context to another; 	 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.c:14,depend,depends,14,graf2d/win32gdk/gdk/src/glib/gmain.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.c,1,['depend'],['depends']
Integrability,"/* Now double check the output length, put in a custom message if it is; * too long. Otherwise ensure the z_stream::msg pointer is set to; * something.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:55,message,message,55,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['message'],['message']
Integrability,"/* Now left-justify the portion of the data to be kept.; 	 * We can't use a single jcopy_block_row() call because that routine; 	 * depends on memcpy(), whose behavior is unspecified for overlapping; 	 * source and destination areas. Sigh.; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:119,rout,routine,119,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,2,"['depend', 'rout']","['depends', 'routine']"
Integrability,"/* Now read the rows. Do this here if it is possible to read directly into; * the output buffer, otherwise allocate a local row buffer of the maximum; * size libpng requires and call the relevant processing routine safely.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:207,rout,routine,207,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['rout'],['routine']
Integrability,/* Number of bytes after end of data in window to initialize in order to avoid; memory checker errors from longest match routines */; /* in trees.c */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:121,rout,routines,121,builtins/zlib/deflate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h,2,['rout'],['routines']
Integrability,"/* Number of entries in the color-map */; /* In the event of an error or warning the following field will be set to a; * non-zero value and the 'message' field will contain a '\0' terminated; * string with the libpng error or warning message. If both warnings and; * an error were encountered, only the error is recorded. If there; * are multiple warnings, only the first one is recorded.; *; * The upper 30 bits of this value are reserved, the low two bits contain; * a value as follows:; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:145,message,message,145,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,2,['message'],['message']
Integrability,"/* Obsolete streaming functions (since v1.7.0); * degraded functionality; do not use!; *; * In order to perform streaming compression, these functions depended on data; * that is no longer tracked in the state. They have been preserved as well as; * possible: using them will still produce a correct output. However, they don't; * actually retain any history between compression calls. The compression ratio; * achieved will therefore be no better than compressing each chunk; * independently.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:151,depend,depended,151,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['depend'],['depended']
Integrability,"/* On normal machines we can apply MEMCOPY() and MEMZERO() to sample arrays; * and coefficient-block arrays. This won't work on 80x86 because the arrays; * are FAR and we're assuming a small-pointer memory model. However, some; * DOS compilers provide far-pointer versions of memcpy() and memset() even; * in the small-model libraries. These will be used if USE_FMEM is defined.; * Otherwise, the routines below do it the hard way. (The performance cost; * is not all that great, because these routines aren't very heavily used.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jutils.c:397,rout,routines,397,graf2d/asimage/src/libAfterImage/libjpeg/jutils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jutils.c,2,['rout'],['routines']
Integrability,"/* On power8 and later processors we can depend on Program Priority; (PRI) and associated ""very low"" PPI setting. Since we don't know; what PPI this thread is running at we: 1) save the current PRI; from the PPR SPR into a local GRP, 2) set the PRI to ""very low*; via the special or 31,31,31 encoding. 3) issue an ""isync"" to; insure the PRI change takes effect before we execute any more; instructions.; Now we can execute a lwsync (release barrier) while we execute; this thread at ""very low"" PRI. Finally we restore the original; PRI and continue execution. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/xmmintrin.h:41,depend,depend,41,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/xmmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/xmmintrin.h,1,['depend'],['depend']
Integrability,"/* Opaque types. */; /**; * LLVM uses a polymorphic type hierarchy which C cannot represent, therefore; * parameters must be passed as base types. Despite the declared types, most; * of the functions provided operate only on branches of the type hierarchy.; * The declared parameter names are descriptive and specify which type is; * required. Additionally, each type hierarchy is documented along with the; * functions that operate upon it. For more detail, refer to LLVM's C++ code.; * If in doubt, refer to Core.cpp, which performs parameter downcasts in the; * form unwrap<RequiredType>(Param).; */; /**; * Used to pass regions of memory through LLVM interfaces.; *; * @see llvm::MemoryBuffer; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Types.h:655,interface,interfaces,655,interpreter/llvm-project/llvm/include/llvm-c/Types.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Types.h,1,['interface'],['interfaces']
Integrability,"/* Order size using quicksort. This implementation incorporates; * four optimizations discussed in Sedgewick:; *; * 1. Non-recursive, using an explicit stack of pointer that store the next; * array partition to sort. To save time, this maximum amount of space; * required to store an array of MAX_INT is allocated on the stack. Assuming; * a 32-bit integer, this needs only 32 * sizeof(stack_node) == 136 bits.; * Pretty cheap, actually.; *; * 2. Chose the pivot element using a median-of-three decision tree. This; * reduces the probability of selecting a bad pivot value and eliminates; * certain * extraneous comparisons.; *; * 3. Only quicksorts TOTAL_ELEMS / MAX_THRESH partitions, leaving insertion; * sort to order the MAX_THRESH items within each partition. This is a big; * win, since insertion sort is faster for small, mostly sorted array; * segments.; *; * 4. The larger of the two sub-partitions is always pushed onto the stack; * first, with the algorithm then concentrating on the smaller partition.; * This *guarantees* no more than log (n) stack size is needed (actually O(1); * in this case)!; */; /**; * g_qsort_with_data:; * @pbase: start of array to sort; * @total_elems: elements in the array; * @size: size of each element; * @compare_func: function to compare elements; * @user_data: data to pass to @compare_func; *; * This is just like the standard C qsort() function, but; * the comparison routine accepts a user data argument.; * ; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gqsort.c:1417,rout,routine,1417,graf2d/win32gdk/gdk/src/glib/gqsort.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gqsort.c,1,['rout'],['routine']
Integrability,/* POSIX dirent interface */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:16,interface,interface,16,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['interface'],['interface']
Integrability,"/* Parse a crop specification (written in X11 geometry style).; * The routine returns TRUE if the spec string is valid, FALSE if not.; *; * The crop spec string should have the format; *	<width>x<height>{+-}<xoffset>{+-}<yoffset>; * where width, height, xoffset, and yoffset are unsigned integers.; * Each of the elements can be omitted to indicate a default value.; * (A weakness of this style is that it is not possible to omit xoffset; * while specifying yoffset, since they look alike.); *; * This code is loosely based on XParseGeometry from the X11 distribution.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:70,rout,routine,70,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,1,['rout'],['routine']
Integrability,/* Perform the first integration */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:21,integrat,integration,21,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['integrat'],['integration']
Integrability,/* Pointer to routine to downsample a single component */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c:14,rout,routine,14,graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcsample.c,1,['rout'],['routine']
Integrability,/* Pointer to routine to upsample a single component */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c:14,rout,routine,14,graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdsample.c,1,['rout'],['routine']
Integrability,"/* Pointer to the beginning of the portion of the incoming websocket; 	 * message queue.; 	 * The original websocket upgrade request is never removed, so the queue; 	 * begins after it. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:74,message,message,74,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['message']
Integrability,"/* Pointer to the function that is used to get more core, or return core; to the system, for requests using this malloc descriptor. For memory; mapped regions, this is the mmap() based routine. There may also be; a single malloc descriptor that points to an sbrk() based routine; for systems without mmap() or for applications that call the mmalloc(); package with a NULL malloc descriptor. FIXME: For mapped regions shared by more than one process, this; needs to be maintained on a per-process basis. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h:185,rout,routine,185,core/clib/res/mmprivate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/res/mmprivate.h,2,['rout'],['routine']
Integrability,"/* Prepare message in buf, if required */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:11,message,message,11,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['message']
Integrability,/* Prevent infinite loop in coef ctlr's decompress_data routine; 	 * if user set output_scan_number larger than number of scans.; 	 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdinput.c:56,rout,routine,56,graf2d/asimage/src/libAfterImage/libjpeg/jdinput.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdinput.c,1,['rout'],['routine']
Integrability,"/* Print ObjC base types, type arguments, and protocol list if available. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/c-index-test/c-index-test.c:46,protocol,protocol,46,interpreter/llvm-project/clang/tools/c-index-test/c-index-test.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/c-index-test/c-index-test.c,1,['protocol'],['protocol']
Integrability,/* Print error message to the opened error log stream. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:15,message,message,15,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['message']
Integrability,"/* Print error message to the opened error log stream.; This utilizes the provided logging configuration.; conn: connection (not used for sending data, but to get perameters); fmt: format string without the line return; ...: variable argument list; Example:; mg_cry(conn,""i like %s"", ""logging""); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:15,message,message,15,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['message'],['message']
Integrability,/* Private fields for system-dependent backing-store management */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h:29,depend,dependent,29,graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,1,['depend'],['dependent']
Integrability,/* Protocol violation */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,Protocol,Protocol,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['Protocol'],['Protocol']
Integrability,"/* Provide simple macro statement wrappers (adapted from Perl):; * G_STMT_START { statements; } G_STMT_END;; * can be used as a single statement, as in; * if (x) G_STMT_START { ... } G_STMT_END; else ...; *; * For gcc we will wrap the statements within `({' and `})' braces.; * For SunOS they will be wrapped within `if (1)' and `else (void) 0',; * and otherwise within `do' and `while (0)'.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmacros.h:34,wrap,wrappers,34,graf2d/win32gdk/gdk/src/glib/gmacros.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmacros.h,3,['wrap'],"['wrap', 'wrapped', 'wrappers']"
Integrability,"/* QAGI: evaluate an integral over an infinite range using the; transformation. integrate(f(x),-Inf,Inf) = integrate((f((1-t)/t) + f(-(1-t)/t))/t^2,0,1). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:80,integrat,integrate,80,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,2,['integrat'],['integrate']
Integrability,"/* QAGIL: Evaluate an integral over an infinite range using the; transformation,. integrate(f(x),-Inf,b) = integrate(f(b-(1-t)/t)/t^2,0,1). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:82,integrat,integrate,82,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,2,['integrat'],['integrate']
Integrability,"/* QAGIU: Evaluate an integral over an infinite range using the; transformation. integrate(f(x),a,Inf) = integrate(f(a+(1-t)/t)/t^2,0,1). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:81,integrat,integrate,81,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,2,['integrat'],['integrate']
Integrability,/* ROOT type with STL container interface */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ESTLType.h:32,interface,interface,32,core/foundation/inc/ESTLType.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ESTLType.h,1,['interface'],['interface']
Integrability,"/* Read any remaining signature bytes from the stream and compare them with; * the correct PNG signature. It is possible that this routine is called; * with bytes already read from the signature, either because they have been; * checked by the calling application, or because of multiple calls to this; * routine.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpread.c:131,rout,routine,131,graf2d/asimage/src/libAfterImage/libpng/pngpread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpread.c,2,['rout'],['routine']
Integrability,/* Read frame payload from the first message in the queue into; 			 * data and advance the queue by moving the memory in place. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:37,message,message,37,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['message']
Integrability,/* Read from the socket into the next available location in the; 			 * message queue. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:71,message,message,71,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['message']
Integrability,"/* Read the data from whatever input you are using. The default routine; * reads from a file pointer. Note that this routine sometimes gets called; * with very small lengths, so you should implement some kind of simple; * buffering if you are using unbuffered reads. This should never be asked; * to read more than 64K on a 16-bit machine.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrio.c:64,rout,routine,64,graf2d/asimage/src/libAfterImage/libpng/pngrio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrio.c,2,['rout'],['routine']
Integrability,"/* Reads a module from the specified path, returning via the OutModule parameter; a module provider which performs lazy deserialization. Returns 0 on success.; Optionally returns a human-readable error message via OutMessage. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitReader.cpp:202,message,message,202,interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitReader.cpp,1,['message'],['message']
Integrability,"/* RegisterGdkClass; * is a wrapper function for RegisterWindowClassEx.; * It creates at least one unique class for every ; * GdkWindowType. If support for single window-specific icons; * is ever needed (e.g Dialog specific), every such window should; * get its own class; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkwindow-win32.c:28,wrap,wrapper,28,graf2d/win32gdk/gdk/src/gdk/win32/gdkwindow-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkwindow-win32.c,1,['wrap'],['wrapper']
Integrability,/* Remove a channel - this used to be 'png_do_strip_filler' but it used a; * somewhat weird combination of flags to determine what to do. All the calls; * to png_do_strip_filler are changed in 1.5.2 to call this instead with the; * correct arguments.; *; * The routine isn't general - the channel must be the channel at the start or; * end (not in the middle) of each pixel.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtrans.c:261,rout,routine,261,graf2d/asimage/src/libAfterImage/libpng/pngtrans.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtrans.c,1,['rout'],['routine']
Integrability,"/* Render a 24-bit RGB image in buf into the GdkImage, without dithering.; This assumes native byte ordering - what should really be done is to; check whether static_image->byte_order is consistent with the _ENDIAN; config flag, and if not, use a different function. This routine is faster than the one included with Gtk 1.0 for a number; of reasons:. 1. Shifting instead of lookup tables (less memory traffic). 2. Much less register pressure, especially because shifts are; in the code. 3. A memcpy is avoided (i.e. the transfer function). 4. On big-endian architectures, byte swapping is avoided. That said, it wouldn't be hard to make it even faster - just make an; inner loop that reads 3 words (i.e. 4 24-bit pixels), does a lot of; shifting and masking, then writes 2 words.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkrgb.c:272,rout,routine,272,graf2d/win32gdk/gdk/src/gdk/gdkrgb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkrgb.c,1,['rout'],['routine']
Integrability,"/* Replace the (error and abort), and warning functions with user; * supplied functions. If no messages are to be printed you must still; * write and use replacement functions. The replacement error_fn should; * still do a longjmp to the last setjmp location if you are using this; * method of error handling. If error_fn or warning_fn is NULL, the; * default function will be used.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:95,message,messages,95,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['message'],['messages']
Integrability,"/* Request any required workspace.; *; * This routine figures out the size that the output image will be; * (which implies that all the transform parameters must be set before; * it is called).; *; * We allocate the workspace virtual arrays from the source decompression; * object, so that all the arrays (both the original data and the workspace); * will be taken into account while making memory management decisions.; * Hence, this routine must be called after jpeg_read_header (which reads; * the image dimensions) and before jpeg_read_coefficients (which realizes; * the source's virtual arrays).; *; * This function returns FALSE right away if -perfect is given; * and transformation is not perfect. Otherwise returns TRUE.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:46,rout,routine,46,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,2,['rout'],['routine']
Integrability,"/* Requested interface unknown, bail with error. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rootql/main.c:13,interface,interface,13,misc/rootql/main.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rootql/main.c,2,['interface'],['interface']
Integrability,/* Resizable pointer array. This interface is much less complicated; * than the above. Add appends appends a pointer. Remove fills any; * cleared spot and shortens the array. remove_fast will again distort; * order. ; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/garray.h:33,interface,interface,33,graf2d/win32gdk/gdk/src/glib/garray.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/garray.h,1,['interface'],['interface']
Integrability,/* Resolve the link by calling the Resolve(); * interface function.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkdnd-win32.c:48,interface,interface,48,graf2d/win32gdk/gdk/src/gdk/win32/gdkdnd-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkdnd-win32.c,1,['interface'],['interface']
Integrability,"/* Return flags indicating compile-time options. Type sizes, two bits each, 00 = 16 bits, 01 = 32, 10 = 64, 11 = other:; 1.0: size of uInt; 3.2: size of uLong; 5.4: size of voidpf (pointer); 7.6: size of z_off_t. Compiler, assembler, and debug options:; 8: DEBUG; 9: ASMV or ASMINF -- use ASM code; 10: ZLIB_WINAPI -- exported functions use the WINAPI calling convention; 11: 0 (reserved). One-time table building (smaller code, but not thread-safe if true):; 12: BUILDFIXED -- build static block decoding tables when needed; 13: DYNAMIC_CRC_TABLE -- build CRC calculation tables when needed; 14,15: 0 (reserved). Library content (indicates missing functionality):; 16: NO_GZCOMPRESS -- gz* functions cannot compress (to avoid linking; deflate code when not needed); 17: NO_GZIP -- deflate can't write gzip streams, and inflate can't detect; and decode gzip streams (to avoid linking crc code); 18-19: 0 (reserved). Operation variations (changes in library functionality):; 20: PKZIP_BUG_WORKAROUND -- slightly more permissive inflate; 21: FASTEST -- deflate algorithm with only one, lowest compression level; 22,23: 0 (reserved). The sprintf variant used by gzprintf (zero is best):; 24: 0 = vs*, 1 = s* -- 1 means limited to 20 arguments after the format; 25: 0 = *nprintf, 1 = *printf -- 1 means gzprintf() not secure!; 26: 0 = returns value, 1 = void -- 1 means inferred string length returned. Remainder:; 27-31: 0 (reserved); */; /* utility functions */; /*; The following utility functions are implemented on top of the; basic stream-oriented functions. To simplify the interface, some; default options are assumed (compression level and memory usage,; standard memory allocation functions). The source code of these; utility functions can easily be modified if you need special options.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:1577,interface,interface,1577,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['interface'],['interface']
Integrability,"/* Return the home directory of the user. If there is a HOME; * environment variable, its value is returned, otherwise use some; * system-dependent way of finding it out. If no home directory can be; * deduced, return NULL.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutils.c:138,depend,dependent,138,graf2d/win32gdk/gdk/src/glib/gutils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutils.c,1,['depend'],['dependent']
Integrability,"/* Returns TRUE if, when truncating the current number, with BIT the; new LSB, with the given lost fraction and rounding mode, the result; would need to be rounded away from zero (i.e., by increasing the; signficand). This routine must work for fcZero of both signs, and; fcNormal numbers. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp:223,rout,routine,223,interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,1,['rout'],['routine']
Integrability,"/* Reverse the effects of png_do_shift. This routine merely shifts the; * pixels back to their significant bits values. Thus, if you have; * a row of bit depth 8, but only 5 are significant, this will shift; * the values back to 0 through 31.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:45,rout,routine,45,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['rout'],['routine']
Integrability,/* Router is only needed for packaging */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/Component.js:3,Rout,Router,3,ui5/eve7/Component.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/Component.js,1,['Rout'],['Router']
Integrability,/* Routine that actually outputs a trace or error message */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:3,Rout,Routine,3,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,2,"['Rout', 'message']","['Routine', 'message']"
Integrability,"/* SIGMA mapps differently depending on whether it is; 	 * final or not. The following simplified test would; 	 * fail in the case of combining marks following the; 	 * sigma, but I don't think that occurs in real text.; 	 * The test here matches that in ICU.; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/guniprop.c:27,depend,depending,27,graf2d/win32gdk/gdk/src/glib/guniprop.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/guniprop.c,1,['depend'],['depending']
Integrability,"/* Same, chunk name is prepended to message (only during read) */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:36,message,message,36,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['message'],['message']
Integrability,/* Save our program name - for error messages */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterbase.c:37,message,messages,37,graf2d/asimage/src/libAfterImage/afterbase.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterbase.c,1,['message'],['messages']
Integrability,/* Save started thread index to reuse in other external API calls; 	 * For the sake of thread synchronization all non-civetweb threads; 	 * can be considered as single external thread */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:94,synchroniz,synchronization,94,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['synchroniz'],['synchronization']
Integrability,/* Select MCU decoding routine */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c:23,rout,routine,23,graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,3,['rout'],['routine']
Integrability,"/* Select MCU decoding routine */; /* We retain the hard-coded case for full-size blocks.; * This is not necessary, but it appears that this version is slightly; * more performant in the given implementation.; * With an improved implementation we would prefer a single optimized; * function.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:23,rout,routine,23,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,1,['rout'],['routine']
Integrability,/* Select the proper DCT routine for this component's scaling */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcdctmgr.c:25,rout,routine,25,graf2d/asimage/src/libAfterImage/libjpeg/jcdctmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcdctmgr.c,1,['rout'],['routine']
Integrability,/* Select the proper IDCT routine for this component's scaling */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jddctmgr.c:26,rout,routine,26,graf2d/asimage/src/libAfterImage/libjpeg/jddctmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jddctmgr.c,1,['rout'],['routine']
Integrability,/* Send Websocket PING message */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:23,message,message,23,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['message']
Integrability,"/* Send a part of the message body, if chunked transfer encoding is set.; * Only use this function after sending a complete HTTP request or response; * header with ""Transfer-Encoding: chunked"" set. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:22,message,message,22,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['message'],['message']
Integrability,"/* Send data to a websocket client wrapped in a websocket frame. Uses; mg_lock_connection to ensure that the transmission is not interrupted,; i.e., when the application is proactively communicating and responding to; a request simultaneously. Send data to a websocket client wrapped in a websocket frame.; This function is available when civetweb is compiled with -DUSE_WEBSOCKET. Return:; 0 when the connection has been closed; -1 on error; >0 number of bytes written on success */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:35,wrap,wrapped,35,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,2,['wrap'],['wrapped']
Integrability,"/* Send data to a websocket server wrapped in a masked websocket frame. Uses; mg_lock_connection to ensure that the transmission is not interrupted,; i.e., when the application is proactively communicating and responding to; a request simultaneously. Send data to a websocket server wrapped in a masked websocket frame.; This function is available when civetweb is compiled with -DUSE_WEBSOCKET. Return:; 0 when the connection has been closed; -1 on error; >0 number of bytes written on success */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:35,wrap,wrapped,35,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,2,['wrap'],['wrapped']
Integrability,"/* Send data to the client using printf() semantics.; Works exactly like mg_write(), but allows to do message formatting. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:102,message,message,102,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['message'],['message']
Integrability,"/* Send ourselves a selection clear message so that gtk thinks we don't; * have the selection, and will claim it anew when needed, and; * we thus get a chance to store data in the Windows clipboard.; * Otherwise, if a gtkeditable does a copy to clipboard several times; * only the first one actually gets copied to the Windows clipboard,; * as only the first one causes a call to gdk_property_change.; *; * Hmm, there is something fishy with this. Cut and paste inside the; * same app didn't work, the gtkeditable immediately forgot the; * clipboard contents in gtk_editable_selection_clear as a result of; * this message. OTOH, when I changed gdk_selection_owner_get to; * always return NULL, it works. Sigh.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkselection-win32.c:36,message,message,36,graf2d/win32gdk/gdk/src/gdk/win32/gdkselection-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkselection-win32.c,2,['message'],['message']
Integrability,/* Send ourselves an ersatz selection notify message so that we actually; * fetch the data.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkselection-win32.c:45,message,message,45,graf2d/win32gdk/gdk/src/gdk/win32/gdkselection-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkselection-win32.c,2,['message'],['message']
Integrability,/* Send ourselves an ersatz selection request message so that; * gdk_property_change will be called to store the clipboard data.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkselection-win32.c:46,message,message,46,graf2d/win32gdk/gdk/src/gdk/win32/gdkselection-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkselection-win32.c,1,['message'],['message']
Integrability,"/* Set compression parameters according to pre-defined cLevel table.; * Note that exact compression parameters are dynamically determined,; * depending on both compression level and srcSize (when known).; * Default level is ZSTD_CLEVEL_DEFAULT==3.; * Special: value 0 means default, which is controlled by ZSTD_CLEVEL_DEFAULT.; * Note 1 : it's possible to pass a negative compression level.; * Note 2 : setting a level does not automatically set all other compression parameters; * to default. Setting this will however eventually dynamically impact the compression; * parameters which have not been manually set. The manually set; * ones will 'stick'. */; /* Advanced compression parameters :; * It's possible to pin down compression parameters to some specific values.; * In which case, these values are no longer dynamically selected by the compressor */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:142,depend,depending,142,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['depend'],['depending']
Integrability,"/* Set log message to ""empty"" */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:11,message,message,11,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['message']
Integrability,"/* Set or change the 'quality' (quantization) setting, using default tables.; * This is the standard quality-adjusting entry point for typical user; * interfaces; only those who want detailed control over quantization tables; * would use the preceding three routines directly.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c:151,interface,interfaces,151,graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,2,"['interface', 'rout']","['interfaces', 'routines']"
Integrability,"/* Set up the ""wraparound"" pointers at top and bottom of the pointer lists.; * This changes the pointer list state from top-of-image to the normal state.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c:15,wrap,wraparound,15,graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,1,['wrap'],['wraparound']
Integrability,"/* Shift pixel values to take advantage of whole range. Pass the; * true number of bits in bit_depth. The row should be packed; * according to row_info->bit_depth. Thus, if you had a row of; * bit depth 4, but the pixels only had values from 0 to 7, you; * would pass 3 as bit_depth, and this routine would translate the; * data to 0 to 15.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwtran.c:293,rout,routine,293,graf2d/asimage/src/libAfterImage/libpng/pngwtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwtran.c,1,['rout'],['routine']
Integrability,"/* Should not be required, but is safe */; /* Ensure the error message pointer is always set: */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:63,message,message,63,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['message'],['message']
Integrability,/* Sign depends on rounding mode; handled by caller. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp:8,depend,depends,8,interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,1,['depend'],['depends']
Integrability,"/* Since this is only a debugging stub, we can cheat a little by using; * fprintf directly rather than going through the trace message code.; * This is helpful because message parm array can't handle longs.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:127,message,message,127,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,2,['message'],['message']
Integrability,"/* Skip to next match if the match length cannot increase; * or if the match length is less than 2. Note that the checks below; * for insufficient lookahead only occur occasionally for performance; * reasons. Therefore uninitialized memory will be accessed, and; * conditional jumps will be made that depend on those values.; * However the length of the match is limited to the lookahead, so; * the output of deflate is not affected by the uninitialized values.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:301,depend,depend,301,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,3,['depend'],['depend']
Integrability,"/* So the message that results is ""<chunk> using zstream""; this is an; * internal error, but is very useful for debugging. i18n requirements; * are minimal.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:10,message,message,10,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,2,['message'],['message']
Integrability,"/* Splice( a, b ) is best described by the Guibas/Stolfi paper or the; * CS348a notes (see mesh.h). Basically it modifies the mesh so that; * a->Onext and b->Onext are exchanged. This can have various effects; * depending on whether a and b belong to different face or vertex rings.; * For more explanation see __gl_meshSplice() below.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/mesh.c:212,depend,depending,212,graf3d/eve7/glu/mesh.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/mesh.c,1,['depend'],['depending']
Integrability,"/* Starting with the hash of the previous RSYNC_LENGTH bytes, roll; * through the input. If we hit a synchronization point, then cut the; * job off, and tell the compressor to flush the job. Otherwise, load; * all the bytes and continue as normal.; * If we go too long without a synchronization point (targetSectionSize); * then a block will be emitted anyways, but this is okay, since if we; * are already synchronized we will remain synchronized.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:101,synchroniz,synchronization,101,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,4,['synchroniz'],"['synchronization', 'synchronized']"
Integrability,/* Step 1.2: Check websocket protocol version. */; /* The RFC version (https://tools.ietf.org/html/rfc6455) is 13. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:29,protocol,protocol,29,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['protocol'],['protocol']
Integrability,/* Step 1: Check websocket protocol version. */; /* Step 1.1: Check Sec-WebSocket-Key. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:27,protocol,protocol,27,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['protocol'],['protocol']
Integrability,"/* Step 1: allocate and initialize JPEG compression object */; /* We have to set up the error handler first, in case the initialization; 	* step fails. (Unlikely, but it could happen if you are out of memory.); 	* This routine fills in the contents of struct jerr, and returns jerr's; 	* address which we place into the link field in cinfo.; 	*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/export.c:219,rout,routine,219,graf2d/asimage/src/libAfterImage/export.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/export.c,1,['rout'],['routine']
Integrability,"/* Step 1: allocate and initialize JPEG decompression object */; /* We set up the normal JPEG error routines, then override error_exit. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c:100,rout,routines,100,graf2d/asimage/src/libAfterImage/import.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c,1,['rout'],['routines']
Integrability,/* Step by step initialization of ctx - depending on build options */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:40,depend,depending,40,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['depend'],['depending']
Integrability,/* Store error message in errmsg_buf */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:15,message,message,15,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['message']
Integrability,"/* Strip ""#nnnn "" from beginning of error message. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:42,message,message,42,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,2,['message'],['message']
Integrability,"/* Strip the prepended error numbers (""#nnn "") from error and warning; * messages before passing them to the error or warning handler.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:73,message,messages,73,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['message'],['messages']
Integrability,"/* Support WebSocket protocol. */; /* Will only work, if USE_WEBSOCKET is set. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:21,protocol,protocol,21,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['protocol'],['protocol']
Integrability,"/* Support common gateway interface (CGI). */; /* Will only work, if NO_CGI is not set. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:26,interface,interface,26,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['interface'],['interface']
Integrability,"/* Support routine: generate interleaved DC scan if possible, else N scans */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c:11,rout,routine,11,graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,1,['rout'],['routine']
Integrability,/* Support routine: generate one scan for each component */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c:11,rout,routine,11,graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,1,['rout'],['routine']
Integrability,/* Support routine: generate one scan for specified component */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c:11,rout,routine,11,graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcparam.c,1,['rout'],['routine']
Integrability,/* Synchronize the info 'valid' flags with the colorspace */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:3,Synchroniz,Synchronize,3,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['Synchroniz'],['Synchronize']
Integrability,/* System-dependent control info */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:10,depend,dependent,10,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,2,['depend'],['dependent']
Integrability,/* THIS IS A GENERATED FILE; *; * Do not change! Changing this file implies a protocol change!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/inc/xatom.h:78,protocol,protocol,78,graf2d/win32gdk/inc/xatom.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/inc/xatom.h,1,['protocol'],['protocol']
Integrability,"/* TODO (mid): error handling depending on the error code.; 			 * These codes are different between Windows and Linux.; 			 * Currently there is no problem with failing send calls,; 			 * if there is a reproducible situation, it should be; 			 * investigated in detail.; 			 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:30,depend,depending,30,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['depend'],['depending']
Integrability,"/* TODO: Define and document a link for UNIX domain sockets. */; /* There seems to be no official standard for this.; 			 * Common uses seem to be ""httpunix://"", ""http.unix://"" or; 			 * ""http+unix://"" as a protocol definition string, followed by; 			 * ""localhost"" or ""127.0.0.1"" or ""/tmp/unix/path"" or; 			 * ""%2Ftmp%2Funix%2Fpath"" (url % encoded) or; 			 * ""localhost:%2Ftmp%2Funix%2Fpath"" (domain socket path as port) or; 			 * """" (completely skipping the server name part). In any case, the; 			 * last part is the server local path. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:207,protocol,protocol,207,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['protocol'],['protocol']
Integrability,"/* TODO: The current implementation here just calls the old; 	 * implementations, without using any new options. This is just a first; 	 * step to test the new interfaces. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:160,interface,interfaces,160,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['interface'],['interfaces']
Integrability,"/* TODO: implement different limits for different types of chunk.; *; * The caller supplies *newlength set to the maximum length of the; * uncompressed data, but this routine allocates space for the prefix and; * maybe a '\0' terminator too. We have to assume that 'prefix_size' is; * limited only by the maximum chunk size.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:167,rout,routine,167,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['rout'],['routine']
Integrability,"/* The ""double dictionary"" mode, for use with e.g. ring buffers: the first part; * of the dictionary is passed as prefix, and the second via dictStart + dictSize.; * These routines are used only once, in LZ4_decompress_*_continue().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:172,rout,routines,172,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,1,['rout'],['routines']
Integrability,/* The 'name' is used for information only */; /* Routines for checking parts of an ICC profile. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:50,Rout,Routines,50,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['Rout'],['Routines']
Integrability,"/* The 'reason' is an arbitrary message, allow +79 maximum 195 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:32,message,message,32,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['message'],['message']
Integrability,/* The IShellLink interface supports the IPersistFile; * interface. Get an interface pointer to it.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkdnd-win32.c:18,interface,interface,18,graf2d/win32gdk/gdk/src/gdk/win32/gdkdnd-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkdnd-win32.c,3,['interface'],['interface']
Integrability,"/* The JPEG spec simply gives the ranges 0..13 for Ah and Al, but that; * seems wrong: the upper bound ought to depend on data precision.; * Perhaps they really meant 0..N+1 for N-bit precision.; * Here we allow 0..10 for 8-bit data; Al larger than 10 results in; * out-of-range reconstructed DC values during the first DC scan,; * which might cause problems for some decoders.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c:112,depend,depend,112,graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c,1,['depend'],['depend']
Integrability,"/* The application can compare zlibVersion and ZLIB_VERSION for consistency.; If the first character differs, the library code actually used is not; compatible with the zlib.h header file used by the application. This check; is automatically made by deflateInit and inflateInit.; */; /*; ZEXTERN int ZEXPORT deflateInit OF((z_streamp strm, int level));. Initializes the internal stream state for compression. The fields; zalloc, zfree and opaque must be initialized before by the caller. If; zalloc and zfree are set to Z_NULL, deflateInit updates them to use default; allocation functions. The compression level must be Z_DEFAULT_COMPRESSION, or between 0 and 9:; 1 gives best speed, 9 gives best compression, 0 gives no compression at all; (the input data is simply copied a block at a time). Z_DEFAULT_COMPRESSION; requests a default compromise between speed and compression (currently; equivalent to level 6). deflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough; memory, Z_STREAM_ERROR if level is not a valid compression level, or; Z_VERSION_ERROR if the zlib library version (zlib_version) is incompatible; with the version assumed by the caller (ZLIB_VERSION). msg is set to null; if there is no error message. deflateInit does not perform any compression:; this will be done by deflate().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:1230,message,message,1230,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['message'],['message']
Integrability,"/* The application can compare zlibVersion and ZLIB_VERSION for consistency.; If the first character differs, the library code actually used is; not compatible with the zlib.h header file used by the application.; This check is automatically made by deflateInit and inflateInit.; */; /*; ZEXTERN int ZEXPORT deflateInit OF((z_streamp strm, int level));. Initializes the internal stream state for compression. The fields; zalloc, zfree and opaque must be initialized before by the caller.; If zalloc and zfree are set to Z_NULL, deflateInit updates them to; use default allocation functions. The compression level must be Z_DEFAULT_COMPRESSION, or between 0 and 9:; 1 gives best speed, 9 gives best compression, 0 gives no compression at; all (the input data is simply copied a block at a time).; Z_DEFAULT_COMPRESSION requests a default compromise between speed and; compression (currently equivalent to level 6). deflateInit returns Z_OK if success, Z_MEM_ERROR if there was not; enough memory, Z_STREAM_ERROR if level is not a valid compression level,; Z_VERSION_ERROR if the zlib library version (zlib_version) is incompatible; with the version assumed by the caller (ZLIB_VERSION).; msg is set to null if there is no error message. deflateInit does not; perform any compression: this will be done by deflate().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:1227,message,message,1227,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['message'],['message']
Integrability,"/* The buffer wraps around, or they're switching to another buffer. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:14,wrap,wraps,14,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,1,['wrap'],['wraps']
Integrability,"/* The color type.; * A color consists of red, green and blue values in the; * range 0-65535 and a pixel value. The pixel value is highly; * dependent on the depth and colormap which this color will; * be used to draw into. Therefore, sharing colors between; * colormaps is a bad idea.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkcolor.h:141,depend,dependent,141,graf2d/win32gdk/gdk/src/gdk/gdkcolor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkcolor.h,1,['depend'],['dependent']
Integrability,"/* The current scaled-DCT routines require ISLOW-style divisor tables,; * so be sure to compile that code if either ISLOW or SCALING is requested.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcdctmgr.c:26,rout,routines,26,graf2d/asimage/src/libAfterImage/libjpeg/jcdctmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcdctmgr.c,1,['rout'],['routines']
Integrability,"/* The current scaled-IDCT routines require ISLOW-style multiplier tables,; * so be sure to compile that code if either ISLOW or SCALING is requested.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jddctmgr.c:27,rout,routines,27,graf2d/asimage/src/libAfterImage/libjpeg/jddctmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jddctmgr.c,1,['rout'],['routines']
Integrability,"/* The do_local_background case; called when all the following transforms are to; * be done:; *; * PNG_RGB_TO_GRAY; * PNG_COMPOSITE; * PNG_GAMMA; *; * This is a work-around for the fact that both the PNG_RGB_TO_GRAY and; * PNG_COMPOSITE code performs gamma correction, so we get double gamma; * correction. The fix-up is to prevent the PNG_COMPOSITE operation from; * happening inside libpng, so this routine sees an 8 or 16-bit gray+alpha; * row and handles the removal or pre-multiplication of the alpha channel.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:401,rout,routine,401,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['rout'],['routine']
Integrability,"/* The downsampled dimensions are the component's actual, unpadded number; * of samples at the main buffer (preprocessing/compression interface);; * DCT scaling is included, so; * downsampled_width = ceil(image_width * Hi/Hmax * DCT_h_scaled_size/DCTSIZE); * and similarly for height.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:134,interface,interface,134,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['interface'],['interface']
Integrability,/* The following defines a character used by CFORTRAN.H to flag the end of a; string coming out of a FORTRAN routine. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:109,rout,routine,109,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['rout'],['routine']
Integrability,/* The following is here *only* for access by debugging routines */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.h:56,rout,routines,56,graf3d/eve7/glu/sweep.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/sweep.h,1,['rout'],['routines']
Integrability,"/* The following used to be declared (as globals) in ZDeflate.h */; /* ===========================================================================; * Local data used by the ""longest match"" routines.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h:189,rout,routines,189,core/zip/src/Bits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.h,1,['rout'],['routines']
Integrability,"/* The following virtual functions are used in register allocation.; * They are not implemented because the existing interface and the logic; * at the caller side do not work for the elementized vector load and store.; *; * virtual unsigned isLoadFromStackSlot(const MachineInstr *MI,; * int &FrameIndex) const;; * virtual unsigned isStoreToStackSlot(const MachineInstr *MI,; * int &FrameIndex) const;; * virtual void storeRegToStackSlot(MachineBasicBlock &MBB,; * MachineBasicBlock::iterator MBBI,; * unsigned SrcReg, bool isKill, int FrameIndex,; * const TargetRegisterClass *RC,; * Register VReg) const;; * virtual void loadRegFromStackSlot(MachineBasicBlock &MBB,; * MachineBasicBlock::iterator MBBI,; * unsigned DestReg, int FrameIndex,; * const TargetRegisterClass *RC,; * const TargetRegisterInfo *TRI,; * Register VReg) const;; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXInstrInfo.h:117,interface,interface,117,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXInstrInfo.h,1,['interface'],['interface']
Integrability,"/* The headers ""Host"", ""Sec-WebSocket-Key"", ""Sec-WebSocket-Protocol"" and; 		 * ""Sec-WebSocket-Version"" are also required.; 		 * Don't check them here, since even an unsupported websocket protocol; 		 * request still IS a websocket request (in contrast to a standard HTTP; 		 * request). It will fail later in handle_websocket_request.; 		 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:59,Protocol,Protocol,59,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,"['Protocol', 'protocol']","['Protocol', 'protocol']"
Integrability,"/* The internal buffer is just 192 bytes - enough for all our messages,; * overflow doesn't happen because this code checks! If someone figures; * out how to send us a message longer than 192 bytes, all that will; * happen is that the message will be truncated appropriately.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:62,message,messages,62,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,3,['message'],"['message', 'messages']"
Integrability,"/* The keypad decimal key should also be passed on as the decimal; * sign ('.' or ',' depending on the Windows locale settings,; * apparently). So wait for the WM_CHAR here, also.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:86,depend,depending,86,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,1,['depend'],['depending']
Integrability,/* The low-level integration rules in QUADPACK are identified by small; integers (1-6). We'll use symbolic constants to refer to them. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:17,integrat,integration,17,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['integrat'],['integration']
Integrability,/* The message ID code and any parameters are saved here.; * A message can have one string parameter or up to 8 int parameters.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:7,message,message,7,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,2,['message'],['message']
Integrability,/* The new mode call back routine */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c:26,rout,routine,26,interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c,2,['rout'],['routine']
Integrability,/* The output reference is to a Objective-C message ref. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DisassemblerTypes.h:44,message,message,44,interpreter/llvm-project/llvm/include/llvm-c/DisassemblerTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DisassemblerTypes.h,1,['message'],['message']
Integrability,/* The output reference is to a Objective-C message. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DisassemblerTypes.h:44,message,message,44,interpreter/llvm-project/llvm/include/llvm-c/DisassemblerTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DisassemblerTypes.h,1,['message'],['message']
Integrability,/* The palette case has already been handled in the _init routine. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:58,rout,routine,58,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['rout'],['routine']
Integrability,"/* The parse routine is meant for dates typed in by a user, so it; * permits many formats but tries to catch common typos. If your data; * needs to be strictly validated, it is not an appropriate function.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdate.h:13,rout,routine,13,graf2d/win32gdk/gdk/src/glib/gdate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdate.h,1,['rout'],['routine']
Integrability,/* The protocol is a comma separated list of names. */; /* The server must only return one value from this list. */; /* First check if it is a list or just a single value. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:7,protocol,protocol,7,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['protocol'],['protocol']
Integrability,"/* The request sent by the client could not be understood by; 			 * the server, or it was incomplete or a timeout. Send an; 			 * error message and close the connection. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:136,message,message,136,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['message']
Integrability,"/* The rest of these check to see if the valid field has the appropriate; * flag set, and if it does, writes the chunk.; *; * 1.6.0: COLORSPACE support controls the writing of these chunks too, and; * the chunks will be written if the WRITE routine is there and; * information * is available in the COLORSPACE. (See; * png_colorspace_sync_info in png.c for where the valid flags get set.); *; * Under certain circumstances the colorspace can be invalidated without; * syncing the info_struct 'valid' flags; this happens if libpng detects; * an error and calls png_error while the color space is being set, yet; * the application continues writing the PNG. So check the 'invalid'; * flag here too.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:241,rout,routine,241,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,1,['rout'],['routine']
Integrability,"/* The version tests may need to be added to, but the problem warning has; * consistently been fixed in GCC versions which obtain wide-spread release.; * The problem is that many versions of GCC rearrange comparison expressions in; * the optimizer in such a way that the results of the comparison will change; * if signed integer overflow occurs. Such comparisons are not permitted in; * ANSI C90, however GCC isn't clever enough to work out that that do not occur; * below in png_ascii_from_fp and png_muldiv, so it produces a warning with; * -Wextra. Unfortunately this is highly dependent on the optimizer and the; * machine architecture so the warning comes and goes unpredictably and is; * impossible to ""fix"", even were that a good idea.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:582,depend,dependent,582,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['depend'],['dependent']
Integrability,"/* The wraparound pointers at top and bottom will be filled later; * (see set_wraparound_pointers, below). Initially we want the ""above""; * pointers to duplicate the first actual data line. This only needs; * to happen in xbuffer[0].; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c:7,wrap,wraparound,7,graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmainct.c,1,['wrap'],['wraparound']
Integrability,"/* There are several different allowed syntax variants:; 		 * - ""80"" for a single port using every network interface; 		 * - ""localhost:80"" for a single port using only localhost; 		 * - ""80,localhost:8080"" for two ports, one bound to localhost; 		 * - ""80,127.0.0.1:8084,[::1]:8086"" for three ports, one bound; 		 * to IPv4 localhost, one to IPv6 localhost; 		 * - ""+80"" use port 80 for IPv4 and IPv6; 		 * - ""+80r,+443s"" port 80 (HTTP) is a redirect to port 443 (HTTPS),; 		 * for both: IPv4 and IPv4; 		 * - ""+443s,localhost:8080"" port 443 (HTTPS) for every interface,; 		 * additionally port 8080 bound to localhost connections; 		 *; 		 * If we just look for 's' anywhere in the string, ""localhost:80""; 		 * will be detected as SSL (false positive).; 		 * Looking for 's' after a digit may cause false positives in; 		 * ""my24service:8080"".; 		 * Looking from 's' backward if there are only ':' and numbers; 		 * before will not work for ""24service:8080"" (non SSL, port 8080); 		 * or ""24s"" (SSL, port 24).; 		 *; 		 * Remark: Initially hostnames were not allowed to start with a; 		 * digit (according to RFC 952), this was allowed later (RFC 1123,; 		 * Section 2.1).; 		 *; 		 * To get this correct, the entire string must be parsed as a whole,; 		 * reading it as a list element for element and parsing with an; 		 * algorithm equivalent to parse_port_string.; 		 *; 		 * In fact, we use local interface names here, not arbitrary; 		 * hostnames, so in most cases the only name will be ""localhost"".; 		 *; 		 * So, for now, we use this simple algorithm, that may still return; 		 * a false positive in bizarre cases.; 		 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:107,interface,interface,107,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,3,['interface'],['interface']
Integrability,"/* These buffer sizes are softly recommended.; * They are not required : ZSTD_compressStream*() happily accepts any buffer size, for both input and output.; * Respecting the recommended size just makes it a bit easier for ZSTD_compressStream*(),; * reducing the amount of memory shuffling and buffering, resulting in minor performance savings.; *; * However, note that these recommendations are from the perspective of a C caller program.; * If the streaming interface is invoked from some other language,; * especially managed ones such as Java or Go, through a foreign function interface such as jni or cgo,; * a major performance rule is to reduce crossing such interface to an absolute minimum.; * It's not rare that performance ends being spent more into the interface, rather than compression itself.; * In which cases, prefer using large buffers, as large as practical,; * for both input and output, to reduce the nb of roundtrips.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:459,interface,interface,459,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,4,['interface'],['interface']
Integrability,/* These depend on the C library. Using this file means the we; * use the (bundled) Microsoft msvcrt.dll.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/glibconfig-bogus.h:9,depend,depend,9,graf2d/win32gdk/gdk/src/glib/glibconfig-bogus.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/glibconfig-bogus.h,1,['depend'],['depend']
Integrability,"/* These functions support 'formatted' warning messages with up to; * PNG_WARNING_PARAMETER_COUNT parameters. In the format string the parameter; * is introduced by @<number>, where 'number' starts at 1. This follows the; * standard established by X/Open for internationalizable error messages.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:47,message,messages,47,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,2,['message'],['messages']
Integrability,/* These macros may need to be architecture dependent. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:44,depend,dependent,44,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['depend'],['dependent']
Integrability,/* These routines are exported to allow insertion of extra markers */; /* Probably only COM and APPn markers should be written this way */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h:9,rout,routines,9,graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,1,['rout'],['routines']
Integrability,/* These settings control the formatting of messages in png.c and pngerror.c */; /* Moved to pngdebug.h at 1.5.0 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngdebug.h:44,message,messages,44,graf2d/asimage/src/libAfterImage/libpng/pngdebug.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngdebug.h,1,['message'],['messages']
Integrability,"/* These utilities are used internally to build an error message that relates; * to the current chunk. The chunk name comes from png_ptr->chunk_name,; * which is used to prefix the message. The message is limited in length; * to 63 bytes. The name characters are output as hex digits wrapped in []; * if the character is invalid.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:57,message,message,57,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,4,"['message', 'wrap']","['message', 'wrapped']"
Integrability,/* Thin wrappers around iconv; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.h:8,wrap,wrappers,8,graf2d/win32gdk/gdk/src/glib/gconvert.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.h,1,['wrap'],['wrappers']
Integrability,"/* This Source Code Form is subject to the terms of the Mozilla Public; * License, v. 2.0. If a copy of the MPL was not distributed with this; * file, You can obtain one at https://mozilla.org/MPL/2.0/. */; /**; * @file; * Adapter between for KDTree and CDT; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/LocatorKDTree.h:223,Adapter,Adapter,223,math/mathcore/src/CDT/LocatorKDTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/LocatorKDTree.h,1,['Adapter'],['Adapter']
Integrability,"/* This allows Pvariables for ARGS. ARGF machinery is above ARGFP.; * B is not needed because the variable may be changed by the Fortran routine,; * but because B is the only way to access an arbitrary macro argument. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:137,rout,routine,137,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['rout'],['routine']
Integrability,/* This check is just done for the error reporting - the routine always; * returns true when the 'from' argument corresponds to sRGB (2).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:57,rout,routine,57,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['rout'],['routine']
Integrability,"/* This default message will usually be overwritten. */; /* Yes, a fixed size buffer is bad. So sue me. But g_error is never; * with huge strings, is it? */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmessages.c:16,message,message,16,graf2d/win32gdk/gdk/src/glib/gmessages.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmessages.c,1,['message'],['message']
Integrability,/* This defines the conversion preferences depending on the current; langauge tag. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iso2022_jp2.h:43,depend,depending,43,graf2d/win32gdk/gdk/src/iconv/iso2022_jp2.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iso2022_jp2.h,1,['depend'],['depending']
Integrability,"/* This does set the colorspace gAMA and cHRM values too, but doesn't set the; * flags to write them, if it returns false there was a problem and an error; * message has already been output (but the colorspace may still need to be; * synced to record the invalid flag).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:158,message,message,158,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['message'],['message']
Integrability,"/* This file is part of the Vc project; Copyright (C) 2009-2010 Matthias Kretz <kretz@kde.org>. Permission to use, copy, modify, and distribute this software; and its documentation for any purpose and without fee is hereby; granted, provided that the above copyright notice appear in all; copies and that both that the copyright notice and this; permission notice and warranty disclaimer appear in supporting; documentation, and that the name of the author not be used in; advertising or publicity pertaining to distribution of the; software without specific, written prior permission. The author disclaim all warranties with regard to this; software, including all implied warranties of merchantability; and fitness. In no event shall the author be liable for any; special, indirect or consequential damages or any damages; whatsoever resulting from loss of use, data or profits, whether; in an action of contract, negligence or other tortious action,; arising out of or in connection with the use or performance of; this software. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/testVc.cxx:906,contract,contract,906,test/testVc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/testVc.cxx,1,['contract'],['contract']
Integrability,"/* This function allows the application to supply a new input function; * for libpng if standard C streams aren't being used.; *; * This function takes as its arguments:; *; * png_ptr - pointer to a png input data structure; *; * io_ptr - pointer to user supplied structure containing info about; * the input functions. May be NULL.; *; * read_data_fn - pointer to a new input function that takes as its; * arguments a pointer to a png_struct, a pointer to; * a location where input data can be stored, and a 32-bit; * unsigned int that is the number of bytes to be read.; * To exit and output any fatal error messages the new write; * function should call png_error(png_ptr, ""Error msg"").; * May be NULL, in which case libpng's default function will; * be used.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrio.c:610,message,messages,610,graf2d/asimage/src/libAfterImage/libpng/pngrio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrio.c,1,['message'],['messages']
Integrability,"/* This function allows the application to supply new output functions for; * libpng if standard C streams aren't being used.; *; * This function takes as its arguments:; * png_ptr - pointer to a png output data structure; * io_ptr - pointer to user supplied structure containing info about; * the output functions. May be NULL.; * write_data_fn - pointer to a new output function that takes as its; * arguments a pointer to a png_struct, a pointer to; * data to be written, and a 32-bit unsigned int that is; * the number of bytes to be written. The new write; * function should call png_error(png_ptr, ""Error msg""); * to exit and output any fatal error messages. May be; * NULL, in which case libpng's default function will; * be used.; * flush_data_fn - pointer to a new flush function that takes as its; * arguments a pointer to a png_struct. After a call to; * the flush function, there should be no data in any buffers; * or pending transmission. If the output method doesn't do; * any buffering of output, a function prototype must still be; * supplied although it doesn't have to do anything. If; * PNG_WRITE_FLUSH_SUPPORTED is not defined at libpng compile; * time, output_flush_fn will be ignored, although it must be; * supplied for compatibility. May be NULL, in which case; * libpng's default function will be used, if; * PNG_WRITE_FLUSH_SUPPORTED is defined. This is not; * a good idea if io_ptr does not point to a standard; * *FILE structure.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwio.c:655,message,messages,655,graf2d/asimage/src/libAfterImage/libpng/pngwio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwio.c,1,['message'],['messages']
Integrability,"/* This function is called once for every PNG image (except for PNG images; * that only use PNG_FILTER_VALUE_NONE for all rows) to set the; * implementations required to reverse the filtering of PNG rows. Reversing; * the filter is the first transformation performed on the row data. It is; * performed in place, therefore an implementation can be selected based on; * the image pixel format. If the implementation depends on image width then; * take care to ensure that it works correctly if the image is interlaced -; * interlacing causes the actual row width to vary.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:415,depend,depends,415,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['depend'],['depends']
Integrability,/* This function returns the IUnknown interface so set the refCount to one. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rootql/main.c:38,interface,interface,38,misc/rootql/main.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rootql/main.c,2,['interface'],['interface']
Integrability,"/* This internal function is called from png_read_start_row in pngrutil.c; * and it is called before the 'rowbytes' calculation is done, so the code; * in here can change or update the transformations flags.; *; * First do updates that do not depend on the details of the PNG image data; * being processed.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:243,depend,depend,243,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['depend'],['depend']
Integrability,/* This is called to check a new gamma value against an existing one. The; * routine returns false if the new gamma value should not be written.; *; * 'from' says where the new gamma value comes from:; *; * 0: the new gamma value is the libpng estimate for an ICC profile; * 1: the new gamma value comes from a gAMA chunk; * 2: the new gamma value comes from an sRGB chunk; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:77,rout,routine,77,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['rout'],['routine']
Integrability,"/* This is much harder to do simply (and quickly). Perhaps; * we need to go through a median cut routine, but those; * don't always behave themselves with only a few colors; * as input. So we will just find the closest two colors,; * and throw out one of them (chosen somewhat randomly).; * [We don't understand this at all, so if someone wants to; * work on improving it, be our guest - AED, GRP]; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c:97,rout,routine,97,graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrtran.c,1,['rout'],['routine']
Integrability,"/* This is similar to png_text_compress, above, except that it does not require; * all of the data at once and, instead of buffering the compressed result,; * writes it as IDAT chunks. Unlike png_text_compress it *can* png_error out; * because it calls the write interface. As a result it does its own error; * reporting and does not return an error code. In the event of error it will; * just call png_error. The input data length may exceed 32-bits. The 'flush'; * parameter is exactly the same as that to deflate, with the following; * meanings:; *; * Z_NO_FLUSH: normal incremental output of compressed data; * Z_SYNC_FLUSH: do a SYNC_FLUSH, used by png_write_flush; * Z_FINISH: this is the end of the input, do a Z_FINISH and clean up; *; * The routine manages the acquire and release of the png_ptr->zstream by; * checking and (at the end) clearing png_ptr->zowner; it does some sanity; * checks on the 'mode' flags while doing this.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:263,interface,interface,263,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,2,"['interface', 'rout']","['interface', 'routine']"
Integrability,/* This is the first missing function.; 					 * Create a new error message. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:67,message,message,67,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['message']
Integrability,"/* This is the string MSH_MOUSEWHEEL from zmouse.h,; * http://www.microsoft.com/mouse/intellimouse/sdk/zmouse.h; * This message is used by mouse drivers than cannot generate WM_MOUSEWHEEL; * or on Win95.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:120,message,message,120,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,1,['message'],['message']
Integrability,"/* This is used for the transformation routines, as some of them; * change these values for the row. It also should enable using; * the routines for other purposes.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:39,rout,routines,39,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,2,['rout'],['routines']
Integrability,/* This is used to add polling for Windows messages. GDK (GTK+) programs; * should *not* use this.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.h:43,message,messages,43,graf2d/win32gdk/gdk/src/glib/gmain.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.h,1,['message'],['messages']
Integrability,/* This is used to add polling for Windows messages. GDK (GTk+) programs; * should *not* use this.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.h:43,message,messages,43,graf2d/win32gdk/gdk/src/glib/giochannel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giochannel.h,1,['message'],['messages']
Integrability,/* This is yet anothermissing function.; 					 * Append existing error message. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:71,message,message,71,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['message']
Integrability,"/* This part of the routine is only executed if, due to a difficult; integrand, subdivision increased the error estimate. In the normal; case the insert procedure should start after the nrmax-th largest; error estimate. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:20,rout,routine,20,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['rout'],['routine']
Integrability,/* This provides the non-ANSI (far) memory allocation routines. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:54,rout,routines,54,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['rout'],['routines']
Integrability,"/* This routine is heavily used, so it's worth coding it tightly. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcdctmgr.c:8,rout,routine,8,graf2d/asimage/src/libAfterImage/libjpeg/jcdctmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcdctmgr.c,2,['rout'],['routine']
Integrability,"/* This routine is heavily used, so it's worth coding tightly. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:8,rout,routine,8,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,3,['rout'],['routine']
Integrability,"/* This routine must process all the data it has been given; * before returning, calling the row callback as required to; * handle the uncompressed results.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpread.c:8,rout,routine,8,graf2d/asimage/src/libAfterImage/libpng/pngpread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpread.c,1,['rout'],['routine']
Integrability,/* Transform masks for the high-level interface */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:38,interface,interface,38,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['interface'],['interface']
Integrability,/* Transforms vertex depending on the actual blending function -; currently the vertex v is considered as source vertex and its; alpha value is changed to 1.0 if source blending GL_ONE is; active. This might be extended in the future */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:21,depend,depending,21,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['depend'],['depending']
Integrability,/* Translate a Win32 error code (as returned by GetLastError()) into; * the corresponding message. The returned string should be deallocated; * with g_free().; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gwin32.h:90,message,message,90,graf2d/win32gdk/gdk/src/glib/gwin32.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gwin32.h,1,['message'],['message']
Integrability,/* Transverse transpose is equivalent to; * 1. 180 degree rotation;; * 2. Transposition;; * or; * 1. Horizontal mirroring;; * 2. Transposition;; * 3. Horizontal mirroring.; * These steps are merged into a single processing routine.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c:223,rout,routine,223,graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.c,1,['rout'],['routine']
Integrability,"/* Turn on default checking for mmalloc/mrealloc/mfree, for the heap specified; by MD. If FUNC is non-NULL, it is a pointer to the function to call; to abort whenever memory corruption is detected. By default, this is the; standard library function abort(). Note that we disallow installation of initial checking hooks if mmalloc; has been called at any time for this particular heap, since if any region; that is allocated prior to installation of the hooks is subsequently; reallocated or freed after installation of the hooks, it is guaranteed; to trigger a memory corruption error. We do this by checking the state; of the MMALLOC_INITIALIZED flag. However, we can call this function at any time after the initial call,; to update the function pointers to the checking routines and to the; user defined corruption handler routine, as long as these function pointers; have been previously extablished by the initial call. Note that we; do this automatically when remapping an previously used heap, to ensure; that the hooks get updated to the correct values, although the corruption; handler pointer gets set back to the default. The application can then; call mmcheck to use a different corruption handler if desired. Returns non-zero if checking is successfully enabled, zero otherwise. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c:773,rout,routines,773,core/clib/src/mmcheck.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmcheck.c,2,['rout'],"['routine', 'routines']"
Integrability,"/* Uh-oh. Report corrupted data to user and stuff zeroes into; * the data stream, so that we can produce some kind of image.; * We use a nonvolatile flag to ensure that only one warning message; * appears per data segment.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:186,message,message,186,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,1,['message'],['message']
Integrability,"/* Uncommenting the following lines activates an even more fine; grained distinction between triangle types - please don't delete,; a remarkable amount of PDF handling code inside this file depends; on it if activated */; /*; t->prop = T_CONST_COLOR;; for(i = 0; i < 3; ++i){; if(!GL2PS_ZERO(t->vertex[0].rgba[i] - t->vertex[1].rgba[i]) ||; !GL2PS_ZERO(t->vertex[1].rgba[i] - t->vertex[2].rgba[i])){; t->prop = T_VAR_COLOR;; break;; }; }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:190,depend,depends,190,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['depend'],['depends']
Integrability,"/* Update the CRC after writing the data,; * in case the user I/O routine alters it.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:66,rout,routine,66,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['rout'],['routine']
Integrability,/* Upgrade to another protocol */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:22,protocol,protocol,22,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['protocol'],['protocol']
Integrability,/* Use PNG_REMOVED to comment out a removed interface. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngconf.h:44,interface,interface,44,graf2d/asimage/src/libAfterImage/libpng/pngconf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngconf.h,1,['interface'],['interface']
Integrability,"/* Use read() to load a buffer -- return -1 on error, otherwise 0. Read from; state->fd, and update state->eof, state->err, and state->msg as appropriate.; This function needs to loop on read(), since read() is not guaranteed to; read the number of bytes requested, depending on the type of descriptor. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c:266,depend,depending,266,builtins/zlib/gzread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c,1,['depend'],['depending']
Integrability,/* Used to compute the rolling hash.; * Depends on ldmParams.minMatchLength */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_internal.h:40,Depend,Depends,40,builtins/zstd/compress/zstd_compress_internal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_compress_internal.h,1,['Depend'],['Depends']
Integrability,/* User write routine (MRB) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c:14,rout,routine,14,graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libungif/egif_lib.c,1,['rout'],['routine']
Integrability,/* Utility routines in jutils.c */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h:11,rout,routines,11,graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,1,['rout'],['routines']
Integrability,"/* Validate symbols as being reasonable.; * For AC tables, we make no check, but accept all byte values 0..255.; * For DC tables, we require the symbols to be in range 0..15.; * (Tighter bounds could be applied depending on the data depth and mode,; * but this is sufficient to ensure safe decoding.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:211,depend,depending,211,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,1,['depend'],['depending']
Integrability,/* Validate thumbnail dimensions and issue appropriate messages */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:55,message,messages,55,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['message'],['messages']
Integrability,"/* Values for max_lazy_match, good_match and max_chain_length, depending on; * the desired pack level (0..9). The values given below have been tuned to; * exclude worst case performance for pathological files. Better values may be; * found for specific files.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.c:63,depend,depending,63,builtins/zlib/deflate_cf.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate_cf.c,1,['depend'],['depending']
Integrability,"/* Values for state->max_lazy_match, good_match and max_chain_length, depending on; * the desired pack level (0..9). The values given below have been tuned to; * exclude worst case performance for pathological files. Better values may be; * found for specific files.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c:70,depend,depending,70,core/zip/src/ZDeflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c,1,['depend'],['depending']
Integrability,/* Values of global_state field (jdapi.c has some dependencies on ordering!) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h:50,depend,dependencies,50,graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,1,['depend'],['dependencies']
Integrability,"/* Various internal functions to handle formatted warning messages, currently; * only implemented for warnings.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:58,message,messages,58,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['message'],['messages']
Integrability,"/* WARNINGS */; /* This function is called when the application wants to use another method; * of handling errors and warnings. Note that the error function MUST NOT; * return to the calling routine or serious problems will occur. The return; * method used in the default routine calls longjmp(png_ptr->jmp_buf_ptr, 1); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:191,rout,routine,191,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,2,['rout'],['routine']
Integrability,"/* WM_MOUSEWHEEL seems to be delivered to the focus window Work; * around that, we want it to the window that the mouse is; * in. Also, the position is in screen coordinates, not client; * coordinates as with the button messages. I love the; * consistency of Windows.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:220,message,messages,220,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,1,['message'],['messages']
Integrability,"/* WRITE */; /* These next functions are called for input/output, memory, and error; * handling. They are in the file pngrio.c, pngwio.c, and pngerror.c,; * and call standard C I/O routines such as fread(), fwrite(), and; * fprintf(). These functions can be made to use other I/O routines; * at run time for those applications that need to handle I/O in a; * different manner by calling png_set_???_fn(). See libpng-manual.txt for; * more information.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:181,rout,routines,181,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,2,['rout'],['routines']
Integrability,"/* WRITE_COMPRESSED_TEXT */; /* Write the IHDR chunk, and update the png_struct with the necessary; * information. Note that the rest of this code depends upon this; * information being correct.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:147,depend,depends,147,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['depend'],['depends']
Integrability,"/* Wait for a response from the server; Parameters:; conn: connection; ebuf, ebuf_len: error message placeholder.; timeout: time to wait for a response in milliseconds (if < 0 then wait; forever). Return:; On success, >= 0; On error/timeout, < 0; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:93,message,message,93,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['message'],['message']
Integrability,/* Wait for either message or event; 	 * -> Use MsgWaitForMultipleObjects; 	 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.c:19,message,message,19,graf2d/win32gdk/gdk/src/glib/gmain.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.c,1,['message'],['message']
Integrability,"/* Waiting for messages, and maybe events; * -> First PeekMessage; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.c:15,message,messages,15,graf2d/win32gdk/gdk/src/glib/gmain.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.c,1,['message'],['messages']
Integrability,/* Waiting just for messages */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.c:20,message,messages,20,graf2d/win32gdk/gdk/src/glib/gmain.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.c,1,['message'],['messages']
Integrability,"/* Waiting just for messages, some timeout; 		 * -> Set a timer, wait for message,; 		 * kill timer, use PeekMessage; 		 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.c:20,message,messages,20,graf2d/win32gdk/gdk/src/glib/gmain.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.c,2,['message'],"['message', 'messages']"
Integrability,"/* Waiting just for messages, zero timeout.; 		 * If we got here, there was no message; 		 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.c:20,message,messages,20,graf2d/win32gdk/gdk/src/glib/gmain.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmain.c,2,['message'],"['message', 'messages']"
Integrability,/* We assume jcmaster.c already validated the progressive scan parameters. */; /* Select execution routines */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c:99,rout,routines,99,graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,1,['rout'],['routines']
Integrability,/* We assume jcmaster.c already validated the scan parameters. */; /* Select execution routine */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:87,rout,routine,87,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,1,['rout'],['routine']
Integrability,/* We assume jcmaster.c already validated the scan parameters. */; /* Select execution routines */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcphuff.c:87,rout,routines,87,graf2d/asimage/src/libAfterImage/libjpeg/jcphuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcphuff.c,1,['rout'],['routines']
Integrability,"/* We assume that right shift corresponds to signed division by 2 with; * rounding towards minus infinity. This is correct for typical ""arithmetic; * shift"" instructions that shift in copies of the sign bit. But some; * C compilers implement >> with an unsigned shift. For these machines you; * must define RIGHT_SHIFT_IS_UNSIGNED.; * RIGHT_SHIFT provides a proper signed right shift of an INT32 quantity.; * It is only applied with constant shift counts. SHIFT_TEMPS must be; * included in the variables of any routine using RIGHT_SHIFT.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h:512,rout,routine,512,graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,1,['rout'],['routine']
Integrability,/* We avoid equality with LIT_BUFSIZE because of wraparound at 64K; * on 16 bit machines and because stored blocks are restricted to; * 64K-1 bytes.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZTrees.c:49,wrap,wraparound,49,core/zip/src/ZTrees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZTrees.c,1,['wrap'],['wraparound']
Integrability,/* We avoid equality with lit_bufsize because of wraparound at 64K; * on 16 bit machines and because stored blocks are restricted to; * 64K-1 bytes.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c:49,wrap,wraparound,49,builtins/zlib/trees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c,3,['wrap'],['wraparound']
Integrability,/* We can't depend on <stdlib.h> since the prototype of posix_memalign; may not be visible. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/mm_malloc.h:12,depend,depend,12,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/mm_malloc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/mm_malloc.h,1,['depend'],['depend']
Integrability,/* We depend here on the fact that dictCtx'es (produced by; * LZ4_loadDict) guarantee that their tables contain no references; * to offsets between dictCtx->currentOffset - 64 KB and; * dictCtx->currentOffset - dictCtx->dictSize. This makes it safe; * to use noDictIssue even when the dict isn't a full 64 KB.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:6,depend,depend,6,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,1,['depend'],['depend']
Integrability,"/* We have to check bottom of image here, can't depend on upsampler. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdpostct.c:48,depend,depend,48,graf2d/asimage/src/libAfterImage/libjpeg/jdpostct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdpostct.c,1,['depend'],['depend']
Integrability,"/* We need UTF-8 encoding of numbers to encode the weights if; * we are using wcsxfrm. However, we aren't encoding Unicode; * characters, so we can't simply use g_unichar_to_utf8.; *; * The following routine is taken (with modification) from GNU; * libc's strxfrm routine:; *; * Copyright (C) 1995-1999,2000,2001 Free Software Foundation, Inc.; * Written by Ulrich Drepper <drepper@cygnus.com>, 1995.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gunicollate.c:200,rout,routine,200,graf2d/win32gdk/gdk/src/glib/gunicollate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gunicollate.c,2,['rout'],['routine']
Integrability,/* We need an explicitly signed variant for char. Note that this shouldn't; * appear in the interface though. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avx512fintrin.h:92,interface,interface,92,interpreter/llvm-project/clang/lib/Headers/avx512fintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/avx512fintrin.h,2,['interface'],['interface']
Integrability,"/* We sent an ""upgrade"" request. For a correct websocket; 		 * protocol handshake, we expect a ""101 Continue"" response.; 		 * Otherwise it is a protocol violation. Maybe the HTTP; 		 * Server does not know websockets. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:63,protocol,protocol,63,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['protocol'],['protocol']
Integrability,/* What we do with the incoming data depends on what we were previously; * doing before we ran out of data...; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpread.c:37,depend,depends,37,graf2d/asimage/src/libAfterImage/libpng/pngpread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpread.c,1,['depend'],['depends']
Integrability,"/* When FORTRAN calls C, we don't know if C routine; arg.'s have been declared float *, or double *. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:44,rout,routine,44,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['rout'],['routine']
Integrability,"/* Windows is not standard-compliant, and vsnprintf() returns -1 if; 	 * buffer is too small. Also, older versions of msvcrt.dll do not have; 	 * _vscprintf(). However, if size is 0, vsnprintf() behaves correctly.; 	 * Therefore, we make two passes: on first pass, get required message; 	 * length.; 	 * On second pass, actually print the message. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:278,message,message,278,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['message'],['message']
Integrability,/* Windows messages */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c:11,message,messages,11,graf2d/win32gdk/gdk/src/glib/giowin32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/giowin32.c,1,['message'],['messages']
Integrability,"/* With these routines we avoid an integer divide, which will be slower on; * most machines. However, it does take more operations than the corresponding; * divide method, so it may be slower on a few RISC systems. There are two; * shifts (by 8 or 16 bits) and an addition, versus a single integer divide.; *; * Note that the rounding factors are NOT supposed to be the same! 128 and; * 32768 are correct for the NODIV code; 127 and 32767 are correct for the; * standard method.; *; * [Optimized code by Greg Roelofs and Mark Adler...blame us for bugs. :-) ]; */; /* fg and bg should be in `gamma 1.0' space; alpha is the opacity */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:14,rout,routines,14,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['rout'],['routines']
Integrability,/* Wrap pointers if needed */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,Wrap,Wrap,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['Wrap'],['Wrap']
Integrability,/* Wrap the plain char array into the unique_ptr */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/filter.cxx:3,Wrap,Wrap,3,documentation/doxygen/filter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/documentation/doxygen/filter.cxx,1,['Wrap'],['Wrap']
Integrability,/* WrapColumn = */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/dsymutil/DebugMap.cpp:3,Wrap,WrapColumn,3,interpreter/llvm-project/llvm/tools/dsymutil/DebugMap.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/dsymutil/DebugMap.cpp,2,['Wrap'],['WrapColumn']
Integrability,/* Wrapper / workalike for mkstemp() */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gfileutils.h:3,Wrap,Wrapper,3,graf2d/win32gdk/gdk/src/glib/gfileutils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gfileutils.h,1,['Wrap'],['Wrapper']
Integrability,"/* Wrapper around textinput.; * Modes: -1 = init, 0 = line mode, 1 = one char at a time mode, 2 = cleanup, 3 = clear input line; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:3,Wrap,Wrapper,3,core/textinput/src/Getline.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx,1,['Wrap'],['Wrapper']
Integrability,/* Wrapper for g_mkstemp */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gfileutils.h:3,Wrap,Wrapper,3,graf2d/win32gdk/gdk/src/glib/gfileutils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gfileutils.h,1,['Wrap'],['Wrapper']
Integrability,"/* Write the data to whatever output you are using. The default routine; * writes to a file pointer. Note that this routine sometimes gets called; * with very small lengths, so you should implement some kind of simple; * buffering if you are using unbuffered writes. This should never be asked; * to write more than 64K on a 16-bit machine.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwio.c:64,rout,routine,64,graf2d/asimage/src/libAfterImage/libpng/pngwio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwio.c,2,['rout'],['routine']
Integrability,/* X needs to have dll-interface to be used by clients of class Y */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/cmake/win/w32pragma.h:23,interface,interface,23,cmake/win/w32pragma.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/cmake/win/w32pragma.h,1,['interface'],['interface']
Integrability,/* X11 inquiry routines; **; ** ROOT_Inquiry; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/Win32Constants.h:15,rout,routines,15,core/winnt/inc/Win32Constants.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/inc/Win32Constants.h,1,['rout'],['routines']
Integrability,"/* ZSTD_initStats_ultra():; * make a first compression pass, just to seed stats with more accurate starting values.; * only works on first block, with no dictionary and no ldm.; * this function cannot error, hence its contract must be respected.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c:218,contract,contract,218,builtins/zstd/compress/zstd_opt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c,1,['contract'],['contract']
Integrability,/* ZSTD_optLdm_processMatchCandidate():; * Wrapper function to update ldm seq store and call ldm functions as necessary.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c:43,Wrap,Wrapper,43,builtins/zstd/compress/zstd_opt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c,1,['Wrap'],['Wrapper']
Integrability,/* alloc_sarray and alloc_barray set this value for use by virtual; * array routines.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:76,rout,routines,76,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['rout'],['routines']
Integrability,/* argv[ARG_CHILD_ERR_REPORT] is the file descriptor onto which; * write error messages.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32-helper.c:79,message,messages,79,graf2d/win32gdk/gdk/src/glib/gspawn-win32-helper.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32-helper.c,1,['message'],['messages']
Integrability,/* bevel to wrap everything ; 								 * around with */; /* offsets of the drawn bevel baseline on resulting image : */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h:12,wrap,wrap,12,graf2d/asimage/src/libAfterImage/imencdec.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h,1,['wrap'],['wrap']
Integrability,"/* beyond end */; /* The code is the fifth byte after each four byte string. Historically this; * code was always searched from the end of the list, this is no longer; * necessary because the 'set' routine handles duplicate entries correctly.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:198,rout,routine,198,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['rout'],['routine']
Integrability,"/* binlist +="" depends on ignored input bins "";; for(Int_t row=nullptr;row<fA->GetNrows();row++) {; if(dataVyyDiag[row]>0.0) continue;; for(Int_t i=a_rows[row];i<a_rows[row+1];i++) {; if(a_cols[i]!=col) continue;; binlist +="" "";; binlist +=row;; }; } */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx:15,depend,depends,15,hist/unfold/src/TUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfold.cxx,1,['depend'],['depends']
Integrability,/* body_len is the length of the entire queue in bytes; 	 * len is the length of the current message; 	 * data_len is the length of the current message's data payload; 	 * header_len is the length of the current message's header */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:93,message,message,93,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,3,['message'],['message']
Integrability,"/* border to wrap layer with; 								 		 * (for buttons, etc.)*/; /* if image is clipped then we need to specify offsets of bevel as; 	 * related to clipped rectangle. Normally it should be :; 	 * 0, 0, im->width, im->height. And if width/height left 0 - it will; 	 * default to this values. Note that clipped image MUST be entirely; 	 * inside the bevel rectangle. !!!*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h:13,wrap,wrap,13,graf2d/asimage/src/libAfterImage/asimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h,1,['wrap'],['wrap']
Integrability,"/* build code tables -- note: do not change the lenbits or distbits; values here (9 and 6) without reading the comments in inftrees.h; concerning the ENOUGH constants, which depend on those values */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c:174,depend,depend,174,builtins/zlib/infback.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c,2,['depend'],['depend']
Integrability,/* called from __block (byref) copy/dispose; support routines */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.h:53,rout,routines,53,interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.h,3,['rout'],['routines']
Integrability,/* can happen if wrapper compilation fails */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:17,wrap,wrapper,17,bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx,1,['wrap'],['wrapper']
Integrability,/* check all accepted protocols in this order */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:22,protocol,protocols,22,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['protocol'],['protocols']
Integrability,/* check all known protocolls */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:19,protocol,protocolls,19,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['protocol'],['protocolls']
Integrability,/* colorspace of input image */; /* Now use the library's routine to set default compression parameters.; 	* (You must set at least cinfo.in_color_space before calling this)*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/export.c:58,rout,routine,58,graf2d/asimage/src/libAfterImage/export.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/export.c,1,['rout'],['routine']
Integrability,/* compute wrapper length */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:11,wrap,wrapper,11,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,2,['wrap'],['wrapper']
Integrability,/* construct error message with path */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:19,message,message,19,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['message'],['message']
Integrability,"/* current mask and opcode, overwritten by; 				 * memmove() */; /* Length of the message being read at the front of the; 				 * queue. Cast to 31 bit is OK, since we limited; 				 * data_len before. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:82,message,message,82,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['message']
Integrability,"/* data points to the place where the message is stored when passed to; 	 * the websocket_data callback. This is either mem on the stack, or a; 	 * dynamically allocated buffer if it is too large. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:38,message,message,38,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['message']
Integrability,"/* debugging function,; * @return price in bytes as fractional value; * for debug messages only */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c:82,message,messages,82,builtins/zstd/compress/zstd_opt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c,1,['message'],['messages']
Integrability,"/* defined(XXH_STATIC_LINKING_ONLY) && !defined(XXHASH_H_STATIC_13879238742) */; /* ======================================================================== */; /* ======================================================================== */; /* ======================================================================== */; /*-**********************************************************************; * xxHash implementation; *-**********************************************************************; * xxHash's implementation used to be hosted inside xxhash.c.; *; * However, inlining requires implementation to be visible to the compiler,; * hence be included alongside the header.; * Previously, implementation was hosted inside xxhash.c,; * which was then #included when inlining was activated.; * This construction created issues with a few build and install systems,; * as it required xxhash.c to be stored in /include directory.; *; * xxHash implementation is now directly integrated within xxhash.h.; * As a consequence, xxhash.c is no longer needed in /include.; *; * xxhash.c is still available and is still useful.; * In a ""normal"" setup, when xxhash is not inlined,; * xxhash.h only exposes the prototypes and public symbols,; * while xxhash.c can be built into an object file xxhash.o; * which can then be linked into the final binary.; ************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:974,integrat,integrated,974,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['integrat'],['integrated']
Integrability,"/* deflate.c -- compress data using the deflation algorithm; * Copyright (C) 1995-2005 Jean-loup Gailly.; * For conditions of distribution and use, see copyright notice in zlib.h; */; /*; * ALGORITHM; *; * The ""deflation"" process depends on being able to identify portions; * of the input text which are identical to earlier input (within a; * sliding window trailing behind the input currently being processed).; *; * The most straightforward technique turns out to be the fastest for; * most input files: try all possible matches and select the longest.; * The key feature of this algorithm is that insertions into the string; * dictionary are very simple and thus fast, and deletions are avoided; * completely. Insertions are performed at each input character, whereas; * string matches are performed only when the previous match ends. So it; * is preferable to spend more time in matches to allow very fast string; * insertions and avoid deletions. The matching algorithm for small; * strings is inspired from that of Rabin & Karp. A brute force approach; * is used to find longer strings when a small match has been found.; * A similar algorithm is used in comic (by Jan-Mark Wams) and freeze; * (by Leonid Broukhis).; * A previous version of this file used a more sophisticated algorithm; * (by Fiala and Greene) which is guaranteed to run in linear amortized; * time, but has a larger average cost, uses more memory and is patented.; * However the F&G algorithm may be faster for some highly redundant; * files if the parameter max_chain_length (described below) is too large.; *; * ACKNOWLEDGEMENTS; *; * The idea of lazy evaluation of matches is due to Jan-Mark Wams, and; * I found it in 'freeze' written by Leonid Broukhis.; * Thanks to many people for bug reports and testing.; *; * REFERENCES; *; * Deutsch, L.P.,""DEFLATE Compressed Data Format Specification"".; * Available in http://www.ietf.org/rfc/rfc1951.txt; *; * A description of the Rabin and Karp algorithm is given in the book; *",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/deflate.c:230,depend,depends,230,graf2d/asimage/src/libAfterImage/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/deflate.c,1,['depend'],['depends']
Integrability,"/* deflate.c -- compress data using the deflation algorithm; * Copyright (C) 1995-2013 Jean-loup Gailly and Mark Adler; * For conditions of distribution and use, see copyright notice in zlib.h; */; /*; * ALGORITHM; *; * The ""deflation"" process depends on being able to identify portions; * of the input text which are identical to earlier input (within a; * sliding window trailing behind the input currently being processed).; *; * The most straightforward technique turns out to be the fastest for; * most input files: try all possible matches and select the longest.; * The key feature of this algorithm is that insertions into the string; * dictionary are very simple and thus fast, and deletions are avoided; * completely. Insertions are performed at each input character, whereas; * string matches are performed only when the previous match ends. So it; * is preferable to spend more time in matches to allow very fast string; * insertions and avoid deletions. The matching algorithm for small; * strings is inspired from that of Rabin & Karp. A brute force approach; * is used to find longer strings when a small match has been found.; * A similar algorithm is used in comic (by Jan-Mark Wams) and freeze; * (by Leonid Broukhis).; * A previous version of this file used a more sophisticated algorithm; * (by Fiala and Greene) which is guaranteed to run in linear amortized; * time, but has a larger average cost, uses more memory and is patented.; * However the F&G algorithm may be faster for some highly redundant; * files if the parameter max_chain_length (described below) is too large.; *; * ACKNOWLEDGEMENTS; *; * The idea of lazy evaluation of matches is due to Jan-Mark Wams, and; * I found it in 'freeze' written by Leonid Broukhis.; * Thanks to many people for bug reports and testing.; *; * REFERENCES; *; * Deutsch, L.P.,""DEFLATE Compressed Data Format Specification"".; * Available in http://tools.ietf.org/html/rfc1951; *; * A description of the Rabin and Karp algorithm is given i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:244,depend,depends,244,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,2,['depend'],['depends']
Integrability,/* do it! calculate the energy/cost for that route */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/simanTSP.cxx:45,rout,route,45,math/mathmore/test/simanTSP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/simanTSP.cxx,1,['rout'],['route']
Integrability,"/* elem_len is the number of characters in each element of strv, the FORTRAN; vector of strings. The last element of the vector must begin with at least; num_term term_char characters, so that this routine can determine how; many elements are in the vector. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:198,rout,routine,198,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['rout'],['routine']
Integrability,/* error codes and messages */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/bitstream.h:19,message,messages,19,builtins/zstd/common/bitstream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/bitstream.h,1,['message'],['messages']
Integrability,/* error message */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c:9,message,message,9,graf2d/asimage/src/libAfterImage/zlib/gzio.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/gzio.c,1,['message'],['message']
Integrability,/* error message */; /* zlib inflate or deflate stream */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h:9,message,message,9,builtins/zlib/gzguts.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h,1,['message'],['message']
Integrability,"/* error message output, or no error */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:9,message,message,9,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['message'],['message']
Integrability,/* extern long R__block_start; */; /* window offset of current block */; /* extern unsigned near R__strstart; */; /* window offset of current string */; /* ===========================================================================; * Local (static) routines in this file.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZTrees.c:250,rout,routines,250,core/zip/src/ZTrees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZTrees.c,1,['rout'],['routines']
Integrability,/* extract wrap request from windowBits parameter */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:11,wrap,wrap,11,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,1,['wrap'],['wrap']
Integrability,/* filter PONG messages */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:15,message,messages,15,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['messages']
Integrability,"/* flexible, LZ4HC_MAXD dependent */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c:24,depend,dependent,24,builtins/lz4/lz4hc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c,1,['depend'],['dependent']
Integrability,/* for breaking interface changes */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:16,interface,interface,16,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['interface'],['interface']
Integrability,/* for new (non-breaking) interface capabilities */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:26,interface,interface,26,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['interface'],['interface']
Integrability,/* free previously allocated message and clear */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:29,message,message,29,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['message'],['message']
Integrability,"/* gdk_draw_string; *; * Modified by Li-Da Lho to draw 16 bits and Multibyte strings; *; * Interface changed: add ""GdkFont *font"" to specify font or fontset explicitly; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkdraw.c:91,Interface,Interface,91,graf2d/win32gdk/gdk/src/gdk/gdkdraw.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkdraw.c,1,['Interface'],['Interface']
Integrability,"/* gdk_draw_text; *; * Modified by Li-Da Lho to draw 16 bits and Multibyte strings; *; * Interface changed: add ""GdkFont *font"" to specify font or fontset explicitly; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkdraw.c:89,Interface,Interface,89,graf2d/win32gdk/gdk/src/gdk/gdkdraw.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkdraw.c,1,['Interface'],['Interface']
Integrability,/* gzclose() is in a separate file so that it is linked in only if it is used.; That way the other gzclose functions can be used instead to avoid linking in; unneeded compression or decompression routines. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzclose.c:196,rout,routines,196,builtins/zlib/gzclose.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzclose.c,1,['rout'],['routines']
Integrability,/* gzip wrapper */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:8,wrap,wrapper,8,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,2,['wrap'],['wrapper']
Integrability,"/* here we can't use StaticMutexes, as they depend upon a working; * g_malloc, the same holds true for StaticPrivate; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.c:44,depend,depend,44,graf2d/win32gdk/gdk/src/glib/gmem.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.c,1,['depend'],['depend']
Integrability,"/* high level interface - division,; 								 * error diffusion as well ; 								 * as encoding */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h:14,interface,interface,14,graf2d/asimage/src/libAfterImage/imencdec.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h,1,['interface'],['interface']
Integrability,/* hook for the object routines to hang on */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/xwrap.h:23,rout,routines,23,graf2d/asimage/src/libAfterImage/xwrap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/xwrap.h,1,['rout'],['routines']
Integrability,"/* http://www.webdav.org/specs/rfc4918.html, 9.1:; * When MKCOL is invoked without a request body,; * the newly created collection SHOULD have no; * members. A MKCOL request message may contain; * a message body. The precise behavior of a MKCOL; * request when the body is present is undefined,; * ... ==> We do not support MKCOL with body data.; * This method is idempotent, but not safe (see; * Section 9.1 of [RFC2616]). Responses to this; * method MUST NOT be cached. */; /* Methods for write access to files on WEBDAV (RFC 2518) */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:174,message,message,174,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['message'],['message']
Integrability,"/* i.e. We will generate Kernighan and Ritchie C. */; /* Note that you may define __CF__KnR before #include cfortran.h, in order to; generate K&R C instead of the default ANSI C. The differences are mainly in the; function prototypes and declarations. All machines, except the Apollo, work; with either style. The Apollo's argument promotion rules require ANSI or use of; the obsolete std_$call which we have not implemented here. Hence on the Apollo,; only C calling FORTRAN subroutines will work using K&R style.*/; /* Remainder of cfortran.h depends on the Fortran compiler. */; /* 11/29/2003 (KMCCARTY): add *INTEL_COMPILER symbols here */; /* 04/05/2006 (KMCCARTY): add gFortran symbol here */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:545,depend,depends,545,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['depend'],['depends']
Integrability,/* identifier for error messages */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:24,message,messages,24,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['message'],['messages']
Integrability,"/* if can't get parameters, return conservative bound plus zlib wrapper */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:64,wrap,wrapper,64,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,2,['wrap'],['wrapper']
Integrability,"/* image gamma of input image */; /* Compression parameters --- these fields must be set before calling; * jpeg_start_compress(). We recommend calling jpeg_set_defaults() to; * initialize everything to reasonable defaults, then changing anything; * the application specifically wants to change. That way you won't get; * burnt when new parameters are added. Also note that there are several; * helper routines to simplify changing parameters.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:401,rout,routines,401,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['rout'],['routines']
Integrability,/* image manipulation routines */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/xwrap.h:22,rout,routines,22,graf2d/asimage/src/libAfterImage/xwrap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/xwrap.h,1,['rout'],['routines']
Integrability,/* import the system-dependent declarations */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:21,depend,dependent,21,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,2,['depend'],['dependent']
Integrability,"/* infback.c -- inflate using a call-back interface; * Copyright (C) 1995-2005 Mark Adler; * For conditions of distribution and use, see copyright notice in zlib.h; */; /*; This code is largely copied from inflate.c. Normally either infback.o or; inflate.o would be linked into an application--not both. The interface; with inffast.c is retained so that optimized assembler-coded versions of; inflate_fast() can be used with either inflate.c or infback.c.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/infback.c:42,interface,interface,42,graf2d/asimage/src/libAfterImage/zlib/infback.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/infback.c,2,['interface'],['interface']
Integrability,"/* infback.c -- inflate using a call-back interface; * Copyright (C) 1995-2011 Mark Adler; * For conditions of distribution and use, see copyright notice in zlib.h; */; /*; This code is largely copied from inflate.c. Normally either infback.o or; inflate.o would be linked into an application--not both. The interface; with inffast.c is retained so that optimized assembler-coded versions of; inflate_fast() can be used with either inflate.c or infback.c.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c:42,interface,interface,42,builtins/zlib/infback.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/infback.c,2,['interface'],['interface']
Integrability,"/* inflate.c -- put in the public domain by Mark Adler; version c14o, 23 August 1994 */; /* You can do whatever you like with this source file, though I would; prefer that if you modify it and redistribute it that you include; comments to that effect with your name and the date. Thank you. History:; vers date who what; ---- --------- -------------- ------------------------------------; a ~~ Feb 92 M. Adler used full (large, one-step) lookup table; b1 21 Mar 92 M. Adler first version with partial lookup tables; b2 21 Mar 92 M. Adler fixed bug in fixed-code blocks; b3 22 Mar 92 M. Adler sped up match copies, cleaned up some; b4 25 Mar 92 M. Adler added prototypes; removed window[] (now; is the responsibility of unzip.h--also; changed name to slide[]), so needs diffs; for unzip.c and unzip.h (this allows; compiling in the small model on MSDOS);; fixed cast of q in huft_build();; b5 26 Mar 92 M. Adler got rid of unintended macro recursion.; b6 27 Mar 92 M. Adler got rid of nextbyte() routine. fixed; bug in inflate_fixed().; c1 30 Mar 92 M. Adler removed lbits, dbits environment variables.; changed BMAX to 16 for explode. Removed; OUTB usage, and replaced it with flush()--; this was a 20% speed improvement! Added; an explode.c (to replace unimplod.c) that; uses the huft routines here. Removed; register union.; c2 4 Apr 92 M. Adler fixed bug for file sizes a multiple of 32k.; c3 10 Apr 92 M. Adler reduced memory of code tables made by; huft_build significantly (factor of two to; three).; c4 15 Apr 92 M. Adler added NOMEMCPY do kill use of memcpy().; worked around a Turbo C optimization bug.; c5 21 Apr 92 M. Adler added the WSIZE #define to allow reducing; the 32K window size for specialized; applications.; c6 31 May 92 M. Adler added some typecasts to eliminate warnings; c7 27 Jun 92 G. Roelofs added some more typecasts (444: MSC bug).; c8 5 Oct 92 J-l. Gailly added ifdef'd code to deal with PKZIP bug.; c9 9 Oct 92 M. Adler removed a memory error message (~line 416).; c10 ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:995,rout,routine,995,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['rout'],['routine']
Integrability,"/* inflate.c -- zlib decompression; * Copyright (C) 1995-2005 Mark Adler; * For conditions of distribution and use, see copyright notice in zlib.h; */; /*; * Change history:; *; * 1.2.beta0 24 Nov 2002; * - First version -- complete rewrite of inflate to simplify code, avoid; * creation of window when not needed, minimize use of window when it is; * needed, make inffast.c even faster, implement gzip decoding, and to; * improve code readability and style over the previous zlib inflate code; *; * 1.2.beta1 25 Nov 2002; * - Use pointers for available input and output checking in inffast.c; * - Remove input and output counters in inffast.c; * - Change inffast.c entry and loop from avail_in >= 7 to >= 6; * - Remove unnecessary second byte pull from length extra in inffast.c; * - Unroll direct copy to three copies per loop in inffast.c; *; * 1.2.beta2 4 Dec 2002; * - Change external routine names to reduce potential conflicts; * - Correct filename to inffixed.h for fixed tables in inflate.c; * - Make hbuf[] unsigned char to match parameter type in inflate.c; * - Change strm->next_out[-state->offset] to *(strm->next_out - state->offset); * to avoid negation problem on Alphas (64 bit) in inflate.c; *; * 1.2.beta3 22 Dec 2002; * - Add comments on state->bits assertion in inffast.c; * - Add comments on op field in inftrees.h; * - Fix bug in reuse of allocated window after inflateReset(); * - Remove bit fields--back to byte structure for speed; * - Remove distance extra == 0 check in inflate_fast()--only helps for lengths; * - Change post-increments to pre-increments in inflate_fast(), PPC biased?; * - Add compile time option, POSTINC, to use post-increments instead (Intel?); * - Make MATCH copy in inflate() much faster for when inflate_fast() not used; * - Use local copies of stream next and avail values, as well as local bit; * buffer and bit count in inflate()--for speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inflate.c:890,rout,routine,890,graf2d/asimage/src/libAfterImage/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inflate.c,1,['rout'],['routine']
Integrability,"/* inflate.c -- zlib decompression; * Copyright (C) 1995-2012 Mark Adler; * For conditions of distribution and use, see copyright notice in zlib.h; */; /*; * Change history:; *; * 1.2.beta0 24 Nov 2002; * - First version -- complete rewrite of inflate to simplify code, avoid; * creation of window when not needed, minimize use of window when it is; * needed, make inffast.c even faster, implement gzip decoding, and to; * improve code readability and style over the previous zlib inflate code; *; * 1.2.beta1 25 Nov 2002; * - Use pointers for available input and output checking in inffast.c; * - Remove input and output counters in inffast.c; * - Change inffast.c entry and loop from avail_in >= 7 to >= 6; * - Remove unnecessary second byte pull from length extra in inffast.c; * - Unroll direct copy to three copies per loop in inffast.c; *; * 1.2.beta2 4 Dec 2002; * - Change external routine names to reduce potential conflicts; * - Correct filename to inffixed.h for fixed tables in inflate.c; * - Make hbuf[] unsigned char to match parameter type in inflate.c; * - Change strm->next_out[-state->offset] to *(strm->next_out - state->offset); * to avoid negation problem on Alphas (64 bit) in inflate.c; *; * 1.2.beta3 22 Dec 2002; * - Add comments on state->bits assertion in inffast.c; * - Add comments on op field in inftrees.h; * - Fix bug in reuse of allocated window after inflateReset(); * - Remove bit fields--back to byte structure for speed; * - Remove distance extra == 0 check in inflate_fast()--only helps for lengths; * - Change post-increments to pre-increments in inflate_fast(), PPC biased?; * - Add compile time option, POSTINC, to use post-increments instead (Intel?); * - Make MATCH copy in inflate() much faster for when inflate_fast() not used; * - Use local copies of stream next and avail values, as well as local bit; * buffer and bit count in inflate()--for speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:890,rout,routine,890,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,1,['rout'],['routine']
Integrability,"/* inflateReset failed, store the error message */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:40,message,message,40,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['message'],['message']
Integrability,"/* initialise ""char_..."" routines */; /* F I N D # O F B I T S P E R P I X E L */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifencode.c:25,rout,routines,25,graf2d/win32gdk/src/gifencode.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifencode.c,2,['rout'],['routines']
Integrability,/* initialize bit routines */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx:18,rout,routines,18,core/zip/src/RZip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx,1,['rout'],['routines']
Integrability,/* initialize tree routines */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx:19,rout,routines,19,core/zip/src/RZip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/RZip.cxx,1,['rout'],['routines']
Integrability,"/* interface types, classed types, instantiated types */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gobject/gtype.h:3,interface,interface,3,graf2d/win32gdk/gdk/src/glib/gobject/gtype.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gobject/gtype.h,1,['interface'],['interface']
Integrability,"/* isDict:; sed -e 's@^\(.*\)\.o[ :]*\(.*\)\@; \1.d: $\(wildcard \2\)\@\1.cxx: $\(wildcard \2\)@'; -e 's@^#.*$@@'; -e '/^$/d'; | tr '@' '\n'; else; sed -e 's@^\(.*\)\.o[ :]*\(.*\)@; \1.d: $\(wildcard \2\)\@\1.o: \2@'; -e 's@^#.*$@@'; -e '/^$/d' $1.tmp; | tr '@' '\n'; */; // flush out the old dependencies",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/mainroot.cxx:293,depend,dependencies,293,misc/rmkdepend/mainroot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/mainroot.cxx,1,['depend'],['dependencies']
Integrability,"/* jtransform_execute_transform used to be called; * jtransform_execute_transformation, but some compilers complain about; * routine names that long. This macro is here to avoid breaking any; * old source code that uses the original name...; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.h:125,rout,routine,125,graf2d/asimage/src/libAfterImage/libjpeg/transupp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/transupp.h,1,['rout'],['routine']
Integrability,"/* last error message, NULL if no error */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:14,message,message,14,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,2,['message'],['message']
Integrability,/* libXpm interface : */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/xpm.c:10,interface,interface,10,graf2d/asimage/src/libAfterImage/xpm.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/xpm.c,1,['interface'],['interface']
Integrability,/* looking for synchronization bytes to restart inflate() */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h:15,synchroniz,synchronization,15,builtins/zlib/inflate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.h,2,['synchroniz'],['synchronization']
Integrability,/* low level interface - ; 								 * encoding only */; /* internal data members : */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h:13,interface,interface,13,graf2d/asimage/src/libAfterImage/imencdec.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/imencdec.h,1,['interface'],['interface']
Integrability,/* low level memory routines */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_ddict.c:20,rout,routines,20,builtins/zstd/decompress/zstd_ddict.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_ddict.c,3,['rout'],['routines']
Integrability,/* mask for wrapping around counters */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:12,wrap,wrapping,12,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,1,['wrap'],['wrapping']
Integrability,"/* max msg_level that will be displayed */; /* For recoverable corrupt-data errors, we emit a warning message,; * but keep going unless emit_message chooses to abort. emit_message; * should count warnings in num_warnings. The surrounding application; * can check for bad data by seeing if num_warnings is nonzero at the; * end of processing.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:102,message,message,102,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['message'],['message']
Integrability,"/* may be useful as a flag for ""no error"" */; /* Initialize message table pointers */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:60,message,message,60,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,1,['message'],['message']
Integrability,"/* name of input stream, featured by the default message handler */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gscanner.h:49,message,message,49,graf2d/win32gdk/gdk/src/glib/gscanner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gscanner.h,1,['message'],['message']
Integrability,/* no error message yet */; /* interpret mode */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:12,message,message,12,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['message'],['message']
Integrability,"/* no unrealized arrays, no work */; /* Determine amount of memory to actually use; this is system-dependent. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:99,depend,dependent,99,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['depend'],['dependent']
Integrability,"/* now done via ""XYZ.d XYZ.o: $(wildcard dependencies)""; if (!currentFileBase.empty()) {; currentFileBase += ""o"";; fwrite(currentFileBase.c_str(), currentFileBase.length(), 1, stdout);; currentDependencies += '\n';; fwrite(currentDependencies.c_str(), currentDependencies.length(), 1, stdout);; }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/mainroot.cxx:41,depend,dependencies,41,misc/rmkdepend/mainroot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/mainroot.cxx,1,['depend'],['dependencies']
Integrability,/* now save the best 3 energies and routes */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/simanTSP.cxx:36,rout,routes,36,math/mathmore/test/simanTSP.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/test/simanTSP.cxx,2,['rout'],['routes']
Integrability,"/* number of corrupt-data warnings */; /* These fields point to the table(s) of error message strings.; * An application can change the table pointer to switch to a different; * message list (typically, to change the language in which errors are; * reported). Some applications may wish to add additional error codes; * that will be handled by the JPEG library error mechanism; the second; * table pointer is used for this purpose.; *; * First table includes all errors generated by JPEG library itself.; * Error code 0 is reserved for a ""no such error string"" message.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:86,message,message,86,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,3,['message'],['message']
Integrability,"/* number of such rows needed */; /* For single-pass compression, it's sufficient to buffer just one MCU; * (although this may prove a bit slow in practice). We allocate a; * workspace of C_MAX_BLOCKS_IN_MCU coefficient blocks, and reuse it for each; * MCU constructed and sent. (On 80x86, the workspace is FAR even though; * it's not really very big; this is to keep the module interfaces unchanged; * when a large coefficient buffer is necessary.); * In multi-pass modes, this array points to the current MCU's blocks; * within the virtual arrays.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jccoefct.c:379,interface,interfaces,379,graf2d/asimage/src/libAfterImage/libjpeg/jccoefct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jccoefct.c,1,['interface'],['interfaces']
Integrability,"/* number of such rows needed */; /* The output side's location is represented by cinfo->output_iMCU_row. */; /* In single-pass modes, it's sufficient to buffer just one MCU.; * We allocate a workspace of D_MAX_BLOCKS_IN_MCU coefficient blocks,; * and let the entropy decoder write into that workspace each time.; * (On 80x86, the workspace is FAR even though it's not really very big;; * this is to keep the module interfaces unchanged when a large coefficient; * buffer is necessary.); * In multi-pass modes, this array points to the current MCU's blocks; * within the virtual arrays; it is used only by the input side.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdcoefct.c:416,interface,interfaces,416,graf2d/asimage/src/libAfterImage/libjpeg/jdcoefct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdcoefct.c,1,['interface'],['interfaces']
Integrability,"/* other fatal failure, error->message; * should explain; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.h:31,message,message,31,graf2d/win32gdk/gdk/src/glib/gspawn.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn.h,1,['message'],['message']
Integrability,/* our own version of X Wrapper : */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asim_afterbase.h:24,Wrap,Wrapper,24,graf2d/asimage/src/libAfterImage/asim_afterbase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asim_afterbase.h,1,['Wrap'],['Wrapper']
Integrability,/* path or fd for error messages */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h:24,message,messages,24,builtins/zlib/gzguts.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzguts.h,1,['message'],['messages']
Integrability,/* perform the first integration */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:21,integrat,integration,21,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['integrat'],['integration']
Integrability,/* personality routine */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/unwind.h:15,rout,routine,15,interpreter/llvm-project/clang/lib/Headers/unwind.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/unwind.h,1,['rout'],['routine']
Integrability,"/* pngdebug.h - Debugging macros for libpng, also used in pngtest.c; *; * Copyright (c) 2018 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2013 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; */; /* Define PNG_DEBUG at compile time for debugging information. Higher; * numbers for PNG_DEBUG mean more debugging information. This has; * only been added since version 0.95 so it is not implemented throughout; * libpng yet, but more support will be added as needed.; *; * png_debug[1-2]?(level, message ,arg{0-2}); * Expands to a statement (either a simple expression or a compound; * do..while(0) statement) that outputs a message with parameter; * substitution if PNG_DEBUG is defined to 2 or more. If PNG_DEBUG; * is undefined, 0 or 1 every png_debug expands to a simple expression; * (actually ((void)0)).; *; * level: level of detail of message, starting at 0. A level 'n'; * message is preceded by 'n' 3-space indentations (not implemented; * on Microsoft compilers unless PNG_DEBUG_FILE is also; * defined, to allow debug DLL compilation with no standard IO).; * message: a printf(3) style text string. A trailing '\n' is added; * to the message.; * arg: 0 to 2 arguments for printf(3) style substitution in message.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngdebug.h:715,message,message,715,graf2d/asimage/src/libAfterImage/libpng/pngdebug.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngdebug.h,7,['message'],['message']
Integrability,"/* pngpriv.h - private declarations for use inside libpng; *; * Copyright (c) 2018-2023 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; */; /* The symbols declared in this file (including the functions declared; * as extern) are PRIVATE. They are not part of the libpng public; * interface, and are not recommended for use by regular applications.; * Some of them may become public in the future; others may stay private,; * change in an incompatible way, or even disappear.; * Although the libpng users are not forbidden to include this header,; * they should be well aware of the issues that may arise from doing so.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:553,interface,interface,553,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['interface'],['interface']
Integrability,"/* pngread.c - read a PNG file; *; * Copyright (c) 2018-2019 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; *; * This file contains routines that an application calls directly to; * read a PNG file or stream.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:406,rout,routines,406,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['rout'],['routines']
Integrability,"/* pngwrite.c - general routines to write a PNG file; *; * Copyright (c) 2018-2023 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:24,rout,routines,24,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,1,['rout'],['routines']
Integrability,/* port remains 0 if the protocol is not found */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:25,protocol,protocol,25,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['protocol'],['protocol']
Integrability,"/* precise table may vary, depending on U16 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:27,depend,depending,27,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['depend'],['depending']
Integrability,"/* preferred floating type */; /*; * Each IDCT routine is responsible for range-limiting its results and; * converting them to unsigned form (0..MAXJSAMPLE). The raw outputs could; * be quite far out of range if the input data is corrupt, so a bulletproof; * range-limiting step is required. We use a mask-and-table-lookup method; * to do the combined operations quickly. See the comments with; * prepare_range_limit_table (in jdmaster.c) for more info.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdct.h:47,rout,routine,47,graf2d/asimage/src/libAfterImage/libjpeg/jdct.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdct.h,1,['rout'],['routine']
Integrability,/* print received message */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/net/udpserver.c:18,message,message,18,tutorials/net/udpserver.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/net/udpserver.c,1,['message'],['message']
Integrability,"/* protocol found, port set */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,protocol,protocol,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['protocol'],['protocol']
Integrability,"/* pthread_t may be any data type, so a simple cast to unsigned long; 		 * can rise a warning/error, depending on the platform.; 		 * Here memcpy is used as an anything-to-anything cast. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:101,depend,depending,101,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['depend'],['depending']
Integrability,/* public fields */; /* Pointer to routine to do actual upsampling/conversion of one row group */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmerge.c:35,rout,routine,35,graf2d/asimage/src/libAfterImage/libjpeg/jdmerge.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmerge.c,1,['rout'],['routine']
Integrability,/* public fields */; /* Pointer to the DCT routine actually in use */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcdctmgr.c:43,rout,routine,43,graf2d/asimage/src/libAfterImage/libjpeg/jcdctmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcdctmgr.c,1,['rout'],['routine']
Integrability,/* receive message */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/net/udpserver.c:11,message,message,11,tutorials/net/udpserver.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/net/udpserver.c,1,['message'],['message']
Integrability,/* reply PING messages */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:14,message,messages,14,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['message'],['messages']
Integrability,/* rotated text routines: same nameanem with R appended */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:16,rout,routines,16,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['rout'],['routines']
Integrability,/* routine to render this primitive */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/render.c:3,rout,routine,3,graf3d/eve7/glu/render.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/glu/render.c,1,['rout'],['routine']
Integrability,/* routines (inflate) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:3,rout,routines,3,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['rout'],['routines']
Integrability,/* same as Property routines */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/xwrap.h:20,rout,routines,20,graf2d/asimage/src/libAfterImage/xwrap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/xwrap.h,1,['rout'],['routines']
Integrability,/* save the path name for error messages */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:32,message,messages,32,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['message'],['messages']
Integrability,/* scale by the width of the integration region */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:29,integrat,integration,29,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['integrat'],['integration']
Integrability,/* search input for matching protocol */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:29,protocol,protocol,29,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['protocol'],['protocol']
Integrability,"/* set error code, and if no message, then done */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:29,message,message,29,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['message'],['message']
Integrability,/* set error flag in the case of bad integrand behaviour at; a point of the integration range */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:76,integrat,integration,76,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,2,['integrat'],['integration']
Integrability,"/* since an int is returned, make sure len fits in one, otherwise return; with an error (this avoids the flaw in the interface) */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c:117,interface,interface,117,builtins/zlib/gzread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzread.c,2,['interface'],['interface']
Integrability,/* strstart == 0 is possible when wraparound on 16-bit machine */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:34,wrap,wraparound,34,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,3,['wrap'],['wraparound']
Integrability,/* struct _objc_category {; char *category_name;; char *class_name;; struct _objc_method_list *instance_methods;; struct _objc_method_list *class_methods;; struct _objc_protocol_list *protocols;; // Objective-C 1.0 extensions; uint32_t size; // sizeof (struct _objc_category); struct _objc_property_list *instance_properties; // category's own; // @property decl.; };; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp:184,protocol,protocols,184,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp,1,['protocol'],['protocols']
Integrability,/* struct _objc_protocol_method_list {; int protocol_method_count;; struct protocol_methods protocols[];; }; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp:92,protocol,protocols,92,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp,2,['protocol'],['protocols']
Integrability,/* suppress zlib wrapper */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:17,wrap,wrapper,17,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,3,['wrap'],['wrapper']
Integrability,/* system-dependent cleanup */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:10,depend,dependent,10,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,2,['depend'],['dependent']
Integrability,/* system-dependent initialization */; /* Attempt to allocate memory manager's control block */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:10,depend,dependent,10,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['depend'],['dependent']
Integrability,/* target dependencies */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.h:10,depend,dependencies,10,builtins/zlib/zutil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.h,2,['depend'],['dependencies']
Integrability,/* these 32-bit implementations depend on 64-bit pdep/pext; which depend on _ARCH_PWR7. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h:32,depend,depend,32,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/bmi2intrin.h,2,['depend'],['depend']
Integrability,"/* this module contains definitions which must be identical; * across compression, decompression and dictBuilder.; * It also contains a few functions useful to at least 2 of them; * and which benefit from being inlined */; /*-*************************************; * Dependencies; ***************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_internal.h:267,Depend,Dependencies,267,builtins/zstd/common/zstd_internal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_internal.h,1,['Depend'],['Dependencies']
Integrability,"/* traversal function, assumes that `node' is root; * (only traverses `node' and its subtree).; * this function is just a high level interface to; * low level traversal functions, optimized for speed.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gnode.h:133,interface,interface,133,graf2d/win32gdk/gdk/src/glib/gnode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gnode.h,1,['interface'],['interface']
Integrability,"/* typedef'd to LZ4F_CDict within lz4frame_static.h */; /*! LZ4F_createCDict() :; * When compressing multiple messages / blocks with the same dictionary, it's recommended to load it just once.; * LZ4F_createCDict() will create a digested dictionary, ready to start future compression operations without startup delay.; * LZ4F_CDict can be created once and shared by multiple threads concurrently, since its usage is read-only.; * `dictBuffer` can be released after LZ4F_CDict creation, since its content is copied within CDict; * @return : digested dictionary for compression, or NULL if failed */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:110,message,messages,110,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['message'],['messages']
Integrability,/* unaligned access routines */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/bitstream.h:20,rout,routines,20,builtins/zstd/common/bitstream.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/bitstream.h,1,['rout'],['routines']
Integrability,/* use common routine */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c:14,rout,routine,14,graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcapimin.c,4,['rout'],['routine']
Integrability,"/* utility functions */; /*; The following utility functions are implemented on top of the basic; stream-oriented functions. To simplify the interface, some default options; are assumed (compression level and memory usage, standard memory allocation; functions). The source code of these utility functions can be modified if; you need special options.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:141,interface,interface,141,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['interface'],['interface']
Integrability,/* via VOID and wrapper. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:16,wrap,wrapper,16,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['wrap'],['wrapper']
Integrability,"/* when using zlib wrappers, compute Adler-32 for provided dictionary */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:19,wrap,wrappers,19,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,2,['wrap'],['wrappers']
Integrability,/* wrap around check */; /* Check whether the range crosses a 32-bytes aligned address */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/arm_cmse.h:3,wrap,wrap,3,interpreter/llvm-project/clang/lib/Headers/arm_cmse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/arm_cmse.h,1,['wrap'],['wrap']
Integrability,/* wrap around window */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inffast.c:3,wrap,wrap,3,builtins/zlib/inffast.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inffast.c,2,['wrap'],['wrap']
Integrability,/* wrapper function */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp:3,wrap,wrapper,3,interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,1,['wrap'],['wrapper']
Integrability,/* write gzip wrapper instead */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:14,wrap,wrapper,14,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,3,['wrap'],['wrapper']
Integrability,/* zlib compression helper routines */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:27,rout,routines,27,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['rout'],['routines']
Integrability,/* zlib wrapper */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:8,wrap,wrapper,8,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,2,['wrap'],['wrapper']
Integrability,"/* zlib.h -- interface of the 'zlib' general purpose compression library; version 1.2.3, July 18th, 2005. Copyright (C) 1995-2005 Jean-loup Gailly and Mark Adler. This software is provided 'as-is', without any express or implied; warranty. In no event will the authors be held liable for any damages; arising from the use of this software. Permission is granted to anyone to use this software for any purpose,; including commercial applications, and to alter it and redistribute it; freely, subject to the following restrictions:. 1. The origin of this software must not be misrepresented; you must not; claim that you wrote the original software. If you use this software; in a product, an acknowledgment in the product documentation would be; appreciated but is not required.; 2. Altered source versions must be plainly marked as such, and must not be; misrepresented as being the original software.; 3. This notice may not be removed or altered from any source distribution. Jean-loup Gailly Mark Adler; jloup@gzip.org madler@alumni.caltech.edu. The data format used by the zlib library is described by RFCs (Request for; Comments) 1950 to 1952 in the files http://www.ietf.org/rfc/rfc1950.txt; (zlib format), rfc1951.txt (deflate format) and rfc1952.txt (gzip format).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h:13,interface,interface,13,graf2d/asimage/src/libAfterImage/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zlib.h,1,['interface'],['interface']
Integrability,"/* zlib.h -- interface of the 'zlib' general purpose compression library; version 1.2.8, April 28th, 2013. Copyright (C) 1995-2013 Jean-loup Gailly and Mark Adler. This software is provided 'as-is', without any express or implied; warranty. In no event will the authors be held liable for any damages; arising from the use of this software. Permission is granted to anyone to use this software for any purpose,; including commercial applications, and to alter it and redistribute it; freely, subject to the following restrictions:. 1. The origin of this software must not be misrepresented; you must not; claim that you wrote the original software. If you use this software; in a product, an acknowledgment in the product documentation would be; appreciated but is not required.; 2. Altered source versions must be plainly marked as such, and must not be; misrepresented as being the original software.; 3. This notice may not be removed or altered from any source distribution. Jean-loup Gailly Mark Adler; jloup@gzip.org madler@alumni.caltech.edu. The data format used by the zlib library is described by RFCs (Request for; Comments) 1950 to 1952 in the files http://tools.ietf.org/html/rfc1950; (zlib format), rfc1951 (deflate format) and rfc1952 (gzip format).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h:13,interface,interface,13,builtins/zlib/zlib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zlib.h,1,['interface'],['interface']
Integrability,"/* zutil.c -- target dependent utility functions for the compression library; * Copyright (C) 1995-2005 Jean-loup Gailly.; * For conditions of distribution and use, see copyright notice in zlib.h; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zutil.c:21,depend,dependent,21,graf2d/asimage/src/libAfterImage/zlib/zutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zutil.c,1,['depend'],['dependent']
Integrability,"/* zutil.c -- target dependent utility functions for the compression library; * Copyright (C) 1995-2005, 2010, 2011, 2012 Jean-loup Gailly.; * For conditions of distribution and use, see copyright notice in zlib.h; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.c:21,depend,dependent,21,builtins/zlib/zutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.c,1,['depend'],['dependent']
Integrability,"/* zutil.h -- internal interface and configuration of the compression library; * Copyright (C) 1995-2005 Jean-loup Gailly.; * For conditions of distribution and use, see copyright notice in zlib.h; */; /* WARNING: this file should *not* be used by applications. It is; part of the implementation of the compression library and is; subject to change. Applications should only use zlib.h.; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zutil.h:23,interface,interface,23,graf2d/asimage/src/libAfterImage/zlib/zutil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zutil.h,1,['interface'],['interface']
Integrability,"/* zutil.h -- internal interface and configuration of the compression library; * Copyright (C) 1995-2013 Jean-loup Gailly.; * For conditions of distribution and use, see copyright notice in zlib.h; */; /* WARNING: this file should *not* be used by applications. It is; part of the implementation of the compression library and is; subject to change. Applications should only use zlib.h.; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.h:23,interface,interface,23,builtins/zlib/zutil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.h,1,['interface'],['interface']
Integrability,"/*! *****************************************************************************; Copyright (c) Microsoft Corporation. Permission to use, copy, modify, and/or distribute this software for any; purpose with or without fee is hereby granted. THE SOFTWARE IS PROVIDED ""AS IS"" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH; REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY; AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,; INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM; LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR; OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR; PERFORMANCE OF THIS SOFTWARE.; ***************************************************************************** */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/base/zstd.mjs:606,CONTRACT,CONTRACT,606,js/modules/base/zstd.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/base/zstd.mjs,1,['CONTRACT'],['CONTRACT']
Integrability,"/*! Checks condition `e` and reports a fatal error if it's false.; * \warning; * - this check is NOT stripped in release mode, so it should not be used for hot paths.; * For those cases, prefer a regular `assert()`;; * - depending on `gErrorIgnoreLevel`, this might not terminate the program, \see ::Fatal.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:221,depend,depending,221,core/foundation/inc/TError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h,1,['depend'],['depending']
Integrability,"/*! Checks condition `e` and reports a warning message if it's false.; * \warning this check is NOT stripped in release mode, so it should not be used for hot paths.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h:47,message,message,47,core/foundation/inc/TError.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TError.h,1,['message'],['message']
Integrability,/*! Constructor and Destructor of FSE_CTable.; Note that FSE_CTable size depends on 'tableLog' and 'maxSymbolValue' */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:73,depend,depends,73,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['depend'],['depends']
Integrability,/*! Constructor and Destructor of FSE_DTable.; Note that its size depends on 'tableLog' */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:66,depend,depends,66,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['depend'],['depends']
Integrability,"/*! Depending on the winning units determined during the Forward pass,; * it only forwards the derivatives to the right units in the previous; * layer. Must only be called directly at the corresponding call; * to Forward(...). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/CNN/MaxPoolLayer.h:4,Depend,Depending,4,tmva/tmva/inc/TMVA/DNN/CNN/MaxPoolLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/CNN/MaxPoolLayer.h,1,['Depend'],['Depending']
Integrability,"/*! LZ4_compress_fast_continue() :; * Compress 'src' content using data from previously compressed blocks, for better compression ratio.; * 'dst' buffer must be already allocated.; * If dstCapacity >= LZ4_compressBound(srcSize), compression is guaranteed to succeed, and runs faster.; *; * @return : size of compressed block; * or 0 if there is an error (typically, cannot fit into 'dst').; *; * Note 1 : Each invocation to LZ4_compress_fast_continue() generates a new block.; * Each block has precise boundaries.; * Each block must be decompressed separately, calling LZ4_decompress_*() with relevant metadata.; * It's not possible to append blocks together and expect a single invocation of LZ4_decompress_*() to decompress them together.; *; * Note 2 : The previous 64KB of source data is __assumed__ to remain present, unmodified, at same address in memory !; *; * Note 3 : When input is structured as a double-buffer, each buffer can have any size, including < 64 KB.; * Make sure that buffers are separated, by at least one byte.; * This construction ensures that each block only depends on previous block.; *; * Note 4 : If input buffer is a ring-buffer, it can have any size, including < 64 KB.; *; * Note 5 : After an error, the stream status is undefined (invalid), it can only be reset or freed.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1086,depend,depends,1086,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['depend'],['depends']
Integrability,"/*! LZ4_decompress_*_continue() :; * These decoding functions allow decompression of consecutive blocks in ""streaming"" mode.; * A block is an unsplittable entity, it must be presented entirely to a decompression function.; * Decompression functions only accepts one block at a time.; * The last 64KB of previously decoded data *must* remain available and unmodified at the memory position where they were decoded.; * If less than 64KB of data has been decoded, all the data must be present.; *; * Special : if decompression side sets a ring buffer, it must respect one of the following conditions :; * - Decompression buffer size is _at least_ LZ4_decoderRingBufferSize(maxBlockSize).; * maxBlockSize is the maximum size of any single block. It can have any value > 16 bytes.; * In which case, encoding and decoding buffers do not need to be synchronized.; * Actually, data can be produced by any source compliant with LZ4 format specification, and respecting maxBlockSize.; * - Synchronized mode :; * Decompression buffer size is _exactly_ the same as compression buffer size,; * and follows exactly same update rule (block boundaries at same positions),; * and decoding function is provided with exact decompressed size of each block (exception for last block of the stream),; * _then_ decoding & encoding ring buffer can have any size, including small ones ( < 64 KB).; * - Decompression buffer is larger than encoding buffer, by a minimum of maxBlockSize more bytes.; * In which case, encoding and decoding buffers do not need to be synchronized,; * and encoding ring buffer can have any size, including small ones ( < 64 KB).; *; * Whenever these conditions are not possible,; * save the last 64KB of decoded data into a safe buffer where it can't be modified during decompression,; * then indicate where this data is saved using LZ4_setStreamDecode(), before decompressing next block.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:842,synchroniz,synchronized,842,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,3,"['Synchroniz', 'synchroniz']","['Synchronized', 'synchronized']"
Integrability,"/*! LZ4_resetStream_fast() : v1.9.0+; * Use this to prepare an LZ4_stream_t for a new chain of dependent blocks; * (e.g., LZ4_compress_fast_continue()).; *; * An LZ4_stream_t must be initialized once before usage.; * This is automatically done when created by LZ4_createStream().; * However, should the LZ4_stream_t be simply declared on stack (for example),; * it's necessary to initialize it first, using LZ4_initStream().; *; * After init, start any new stream with LZ4_resetStream_fast().; * A same LZ4_stream_t can be re-used multiple times consecutively; * and compress multiple streams,; * provided that it starts each new stream with LZ4_resetStream_fast().; *; * LZ4_resetStream_fast() is much faster than LZ4_initStream(),; * but is not compatible with memory regions containing garbage data.; *; * Note: it's only useful to call LZ4_resetStream_fast(); * in the context of streaming compression.; * The *extState* functions perform their own resets.; * Invoking LZ4_resetStream_fast() before is redundant, and even counterproductive.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:95,depend,dependent,95,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['depend'],['dependent']
Integrability,/*! ZSTDMT_compressStream_generic() :; * Combines ZSTDMT_compressStream() with optional ZSTDMT_flushStream() or ZSTDMT_endStream(); * depending on flush directive.; * @return : minimum amount of data still to be flushed; * 0 if fully flushed; * or an error code; * note : needs to be init using any ZSTD_initCStream*() variant */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.h:134,depend,depending,134,builtins/zstd/compress/zstdmt_compress.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.h,1,['depend'],['depending']
Integrability,"/*! ZSTD_CCtx_refPrefix() :; * Reference a prefix (single-usage dictionary) for next compressed frame.; * A prefix is **only used once**. Tables are discarded at end of frame (ZSTD_e_end).; * Decompression will need same prefix to properly regenerate data.; * Compressing with a prefix is similar in outcome as performing a diff and compressing it,; * but performs much faster, especially during decompression (compression speed is tunable with compression level).; * @result : 0, or an error code (which can be tested with ZSTD_isError()).; * Special: Adding any prefix (including NULL) invalidates any previous prefix or dictionary; * Note 1 : Prefix buffer is referenced. It **must** outlive compression.; * Its content must remain unmodified during compression.; * Note 2 : If the intention is to diff some large src data blob with some prior version of itself,; * ensure that the window size is large enough to contain the entire source.; * See ZSTD_c_windowLog.; * Note 3 : Referencing a prefix involves building tables, which are dependent on compression parameters.; * It's a CPU consuming operation, with non-negligible impact on latency.; * If there is a need to use the same prefix multiple times, consider loadDictionary instead.; * Note 4 : By default, the prefix is interpreted as raw content (ZSTD_dct_rawContent).; * Use experimental ZSTD_CCtx_refPrefix_advanced() to alter dictionary interpretation. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:1037,depend,dependent,1037,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['depend'],['dependent']
Integrability,"/*! ZSTD_CCtx_setParameter() :; * Set one compression parameter, selected by enum ZSTD_cParameter.; * All parameters have valid bounds. Bounds can be queried using ZSTD_cParam_getBounds().; * Providing a value beyond bound will either clamp it, or trigger an error (depending on parameter).; * Setting a parameter is generally only possible during frame initialization (before starting compression).; * Exception : when using multi-threading mode (nbWorkers >= 1),; * the following parameters can be updated _during_ compression (within same frame):; * => compressionLevel, hashLog, chainLog, searchLog, minMatch, targetLength and strategy.; * new parameters will be active for next job only (after a flush()).; * @return : an error code (which can be tested using ZSTD_isError()).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:266,depend,depending,266,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['depend'],['depending']
Integrability,"/*! ZSTD_DCtx_setParameter() :; * Set one compression parameter, selected by enum ZSTD_dParameter.; * All parameters have valid bounds. Bounds can be queried using ZSTD_dParam_getBounds().; * Providing a value beyond bound will either clamp it, or trigger an error (depending on parameter).; * Setting a parameter is only possible during frame initialization (before starting decompression).; * @return : 0, or an error code (which can be tested using ZSTD_isError()).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:266,depend,depending,266,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['depend'],['depending']
Integrability,"/*! ZSTD_adjustCParams() :; * optimize params for a given `srcSize` and `dictSize`.; * `srcSize` can be unknown, in which case use ZSTD_CONTENTSIZE_UNKNOWN.; * `dictSize` must be `0` when there is no dictionary.; * cPar can be invalid : all parameters will be clamped within valid range in the @return struct.; * This function never fails (wide contract) */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:345,contract,contract,345,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['contract'],['contract']
Integrability,"/*! ZSTD_createCDict() :; * When compressing multiple messages or blocks using the same dictionary,; * it's recommended to digest the dictionary only once, since it's a costly operation.; * ZSTD_createCDict() will create a state from digesting a dictionary.; * The resulting state can be used for future compression operations with very limited startup cost.; * ZSTD_CDict can be created once and shared by multiple threads concurrently, since its usage is read-only.; * @dictBuffer can be released after ZSTD_CDict creation, because its content is copied within CDict.; * Note 1 : Consider experimental function `ZSTD_createCDict_byReference()` if you prefer to not duplicate @dictBuffer content.; * Note 2 : A ZSTD_CDict can be created from an empty @dictBuffer,; * in which case the only thing that it transports is the @compressionLevel.; * This can be useful in a pipeline featuring ZSTD_compress_usingCDict() exclusively,; * expecting a ZSTD_CDict parameter with any data, including those without a known dictionary. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:54,message,messages,54,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['message'],['messages']
Integrability,"/*! \brief RMinimizer class.; *; * Minimizer class that uses the ROOT/R interface to pass functions and minimize them in R.; * ; * The class implements the ROOT::Math::Minimizer interface and can be instantiated using the ; * ROOT plugin manager (plugin name is ""RMinimizer""). The various minimization algorithms ; * (BFGS, Nelder-Mead, SANN, etc..) can be passed as an option. ; * The default algorithm is BFGS.; *; * The library for this and future R/ROOT classes is currently libRtools.so; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/rtools/inc/Math/RMinimizer.h:72,interface,interface,72,math/rtools/inc/Math/RMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/rtools/inc/Math/RMinimizer.h,2,['interface'],['interface']
Integrability,/*! \brief Returns the blas routines needed to compile the generated code; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/inc/TMVA/ROperator_Conv.hxx:28,rout,routines,28,tmva/sofie/inc/TMVA/ROperator_Conv.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/inc/TMVA/ROperator_Conv.hxx,5,['rout'],['routines']
Integrability,/*! \class TMVA::GeneticGenes; \ingroup TMVA. Cut optimisation interface class for genetic algorithm. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticGenes.cxx:63,interface,interface,63,tmva/tmva/src/GeneticGenes.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticGenes.cxx,1,['interface'],['interface']
Integrability,/*! \class TMVA::IMethod; \ingroup TMVA. Interface for all concrete MVA method implementations. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/IMethod.cxx:41,Interface,Interface,41,tmva/tmva/src/IMethod.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/IMethod.cxx,1,['Interface'],['Interface']
Integrability,"/*! \class TMVA::IPruneTool; \ingroup TMVA; IPruneTool - a helper interface class to prune a decision tree. Any tool which implements the interface should provide two modes for tree pruning:. 1. automatically find the ""best"" prune strength by minimizing the error rate on a test sample; if SetAutomatic() is called, or if automatic = kTRUE argument is set in CalculatePruningInfo(); In this case, the PruningInfo object returned contains the error rate of the optimally pruned; tree, the optimal prune strength, and the sequence of nodes to prune to obtain the optimal; pruned tree from the original DecisionTree. 2. a user-provided pruning strength parameter is used to prune the tree, in which case the returned; PruningInfo object has QualityIndex = -1, PruneStrength = user prune strength, and PruneSequence; is the list of nodes to prune; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/IPruneTool.h:66,interface,interface,66,tmva/tmva/inc/TMVA/IPruneTool.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/IPruneTool.h,2,['interface'],['interface']
Integrability,/*!; * ValueProfRecordClosure Interface implementation for InstrProfRecord; * class. These C wrappers are used as adaptors so that C++ code can be; * invoked as callbacks.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/InstrProf.cpp:30,Interface,Interface,30,interpreter/llvm-project/llvm/lib/ProfileData/InstrProf.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/InstrProf.cpp,2,"['Interface', 'wrap']","['Interface', 'wrappers']"
Integrability,"/*!; * XXH_NO_INLINE_HINTS:; *; * By default, xxHash tries to force the compiler to inline almost all internal; * functions.; *; * This can usually improve performance due to reduced jumping and improved; * constant folding, but significantly increases the size of the binary which; * might not be favorable.; *; * Additionally, sometimes the forced inlining can be detrimental to performance,; * depending on the architecture.; *; * XXH_NO_INLINE_HINTS marks all internal functions as static, giving the; * compiler full control on whether to inline or not.; *; * When not optimizing (-O0), optimizing for size (-Os, -Oz), or using; * -fno-inline with GCC or Clang, this will automatically be defined.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:397,depend,depending,397,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['depend'],['depending']
Integrability,"/** ====================================================================; * @license; * jsPDF XMP metadata plugin; * Copyright (c) 2016 Jussi Utunen, u-jussi@suomi24.fi; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/jspdf.mjs:1113,CONTRACT,CONTRACT,1113,js/modules/jspdf.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/jspdf.mjs,1,['CONTRACT'],['CONTRACT']
Integrability,"/** ====================================================================; * @license; * jsPDF XMP metadata plugin; * Copyright (c) 2016 Jussi Utunen, u-jussi@suomi24.fi; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */; /**; * @name xmp_metadata; * @module; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:1113,CONTRACT,CONTRACT,1113,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['CONTRACT'],['CONTRACT']
Integrability,"/** @brief evaluate Faddeeva function for complex argument (fast version); *; * @author Manuel Schiller <manuel.schiller@nikhef.nl>; * @date 2013-02-21; *; * Calculate the value of the Faddeeva function @f$w(z) = \exp(-z^2); * \mathrm{erfc}(-i z)@f$.; *; * This is the ""fast"" version of the faddeeva routine above. Fast means that; * is takes roughly half the amount of CPU of the slow version of the; * routine, but is a little less accurate.; *; * To be fast, chose @f$t_m=8@f$ and @f$N=11@f$ which should give accuracies; * around 1e-7.; *; * In the square -8 <= Re(z) <= 8, -8 <= Im(z) <= 8, the routine is accurate; * to better than 4e-7 relative, the average relative error is better than; * 5e-9. On a modern x86_64 machine, the routine is roughly five times as; * fast than the old CERNLIB implementation, or about 30% faster than the; * interpolation/lookup table based fast method used previously in RooFit,; * and offers better accuracy than the latter (the relative error is roughly; * a factor 280 smaller than the old interpolation/table lookup routine).; *; * For large @f$|z|@f$, the familiar continued fraction approximation; *; * @f[ w(z)=\frac{-iz/\sqrt{\pi}}{-z^2+\frac{1/2}{1+\frac{2/2}{-z^2 +; * \frac{3/2}{1+\ldots}}}} @f]; *; * is used, truncated at the ellipsis (""..."") in the formula; for @f$|z| >; * 8@f$, @f$Im(z)>0@f$ it will give full float precision at a smaller; * computational cost than the method described above. (For @f$|z|>8@f$,; * @f$Im(z)<0@f$, the symmetry property @f$w(x-iy)=2e^{-(x+iy)^2-w(x+iy)}@f$; * is used.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMath.h:300,rout,routine,300,roofit/roofitcore/inc/RooMath.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMath.h,5,['rout'],['routine']
Integrability,"/** @brief read a C-style string; *; * @param str pointer to string (space allocated with malloc!); * @returns pipe read from; *; * since this is for C-style strings, we use malloc/realloc/free for; * strings. passing in a nullptr pointer is valid here, and the routine; * will use realloc to allocate a chunk of memory of the right size.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:262,rout,routine,262,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['rout'],['routine']
Integrability,"/** @brief set the debug flags; *; * @param flag debug flags (if zero, no messages are printed); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:74,message,messages,74,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['message'],['messages']
Integrability,"/** @brief write to pipe; *; * @param addr where to get data to write from; * @param sz size of data to write (in bytes); * @returns size of data written, or 0 in case of end-of-file; *; * write may block until data can be written to other end (depends a; * bit on available buffer space). It will return 0 if the other end; * closed the pipe. The data is queued to be written on the next; * convenient occasion, or it can be forced out with flush().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h:245,depend,depends,245,roofit/roofitcore/src/BidirMMapPipe.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/BidirMMapPipe.h,1,['depend'],['depends']
Integrability,"/** @class Job; *; * @brief interface class for defining the actual work that must be done; *; * Think of ""job"" as in ""employment"", e.g. the job of a baker, which; * involves *tasks* like baking and selling bread. The Job must define the; * tasks through its execution (evaluate_task), based on a task index argument.; *; * Classes inheriting from Job must implement the pure virtual methods:; * - void evaluate_task(std::size_t task); * - void send_back_task_result_from_worker(std::size_t task); * - void receive_task_result_on_master(const zmq::message_t & message); *; * An example/reference implementation can be found in test_Job.cxx.; *; * Most Jobs will also want to override the virtual update_state() function.; * This function can be used to send and receive state from master to worker.; * In the worker loop, when something is received over the ZeroMQ ""SUB"" socket,; * update_state() is called to put the received data into the right places,; * thus updating for instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part mus",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:28,interface,interface,28,roofit/multiprocess/src/Job.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx,2,"['interface', 'message']","['interface', 'message']"
Integrability,"/** @defgroup MultiRoot Multidimensional ROOT finding; Classes for finding the roots of a multi-dimensional system.; @ingroup NumAlgo; */; /**; Class for Multidimensional root finding algorithms bassed on GSL. This class is used to solve a; non-linear system of equations:. f1(x1,....xn) = 0; f2(x1,....xn) = 0; ..................; fn(x1,....xn) = 0. See the GSL <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Multidimensional-Root_002dFinding.html""> online manual</A> for; information on the GSL MultiRoot finding algorithms. The available GSL algorithms require the derivatives of the supplied functions or not (they are; computed internally by GSL). In the first case the user needs to provide a list of multidimensional functions implementing the; gradient interface (ROOT::Math::IMultiGradFunction) while in the second case it is enough to supply a list of; functions impelmenting the ROOT::Math::IMultiGenFunction interface.; The available algorithms requiring derivatives (see also the GSL; <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Algorithms-using-Derivatives.html"">documentation</A> ); are the followings:; <ul>; <li><tt>ROOT::Math::GSLMultiRootFinder::kHybridSJ</tt> with name <i>""HybridSJ""</i>: modified Powell's hybrid; method as implemented in HYBRJ in MINPACK; <li><tt>ROOT::Math::GSLMultiRootFinder::kHybridJ</tt> with name <i>""HybridJ""</i>: unscaled version of the; previous algorithm</li>; <li><tt>ROOT::Math::GSLMultiRootFinder::kNewton</tt> with name <i>""Newton""</i>: Newton method </li>; <li><tt>ROOT::Math::GSLMultiRootFinder::kGNewton</tt> with name <i>""GNewton""</i>: modified Newton method </li>; </ul>; The algorithms without derivatives (see also the GSL; <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Algorithms-without-Derivatives.html"">documentation</A> ); are the followings:; <ul>; <li><tt>ROOT::Math::GSLMultiRootFinder::kHybridS</tt> with name <i>""HybridS""</i>: same as HybridSJ but using; finate difference approximation for the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMultiRootFinder.h:772,interface,interface,772,math/mathmore/inc/Math/GSLMultiRootFinder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMultiRootFinder.h,2,['interface'],['interface']
Integrability,/** @file EveElements.js; * used only together with OpenUI5 */; // TODO: add dependency from JSROOT components,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js:77,depend,dependency,77,ui5/eve7/lib/EveElements.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js,1,['depend'],['dependency']
Integrability,"/** @file; * header file containing the templated implementation of matrix inversion; * routines for use with ROOT's SMatrix classes (symmetric positive; * definite case); *; * @author Manuel Schiller; * @date Aug 29 2008; * initial release inside LHCb; * @date May 7 2009; * factored code to provide a nice Cholesky decomposition class, along; * with separate methods for solving a single linear system and to; * obtain the inverse matrix from the decomposition; * @date July 15th 2013; * provide a version of that class which works if the dimension of the; * problem is only known at run time; * @date September 30th 2013; * provide routines to access the result of the decomposition L and its; * inverse; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/CholeskyDecomp.h:88,rout,routines,88,math/smatrix/inc/Math/CholeskyDecomp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/CholeskyDecomp.h,2,['rout'],['routines']
Integrability,"/** @fn RooAbsPdf::createNLL(); *; * @brief Construct representation of -log(L) of PDF with given dataset.; *; * If dataset is unbinned, an unbinned likelihood is constructed.; * If the dataset is binned, a binned likelihood is constructed.; *; * @param data Reference to a RooAbsData object representing the dataset.; * @param cmdArgs Variadic template arguments representing optional command arguments.; * You can pass either an arbitrary number of RooCmdArg instances; * or a single RooLinkedList that points to the RooCmdArg objects.; * @return An owning pointer to the created RooAbsReal NLL object.; *; * @tparam CmdArgs_t Template types for optional command arguments.; * Can either be an arbitrary number of RooCmdArg or a single RooLinkedList.; *; * \note This front-end function should not be re-implemented in derived PDF types.; * If you mean to customize the NLL creation routine,; * you need to override the virtual RooAbsPdf::createNLLImpl() method.; *; * The following named arguments are supported:; *; * <table>; * <tr><th> Type of CmdArg <th> Effect on NLL; * <tr><td> `ConditionalObservables(Args_t &&... argsOrArgSet)` <td> Do not normalize PDF over listed observables.; * Arguments can either be multiple RooRealVar or a single RooArgSet containing them.; * <tr><td> `Extended(bool flag)` <td> Add extended likelihood term, off by default.; * <tr><td> `Range(const char* name)` <td> Fit only data inside range with given name. Multiple comma-separated range names can be specified.; * In this case, the unnormalized PDF \f$f(x)\f$ is normalized by the integral over all ranges \f$r_i\f$:; * \f[; * p(x) = \frac{f(x)}{\sum_i \int_{r_i} f(x) dx}.; * \f]; * <tr><td> `Range(double lo, double hi)` <td> Fit only data inside given range. A range named ""fit"" is created on the fly on all observables.; * <tr><td> `SumCoefRange(const char* name)` <td> Set the range in which to interpret the coefficients of RooAddPdf components; * <tr><td> `NumCPU(int num, int istrat)` <td> Paralleliz",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:885,rout,routine,885,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['rout'],['routine']
Integrability,"/** @fn RooStats::ModelConfig::fitTo(); *; * Wrapper around RooAbsPdf::fitTo(), where; * the pdf and some configuration options are retrieved from the ModelConfig.; *; * See ModelConfig::createNLL() for more information.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/ModelConfig.cxx:45,Wrap,Wrapper,45,roofit/roofitcore/src/ModelConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/ModelConfig.cxx,1,['Wrap'],['Wrapper']
Integrability,"/** @license; * Copyright (c) 2017 Dominik Homberger. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:. The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. https://webpjs.appspot.com; WebPRiffParser dominikhlbg@gmail.com; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:945,CONTRACT,CONTRACT,945,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,3,['CONTRACT'],['CONTRACT']
Integrability,"/** @license; * MIT license.; * Copyright (c) 2012 Willow Systems Corporation, https://github.com/willowsystems; * 2014 Diego Casorran, https://github.com/diegocr; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/jspdf.mjs:1107,CONTRACT,CONTRACT,1107,js/modules/jspdf.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/jspdf.mjs,1,['CONTRACT'],['CONTRACT']
Integrability,"/** @license; * MIT license.; * Copyright (c) 2012 Willow Systems Corporation, https://github.com/willowsystems; * 2014 Diego Casorran, https://github.com/diegocr; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */; /**; * jsPDF split_text_to_size plugin; *; * @name split_text_to_size; * @module; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:1107,CONTRACT,CONTRACT,1107,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['CONTRACT'],['CONTRACT']
Integrability,"/** @license; * jsPDF addImage plugin; * Copyright (c) 2012 Jason Siefken, https://github.com/siefkenj/; * 2013 Chris Dowling, https://github.com/gingerchris; * 2013 Trinh Ho, https://github.com/ineedfat; * 2013 Edwin Alejandro Perez, https://github.com/eaparango; * 2013 Norah Smith, https://github.com/burnburnrocket; * 2014 Diego Casorran, https://github.com/diegocr; * 2014 James Robb, https://github.com/jamesbrobb; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:1364,CONTRACT,CONTRACT,1364,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,3,['CONTRACT'],['CONTRACT']
Integrability,"/** @license; jsPDF standard_fonts_metrics plugin; * Copyright (c) 2012 Willow Systems Corporation, https://github.com/willowsystems; * MIT license.; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; * ; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; * ; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/jspdf.mjs:1092,CONTRACT,CONTRACT,1092,js/modules/jspdf.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/jspdf.mjs,1,['CONTRACT'],['CONTRACT']
Integrability,/** @name --- Linear Algebra Functions --- */; /**; Invert a square Matrix ( this method changes the current matrix).; Return true if inversion is successful.; The method used for general square matrices is the LU factorization taken from Dinv routine; from the CERNLIB (written in C++ from CLHEP authors); In case of symmetric matrices Bunch-Kaufman diagonal pivoting method is used; (The implementation is the one written by the CLHEP authors); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h:244,rout,routine,244,math/smatrix/inc/Math/SMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h,1,['rout'],['routine']
Integrability,/** @name --- STL-like interface --- */; /** STL iterator interface. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SVector.h:23,interface,interface,23,math/smatrix/inc/Math/SVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SVector.h,2,['interface'],['interface']
Integrability,"/** @name --- STL-like interface ---; The iterators access the matrix element in the order how they are; stored in memory. The C (row-major) convention is used, and in the; case of symmetric matrices the iterator spans only the lower diagonal; block. For example for a symmetric 3x3 matrices the order of the 6; elements \f${a_0,...a_5}\f$ is:; \f[; M = \left( \begin{array}{ccc}; a_0 & a_1 & a_3 \\; a_1 & a_2 & a_4 \\; a_3 & a_4 & a_5 \end{array} \right); \f]; */; /** STL iterator interface. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h:23,interface,interface,23,math/smatrix/inc/Math/SMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h,2,['interface'],['interface']
Integrability,"/** @name Special Functions from MathCore */; /**. Error function encountered in integrating the normal distribution. \f[ erf(x) = \frac{2}{\sqrt{\pi}} \int_{0}^{x} e^{-t^2} dt \f]. For detailed description see; <A HREF=""http://mathworld.wolfram.com/Erf.html"">; Mathworld</A>.; The implementation used is that of; <A HREF=""http://www.gnu.org/software/gsl/manual/gsl-ref_7.html#SEC102"">GSL</A>.; This function is provided only for convenience,; in case your standard C++ implementation does not support; it. If it does, please use these standard version!. @ingroup SpecFunc. */; // (26.x.21.1) error function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/SpecFuncMathCore.h:81,integrat,integrating,81,math/mathcore/inc/Math/SpecFuncMathCore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/SpecFuncMathCore.h,1,['integrat'],['integrating']
Integrability,/** @name interface inherited from IFunction */; /**; Clone the wrapper but not the original function; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Math/WrappedTF1.h:10,interface,interface,10,hist/hist/inc/Math/WrappedTF1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Math/WrappedTF1.h,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,/** @name interface inherited from IParamFunction */; /**; Clone the wrapper but not the original function; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Math/WrappedMultiTF1.h:10,interface,interface,10,hist/hist/inc/Math/WrappedMultiTF1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Math/WrappedMultiTF1.h,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"/** @name interface inherited from IParamFunction */; /// get the parameter values (return values cachen inside, those inside TF1 might be different)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Math/WrappedTF1.h:10,interface,interface,10,hist/hist/inc/Math/WrappedTF1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Math/WrappedTF1.h,1,['interface'],['interface']
Integrability,"/** @summary Add selection menu entries; * @param {String} name - name of submenu; * @param {Array} values - array of string entries used as list for selection; * @param {String|Number} value - currently elected value, either name or index; * @param {Function} set_func - function called when item selected, either name or index depending from value parameter; * @param {String} [title] - optional title for menu items; * @protected */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:329,depend,depending,329,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['depend'],['depending']
Integrability,/** @summary Call drawing function depending from 3D mode */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:35,depend,depending,35,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,6,['depend'],['depending']
Integrability,/** @summary Checks number of credits for send operation; * @param {number} [numsend = 1] - number of required send operations; * @return true if one allow to send specified number of text message to server */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/webwindow.mjs:189,message,message,189,js/modules/webwindow.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/webwindow.mjs,1,['message'],['message']
Integrability,"/** @summary Create marker path for given position.; * @desc When drawing many elementary points, created path may depend from previously produced markers.; * @param {number} x - first coordinate; * @param {number} y - second coordinate; * @return {string} path string */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:115,depend,depend,115,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['depend'],['depend']
Integrability,"/** @summary Display progress message in the left bottom corner.; * @desc Previous message will be overwritten; * if no argument specified, any shown messages will be removed; * @param {string} msg - message to display; * @param {number} [tmout] - optional timeout in milliseconds, after message will disappear; * @param {function} [click_handle] - optional handle to process click events; * @private */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:30,message,message,30,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,10,['message'],"['message', 'messages']"
Integrability,/** @summary Draw pave content; * @desc assigned depending on pave class */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:49,depend,depending,49,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['depend'],['depending']
Integrability,"/** @summary Extract shapes from binary data using appropriate draw message; * @desc Draw message is vector of REveGeomVisible objects, including info where shape is in raw data */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:68,message,message,68,ui5/geom/controller/GeomViewer.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js,2,['message'],['message']
Integrability,/** @summary Extract shapes from draw message of geometry painter; * @desc For the moment used in batch production */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:38,message,message,38,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['message'],['message']
Integrability,"/** @summary Get object item with specified name; * @desc depending from provided option, same item can generate different object types; * @param {Object} arg - item name or config object; * @param {string} arg.name - item name; * @param {Object} arg.item - or item itself; * @param {string} options - supposed draw options; * @return {Promise} with object like { item, obj, itemname }; * @private */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:58,depend,depending,58,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['depend'],['depending']
Integrability,/** @summary Get stored protocol */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/webwindow.mjs:24,protocol,protocol,24,js/modules/webwindow.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/webwindow.mjs,1,['protocol'],['protocol']
Integrability,/** @summary Handle websocket messages; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:30,message,messages,30,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['message'],['messages']
Integrability,/** @summary Handler for websocket message; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:35,message,message,35,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['message'],['message']
Integrability,/** @summary Inject javascript code; * @desc Replacement for eval; * @return {Promise} when code is injected; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Inject,Inject,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,"['Inject', 'inject']","['Inject', 'injected']"
Integrability,"/** @summary Inject message(s) into input queue, for debug purposes only; * @private */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/webwindow.mjs:13,Inject,Inject,13,js/modules/webwindow.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/webwindow.mjs,2,"['Inject', 'message']","['Inject', 'message']"
Integrability,/** @summary Inject style; * @param {String} code - css string; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Inject,Inject,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Inject'],['Inject']
Integrability,"/** @summary Mark visible nodes.; * @desc Set only basic flags, actual visibility depends from hierarchy */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:82,depend,depends,82,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['depend'],['depends']
Integrability,/** @summary Process completed messages in the queue; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/webwindow.mjs:31,message,messages,31,js/modules/webwindow.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/webwindow.mjs,1,['message'],['messages']
Integrability,/** @summary Process init dialog message; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js:33,message,message,33,ui5/browser/controller/FileDialog.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js,1,['message'],['message']
Integrability,/** @summary Return message need to be send to server to change options */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js:20,message,message,20,ui5/browser/controller/Browser.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js,1,['message'],['message']
Integrability,/** @summary Send RESIZED message to client to inform about changes in canvas/window geometry; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:26,message,message,26,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['message'],['message']
Integrability,"/** @summary Send keep-alive message.; * @desc Only for internal use, only when used with web sockets; * @private */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/webwindow.mjs:29,message,message,29,js/modules/webwindow.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/webwindow.mjs,1,['message'],['message']
Integrability,/** @summary Send message via web socket; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:18,message,message,18,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['message'],['message']
Integrability,/** @summary Send only last message of specified kind during defined time interval.; * @desc Idea is to prevent sending multiple messages of similar kind and overload connection; * Instead timeout is started after which only last specified message will be send; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/webwindow.mjs:28,message,message,28,js/modules/webwindow.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/webwindow.mjs,3,['message'],"['message', 'messages']"
Integrability,"/** @summary Send text message via the connection.; * @param {string} msg - text message to send; * @param {number} [chid] - channel id, 1 by default, 0 used only for internal communication */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/webwindow.mjs:23,message,message,23,js/modules/webwindow.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/webwindow.mjs,2,['message'],['message']
Integrability,/** @summary Send text message with web socket; * @desc used for communication with server-side of web canvas; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:23,message,message,23,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['message'],['message']
Integrability,/** @summary Set fast drawing property depending on the size; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:39,depend,depending,39,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['depend'],['depending']
Integrability,"/** @summary Set rendering order for created hierarchy; * @desc depending from provided method sort differently objects; * @param toplevel - top element; * @param origin - camera position used to provide sorting; * @param method - name of sorting method like 'pnt', 'ray', 'size', 'dflt' */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:64,depend,depending,64,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['depend'],['depending']
Integrability,/** @summary Show axis status message; * @desc method called normally when mouse enter main object element; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:30,message,message,30,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['message'],['message']
Integrability,/** @summary Show confirm dialog; * @param {String} title - title; * @param {String} message - message; * @return {Promise} with true when 'Ok' pressed or false when 'Cancel' pressed; * @protected */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:85,message,message,85,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['message'],['message']
Integrability,/** @summary Show message; * @desc Used normally with web-based canvas and handled in ui5; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:18,message,message,18,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['message'],['message']
Integrability,/** @summary Show modal info dialog; * @param {String} title - title; * @param {String} message - message; * @protected */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:88,message,message,88,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['message'],['message']
Integrability,/** @summary Show special message instead of nodes hierarchy */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js:26,message,message,26,ui5/browser/controller/Browser.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js,2,['message'],['message']
Integrability,/** @summary Show warning message about overwritten file should appear */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js:26,message,message,26,ui5/browser/controller/FileDialog.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js,1,['message'],['message']
Integrability,"/** @summary Submit asynchronous http request; * @desc Following requests kind can be specified:; * - 'bin' - abstract binary data, result as string; * - 'buf' - abstract binary data, result as ArrayBuffer (default); * - 'text' - returns req.responseText; * - 'object' - returns parse(req.responseText); * - 'multi' - returns correctly parsed multi.json request; * - 'xml' - returns req.responseXML; * - 'head' - returns request itself, uses 'HEAD' request method; * - 'post' - creates post request, submits req.send(post_data); * - 'postbuf' - creates post request, expects binary data as response; * @param {string} url - URL for the request; * @param {string} kind - kind of requested data; * @param {string} [post_data] - data submitted with post kind of request; * @return {Promise} Promise for requested data, result type depends from the kind; * @example; * import { httpRequest } from 'https://root.cern/js/latest/modules/core.mjs';; * httpRequest('https://root.cern/js/files/thstack.json.gz', 'object'); * .then(obj => console.log(`Get object of type ${obj._typename}`)); * .catch(err => console.error(err.message)); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:828,depend,depends,828,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,"['depend', 'message']","['depends', 'message']"
Integrability,"/** @summary function to accumulate and process all drawings messages; * @desc if not all scripts are loaded, messages are queued and processed later */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:61,message,messages,61,ui5/geom/controller/GeomViewer.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js,2,['message'],['messages']
Integrability,"/** @summary process initial message, now it is list of existing canvases */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js:29,message,message,29,ui5/browser/controller/Browser.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js,1,['message'],['message']
Integrability,/** Abstract interface for storage of hierarchy scan in TRootSniffer */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/inc/TRootSnifferStore.h:13,interface,interface,13,net/http/inc/TRootSnifferStore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/inc/TRootSnifferStore.h,1,['interface'],['interface']
Integrability,/** Access to elements of device matrices provided through TCudaDeviceReference; * class. Note that access is synchronous end enforces device synchronization; * on all streams. Only used for testing. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaMatrix.h:142,synchroniz,synchronization,142,tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaMatrix.h,1,['synchroniz'],['synchronization']
Integrability,"/** An Objective-C ""bridged"" cast expression, which casts between; * Objective-C pointers and C pointers, transferring ownership in the process.; *; * \code; * NSString *str = (__bridge_transfer NSString *)CFCreateString();; * \endcode; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:20,bridg,bridged,20,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['bridg'],['bridged']
Integrability,/** An Objective-C \@interface for a category. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:21,interface,interface,21,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['interface'],['interface']
Integrability,/** An Objective-C \@interface. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:21,interface,interface,21,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['interface'],['interface']
Integrability,/** An Objective-C \@protocol declaration. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:21,protocol,protocol,21,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['protocol'],['protocol']
Integrability,/** An Objective-C \@protocol expression.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:21,protocol,protocol,21,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['protocol'],['protocol']
Integrability,/** An expression that sends a message to an Objective-C; object or class. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:31,message,message,31,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['message'],['message']
Integrability,/** Basic constructor of GaussLegendreIntegrator.; \@param num Number of desired points to calculate the integration.; \@param eps Desired relative error.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussLegendreIntegrator.h:105,integrat,integration,105,math/mathcore/inc/Math/GaussLegendreIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussLegendreIntegrator.h,1,['integrat'],['integration']
Integrability,"/** Blocking synchronization with the associated compute stream, if it's; * not the default stream. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaMatrix.h:13,synchroniz,synchronization,13,tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaMatrix.h,1,['synchroniz'],['synchronization']
Integrability,"/** Default Constructor.; If the tolerance are not given, use default values specified in ROOT::Math::IntegratorOneDimOptions; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h:102,Integrat,IntegratorOneDimOptions,102,math/mathcore/inc/Math/GaussIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h,1,['Integrat'],['IntegratorOneDimOptions']
Integrability,"/** Dfactir.; Function to compute the determinant from a square matrix, Det(A) of; dimension idim and order n. A working area ir is returned which is; needed by the Dfinv routine. @author T. Glebe; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/Dfactir.h:171,rout,routine,171,math/smatrix/inc/Math/Dfactir.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/Dfactir.h,1,['rout'],['routine']
Integrability,/** Dfinv.; Function to compute the inverse of a square matrix (\f$A^{-1}\f$) of; dimension \f$idim\f$ and order \f$n\f$. The routine Dfactir must be called; before Dfinv!. @author T. Glebe; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/Dfinv.h:126,rout,routine,126,math/smatrix/inc/Math/Dfinv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/Dfinv.h,1,['rout'],['routine']
Integrability,"/** Does not evaluate the loss and therefore not trigger a possible synchronization; * with the device. Trains the weights of each layer, but only the bias terms of; * the first layer for compatibility with the previous implementation. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h:68,synchroniz,synchronization,68,tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,2,['synchroniz'],['synchronization']
Integrability,/** Emits an asm or object file for the given module to the filename. This; wraps several c++ only classes (among them a file stream). Returns any; error in ErrorMessage. Use LLVMDisposeMessage to dispose the message. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h:76,wrap,wraps,76,interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h,2,"['message', 'wrap']","['message', 'wraps']"
Integrability,/** Finds the target corresponding to the given triple and stores it in \p T.; Returns 0 on success. Optionally returns any error in ErrorMessage.; Use LLVMDisposeMessage to dispose the message. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h:186,message,message,186,interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h,1,['message'],['message']
Integrability,"/** Generic Constructor of multi dimensional Integrator passing a function. By default uses the adaptive integration method. @param f integration function (multi-dim interface); @param type integration type (adaptive, MC methods, etc..); @param absTol desired absolute Error; @param relTol desired relative Error; @param ncall number of function calls (apply only to MC integration methods); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h:45,Integrat,Integrator,45,math/mathcore/inc/Math/IntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h,6,"['Integrat', 'integrat', 'interface']","['Integrator', 'integration', 'interface']"
Integrability,/** Method invoked from server message to browse to element elid */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:31,message,message,31,ui5/eve7/lib/EveManager.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js,1,['message'],['message']
Integrability,/** Method should be used to close panel; * Depending from used window manager different functionality can be used here */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/panel/Controller.js:44,Depend,Depending,44,ui5/panel/Controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/panel/Controller.js,1,['Depend'],['Depending']
Integrability,/** Objective-C's \@synchronized statement.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:20,synchroniz,synchronized,20,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['synchroniz'],['synchronized']
Integrability,"/** Reads a module from the specified path, returning via the OutMP parameter; a module provider which performs lazy deserialization. Returns 0 on success.; Optionally returns a human-readable error message via OutMessage.; This is deprecated. Use LLVMGetBitcodeModuleInContext2. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/BitReader.h:199,message,message,199,interpreter/llvm-project/llvm/include/llvm-c/BitReader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/BitReader.h,1,['message'],['message']
Integrability,"/** Returns Integral of function on a lower semi-infinite interval.; This function computes, to an attempted specified accuracy, the value of the integral:; \f[; I = \int^{B}_{-\infty} f(x)dx; \f]; Usage:; In any arithmetic expression, this function has the approximate value; of the integral I.; - B: upper end-point of integration interval. The integral is mapped onto [0,1] using a transformation then integral computation is surrogated to DoIntegral.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h:321,integrat,integration,321,math/mathcore/inc/Math/GaussIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h,1,['integrat'],['integration']
Integrability,"/** Returns Integral of function on an upper semi-infinite interval.; This function computes, to an attempted specified accuracy, the value of the integral:; \f[; I = \int^{\infty}_{A} f(x)dx; \f]; Usage:; In any arithmetic expression, this function has the approximate value; of the integral I.; - A: lower end-point of integration interval. The integral is mapped onto [0,1] using a transformation then integral computation is surrogated to DoIntegral.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h:321,integrat,integration,321,math/mathcore/inc/Math/GaussIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h,1,['integrat'],['integration']
Integrability,"/** Returns element content, depends from kind. Can be ""text"" or ""image64"" */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RWrapper.hxx:29,depend,depends,29,gui/browsable/inc/ROOT/Browsable/RWrapper.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RWrapper.hxx,1,['depend'],['depends']
Integrability,"/** Returns element content, depends from kind. Can be ""text"" or ""image64"" or ""json"" */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RElement.hxx:29,depend,depends,29,gui/browsable/inc/ROOT/Browsable/RElement.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browsable/inc/ROOT/Browsable/RElement.hxx,1,['depend'],['depends']
Integrability,/** STL const_iterator interface. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h:23,interface,interface,23,math/smatrix/inc/Math/SMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h,6,['interface'],['interface']
Integrability,/** STL iterator interface. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h:17,interface,interface,17,math/smatrix/inc/Math/SMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h,4,['interface'],['interface']
Integrability,/** Same as Step(...) but also evaluate the loss on the given training data.; * Note that this requires synchronization between host and device. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h:104,synchroniz,synchronization,104,tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,2,['synchroniz'],['synchronization']
Integrability,/** Set integration function (flag control if function must be copied inside).; \@param f Function to be used in the calculations.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h:8,integrat,integration,8,math/mathcore/inc/Math/GaussIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/GaussIntegrator.h,1,['integrat'],['integration']
Integrability,"/** Shuffle the order of the samples in the batch. The shuffling is indirect,; * i.e. only the indices are shuffled. No input data is moved by this; * routine. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DataLoader.h:151,rout,routine,151,tmva/tmva/inc/TMVA/DNN/DataLoader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DataLoader.h,4,['rout'],['routine']
Integrability,/** Similar to StepReducedWeights(...) but also evaluates the loss. May trigger; * synchronization with the device. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h:83,synchroniz,synchronization,83,tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DLMinimizers.h,2,['synchroniz'],['synchronization']
Integrability,"/** TCudaDeviceBuffer; *; * Service class for on-device memory buffers. Uses; * std::shared_pointer with custom destructor to ensure consistent; * memory management and allow for easy copying/moving. A device; * buffer has an associated CUDA compute stream , which is used for; * implicit synchronization of data transfers.; *; * \tparam AFloat The floating point type to be stored in the buffers.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaBuffers.h:289,synchroniz,synchronization,289,tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaBuffers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaBuffers.h,1,['synchroniz'],['synchronization']
Integrability,/** TCudaHostBuffer; *; * Wrapper class for pinned memory buffers on the host. Uses; * std::shared_pointer with custom destructor to ensure consistent; * memory management and allow for easy copying/moving of the; * buffers. Copying is asynchronous and will set the cudaStream of the; * device buffer so that subsequent computations on the device buffer; * can be performed on the same stream.; *; * \tparam AFloat The floating point type to be stored in the buffers.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaBuffers.h:26,Wrap,Wrapper,26,tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaBuffers.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda/CudaBuffers.h,1,['Wrap'],['Wrapper']
Integrability,"/** The TCpu architecture class.; *; * Low-level interface class for multi-threaded CPU architectures. Contains as; * public types the declaration of the scalar, matrix and data loader types; * for this architecture as well as the remaining functions in the low-level; * interface in the form of static members.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h:49,interface,interface,49,tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,2,['interface'],['interface']
Integrability,"/** The TCuda architecture class.; *; * Low-level interface class for CUDA computing architectures. Contains as; * public types the declaration of the scalar, matrix and buffer types; * for this architecture as well as the remaining functions in the low-level; * interface in the form of static members.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda.h:50,interface,interface,50,tmva/tmva/inc/TMVA/DNN/Architectures/Cuda.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cuda.h,2,['interface'],['interface']
Integrability,"/** The TCudnn architecture class.; *; * Low-level interface class for CUDA computing architectures using the cuDNN; * library as backend. Contains as public types the declaration of the scalar,; * matrix and buffer types for this architecture, as well as the remaining; * functions in the low-level interface in the form of static members.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h:51,interface,interface,51,tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/TCudnn.h,2,['interface'],['interface']
Integrability,"/** \addtogroup Histograms; @{; \class TH1C; \brief 1-D histogram with a byte per channel (see TH1 documentation); \class TH1S; \brief 1-D histogram with a short per channel (see TH1 documentation); \class TH1I; \brief 1-D histogram with an int per channel (see TH1 documentation); \class TH1L; \brief 1-D histogram with a long64 per channel (see TH1 documentation); \class TH1F; \brief 1-D histogram with a float per channel (see TH1 documentation); \class TH1D; \brief 1-D histogram with a double per channel (see TH1 documentation); @}; */; /** \class TH1; \ingroup Histograms; TH1 is the base class of all histogram classes in %ROOT. It provides the common interface for operations such as binning, filling, drawing, which; will be detailed below. -# [Creating histograms](\ref creating-histograms); - [Labelling axes](\ref labelling-axis); -# [Binning](\ref binning); - [Fix or variable bin size](\ref fix-var); - [Convention for numbering bins](\ref convention); - [Alphanumeric Bin Labels](\ref alpha); - [Histograms with automatic bins](\ref auto-bin); - [Rebinning](\ref rebinning); -# [Filling histograms](\ref filling-histograms); - [Associated errors](\ref associated-errors); - [Associated functions](\ref associated-functions); - [Projections of histograms](\ref prof-hist); - [Random Numbers and histograms](\ref random-numbers); - [Making a copy of a histogram](\ref making-a-copy); - [Normalizing histograms](\ref normalizing); -# [Drawing histograms](\ref drawing-histograms); - [Setting Drawing histogram contour levels (2-D hists only)](\ref cont-level); - [Setting histogram graphics attributes](\ref graph-att); - [Customising how axes are drawn](\ref axis-drawing); -# [Fitting histograms](\ref fitting-histograms); -# [Saving/reading histograms to/from a ROOT file](\ref saving-histograms); -# [Operations on histograms](\ref operations-on-histograms); -# [Miscellaneous operations](\ref misc). ROOT supports the following histogram types:. - 1-D histograms:; - TH1C : histogra",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:661,interface,interface,661,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['interface'],['interface']
Integrability,"/** \class AdaptiveIntegratorMultiDim; \ingroup Integration. Class for adaptive quadrature integration in multi-dimensions using rectangular regions.; Algorithm from A.C. Genz, A.A. Malik, An adaptive algorithm for numerical integration over; an N-dimensional rectangular region, J. Comput. Appl. Math. 6 (1980) 295-302. Converted/adapted by R.Brun to C++ from Fortran CERNLIB routine RADMUL (D120); The new code features many changes compared to the Fortran version. Control parameters are:. - \f$ minpts \f$: Minimum number of function evaluations requested. Must not exceed maxpts.; if minpts < 1 minpts is set to \f$ 2^n +2n(n+1) +1 \f$ where n is the function dimension; - \f$ maxpts \f$: Maximum number of function evaluations to be allowed.; \f$ maxpts >= 2^n +2n(n+1) +1 \f$; if \f$ maxpts<minpts \f$, \f$ maxpts \f$ is set to \f$ 10minpts \f$; - \f$ epstol \f$, \f$ epsrel \f$ : Specified relative and absolute accuracy. The integral will stop if the relative error is less than relative tolerance OR the; absolute error is less than the absolute tolerance. The class computes in addition to the integral of the function in the desired interval:. - an estimation of the relative accuracy of the result.; - number of function evaluations performed.; - status code:; 0. Normal exit. . At least minpts and at most maxpts calls to the function were performed.; 1. maxpts is too small for the specified accuracy eps.; The result and relerr contain the values obtainable for the; specified value of maxpts.; 2. size is too small for the specified number MAXPTS of function evaluations.; 3. n<2 or n>15. ### Method:. An integration rule of degree seven is used together with a certain; strategy of subdivision.; For a more detailed description of the method see References. ### Notes:. 1..Multi-dimensional integration is time-consuming. For each rectangular; subregion, the routine requires function evaluations.; Careful programming of the integrand might result in substantial saving; of time.; 2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:48,Integrat,Integration,48,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,4,"['Integrat', 'integrat', 'rout']","['Integration', 'integration', 'routine']"
Integrability,"/** \class CombinedCalculator; \ingroup Roostats. CombinedCalculator is an interface class for a tools which can produce both RooStats; HypoTestResults and ConfIntervals. The interface currently assumes that any such; calculator can be configured by specifying:. - a model common model (eg. a family of specific models which includes both the null and alternate),; - a data set,; - a set of parameters of which specify the null (including values and const/non-const status),; - a set of parameters of which specify the alternate (including values and const/non-const status),; - a set of parameters of nuisance parameters (including values and const/non-const status). The interface allows one to pass the model, data, and parameters via a workspace; and then specify them with names. The interface also allows one to pass the model,; data, and parameters without a workspace (which is created internally). After configuring the calculator, one only needs to ask GetHypoTest() (which will; return a HypoTestResult pointer) or GetInterval() (which will return an ConfInterval pointer). The concrete implementations of this interface should deal with the details of how; the nuisance parameters are dealt with (eg. integration vs. profiling) and which test-statistic is used (perhaps this should be added to the interface). The motivation for this interface is that we hope to be able to specify the problem; in a common way for several concrete calculators. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/CombinedCalculator.h:75,interface,interface,75,roofit/roostats/inc/RooStats/CombinedCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/CombinedCalculator.h,8,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"/** \class ConfInterval; \ingroup Roostats. ConfInterval is an interface class for a generic interval in the RooStats framework.; Any tool inheriting from IntervalCalculator can return a ConfInterval.; There are many types of intervals, they may be a simple range [a,b] in 1 dimension,; or they may be disconnected regions in multiple dimensions.; So the common interface is simply to ask the interval if a given point ""IsInInterval"".; The Interval also knows what confidence level it was constructed at and the space of; parameters for which it was constructed.; Note, one could use the same class for a Bayesian ""credible interval"". */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ConfInterval.h:63,interface,interface,63,roofit/roostats/inc/RooStats/ConfInterval.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ConfInterval.h,2,['interface'],['interface']
Integrability,"/** \class DebuggingSampler; \ingroup Roostats. DebuggingSampler is a simple implementation of the DistributionCreator interface used for debugging.; The sampling distribution is uniformly random between [0,1] and is INDEPENDENT of the data. So it is not useful; for true statistical tests, but it is useful for debugging. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/DebuggingSampler.h:119,interface,interface,119,roofit/roostats/inc/RooStats/DebuggingSampler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/DebuggingSampler.h,1,['interface'],['interface']
Integrability,"/** \class DebuggingTestStat; \ingroup Roostats. DebuggingTestStat is a simple implementation of the DistributionCreator interface used for debugging.; The sampling distribution is uniformly random between [0,1] and is INDEPENDENT of the data. So it is not useful; for true statistical tests, but it is useful for debugging. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/DebuggingTestStat.h:121,interface,interface,121,roofit/roostats/inc/RooStats/DebuggingTestStat.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/DebuggingTestStat.h,1,['interface'],['interface']
Integrability,"/** \class HypoTestCalculator; \ingroup Roostats. HypoTestCalculator is an interface class for a tools which produce RooStats; HypoTestResults. The interface currently assumes that any hypothesis test; calculator can be configured by specifying:. - a model for the null,; - a model for the alternate,; - a data set,; - a set of parameters of which specify the null (including values and const/non-const status), and; - a set of parameters of which specify the alternate (including values and const/non-const status). The interface allows one to pass the model, data, and parameters via a workspace; and then specify them with names. The interface will be extended so that one does; not need to use a workspace. After configuring the calculator, one only needs to ask GetHypoTest, which will; return a HypoTestResult pointer. The concrete implementations of this interface should deal with the details of; how the nuisance parameters are dealt with (eg. integration vs. profiling) and; which test-statistic is used (perhaps this should be added to the interface). The motivation for this interface is that we hope to be able to specify the; problem in a common way for several concrete calculators. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HypoTestCalculator.h:75,interface,interface,75,roofit/roostats/inc/RooStats/HypoTestCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HypoTestCalculator.h,8,"['integrat', 'interface']","['integration', 'interface']"
Integrability,"/** \class IntervalCalculator; \ingroup Roostats. IntervalCalculator is an interface class for a tools which produce RooStats; ConfIntervals. The interface currently assumes that any interval calculator can; be configured by specifying:. - a model,; - a data set,; - a set of parameters of interest,; - a set of nuisance parameters (eg. parameters on which the model depends, but are not of interest), and; - a confidence level or size of the test (eg. rate of Type I error). The interface allows one to pass the model, data, and parameters via a workspace; and then specify them with names. The interface will be extended so that one does; not need to use a workspace. After configuring the calculator, one only needs to ask GetInterval, which will; return a ConfInterval pointer. The concrete implementations of this interface should deal with the details of; how the nuisance parameters are dealt with (eg. integration vs. profiling) and; which test-statistic is used (perhaps this should be added to the interface). The motivation for this interface is that we hope to be able to specify the; problem in a common way for several concrete calculators. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/IntervalCalculator.h:75,interface,interface,75,roofit/roostats/inc/RooStats/IntervalCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/IntervalCalculator.h,9,"['depend', 'integrat', 'interface']","['depends', 'integration', 'interface']"
Integrability,"/** \class LikelihoodGradientWrapper; * \brief Virtual base class for implementation of likelihood gradient calculation strategies; *; * This class provides the interface necessary for RooMinimizer (through MinuitFcnGrad) to get the likelihood gradient; * values it needs for fitting the pdf to the data. The strategy by which these values are obtained is up to the; * implementer of this class. Its intended purpose was mainly to allow for parallel calculation strategies.; *; * \note The class is not intended for use by end-users. We recommend to either use RooMinimizer with a RooAbsL derived; * likelihood object, or to use a higher level entry point like RooAbsPdf::fitTo() or RooAbsPdf::createNLL().; */; /*; * \param[in] likelihood Shared pointer to the likelihood that must be evaluated; * \param[in] calculation_is_clean Shared pointer to the object that keeps track of what has been evaluated for the; * current parameter set provided by Minuit. This information can be used by different calculators, so must be shared; * between them. \param[in] minimizer Raw pointer to the minimizer that owns the MinuitFcnGrad object that owns this; * wrapper object.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx:161,interface,interface,161,roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodGradientWrapper.cxx,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"/** \class LikelihoodWrapper; * \brief Virtual base class for implementation of likelihood calculation strategies; *; * This class provides the interface necessary for RooMinimizer (through MinuitFcnGrad) to get the likelihood values it; * needs for fitting the pdf to the data. The strategy by which these values are obtained is up to the implementer of; * this class. Its intended purpose was mainly to allow for parallel calculation strategies, but serial strategies are; * possible too, as illustrated in LikelihoodSerial.; *; * \note The class is not intended for use by end-users. We recommend to either use RooMinimizer with a RooAbsL derived; * likelihood object, or to use a higher level entry point like RooAbsPdf::fitTo() or RooAbsPdf::createNLL().; */; /*; * \param[in] likelihood Shared pointer to the likelihood that must be evaluated; * \param[in] calculation_is_clean Shared pointer to the object that keeps track of what has been evaluated for the; * current parameter set provided by Minuit. This information can be used by different calculators, so must be shared; * between them.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodWrapper.cxx:144,interface,interface,144,roofit/roofitcore/src/TestStatistics/LikelihoodWrapper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodWrapper.cxx,1,['interface'],['interface']
Integrability,"/** \class Messenger; *; * \brief Manages ZeroMQ sockets and wraps send and receive calls; *; * This class is used for all interprocess communication between the master,; * queue and worker processes. It sets up ZeroMQ sockets between all processes; * over IPC socket files stored in /tmp on the filesystem.; *; * Several sockets are used for communication between different places for; * different purposes:; * - Master and queue processes each have a PUSH-PULL socket pair to directly; * send/receive data between only the master and queue processes. This is; * currently used mainly for sending tasks to the queue from master. The; * socket from queue back to master is used only to test connections and may; * be removed in the future.; * - The queue process also has a PUSH-PULL socket pair with each worker; * process. These are used by the workers to obtain tasks from the queue.; * - The master has a PUB socket that the workers subscribe to with SUB; * sockets. These are used to update state. Note that to ensure robust; * reception of all messages on the SUB socket, it's important to send over; * state in as little messages as possible. For instance, it's best to send; * arrays over in a single big message instead of sending over each element; * separately. This also improves performance, since each message has some; * fixed overhead.; * - Each worker has a PUSH socket connected to a PULL socket on master that; * is used to send back task results from workers to master in; * 'JobManager::retrieve()'.; *; * @param process_manager ProcessManager instance which manages the master,; * queue and worker processes that we want to set up; * communication for in this Messenger.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:61,wrap,wraps,61,roofit/multiprocess/src/Messenger.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx,5,"['message', 'wrap']","['message', 'messages', 'wraps']"
Integrability,/** \class MinNLLTestStat; \ingroup Roostats. MinNLLTestStat is an implementation of the TestStatistic interface that; calculates the minimum value of the negative log likelihood; function and returns it as a test statistic.; Internally it operates by delegating to a MinNLLTestStat object. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MinNLLTestStat.h:103,interface,interface,103,roofit/roostats/inc/RooStats/MinNLLTestStat.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/MinNLLTestStat.h,1,['interface'],['interface']
Integrability,"/** \class PiecewiseInterpolation; * \ingroup HistFactory; * The PiecewiseInterpolation is a class that can morph distributions into each other, which; * is useful to estimate systematic uncertainties. Given a nominal distribution and one or; * more altered or distorted ones, it computes a new shape depending on the value of the nuisance; * parameters \f$ \alpha_i \f$:; * \f[; * A = \sum_i \mathrm{Interpolate}(\mathrm{low}_i, \mathrm{nominal}, \mathrm{high}_i, \alpha_i).; * \f]; * If an \f$ \alpha_i \f$ is zero, the distribution is identical to the nominal distribution, at; * \f$ \pm 1 \f$ it is identical to the up/down distribution for that specific \f$ i \f$.; *; * The class supports several interpolation methods, which can be selected for each parameter separately; * using setInterpCode(). The default interpolation code is 4. This performs; * - \f$ |\alpha | > 1 \f$: Linear extrapolation.; * - \f$ |\alpha | < 1 \f$: Polynomial interpolation. A sixth-order polynomial is used. Its coefficients; * are chosen such that function, first, and second derivative at \f$ \alpha \pm 1 \f$ match the values; * that the extrapolation procedure uses.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx:301,depend,depending,301,roofit/histfactory/src/PiecewiseInterpolation.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/PiecewiseInterpolation.cxx,1,['depend'],['depending']
