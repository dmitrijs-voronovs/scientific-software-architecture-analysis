quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,"# now we need new model configs, with PDF=""model""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:24,config,configs,24,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,1,['config'],['configs']
Modifiability,"# now, you can easily use your workspace to run your fit (as you usually would); # the model config is named after your pdf, i.e. <the pdf name>_modelConfig",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf515_hfJSON.py:93,config,config,93,tutorials/roofit/rf515_hfJSON.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf515_hfJSON.py,1,['config'],['config']
Modifiability,"# old syntax to access the variable x; # frame = w.x.frame()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf509_wsinteractive.py:27,variab,variable,27,tutorials/roofit/rf509_wsinteractive.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf509_wsinteractive.py,1,['variab'],['variable']
Modifiability,"# print(""generating extended dataset"")",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:20,extend,extended,20,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,1,['extend'],['extended']
Modifiability,"# remove allDict.cxx.pch as it's not portable (rebuild on first run, see cppyy)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py:37,portab,portable,37,bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/setup.py,1,['portab'],['portable']
Modifiability,"# restore source to its previous value; # NOTE: dup2 makes stdout_fd inheritable unconditionally",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/python/cmdLineUtils.py:69,inherit,inheritable,69,main/python/cmdLineUtils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/python/cmdLineUtils.py,1,['inherit'],['inheritable']
Modifiability,"# setprecision(15); # Same with custom configuration; # -----------------------------------------------------------; # Construct a custom configuration which uses the adaptive Gauss-Kronrod technique; # for closed 1D integrals",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:39,config,configuration,39,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,3,"['adapt', 'config']","['adaptive', 'configuration']"
Modifiability,"# the following is a wee bit interesting due to python resolution; # rules on the one hand, and C++ inheritance on the other: python; # will never select the derived comparison b/c the call will fail; # to pass a base through a const derived&",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_operators.py:100,inherit,inheritance,100,bindings/pyroot/cppyy/cppyy/test/test_operators.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_operators.py,1,['inherit'],['inheritance']
Modifiability,"# the following is invalid, GDB fails with:; # Python Exception <class 'gdb.error'> Attempt to take address of value; # not located in memory.; # because isEqual took parameter (for the unsigned long key I was testing); # by const ref, and GDB; # It's also not entirely general - we should be accessing the ""getFirst()""; # member function, not the 'first' member variable, but I've yet to figure; # out how to find/call member functions (especially (const) overloaded; # ones) on a gdb.Value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/gdb-scripts/prettyprinters.py:363,variab,variable,363,interpreter/llvm-project/llvm/utils/gdb-scripts/prettyprinters.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/gdb-scripts/prettyprinters.py,1,['variab'],['variable']
Modifiability,"# there's eg. one global variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonization.py:25,variab,variable,25,bindings/pyroot/cppyy/cppyy/test/test_pythonization.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_pythonization.py,1,['variab'],['variable']
Modifiability,"# variable assignment",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py:2,variab,variable,2,bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_lowlevel.py,1,['variab'],['variable']
Modifiability,"# variable; # GetAllCppNames() behaves differently from python dir() but providing the full; # set, which is then filtered in dir(); check both",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py:2,variab,variable,2,bindings/pyroot/cppyy/cppyy/test/test_fragile.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/test/test_fragile.py,1,['variab'],['variable']
Modifiability,"# variables to be read. If the file has more fields, these are ignored.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py:2,variab,variables,2,tutorials/roofit/rf102_dataimport.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py,1,['variab'],['variables']
Modifiability,# will set up own output file; # flags below are inherited from the perl implementation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py:49,inherit,inherited,49,interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libscanbuild/analyze.py,1,['inherit'],['inherited']
Modifiability,#!/usr/bin/env python; # To use:; # 1) Update the 'decls' list below with your fuzzing configuration.; # 2) Run with the clang binary as the command-line argument.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/modfuzz.py:87,config,configuration,87,interpreter/llvm-project/clang/utils/modfuzz.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/modfuzz.py,1,['config'],['configuration']
Modifiability,"#!/usr/bin/env python; # changelog:; # 10/13/2005b: replaced the # in tmp(.#*)* with alphanumeric and _, this will then remove; # nodes such as %tmp.1.i and %tmp._i.3; # 10/13/2005: exntended to remove variables of the form %tmp(.#)* rather than just; #%tmp.#, i.e. it now will remove %tmp.12.3.15 etc, additionally fixed a spelling error in; # the comments; # 10/12/2005: now it only removes nodes and edges for which the label is %tmp.# rather; # than removing all lines for which the lable CONTAINS %tmp.#",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/DSAclean.py:202,variab,variables,202,interpreter/llvm-project/llvm/utils/DSAclean.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/DSAclean.py,1,['variab'],['variables']
Modifiability,"#!/usr/bin/env python; #; # ===- exploded-graph-rewriter.py - ExplodedGraph dump tool -----*- python -*--#; #; # Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; # See https://llvm.org/LICENSE.txt for license information.; # SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; #; # ===-----------------------------------------------------------------------===#",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/exploded-graph-rewriter.py:48,rewrite,rewriter,48,interpreter/llvm-project/clang/utils/analyzer/exploded-graph-rewriter.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/exploded-graph-rewriter.py,1,['rewrite'],['rewriter']
Modifiability,"## Create TMVA Factory; # Create the Factory class. Later you can choose the methods; # whose performance you'd like to investigate.; # The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to pass; # - The first argument is the base of the name of all the output; # weight files in the directory weight/ that will be created with the; # method parameters; # - The second argument is the output file for the training results; # - The third argument is a string option defining some general configuration for the TMVA session.; # For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in the; # option string; # - note that we disable any pre-transformation of the input variables and we avoid computing correlations between; # input variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:540,config,configuration,540,tutorials/tmva/TMVA_CNN_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py,3,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"## Creates the input variable histogram and perform the transformations if necessary; # @param dl DataLoader object; # @param className string Signal/Background; # @param variableName string containing the variable name; # @param numBin for creating the histogram; # @param processTrfs string containing the list of transformations to be used on input variable; eg. ""I;N;D;P;U;G,D""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py:21,variab,variable,21,bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py,4,['variab'],"['variable', 'variableName']"
Modifiability,"## Declare DataLoader(s); # The next step is to declare the DataLoader class that deals with input variables; # Define the input variables that shall be used for the MVA training; # note that you may also use variable expressions, which can be parsed by TTree::Draw( ""expression"" )]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:99,variab,variables,99,tutorials/tmva/TMVA_Higgs_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py,3,['variab'],"['variable', 'variables']"
Modifiability,"## Declare DataLoader(s); # The next step is to declare the DataLoader class that deals with input variables; # Define the input variables that shall be used for the MVA training; # note that you may also use variable expressions, which can be parsed by TTree::Draw( ""expression"" )]; # In this case the input data consists of an image of 16x16 pixels. Each single pixel is a branch in a ROOT TTree",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:99,variab,variables,99,tutorials/tmva/TMVA_CNN_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py,3,['variab'],"['variable', 'variables']"
Modifiability,"## Declare Factory; # Create the Factory class. Later you can choose the methods; # whose performance you'd like to investigate.; # The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to; # pass; # - The first argument is the base of the name of all the output; # weightfiles in the directory weight/ that will be created with the; # method parameters; # - The second argument is the output file for the training results; #; # - The third argument is a string option defining some general configuration for the TMVA session.; # For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in; # the option string; # // Creating the factory object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:541,config,configuration,541,tutorials/tmva/TMVA_RNN_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py,1,['config'],['configuration']
Modifiability,"## Draw input variables; # This function uses the previously defined GetInputVariableHist function to create the histograms; # @param dl The object pointer; # @param variableName string containing the variable name; # @param numBin for creating the histogram; # @param processTrfs list of transformations to be used on input variable; eg. [""I"", ""N"", ""D"", ""P"", ""U"", ""G""]""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py:14,variab,variables,14,bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py,4,['variab'],"['variable', 'variableName', 'variables']"
Modifiability,"## Here we book the new DNN of TMVA if we have support in ROOT. We will use GPU version if ROOT is enabled with GPU; ## Booking Deep Neural Network; # Here we define the option string for building the Deep Neural network model.; #### 1. Define DNN layout; # The DNN configuration is defined using a string. Note that whitespaces between characters are not allowed.; # We define first the DNN layout:; # - **input layout** : this defines the input data format for the DNN as ``input depth | height | width``.; # In case of a dense layer as first layer the input layout should be ``1 | 1 | number of input variables`` (features); # - **batch layout** : this defines how are the input batch. It is related to input layout but not the same.; # If the first layer is dense it should be ``1 | batch size ! number of variables`` (features); # *(note the use of the character `|` as separator of input parameters for DNN layout)*; # note that in case of only dense layer the input layout could be omitted but it is required when defining more; # complex architectures; # - **layer layout** string defining the layer architecture. The syntax is; # - layer type (e.g. DENSE, CONV, RNN); # - layer parameters (e.g. number of units); # - activation function (e.g TANH, RELU,...); # *the different layers are separated by the ``"",""`` *; #### 2. Define Training Strategy; # We define here the training strategy parameters for the DNN. The parameters are separated by the ``"",""`` separator.; # One can then concatenate different training strategy with different parameters. The training strategy are separated by; # the ``""|""`` separator.; # - Optimizer; # - Learning rate; # - Momentum (valid for SGD and RMSPROP); # - Regularization and Weight Decay; # - Dropout; # - Max number of epochs; # - Convergence steps. if the test error will not decrease after that value the training will stop; # - Batch size (This value must be the same specified in the input layout); # - Test Repetitions (the interval when the test",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:266,config,configuration,266,tutorials/tmva/TMVA_Higgs_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py,3,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"## Returns a list with input variable names; # @param self the object pointer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:29,variab,variable,29,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,1,['variab'],['variable']
Modifiability,"## Rewrite TMVA::DataLoader::PrepareTrainingAndTestTree; # @param *args positional parameters; # @param **kwargs named parameters: this will be transformed to option string",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py:3,Rewrite,Rewrite,3,bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/DataLoader.py,1,['Rewrite'],['Rewrite']
Modifiability,"## Rewrite TMVA::Factory::BookMethod; # @param *args positional parameters; # @param **kwargs named parameters: this will be transformed to option string",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:3,Rewrite,Rewrite,3,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,1,['Rewrite'],['Rewrite']
Modifiability,"## Rewrite function for TMVA::Factory::TrainAllMethods. This function provides interactive training.; # The training will be started on separated thread. The main thread will periodically check for updates and will create; # the JS output which will update the plots and progress bars. The main thread must contain `while True`, because, if not; # it will cause crash (output will be flushed by tornado IOLoop (runs on main thread), but the output streams are; # C++ atomic types); # @param fac the factory object pointer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:3,Rewrite,Rewrite,3,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,1,['Rewrite'],['Rewrite']
Modifiability,"## Rewrite the constructor of TMVA::Factory::EvaluateImportance; # @param *args positional parameters; # @param **kwargs named parameters: this will be transformed to option string",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:3,Rewrite,Rewrite,3,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,1,['Rewrite'],['Rewrite']
Modifiability,"## Rewrite the constructor of TMVA::Factory; # @param *args positional parameters; # @param **kwargs named parameters: this will be transformed to option string",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:3,Rewrite,Rewrite,3,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,1,['Rewrite'],['Rewrite']
Modifiability,"## Show DNN weights in a heat map. It will produce an ipywidget element, where the layers can be selected.; # @param fac object pointer; # @param datasetName name of current dataset; # @param methodName DNN's name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:83,layers,layers,83,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,1,['layers'],['layers']
Modifiability,"## This function creates a correlation matrix from python matrix.; # @param self object pointer; # @param title first part of the title of histogram; # @param className Signal/Background: it will be on title; # @param varNames array with variable names; # @param matrix the correlation matrix",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/OutputTransformer.py:238,variab,variable,238,bindings/pyroot/pythonizations/python/ROOT/JsMVA/OutputTransformer.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/OutputTransformer.py,1,['variab'],['variable']
Modifiability,"## This function gets the classifier information and weights in JSON formats, and the selected layers and it will create; # the weight heat map.; # @param net DNN in JSON format; # @param selectedLayers the selected layers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py:95,layers,layers,95,bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/Factory.py,2,['layers'],['layers']
Modifiability,"## Transform Variable related information to table.; # @param self object pointer; # @param headerMatch re.match object for the first line; # @param startIndex it defines where we are in self.lines array; # @param maxlen defines how many iterations we can do from startIndex",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/OutputTransformer.py:13,Variab,Variable,13,bindings/pyroot/pythonizations/python/ROOT/JsMVA/OutputTransformer.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/pythonizations/python/ROOT/JsMVA/OutputTransformer.py,1,['Variab'],['Variable']
Modifiability,"## \file rf505_asciicfg.py; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## Organization and simultaneous fits: reading and writing ASCII configuration files; ##; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf505_asciicfg.py:144,config,configuration,144,tutorials/roofit/rf505_asciicfg.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf505_asciicfg.py,1,['config'],['configuration']
Modifiability,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## A single top analysis using the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of single top production adapted from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. Top quarks with a mass of about 172 GeV are mostly; ## produced in pairs but also appear alone, dominantly from the decays of a W boson in association with a light jet.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df107_SingleTopAnalysis.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date July 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:210,adapt,adapted,210,tutorials/dataframe/df107_SingleTopAnalysis.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py,1,['adapt'],['adapted']
Modifiability,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Configure a Dask connection and fill two histograms distributedly.; ##; ## This tutorial shows the ingredients needed to setup the connection to a Dask; ## cluster (e.g. a `LocalCluster` for a single machine). After this initial; ## setup, an RDataFrame with distributed capabilities is created and connected; ## to a Dask `Client` instance. Finally, a couple of histograms are drawn from; ## the created columns in the dataset. Relevant documentation can be found at; ## http://distributed.dask.org/en/stable .; ##; ## \macro_code; ## \macro_image; ##; ## \date February 2022; ## \author Vincenzo Eduardo Padulano",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py:65,Config,Configure,65,tutorials/dataframe/distrdf002_dask_connection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py,1,['Config'],['Configure']
Modifiability,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Configure a Dask connection and visualize the filling of a 1D and 2D; ## histograms distributedly.; ##; ## This tutorial showcases the process of setting up real-time data representation ; ## for distributed computations.; ## By calling the LiveVisualize function, you can observe the canvas updating; ## with the intermediate results of the histograms as the; ## distributed computation progresses. ; ##; ## \macro_code; ## \macro_image; ##; ## \date August 2023; ## \author Silia Taider",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf003_live_visualization.py:65,Config,Configure,65,tutorials/dataframe/distrdf003_live_visualization.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf003_live_visualization.py,1,['Config'],['Configure']
Modifiability,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Configure a Spark connection and fill two histograms distributedly.; ##; ## This tutorial shows the ingredients needed to setup the connection to a Spark; ## cluster, namely a SparkConf object holding configuration parameters and a; ## SparkContext object created with the desired options. After this initial; ## setup, an RDataFrame with distributed capabilities is created and connected; ## to the SparkContext instance. Finally, a couple of histograms are drawn from; ## the created columns in the dataset.; ##; ## \macro_code; ## \macro_image; ##; ## \date March 2021; ## \author Vincenzo Eduardo Padulano",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:65,Config,Configure,65,tutorials/dataframe/distrdf001_spark_connection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py,2,"['Config', 'config']","['Configure', 'configuration']"
Modifiability,"## \file; ## \ingroup tutorial_math; ## \notebook; ## Example macro showing some major probability density functions in ROOT.; ## The macro shows four of them with; ## respect to their two variables. In order to run the macro type:; ##; ## ~~~{.cpp}; ## root [0] .x mathcoreStatFunc.C; ## ~~~; ##; ## Original tutorial by Andras Zsenei.; ## \macro_image; ## \macro_code; ##; ## \author Alberto Ferro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/mathcoreStatFunc.py:189,variab,variables,189,tutorials/math/mathcoreStatFunc.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/mathcoreStatFunc.py,1,['variab'],['variables']
Modifiability,"## \file; ## \ingroup tutorial_math; ## \notebook; ## Principal Components Analysis (PCA) example; ##; ## Example of using TPrincipal as a stand alone class.; ##; ## I create n-dimensional data points, where c = trunc(n / 5) + 1; ## are correlated with the rest n - c randomly distributed variables.; ##; ## Based on principal.C by Rene Brun and Christian Holm Christensen; ##; ## \macro_output; ## \macro_code; ##; ## \authors Juan Fernando, Jaramillo Botero",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py:289,variab,variables,289,tutorials/math/principal.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py,1,['variab'],['variables']
Modifiability,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## Data and categories: working with ROOT.RooCategory objects to describe discrete variables; ##; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf404_categories.py:144,variab,variables,144,tutorials/roofit/rf404_categories.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf404_categories.py,1,['variab'],['variables']
Modifiability,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## Numeric algorithm tuning: configuration and customization of how MC sampling algorithms; ## on specific pdfs are executed; ##; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:90,config,configuration,90,tutorials/roofit/rf902_numgenconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py,1,['config'],['configuration']
Modifiability,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## Numeric algorithm tuning: configuration and customization of how numeric (partial) integrals are executed; ##; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:90,config,configuration,90,tutorials/roofit/rf901_numintconfig.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py,1,['config'],['configuration']
Modifiability,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## This macro demonstrates how to set up a fit in two ranges for plain; ## likelihoods and extended likelihoods.; ##; ## ### 1. Shape fits (plain likelihood); ##; ## If you fit a non-extended pdf in two ranges, e.g. `pdf.fitTo(data,Range=""Range1,Range2"")`,; ## it will fit the shapes in the two selected ranges and also take into account the relative; ## predicted yields in those ranges.; ##; ## This is useful for example to represent a full-range fit, but with a; ## blinded signal region inside it.; ##; ##; ## ### 2. Shape+rate fits (extended likelihood); ##; ## If your pdf is extended, i.e. measuring both the distribution in the observable as well; ## as the event count in the fitted region, some intervention is needed to make fits in ranges; ## work in a way that corresponds to intuition.; ##; ## If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence; ## the expected event count will converge to a number that is smaller than what's visible in a plot.; ## In such cases, it is often preferred to interpret the extended term with respect to the full range; ## that's plotted, i.e., apply a correction to the extended likelihood term in such a way; ## that the interpretation of the expected event count remains that of the full range. This can; ## be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the; ## fitted range) in the Poisson term that represents the extended likelihood term.; ##; ## If an extended likelihood fit is performed over *two* sub-ranges, this correction is; ## even more important: without it, each component likelihood would have a different interpretation; ## of the expected event count (each corresponding to the count in its own region), and a joint; ## fit of these regions with different interpretations of the same model parameter results; ## in a number that is not easily interpreted.; ##; ## If both re",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:152,extend,extended,152,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,5,['extend'],['extended']
Modifiability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Addition and convolution: setting up an extended maximum likelihood fit; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py:96,extend,extended,96,tutorials/roofit/rf202_extendedmlfit.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py,1,['extend'],['extended']
Modifiability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Basic functionality: plotting unbinned data with alternate and variable binnings; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf108_plotbinning.py:119,variab,variable,119,tutorials/roofit/rf108_plotbinning.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf108_plotbinning.py,1,['variab'],['variable']
Modifiability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Extended maximum likelihood fit in multiple ranges.; ##; ## \macro_code; ## \macro_output; ##; ## \date March 2021; ## \authors Harshal Shende, Stephan Hageboeck (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204a_extendedLikelihood.py:56,Extend,Extended,56,tutorials/roofit/rf204a_extendedLikelihood.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204a_extendedLikelihood.py,1,['Extend'],['Extended']
Modifiability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: using the likelihood ratio technique to construct a signal; ## enhanced one-dimensional projection of a multi-dimensional pdf; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf316_llratioplot.py:144,enhance,enhanced,144,tutorials/roofit/rf316_llratioplot.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf316_llratioplot.py,1,['enhance'],['enhanced']
Modifiability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: working with parameterized ranges in a fit.; ## This an example of a fit with an acceptance that changes per-event; ##; ## `pdf = exp(-t/tau)` with `t[tmin,5]`; ##; ## where `t` and `tmin` are both observables in the dataset; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf314_paramfitrange.py:94,parameteriz,parameterized,94,tutorials/roofit/rf314_paramfitrange.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf314_paramfitrange.py,1,['parameteriz'],['parameterized']
Modifiability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: working with parameterized ranges to define non-rectangular; ## regions for fitting and integration; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf313_paramranges.py:94,parameteriz,parameterized,94,tutorials/roofit/rf313_paramranges.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf313_paramranges.py,1,['parameteriz'],['parameterized']
Modifiability,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Numeric algorithm tuning: caching of slow numeric integrals and parameterizations of slow numeric integrals; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:120,parameteriz,parameterizations,120,tutorials/roofit/rf903_numintcache.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py,1,['parameteriz'],['parameterizations']
Modifiability,"## \file; ## \ingroup tutorial_roostats; ## \notebook -js; ## Example of the BernsteinCorrection utility in RooStats.; ##; ## The idea is that one has a distribution coming either from data or Monte Carlo; ## (called ""reality"" in the macro) and a nominal model that is not sufficiently; ## flexible to take into account the real distribution. One wants to take into; ## account the systematic associated with this imperfect modeling by augmenting; ## the nominal model with some correction term (in this case a polynomial).; ## The BernsteinCorrection utility will import into your workspace a corrected model; ## given by nominal(x) * poly_N(x), where poly_N is an n-th order polynomial in; ## the Bernstein basis. The degree N of the polynomial is chosen by specifying the tolerance; ## one has in adding an extra term to the polynomial.; ## The Bernstein basis is nice because it only has positive-definite terms; ## and works well with PDFs.; ## Finally, the macro makes a plot of:; ## - the data (drawn from 'reality'),; ## - the best fit of the nominal model (blue); ## - and the best fit corrected model.; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \date June 2022; ## \authors Artem Busorgin, Kyle Cranmer (C++ version)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py:290,flexible,flexible,290,tutorials/roostats/rs_bernsteinCorrection.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py,1,['flexible'],['flexible']
Modifiability,"## \file; ## \ingroup tutorial_roostats; ## \notebook; ## This example is a generalization of the on/off problem.; ##; ## This example is a generalization of the on/off problem.; ## It's a common setup for SUSY searches. Imagine that one has two; ## variables ""x"" and ""y"" (eg. missing ET and SumET), see figure.; ## The signal region has high values of both of these variables (top right).; ## One can see low values of ""x"" or ""y"" acting as side-bands. If we; ## just used ""y"" as a sideband, we would have the on/off problem.; ## - In the signal region we observe non events and expect s+b events.; ## - In the region with low values of ""y"" (bottom right); ## we observe noff events and expect tau*b events.; ## Note the significance of tau. In the background only case:; ##; ## ~~~{.cpp}; ## tau ~ <expectation off> / <expectation on>; ## ~~~; ##; ## If tau is known, this model is sufficient, but often tau is not known exactly.; ## So one can use low values of ""x"" as an additional constraint for tau.; ## Note that this technique critically depends on the notion that the; ## joint distribution for ""x"" and ""y"" can be factorized.; ## Generally, these regions have many events, so it the ratio can be; ## measured very precisely there. So we extend the model to describe the; ## left two boxes... denoted with ""bar"".; ## - In the upper left we observe nonbar events and expect bbar events; ## - In the bottom left we observe noffbar events and expect tau bbar events; ## Note again we have:; ##; ## ~~~{.cpp}; ## tau ~ <expectation off bar> / <expectation on bar>; ## ~~~; ##; ## One can further expand the model to account for the systematic associated; ## to assuming the distribution of ""x"" and ""y"" factorizes (eg. that; ## tau is the same for off/on and offbar/onbar). This can be done in several; ## ways, but here we introduce an additional parameter rho, which so that; ## one set of models will use tau and the other tau*rho. The choice is arbitrary,; ## but it has consequences on the nume",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:250,variab,variables,250,tutorials/roostats/FourBinInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py,2,['variab'],['variables']
Modifiability,"## \file; ## \ingroup tutorial_tmva; ## \notebook; ## Classification example of TMVA based on public Higgs UCI dataset; ##; ## The UCI data set is a public HIGGS data set , see http://archive.ics.uci.edu/ml/datasets/HIGGS; ## used in this paper: Baldi, P., P. Sadowski, and D. Whiteson. “Searching for Exotic Particles in High-energy Physics; ## with Deep Learning.” Nature Communications 5 (July 2, 2014).; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \author Harshal Shende; ## Declare Factory; ## Create the Factory class. Later you can choose the methods; ## whose performance you'd like to investigate.; ## The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to pass; ## - The first argument is the base of the name of all the output; ## weightfiles in the directory weight/ that will be created with the; ## method parameters; ## - The second argument is the output file for the training results; ## - The third argument is a string option defining some general configuration for the TMVA session. For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in the option string",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:1037,config,configuration,1037,tutorials/tmva/TMVA_Higgs_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py,1,['config'],['configuration']
Modifiability,"## add event variables (image); ## use new method (from ROOT 6.20 to add a variable array for all image data)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:13,variab,variables,13,tutorials/tmva/TMVA_CNN_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py,2,['variab'],"['variable', 'variables']"
Modifiability,"## add variables - use new AddVariablesArray function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:7,variab,variables,7,tutorials/tmva/TMVA_RNN_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py,1,['variab'],['variables']
Modifiability,"### Book Convolutional Neural Network in TMVA; # For building a CNN one needs to define; # - Input Layout : number of channels (in this case = 1) | image height | image width; # - Batch Layout : batch size | number of channels | image size = (height*width); # Then one add Convolutional layers and MaxPool layers.; # - For Convolutional layer the option string has to be:; # - CONV | number of units | filter height | filter width | stride height | stride width | padding height | paddig; # width | activation function; # - note in this case we are using a filer 3x3 and padding=1 and stride=1 so we get the output dimension of the; # conv layer equal to the input; # - note we use after the first convolutional layer a batch normalization layer. This seems to help significantly the; # convergence; # - For the MaxPool layer:; # - MAXPOOL | pool height | pool width | stride height | stride width; # The RESHAPE layer is needed to flatten the output before the Dense layer; # Note that to run the CNN is required to have CPU or GPU support",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:287,layers,layers,287,tutorials/tmva/TMVA_CNN_Classification.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py,2,['layers'],['layers']
Modifiability,"### User configuration; # If you want to use a different 'benchmark' than building clang, make this; # function do what you want. out_dir is the build directory for clang, so all; # of the clang binaries will live under ""${out_dir}/bin/"". Using clang in; # ${out_dir} will magically have the profiles go to the right place.; #; # You may assume that out_dir is a freshly-built directory that you can reach; # in to build more things, if you'd like.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/collect_and_build_with_pgo.py:9,config,configuration,9,interpreter/llvm-project/llvm/utils/collect_and_build_with_pgo.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/collect_and_build_with_pgo.py,1,['config'],['configuration']
Modifiability,###############################################################################; # Configuration setup.; ###############################################################################; # Find Clang for static analysis.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py:83,Config,Configuration,83,interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/analyzer/SATestBuild.py,1,['Config'],['Configuration']
Modifiability,"###############################################################################; # Global variables #; ###############################################################################",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:90,variab,variables,90,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,1,['variab'],['variables']
Modifiability,"###############################################################################; # argparse configuration #; ###############################################################################",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py:92,config,configuration,92,interpreter/cling/tools/packaging/cpt.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/tools/packaging/cpt.py,1,['config'],['configuration']
Modifiability,"#)root/roostats:$Id$; // Authors: Kevin Belasco 17/06/2009; // Authors: Kyle Cranmer 17/06/2009; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::MetropolisHastings; \ingroup Roostats. This class uses the Metropolis-Hastings algorithm to construct a Markov Chain; of data points using Monte Carlo. In the main algorithm, new points in the; parameter space are proposed and then visited based on their relative; likelihoods. This class can use any implementation of the ProposalFunction,; including non-symmetric proposal functions, to propose parameter points and; still maintain detailed balance when constructing the chain. The ""Likelihood"" function that is sampled when deciding what steps to take in; the chain has been given a very generic implementation. The user can create; any RooAbsReal based on the parameters and pass it to a MetropolisHastings; object with the method SetFunction(RooAbsReal&). Be sure to tell; MetropolisHastings whether your RooAbsReal is on a (+/-) regular or log scale,; so that it knows what logic to use when sampling your RooAbsReal. For example,; a common use is to sample from a -log(Likelihood) distribution (NLL), for which; the appropriate configuration calls are SetType(MetropolisHastings::kLog);; SetSign(MetropolisHastings::kNegative);; If you're using a traditional likelihood function:; SetType(MetropolisHastings::kRegular); SetSign(MetropolisHastings::kPositive);; You must set these type and sign flags or MetropolisHastings will not construct; a MarkovChain. Also note that in ConstructChain(), the values of the variables are randomized; uniformly over their intervals before construction of the MarkovChain begins. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MetropolisHastings.cxx:1516,config,configuration,1516,roofit/roostats/src/MetropolisHastings.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MetropolisHastings.cxx,2,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"#; # Classes, variables etc.; #",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py:14,variab,variables,14,bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/cling/python/cppyy_backend/bindings_utils.py,2,['variab'],['variables']
Modifiability,"#; # Ideally, the HybridCalculator would be able to inspect the full; # model $Pois(x | s+b) * Pois(y | tau b )$ and be given the original; # prior $\eta(b)$ to form $\pi(b) = Pois(y|tau*b) * \eta(b)$.; # This is not yet implemented because in the general case; # it is not easy to identify the terms in the PDF that correspond; # to the auxiliary measurement. So for now, it must be set; # explicitly with:; # - ForcePriorNuisanceNull(); # - ForcePriorNuisanceAlt(); # the name ""ForcePriorNuisance"" was chosen because we anticipate; # this to be auto-detected, but will leave the option open; # to force to a different prior for the nuisance parameters.; # Part 3d : Construct and configure the HybridCalculator; # -------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:682,config,configure,682,tutorials/roostats/HybridInstructional.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py,1,['config'],['configure']
Modifiability,"#; # Ideally, the HybridCalculator would be able to inspect the full; # model Pois(x | s+b) * Pois(y | tau b ) and be given the original; # prior $\eta(b)$ to form $\pi(b) = Pois(y|tau*b) * \eta(b)$.; # This is not yet implemented because in the general case; # it is not easy to identify the terms in the PDF that correspond; # to the auxiliary measurement. So for now, it must be set; # explicitly with:; # - ForcePriorNuisanceNull(); # - ForcePriorNuisanceAlt(); # the name ""ForcePriorNuisance"" was chosen because we anticipate; # this to be auto-detected, but will leave the option open; # to force to a different prior for the nuisance parameters.; # Part 3d : Construct and configure the HybridCalculator; # -------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:680,config,configure,680,tutorials/roostats/HybridStandardForm.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py,1,['config'],['configure']
Modifiability,"$ are filled by weighting the events with \f${_s{\cal P}}\f$ . 4. Error bars per bin are given by Eq. (6). The \f$\hbox {$_s$}{\cal P}lots\f$ reproduce the true distributions of the species; in the control variable \f$x\f$, within the above defined statistical uncertainties. ### Illustrations. To illustrate the technique, one considers an example derived from the analysis where; \f$\hbox {$_s$}{\cal P}lots\f$; have been first used (charmless B decays). One is dealing with a data; sample in which two species are present: the first is termed signal and; the second background. A maximum Likelihood fit is performed to obtain; the two yields \f$N_1\f$ and \f$N_2\f$ . The fit relies on two discriminating; variables collectively denoted \f$y\f$ which are chosen within three possible; variables denoted \f${m_{\rm ES}}\f$ , \f$\Delta E\f$ and \f${\cal F}\f$.; The variable which is not incorporated in \f$y\f$ is used as the control variable; \f$x\f$ . The six distributions of the three variables are assumed to be the ones; depicted in Fig. 1. \image html splot_pdfmesNIM.png Figure 1 width=800. Distributions of the three discriminating variables available to perform the Likelihood fit:; \f${m_{\rm ES}}\f$ , \f$\Delta E\f$ , \f${\cal F}\f$ .; Among the three variables, two are used to perform the fit while one is; kept out of the fit to serve the purpose of a control variable. The; three distributions on the top (resp. bottom) of the figure correspond; to the signal (resp. background). The unit of the vertical axis is; chosen such that it indicates the number of entries per bin, if one; slices the histograms in 25 bins. A data sample being built through a Monte Carlo simulation based on the; distributions shown in Fig.; 1,; one obtains the three distributions of Fig. 2.; Whereas the distribution of \f$\Delta E\f$ clearly indicates the presence of the signal,; the distribution of \f${m_{\rm ES}}\f$ and \f${\cal F}\f$ are less obviously populated by signal. \image html splot_genf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:7023,variab,variables,7023,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,1,['variab'],['variables']
Modifiability,"$ are the independent; variables, \f$ D_{t,j}\f$ the known, dependent quantity, and \f$ E_{t,j}\f$ is; the square error in \f$ D_{t,j}\f$ (TMultiDimFit::AddTestRow). The parameterization is then evaluated at every \f$\mathbf{x}_t\f$ in the; test sample, and; \f[; S_t \equiv \sum_{j=1}^{M_t} \left(D_{t,j} -; D_p\left(\mathbf{x}_{t,j}\right)\right)^2; \f]; is evaluated. The relative error over the test sample; \f[; R_t = \frac{S_t}{\sum_{j=1}^{M_t} D_{t,j}^2}; \f]; should not be to low or high compared to \f$ R\f$ from the training; sample. Also, multiple correlation coefficient from both samples should; be fairly close, otherwise one of the samples is not representative of; the problem. A large difference in the reduced \f$ \chi^2\f$ over the two; samples indicate an over fit, and the maximum number of terms in the; parameterisation should be reduced. It's possible to use [4] to further improve the fit, using the test sample. Christian Holm. ## Bibliography; - <a name=""bevington""></a> Philip R. Bevington and D. Keith Robinson. *Data Reduction and Error Analysis for; the Physical Sciences*. McGraw-Hill, 2 edition, 1992.; - <a name=""mudifi""></a> R. Brun et al. *Long writeup DD/75-23*, CERN, 1980.; - Gene H. Golub and Charles F. van Loan. *Matrix Computations*.; John Hopkins University Press, Baltimore, 3 edition, 1996.; - <a name=""minuit""></a>F. James. *Minuit*. Long writeup D506, CERN, 1998.; - <a name=""wind72""></a>H. Wind. *Function parameterization*. Proceedings of the 1972 CERN Computing and Data Processing; School, volume 72-21 of Yellow report. CERN, 1972.; - <a name=""wind81""></a>H. Wind. 1. principal component analysis, 2. pattern recognition for track; finding, 3. interpolation and functional representation. Yellow report EP/81-12, CERN, 1981. [1]: classTMultiDimFit.html#bevington; [2]: classTMultiDimFit.html#mudifi; [4]: classTMultiDimFit.html#minuit; [5]: classTMultiDimFit.html#wind72; [6]: classTMultiDimFit.html#wind81; [9]: classTMultiDimFit.html#eq:dS2; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:17989,parameteriz,parameterization,17989,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['parameteriz'],['parameterization']
Modifiability,"$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooFormula.cxx; \class RooFormula; \ingroup Roofitcore. Internally uses ROOT's TFormula to compute user-defined expressions of RooAbsArgs. The string expression can be any valid TFormula expression referring to the; listed servers either by name or by their ordinal list position. These three are; forms equivalent:; ```; RooFormula(""formula"", ""x*y"", RooArgList(x,y)) or; RooFormula(""formula"", ""@0*@1"", RooArgList(x,y)); RooFormula(""formula"", ""x[0]*x[1]"", RooArgList(x,y)); ```; Note that `x[i]` is an expression reserved for TFormula. If a variable with; the name `x` is given, the RooFormula interprets `x` as a variable name,; but `x[i]` as an index in the list of variables. ### Category expressions; State information of RooAbsCategories can be accessed using the '::' operator,; *i.e.*, `tagCat::Kaon` will resolve to the numerical value of; the `Kaon` state of the RooAbsCategory object named `tagCat`. A formula to switch between lepton categories could look like this:; ```; RooFormula(""formulaWithCat"",; ""x * (leptonMulti == leptonMulti::one) + y * (leptonMulti == leptonMulti::two)"",; RooArgList(x, y, leptonMulti));; ```. ### Debugging a formula that won't compile; When the formula is preprocessed, RooFit can print information in the debug stream.; These can be retrieved by activating the RooFit::MsgLevel `RooFit::DEBUG`; and the RooFit::MsgTopic `RooFit::InputArguments`.; Check the tutorial rf506_msgservice.C for details.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx:1247,variab,variable,1247,roofit/roofitcore/src/RooFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFormula.cxx,3,['variab'],"['variable', 'variables']"
Modifiability,"$ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::ProfileLikelihoodCalculator; \ingroup Roostats. The ProfileLikelihoodCalculator is a concrete implementation of CombinedCalculator; (the interface class for tools which can produce both a RooStats HypoTestResult; and ConfInterval). The tool uses the profile likelihood ratio as a test statistic,; and assumes that Wilks' theorem is valid. Wilks' theorem states that \f$ -2 \cdot \ln(\lambda) \f$; (profile likelihood ratio) is asymptotically distributed as a \f$ \chi^2 \f$ distribution; with \f$ N \f$ degrees of freedom. Thus, \f$p\f$-values can be; constructed, and the profile likelihood ratio can be used to construct a; LikelihoodInterval. (In the future, this class could be extended to use toy; Monte Carlo to calibrate the distribution of the test statistic). Usage: It uses the interface of the CombinedCalculator, so that it can be; configured by specifying:. - A model common model (*e.g.* a family of specific models, which includes both; the null and alternate); - A data set; - A set of parameters of interest. The nuisance parameters will be all other; parameters of the model.; - A set of parameters which specify the null hypothesis (including values; and const/non-const status). The interface allows one to pass the model, data, and parameters either directly; or via a ModelConfig class. The alternate hypothesis leaves the parameter free; to take any value other than those specified by the null hypothesis. There is; therefore no need to specify the alternate parameters. After configuring the calculator, one only needs to call GetHypoTest() (which; will return a HypoTestResult pointer) or GetInterval() (which will return a; ConfInterval pointer). This calculator can work with both one-dimensional intervals or multi-; dimensional ones (contours). Note that for hypothesis tests, it is often ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodCalculator.cxx:1286,config,configured,1286,roofit/roostats/src/ProfileLikelihoodCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodCalculator.cxx,1,['config'],['configured']
Modifiability,"'''\; Python script that loops over a chain to create histograms.; There are two ways to do it: one is parsing the name of the configuration file as argument,; that must have a proper syntax as shown in the class documentation of TSimpleAnalysis. Example:; user@users-desktop:~$ rootdrawtree input_file.txt # input_file.txt is the configuration file. The other way is to pass as arguments the name of the output file, the name of the .root input; files, the expressions (that will be shown in the histograms) and the name of the tree (that; is optional if there is only one tree inside the first .root input file). Examples:; user@users-desktop:~$ rootdrawtree --output output.root --input hsimple.root --tree ntuple --histo 'hpxpy=px:py if px>2'; user@users-desktop:~$ rootdrawtree --output output.root --input hsimple.root hsimple2.root --histo 'hpx=px' 'hpxpy=px:py if px>2'. '''",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/main/python/rootdrawtree.py:127,config,configuration,127,main/python/rootdrawtree.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/main/python/rootdrawtree.py,2,['config'],['configuration']
Modifiability,"'', a 'Last updated on:' timestamp is inserted at every page bottom,; # using the given strftime format.; #html_last_updated_fmt = '%b %d, %Y'; # If true, SmartyPants will be used to convert quotes and dashes to; # typographically correct entities.; #html_use_smartypants = True; # Custom sidebar templates, maps document names to template names.; #html_sidebars = {}; # Additional templates that should be rendered to pages, maps page names to; # template names.; #html_additional_pages = {}; # If false, no module index is generated.; #html_domain_indices = True; # If false, no index is generated.; #html_use_index = True; # If true, the index is split into individual pages for each letter.; #html_split_index = False; # If true, links to the reST sources are added to the pages.; #html_show_sourcelink = True; # If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.; #html_show_sphinx = True; # If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.; #html_show_copyright = True; # If true, an OpenSearch description file will be output, and all pages will; # contain a <link> tag referring to it. The value of this option must be the; # base URL from which the finished HTML is served.; #html_use_opensearch = ''; # This is the file name suffix for HTML files (e.g. "".xhtml"").; #html_file_suffix = None; # Language to be used for generating the HTML full-text search index.; # Sphinx supports the following languages:; # 'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'; # 'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'; #html_search_language = 'en'; # A dictionary with options for the search language support, empty by default.; # Now only 'ja' uses this config value; #html_search_options = {'type': 'default'}; # The name of a javascript file (relative to the configuration directory) that; # implements a search results scorer. If empty, the default will be used.; #html_search_scorer = 'scorer.js'; # Output file base name for HTML help builder.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py:1926,config,config,1926,bindings/pyroot/cppyy/cppyy/doc/source/conf.py,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy/doc/source/conf.py,2,['config'],"['config', 'configuration']"
Modifiability,"'dsetname'.; /// The syntax for dsetname is name[#[dir/]objname], e.g.; /// ""mydset"" analysis of the first tree in the top dir of the dataset; /// named ""mydset""; /// ""mydset#T"" analysis tree ""T"" in the top dir of the dataset; /// named ""mydset""; /// ""mydset#adir/T"" analysis tree ""T"" in the dir ""adir"" of the dataset; /// named ""mydset""; /// ""mydset#adir/"" analysis of the first tree in the dir ""adir"" of the; /// dataset named ""mydset""; /// The component 'name' in its more general form contains also the group and; /// user name following ""/<group>/<user>/<dsname>"". Each of these components; /// can contain one or more wildcards '*', in which case all the datasets matching; /// the expression are added together as a global dataset (wildcard support has; /// been added in version 5.27/02).; /// The last argument 'elist' specifies an entry- or event-list to be used as; /// event selection.; /// It is also possible (starting w/ version 5.27/02) to run on multiple datasets; /// at once in a more flexible way that the one provided by wildcarding. There; /// are three possibilities:; /// 1) specifying the dataset names separated by the OR operator '|', e.g.; /// dsetname = ""<dset1>|<dset2>|<dset3>|...""; /// in this case the datasets are a seen as a global unique dataset; /// 2) specifying the dataset names separated by a ',' or a ' ', e.g.; /// dsetname = ""<dset1>,<dset2> <dset3>,...""; /// in this case the datasets are processed one after the other and the; /// selector is notified when switching dataset via a bit in the current; /// processed element.; /// 3) giving the path of a textfile where the dataset names are specified; /// on one or multiple lines; the lines found are joined as in 1), unless; /// the filepath is followed by a ',' (i.e. p->Process(""datasets.txt,"",...); /// with the dataset names listed in 'datasets.txt') in which case they are; /// treated as in 2); the file is open in raw mode with TFile::Open and; /// therefore it cane be remote, e.g. on a Web serv",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:1148,flexible,flexible,1148,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['flexible'],['flexible']
Modifiability,"(); * NAME; * merge_layers(); * SYNOPSIS; * ASImage *merge_layers ( struct ASVisual *asv,; * ASImageLayer *layers, int count,; * unsigned int dst_width,; * unsigned int dst_height,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality);; * INPUTS; * asv - pointer to valid ASVisual structure; * layers - array of ASImageLayer structures that will be rendered; * one on top of another. First element corresponds to; * the bottommost layer.; * dst_width - desired width of the resulting image; * dst_height - desired height of the resulting image; * out_format 	- optionally describes alternative ASImage format that; * should be produced as the result - XImage, ARGB32, etc.; * compression_out - compression level of resulting image in range 0-100.; * quality - output quality; * RETURN VALUE; * returns newly created and encoded ASImage on success, NULL of failure.; * DESCRIPTION; * merge_layers() will create new ASImage of requested size. It will then; * go through all the layers, and fill image with composition.; * Bottommost layer will be used unchanged and above layers will be; * superimposed on it, using algorithm specified in ASImageLayer; * structure of the overlaying layer. Layers may have smaller size; * then destination image, and maybe placed in arbitrary locations. Each; * layer will be padded to fit width of the destination image with all 0; * effectively making it transparent.; *********/; /****f* libAfterImage/transform/make_gradient(); * NAME; * make_gradient() - renders linear gradient into new ASImage; * SYNOPSIS; * ASImage *make_gradient ( struct ASVisual *asv,; * struct ASGradient *grad,; * unsigned int width,; * unsigned int height,; * ASFlagType filter,; * ASAltImFormats out_format,; * unsigned int compression_out, int quality);; * INPUTS; * asv - pointer to valid ASVisual structure; * grad - ASGradient structure defining how gradient should be; * drawn; * width - desired width of the resulting image; * height - desired height of the r",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h:4937,layers,layers,4937,graf2d/asimage/src/libAfterImage/transform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/transform.h,1,['layers'],['layers']
Modifiability,"(x, [omega], [phi])`; - `f1([0..1])`; - `f1([1], [0])`; - `f1(y)`. To replace only parameter names, the dimension variable can be dropped.; Alternatively, to change only the dimension variable, the parameters can be; dropped. Note that if a parameter is dropped or keeps its old name, its old; value will be copied to the new function. The syntax used in the examples; above also applies to the predefined parametrized functions like `gaus` and; `expo`. Comparisons operators are also supported `(&amp;&amp;, ||, ==, &lt;=, &gt;=, !)`. Examples:. `sin(x*(x&lt;0.5 || x&gt;1))`. If the result of a comparison is TRUE, the result is 1, otherwise 0. Already predefined names can be given. For example, if the formula. `TFormula old(""old"",sin(x*(x&lt;0.5 || x&gt;1)))`. one can assign a name to the formula. By default the name of the object = title = formula itself. `TFormula new(""new"",""x*old"")`. is equivalent to:. `TFormula new(""new"",""x*sin(x*(x&lt;0.5 || x&gt;1))"")`. The class supports unlimited number of variables and parameters.; By default the names which can be used for the variables are `x,y,z,t` or; `x[0],x[1],x[2],x[3],....x[N]` for N-dimensional formulas. This class is not anymore the base class for the function classes `TF1`, but it has now; a data member of TF1 which can be accessed via `TF1::GetFormula`. TFormula supports gradient and hessian calculations through clad.; To calculate the gradient one needs to first declare a `CladStorage` of the; same size as the number of parameters and then pass the variables and the; created `CladStorage`:. ```; TFormula f(""f"", ""x*[0] - y*[1]"");; Double_t p[] = {40, 30};; Double_t x[] = {1, 2};; f.SetParameters(p);; TFormula::CladStorage grad(2);; f.GradientPar(x, grad);; ```. The process is similar for hessians, except that the size of the created; CladStorage should be the square of the number of parameters because; `HessianPar` returns a flattened matrix:. ```; TFormula::CladStorage hess(4);; f.HessianPar(x, hess);; ```. \anchor F",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:2911,variab,variables,2911,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['variab'],['variables']
Modifiability,"). The unit of the vertical axis is; chosen such that it indicates the number of entries per bin, if one; slices the histograms in 25 bins. A data sample being built through a Monte Carlo simulation based on the; distributions shown in Fig.; 1,; one obtains the three distributions of Fig. 2.; Whereas the distribution of \f$\Delta E\f$ clearly indicates the presence of the signal,; the distribution of \f${m_{\rm ES}}\f$ and \f${\cal F}\f$ are less obviously populated by signal. \image html splot_genfiTOTNIM.png Figure 2 width=800. Distributions of the three discriminating variables for signal plus; background. The three distributions are the ones obtained from a data; sample obtained through a Monte Carlo simulation based on the; distributions shown in Fig.; 1.; The data sample consists of 500 signal events and 5000 background events. Choosing \f$\Delta E\f$ and \f${\cal F}\f$ as discriminating variables to determine; \f$N_1\f$ and \f$N_2\f$ through a maximum Likelihood fit, one builds, for the control; variable \f${m_{\rm ES}}\f$ which is unknown to the fit, the two \f$\hbox {$_s$}{\cal P}lots\f$; for signal and background shown in; Fig. 3.; One observes that the \f$\hbox{$_s$}{\cal P}lot\f$; for signal reproduces correctly the PDF even where the latter vanishes,; although the error bars remain sizeable. This results from the almost; complete cancellation between positive and negative weights: the sum of; weights is close to zero while the sum of weights squared is not. The; occurrence of negative weights occurs through the appearance of the; covariance matrix, and its negative components, in the definition of; Eq. (2). A word of caution is in order with respect to the error bars. Whereas; their sum in quadrature is identical to the statistical uncertainties; of the yields determined by the fit, and if, in addition, they are; asymptotically correct, the error bars should be handled with care for; low statistics and/or for too fine binning. This is because the error;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:8435,variab,variables,8435,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"); - Gaus(Double_t mean, Double_t sigma); - Rndm(); - Uniform(Double_t); - Landau(Double_t mean, Double_t sigma); - Poisson(Double_t mean); - Binomial(Int_t ntot, Double_t prob). Random numbers distributed according to 1-d, 2-d or 3-d distributions contained in TF1, TF2 or TF3 objects can also be; generated. For example, to get a random number distributed following abs(sin(x)/x)*sqrt(x) you can do : \code{.cpp} TF1; *f1 = new TF1(""f1"",""abs(sin(x)/x)*sqrt(x)"",0,10); double r = f1->GetRandom(); \endcode or you can use the UNURAN; package. You need in this case to initialize UNURAN to the function you would like to generate. \code{.cpp} TUnuran u;; u.Init(TUnuranDistrCont(f1));; double r = u.Sample();; \endcode. The techniques of using directly a TF1,2 or 3 function is powerful and; can be used to generate numbers in the defined range of the function.; Getting a number from a TF1,2,3 function is also quite fast.; UNURAN is a powerful and flexible tool which contains various methods for; generate random numbers for continuous distributions of one and multi-dimension.; It requires some set-up (initialization) phase and can be very fast when the distribution; parameters are not changed for every call. The following table shows some timings (in nanosecond/call); for basic functions, TF1 functions and using UNURAN obtained running; the tutorial math/testrandom.C; Numbers have been obtained on an Intel Xeon Quad-core Harpertown (E5410) 2.33 GHz running; Linux SLC4 64 bit and compiled with gcc 3.4. ~~~~; Distribution nanoseconds/call; TRandom TRandom1 TRandom2 TRandom3; Rndm.............. 5.000 105.000 7.000 10.000; RndmArray......... 4.000 104.000 6.000 9.000; Gaus.............. 36.000 180.000 40.000 48.000; Rannor............ 118.000 220.000 120.000 124.000; Landau............ 22.000 123.000 26.000 31.000; Exponential....... 93.000 198.000 98.000 104.000; Binomial(5,0.5)... 30.000 548.000 46.000 65.000; Binomial(15,0.5).. 75.000 1615.000 125.000 178.000; Poisson(3)........ 9",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom.cxx:6863,flexible,flexible,6863,math/mathcore/src/TRandom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom.cxx,1,['flexible'],['flexible']
Modifiability,"); ///; /// For example with Event.root, if; /// ~~~ {.cpp}; /// Double_t somePx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somePx will updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~ {.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~ {.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; ///; /// if (cutfilename()) htemp->Fill(macrofilename());; ///; /// These two functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example:; /// ~~~ {.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~ {.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name ma",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2729,variab,variable,2729,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variable']
Modifiability,"); ~~~; Creates a Tree with name and title. Various kinds of branches can be added to a tree:; - Variables representing fundamental types, simple classes/structures or list of variables: for example for C or Fortran; structures.; - Any C++ object or collection, provided by the STL or ROOT. In the following, the details about the creation of different types of branches are given. \anchor addcolumnoffundamentaltypes; ## Add a column (""branch"") holding fundamental types and arrays thereof; This strategy works also for lists of variables, e.g. to describe simple structures.; It is strongly recommended to persistify those as objects rather than lists of leaves. ~~~ {.cpp}; auto branch = tree.Branch(branchname, address, leaflist, bufsize); ~~~; - address is the address of the first item of a structure; - leaflist is the concatenation of all the variable names and types; separated by a colon character :; The variable name and the variable type are separated by a; slash (/). The variable type must be 1 character. (Characters; after the first are legal and will be appended to the visible; name of the leaf, but have no effect.) If no type is given, the; type of the variable is assumed to be the same as the previous; variable. If the first variable does not have a type, it is; assumed of type F by default. The list of currently supported; types is given below:; - `C` : a character string terminated by the 0 character; - `B` : an 8 bit signed integer (`Char_t`); Treated as a character when in an array.; - `b` : an 8 bit unsigned integer (`UChar_t`); - `S` : a 16 bit signed integer (`Short_t`); - `s` : a 16 bit unsigned integer (`UShort_t`); - `I` : a 32 bit signed integer (`Int_t`); - `i` : a 32 bit unsigned integer (`UInt_t`); - `F` : a 32 bit floating point (`Float_t`); - `f` : a 24 bit floating point with truncated mantissa (`Float16_t`); - `D` : a 64 bit floating point (`Double_t`); - `d` : a 24 bit truncated floating point (`Double32_t`); - `L` : a 64 bit signed integer (`L",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:3812,variab,variable,3812,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variable']
Modifiability,"* For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeViewer; A graphic user interface designed to handle ROOT trees and to take advantage of; TTree class features. It uses ROOT native GUI widgets adapted for ""drag and drop"" functionality.; in the same session. ### The following capabilities are making the viewer a helpful tool for analysis:. - several trees may be opened in the same session;; - branches and leaves can be easily browsed or scanned;; - fast drawing of branch expressions by double-clicking;; - new variables/selections easy to compose with the built-in editor;; - histograms can be composed by dragging leaves or user-defined expressions; to X, Y and Z axis items;; - the tree entries to be processed can be selected with a double slider;; - selections can be defined and activated by dragging them to the 'Cut' item;; - all expressions can be aliased and aliases can be used in composing others;; - input/output event lists easy to handle;; - menu with histogram drawing options;; - user commands may be executed within the viewer and the current command; can be echoed;; - current 'Draw' event loop is reflected by a progress bar and may be; interrupted by the user;; - all widgets have self-explaining tool tips and/or context menus;; - expressions/leaves can be dragged to a 'scan box' and scanned by; double-clicking this item. The result can be redirected to an ASCII file;. ### The layout has the following items:. - a menu bar with entries : File, Edit, Run, Options and Help;; - a toolbar in the upper part where you can issue user commands, change; the drawing option and the histogram name, three check buttons Hist, Rec; and Scan.HIST toggles histogram drawing mode, REC enables recording of the; last command issued and SCAN enables redirecting of TTree::Scan command in; an ASCII file (see -Scanning expressions-);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:945,variab,variables,945,tree/treeviewer/src/TTreeViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx,1,['variab'],['variables']
Modifiability,"* Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Reader; \ingroup TMVA. The Reader class serves to use the MVAs in a specific analysis context.; Within an event loop, a vector is filled that corresponds to the variables; that were used to train the MVA(s) during the training stage. This vector; is transfered to the Reader, who takes care of interpreting the weight; file of the MVA of choice, and to return the MVA's output. This is then; used by the user for further analysis. Usage:. ~~~ {.cpp}; // ------ before starting the event loop (eg, in the initialisation step). //; // create TMVA::Reader object; //; TMVA::Reader *reader = new TMVA::Reader();. // create a set of variables and declare them to the reader; // - the variable names must corresponds in name and type to; // those given in the weight file(s) that you use; Float_t var1, var2, var3, var4;; reader->AddVariable( ""var1"", &var1 );; reader->AddVariable( ""var2"", &var2 );; reader->AddVariable( ""var3"", &var3 );; reader->AddVariable( ""var4"", &var4 );. // book the MVA of your choice (prior training of these methods, ie,; // existence of the weight files is required); reader->BookMVA( ""Fisher method"", ""weights/Fisher.weights.txt"" );; reader->BookMVA( ""MLP method"", ""weights/MLP.weights.txt"" );; // ... etc. // ------- start your event loop. for (Long64_t ievt=0; ievt<myTree->GetEntries();ievt++) {. // fill vector with values of variables computed from those in the tree; var1 = myvar1;; var2 = myvar2;; var3 = myvar3;; var4 = myvar4;. // retrieve the corresponding MVA output; double mvaFi = reader->EvaluateMVA( ""Fisher method"" );; double mvaNN = reader->EvaluateMVA( ""MLP method"" );. // do something with these ...., e.g., fill them into your ntuple. } // end of event loop. delete reader;; ~~~; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx:1989,variab,variables,1989,tmva/tmva/src/Reader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx,3,['variab'],"['variable', 'variables']"
Modifiability,"* x.lo ^= (x.lo >> 13) | (x.hi << (32 - 13));; * x.hi ^= (x.hi >> 13);; *; * The first one is significantly faster than the second, simply because the; * shift is larger than 32. This means:; * - All the bits we need are in the upper 32 bits, so we can ignore the lower; * 32 bits in the shift.; * - The shift result will always fit in the lower 32 bits, and therefore,; * we can ignore the upper 32 bits in the xor.; *; * Thanks to this optimization, XXH3 only requires these features to be efficient:; *; * - Usable unaligned access; * - A 32-bit or 64-bit ALU; * - If 32-bit, a decent ADC instruction; * - A 32 or 64-bit multiply with a 64-bit result; * - For the 128-bit variant, a decent byteswap helps short inputs.; *; * The first two are already required by XXH32, and almost all 32-bit and 64-bit; * platforms which can run XXH32 can run XXH3 efficiently.; *; * Thumb-1, the classic 16-bit only subset of ARM's instruction set, is one; * notable exception.; *; * First of all, Thumb-1 lacks support for the UMULL instruction which; * performs the important long multiply. This means numerous __aeabi_lmul; * calls.; *; * Second of all, the 8 functional registers are just not enough.; * Setup for __aeabi_lmul, byteshift loads, pointers, and all arithmetic need; * Lo registers, and this shuffling results in thousands more MOVs than A32.; *; * A32 and T32 don't have this limitation. They can access all 14 registers,; * do a 32->64 multiply with UMULL, and the flexible operand allowing free; * shifts is helpful, too.; *; * Therefore, we do a quick sanity check.; *; * If compiling Thumb-1 for a target which supports ARM instructions, we will; * emit a warning, as it is not a ""sane"" platform to compile for.; *; * Usually, if this happens, it is because of an accident and you probably need; * to specify -march, as you likely meant to compile for a newer architecture.; *; * Credit: large sections of the vectorial and asm source code paths; * have been contributed by @easyaspi314; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:2126,flexible,flexible,2126,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['flexible'],['flexible']
Modifiability,"*****************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::NeymanConstruction; \ingroup Roostats. NeymanConstruction is a concrete implementation of the NeymanConstruction; interface that, as the name suggests, performs a NeymanConstruction. It produces; a RooStats::PointSetInterval, which is a concrete implementation of the; ConfInterval interface. The Neyman Construction is not a uniquely defined statistical technique, it; requires that one specify an ordering rule or ordering principle, which is; usually incoded by choosing a specific test statistic and limits of integration; (corresponding to upper/lower/central limits). As a result, this class must be; configured with the corresponding information before it can produce an interval.; Common configurations, such as the Feldman-Cousins approach, can be enforced by; other light weight classes. The Neyman Construction considers every point in the parameter space; independently, no assumptions are made that the interval is connected or of a; particular shape. As a result, the PointSetInterval class is used to represent; the result. The user indicate which points in the parameter space to perform; the construction by providing a PointSetInterval instance with the desired points. This class is fairly light weight, because the choice of parameter points to be; considered is factorized and so is the creation of the sampling distribution of; the test statistic (which is done by a concrete class implementing the; DistributionCreator interface). As a result, this class basically just drives the; construction by:. - using a DistributionCreator to create the SamplingDistribution of a user-; defined test statistic for eac",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/NeymanConstruction.cxx:1051,config,configured,1051,roofit/roostats/src/NeymanConstruction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/NeymanConstruction.cxx,1,['config'],['configured']
Modifiability,"************************************************************/; //////////////////////////////////////////////////////////////////////////////; /** \class RooAbsPdf; \ingroup Roofitcore; \brief Abstract interface for all probability density functions. ## RooAbsPdf, the base class of all PDFs. RooAbsPdf is the base class for all probability density; functions (PDFs). The class provides hybrid analytical/numerical; normalization for its implementations, error tracing, and a Monte Carlo; generator interface. ### A Minimal PDF Implementation. A minimal implementation of a PDF class derived from RooAbsPdf; should override the `evaluate()` function. This function should; return the PDF's value (which does not need to be normalised). #### Normalization/Integration. Although the normalization of a PDF is an integral part of a; probability density function, normalization is treated separately; in RooAbsPdf. The reason is that a RooAbsPdf object is more than a; PDF: it can be a building block for a more complex composite PDF; if any of its variables are functions instead of variables. In; such cases, the normalization of the composite PDF may not simply be; integral over the dependents of the top-level PDF: these are; functions with potentially non-trivial Jacobian terms themselves.; \note Therefore, no explicit attempt should be made to normalize the; function output in evaluate(). In particular, normalisation constants; can be omitted to speed up the function evaluations, and included later; in the integration of the PDF (see below), which is rarely called in; comparison to the `evaluate()` function. In addition, RooAbsPdf objects do not have a static concept of what; variables are parameters, and what variables are dependents (which; need to be integrated over for a correct PDF normalization).; Instead, the choice of normalization is always specified each time a; normalized value is requested from the PDF via the getVal(); method. RooAbsPdf manages the entire normalization ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:1677,variab,variables,1677,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,2,['variab'],['variables']
Modifiability,"*******************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoam *; * *; * *; * Description: *; * Implementations *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoam; \ingroup TMVA. Implementation of PDEFoam. The PDEFoam method is an extension of the PDERS method, which uses; self-adapting binning to divide the multi-dimensional phase space; in a finite number of hyper-rectangles (boxes). For a given number of boxes, the binning algorithm adjusts the size; and position of the boxes inside the multidimensional phase space,; minimizing the variance of the signal and background densities inside; the boxes. The binned density information is stored in binary trees,; allowing for a very fast and memory-efficient classification of; events. The implementation of the PDEFoam is based on the monte-carlo; integration package TFoam included in the analysis package ROOT. The class TMVA::PDEFoam defines the default interface for the; PDEFoam variants:. - PDEFoamEvent; - PDEFoamDiscriminant; - PDEFoamTarget; - PDEFoamMultiTarget; - PDEFoamDecisionTree. Per default PDEFoam stores in the cells the number of events (event; weights) and therefore acts as an event density estimator.; However, the above listed derived classes override this behaviour; to implement certain PDEFoam variations. In order ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx:1106,adapt,adapting,1106,tmva/tmva/src/PDEFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoam.cxx,1,['adapt'],['adapting']
Modifiability,"*****************************************/; /*! \class TMVA::MethodCuts; \ingroup TMVA. Multivariate optimisation of signal efficiency for given background; efficiency, applying rectangular minimum and maximum requirements. Also implemented is a ""decorrelate/diagonalized cuts approach"",; which improves over the uncorrelated cuts approach by; transforming linearly the input variables into a diagonal space,; using the square-root of the covariance matrix. Other optimisation criteria, such as maximising the signal significance-; squared, \f$ \frac{S^2}{(S+B)} \f$, with S and B being the signal and background yields,; correspond to a particular point in the optimised background rejection; versus signal efficiency curve. This working point requires the knowledge; of the expected yields, which is not the case in general. Note also that; for rare signals, Poissonian statistics should be used, which modifies; the significance criterion. The rectangular cut of a volume in the variable space is performed using; a binary tree to sort the training events. This provides a significant; reduction in computing time (up to several orders of magnitudes, depending; on the complexity of the problem at hand). Technically, optimisation is achieved in TMVA by two methods:. 1. Monte Carlo generation using uniform priors for the lower cut value,; and the cut width, thrown within the variable ranges. 2. A Genetic Algorithm (GA) searches for the optimal (""fittest"") cut sample.; The GA is configurable by many external settings through the option; string. For difficult cases (such as many variables), some tuning; may be necessary to achieve satisfying results. Attempts to use Minuit fits (Simplex ot Migrad) instead have not shown; superior results, and often failed due to convergence at local minima. The tests we have performed so far showed that in generic applications,; the GA is superior to MC sampling, and hence GA is the default method.; It is worthwhile trying both anyway. **Decorrelated (",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx:2162,variab,variable,2162,tmva/tmva/src/MethodCuts.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCuts.cxx,1,['variab'],['variable']
Modifiability,"***************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TCutG; \ingroup BasicGraphics. Graphical cut class. A TCutG object is a closed polygon defining a closed region in a x,y plot.; It can be created via the graphics editor option ""CutG"" or directly by; invoking its constructor. The first and last points should be the same. To create a TCutG via the graphics editor, use the left button to select the; points building the contour of the cut. Click on the right button to close the; TCutG. When it is created via the graphics editor, the TCutG object is named; ""CUTG"". It is recommended to immediately change the name by using the context; menu item ""SetName"". When the graphics editor is used, the names of the; variables X,Y are automatically taken from the current pad title. Example:. Assume a TTree object T and:; ~~~ {.cpp}; Root > T.Draw(""abs(fMomemtum):fEtot""); ~~~; the TCutG members fVarX, fVary will be set to:; ~~~ {.cpp}; fVarx = fEtot; fVary = abs(fMomemtum); ~~~; A graphical cut can be used in a TTree selection expression:; ~~~ {.cpp}; Root > T.Draw(""fEtot"",""cutg1""); ~~~; where ""cutg1"" is the name of an existing graphical cut. Note that, as shown in the example above, a graphical cut may be used in a; selection expression when drawing TTrees expressions of 1-d, 2-d or; 3-dimensions. The expressions used in TTree::Draw can reference the variables in; the fVarX, fVarY of the graphical cut plus other variables. When the TCutG object is created by TTree::Draw, it is added to the list of special objects in; the main TROOT object pointed by gROOT. To retrieve a pointer to this object; from the code or command line, do:; ~~~ {.cpp}; TCutG *mycutg;; mycutg = (TCutG*)gROOT->GetListOfSpecials()->Fin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCutG.cxx:1083,variab,variables,1083,graf2d/graf/src/TCutG.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCutG.cxx,1,['variab'],['variables']
Modifiability,"******************************/; /*! \class TMVA::MethodFisher; \ingroup TMVA. Fisher and Mahalanobis Discriminants (Linear Discriminant Analysis). In the method of Fisher discriminants event selection is performed; in a transformed variable space with zero linear correlations, by; distinguishing the mean values of the signal and background; distributions. The linear discriminant analysis determines an axis in the (correlated); hyperspace of the input variables; such that, when projecting the output classes (signal and background); upon this axis, they are pushed as far as possible away from each other,; while events of a same class are confined in a close vicinity.; The linearity property of this method is reflected in the metric with; which ""far apart"" and ""close vicinity"" are determined: the covariance; matrix of the discriminant variable space. The classification of the events in signal and background classes; relies on the following characteristics (only): overall sample means, \f$ x_i \f$,; for each input variable, \f$ i \f$,; class-specific sample means, \f$ x_{S(B),i}\f$,; and total covariance matrix \f$ T_{ij} \f$. The covariance matrix; can be decomposed into the sum of a _within_ (\f$ W_{ij} \f$); and a _between-class_ (\f$ B_{ij} \f$) class matrix. They describe; the dispersion of events relative to the means of their own class (within-class; matrix), and relative to the overall sample means (between-class matrix).; The Fisher coefficients, \f$ F_i \f$, are then given by. \f[; F_i = \frac{\sqrt{N_s N_b}}{N_s + N_b} \sum_{j=1}^{N_{SB}} W_{ij}^{-1} (\bar{X}_{Sj} - \bar{X}_{Bj}); \f]. where in TMVA is set \f$ N_S = N_B \f$, so that the factor; in front of the sum simplifies to \f$ \frac{1}{2}\f$.; The Fisher discriminant then reads. \f[; X_{Fi} = F_0 + \sum_{i=1}^{N_{SB}} F_i X_i; \f]. The offset \f$ F_0 \f$ centers the sample mean of \f$ x_{Fi} \f$; at zero. Instead of using the within-class matrix, the Mahalanobis variant; determines the Fisher coefficient",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx:2200,variab,variable,2200,tmva/tmva/src/MethodFisher.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFisher.cxx,1,['variab'],['variable']
Modifiability,"******************************/; /** \class RooStats::ProfileLikelihoodCalculator; \ingroup Roostats. The ProfileLikelihoodCalculator is a concrete implementation of CombinedCalculator; (the interface class for tools which can produce both a RooStats HypoTestResult; and ConfInterval). The tool uses the profile likelihood ratio as a test statistic,; and assumes that Wilks' theorem is valid. Wilks' theorem states that \f$ -2 \cdot \ln(\lambda) \f$; (profile likelihood ratio) is asymptotically distributed as a \f$ \chi^2 \f$ distribution; with \f$ N \f$ degrees of freedom. Thus, \f$p\f$-values can be; constructed, and the profile likelihood ratio can be used to construct a; LikelihoodInterval. (In the future, this class could be extended to use toy; Monte Carlo to calibrate the distribution of the test statistic). Usage: It uses the interface of the CombinedCalculator, so that it can be; configured by specifying:. - A model common model (*e.g.* a family of specific models, which includes both; the null and alternate); - A data set; - A set of parameters of interest. The nuisance parameters will be all other; parameters of the model.; - A set of parameters which specify the null hypothesis (including values; and const/non-const status). The interface allows one to pass the model, data, and parameters either directly; or via a ModelConfig class. The alternate hypothesis leaves the parameter free; to take any value other than those specified by the null hypothesis. There is; therefore no need to specify the alternate parameters. After configuring the calculator, one only needs to call GetHypoTest() (which; will return a HypoTestResult pointer) or GetInterval() (which will return a; ConfInterval pointer). This calculator can work with both one-dimensional intervals or multi-; dimensional ones (contours). Note that for hypothesis tests, it is often better to use the; AsymptoticCalculator, which can compute in addition the expected; \f$p\f$-value using an Asimov data set. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodCalculator.cxx:1943,config,configuring,1943,roofit/roostats/src/ProfileLikelihoodCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodCalculator.cxx,1,['config'],['configuring']
Modifiability,"*************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMCStudy.cxx; \class RooMCStudy; \ingroup Roofitcore. Helper class to facilitate Monte Carlo studies; such as 'goodness-of-fit' studies, that involve fitting a PDF; to multiple toy Monte Carlo sets. These may be generated from either same PDF; or from a different PDF with similar parameters. Given a fit and a generator PDF (they might be identical), RooMCStudy can produce; toyMC samples and/or fit these.; It accumulates the post-fit parameters of each iteration in a dataset. These can be; retrieved using fitParams() or fitParDataSet(). This dataset additionally contains the; variables; - NLL: The value of the negative log-likelihood for each run.; - ngen: The number of events generated for each run. Additional plotting routines simplify the task of plotting; the distribution of the minimized likelihood, the fitted parameter values,; fitted error and pull distribution. RooMCStudy provides the option to insert add-in modules; that modify the generate-and-fit cycle and allow to perform; extra steps in the cycle. Output of these modules can be stored; alongside the fit results in the aggregate results dataset.; These study modules should derive from the class RooAbsMCStudyModule. Check the RooFit tutorials; - rf801_mcstudy.C; - rf802_mcstudy_addons.C; - rf803_mcstudy_addons2.C; - rf804_mcstudy_constr.C; for usage examples.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:1290,variab,variables,1290,roofit/roofitcore/src/RooMCStudy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx,1,['variab'],['variables']
Modifiability,"*********************/; /*! \class TMVA::MethodLikelihood; \ingroup TMVA. Likelihood analysis (""non-parametric approach""). Also implemented is a ""diagonalized likelihood approach"",; which improves over the uncorrelated likelihood approach by; transforming linearly the input variables into a diagonal space,; using the square-root of the covariance matrix. The method of maximum likelihood is the most straightforward, and; certainly among the most elegant multivariate analyser approaches.; We define the likelihood ratio, \f$ R_L \f$, for event; \f$ i \f$, by:. \f[; R_L(i) = \frac{L_S(i)}{L_B(i) + L_B(i)}; \f]. Here the signal and background likelihoods, \f$ L_S \f$,; \f$ L_B \f$, are products of the corresponding probability; densities, \f$ p_S \f$, \f$ p_B \f$, of the; \f$ N_{var} \f$ discriminating variables used in the MVA:. \f[; L_S(i) \ \prod_{j=1}^{N_{var}} p_{Sj} (i); \f]. and accordingly for \f$ L_B \f$.; In practise, TMVA uses polynomial splines to estimate the probability; density functions (PDF) obtained from the distributions of the; training variables. Note that in TMVA the output of the likelihood ratio is transformed by:. \f[; R_L(i) \to R'_L(i) = -\frac{1}{\tau} ln(R_L^{-1}(i) -1); \f]. to avoid the occurrence of heavy peaks at \f$ R_L = 0.1 \f$ . #### Decorrelated (or ""diagonalized"") Likelihood. The biggest drawback of the Likelihood approach is that it assumes; that the discriminant variables are uncorrelated. If it were the case,; it can be proven that the discrimination obtained by the above likelihood; ratio is optimal, ie, no other method can beat it. However, in most; practical applications of MVAs correlations are present. </p>. Linear correlations, measured from the training sample, can be taken; into account in a straightforward manner through the square-root; of the covariance matrix. The square-root of a matrix; \f$ C \f$ is the matrix \f$ C&prime; \f$ that multiplied with itself; yields \f$ C \f$: \f$ C \f$=\f$ C&prime;C&prime; \f$. We comp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLikelihood.cxx:2215,variab,variables,2215,tmva/tmva/src/MethodLikelihood.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodLikelihood.cxx,1,['variab'],['variables']
Modifiability,"*****************; * Copyright (C) 2001-2001, Rene Brun, Fons Rademakers and Reiner Rohlfs *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TAttImage; \ingroup BasicGraphics; \ingroup GraphicsAtt. TImage attributes. Image attributes are:. - Image Quality (see EImageQuality for the list of qualities); - Compression defines the compression rate of the color data in the; internal image structure. Speed and memory depends; on this rate, but not the image display itself; 0: no compression; 100: max compression; - Radio Flag: kTRUE the x/y radio of the displayed image is always; identical to the original image kFALSE the x and y size of the displayed; image depends on the size of the pad; - Palette: Defines the conversion from a pixel value to the; screen color. This class is used (in general by secondary inheritance); by some other classes (image display).; */; /** \class TImagePalette; \ingroup BasicGraphics. A class to define a conversion from pixel values to pixel color. A Palette is defined by some anchor points. Each anchor point has; a value between 0 and 1 and a color. An image has to be normalized; and the values between the anchor points are interpolated.; All member variables are public and can be directly manipulated.; In most cases the default operator will be used to create a; TImagePalette. In this case the member arrays have to be allocated; by an application and will be deleted in the destructor of this; class. We provide few predefined palettes:. - gHistImagePalette - palette used in TH2::Draw(""col""); - gWebImagePalette; The web palette is a set of 216 colors that will not dither or; shift on PCs or Macs. Browsers use this built-in palette when; they need to render colors on monitors with only 256 colors; (also called 8-bit color monitors).; The 6x6x6 web palette provides ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TAttImage.cxx:1112,inherit,inheritance,1112,graf2d/graf/src/TAttImage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TAttImage.cxx,1,['inherit'],['inheritance']
Modifiability,"*. \class TRandom. @ingroup Random. This is the base class for the ROOT Random number generators.; This class defines the ROOT Random number interface and it should not be instantiated directly but used via its derived; classes. The generator provided in TRandom itself is a LCG (Linear Congruential Generator), the <a; href=""https://www.gnu.org/software/gsl/manual/html_node/Unix-random-number-generators.html"">BSD `rand` generator</a>,; that it should not be used because its period is only 2**31, i.e. approximately 2 billion events, that can be generated; in just few seconds. To generate random numbers, one should use one of the derived classes, which are:; - TRandom3: it is based on the ""Mersenne Twister generator"",; it is fast and a very long period of about \f$10^{6000}\f$. However it fails some of the most stringent tests of the; <a href=""http://simul.iro.umontreal.ca/testu01/tu01.html"">TestU01 suite</a>.; In addition this generator provide only numbers with 32 random bits, which might be not sufficient for some application; based on double or extended precision. This generator is however used in ROOT used to instantiate the global pointer to; the ROOT generator, *gRandom*.; - ::TRandomRanluxpp : New implementation of the Ranlux generator algorithm based on a fast modular multiplication of; 576 bits. This new implementation is built on the idea and the original code of Alexei Sibidanov, described in his; <a href=""https://arxiv.org/abs/1705.03123"">paper </a>. It generates random numbers with 52 bit precision (double; precision) and it has an higher luxury level than the original Ranlux generator (`p = 2048` instead of `p=794`).; - ::TRandomMixMax: Generator based on the family of the MIXMAX matrix generators (see the; <a href=""https://mixmax.hepforge.org"">MIXMAX HEPFORGE Web page</a> and the documentation of the class; ROOT::Math::MixMaxEngine for more information), that are base on the Asanov dynamical C systems. This generator has a; state of N=240 64 bit integers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom.cxx:1496,extend,extended,1496,math/mathcore/src/TRandom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/TRandom.cxx,1,['extend'],['extended']
Modifiability,"*; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAbsData.cxx; \class RooAbsData; \ingroup Roofitcore. Abstract base class for binned and unbinned; datasets. The abstract interface defines plotting and tabulating entry; points for its contents and provides an iterator over its elements; (bins for binned data sets, data points for unbinned datasets). ### Storing global observables in RooFit datasets. RooFit groups model variables into *observables* and *parameters*, depending on; if their values are stored in the dataset. For fits with parameter; constraints, there is a third kind of variables, called *global observables*.; These represent the results of auxiliary measurements that constrain the; nuisance parameters. In the RooFit implementation, a likelihood is generally; the sum of two terms:; - the likelihood of the data given the parameters, where the normalization set; is the set of observables (implemented by RooNLLVar); - the constraint term, where the normalization set is the set of *global; observables* (implemented by RooConstraintSum). Before this release, the global observable values were always taken from the; model/pdf. With this release, a mechanism is added to store a snapshot of; global observables in any RooDataSet or RooDataHist. For toy studies where the; global observables assume a different values for each toy, the bookkeeping of; the set of global observables and in particular their values is much easier; with this cha",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:1082,variab,variables,1082,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['variab'],['variables']
Modifiability,"*; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAbsData.cxx; \class RooAbsData; \ingroup Roofitcore. Abstract base class for binned and unbinned; datasets. The abstract interface defines plotting and tabulating entry; points for its contents and provides an iterator over its elements; (bins for binned data sets, data points for unbinned datasets). ### Storing global observables in RooFit datasets. RooFit groups model variables into *observables* and *parameters*, depending on; if their values are stored in the dataset. For fits with parameter; constraints, there is a third kind of variables, called *global observables*.; These represent the results of auxiliary measurements that constrain the; nuisance parameters. In the RooFit implementation, a likelihood is generally; the sum of two terms:; - the likelihood of the data given the parameters, where the normalization set; is the set of observables (implemented by RooNLLVar); - the constraint term, where the normalization set is the set of *global; observables* (implemented by RooConstraintSum). Before this release, the global observable values were always taken from the; model/pdf. With this release, a mechanism is added to store a snapshot of; global observables in any RooDataSet or RooDataHist. For toy studies where the; global observables assume a different values for each toy, the bookkeeping of; the set of global observables and in particular their values is much easier; with this change. Usage example for a model with global observables `g1` and `g2`:; ```; using namespace RooFit;. std::unique_p",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:1249,variab,variables,1249,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['variab'],['variables']
Modifiability,"*; * Implementation *; * *; * Authors (alphabetical): *; * Krzysztof Danielowski <danielow@cern.ch> - IFJ PAN & AGH, Poland *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Kamil Kraszewski <kalq@cern.ch> - IFJ PAN & UJ, Poland *; * Maciej Kruk <mkruk@cern.ch> - IFJ PAN & AGH, Poland *; * Yair Mahalalel <Yair.Mahalalel@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; ***********************************************************************************/; /*! \class TMVA::MethodPDERS; \ingroup TMVA. This is a generalization of the above Likelihood methods to \f$ N_{var} \f$; dimensions, where \f$ N_{var} \f$ is the number of input variables; used in the MVA. If the multi-dimensional probability density functions; (PDFs) for signal and background were known, this method contains the entire; physical information, and is therefore optimal. Usually, kernel estimation; methods are used to approximate the PDFs using the events from the; training sample. A very simple probability density estimator (PDE) has been suggested; in [hep-ex/0211019](http://arxiv.org/abs/hep-ex/0211019). The; PDE for a given test event is obtained from counting the (normalized); number of signal and background (training) events that occur in the; ""vicinity"" of the test event. The volume that describes ""vicinity"" is; user-defined. A [search method based on binary-trees](http://arxiv.org/abs/hep-ex/0211019); is used to effectively reduce the; selection time for the range search. Three different volume definitions; are optional:. - *MinMax:* the volume is defined in each dimension with respect",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx:1391,variab,variables,1391,tmva/tmva/src/MethodPDERS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPDERS.cxx,1,['variab'],['variables']
Modifiability,"*; *************************************************************************/; /** \class TPluginManager; \ingroup Base. This class implements a plugin library manager. It keeps track of a list of plugin handlers. A plugin handler knows which plugin; library to load to get a specific class that is used to extend the; functionality of a specific base class and how to create an object; of this class. For example, to extend the base class TFile to be; able to read SQLite files one needs to load the plugin library; libRSQLite.so which defines the TRSQLiteServer class. This loading; should be triggered when a given URI contains a regular expression; defined by the handler. Plugin handlers can be defined via macros in a list of plugin; directories. With $ROOTSYS/etc/plugins the default top plugin; directory specified in $ROOTSYS/etc/system.rootrc. Additional; directories can be specified by adding them to the end of the list.; Macros for identical plugin handlers in later directories will; override previous ones (the inverse of normal search path behavior).; The macros must have names like `<BaseClass>/PX0_<PluginClass>.C`,; e.g. TSQLServer/P20_TMySQLServer.C, to allow easy sorting and grouping.; If the BaseClass is in a namespace the directory must have the name; NameSpace@@BaseClass as `:` is a reserved pathname character on some; operating systems. Macros not beginning with 'P' and ending with "".C""; are ignored. These macros typically look like:; ~~~ {.cpp}; void P10_TDCacheFile(); {; gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; ""DCache"", ""TDCacheFile(const char*,Option_t*)"");; }; ~~~; Plugin handlers can also be defined via resources in the .rootrc; file. Although now deprecated this method still works for backward; compatibility, e.g.:; ~~~ {.cpp}; Plugin.TSQLServer: ^mysql: TMySQLServer MySQL ""<constructor>""; +Plugin.TSQLServer: ^pgsql: TPgSQLServer PgSQL ""<constructor>""; Plugin.TVirtualFitter: * TFitter Minuit ""TFitter(Int_t)""; ~~~; Where the + in fro",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:1296,plugin,plugin,1296,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,1,['plugin'],['plugin']
Modifiability,"*; *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooParametricStepFunction; \ingroup Roofit. The Parametric Step Function PDF is a binned distribution whose parameters; are the heights of each bin. This PDF was first used in BaBar's B0->pi0pi0; paper BABAR Collaboration (B. Aubert et al.) Phys.Rev.Lett.91:241801,2003. This PDF may be used to describe oddly shaped distributions. It differs; from a RooKeysPdf or a RooHistPdf in that a RooParametricStepFunction; has free parameters. In particular, any statistical uncertainty in; sample used to model this PDF may be understood with these free parameters;; this is not possible with non-parametric PDFs. The RooParametricStepFunction has Nbins-1 free parameters. Note that; the limits of the dependent variable must match the low and hi bin limits. Here is an example showing how to use the RooParametricStepFunction to fit toy; data generated from a uniform distribution:. ~~~ {.cpp}; // Define some constant parameters; const int nBins = 10;; const double xMin = 0.0;; const double xMax = 10.0;; const double binWidth = (xMax - xMin) / nBins;; const std::size_t nEvents = 10000;. // Fill the bin boundaries; std::vector<double> binBoundaries(nBins + 1);. for(int i = 0; i <= nBins; ++i) {; binBoundaries[i] = i * binWidth;; }. // The RooParametricStepFunction needs a TArrayD; TArrayD binBoundariesTArr{int(binBoundaries.size()), binBoundaries.data()};. RooRealVar x{""x"", ""x"", xMin, xMax};. // There are nBins-1 free coefficient parameters, whose sum must be <= 1.0.; // We all set them to 0.1, such that the resulting step function pdf is; // initially uniform.; RooArgList coefList;; for(int i = 0; i < nBins - 1; ++i) {; auto name = std::string(""coef_"") + std::to_string(i);; coefList.addOwned(std::m",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParametricStepFunction.cxx:1307,variab,variable,1307,roofit/roofit/src/RooParametricStepFunction.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooParametricStepFunction.cxx,1,['variab'],['variable']
Modifiability,"*pi)*[2]))`; and (0) means start numbering parameters at 0; - `expo(3)` is a substitute for `exp([3]+[4]*x)`; - `pol3(5)` is a substitute for `par[5]+par[6]*x+par[7]*x**2+par[8]*x**3`; (`PolN` stands for Polynomial of degree N); - `gaus(x, [0..2])` is a more explicit way of writing `gaus(0)`; - `expo(y, [3..4])` is a substitute for `exp([3]+[4]*y)`. See below the [full list of predefined functions](\ref FormulaFuncs) which can be used as shortcuts in; TFormula. `TMath` functions can be part of the expression, eg:. - `TMath::Landau(x)*sin(x)`; - `TMath::Erf(x)`. Formula may contain constants, eg:. - `sqrt2`; - `e`; - `pi`; - `ln10`; - `infinity`. and more. Formulas may also contain other user-defined ROOT functions defined with a; TFormula, eg, where `f1` is defined on one x-dimension and 2 parameters:. - `f1(x, [omega], [phi])`; - `f1([0..1])`; - `f1([1], [0])`; - `f1(y)`. To replace only parameter names, the dimension variable can be dropped.; Alternatively, to change only the dimension variable, the parameters can be; dropped. Note that if a parameter is dropped or keeps its old name, its old; value will be copied to the new function. The syntax used in the examples; above also applies to the predefined parametrized functions like `gaus` and; `expo`. Comparisons operators are also supported `(&amp;&amp;, ||, ==, &lt;=, &gt;=, !)`. Examples:. `sin(x*(x&lt;0.5 || x&gt;1))`. If the result of a comparison is TRUE, the result is 1, otherwise 0. Already predefined names can be given. For example, if the formula. `TFormula old(""old"",sin(x*(x&lt;0.5 || x&gt;1)))`. one can assign a name to the formula. By default the name of the object = title = formula itself. `TFormula new(""new"",""x*old"")`. is equivalent to:. `TFormula new(""new"",""x*sin(x*(x&lt;0.5 || x&gt;1))"")`. The class supports unlimited number of variables and parameters.; By default the names which can be used for the variables are `x,y,z,t` or; `x[0],x[1],x[2],x[3],....x[N]` for N-dimensional formulas. This class is",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:2087,variab,variable,2087,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['variab'],['variable']
Modifiability,", define Root.Html.SourceDir to point to directories containing; .cxx and .h files (see: <a href=""http://root.cern.ch/root/html/TEnv.html"">TEnv</a>); of the classes you want to document, or call THtml::SetInputDir()</p>. <p>Example:</p><pre>; Root.Html.SourceDir: .:src:include; Root.Html.Root: http://root.cern.ch/root/html</pre>. <h4><a name=""conf:output"">II.2 Output directory</a></h4>. <p>The output directory can be specified using the Root.Html.OutputDir; configuration variable (default value: ""htmldoc""). If that directory; doesn't exist <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a>; will create it.</p>. <p>Example:</p><pre>; Root.Html.OutputDir: htmldoc</pre>. <h4><a name=""conf:liblink"">II.3 Linking other documentation</a></h4>. <p>When trying to document a class, THtml searches for a source file in; the directories set via SetInputDir(). If it cannot find it, it assumes; that this class must have been documented before. Based on the library; this class is defined in, it checks the configuration variable; <tt>Root.Html.LibName</tt>, and creates a link using its value.; Alternatively, you can set these URLs via THtml::SetLibURL().</p>. <p>Example:<br/>; If a class MyClass is defined in class mylibs/libMyLib.so, and .rootrc; contains</p><pre>; Root.Html.MyLib: ../mylib/</pre>; <p>THtml will create a link to ""../mylib/MyClass.html"".</p>. <p>The library name association can be set up using the rootmap facility.; For the library in the example above, which contains a dictionary; generated from the linkdef MyLinkdef.h, the command to generate the; rootmap file is</p>; <pre> $ rlibmap -f -r rootmap -l mylib/libMyLib.so -d libCore.so -c MyLinkdef.h</pre>; <p>Here, <tt>-r</tt> specifies that the entries for libMyLib should be updated,; <tt>-l</tt> specifies the library we're dealing with, <tt>-d</tt> its; dependencies, and <tt>-c</tt> its linkdef. The rootmap file must be within; one of the <tt>LD_LIBRARY_PATH</tt> (or <tt>PATH</tt> for Windows) directories",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:4951,config,configuration,4951,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,2,"['config', 'variab']","['configuration', 'variable']"
Modifiability,", the name of the; /// remainder state follows the syntax `""{State1;State2}""`, where `State1` and; /// `State2` are the state names of the two spitting categories.; ///; /// ## Splitting multiple PDFs; /// The examples so far deal with a single prototype PDF. It is also; /// possible to build with multiple prototype PDFs by specifying a; /// mapping between the prototype to use and the names of states of; /// a ""master"" splitting category. To specify these configurations,; /// an intermediate `MultiBuildConfig` must be composed with all; /// the necessary specifications. This, for example,; /// ```; /// RooSimWSTool::MultiBuildConfig mbc(""mc"");; /// mbc.addPdf(""I"",""G"",SplitParam(""m,s"",""c""));; /// mbc.addPdf(""II,III"",""F"",SplitParam(""a"",""c,d""));; /// ```; /// configures a build with two prototype PDFs \f$ G \f$ and \f$ F \f$.; /// Prototype \f$ G \f$ is used for state `""I""` of the master split category; /// `mc` and prototype \f$ F \f$ is used for states `""II""` and `""III""` of the; /// master split category `mc`. Furthermore, the parameters \f$ m,s \f$ of; /// prototype \f$ G \f$ are split; /// in category \f$ c \f$ while the parameter \f$ a \f$ of prototype \f$ F \f$ is split in; /// the product of the categories \f$ c \f$ and \f$ d \f$. The actual build is then; /// performed by passing the build configuration to RooSimWSTool, *e.g.*,; /// ```; /// wst.build(""MASTER"", mbc);; /// ```; /// By default, a specialisation is built for each permutation of; /// states of the splitting categories that are used. It is possible; /// to restrict the building of specialised PDFs to a subset of states; /// by adding a restriction on the number of states to build as follows:; /// ```; /// mbc.restrictBuild(""c"",""A,B"");; /// ```; /// The restrictBuild method can be called multiple times, but at most; /// once for each splitting category in use. For simple builds with a single; /// prototype, restriction can be specified with a Restrict() argument; /// on the build command line.; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:4237,config,configuration,4237,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['config'],['configuration']
Modifiability,",...,r \f$ can be used.; ///; /// #### Unweighted and weighted histograms comparison:; ///; /// A simple modification of the ideas described above can be used for the; /// comparison of the usual (unweighted) and weighted histograms. Let us; /// denote the number of events in the ith bin in the unweighted; /// histogram as ni and the common weight of events in the ith bin of the; /// weighted histogram as wi. The total number of events in the; /// unweighted histogram is equal to; ///\f[; /// N = \sum_{i=1}^{r} n_{i}; ///\f]; /// and the total weight of events in the weighted histogram is equal to; ///\f[; /// W = \sum_{i=1}^{r} w_{i}; ///\f]; /// Let us formulate the hypothesis of identity of an unweighted histogram; /// to a weighted histogram so that there exist r constants p1,...,pr, such; /// that; ///\f[; /// \sum_{i=1}^{r} p_{i} = 1; ///\f]; /// for the unweighted histogram. The weight wi is a random variable with a; /// distribution approximated by the normal probability distribution; /// \f$ N(Wp_{i},\sigma_{i}^{2}) \f$ where \f$ \sigma_{i}^{2} \f$ is the variance of the weight wi.; /// If we replace the variance \f$ \sigma_{i}^{2} \f$; /// with estimate \f$ s_{i}^{2} \f$ (sum of squares of weights of; /// events in the ith bin) and the hypothesis of identity is valid, then the; /// maximum likelihood estimator of pi,i=1,...,r, is; ///\f[; /// \hat{p}_{i} = \frac{Ww_{i}-Ns_{i}^{2}+\sqrt{(Ww_{i}-Ns_{i}^{2})^{2}+4W^{2}s_{i}^{2}n_{i}}}{2W^{2}}; ///\f]; /// We may then use the test statistic; ///\f[; /// X^{2} = \sum_{i=1}^{r} \frac{(n_{i}-N\hat{p}_{i})^{2}}{N\hat{p}_{i}} + \sum_{i=1}^{r} \frac{(w_{i}-W\hat{p}_{i})^{2}}{s_{i}^{2}}; ///\f]; /// and it has approximately a \f$ \sigma^{2}_{(r-1)} \f$ distribution [2]. This test, as well; /// as the original one [3], has a restriction on the expected frequencies. The; /// expected frequencies recommended for the weighted histogram is more than 25.; /// The value of the minimal expected frequency can be decreased down",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx:6662,variab,variable,6662,hist/hist/src/TH1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1.cxx,1,['variab'],['variable']
Modifiability,",; so Minuit does a transformation of the error matrix (and the; ``parabolic'' parameter errors) when there are parameter limits.; Users should however realize that the transformation is only a linear; approximation, and that it cannot give a meaningful result if one or more; parameters is very close to a limit, where; \f$\partial P_{\mathrm{ext}} / \partial P_{\mathrm{int}} \approx 0\f$.; Therefore, it is recommended that:. 1. Limits on variable parameters should be used only when needed in order; to prevent the parameter from taking on unphysical values. 2. When a satisfactory minimum has been found using limits, the limits; should then be removed if possible, in order to perform or re-perform the; error analysis without limits. ### How to get the right answer from MINUIT. MINUIT offers the user a choice of several minimization algorithms. The; MIGRAD algorithm is in general the best minimizer for; nearly all functions. It is a variable-metric method with inexact line; search, a stable metric updating scheme, and checks for; positive-definiteness. Its main weakness is that it depends heavily on; knowledge of the first derivatives, and fails miserably if they are very; inaccurate. If parameter limits are needed, in spite of the side effects, then the; user should be aware of the following techniques to alleviate problems; caused by limits:. #### Getting the right minimum with limits. If MIGRAD converges normally to a point where no parameter is near one of; its limits, then the existence of limits has probably not prevented MINUIT; from finding the right minimum. On the other hand, if one or more; parameters is near its limit at the minimum, this may be because the true; minimum is indeed at a limit, or it may be because the minimizer has; become ``blocked'' at a limit. This may normally happen only if the; parameter is so close to a limit (internal value at an odd multiple of; \f$\pm \frac{\pi}{2}\f$; that MINUIT prints a warning to this effect when it prints; the",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:5263,variab,variable-metric,5263,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['variab'],['variable-metric']
Modifiability,",[Alpha],[N],[Sigma],[Mean])`; - `breitwigner` is a substitute for `[p0]*ROOT::Math::breitwigner_pdf (x,[p2],[p1])`; - `pol0,1,2,...N` is a substitute for a polynomial of degree `N` :; `([p0]+[p1]*x+[p2]*pow(x,2)+....[pN]*pow(x,N)`; - `cheb0,1,2,...N` is a substitute for a Chebyshev polynomial of degree `N`:; `ROOT::Math::Chebyshev10(x,[p0],[p1],[p2],...[pN])`. Note the maximum N allowed here is 10.; 2. Two Dimensional functions:; - `xygaus` is a substitute for `[Constant]*exp(-0.5*pow(((x-[MeanX])/[SigmaX]),2 )- 0.5*pow(((y-[MeanY])/[SigmaY]),2))`, a 2d Gaussian without correlation.; - `bigaus` is a substitute for `[Constant]*ROOT::Math::bigaussian_pdf (x,y,[SigmaX],[SigmaY],[Rho],[MeanX],[MeanY])`, a 2d gaussian including a correlation parameter.; 3. Three Dimensional functions:; - `xyzgaus` is for a 3d Gaussians without correlations:; `[Constant]*exp(-0.5*pow(((x-[MeanX])/[SigmaX]),2 )- 0.5*pow(((y-[MeanY])/[SigmaY]),2 )- 0.5*pow(((z-[MeanZ])/[SigmaZ]),2))`. ### An expanded note on variables and parameters. In a TFormula, a variable is a defined by a name `x`, `y`, `z` or `t` or an; index like `x[0]`, `x[1]`, `x[2]`; that is `x[N]` where N is an integer. ```; TFormula("""", ""x[0] * x[1] + 10""); ```. Parameters are similar and can take any name. It is specified using brackets; e.g. `[expected_mass]` or `[0]`. ```; TFormula("""", ""exp([expected_mass])-1""); ```. Variables and parameters can be combined in the same TFormula. Here we consider; a very simple case where we have an exponential decay after some time t and a; number of events with timestamps for which we want to evaluate this function. ```; TFormula tf ("""", ""[0]*exp(-[1]*t)"");; tf.SetParameter(0, 1);; tf.SetParameter(1, 0.5);. for (auto & event : events) {; tf.Eval(event.t);; }; ```. The distinction between variables and parameters arose from the TFormula's; application in fitting. There parameters are fitted to the data provided; through variables. In other applications this distinction can go away. Parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx:5392,variab,variables,5392,hist/hist/src/TFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula.cxx,1,['variab'],['variables']
Modifiability,"- TrailingObjects.h - Variable-length classes ------------*- C++ -*-===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; ///; /// \file; /// This header defines support for implementing classes that have; /// some trailing object (or arrays of objects) appended to them. The; /// main purpose is to make it obvious where this idiom is being used,; /// and to make the usage more idiomatic and more difficult to get; /// wrong.; ///; /// The TrailingObject template abstracts away the reinterpret_cast,; /// pointer arithmetic, and size calculations used for the allocation; /// and access of appended arrays of objects, and takes care that they; /// are all allocated at their required alignment. Additionally, it; /// ensures that the base type is final -- deriving from a class that; /// expects data appended immediately after it is typically not safe.; ///; /// Users are expected to derive from this template, and provide; /// numTrailingObjects implementations for each trailing type except; /// the last, e.g. like this sample:; ///; /// \code; /// class VarLengthObj : private TrailingObjects<VarLengthObj, int, double> {; /// friend TrailingObjects;; ///; /// unsigned NumInts, NumDoubles;; /// size_t numTrailingObjects(OverloadToken<int>) const { return NumInts; }; /// };; /// \endcode; ///; /// You can access the appended arrays via 'getTrailingObjects', and; /// determine the size needed for allocation via; /// 'additionalSizeToAlloc' and 'totalSizeToAlloc'.; ///; /// All the methods implemented by this class are intended for use; /// by the implementation of the class, not as part of its interface; /// (thus, private inheritance is suggested).; ///; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TrailingObjects.h:1894,inherit,inheritance,1894,interpreter/llvm-project/llvm/include/llvm/Support/TrailingObjects.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TrailingObjects.h,1,['inherit'],['inheritance']
Modifiability,"- `f` : a 24 bit floating point with truncated mantissa (`Float16_t`); /// - `D` : a 64 bit floating point (`Double_t`); /// - `d` : a 24 bit truncated floating point (`Double32_t`); /// - `L` : a 64 bit signed integer (`Long64_t`); /// - `l` : a 64 bit unsigned integer (`ULong64_t`); /// - `G` : a long signed integer (`Long_t`, which `sizeof` is platform dependent), stored as a 64 bit integer but usually held in memory as a 64 bit integer on 64 bit machines and 32 bit on 32 bit machines. Due to this difference, this data type is **not cross-platform**.; /// - `g` : a long unsigned integer (`ULong_t`, which `sizeof` is platform dependent), stored as a 64 bit unsigned integer but held in memory usually as a 64 bit integer on 64 bit machines and 32 bit on 32 bit machines. Due to this difference, this data type is **not cross-platform**.; /// - `O` : [the letter `o`, not a zero] a boolean (`bool`); ///; /// Arrays of values are supported with the following syntax:; /// - If leaf name has the form var[nelem], where nelem is alphanumeric, then; /// if nelem is a leaf name, it is used as the variable size of the array,; /// otherwise return 0.; /// The leaf referred to by nelem **MUST** be an int (/I),; /// - If leaf name has the form var[nelem], where nelem is a non-negative integers, then; /// it is used as the fixed size of the array.; /// - If leaf name has the form of a multi dimension array (e.g. var[nelem][nelem2]); /// where nelem and nelem2 are non-negative integers) then; /// it is used as a 2 dimensional array of fixed size.; /// - In case of the truncated floating point types (Float16_t and Double32_t) you can; /// furthermore specify the range in the style [xmin,xmax] or [xmin,xmax,nbits] after; /// the type character. See `TStreamerElement::GetRange()` for further information.; /// - Any of other form is not supported.; ///; /// Note that the TTree will assume that all the item are contiguous in memory.; /// On some platform, this is not always true of the me",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx:2428,variab,variable,2428,tree/tree/src/TBranch.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranch.cxx,1,['variab'],['variable']
Modifiability,"-------+; // | |; // | +------- block 3 -------+ <-\.; // | 4| <while condition> | |; // | +-----------------------+ |; // | / | |; // | / +------- block 4 -------+; // \ / 5| LIFETIME_START b3 | |; // \ / 6| <uses of b3> | |; // \ / 7| LIFETIME_END b3 | |; // \ | +------------------------+ |; // \ | \ /; // +------ block 5 -----+ \---------------; // 8| <cleanupcode> |; // 9| LIFETIME_END b1, b2 |; // 10| return |; // +---------------------+; //; // During optimization, however, it can happen that an instruction; // computing an address in ""b3"" (for example, a loop-invariant GEP) is; // hoisted up out of the loop from block 4 to block 2. [Note that; // this is not an actual load from the stack, only an instruction that; // computes the address to be loaded]. If this happens, there is now a; // path leading from the first use of b3 to the return instruction; // that does not encounter the b3 LIFETIME_END, hence b3's lifetime is; // now larger than if we were computing live intervals strictly based; // on lifetime markers. In the example above, this lengthened lifetime; // would mean that it would appear illegal to overlap b3 with b2.; //; // To deal with this such cases, the code in ::collectMarkers() below; // tries to identify ""degenerate"" slots -- those slots where on a single; // forward pass through the CFG we encounter a first reference to slot; // K before we hit the slot K lifetime start marker. For such slots,; // we fall back on using the lifetime start marker as the beginning of; // the variable's lifetime. NB: with this implementation, slots can; // appear degenerate in cases where there is unstructured control flow:; //; // if (q) goto mid;; // if (x > 9) {; // int b[100];; // memcpy(&b[0], ...);; // mid: b[k] = ...;; // abc(&b);; // }; //; // If in RPO ordering chosen to walk the CFG we happen to visit the b[k]; // before visiting the memcpy block (which will contain the lifetime start; // for ""b"" then it will appear that 'b' has a degenerate lifetime.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp:10150,variab,variable,10150,interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,1,['variab'],['variable']
Modifiability,"--------------+-----------------++-+-------; // | parameter area for | variable-size | fixed-size |LR| arg; // | called functions | local objects | local objects |FP|; // --+----------------------+------------------+-----------------+--+-------; // <- size known -> <- size unknown -> <- size known ->; //; // Low address High address; //; // <--- stack growth; //; //; // - In any circumstances, the outgoing function arguments are always accessi-; // ble using the SP, and the incoming arguments are accessible using the FP.; // - If the local objects are not aligned, they can always be accessed using; // the FP.; // - If there are no variable-sized objects, the local objects can always be; // accessed using the SP, regardless whether they are aligned or not. (The; // alignment padding will be at the bottom of the stack (highest address),; // and so the offset with respect to the SP will be known at the compile-; // -time.); //; // The only complication occurs if there are both, local aligned objects, and; // dynamically allocated (variable-sized) objects. The alignment pad will be; // placed between the FP and the local objects, thus preventing the use of the; // FP to access the local objects. At the same time, the variable-sized objects; // will be between the SP and the local objects, thus introducing an unknown; // distance from the SP to the locals.; //; // To avoid this problem, a new register is created that holds the aligned; // address of the bottom of the stack, referred in the sources as AP (aligned; // pointer). The AP will be equal to ""FP-p"", where ""p"" is the smallest pad; // that aligns AP to the required boundary (a maximum of the alignments of; // all stack objects, fixed- and variable-sized). All local objects[1] will; // then use AP as the base pointer.; // [1] The exception is with ""fixed"" stack objects. ""Fixed"" stack objects get; // their name from being allocated at fixed locations on the stack, relative; // to the FP. In the presence of dynamic al",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp:1303,variab,variable-sized,1303,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp,1,['variab'],['variable-sized']
Modifiability,"------------------------------------------------===//; /// \file InstrRefBasedImpl.cpp; ///; /// This is a separate implementation of LiveDebugValues, see; /// LiveDebugValues.cpp and VarLocBasedImpl.cpp for more information.; ///; /// This pass propagates variable locations between basic blocks, resolving; /// control flow conflicts between them. The problem is SSA construction, where; /// each debug instruction assigns the *value* that a variable has, and every; /// instruction where the variable is in scope uses that variable. The resulting; /// map of instruction-to-value is then translated into a register (or spill); /// location for each variable over each instruction.; ///; /// The primary difference from normal SSA construction is that we cannot; /// _create_ PHI values that contain variable values. CodeGen has already; /// completed, and we can't alter it just to make debug-info complete. Thus:; /// we can identify function positions where we would like a PHI value for a; /// variable, but must search the MachineFunction to see whether such a PHI is; /// available. If no such PHI exists, the variable location must be dropped.; ///; /// To achieve this, we perform two kinds of analysis. First, we identify; /// every value defined by every instruction (ignoring those that only move; /// another value), then re-compute an SSA-form representation of the; /// MachineFunction, using value propagation to eliminate any un-necessary; /// PHI values. This gives us a map of every value computed in the function,; /// and its location within the register file / stack.; ///; /// Secondly, for each variable we perform the same analysis, where each debug; /// instruction is considered a def, and every instruction where the variable; /// is in lexical scope as a use. Value propagation is used again to eliminate; /// any un-necessary PHIs. This gives us a map of each variable to the value; /// it should have in a block.; ///; /// Once both are complete, we have two maps for ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:1321,variab,variable,1321,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['variab'],['variable']
Modifiability,"-------------------------------------===//; /// \file; /// This file provides an implementation of debug counters. Debug; /// counters are a tool that let you narrow down a miscompilation to a specific; /// thing happening.; ///; /// To give a use case: Imagine you have a file, very large, and you; /// are trying to understand the minimal transformation that breaks it. Bugpoint; /// and bisection is often helpful here in narrowing it down to a specific pass,; /// but it's still a very large file, and a very complicated pass to try to; /// debug. That is where debug counting steps in. You can instrument the pass; /// with a debug counter before it does a certain thing, and depending on the; /// counts, it will either execute that thing or not. The debug counter itself; /// consists of a skip and a count. Skip is the number of times shouldExecute; /// needs to be called before it returns true. Count is the number of times to; /// return true once Skip is 0. So a skip=47, count=2 ,would skip the first 47; /// executions by returning false from shouldExecute, then execute twice, and; /// then return false again.; /// Note that a counter set to a negative number will always execute.; /// For a concrete example, during predicateinfo creation, the renaming pass; /// replaces each use with a renamed use.; ////; /// If I use DEBUG_COUNTER to create a counter called ""predicateinfo"", and; /// variable name RenameCounter, and then instrument this renaming with a debug; /// counter, like so:; ///; /// if (!DebugCounter::shouldExecute(RenameCounter); /// <continue or return or whatever not executing looks like>; ///; /// Now I can, from the command line, make it rename or not rename certain uses; /// by setting the skip and count.; /// So for example; /// bin/opt -debug-counter=predicateinfo-skip=47,predicateinfo-count=1; /// will skip renaming the first 47 uses, then rename one, then skip the rest.; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DebugCounter.h:1737,variab,variable,1737,interpreter/llvm-project/llvm/include/llvm/Support/DebugCounter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/DebugCounter.h,1,['variab'],['variable']
Modifiability,"-----------------------------------|; /// | `fMatrix` | the 9 elements of fMatrix |; /// | `fMatrix[][]` | the 9 elements of fMatrix |; /// | `fMatrix[2][2]` | only the elements fMatrix[2][2] |; /// | `fMatrix[1]` | the 3 elements fMatrix[1][0], fMatrix[1][1] and fMatrix[1][2] |; /// | `fMatrix[1][]` | the 3 elements fMatrix[1][0], fMatrix[1][1] and fMatrix[1][2] |; /// | `fMatrix[][0]` | the 3 elements fMatrix[0][0], fMatrix[1][0] and fMatrix[2][0] |; ///; /// ""fEvent.fMatrix...."" same as ""fMatrix..."" (unless there is more than one leaf named fMatrix!).; ///; /// In summary, if a specific index is not specified for a dimension, TTree::Draw; /// will loop through all the indices along this dimension. Leaving off the; /// last (right most) dimension of specifying then with the two characters '[]'; /// is equivalent. For variable size arrays (and TClonesArray) the range; /// of the first dimension is recalculated for each entry of the tree.; /// You can also specify the index as an expression of any other variables from the; /// tree.; ///; /// TTree::Draw also now properly handling operations involving 2 or more arrays.; ///; /// Let assume a second matrix fResults[5][2], here are a sample of some; /// of the possible combinations, the number of elements they produce and; /// the loop used:; ///; /// | expression | element(s) | Loop |; /// |----------------------------------|------------|--------------------------|; /// | `fMatrix[2][1] - fResults[5][2]` | one | no loop |; /// | `fMatrix[2][] - fResults[5][2]` | three | on 2nd dim fMatrix |; /// | `fMatrix[2][] - fResults[5][]` | two | on both 2nd dimensions |; /// | `fMatrix[][2] - fResults[][1]` | three | on both 1st dimensions |; /// | `fMatrix[][2] - fResults[][]` | six | on both 1st and 2nd dimensions of fResults |; /// | `fMatrix[][2] - fResults[3][]` | two | on 1st dim of fMatrix and 2nd of fResults (at the same time) |; /// | `fMatrix[][] - fResults[][]` | six | on 1st dim then on 2nd dim |; /// | `fMatrix[][",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:6218,variab,variables,6218,tree/tree/src/TTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx,1,['variab'],['variables']
Modifiability,"----------------------------------===//; // NamedDecl Implementation; //===----------------------------------------------------------------------===//; // Visibility rules aren't rigorously externally specified, but here; // are the basic principles behind what we implement:; //; // 1. An explicit visibility attribute is generally a direct expression; // of the user's intent and should be honored. Only the innermost; // visibility attribute applies. If no visibility attribute applies,; // global visibility settings are considered.; //; // 2. There is one caveat to the above: on or in a template pattern,; // an explicit visibility attribute is just a default rule, and; // visibility can be decreased by the visibility of template; // arguments. But this, too, has an exception: an attribute on an; // explicit specialization or instantiation causes all the visibility; // restrictions of the template arguments to be ignored.; //; // 3. A variable that does not otherwise have explicit visibility can; // be restricted by the visibility of its type.; //; // 4. A visibility restriction is explicit if it comes from an; // attribute (or something like it), not a global visibility setting.; // When emitting a reference to an external symbol, visibility; // restrictions are ignored unless they are explicit.; //; // 5. When computing the visibility of a non-type, including a; // non-type member of a class, only non-type visibility restrictions; // are considered: the 'visibility' attribute, global value-visibility; // settings, and a few special cases like __private_extern.; //; // 6. When computing the visibility of a type, including a type member; // of a class, only type visibility restrictions are considered:; // the 'type_visibility' attribute and global type-visibility settings.; // However, a 'visibility' attribute counts as a 'type_visibility'; // attribute on any declaration that only has the former.; //; // The visibility of a ""secondary"" entity, like a template argument",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp:988,variab,variable,988,interpreter/llvm-project/clang/lib/AST/Decl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp,1,['variab'],['variable']
Modifiability,"------------------------------|; // | Return address for callee |; // |----------------------------------------------|; // | Frame pointer for callee |; // |----------------------------------------------| <- sp; // | | Lower address; //; // To access the data in a frame, at-compile time, a constant offset must be; // computable from one of the pointers (fp, bp, sp) to access it. The size; // of the areas with a dotted background cannot be computed at compile-time; // if they are present, making it required to have all three of fp, bp and; // sp to be set up to be able to access all contents in the frame areas,; // assuming all of the frame areas are non-empty.; //; // For most functions, some of the frame areas are empty. For those functions,; // it may not be necessary to set up fp or bp:; // * A base pointer is definitely needed when there are both VLAs and local; // variables with more-than-default alignment requirements.; // * A frame pointer is definitely needed when there are local variables with; // more-than-default alignment requirements.; //; // In addition, VE ABI defines RSA frame, return address, and frame pointer; // as follows:; //; // |----------------------------------------------| <- sp+176; // | %s18...%s33 |; // |----------------------------------------------| <- sp+48; // | Linkage area register (%s17) |; // |----------------------------------------------| <- sp+40; // | Procedure linkage table register (%plt=%s16) |; // |----------------------------------------------| <- sp+32; // | Global offset table register (%got=%s15) |; // |----------------------------------------------| <- sp+24; // | Thread pointer register (%tp=%s14) |; // |----------------------------------------------| <- sp+16; // | Return address |; // |----------------------------------------------| <- sp+8; // | Frame pointer |; // |----------------------------------------------| <- sp+0; //; // NOTE: This description is based on VE ABI and description in; // AArch64FrameLowering.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp:4228,variab,variables,4228,interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp,1,['variab'],['variables']
Modifiability,"---------------------------|; // | |; // | arguments passed on the stack |; // | |; // |-----------------------------------|; // | |; // | (Win64 only) varargs from reg |; // | |; // |-----------------------------------|; // | |; // | callee-saved gpr registers | <--.; // | | | On Darwin platforms these; // |- - - - - - - - - - - - - - - - - -| | callee saves are swapped,; // | prev_lr | | (frame record first); // | prev_fp | <--'; // | async context if needed |; // | (a.k.a. ""frame record"") |; // |-----------------------------------| <- fp(=x29); // | |; // | callee-saved fp/simd/SVE regs |; // | |; // |-----------------------------------|; // | |; // | SVE stack objects |; // | |; // |-----------------------------------|; // |.empty.space.to.make.part.below....|; // |.aligned.in.case.it.needs.more.than| (size of this area is unknown at; // |.the.standard.16-byte.alignment....| compile time; if present); // |-----------------------------------|; // | |; // | local variables of fixed size |; // | including spill slots |; // |-----------------------------------| <- bp(not defined by ABI,; // |.variable-sized.local.variables....| LLVM chooses X19); // |.(VLAs)............................| (size of this area is unknown at; // |...................................| compile time); // |-----------------------------------| <- sp; // | | Lower address; //; //; // To access the data in a frame, at-compile time, a constant offset must be; // computable from one of the pointers (fp, bp, sp) to access it. The size; // of the areas with a dotted background cannot be computed at compile-time; // if they are present, making it required to have all three of fp, bp and; // sp to be set up to be able to access all contents in the frame areas,; // assuming all of the frame areas are non-empty.; //; // For most functions, some of the frame areas are empty. For those functions,; // it may not be necessary to set up fp or bp:; // * A base pointer is definitely needed when there are both V",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:2341,variab,variables,2341,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['variab'],['variables']
Modifiability,"---------------===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; //; // Overview:; // ---------; // Function Specialization is a transformation which propagates the constant; // parameters of a function call from the caller to the callee. It is part of; // the Inter-Procedural Sparse Conditional Constant Propagation (IPSCCP) pass.; // The transformation runs iteratively a number of times which is controlled; // by the option `funcspec-max-iters`. Running it multiple times is needed; // for specializing recursive functions, but also exposes new opportunities; // arising from specializations which return constant values or contain calls; // which can be specialized.; //; // Function Specialization supports propagating constant parameters like; // function pointers, literal constants and addresses of global variables.; // By propagating function pointers, indirect calls become direct calls. This; // exposes inlining opportunities which we would have otherwise missed. That's; // why function specialization is run before the inliner in the optimization; // pipeline; that is by design.; //; // Cost Model:; // -----------; // The cost model facilitates a utility for estimating the specialization bonus; // from propagating a constant argument. This is the InstCostVisitor, a class; // that inherits from the InstVisitor. The bonus itself is expressed as codesize; // and latency savings. Codesize savings means the amount of code that becomes; // dead in the specialization from propagating the constant, whereas latency; // savings represents the cycles we are saving from replacing instructions with; // constant values. The InstCostVisitor overrides a set of `visit*` methods to; // be able to handle different types of instructions. ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/FunctionSpecialization.h:1127,variab,variables,1127,interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/FunctionSpecialization.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/IPO/FunctionSpecialization.h,1,['variab'],['variables']
Modifiability,"-----------===//; //; // This pass flattens pairs nested loops into a single loop.; //; // The intention is to optimise loop nests like this, which together access an; // array linearly:; //; // for (int i = 0; i < N; ++i); // for (int j = 0; j < M; ++j); // f(A[i*M+j]);; //; // into one loop:; //; // for (int i = 0; i < (N*M); ++i); // f(A[i]);; //; // It can also flatten loops where the induction variables are not used in the; // loop. This is only worth doing if the induction variables are only used in an; // expression like i*M+j. If they had any other uses, we would have to insert a; // div/mod to reconstruct the original values, so this wouldn't be profitable.; //; // We also need to prove that N*M will not overflow. The preferred solution is; // to widen the IV, which avoids overflow checks, so that is tried first. If; // the IV cannot be widened, then we try to determine that this new tripcount; // expression won't overflow.; //; // Q: Does LoopFlatten use SCEV?; // Short answer: Yes and no.; //; // Long answer:; // For this transformation to be valid, we require all uses of the induction; // variables to be linear expressions of the form i*M+j. The different Loop; // APIs are used to get some loop components like the induction variable,; // compare statement, etc. In addition, we do some pattern matching to find the; // linear expressions and other loop components like the loop increment. The; // latter are examples of expressions that do use the induction variable, but; // are safe to ignore when we check all uses to be of the form i*M+j. We keep; // track of all of this in bookkeeping struct FlattenInfo.; // We assume the loops to be canonical, i.e. starting at 0 and increment with; // 1. This makes RHS of the compare the loop tripcount (with the right; // predicate). We use SCEV to then sanity check that this tripcount matches; // with the tripcount as computed by SCEV.; //; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp:1476,variab,variables,1476,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp,3,['variab'],"['variable', 'variables']"
Modifiability,"-------===//; //; // Perform peephole optimizations on the machine code:; //; // - Optimize Extensions; //; // Optimization of sign / zero extension instructions. It may be extended to; // handle other instructions with similar properties.; //; // On some targets, some instructions, e.g. X86 sign / zero extension, may; // leave the source value in the lower part of the result. This optimization; // will replace some uses of the pre-extension value with uses of the; // sub-register of the results.; //; // - Optimize Comparisons; //; // Optimization of comparison instructions. For instance, in this code:; //; // sub r1, 1; // cmp r1, 0; // bz L1; //; // If the ""sub"" instruction all ready sets (or could be modified to set) the; // same flag that the ""cmp"" instruction sets and that ""bz"" uses, then we can; // eliminate the ""cmp"" instruction.; //; // Another instance, in this code:; //; // sub r1, r3 | sub r1, imm; // cmp r3, r1 or cmp r1, r3 | cmp r1, imm; // bge L1; //; // If the branch instruction can use flag from ""sub"", then we can replace; // ""sub"" with ""subs"" and eliminate the ""cmp"" instruction.; //; // - Optimize Loads:; //; // Loads that can be folded into a later instruction. A load is foldable; // if it loads to virtual registers and the virtual register defined has; // a single use.; //; // - Optimize Copies and Bitcast (more generally, target specific copies):; //; // Rewrite copies and bitcasts to avoid cross register bank copies; // when possible.; // E.g., Consider the following example, where capital and lower; // letters denote different register file:; // b = copy A <-- cross-bank copy; // C = copy b <-- cross-bank copy; // =>; // b = copy A <-- cross-bank copy; // C = copy A <-- same-bank copy; //; // E.g., for bitcast:; // b = bitcast A <-- cross-bank copy; // C = bitcast b <-- cross-bank copy; // =>; // b = bitcast A <-- cross-bank copy; // C = copy A <-- same-bank copy; //===----------------------------------------------------------------------===//",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp:1760,Rewrite,Rewrite,1760,interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,1,['Rewrite'],['Rewrite']
Modifiability,"------|; // | |; // | (Win64 only) varargs from reg |; // | |; // |-----------------------------------|; // | |; // | callee-saved gpr registers | <--.; // | | | On Darwin platforms these; // |- - - - - - - - - - - - - - - - - -| | callee saves are swapped,; // | prev_lr | | (frame record first); // | prev_fp | <--'; // | async context if needed |; // | (a.k.a. ""frame record"") |; // |-----------------------------------| <- fp(=x29); // | |; // | callee-saved fp/simd/SVE regs |; // | |; // |-----------------------------------|; // | |; // | SVE stack objects |; // | |; // |-----------------------------------|; // |.empty.space.to.make.part.below....|; // |.aligned.in.case.it.needs.more.than| (size of this area is unknown at; // |.the.standard.16-byte.alignment....| compile time; if present); // |-----------------------------------|; // | |; // | local variables of fixed size |; // | including spill slots |; // |-----------------------------------| <- bp(not defined by ABI,; // |.variable-sized.local.variables....| LLVM chooses X19); // |.(VLAs)............................| (size of this area is unknown at; // |...................................| compile time); // |-----------------------------------| <- sp; // | | Lower address; //; //; // To access the data in a frame, at-compile time, a constant offset must be; // computable from one of the pointers (fp, bp, sp) to access it. The size; // of the areas with a dotted background cannot be computed at compile-time; // if they are present, making it required to have all three of fp, bp and; // sp to be set up to be able to access all contents in the frame areas,; // assuming all of the frame areas are non-empty.; //; // For most functions, some of the frame areas are empty. For those functions,; // it may not be necessary to set up fp or bp:; // * A base pointer is definitely needed when there are both VLAs and local; // variables with more-than-default alignment requirements.; // * A frame pointer is definitely needed ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:2471,variab,variable-sized,2471,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['variab'],['variable-sized']
Modifiability,"----===//; //; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; //; //===----------------------------------------------------------------------===//; /// \file InstrRefBasedImpl.cpp; ///; /// This is a separate implementation of LiveDebugValues, see; /// LiveDebugValues.cpp and VarLocBasedImpl.cpp for more information.; ///; /// This pass propagates variable locations between basic blocks, resolving; /// control flow conflicts between them. The problem is SSA construction, where; /// each debug instruction assigns the *value* that a variable has, and every; /// instruction where the variable is in scope uses that variable. The resulting; /// map of instruction-to-value is then translated into a register (or spill); /// location for each variable over each instruction.; ///; /// The primary difference from normal SSA construction is that we cannot; /// _create_ PHI values that contain variable values. CodeGen has already; /// completed, and we can't alter it just to make debug-info complete. Thus:; /// we can identify function positions where we would like a PHI value for a; /// variable, but must search the MachineFunction to see whether such a PHI is; /// available. If no such PHI exists, the variable location must be dropped.; ///; /// To achieve this, we perform two kinds of analysis. First, we identify; /// every value defined by every instruction (ignoring those that only move; /// another value), then re-compute an SSA-form representation of the; /// MachineFunction, using value propagation to eliminate any un-necessary; /// PHI values. This gives us a map of every value computed in the function,; /// and its location within the register file / stack.; ///; /// Secondly, for each variable we perform the same analysis, where each debug; /// instruction is considered a def, and every instruction where the varia",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:1123,variab,variable,1123,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['variab'],['variable']
Modifiability,"-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodCFMlpANN; \ingroup TMVA. Interface to Clermond-Ferrand artificial neural network. The CFMlpANN belong to the class of Multilayer Perceptrons (MLP), which are; feed-forward networks according to the following propagation schema:. \image html tmva_mlp.png Schema for artificial neural network. The input layer contains as many neurons as input variables used in the MVA.; The output layer contains two neurons for the signal and background; event classes. In between the input and output layers are a variable number; of <i>k</i> hidden layers with arbitrary numbers of neurons. (While the; structure of the input and output layers is determined by the problem, the; hidden layers can be configured by the user through the option string; of the method booking.). As indicated in the sketch, all neuron inputs to a layer are linear; combinations of the neuron output of the previous layer. The transfer; from input to output within a neuron is performed by means of an ""activation; function"". In general, the activation function of a neuron can be; zero (deactivated), one (linear), or non-linear. The above example uses; a sigmoid activation function. The transfer function of the output layer; is usually linear. As a consequence: an ANN without hidden layer should; give identical discrimination power as a linear discriminant analysis (Fisher).; In case of one hidden layer, the ANN computes a linear combination of; sigmoid. The learning method used by the CFMlpANN is only stochastic.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx:1574,layers,layers,1574,tmva/tmva/src/MethodCFMlpANN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx,6,"['config', 'layers', 'variab']","['configured', 'layers', 'variable']"
Modifiability,"-back to byte structure for speed; * - Remove distance extra == 0 check in inflate_fast()--only helps for lengths; * - Change post-increments to pre-increments in inflate_fast(), PPC biased?; * - Add compile time option, POSTINC, to use post-increments instead (Intel?); * - Make MATCH copy in inflate() much faster for when inflate_fast() not used; * - Use local copies of stream next and avail values, as well as local bit; * buffer and bit count in inflate()--for speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table() to avoid compiler warnings; * - Move a comment on output buffer sizes from inffast.c to inflate.c; * - Add comments in inffast.c to introduce the inflate_fast() routine; * - Rearrange window copies in inflate_fast() for speed and simplification; * - Unroll last copy for window match in inflate_fast(); * - Use local copies of window variables in inflate_fast() for speed; * - Pull out common wnext == 0 case for speed in inflate_fast(); * - Make op and len in inflate_fast() unsigned for consistency; * - Add FAR to lcode and dcode declarations in inflate_fast(); * - Simplified bad distance check in inflate_fast(); * - Added inflateBackInit(), inflateBack(), and inflateBackEnd() in new; * source file infback.c to provide a call-back interface to inflate for; * programs like gzip and unzip -- uses window as output buffer to avoid; * window copying; *; * 1.2.beta5 1 Jan 2003; * - Improved inflateBack() interface to allow the caller to provide initial; * input in strm.; * - Fixed stored blocks bug in inflateBack(); *; * 1.2.beta6 4 Jan 2003; * - Added comments in inffast.c on effectiveness of POSTINC; * - Typecasting all around to reduce compiler warnings; * - Changed loops from while (1) or do {} while (1) to for (;;), again to; * make compilers happy; * - Changed type of window in inflateBackInit() to unsigned char *; *; * 1.2.beta7 27 Jan 2003; * - Changed many types to unsigned or unsigned short to av",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:2337,variab,variables,2337,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,1,['variab'],['variables']
Modifiability,"-back to byte structure for speed; * - Remove distance extra == 0 check in inflate_fast()--only helps for lengths; * - Change post-increments to pre-increments in inflate_fast(), PPC biased?; * - Add compile time option, POSTINC, to use post-increments instead (Intel?); * - Make MATCH copy in inflate() much faster for when inflate_fast() not used; * - Use local copies of stream next and avail values, as well as local bit; * buffer and bit count in inflate()--for speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table() to avoid compiler warnings; * - Move a comment on output buffer sizes from inffast.c to inflate.c; * - Add comments in inffast.c to introduce the inflate_fast() routine; * - Rearrange window copies in inflate_fast() for speed and simplification; * - Unroll last copy for window match in inflate_fast(); * - Use local copies of window variables in inflate_fast() for speed; * - Pull out common write == 0 case for speed in inflate_fast(); * - Make op and len in inflate_fast() unsigned for consistency; * - Add FAR to lcode and dcode declarations in inflate_fast(); * - Simplified bad distance check in inflate_fast(); * - Added inflateBackInit(), inflateBack(), and inflateBackEnd() in new; * source file infback.c to provide a call-back interface to inflate for; * programs like gzip and unzip -- uses window as output buffer to avoid; * window copying; *; * 1.2.beta5 1 Jan 2003; * - Improved inflateBack() interface to allow the caller to provide initial; * input in strm.; * - Fixed stored blocks bug in inflateBack(); *; * 1.2.beta6 4 Jan 2003; * - Added comments in inffast.c on effectiveness of POSTINC; * - Typecasting all around to reduce compiler warnings; * - Changed loops from while (1) or do {} while (1) to for (;;), again to; * make compilers happy; * - Changed type of window in inflateBackInit() to unsigned char *; *; * 1.2.beta7 27 Jan 2003; * - Changed many types to unsigned or unsigned short to av",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inflate.c:2337,variab,variables,2337,graf2d/asimage/src/libAfterImage/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inflate.c,1,['variab'],['variables']
Modifiability,"-of-process execution; // with debug support. A few notes beforehand:; //; // * Debuggers must implement the GDB JIT interface (gdb, udb, lldb 12+).; // * Debug support is currently limited to ELF on x86-64 platforms that run; // Unix-like systems.; // * There is a test for this example and it ships an IR file that is prepared; // for the instructions below.; //; //; // The following command line session provides a complete walkthrough of the; // feature using LLDB 12:; //; // [Terminal 1] Prepare a debuggable out-of-process JIT session:; //; // > cd llvm-project/build; // > ninja LLJITWithRemoteDebugging llvm-jitlink-executor; // > cp ../llvm/test/Examples/OrcV2Examples/Inputs/argc_sub1_elf.ll .; // > bin/LLJITWithRemoteDebugging --wait-for-debugger argc_sub1_elf.ll; // Found out-of-process executor: bin/llvm-jitlink-executor; // Launched executor in subprocess: 65535; // Attach a debugger and press any key to continue.; //; //; // [Terminal 2] Attach a debugger to the child process:; //; // (lldb) log enable lldb jit; // (lldb) settings set plugin.jit-loader.gdb.enable on; // (lldb) settings set target.source-map Inputs/ \; // /path/to/llvm-project/llvm/test/Examples/OrcV2Examples/Inputs/; // (lldb) attach -p 65535; // JITLoaderGDB::SetJITBreakpoint looking for JIT register hook; // JITLoaderGDB::SetJITBreakpoint setting JIT breakpoint; // Process 65535 stopped; // (lldb) b sub1; // Breakpoint 1: no locations (pending).; // WARNING: Unable to resolve breakpoint to any actual locations.; // (lldb) c; // Process 65535 resuming; //; //; // [Terminal 1] Press a key to start code generation and execution:; //; // Parsed input IR code from: argc_sub1_elf.ll; // Initialized LLJIT for remote executor; // Running: argc_sub1_elf.ll; //; //; // [Terminal 2] Breakpoint hits; we change the argc value from 1 to 42:; //; // (lldb) JITLoaderGDB::JITDebugBreakpointHit hit JIT breakpoint; // JITLoaderGDB::ReadJITDescriptorImpl registering JIT entry at 0x106b34000; // 1 location add",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithRemoteDebugging/LLJITWithRemoteDebugging.cpp:1497,plugin,plugin,1497,interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithRemoteDebugging/LLJITWithRemoteDebugging.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithRemoteDebugging/LLJITWithRemoteDebugging.cpp,1,['plugin'],['plugin']
Modifiability,"-saved; // area to allow SVE stack objects (allocated directly below the callee-saves,; // if available) to be accessed directly from the framepointer.; // The SVE spill/fill instructions have VL-scaled addressing modes such; // as:; // ldr z8, [fp, #-7 mul vl]; // For SVE the size of the vector length (VL) is not known at compile-time, so; // '#-7 mul vl' is an offset that can only be evaluated at runtime. With this; // layout, we don't need to add an unscaled offset to the framepointer before; // accessing the SVE object in the frame.; //; // In some cases when a base pointer is not strictly needed, it is generated; // anyway when offsets from the frame pointer to access local variables become; // so large that the offset can't be encoded in the immediate fields of loads; // or stores.; //; // Outgoing function arguments must be at the bottom of the stack frame when; // calling another function. If we do not have variable-sized stack objects, we; // can allocate a ""reserved call frame"" area at the bottom of the local; // variable area, large enough for all outgoing calls. If we do have VLAs, then; // the stack pointer must be decremented and incremented around each call to; // make space for the arguments below the VLAs.; //; // FIXME: also explain the redzone concept.; //; // An example of the prologue:; //; // .globl __foo; // .align 2; // __foo:; // Ltmp0:; // .cfi_startproc; // .cfi_personality 155, ___gxx_personality_v0; // Leh_func_begin:; // .cfi_lsda 16, Lexception33; //; // stp xa,bx, [sp, -#offset]!; // ...; // stp x28, x27, [sp, #offset-32]; // stp fp, lr, [sp, #offset-16]; // add fp, sp, #offset - 16; // sub sp, sp, #1360; //; // The Stack:; // +-------------------------------------------+; // 10000 | ........ | ........ | ........ | ........ |; // 10004 | ........ | ........ | ........ | ........ |; // +-------------------------------------------+; // 10008 | ........ | ........ | ........ | ........ |; // 1000c | ........ | ........ | ........ | ....",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:4798,variab,variable-sized,4798,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,2,['variab'],"['variable', 'variable-sized']"
Modifiability,". In the list of classes, class names are separated by a "":""; wildcarding is supported.; The following formats are supported, eg in TClassTree::Draw; 1. `Draw(""ClassA"")`; - Draw inheritance tree for ClassA; - Show all classes referenced by ClassA; 2. `Draw(""*ClassB"")`; - Draw inheritance tree for ClassB; and all the classes deriving from ClassB; 3. `Draw("">ClassC"")`; - Draw inheritance tree for ClassC; - Show classes referencing ClassC; 4. `Draw(""ClassD<"")`; - Draw inheritance tree for ClassD; - Show classes referenced by ClassD; - Show all classes referencing ClassD; 5. `Draw(""Cla*"")`; - Draw inheritance tree for all classes with name starting with ""Cla""; - Show classes referenced by these classes; 6. `Draw(""ClassA:ClassB<"")`; - Draw inheritance tree for ClassA; - Show all classes referenced by ClassA; - Draw inheritance tree for ClassB; - Show classes referenced by ClassB; - Show all classes referencing ClassB. Example: `Draw(""TTree<"")`; - Draw inheritance tree for the Root class TTree; - Show all classes referenced by TTree; - Show all classes using TTree. By default, only direct inheritance is drawn.; Use TClassTree::ShowLinks(option) to show additional references; - option = ""H"" to show links to embedded classes; - option = ""M"" to show multiple inheritance; - option = ""R"" to show pointers to other classes from data members; - option = ""C"" to show classes used by the code(implementation) of a class. The following picture is produced directly by:; ~~~ {.cpp}; TClassTree ct(""ct"",""*TH1""); ~~~; It shows all the classes derived from the base class TH1. \image html gpad_classtree1.png. The TClassTree class uses the services of the class TPaveClass to; show the class names. By clicking with the right mouse button in; one TPaveClass object, one can invoke the following functions of TClassTree:; - ShowLinks(option) with by default option = ""HMR""; - Draw(classes). By default the class drawn is the one being pointed; - ShowClassesUsedBy(classes) (by default the pointed clas",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx:1475,inherit,inheritance,1475,graf2d/gpad/src/TClassTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx,1,['inherit'],['inheritance']
Modifiability,". This gives us an accurate; /// solution because all incorrect locations will have a ""False"" propagated into; /// them. It also gives us a solution that copes well with loops by assuming; /// that variable locations are live-through every loop, and then removing those; /// that are not through dataflow.; ///; /// Within LiveDebugValues: each variable location is represented by a; /// VarLoc object that identifies the source variable, the set of; /// machine-locations that currently describe it (a single location for; /// DBG_VALUE or multiple for DBG_VALUE_LIST), and the DBG_VALUE inst that; /// specifies the location. Each VarLoc is indexed in the (function-scope) \p; /// VarLocMap, giving each VarLoc a set of unique indexes, each of which; /// corresponds to one of the VarLoc's machine-locations and can be used to; /// lookup the VarLoc in the VarLocMap. Rather than operate directly on machine; /// locations, the dataflow analysis in this pass identifies locations by their; /// indices in the VarLocMap, meaning all the variable locations in a block can; /// be described by a sparse vector of VarLocMap indicies.; ///; /// All the storage for the dataflow analysis is local to the ExtendRanges; /// method and passed down to helper methods. ""OutLocs"" and ""InLocs"" record the; /// in and out lattice values for each block. ""OpenRanges"" maintains a list of; /// variable locations and, with the ""process"" method, evaluates the transfer; /// function of each block. ""flushPendingLocs"" installs debug value instructions; /// for each live-in location at the start of blocks, while ""Transfers"" records; /// transfers of values between machine-locations.; ///; /// We avoid explicitly representing the ""Unknown"" (\top) lattice value in the; /// implementation. Instead, unvisited blocks implicitly have all lattice; /// values set as ""Unknown"". After being visited, there will be path back to; /// the entry block where the lattice value is ""False"", and as the transfer; /// function can",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:5041,variab,variable,5041,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,1,['variab'],['variable']
Modifiability,". auto df2 = df.Define(""x"", []() { return 1; }); .Filter(""col0 % 1 == col0""); .Filter([](int b1) { return b1 <2; }, {""cut1""}); .Define(""y"", []() { return 1; });. auto count = df2.Count();. // Prints the graph to the rd1.dot file in the current directory; ROOT::RDF::SaveGraph(df, ""./mydot.dot"");; // Prints the graph to standard output; ROOT::RDF::SaveGraph(df);; ~~~. The generated graph can be rendered using one of the graphviz filters, e.g. `dot`. For instance, the image below can be generated with the following command:; ~~~{.sh}; $ dot -Tpng computation_graph.dot -ocomputation_graph.png; ~~~. \image html RDF_Graph2.png. \anchor rdf-logging; ### Activating RDataFrame execution logs. RDataFrame has experimental support for verbose logging of the event loop runtimes and other interesting related information. It is activated as follows:; ~~~{.cpp}; #include <ROOT/RLogger.hxx>. // this increases RDF's verbosity level as long as the `verbosity` variable is in scope; auto verbosity = ROOT::Experimental::RLogScopedVerbosity(ROOT::Detail::RDF::RDFLogChannel(), ROOT::Experimental::ELogLevel::kInfo);; ~~~. or in Python:; ~~~{.python}; import ROOT. verbosity = ROOT.Experimental.RLogScopedVerbosity(ROOT.Detail.RDF.RDFLogChannel(), ROOT.Experimental.ELogLevel.kInfo); ~~~. More information (e.g. start and end of each multi-thread task) is printed using `ELogLevel.kDebug` and even more; (e.g. a full dump of the generated code that RDataFrame just-in-time-compiles) using `ELogLevel.kDebug+10`. \anchor rdf-from-spec; ### Creating an RDataFrame from a dataset specification file. RDataFrame can be created using a dataset specification JSON file: . ~~~{.python}; import ROOT. df = ROOT.RDF.Experimental.FromSpec(""spec.json""); ~~~. The input dataset specification JSON file needs to be provided by the user and it describes all necessary samples and; their associated metadata information. The main required key is the ""samples"" (at least one sample is needed) and the; required sub-keys for e",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx:77304,variab,variable,77304,tree/dataframe/src/RDataFrame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RDataFrame.cxx,1,['variab'],['variable']
Modifiability,......................OK; PDEFoam [4/4]....................................................OK; KNN [4/4]........................................................OK; Fisher [4/4].....................................................OK; BoostedFisher [4/4]..............................................OK; LD [4/4].........................................................OK; MLP [4/4]........................................................OK; MLPBFGS [4/4]....................................................OK; SVM [4/4]........................................................OK; BDTG [4/4].......................................................OK; BDT [4/4]........................................................OK; Regression_LD [4/4]..............................................OK; Regression_MLPBFGSN [4/4]........................................OK; Regression_BDTG2 [4/4]...........................................OK; Event [107/107]..................................................OK; VariableInfo [31/31].............................................OK; DataSetInfo [20/20]..............................................OK; DataSet [15/15]..................................................OK; Factory [11/11]..................................................OK; Reader [2/2].....................................................OK; CutsGA [3/3].....................................................OK; LikelihoodD [4/4]................................................OK; PDERS [4/4]......................................................OK; PDEFoam [4/4]....................................................OK; KNN [4/4]........................................................OK; Fisher [4/4].....................................................OK; BoostedFisher [4/4]..............................................OK; LD [4/4].........................................................OK; MLP [4/4]........................................................OK; MLPBFGS [4/4]..............................,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/stressTMVA.cxx:2022,Variab,VariableInfo,2022,tmva/tmva/test/stressTMVA.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/stressTMVA.cxx,1,['Variab'],['VariableInfo']
Modifiability,"..; // %3 = ld ...; // %4 = ld ...; // The algorithm below does the following:; // In the beginning, the RegisterMap will have been populated with the virtual; // registers %2, and %3, the DbgValueSinkCandidates and the InstrMap will be; // empty. DbgValueSinkCandidates = {}, RegisterMap = {2 -> {}, 3 -> {}},; // InstrMap {}; // -> DBG_VALUE %2, A, .... # X; // DBG_VALUE 0, A, ... # Y; // DBG_VALUE %3, A, ..., # Z; // %2 = ld ...; // %3 = ld ...; // %4 = ld ...; // After the first DBG_VALUE (denoted with an X) is processed, the; // DbgValueSinkCandidates and InstrMap will be populated and the RegisterMap; // entry for %2 will be populated as well. DbgValueSinkCandidates = {A -> X},; // RegisterMap = {2 -> {X}, 3 -> {}}, InstrMap {X -> 2}; // DBG_VALUE %2, A, .... # X; // -> DBG_VALUE 0, A, ... # Y; // DBG_VALUE %3, A, ..., # Z; // %2 = ld ...; // %3 = ld ...; // %4 = ld ...; // After the DBG_VALUE Y is processed, the DbgValueSinkCandidates is updated; // to now hold Y for A and the RegisterMap is also updated to remove X from; // %2, this is because both X and Y describe the same debug variable A. X is; // also updated to have a $noreg as the first operand.; // DbgValueSinkCandidates = {A -> {Y}}, RegisterMap = {2 -> {}, 3 -> {}},; // InstrMap = {X-> 2}; // DBG_VALUE $noreg, A, .... # X; // DBG_VALUE 0, A, ... # Y; // -> DBG_VALUE %3, A, ..., # Z; // %2 = ld ...; // %3 = ld ...; // %4 = ld ...; // After DBG_VALUE Z is processed, the DbgValueSinkCandidates is updated to; // hold Z fr A, the RegisterMap is updated to hold Z for %3, and the InstrMap; // is updated to have Z mapped to %3. This is again because Z describes the; // debug variable A, Y is not updated to have $noreg as first operand because; // its first operand is an immediate, not a register.; // DbgValueSinkCandidates = {A -> {Z}}, RegisterMap = {2 -> {}, 3 -> {Z}},; // InstrMap = {X -> 2, Z -> 3}; // DBG_VALUE $noreg, A, .... # X; // DBG_VALUE 0, A, ... # Y; // DBG_VALUE %3, A, ..., # Z; // -> %2 = ld .",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp:2972,variab,variable,2972,interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMLoadStoreOptimizer.cpp,1,['variab'],['variable']
Modifiability,".; /// \tparam T The type of the column to apply the reduction to. Automatically deduced.; /// \param[in] aggregator A callable with signature `U(U,T)` or `void(U&,T)`, where T is the type of the column, U is the type of the aggregator variable; /// \param[in] merger A callable with signature `U(U,U)` or `void(std::vector<U>&)` used to merge the results of the accumulations of each thread; /// \param[in] columnName The column to be aggregated. If omitted, the first default column is used instead.; /// \param[in] aggIdentity The aggregator variable of each thread is initialized to this value (or is default-constructed if the parameter is omitted); /// \return the result of the aggregation wrapped in a RResultPtr.; ///; /// An aggregator callable takes two values, an aggregator variable and a column value. The aggregator variable is; /// initialized to aggIdentity or default-constructed if aggIdentity is omitted.; /// This action calls the aggregator callable for each processed entry, passing in the aggregator variable and; /// the value of the column columnName.; /// If the signature is `U(U,T)` the aggregator variable is then copy-assigned the result of the execution of the callable.; /// Otherwise the signature of aggregator must be `void(U&,T)`.; ///; /// The merger callable is used to merge the partial accumulation results of each processing thread. It is only called in multi-thread executions.; /// If its signature is `U(U,U)` the aggregator variables of each thread are merged two by two.; /// If its signature is `void(std::vector<U>& a)` it is assumed that it merges all aggregators in a[0].; ///; /// This action is *lazy*: upon invocation of this method the calculation is booked but not executed. Also see RResultPtr.; ///; /// Example usage:; /// ~~~{.cpp}; /// auto aggregator = [](double acc, double x) { return acc * x; };; /// ROOT::EnableImplicitMT();; /// // If multithread is enabled, the aggregator function will be called by more threads; /// // and will pr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx:1455,variab,variable,1455,tree/dataframe/inc/ROOT/RDF/RInterface.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/RInterface.hxx,1,['variab'],['variable']
Modifiability,".; 2) A program when released has no strange ""features"" or bugs.; 3) A program is robust and handles ALL extreme and unusual cases.; 4) A program is written in phases and modules with hard tests for each one.; 5) A program is written for any user who doesn't need special knowledge; to use the program.; 6) A program has well defined user requirements and functional specifications.; 7) A program is written with regard to future expansion and integreation; with other systems (portability). When programming following these additional principles make programs easier; to maintain. A) Choose variable names that accurately describes what the variable does/is.; B) Write comments to inform someone faced with the task of modifying your code.; C) Avoid excessive comments. Write the code so that it says what it does.; D) Follow a strict one-in, one-out flow of control structues except in the; case of fatal error conditions.; E) Avoid using global variables.; F) Do not cause side effects to variables that were not parameters to a; function.; G) Have a single function perform a single purpose.; H) Select a single indentation style and stick with it.; I) Use a consistent naming convention. The following principles help me when I try optimizing code:. a) If optimizing, use a profiler to determine which sections of code most of; the time is spent in. Spend most of your effort in the most used sections.; Don't bother optimizing a procedure using less than 10% of the time. b) High level optimizations are far more effective than cycle shaving.; (e.g. use quick sort instead of optimizing a bubble sort.). c) Be flexible in your approach to solving a problem. List exactly what you; need as a result at a minimum. Get rid of unnecessary assumptions. d) Become familiar with sets of operations that are equivalent, or nearly so.; Learn the relative expense of basic operations. e) If possible, be careful not to needlessly sacrifice significant readability; of the code for a cycle or two. -- Spy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:2524,variab,variables,2524,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,1,['variab'],['variables']
Modifiability,".; With x = (x,y,z) and gamma = 1/Sqrt(1-beta*beta) (beta being the module of vector b),; an arbitrary active Lorentz boost transformation (from the rod frame; to the original frame) can be written as:. ~~~ {.cpp}; x = x' + (gamma-1)/(beta*beta) * (b*x') * b + gamma * t' * b; t = gamma (t'+ b*x').; ~~~. The member function Boost() performs a boost transformation; from the rod frame to the original frame. BoostVector() returns; a TVector3 of the spatial components divided by the time component:. ~~~ {.cpp}; TVector3 b;; v.Boost(bx,by,bz);; v.Boost(b);; b = v.BoostVector(); // b=(x/t,y/t,z/t); ~~~. ### Rotations; There are four sets of functions to rotate the TVector3 component; of a TLorentzVector:. #### rotation around axes. ~~~ {.cpp}; v.RotateX(TMath::Pi()/2.);; v.RotateY(.5);; v.RotateZ(.99);; ~~~. #### rotation around an arbitrary axis; v.Rotate(TMath::Pi()/4., v1); // rotation around v1. #### transformation from rotated frame. ~~~ {.cpp}; v.RotateUz(direction); // direction must be a unit TVector3; ~~~. #### by TRotation (see TRotation). ~~~ {.cpp}; TRotation r;; v.Transform(r); or v *= r; // Attention v=M*v; ~~~. ### Misc. #### Angle between two vectors. ~~~ {.cpp}; Double_t a = v1.Angle(v2.Vect()); // get angle between v1 and v2; ~~~. #### Light-cone components; Member functions Plus() and Minus() return the positive; and negative light-cone components:. ~~~ {.cpp}; Double_t pcone = v.Plus();; Double_t mcone = v.Minus();; ~~~. CAVEAT: The values returned are T{+,-}Z. It is known that some authors; find it easier to define these components as (T{+,-}Z)/sqrt(2). Thus; check what definition is used in the physics you're working in and adapt; your code accordingly. #### Transformation by TLorentzRotation; A general Lorentz transformation see class TLorentzRotation can; be used by the Transform() member function, the *= or; * operator of the TLorentzRotation class:. ~~~ {.cpp}; TLorentzRotation l;; v.Transform(l);; v = l*v; or v *= l; // Attention v = l*v; ~~~; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TLorentzVector.cxx:6859,adapt,adapt,6859,math/physics/src/TLorentzVector.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TLorentzVector.cxx,1,['adapt'],['adapt']
Modifiability,".e., by not integrating over all states of this category.; /// The slice is positioned at the given label value. Multiple Slice() commands can be given to specify slices; /// in multiple observables, e.g.; /// ```{.cpp}; /// pdf.plotOn(frame, Slice(tagCategory, ""2tag""), Slice(jetCategory, ""3jet""));; /// ```; /// <tr><td> `Project(const RooArgSet& set)` <td> Override default projection behaviour by projecting; /// over observables given in set, completely ignoring the default projection behavior. Advanced use only.; /// <tr><td> `ProjWData(const RooAbsData& d)` <td> Override default projection _technique_ (integration). For observables; /// present in given dataset projection of PDF is achieved by constructing an average over all observable; /// values in given set. Consult RooFit plotting tutorial for further explanation of meaning & use of this technique; /// <tr><td> `ProjWData(const RooArgSet& s, const RooAbsData& d)` <td> As above but only consider subset 's' of; /// observables in dataset 'd' for projection through data averaging; /// <tr><td> `ProjectionRange(const char* rn)` <td> When projecting the PDF onto the plot axis, it is usually integrated; /// over the full range of the invisible variables. The ProjectionRange overrides this.; /// This is useful if the PDF was fitted in a limited range in y, but it is now projected onto x. If; /// `ProjectionRange(""<name of fit range>"")` is passed, the projection is normalised correctly.; ///; /// <tr><th> Type of argument <th> Plotting control; /// <tr><td> `LineStyle(Int_t style)` <td> Select line style by ROOT line style code, default is solid; /// <tr><td> `LineColor(Int_t color)` <td> Select line color by ROOT color code, default is blue; /// <tr><td> `LineWidth(Int_t width)` <td> Select line with in pixels, default is 3; /// <tr><td> `FillStyle(Int_t style)` <td> Select fill style, default is not filled. If a filled style is selected,; /// also use VLines() to add vertical downward lines at end of curve to ensu",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:5264,variab,variables,5264,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['variab'],['variables']
Modifiability,".html"">THtml</a> will generate the link; <tt>http://consult.cern.ch/xwho/people?Enrico+Fermi</tt>. This works well for; people at CERN.</li>. <li><tt>Name &lt;link&gt; Info</tt>.; <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will generate; an HTML link for <tt>Name</tt> as specified by <tt>link</tt> and print; <tt>Info</tt> behind <tt>Name</tt>.</p>. <p>Example:</p>; <tt>// Author: Enrico Fermi &lt;http://www.enricos-home.it&gt;</tt> or<br/>; <tt>// Author: Enrico Fermi &lt;mailto:enrico@fnal.gov&gt;</tt> in the; source file. That's world compatible.</li>; </ul>. <p>Example (with defaults given):</p><pre>; Root.Html.Author: // Author:; Root.Html.LastUpdate: // @(#); Root.Html.Copyright: * Copyright; Root.Html.XWho: http://consult.cern.ch/xwho/people?</pre>. <h4><a name=""conf:header"">II.6 Header and footer</a></h4>. <p><a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> generates; a default header and footer for all pages. You can; specify your own versions with the configuration variables Root.Html.Header; and Root.Html.Footer, or by calling SetHeader(), SetFooter().; Both variables default to """", using the standard Root; versions. If it has a ""+"" appended, <a href=""http://root.cern.ch/root/html/THtml.html"">THtml</a> will; write both versions (user and root) to a file, for the header in the order; 1st root, 2nd user, and for the footer 1st user, 2nd root (the root; versions containing ""&lt;html&gt;"" and &lt;/html&gt; tags, resp).</p>. <p>If you want to replace root's header you have to write a file containing; all HTML elements necessary starting with the &lt;doctype&gt; tag and ending with; (and including) the &lt;body&gt; tag. If you add your header it will be added; directly after Root's &lt;body&gt; tag. Any occurrence of the string <tt>%TITLE%</tt>; in the user's header file will be replaced by; a sensible, automatically generated title. If the header is generated for a; class, occurrences of <tt>%CLASS%</tt> will be replaced by the ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx:9298,config,configuration,9298,html/src/THtml.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/src/THtml.cxx,2,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"/ Interrupting a Running Macro //; // //; // You can interrupt a running macro by selecting the Tools menu / //; // Interrupt; by clicking on the corresponding toolbar button, or by //; // using Shift+F5 accelerator keys. //; // //; // Interface to CINT Interpreter //; // //; // Any command entered in the Command combo box will be passed to //; // the CINT interpreter. This combo box will keep the commands history //; // and will allow you to re-execute the same commands during an editor //; // session. //; // //; // Keyboard Bindings //; // //; // The following table lists the keyboard shortcuts and accelerator //; // keys. //; // //; // Key: Action: //; // ==== ======= //; // //; // Up Move cursor up. //; // Shift+Up Move cursor up and extend selection. //; // Down Move cursor down. //; // Shift+Down Move cursor down and extend selection. //; // Left Move cursor left. //; // Shift+Left Move cursor left and extend selection. //; // Right Move cursor right. //; // Shift+Right Move cursor right and extend selection. //; // Home Move cursor to begin of line. //; // Shift+Home Move cursor to begin of line and extend selection.//; // Ctrl+Home Move cursor to top of page. //; // End Move cursor to end of line. //; // Shift+End Move cursor to end of line and extend selection. //; // Ctrl+End Move cursor to end of page. //; // PgUp Move cursor up one page. //; // Shift+PgUp Move cursor up one page and extend selection. //; // PgDn Move cursor down one page. //; // Shift+PgDn Move cursor down one page and extend selection. //; // Delete Delete character after cursor, or text selection. //; // BackSpace Delete character before cursor, or text selection.//; // Ctrl+B Move cursor left. //; // Ctrl+D Delete character after cursor, or text selection. //; // Ctrl+E Move cursor to end of line. //; // Ctrl+H Delete character before cursor, or text selection.//; // Ctrl+K Delete characters from current position to the //; // end of line. //; // Ctrl+U Delete current line. //; // //; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx:4702,extend,extend,4702,test/RootIDE/TGRootIDE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/RootIDE/TGRootIDE.cxx,1,['extend'],['extend']
Modifiability,"/ This formula is trivially equivalent to the previous formula. However,; // this formula can be implemented much more efficiently. The trick is that; // K! / 2^T is odd, and exact division by an odd number *is* safe in modular; // arithmetic. To do exact division in modular arithmetic, all we have; // to do is multiply by the inverse. Therefore, this step can be done at; // width W.; //; // The next issue is how to safely do the division by 2^T. The way this; // is done is by doing the multiplication step at a width of at least W + T; // bits. This way, the bottom W+T bits of the product are accurate. Then,; // when we perform the division by 2^T (which is equivalent to a right shift; // by T), the bottom W bits are accurate. Extra bits are okay; they'll get; // truncated out after the division by 2^T.; //; // In comparison to just directly using the first formula, this technique; // is much more efficient; using the first formula requires W * K bits,; // but this formula less than W + K bits. Also, the first formula requires; // a division step, whereas this formula only requires multiplies and shifts.; //; // It doesn't matter whether the subtraction step is done in the calculation; // width or the input iteration count's width; if the subtraction overflows,; // the result must be zero anyway. We prefer here to do it in the width of; // the induction variable because it helps a lot for certain cases; CodeGen; // isn't smart enough to ignore the overflow, which leads to much less; // efficient code if the width of the subtraction is wider than the native; // register width.; //; // (It's possible to not widen at all by pulling out factors of 2 before; // the multiplication; for example, K=2 can be calculated as; // It/2*(It+(It*INT_MIN/INT_MIN)+-1). However, it requires; // extra arithmetic, so it's not an obvious win, and it gets; // much more complicated for K > 3.); // Protection from insane SCEVs; this bound is conservative,; // but it probably doesn't matter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:2084,variab,variable,2084,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['variab'],['variable']
Modifiability,"/ header; /// F : 1-bit field indicating that the record describes a function fragment; /// (implies that no prologue is present, and prologue processing should be; /// skipped) (ARM only); /// Epilogue Count : 5-bit field that differs in meaning based on the E field.; ///; /// If E is set, then this field specifies the index of the; /// first unwind code describing the (only) epilogue.; ///; /// Otherwise, this field indicates the number of exception; /// scopes. If more than 31 scopes exist, then this field and; /// the Code Words field must both be set to 0 to indicate that; /// an extension word is required.; /// Code Words : 4-bit (5-bit on ARM64) field that specifies the number of; /// 32-bit words needed to contain all the unwind codes. If more; /// than 15 words (31 words on ARM64) are required, then this field; /// and the Epilogue Count field must both be set to 0 to indicate; /// that an extension word is required.; /// Extended Epilogue Count, Extended Code Words :; /// Valid only if Epilog Count and Code Words are both; /// set to 0. Provides an 8-bit extended code word; /// count and 16-bits for epilogue count; ///; /// The epilogue scope format on ARM is:; ///; /// 3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0; /// 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0; /// +----------------+------+---+---+-------------------------------+; /// | Ep Start Idx | Cond |Res| Epilogue Start Offset |; /// +----------------+------+---+-----------------------------------+; ///; /// The epilogue scope format on ARM64 is:; ///; /// 3 3 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 0; /// 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0; /// +-------------------+-------+---+-------------------------------+; /// | Ep Start Idx | Res | Epilogue Start Offset |; /// +-------------------+-------+-----------------------------------+; ///; /// If the E bit is unset in the header, the header is followed by a series of",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ARMWinEH.h:2520,Extend,Extended,2520,interpreter/llvm-project/llvm/include/llvm/Support/ARMWinEH.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ARMWinEH.h,2,['Extend'],['Extended']
Modifiability,"/ section contains all of the 32-bit hash values in contiguous memory, and the; /// offsets contain the offset into the data area for the particular hash.; ///; /// For a lookup example, we could hash a function name and take it modulo the; /// number of buckets giving us our bucket. From there we take the bucket value; /// as an index into the hashes table and look at each successive hash as long; /// as the hash value is still the same modulo result (bucket value) as earlier.; /// If we have a match we look at that same entry in the offsets table and grab; /// the offset in the data for our final match.; ///; /// The DWARF v5 accelerator table consists of zero or more name indices that; /// are output into an on-disk format that looks like this:; ///; /// .------------------.; /// | HEADER |; /// |------------------|; /// | CU LIST |; /// |------------------|; /// | LOCAL TU LIST |; /// |------------------|; /// | FOREIGN TU LIST |; /// |------------------|; /// | HASH TABLE |; /// |------------------|; /// | NAME TABLE |; /// |------------------|; /// | ABBREV TABLE |; /// |------------------|; /// | ENTRY POOL |; /// `------------------'; ///; /// For the full documentation please refer to the DWARF 5 standard.; ///; ///; /// This file defines the class template AccelTable, which is represents an; /// abstract view of an Accelerator table, without any notion of an on-disk; /// layout. This class is parameterized by an entry type, which should derive; /// from AccelTableData. This is the type of individual entries in the table,; /// and it should store the data necessary to emit them. AppleAccelTableData is; /// the base class for Apple Accelerator Table entries, which have a uniform; /// structure based on a sequence of Atoms. There are different sub-classes; /// derived from AppleAccelTable, which differ in the set of Atoms and how they; /// obtain their values.; ///; /// An Apple Accelerator Table can be serialized by calling emitAppleAccelTable; /// function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AccelTable.h:2338,parameteriz,parameterized,2338,interpreter/llvm-project/llvm/include/llvm/CodeGen/AccelTable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/AccelTable.h,1,['parameteriz'],['parameterized']
Modifiability,"/ was known to clang already.; //; // The declarations use __attribute__(__clang_arm_builtin_alias),; // so that each function declared will be recognized as the; // appropriate MVE builtin in spite of its user-facing name.; //; // (That's better than making them all wrapper functions,; // partly because it avoids any compiler error message citing; // the wrapper function definition instead of the user's code,; // and mostly because some MVE intrinsics have arguments; // required to be compile-time constants, and that property; // can't be propagated through a wrapper function. It can be; // propagated through a macro, but macros can't be overloaded; // on argument types very easily - you have to use _Generic,; // which makes error messages very confusing when the user; // gets it wrong.); //; // Finally, the polymorphic versions of the intrinsics are; // also defined with __attribute__(overloadable), so that when; // the same name is defined with several type signatures, the; // right thing happens. Each one of the overloaded; // declarations is given a different builtin id, which; // has exactly the effect we want: first clang resolves the; // overload to the right function, then it knows which builtin; // it's referring to, and then the Sema checking for that; // builtin can check further things like the constant; // arguments.; //; // One more subtlety is the newline just before the return; // type name. That's a cosmetic tweak to make the error; // messages legible if the user gets the types wrong in a call; // to a polymorphic function: this way, clang will print just; // the _final_ line of each declaration in the header, to show; // the type signatures that would have been legal. So all the; // confusing machinery with __attribute__ is left out of the; // error message, and the user sees something that's more or; // less self-documenting: ""here's a list of actually readable; // type signatures for vfooq(), and here's why each one didn't; // match your call"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:1975,polymorphi,polymorphic,1975,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,1,['polymorphi'],['polymorphic']
Modifiability,"/ | local variables of fixed size |; // | including spill slots |; // |-----------------------------------| <- bp(not defined by ABI,; // |.variable-sized.local.variables....| LLVM chooses X19); // |.(VLAs)............................| (size of this area is unknown at; // |...................................| compile time); // |-----------------------------------| <- sp; // | | Lower address; //; //; // To access the data in a frame, at-compile time, a constant offset must be; // computable from one of the pointers (fp, bp, sp) to access it. The size; // of the areas with a dotted background cannot be computed at compile-time; // if they are present, making it required to have all three of fp, bp and; // sp to be set up to be able to access all contents in the frame areas,; // assuming all of the frame areas are non-empty.; //; // For most functions, some of the frame areas are empty. For those functions,; // it may not be necessary to set up fp or bp:; // * A base pointer is definitely needed when there are both VLAs and local; // variables with more-than-default alignment requirements.; // * A frame pointer is definitely needed when there are local variables with; // more-than-default alignment requirements.; //; // For Darwin platforms the frame-record (fp, lr) is stored at the top of the; // callee-saved area, since the unwind encoding does not allow for encoding; // this dynamically and existing tools depend on this layout. For other; // platforms, the frame-record is stored at the bottom of the (gpr) callee-saved; // area to allow SVE stack objects (allocated directly below the callee-saves,; // if available) to be accessed directly from the framepointer.; // The SVE spill/fill instructions have VL-scaled addressing modes such; // as:; // ldr z8, [fp, #-7 mul vl]; // For SVE the size of the vector length (VL) is not known at compile-time, so; // '#-7 mul vl' is an offset that can only be evaluated at runtime. With this; // layout, we don't need to add an unscal",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:3379,variab,variables,3379,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['variab'],['variables']
Modifiability,/* !G_OS_WIN32 */; /* Define G_VA_COPY() to do the right thing for copying va_list variables.; * glibconfig.h may have already defined G_VA_COPY as va_copy or __va_copy.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutils.h:83,variab,variables,83,graf2d/win32gdk/gdk/src/glib/gutils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutils.h,1,['variab'],['variables']
Modifiability,/* !SANE_MALLOC_PROTOS */; /* --- variables --- */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.c:34,variab,variables,34,graf2d/win32gdk/gdk/src/glib/gmem.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.c,1,['variab'],['variables']
Modifiability,"/* !STDIO */; /* This function is called when there is a warning, but the library thinks; * it can continue anyway. Replacement functions don't have to do anything; * here if you don't want to. In the default configuration, png_ptr is; * not used, but it is passed in case it may be useful.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c:209,config,configuration,209,graf2d/asimage/src/libAfterImage/libpng/pngtest.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngtest.c,1,['config'],['configuration']
Modifiability,"/* !__GNUC__ */; /* Wrap the gcc __PRETTY_FUNCTION__ and __FUNCTION__ variables with; * macros, so we can refer to them as strings unconditionally.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmacros.h:70,variab,variables,70,graf2d/win32gdk/gdk/src/glib/gmacros.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmacros.h,1,['variab'],['variables']
Modifiability,"/* # of bytes remaining in source buffer */; /* Bit input buffer --- note these values are kept in register variables,; * not in this struct, inside the inner loops.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:108,variab,variables,108,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,2,['variab'],['variables']
Modifiability,/* # of values alloced to each component */; /* Variables for ordered dithering */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:48,Variab,Variables,48,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,1,['Variab'],['Variables']
Modifiability,/* #undef RIGHT_SHIFT_IS_UNSIGNED */; /* #define INLINE __inline__ */; /* These are for configuring the JPEG memory manager. */; /* #undef DEFAULT_MAX_MEM */; /* #undef NO_MKTEMP */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jconfig.h:88,config,configuring,88,graf2d/asimage/src/libAfterImage/libjpeg/jconfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jconfig.h,1,['config'],['configuring']
Modifiability,"/* $TOG: imakemdep.h /main/101 1997/06/06 09:13:20 bill $ */; /*. Copyright (c) 1993, 1994 X Consortium. Permission is hereby granted, free of charge, to any person obtaining a copy; of this software and associated documentation files (the ""Software""), to deal; in the Software without restriction, including without limitation the rights; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; copies of the Software, and to permit persons to whom the Software is; furnished to do so, subject to the following conditions:. The above copyright notice and this permission notice shall be included in; all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of the X Consortium shall not be; used in advertising or otherwise to promote the sale, use or other dealings; in this Software without prior written authorization from the X Consortium. */; /* $XFree86: xc/config/imake/imakemdep.h,v 3.24.2.3 1997/07/27 02:41:05 dawes Exp $ */; /*; * This file contains machine-dependent constants for the imake utility.; * When porting imake, read each of the steps below and add in any necessary; * definitions. In general you should *not* edit ccimake.c or imake.c!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/imakemdep.h:1374,config,config,1374,misc/rmkdepend/imakemdep.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/imakemdep.h,1,['config'],['config']
Modifiability,"/* $XConsortium: cppsetup.c /main/17 1996/09/28 16:15:03 rws $ */; /*. Copyright (c) 1993, 1994 X Consortium. Permission is hereby granted, free of charge, to any person obtaining a copy; of this software and associated documentation files (the ""Software""), to deal; in the Software without restriction, including without limitation the rights; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; copies of the Software, and to permit persons to whom the Software is; furnished to do so, subject to the following conditions:. The above copyright notice and this permission notice shall be included in; all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of the X Consortium shall not be; used in advertising or otherwise to promote the sale, use or other dealings; in this Software without prior written authorization from the X Consortium. */; /* $XFree86: xc/config/makedepend/cppsetup.c,v 3.2 1996/12/30 13:57:53 dawes Exp $ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/cppsetup.c:1379,config,config,1379,misc/rmkdepend/cppsetup.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/cppsetup.c,1,['config'],['config']
Modifiability,"/* $XConsortium: def.h /main/30 1996/12/04 10:11:12 swick $ */; /* $XFree86: xc/config/makedepend/def.h,v 3.3 1997/01/12 10:38:17 dawes Exp $ */; /*. Copyright (c) 1993, 1994 X Consortium. Permission is hereby granted, free of charge, to any person obtaining a copy; of this software and associated documentation files (the ""Software""), to deal; in the Software without restriction, including without limitation the rights; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; copies of the Software, and to permit persons to whom the Software is; furnished to do so, subject to the following conditions:. The above copyright notice and this permission notice shall be included in; all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of the X Consortium shall not be; used in advertising or otherwise to promote the sale, use or other dealings; in this Software without prior written authorization from the X Consortium. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/def.h:80,config,config,80,misc/rmkdepend/def.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/def.h,1,['config'],['config']
Modifiability,"/* $XConsortium: main.c /main/84 1996/12/04 10:11:23 swick $ */; /* $XFree86: xc/config/makedepend/main.c,v 3.11.2.1 1997/05/11 05:04:07 dawes Exp $ */; /*. Copyright (c) 1993, 1994 X Consortium. Permission is hereby granted, free of charge, to any person obtaining a copy; of this software and associated documentation files (the ""Software""), to deal; in the Software without restriction, including without limitation the rights; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; copies of the Software, and to permit persons to whom the Software is; furnished to do so, subject to the following conditions:. The above copyright notice and this permission notice shall be included in; all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of the X Consortium shall not be; used in advertising or otherwise to promote the sale, use or other dealings; in this Software without prior written authorization from the X Consortium. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/main.c:81,config,config,81,misc/rmkdepend/main.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/main.c,1,['config'],['config']
Modifiability,"/* $XConsortium: parse.c /main/33 1996/12/04 10:11:28 swick $ */; /*. Copyright (c) 1993, 1994 X Consortium. Permission is hereby granted, free of charge, to any person obtaining a copy; of this software and associated documentation files (the ""Software""), to deal; in the Software without restriction, including without limitation the rights; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell; copies of the Software, and to permit persons to whom the Software is; furnished to do so, subject to the following conditions:. The above copyright notice and this permission notice shall be included in; all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE; X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN; AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN; CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of the X Consortium shall not be; used in advertising or otherwise to promote the sale, use or other dealings; in this Software without prior written authorization from the X Consortium. */; /* $XFree86: xc/config/makedepend/parse.c,v 1.3 1997/01/12 10:39:45 dawes Exp $ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/parse.c:1378,config,config,1378,misc/rmkdepend/parse.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/parse.c,1,['config'],['config']
Modifiability,"/* ******************************************************************; * debug; * Part of FSE library; * Copyright (c) 2013-2020, Yann Collet, Facebook, Inc.; *; * You can contact the author at :; * - Source repository : https://github.com/Cyan4973/FiniteStateEntropy; *; * This source code is licensed under both the BSD-style license (found in the; * LICENSE file in the root directory of this source tree) and the GPLv2 (found; * in the COPYING file in the root directory of this source tree).; * You may select, at your option, one of the above-listed licenses.; ****************************************************************** */; /*; * The purpose of this header is to enable debug functions.; * They regroup assert(), DEBUGLOG() and RAWLOG() for run-time,; * and DEBUG_STATIC_ASSERT() for compile-time.; *; * By default, DEBUGLEVEL==0, which means run-time debug is disabled.; *; * Level 1 enables assert() only.; * Starting level 2, traces can be generated and pushed to stderr.; * The higher the level, the more verbose the traces.; *; * It's possible to dynamically adjust level using variable g_debug_level,; * which is only declared if DEBUGLEVEL>=2,; * and is a global variable, not multi-thread protected (use with care); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/debug.h:1097,variab,variable,1097,builtins/zstd/common/debug.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/debug.h,2,['variab'],['variable']
Modifiability,"/* ******************************************************************; * debug; * Part of FSE library; * Copyright (c) 2013-2020, Yann Collet, Facebook, Inc.; *; * You can contact the author at :; * - Source repository : https://github.com/Cyan4973/FiniteStateEntropy; *; * This source code is licensed under both the BSD-style license (found in the; * LICENSE file in the root directory of this source tree) and the GPLv2 (found; * in the COPYING file in the root directory of this source tree).; * You may select, at your option, one of the above-listed licenses.; ****************************************************************** */; /*; * This module only hosts one global variable; * which can be used to dynamically influence the verbosity of traces,; * such as DEBUGLOG and RAWLOG; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/debug.c:678,variab,variable,678,builtins/zstd/common/debug.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/debug.c,1,['variab'],['variable']
Modifiability,"/* *************************************; * Tuning parameters; ***************************************/; /*!; * XXH_FORCE_MEMORY_ACCESS:; * By default, access to unaligned memory is controlled by `memcpy()`, which is; * safe and portable.; *; * Unfortunately, on some target/compiler combinations, the generated assembly; * is sub-optimal.; *; * The below switch allow selection of a different access method; * in the search for improved performance.; * Method 0 (default):; * Use `memcpy()`. Safe and portable. Default.; * Method 1:; * `__attribute__((packed))` statement. It depends on compiler extensions; * and is therefore not portable.; * This method is safe if your compiler supports it, and *generally* as; * fast or faster than `memcpy`.; * Method 2:; * Direct access via cast. This method doesn't depend on the compiler but; * violates the C standard.; * It can generate buggy code on targets which do not support unaligned; * memory accesses.; * But in some circumstances, it's the only known way to get the most; * performance (example: GCC + ARMv6); * Method 3:; * Byteshift. This can generate the best code on old compilers which don't; * inline small `memcpy()` calls, and it might also be faster on big-endian; * systems which lack a native byteswap instruction.; * See https://stackoverflow.com/a/32095106/646947 for details.; * Prefer these methods in priority order (0 > 1 > 2 > 3); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:229,portab,portable,229,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,3,['portab'],['portable']
Modifiability,"/* -*- coding: utf-8 -*-; // Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; // See https://llvm.org/LICENSE.txt for license information.; // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; */; /**; * This file implements a shared library. This library can be pre-loaded by; * the dynamic linker of the Operating System (OS). It implements a few function; * related to process creation. By pre-load this library the executed process; * uses these functions instead of those from the standard library.; *; * The idea here is to inject a logic before call the real methods. The logic is; * to dump the call into a file. To call the real method this library is doing; * the job of the dynamic linker.; *; * The only input for the log writing is about the destination directory.; * This is passed as environment variable.; */; // NOLINTNEXTLINE",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libear/ear.c:848,variab,variable,848,interpreter/llvm-project/clang/tools/scan-build-py/lib/libear/ear.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libear/ear.c,1,['variab'],['variable']
Modifiability,/* --- variables --- */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdataset.c:7,variab,variables,7,graf2d/win32gdk/gdk/src/glib/gdataset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gdataset.c,3,['variab'],['variables']
Modifiability,/* -------------- image transformations start here ------------------- */; /* libpng 1.6.10: add code to cause a png_app_error if a selected TRANSFORM; * is not implemented. This will only happen in de-configured (non-default); * libpng builds. The results can be unexpected - png_read_png may return; * short or mal-formed rows because the transform is skipped.; */; /* Tell libpng to strip 16-bit/color files down to 8 bits per color.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:202,config,configured,202,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,1,['config'],['configured']
Modifiability,/* ---------------- Global Variables -------------------- */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSVarious.h:27,Variab,Variables,27,test/periodic/XSVarious.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSVarious.h,1,['Variab'],['Variables']
Modifiability,/* ----------------------------------------------------------------- */; /* These variables are set by the Set methods for the various models */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRolke.h:82,variab,variables,82,math/physics/inc/TRolke.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/inc/TRolke.h,1,['variab'],['variables']
Modifiability,"/* ---------------------------------------------------------------------. Note A.; The fall-through switches in UTF-8 reading code save a; temp variable, some decrements & conditionals. The switches; are equivalent to the following loop:; {; int tmpBytesToRead = extraBytesToRead+1;; do {; ch += *source++;; --tmpBytesToRead;; if (tmpBytesToRead) ch <<= 6;; } while (tmpBytesToRead > 0);; }; In UTF-8 writing code, the switches on ""bytesToWrite"" are; similarly unrolled loops. --------------------------------------------------------------------- */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp:144,variab,variable,144,interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/ConvertUTF.cpp,1,['variab'],['variable']
Modifiability,"/* ---------------------------------------------------------------------; The following 4 definitions are compiler-specific.; The C standard does not guarantee that wchar_t has at least; 16 bits, so wchar_t is no less portable than unsigned short!; All should be unsigned values to avoid sign extension during; bit mask & shift operations.; ------------------------------------------------------------------------ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h:218,portab,portable,218,interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/ConvertUTF.h,1,['portab'],['portable']
Modifiability,"/* 11. File does not exist, or it was configured that it should be; 	 * hidden */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:38,config,configured,38,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['configured']
Modifiability,/* === Memory management === */; /*! ZSTD_sizeof_*() :; * These functions give the _current_ memory usage of selected object.; * Note that object memory usage can evolve (increase or decrease) over time. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:163,evolve,evolve,163,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['evolve'],['evolve']
Modifiability,"/* === XXH3 streaming === */; /*; * Malloc's a pointer that is always aligned to align.; *; * This must be freed with `XXH_alignedFree()`.; *; * malloc typically guarantees 16 byte alignment on 64-bit systems and 8 byte; * alignment on 32-bit. This isn't enough for the 32 byte aligned loads in AVX2; * or on 32-bit, the 16 byte aligned loads in SSE2 and NEON.; *; * This underalignment previously caused a rather obvious crash which went; * completely unnoticed due to XXH3_createState() not actually being tested.; * Credit to RedSpah for noticing this bug.; *; * The alignment is done manually: Functions like posix_memalign or _mm_malloc; * are avoided: To maintain portability, we would have to write a fallback; * like this anyways, and besides, testing for the existence of library; * functions without relying on external build tools is impossible.; *; * The method is simple: Overallocate, manually align, and store the offset; * to the original behind the returned pointer.; *; * Align must be a power of 2 and 8 <= align <= 128.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:670,portab,portability,670,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['portab'],['portability']
Modifiability,"/* @(#)root/auth:$Id$ */; /* Author: Martin Nicolay 22/11/1988 */; /******************************************************************************; Copyright (C) 2006 Martin Nicolay <m.nicolay@osm-gmbh.de>. This library is free software; you can redistribute it and/or; modify it under the terms of the GNU Lesser General Public; License as published by the Free Software Foundation; either; version 2.1 of the License, or (at your option) any later; version. This library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public; License along with this library; if not, write to the Free; Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,; MA 02110-1301 USA; ******************************************************************************/; /*******************************************************************************; * *; * Simple RSA public key code. *; * Adaptation in library for ROOT by G. Ganis, July 2003 *; * (gerardo.ganis@cern.ch) *; * *; * Header used by internal rsa functions *; * *; *******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/res/rsaaux.h:1116,Adapt,Adaptation,1116,net/auth/res/rsaaux.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/res/rsaaux.h,4,['Adapt'],['Adaptation']
Modifiability,"/* @(#)root/auth:$Id$ */; /* Author: Martin Nicolay 22/11/1988 */; /******************************************************************************; Copyright (C) 2006 Martin Nicolay <m.nicolay@osm-gmbh.de>. This library is free software; you can redistribute it and/or; modify it under the terms of the GNU Lesser General Public; License as published by the Free Software Foundation; either; version 2.1 of the License, or (at your option) any later; version. This library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public; License along with this library; if not, write to the Free; Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,; MA 02110-1301 USA; ******************************************************************************/; /*******************************************************************************; * *; * Simple RSA public key code. *; * Adaptation in library for ROOT by G. Ganis, July 2003 *; * (gerardo.ganis@cern.ch) *; * *; *******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/rsaaux.cxx:1116,Adapt,Adaptation,1116,net/auth/src/rsaaux.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/rsaaux.cxx,3,['Adapt'],['Adaptation']
Modifiability,"/* @(#)root/clib:$Id$ */; /* Author: */; /* Access for application keys in mmap'd malloc managed region.; Copyright 1992 Free Software Foundation, Inc. Contributed by Fred Fish at Cygnus Support. fnf@cygnus.com. This file is part of the GNU C Library. The GNU C Library is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public License as; published by the Free Software Foundation; either version 2 of the; License, or (at your option) any later version. The GNU C Library is distributed in the hope that it will be useful,; but WITHOUT ANY WARRANTY; without even the implied warranty of; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; Library General Public License for more details. You should have received a copy of the GNU Library General Public; License along with the GNU C Library; see the file COPYING.LIB. If; not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,; Boston, MA 02111-1307, USA. */; /* This module provides access to some keys that the application can use to; provide persistent access to locations in the mapped memory section.; The intent is that these keys are to be used sparingly as sort of; persistent global variables which the application can use to reinitialize; access to data in the mapped region. For the moment, these keys are simply stored in the malloc descriptor; itself, in an array of fixed length. This should be fixed so that there; can be an unlimited number of keys, possibly using a multilevel access; scheme of some sort. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/keys.c:1236,variab,variables,1236,core/clib/src/keys.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/keys.c,1,['variab'],['variables']
Modifiability,"/* @(#)root/clib:$Id$ */; /* Author: Tomi Salo & Fons Rademakers */; /*; Portable snprintf and vsnprintf implementation. Format:; snprintf(holder, sizeof_holder, format, ...); vsnprintf(holder, sizeof_holder, format, args). Return values:; number of characters written or -1 if truncated or -2 if there is an; error in format specification. Author:; Tomi Salo; Original code. Modified:; Fons Rademakers; Return -1 in case of truncation; Added test program.; M.Asokan; Return -2 in case of error in format specification; Distinguish between missing precision and a specified precision of 0. To test snprintf and vsnprintf compile this file with:; cc -g -DSNTEST `root-config --cflags` snprintf.c -o snprintf; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c:73,Portab,Portable,73,core/clib/src/snprintf.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c,2,"['Portab', 'config']","['Portable', 'config']"
Modifiability,/* A duplicate configuration option is not an error - the last; 			 * option value will be used. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:15,config,configuration,15,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['configuration']
Modifiability,"/* ARM NEON optimizations are being controlled by the compiler settings,; * typically the target FPU. If the FPU has been set to NEON (-mfpu=neon; * with GCC) then the compiler will define __ARM_NEON__ and we can rely; * unconditionally on NEON instructions not crashing, otherwise we must; * disable use of NEON instructions.; *; * NOTE: at present these optimizations depend on 'ALIGNED_MEMORY', so they; * can only be turned on automatically if that is supported too. If; * PNG_ARM_NEON_OPT is set in CPPFLAGS (to >0) then arm/arm_init.c will fail; * to compile with an appropriate #error if ALIGNED_MEMORY has been turned; * off.; *; * Note that gcc-4.9 defines __ARM_NEON instead of the deprecated; * __ARM_NEON__, so we check both variants.; *; * To disable ARM_NEON optimizations entirely, and skip compiling the; * associated assembler code, pass --enable-arm-neon=no to configure; * or put -DPNG_ARM_NEON_OPT=0 in CPPFLAGS.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:879,config,configure,879,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['config'],['configure']
Modifiability,/* Access the part of a virtual block array starting at start_row */; /* and extending for num_rows rows. writable is true if */; /* caller intends to modify the accessed area. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:77,extend,extending,77,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['extend'],['extending']
Modifiability,/* Access the part of a virtual sample array starting at start_row */; /* and extending for num_rows rows. writable is true if */; /* caller intends to modify the accessed area. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:78,extend,extending,78,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['extend'],['extending']
Modifiability,/* Adapt buffer sizes to frame header instructions */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c:3,Adapt,Adapt,3,builtins/zstd/decompress/zstd_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/decompress/zstd_decompress.c,1,['Adapt'],['Adapt']
Modifiability,/* Adapt scan script for use with reduced block size;; * assume that script has been validated before.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c:3,Adapt,Adapt,3,graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c,1,['Adapt'],['Adapt']
Modifiability,/* Add all headers as HTTP_* variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:29,variab,variables,29,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['variab'],['variables']
Modifiability,"/* Add an additional domain to an already running web server.; *; * Parameters:; * ctx: Context handle of a server started by mg_start.; * options: NULL terminated list of option_name, option_value pairs that; * specify CivetWeb configuration parameters.; *; * Return:; * < 0 in case of an error; * -1 for a parameter error; * -2 invalid options; * -3 initializing SSL failed; * -4 mandatory domain option missing; * -5 duplicate domain; * -6 out of memory; * > 0 index / handle of a new domain; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:229,config,configuration,229,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['config'],['configuration']
Modifiability,/* Add user-specified variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:22,variab,variables,22,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['variab'],['variables']
Modifiability,/* Advance Niederreiter's state variables. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx:32,variab,variables,32,roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,1,['variab'],['variables']
Modifiability,"/* All functions and global variables declared anywhere should use; one of the following attributes:. RPY_EXPORTED: the symbol is exported out of libpypy-c.so. RPY_EXTERN: the symbol is not exported out of libpypy-c.so, but; otherwise works like 'extern' by being available to; other C sources. static: as usual, this means the symbol is local to this C file. Don't use _RPY_HIDDEN directly. For tests involving building a custom; .so, translator/tool/cbuild.py overrides RPY_EXTERN so that it becomes; equal to RPY_EXPORTED. Any function or global variable declared with no attribute at all is; a bug; please report or fix it.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/precommondefs.h:28,variab,variables,28,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/precommondefs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/precommondefs.h,2,['variab'],"['variable', 'variables']"
Modifiability,/* All variables in the struct are protected by mutex. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:7,variab,variables,7,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['variab'],['variables']
Modifiability,"/* Allow only if access_control_allow_headers is; 					 * not NULL and not an empty string. If this; 					 * configuration is set to *, allow everything.; 					 * Otherwise this configuration must be a list; 					 * of allowed HTTP header names. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:109,config,configuration,109,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['config'],['configuration']
Modifiability,/* Allow the variable to be controlled manually for testing */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/BLAKE3/blake3_dispatch.c:13,variab,variable,13,interpreter/llvm-project/llvm/lib/Support/BLAKE3/blake3_dispatch.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/BLAKE3/blake3_dispatch.c,1,['variab'],['variable']
Modifiability,"/* Allow user to override the codeset, as set in the operating system,; with standard language environment variables. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/localcharset.c:107,variab,variables,107,graf2d/win32gdk/gdk/src/iconv/localcharset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/localcharset.c,1,['variab'],['variables']
Modifiability,"/* Append VARIABLE=VALUE\0 string to the buffer, and add a respective; * pointer into the vars array. Assumes env != NULL and fmt != NULL. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:10,VARIAB,VARIABLE,10,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['VARIAB'],['VARIABLE']
Modifiability,/* Application/configuration limits exceeded */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:15,config,configuration,15,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['config'],['configuration']
Modifiability,"/* Arrange the roots into the variables z0, z1, z2, z3 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/complex_quartic.h:30,variab,variables,30,math/mathmore/src/complex_quartic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/complex_quartic.h,1,['variab'],['variables']
Modifiability,"/* Boolean values to be adjusted ""on the fly""; * to configure scanning behaviour.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gscanner.h:52,config,configure,52,graf2d/win32gdk/gdk/src/glib/gscanner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gscanner.h,1,['config'],['configure']
Modifiability,"/* Build the initializer for a C++20 module:; This is arranged to be run only once regardless of how many times the module; might be included transitively. This arranged by using a guard variable. If there are no initializers at all (and also no imported modules) we reduce; this to an empty function (since the Itanium ABI requires that this function; be available to a caller, which might be produced by a different; implementation). First we call any initializers for imported modules.; We then call initializers for the Global Module Fragment (if present); We then call initializers for the current module.; We then call initializers for the Private Module Fragment (if present); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp:187,variab,variable,187,interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp,1,['variab'],['variable']
Modifiability,/* C standard doesn't allow `static const` variable to be init using another `static const` variable */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_internal.h:43,variab,variable,43,builtins/zstd/common/zstd_internal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/zstd_internal.h,2,['variab'],['variable']
Modifiability,/* Called when civetweb initializes SSL library for a domain.; 	 Parameters:; 	 server_domain: authentication_domain from the domain config.; 	 ssl_ctx: SSL_CTX pointer.; 	 user_data: parameter user_data passed when starting the server.; 	 Return value:; 	 0: civetweb will set up the SSL certificate.; 	 1: civetweb assumes the callback already set up the certificate.; 	 -1: initializing ssl fails. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:133,config,config,133,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['config'],['config']
Modifiability,"/* Called when civetweb is about to create or free a SSL_CTX for a domain.; 	Parameters:; 	 server_domain: authentication_domain from the domain config.; 	 ssl_ctx: SSL_CTX pointer. NULL at creation time, Not NULL when; 	mg_context will be freed user_data: parameter user_data passed when starting; 	the server. Return value: 0: civetweb will continue to create the context,; 	just as if the callback would not be present. The value in *ssl_ctx when the; 	function returns is ignored. 1: civetweb will copy the value from *ssl_ctx; 	to the civetweb context and doesn't create its own. -1: initializing ssl; 	fails.*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:145,config,config,145,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['config'],['config']
Modifiability,"/* Check config, if index scripts may have sub-resources */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:9,config,config,9,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['config']
Modifiability,"/* Check for an environment variable JPEGMEM; if found, override the; * default max_memory setting from jpeg_mem_init. Note that the; * surrounding application may again override this value.; * If your system doesn't support getenv(), define NO_GETENV to disable; * this feature.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:28,variab,variable,28,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['variab'],['variable']
Modifiability,"/* Check if the current request has a valid authentication token set.; * A file is used to provide a list of valid user names, realms and; * password hashes. The file can be created and modified using the; * mg_modify_passwords_file API function.; * Parameters:; * conn: Current connection handle.; * realm: Authentication realm. If NULL is supplied, the sever domain; * set in the authentication_domain configuration is used.; * filename: Path and name of a file storing multiple password hashes.; * Return:; * > 0 Valid authentication; * 0 Invalid authentication; * < 0 Error (all values < 0 should be considered as invalid; * authentication, future error codes will have negative; * numbers); * -1 Parameter error; * -2 File not found; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:404,config,configuration,404,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['config'],['configuration']
Modifiability,/* Civetweb configuration parameters */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:12,config,configuration,12,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['configuration']
Modifiability,/* Code set 1 (BIG5 extended) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/big5hkscs1999.h:20,extend,extended,20,graf2d/win32gdk/gdk/src/iconv/big5hkscs1999.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/big5hkscs1999.h,10,['extend'],['extended']
Modifiability,/* Code set 1 (GBK extended) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/gb18030.h:19,extend,extended,19,graf2d/win32gdk/gdk/src/iconv/gb18030.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/gb18030.h,2,['extend'],['extended']
Modifiability,/* Color variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.h:9,variab,variables,9,graf3d/x3d/src/x3d.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.h,1,['variab'],['variables']
Modifiability,"/* Compile time options.; * =====================; * In a multi-arch build the compiler may compile the code several times for the; * same object module, producing different binaries for different architectures.; * When this happens configure-time setting of the target host options cannot be; * done and this interferes with the handling of the ARM NEON optimizations, and; * possibly other similar optimizations. Put additional tests here; in general; * this is needed when the same option can be changed at both compile time and; * run time depending on the target OS (i.e. iOS vs Android.); *; * NOTE: symbol prefixing does not pass $(CFLAGS) to the preprocessor, because; * this is not possible with certain compilers (Oracle SUN OS CC), as a result; * it is necessary to ensure that all extern functions that *might* be used; * regardless of $(CFLAGS) get declared in this file. The test on __ARM_NEON__; * below is one example of this behavior because it is controlled by the; * presence or not of -mfpu=neon on the GCC command line, it is possible to do; * this in $(CC), e.g. ""CC=gcc -mfpu=neon"", but people who build libpng rarely; * do this.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:233,config,configure-time,233,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['config'],['configure-time']
Modifiability,/* Compress configure events */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c:12,config,configure,12,graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkevents-win32.c,1,['config'],['configure']
Modifiability,/* Condition variable for pushers to wait on when the queue is full */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/pool.c:13,variab,variable,13,builtins/zstd/common/pool.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/pool.c,1,['variab'],['variable']
Modifiability,/* Condition variables for poppers to wait on when the queue is empty */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/pool.c:13,variab,variables,13,builtins/zstd/common/pool.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/pool.c,1,['variab'],['variables']
Modifiability,/* Configuration of the maximum number of websocket PINGs that might; * stay unanswered before the connection is considered broken.; * Note: The name of this define may still change (until it is; * defined as a compile parameter in a documentation).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:3,Config,Configuration,3,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['Config'],['Configuration']
Modifiability,/* Configuration types */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:3,Config,Configuration,3,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['Config'],['Configuration']
Modifiability,/* Const alpha < 1 and const color: Simple PDF draw orders; and an extra extended Graphics State for the alpha const */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:73,extend,extended,73,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['extend'],['extended']
Modifiability,"/* Constants for known chunk types.; *; * MAINTAINERS: If you need to add a chunk, define the name here.; * For historical reasons these constants have the form png_<name>; i.e.; * the prefix is lower case. Please use decimal values as the parameters to; * match the ISO PNG specification and to avoid relying on the C locale; * interpretation of character values. Please keep the list sorted.; *; * Notice that PNG_U32 is used to define a 32-bit value for the 4 byte chunk; * type. In fact the specification does not express chunk types this way,; * however using a 32-bit value means that the chunk type can be read from the; * stream using exactly the same code as used for a 32-bit unsigned value and; * can be examined far more efficiently (using one arithmetic compare).; *; * Prior to 1.5.6 the chunk type constants were expressed as C strings. The; * libpng API still uses strings for 'unknown' chunks and a macro,; * PNG_STRING_FROM_CHUNK, allows a string to be generated if required. Notice; * that for portable code numeric values must still be used; the string ""IHDR""; * is not portable and neither is PNG_U32('I', 'H', 'D', 'R').; *; * In 1.7.0 the definitions will be made public in png.h to avoid having to; * duplicate the same definitions in application code.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:1013,portab,portable,1013,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,2,['portab'],['portable']
Modifiability,/* Continue with the next file extenstion from the; 						 * configuration (if there is a next one). */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:61,config,configuration,61,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['configuration']
Modifiability,"/* Convert a two's complement integer SRC to a floating point number,; rounding according to ROUNDING_MODE. ISSIGNED is true if the; integer is signed, in which case it must be sign-extended. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp:182,extend,extended,182,interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,1,['extend'],['extended']
Modifiability,"/* Convert variable name into uppercase, and change - to _ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:11,variab,variable,11,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['variab'],['variable']
Modifiability,/* Copy VARIABLE=VALUE\0 string into the free space */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:8,VARIAB,VARIABLE,8,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['VARIAB'],['VARIABLE']
Modifiability,/* Create or extend the region with the remaining rectangles */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkgc-win32.c:13,extend,extend,13,graf2d/win32gdk/gdk/src/gdk/win32/gdkgc-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkgc-win32.c,1,['extend'],['extend']
Modifiability,"/* Cygwin 2006 does not have locales. nl_langinfo (CODESET) always; returns ""US-ASCII"". As long as this is not fixed, return the suffix; of the locale name from the environment variables (if present) or; the codepage as a number. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/localcharset.c:177,variab,variables,177,graf2d/win32gdk/gdk/src/iconv/localcharset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/localcharset.c,1,['variab'],['variables']
Modifiability,/* D65 XYZ (*not* the D50 adapted values!) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:26,adapt,adapted,26,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['adapt'],['adapted']
Modifiability,"/* DEBUGLEVEL >= 1 */; /* Debug implementation of threading.; * In this implementation we use pointers for mutexes and condition variables.; * This way, if we forget to init/destroy them the program will crash or ASAN; * will report leaks.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/threading.h:129,variab,variables,129,builtins/zstd/common/threading.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/threading.h,1,['variab'],['variables']
Modifiability,/* Deallocate config parameters */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:14,config,config,14,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['config']
Modifiability,"/* Declarations for Floyd-Steinberg dithering.; *; * Errors are accumulated into the array fserrors[], at a resolution of; * 1/16th of a pixel count. The error at a given pixel is propagated; * to its not-yet-processed neighbors using the standard F-S fractions,; *		...	(here)	7/16; *		3/16	5/16	1/16; * We work left-to-right on even rows, right-to-left on odd rows.; *; * We can get away with a single array (holding one row's worth of errors); * by using it to store the current row's errors at pixel columns not yet; * processed, but the next row's errors at columns already processed. We; * need only a few extra variables to hold the errors immediately around the; * current column. (If we are lucky, those variables are in registers, but; * even if not, they're probably cheaper to access than array elements are.); *; * The fserrors[] array is indexed [component#][position].; * We provide (#columns + 2) entries per component; the extra entry at each; * end saves us from special-casing the first and last pixels.; *; * Note: on a wide image, we might not have enough room in a PC's near data; * segment to hold the error array; so it is allocated with alloc_large.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:618,variab,variables,618,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,2,['variab'],['variables']
Modifiability,"/* Declare all variables at begin of the block, to comply; 		 * with old C standards. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:15,variab,variables,15,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['variab'],['variables']
Modifiability,/* Decode variable into destination buffer */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:10,variab,variable,10,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['variab'],['variable']
Modifiability,/* Default: don't configure any linger */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:18,config,configure,18,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['configure']
Modifiability,"/* Determine the current locale's character encoding, and canonicalize it; into one of the canonical names listed in config.charset.; The result must not be freed; it is statically allocated.; If the canonical name cannot be determined, the result is a non-canonical; name. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/localcharset.c:117,config,config,117,graf2d/win32gdk/gdk/src/iconv/localcharset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/localcharset.c,2,['config'],['config']
Modifiability,"/* Divide the coefficient value by qval, ensuring proper rounding.; 	 * Since C does not specify the direction of rounding for negative; 	 * quotients, we have to force the dividend positive for portability.; 	 *; 	 * In most files, at least half of the output values will be zero; 	 * (at default quantization settings, more like three-quarters...); 	 * so we should ensure that this case is fast. On many machines,; 	 * a comparison is enough cheaper than a divide to make a special test; 	 * a win. Since both inputs will be nonnegative, we need only test; 	 * for a < b to discover whether a/b is 0.; 	 * If your machine's division is fast enough, define FAST_DIVIDE.; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcdctmgr.c:195,portab,portability,195,graf2d/asimage/src/libAfterImage/libjpeg/jcdctmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcdctmgr.c,1,['portab'],['portability']
Modifiability,"/* Dummy Variable, falla q = 0 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/rsaaux.cxx:9,Variab,Variable,9,net/auth/src/rsaaux.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/rsaaux.cxx,1,['Variab'],['Variable']
Modifiability,"/* Dummy Variable, falls r = 0 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/rsaaux.cxx:9,Variab,Variable,9,net/auth/src/rsaaux.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/auth/src/rsaaux.cxx,1,['Variab'],['Variable']
Modifiability,/* Extended repeat attributes included in 0.10 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/inc/X11/extensions/render.h:3,Extend,Extended,3,graf2d/x11/inc/X11/extensions/render.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/x11/inc/X11/extensions/render.h,1,['Extend'],['Extended']
Modifiability,"/* Extended sequential, Huffman */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:3,Extend,Extended,3,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['Extend'],['Extended']
Modifiability,"/* Extended sequential, arithmetic */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:3,Extend,Extended,3,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['Extend'],['Extended']
Modifiability,/* FIXME: here we should have an option to split stretched; tris/quads to enhance SIMPLE_SORT */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:74,enhance,enhance,74,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['enhance'],['enhance']
Modifiability,"/* FIXME: this routine currently needs to be called between creation; and the corresponding configure event (because it doesn't get the; root_relative_geometry). This should work with; gtk_window_set_extension_events, but will likely fail in other; cases */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c:92,config,configure,92,graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c,1,['config'],['configure']
Modifiability,"/* Fetch value of certain cookie variable into the destination buffer. Destination buffer is guaranteed to be '\0' - terminated. In case of; failure, dst[0] == '\0'. Note that RFC allows many occurrences of the same; parameter. This function returns only first occurrence. Return:; On success, value length.; On error:; -1 (either ""Cookie:"" header is not present at all or the requested; parameter is not found).; -2 (destination buffer is NULL, zero length or too small to hold the; value). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:33,variab,variable,33,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['variab'],['variable']
Modifiability,"/* Find out if a global variable can be demoted to local scope.; * Currently, this is valid for CUDA shared variables, which have local; * scope and global lifetime. So the conditions to check are :; * 1. Is the global variable in shared address space?; * 2. Does it have local linkage?; * 3. Is the global variable referenced only in one function?; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:24,variab,variable,24,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.cpp,4,['variab'],"['variable', 'variables']"
Modifiability,"/* First check, if there is a CGI interpreter configured for all CGI; 	 * scripts. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:46,config,configured,46,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['configured']
Modifiability,/* First we try to find the envinronment variable inside the already; 	* found ones.; 	*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutils.c:41,variab,variable,41,graf2d/win32gdk/gdk/src/glib/gutils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutils.c,1,['variab'],['variable']
Modifiability,/* Font variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.h:8,variab,variables,8,graf3d/x3d/src/x3d.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.h,1,['variab'],['variables']
Modifiability,"/* For portability to 16 bit machines, do not use values above 15. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c:7,portab,portability,7,core/zip/src/ZDeflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZDeflate.c,1,['portab'],['portability']
Modifiability,"/* For some embedded targets, global variables are not initialized: */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c:37,variab,variables,37,builtins/zlib/trees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/trees.c,3,['variab'],['variables']
Modifiability,"/* Form pixel value + dither, range-limit to 0..MAXJSAMPLE,; 	 * select output value, accumulate into output code for this pixel.; 	 * Range-limiting need not be done explicitly, as we have extended; 	 * the colorindex table to produce the right answers for out-of-range; 	 * inputs. The maximum dither is +- MAXJSAMPLE; this sets the; 	 * required amount of padding.; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:190,extend,extended,190,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,1,['extend'],['extended']
Modifiability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * GScanner: Flexible lexical scanner for general purpose.; * Copyright (C) 1997, 1998 Tim Janik; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */; /* ; * MT safe; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gscanner.c:147,Flexible,Flexible,147,graf2d/win32gdk/gdk/src/glib/gscanner.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gscanner.c,1,['Flexible'],['Flexible']
Modifiability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */; /* This file must not include any other glib header file and must thus; * not refer to variables from glibconfig.h ; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmacros.h:1209,variab,variables,1209,graf2d/win32gdk/gdk/src/glib/gmacros.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmacros.h,1,['variab'],['variables']
Modifiability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /* Originally developed and coded by Makoto Matsumoto and Takuji; * Nishimura. Please mail <matumoto@math.keio.ac.jp>, if you're using; * code from this file in your own programs or libraries.; * Further information on the Mersenne Twister can be found at; * http://www.math.keio.ac.jp/~matumoto/emt.html; * This code was adapted to glib by Sebastian Wilhelmi <wilhelmi@ira.uka.de>.; */; /*; * Modified by the GLib Team and others 1997-2000. See the AUTHORS; * file for a list of people on the GLib Team. See the ChangeLog; * files for a list of changes. These files are distributed with; * GLib at ftp://ftp.gtk.org/pub/gtk/. ; */; /* ; * MT safe; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/grand.c:1198,adapt,adapted,1198,graf2d/win32gdk/gdk/src/glib/grand.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/grand.c,1,['adapt'],['adapted']
Modifiability,"/* GLIB - Library of useful routines for C programming; * Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald; *; * This library is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public; * License as published by the Free Software Foundation; either; * version 2 of the License, or (at your option) any later version.; *; * This library is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with this library; if not, write to the; * Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /* acconfig.h; This file is in the public domain. Descriptive text for the C preprocessor macros that; the distributed Autoconf macros can define.; No software package will use all of them; autoheader copies the ones; your configure.in uses into your configuration header file templates. The entries are in sort -df order: alphabetical, case insensitive,; ignoring punctuation (such as underscores). Although this order; can split up related entries, it makes it easier to check whether; a given entry is in the file. Leave the following blank line there!! Autoheader needs it. */; /* Other stuff */; /* #undef PACKAGE */; /* #undef VERSION */; /* Leave that blank line there!! Autoheader needs it.; If you're adding to this file, keep in mind:; The entries are in sort -df order: alphabetical, case insensitive,; ignoring punctuation (such as underscores). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/acconfig.h:1099,config,configure,1099,graf2d/win32gdk/gdk/src/glib/acconfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/acconfig.h,2,['config'],"['configuration', 'configure']"
Modifiability,/* GScanner: Flexible lexical scanner for general purpose.; */; /* Character sets */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gscanner.h:13,Flexible,Flexible,13,graf2d/win32gdk/gdk/src/glib/gscanner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gscanner.h,1,['Flexible'],['Flexible']
Modifiability,/* G_CAN_INLINE || __G_UTILS_C__ */; /* Glib version.; * we prefix variable declarations so they can; * properly get exported in windows dlls.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutils.h:67,variab,variable,67,graf2d/win32gdk/gdk/src/glib/gutils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutils.h,1,['variab'],['variable']
Modifiability,"/* Get a value of particular form variable. Parameters:; data: pointer to form-uri-encoded buffer. This could be either POST data,; or request_info.query_string.; data_len: length of the encoded data.; var_name: variable name to decode from the buffer; dst: destination buffer for the decoded variable; dst_len: length of the destination buffer. Return:; On success, length of the decoded variable.; On error:; -1 (variable not found).; -2 (destination buffer is NULL, zero length or too small to hold the; decoded variable). Destination buffer is guaranteed to be '\0' - terminated if it is not; NULL or zero length. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:34,variab,variable,34,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,6,['variab'],['variable']
Modifiability,"/* Get a value of particular form variable. Parameters:; data: pointer to form-uri-encoded buffer. This could be either POST data,; or request_info.query_string.; data_len: length of the encoded data.; var_name: variable name to decode from the buffer; dst: destination buffer for the decoded variable; dst_len: length of the destination buffer; occurrence: which occurrence of the variable, 0 is the 1st, 1 the 2nd, ...; this makes it possible to parse a query like; b=x&a=y&a=z which will have occurrence values b:0, a:0 and a:1. Return:; On success, length of the decoded variable.; On error:; -1 (variable not found).; -2 (destination buffer is NULL, zero length or too small to hold the; decoded variable). Destination buffer is guaranteed to be '\0' - terminated if it is not; NULL or zero length. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:34,variab,variable,34,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,7,['variab'],['variable']
Modifiability,/* Get the codeset for the current locale */; /* gchar * g_get_codeset (void); */; /* return the environment string for the variable. The returned memory; * must not be freed. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutils.h:124,variab,variable,124,graf2d/win32gdk/gdk/src/glib/gutils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutils.h,1,['variab'],['variable']
Modifiability,/* Get the memory and modify the state variables appropriately.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.c:39,variab,variables,39,graf2d/win32gdk/gdk/src/glib/gmem.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.c,1,['variab'],['variables']
Modifiability,"/* Get the value of particular configuration parameter.; The value returned is read-only. Civetweb does not allow changing; configuration at run time.; If given parameter name is not valid, NULL is returned. For valid; names, return value is guaranteed to be non-NULL. If parameter is not; set, zero-length string is returned. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:31,config,configuration,31,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,2,['config'],['configuration']
Modifiability,/* Global variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c:10,variab,variables,10,graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c,2,['variab'],['variables']
Modifiability,/* HAVE_WINTAB */; /* Local variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c:28,variab,variables,28,graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkinput-win32.c,1,['variab'],['variables']
Modifiability,"/* If HAVE_CONFIG_H is defined during the build then the build system must; * provide an appropriate ""config.h"" file on the include path. The header file; * must provide definitions as required below (search for ""HAVE_CONFIG_H"");; * see configure.ac for more details of the requirements. The macro; * ""PNG_NO_CONFIG_H"" is provided for maintainers to test for dependencies on; * 'configure'; define this macro to prevent the configure build including the; * configure generated config.h. Libpng is expected to compile without *any*; * special build system support on a reasonably ANSI-C compliant system.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:102,config,config,102,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,6,['config'],"['config', 'configure']"
Modifiability,"/* If a Lua background script has been configured, start it. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:39,config,configured,39,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['configured']
Modifiability,"/* If a certificate chain is configured, use it. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:29,config,configured,29,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['configured']
Modifiability,/* If and only if all arguments are normal do we need to do an; extended-precision calculation. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp:64,extend,extended-precision,64,interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,1,['extend'],['extended-precision']
Modifiability,"/* If control reaches this point, png_longjmp() must not return. The only; * choice is to terminate the whole process (or maybe the thread); to do; * this the ANSI-C abort() function is used unless a different method is; * implemented by overriding the default configuration setting for; * PNG_ABORT().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:261,config,configuration,261,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['config'],['configuration']
Modifiability,"/* If there is a configured interpreter, check for additional arguments; 		 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:17,config,configured,17,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['configured']
Modifiability,"/* If there is a full cache-control option configured,0 use it */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:43,config,configured,43,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['configured']
Modifiability,/* If these chunks are being reset to the default then no more memory is; * required because add_one_chunk above doesn't extend the list if the 'keep'; * parameter is the default.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c:121,extend,extend,121,graf2d/asimage/src/libAfterImage/libpng/pngset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngset.c,1,['extend'],['extend']
Modifiability,"/* In QUADPACK the variable table->nres is incremented at the top of; qelg, so it increases on every call. This leads to the array; res3la being accessed when its elements are still undefined, so I; have moved the update to this point so that its value more; useful. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:19,variab,variable,19,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['variab'],['variable']
Modifiability,"/* In case of checking C code, or when the corresponding headers are not; * included, we might end up query the identifier table every time when this; * function is called instead of early returning it. To avoid this, a bool; * variable (IdentifierInfoInitialized) is used and the function will be run; * only once. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/BlockInCriticalSectionChecker.cpp:228,variab,variable,228,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/BlockInCriticalSectionChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/BlockInCriticalSectionChecker.cpp,1,['variab'],['variable']
Modifiability,"/* In selecting the actual DCT scaling for each component, we try to; * scale down the chroma components via DCT scaling rather than downsampling.; * This saves time if the downsampler gets to use 1:1 scaling.; * Note this code adapts subsampling ratios which are powers of 2.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c:228,adapt,adapts,228,graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcmaster.c,1,['adapt'],['adapts']
Modifiability,"/* In selecting the actual DCT scaling for each component, we try to; * scale up the chroma components via IDCT scaling rather than upsampling.; * This saves time if the upsampler gets to use 1:1 scaling.; * Note this code adapts subsampling ratios which are powers of 2.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c:223,adapt,adapts,223,graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmaster.c,1,['adapt'],['adapts']
Modifiability,/* In the cases where we are behind (i.e. right of) a potential boolean optimization \; this tree variable reading may have not been executed with instance==0 which would \; result in the branch being potentially not read in. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:98,variab,variable,98,tree/treeplayer/src/TTreeFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx,1,['variab'],['variable']
Modifiability,/* Init variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:8,variab,variables,8,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['variab'],['variables']
Modifiability,/* Initialization method to Captures the relevant environment variables.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libear/ear.c:62,variab,variables,62,interpreter/llvm-project/clang/tools/scan-build-py/lib/libear/ear.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/scan-build-py/lib/libear/ear.c,1,['variab'],['variables']
Modifiability,/* Initialize arithmetic decoding variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c:34,variab,variables,34,graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,1,['variab'],['variables']
Modifiability,/* Initialize arithmetic encoding variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c:34,variab,variables,34,graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,1,['variab'],['variables']
Modifiability,/* Initialize bitread state variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:28,variab,variables,28,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,1,['variab'],['variables']
Modifiability,/* Initialize private state variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:28,variab,variables,28,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,1,['variab'],['variables']
Modifiability,"/* Initialize the default malloc descriptor if this is the first time; a request has been made to use the default sbrk'd region. Since no alignment guarantees are made about the initial value returned; by sbrk, test the initial value and (if necessary) sbrk enough additional; memory to start off with alignment to BLOCKSIZE. We actually only need; it aligned to an alignment suitable for any object, so this is overkill.; But at most it wastes just part of one BLOCKSIZE chunk of memory and; minimizes portability problems by avoiding us having to figure out; what the actual minimal alignment is. The rest of the malloc code; avoids this as well, by always aligning to the minimum of the requested; size rounded up to a power of two, or to BLOCKSIZE. Note that we are going to use some memory starting at this initial sbrk; address for the sbrk region malloc descriptor, which is a struct, so the; base address must be suitably aligned. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/sbrksup.c:503,portab,portability,503,core/clib/src/sbrksup.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/sbrksup.c,1,['portab'],['portability']
Modifiability,/* Initialize the loop variables. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:23,variab,variables,23,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,1,['variab'],['variables']
Modifiability,/* Initialized data */; // const typename MatrixRep::value_type* A = rhs.Array();; //typename MatrixRep::value_type* a = rhs.Array();; /* Local variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/Dfact.h:144,variab,variables,144,math/smatrix/inc/Math/Dfact.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/Dfact.h,1,['variab'],['variables']
Modifiability,"/* Insert an artificial ""read"" reference to the variable written; above, to ensure the compiler does not schedule the computation; of the value after the manipulation of the FPSCR, below.; This can be removed if and when GCC PR102783 is fixed.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/smmintrin.h:48,variab,variable,48,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/smmintrin.h,4,['variab'],['variable']
Modifiability,"/* Insert an artificial ""read/write"" reference to the variable; read below, to ensure the compiler does not schedule; a read/use of the variable before the FPSCR is modified, above.; This can be removed if and when GCC PR102783 is fixed.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/smmintrin.h:54,variab,variable,54,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/smmintrin.h,8,['variab'],['variable']
Modifiability,/* Library configuration: these options cannot be changed after; * the library has been built.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:11,config,configuration,11,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['config'],['configuration']
Modifiability,"/* Likewise */; /* We would like to #include any system header file which could define; iconv_t, 1. in order to eliminate the risk that the user gets compilation; errors because some other system header file includes /usr/include/iconv.h; which defines iconv_t or declares iconv after this file, 2. when compiling; for LIBICONV_PLUG, we need the proper iconv_t type in order to produce; binary compatible code.; But gcc's #include_next is not portable. Thus, once libiconv's iconv.h; has been installed in /usr/local/include, there is no way any more to; include the original /usr/include/iconv.h. We simply have to get away; without it.; Ad 1. The risk that a system header file does; #include ""iconv.h"" or #include_next ""iconv.h""; is small. They all do #include <iconv.h>.; Ad 2. The iconv_t type is a pointer type in all cases I have seen. (It; has to be a scalar type because (iconv_t)(-1) is a possible return value; from iconv_open().) */; /* Define iconv_t ourselves. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iconv.h:443,portab,portable,443,graf2d/win32gdk/gdk/src/iconv/iconv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/iconv.h,1,['portab'],['portable']
Modifiability,/* Local variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c:9,variab,variables,9,builtins/zstd/dictBuilder/cover.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c,58,['variab'],['variables']
Modifiability,"/* Local variables */; // integer inta, intb, zcode;; /* -- LAPACK auxiliary routine (version 2.0) -- */; /* Univ. of Tennessee, Univ. of California Berkeley, NAG Ltd., */; /* Courant Institute, Argonne National Lab, and Rice University */; /* January 31, 1994 */; /* .. Scalar Arguments .. */; /* .. */; /* Purpose */; /* ======= */; /* LSAME returns .TRUE. if CA is the same letter as CB regardless of */; /* case. */; /* Arguments */; /* ========= */; /* CA (input) CHARACTER*1 */; /* CB (input) CHARACTER*1 */; /* CA and CB specify the single characters to be compared. */; /* ===================================================================== */; /* .. Intrinsic Functions .. */; /* .. */; /* .. Local Scalars .. */; /* .. */; /* .. Executable Statements .. */; /* Test if the characters are equal */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/mnlsame.cxx:9,variab,variables,9,math/minuit2/src/mnlsame.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/src/mnlsame.cxx,1,['variab'],['variables']
Modifiability,/* Local variables: */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c:9,variab,variables,9,graf2d/asimage/src/libAfterImage/libpng/pngread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngread.c,2,['variab'],['variables']
Modifiability,"/* Look for a linear combination with a single variable, and at least; one multiplication.; Reject anything that applies to the variable: an explicit cast,; conditional expression, an operation that could reduce the range; of the result, or anything too complicated :-). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocOverflowSecurityChecker.cpp:47,variab,variable,47,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocOverflowSecurityChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocOverflowSecurityChecker.cpp,2,['variab'],['variable']
Modifiability,/* MSDN: ... enhances system performance. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkwindow-win32.c:13,enhance,enhances,13,graf2d/win32gdk/gdk/src/gdk/win32/gdkwindow-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/win32/gdkwindow-win32.c,1,['enhance'],['enhances']
Modifiability,/* Machine specific configuration. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:20,config,configuration,20,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['config'],['configuration']
Modifiability,"/* Macros for inflate() bit peeking and grabbing.; The usage is:. NEEDBITS(j); x = b & mask[j];; DUMPBITS(j). where NEEDBITS makes sure that b has at least j bits in it, and; DUMPBITS removes the bits from b. The macros use the variable k; for the number of bits in b. Normally, b and k are register; variables for speed, and are initialized at the begining of a; routine that uses these macros from a global bit buffer and count. In order to not ask for more bits than there are in the compressed; stream, the Huffman tables are constructed to only ask for just; enough bits to make up the end-of-block code (value 256). Then no; bytes need to be ""returned"" to the buffer at the end of the last; block. See the huft_build() routine.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:228,variab,variable,228,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,2,['variab'],"['variable', 'variables']"
Modifiability,/* Macros to declare and load/save bitread local variables. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:49,variab,variables,49,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,2,['variab'],['variables']
Modifiability,/* Make sure to avoid that in the master control logic!; * We are fully adaptive here and need no extra; * statistics gathering pass!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c:72,adapt,adaptive,72,graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,1,['adapt'],['adaptive']
Modifiability,/* Mark handles that should not be inherited. See; 	 * https://msdn.microsoft.com/en-us/library/windows/desktop/ms682499%28v=vs.85%29.aspx; 	 */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:35,inherit,inherited,35,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['inherit'],['inherited']
Modifiability,/* Misc. containers needed for meta-data rewrite. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp:41,rewrite,rewrite,41,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,2,['rewrite'],['rewrite']
Modifiability,"/* Multiply a DCTELEM variable by an INT32 constant, and immediately; * descale to yield a DCTELEM result.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctfst.c:22,variab,variable,22,graf2d/asimage/src/libAfterImage/libjpeg/jfdctfst.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctfst.c,2,['variab'],['variable']
Modifiability,"/* Multiply an INT32 variable by an INT32 constant to yield an INT32 result.; * For 8-bit samples with the recommended scaling, all the variable; * and constant values involved are no more than 16 bits wide, so a; * 16x16->32 bit multiply can be used instead of a full 32x32 multiply.; * For 12-bit samples, a full 32-bit multiplication will be needed.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c:21,variab,variable,21,graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,4,['variab'],['variable']
Modifiability,"/* Multiply an INT32 variable by an INT32 constant to yield an INT32 result.; * This macro is used only when the two inputs will actually be no more than; * 16 bits wide, so that a 16x16->32 bit multiply can be used instead of a; * full 32x32 multiply. This provides a useful speedup on many machines.; * Unfortunately there is no way to specify a 16x16->32 multiply portably; * in C, but some C compilers will do the right thing if you provide the; * correct combination of casts.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdct.h:21,variab,variable,21,graf2d/asimage/src/libAfterImage/libjpeg/jdct.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdct.h,2,"['portab', 'variab']","['portably', 'variable']"
Modifiability,"/* N.B. Create a separate function instead of using (call function, function; value here) because in order to create the variables needed for the input; arg.'s which may be const.'s one has to do the creation within {}, but these; can never be placed within ()'s. Therefore one must create wrapper functions.; gcc, on the other hand may be able to avoid the wrapper functions. */; /* Prototypes are needed to correctly handle the value returned correctly. N.B.; Can only have prototype arg.'s with difficulty, a la G... table since FORTRAN; functions returning strings have extra arg.'s. Don't bother, since this only; causes a compiler warning to come up when one uses FCALLSCFUNn and CCALLSFFUNn; for the same function in the same source code. Something done by the experts in; debugging only.*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:121,variab,variables,121,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['variab'],['variables']
Modifiability,"/* NOTE: Uncomment the following #define if you want to use the; * given formula for calculating the AC conditioning parameter Kx; * for spectral selection progressive coding in section G.1.3.2; * of the spec (Kx = Kmin + SRL (8 + Se - Kmin) 4).; * Although the spec and P&M authors claim that this ""has proven; * to give good results for 8 bit precision samples"", I'm not; * convinced yet that this is really beneficial.; * Early tests gave only very marginal compression enhancements; * (a few - around 5 or so - bytes even for very large files),; * which would turn out rather negative if we'd suppress the; * DAC (Define Arithmetic Conditioning) marker segments for; * the default parameters in the future.; * Note that currently the marker writing module emits 12-byte; * DAC segments for a full-component scan in a color image.; * This is not worth worrying about IMHO. However, since the; * spec defines the default values to be used if the tables; * are omitted (unlike Huffman tables, which are required; * anyway), one might optimize this behaviour in the future,; * and then it would be disadvantageous to use custom tables if; * they don't provide sufficient gain to exceed the DAC size.; *; * On the other hand, I'd consider it as a reasonable result; * that the conditioning has no significant influence on the; * compression performance. This means that the basic; * statistical model is already rather stable.; *; * Thus, at the moment, we use the default conditioning values; * anyway, and do not use the custom formula.; *; #define CALCULATE_SPECTRAL_CONDITIONING; */; /* IRIGHT_SHIFT is like RIGHT_SHIFT, but works on int rather than INT32.; * We assume that int right shift is unsigned if INT32 right shift is,; * which should be safe.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c:473,enhance,enhancements,473,graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,1,['enhance'],['enhancements']
Modifiability,/* NTRAIN: Nb of events used during the learning */; /* NTEST: Nb of events used for the test */; /* TIN: Input variables */; /* TOUT: type of the event */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:112,variab,variables,112,tmva/tmva/src/MethodCFMlpANN_Utils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN_Utils.cxx,2,['variab'],['variables']
Modifiability,"/* New APIs for enhanced option and error handling.; These mg_*2 API functions have the same purpose as their original versions,; but provide additional options and/or provide improved error diagnostics. Note: Experimental interfaces may change; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:16,enhance,enhanced,16,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['enhance'],['enhanced']
Modifiability,"/* Niederreiter (page 56, after equation (7), defines two; * variables Q and U. We do not need Q explicitly, but we; * do need U.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx:61,variab,variables,61,roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,1,['variab'],['variables']
Modifiability,"/* Note: this enum and the behavior it controls are effectively internal; * implementation details of the compressor. They are expected to continue; * to evolve and should be considered only in the context of extremely; * advanced performance tuning.; *; * Zstd currently supports the use of a CDict in three ways:; *; * - The contents of the CDict can be copied into the working context. This; * means that the compression can search both the dictionary and input; * while operating on a single set of internal tables. This makes; * the compression faster per-byte of input. However, the initial copy of; * the CDict's tables incurs a fixed cost at the beginning of the; * compression. For small compressions (< 8 KB), that copy can dominate; * the cost of the compression.; *; * - The CDict's tables can be used in-place. In this model, compression is; * slower per input byte, because the compressor has to search two sets of; * tables. However, this model incurs no start-up cost (as long as the; * working context's tables can be reused). For small inputs, this can be; * faster than copying the CDict's tables.; *; * - The CDict's tables are not used at all, and instead we use the working; * context alone to reload the dictionary and use params based on the source; * size. See ZSTD_compress_insertDictionary() and ZSTD_compress_usingDict().; * This method is effective when the dictionary sizes are very small relative; * to the input size, and the input size is fairly large to begin with.; *; * Zstd has a simple internal heuristic that selects which strategy to use; * at the beginning of a compression. However, if experimentation shows that; * Zstd is making poor choices, it is possible to override that choice with; * this enum.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:154,evolve,evolve,154,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['evolve'],['evolve']
Modifiability,"/* Now read the tag table; a variable size buffer is; * needed at this point, allocate one for the whole; * profile. The header check has already validated; * that none of this stuff will overflow.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:29,variab,variable,29,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['variab'],['variable']
Modifiability,"/* Now the heart of the code. We loop through the UTF-8 string, and; * whenever we hit an offending character, we form fallback, convert; * the fallback to the target codeset, and then go back to; * converting the original string after finishing with the fallback.; *; * The variables save_p and save_inbytes store the input state; * for the original string while we are converting the fallback; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c:275,variab,variables,275,graf2d/win32gdk/gdk/src/glib/gconvert.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gconvert.c,1,['variab'],['variables']
Modifiability,"/* Now we spread those positions across the table.; * The benefit of doing it in two stages is that we avoid the the; * variable size inner loop, which caused lots of branch misses.; * Now we can run through all the positions without any branch misses.; * We unroll the loop twice, since that is what emperically worked best.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse_decompress.c:120,variab,variable,120,builtins/zstd/common/fse_decompress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse_decompress.c,2,['variab'],['variable']
Modifiability,/* Number of variables available in var */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:13,variab,variables,13,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['variab'],['variables']
Modifiability,/* Number of variables stored in var */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:13,variab,variables,13,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['variab'],['variables']
Modifiability,"/* On Windows NT, it is relatively typical that environment variables; 	* contain references to other environment variables. Handle that by; 	* calling ExpandEnvironmentStrings.; 	*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutils.c:60,variab,variables,60,graf2d/win32gdk/gdk/src/glib/gutils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutils.c,2,['variab'],['variables']
Modifiability,"/* On Windows, variables that may be in a DLL must be marked specially. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/config.h:15,variab,variables,15,graf2d/win32gdk/gdk/src/iconv/config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/config.h,1,['variab'],['variables']
Modifiability,/* Only check for SSE if the build configuration has been modified to; * enable SSE optimizations. This means that these optimizations will; * be off by default. See contrib/intel for more details.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:35,config,configuration,35,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['config'],['configuration']
Modifiability,"/* Opaque types. */; /**; * LLVM uses a polymorphic type hierarchy which C cannot represent, therefore; * parameters must be passed as base types. Despite the declared types, most; * of the functions provided operate only on branches of the type hierarchy.; * The declared parameter names are descriptive and specify which type is; * required. Additionally, each type hierarchy is documented along with the; * functions that operate upon it. For more detail, refer to LLVM's C++ code.; * If in doubt, refer to Core.cpp, which performs parameter downcasts in the; * form unwrap<RequiredType>(Param).; */; /**; * Used to pass regions of memory through LLVM interfaces.; *; * @see llvm::MemoryBuffer; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Types.h:40,polymorphi,polymorphic,40,interpreter/llvm-project/llvm/include/llvm-c/Types.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Types.h,1,['polymorphi'],['polymorphic']
Modifiability,"/* Other defines specific to compilers can go here. Try to keep; * them inside an appropriate ifdef/endif pair for portability.; */; /* C allows up-casts from (void*) to any pointer and (const void*) to any; * pointer to a const object. C++ regards this as a type error and requires an; * explicit, static, cast and provides the static_cast<> rune to ensure that; * const is not cast away.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:115,portab,portability,115,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['portab'],['portability']
Modifiability,"/* PNG_OUT_OF_RANGE returns true if value is outside the range; * ideal-delta..ideal+delta. Each argument is evaluated twice.; * ""ideal"" and ""delta"" should be constants, normally simple; * integers, ""value"" a variable. Added to libpng-1.2.6 JB; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:209,variab,variable,209,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['variab'],['variable']
Modifiability,"/* Pass 1: process rows. */; /* Note results are scaled up by sqrt(8) compared to a true DCT; */; /* furthermore, we scale the results by 2**PASS1_BITS. */; /* We scale the results further by 2 as part of output adaption */; /* scaling for different DCT size. */; /* 3-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/6). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c:212,adapt,adaption,212,graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,1,['adapt'],['adaption']
Modifiability,"/* Pass 1: process rows. */; /* Note results are scaled up by sqrt(8) compared to a true DCT; */; /* furthermore, we scale the results by 2**PASS1_BITS. */; /* We scale the results further by 2 as part of output adaption */; /* scaling for different DCT size. */; /* 6-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/12). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c:212,adapt,adaption,212,graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,1,['adapt'],['adaption']
Modifiability,"/* Pass 1: process rows. */; /* Note results are scaled up by sqrt(8) compared to a true DCT; */; /* furthermore, we scale the results by 2**PASS1_BITS. */; /* We scale the results further by 2 as part of output adaption */; /* scaling for different DCT size. */; /* cK represents sqrt(2) * cos(K*pi/10). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c:212,adapt,adaption,212,graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,1,['adapt'],['adaption']
Modifiability,"/* Pass 1: process rows. */; /* Note results are scaled up by sqrt(8) compared to a true DCT; */; /* furthermore, we scale the results by 2**PASS1_BITS. */; /* We scale the results further by 2**2 as part of output adaption */; /* scaling for different DCT size. */; /* cK represents sqrt(2) * cos(K*pi/6). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c:215,adapt,adaption,215,graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,1,['adapt'],['adaption']
Modifiability,/* Pass 1: process rows. */; /* Note results are scaled up by sqrt(8) compared to a true DCT; */; /* we scale the results further by 2 as part of output adaption */; /* scaling for different DCT size. */; /* cK represents sqrt(2) * cos(K*pi/18). */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c:153,adapt,adaption,153,graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,1,['adapt'],['adaption']
Modifiability,/* Pass 1: process rows. */; /* Note results are scaled up by sqrt(8) compared to a true DCT; */; /* we scale the results further by 2 as part of output adaption */; /* scaling for different DCT size. */; /* cK represents sqrt(2) * cos(K*pi/20). */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c:153,adapt,adaption,153,graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,1,['adapt'],['adaption']
Modifiability,/* Pass 1: process rows. */; /* Note results are scaled up by sqrt(8) compared to a true DCT; */; /* we scale the results further by 2 as part of output adaption */; /* scaling for different DCT size. */; /* cK represents sqrt(2) * cos(K*pi/22). */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c:153,adapt,adaption,153,graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,1,['adapt'],['adaption']
Modifiability,/* Pick up the definition of 'restrict' from config.h if it was read: */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:45,config,config,45,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['config'],['config']
Modifiability,/* Point p to variable value */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:14,variab,variable,14,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['variab'],['variable']
Modifiability,/* Portable endian checks and conversions; *; * glibconfig.h defines G_BYTE_ORDER which expands to one of; * the below macros.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gtypes.h:3,Portab,Portable,3,graf2d/win32gdk/gdk/src/glib/gtypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gtypes.h,2,['Portab'],['Portable']
Modifiability,/* Portable scalar version */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:3,Portab,Portable,3,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['Portab'],['Portable']
Modifiability,/* Portable signed long integer 8 bytes */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c:3,Portab,Portable,3,core/clib/src/snprintf.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c,2,['Portab'],['Portable']
Modifiability,/* Portable unsigned long integer 8 bytes */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c:3,Portab,Portable,3,core/clib/src/snprintf.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/snprintf.c,2,['Portab'],['Portable']
Modifiability,/* Portable versions of host-network order stuff; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gtypes.h:3,Portab,Portable,3,graf2d/win32gdk/gdk/src/glib/gtypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gtypes.h,2,['Portab'],['Portable']
Modifiability,/* Position variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.h:12,variab,variables,12,graf3d/x3d/src/x3d.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.h,1,['variab'],['variables']
Modifiability,"/* Preset additional state variables for context mode.; * These aren't used in non-context mode, so we needn't test which mode.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c:27,variab,variables,27,graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcprepct.c,1,['variab'],['variables']
Modifiability,"/* Print error message to the opened error log stream.; This utilizes the provided logging configuration.; conn: connection (not used for sending data, but to get perameters); fmt: format string without the line return; ...: variable argument list; Example:; mg_cry(conn,""i like %s"", ""logging""); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:91,config,configuration,91,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,2,"['config', 'variab']","['configuration', 'variable']"
Modifiability,/* Private variable declarations; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdk.c:11,variab,variable,11,graf2d/win32gdk/gdk/src/gdk/gdk.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdk.c,3,['variab'],['variable']
Modifiability,/* Profile is unsigned or more checks have been configured in. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:48,config,configured,48,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['config'],['configured']
Modifiability,"/* Provide simple macro statement wrappers (adapted from Perl):; * G_STMT_START { statements; } G_STMT_END;; * can be used as a single statement, as in; * if (x) G_STMT_START { ... } G_STMT_END; else ...; *; * For gcc we will wrap the statements within `({' and `})' braces.; * For SunOS they will be wrapped within `if (1)' and `else (void) 0',; * and otherwise within `do' and `while (0)'.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmacros.h:44,adapt,adapted,44,graf2d/win32gdk/gdk/src/glib/gmacros.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmacros.h,1,['adapt'],['adapted']
Modifiability,"/* Read a byte into variable V.; * If must suspend, take the specified action (typically ""return FALSE"").; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:20,variab,variable,20,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['variab'],['variable']
Modifiability,/* Read the server config to check how long a file may be cached.; 	 * The configuration is in seconds. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:19,config,config,19,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['config'],"['config', 'configuration']"
Modifiability,/* Red segments */; /* Shuffle the bits around so we get the right configuration; for the clipping function */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:67,config,configuration,67,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,2,['config'],['configuration']
Modifiability,"/* Relabel R/G/B as components 0/1/2, respecting the RGB ordering defined; * in jmorecfg.h. As the code stands, it will do the right thing for R,G,B; * and B,G,R orders. If you define some other weird order in jmorecfg.h,; * you'll get compile errors until you extend this logic. In that case; * you'll probably want to tweak the histogram sizes too.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:261,extend,extend,261,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['extend'],['extend']
Modifiability,"/* Render a 24-bit RGB image in buf into the GdkImage, without dithering.; This assumes native byte ordering - what should really be done is to; check whether static_image->byte_order is consistent with the _ENDIAN; config flag, and if not, use a different function. This one is even faster than the one below - its inner loop loads 3; words (i.e. 4 24-bit pixels), does a lot of shifting and masking,; then writes 2 words. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkrgb.c:216,config,config,216,graf2d/win32gdk/gdk/src/gdk/gdkrgb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkrgb.c,1,['config'],['config']
Modifiability,"/* Render a 24-bit RGB image in buf into the GdkImage, without dithering.; This assumes native byte ordering - what should really be done is to; check whether static_image->byte_order is consistent with the _ENDIAN; config flag, and if not, use a different function. This routine is faster than the one included with Gtk 1.0 for a number; of reasons:. 1. Shifting instead of lookup tables (less memory traffic). 2. Much less register pressure, especially because shifts are; in the code. 3. A memcpy is avoided (i.e. the transfer function). 4. On big-endian architectures, byte swapping is avoided. That said, it wouldn't be hard to make it even faster - just make an; inner loop that reads 3 words (i.e. 4 24-bit pixels), does a lot of; shifting and masking, then writes 2 words.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkrgb.c:216,config,config,216,graf2d/win32gdk/gdk/src/gdk/gdkrgb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdkrgb.c,1,['config'],['config']
Modifiability,/* Reset arithmetic decoding variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c:29,variab,variables,29,graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,1,['variab'],['variables']
Modifiability,/* Reset arithmetic encoding variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c:29,variab,variables,29,graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,1,['variab'],['variables']
Modifiability,/* Reset error state variables at start of a new image */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:21,variab,variables,21,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['variab'],['variables']
Modifiability,/* Reset the CRC variable */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:17,variab,variable,17,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['variab'],['variable']
Modifiability,/* Reset the CRC variable to 32 bits of 1's. Care must be taken; * in case CRC is > 32 bits to leave the top bits 0.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:17,variab,variable,17,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['variab'],['variable']
Modifiability,"/* Return a directory to be used to store temporary files. This is the; * value of the TMPDIR, TMP or TEMP environment variables (they are; * checked in that order). If none of those exist, use P_tmpdir from; * stdio.h. If that isn't defined, return ""/tmp"" on POSIXly systems,; * and C:\ on Windows.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutils.c:119,variab,variables,119,graf2d/win32gdk/gdk/src/glib/gutils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutils.c,1,['variab'],['variables']
Modifiability,/* Return a reference to the layers. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h:29,layers,layers,29,tmva/tmva/inc/TMVA/DNN/DeepNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h,1,['layers'],['layers']
Modifiability,"/* Return array of struct mg_option, representing all valid configuration; options of civetweb.c.; The array is terminated by a NULL name option. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:60,config,configuration,60,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['config'],['configuration']
Modifiability,"/* Return the amount of memory in 'size' required to compress this image.; * The png_image structure 'image' must be filled in as in the above; * function and must not be changed before the actual write call, the buffer; * and all other parameters must also be identical to that in the final; * write call. The 'size' variable need not be initialized.; *; * NOTE: the macro returns true/false, if false is returned 'size' will be; * set to zero and the write failed and probably will fail if tried again.; */; /* You can pre-allocate the buffer by making sure it is of sufficient size; * regardless of the amount of compression achieved. The buffer size will; * always be bigger than the original image and it will never be filled. The; * following macros are provided to assist in allocating the buffer.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:318,variab,variable,318,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['variab'],['variable']
Modifiability,"/* Return the home directory of the user. If there is a HOME; * environment variable, its value is returned, otherwise use some; * system-dependent way of finding it out. If no home directory can be; * deduced, return NULL.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutils.c:76,variab,variable,76,graf2d/win32gdk/gdk/src/glib/gutils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutils.c,1,['variab'],['variable']
Modifiability,"/* Round to nearest integer.; 	 * Since C does not specify the direction of rounding for negative; 	 * quotients, we have to force the dividend positive for portability.; 	 * The maximum coefficient size is +-16K (for 12-bit data), so this; 	 * code should work for either 16-bit or 32-bit ints.; 	 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcdctmgr.c:157,portab,portability,157,graf2d/asimage/src/libAfterImage/libjpeg/jcdctmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcdctmgr.c,1,['portab'],['portability']
Modifiability,/* SSE4 Packed Integer Sign-Extension. */; /// Sign-extends each of the lower eight 8-bit integer elements of a; /// 128-bit vector of [16 x i8] to 16-bit values and returns them in a; /// 128-bit vector of [8 x i16]. The upper eight elements of the input vector; /// are unused.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VPMOVSXBW / PMOVSXBW </c> instruction.; ///; /// \param __V; /// A 128-bit vector of [16 x i8]. The lower eight 8-bit elements are; /// sign-extended to 16-bit values.; /// \returns A 128-bit vector of [8 x i16] containing the sign-extended values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:52,extend,extends,52,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,3,['extend'],"['extended', 'extends']"
Modifiability,/* SSE4 Packed Integer Zero-Extension. */; /// Zero-extends each of the lower eight 8-bit integer elements of a; /// 128-bit vector of [16 x i8] to 16-bit values and returns them in a; /// 128-bit vector of [8 x i16]. The upper eight elements of the input vector; /// are unused.; ///; /// \headerfile <x86intrin.h>; ///; /// This intrinsic corresponds to the <c> VPMOVZXBW / PMOVZXBW </c> instruction.; ///; /// \param __V; /// A 128-bit vector of [16 x i8]. The lower eight 8-bit elements are; /// zero-extended to 16-bit values.; /// \returns A 128-bit vector of [8 x i16] containing the zero-extended values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:52,extend,extends,52,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,3,['extend'],"['extended', 'extends']"
Modifiability,/* Same except both inputs are variables. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdct.h:31,variab,variables,31,graf2d/asimage/src/libAfterImage/libjpeg/jdct.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdct.h,1,['variab'],['variables']
Modifiability,/* Save parameters as local variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c:28,variab,variables,28,builtins/zstd/dictBuilder/cover.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c,2,['variab'],['variables']
Modifiability,"/* Send HTTP digest access authentication request.; * Browsers will send a user name and password in their next request, showing; * an authentication dialog if the password is not stored.; * Parameters:; * conn: Current connection handle.; * realm: Authentication realm. If NULL is supplied, the sever domain; * set in the authentication_domain configuration is used.; * Return:; * < 0 Error; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:345,config,configuration,345,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['config'],['configuration']
Modifiability,/* Set default value if needed. Take the config value from; 	 * ctx as a default value. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:41,config,config,41,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['config']
Modifiability,/* Set dir and shell from environment variables. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:38,variab,variables,38,core/winnt/src/TWinNTSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx,1,['variab'],['variables']
Modifiability,/* Set internal variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:16,variab,variables,16,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['variab'],['variables']
Modifiability,/* Set linger option according to configuration */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:34,config,configuration,34,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['configuration']
Modifiability,"/* Set of base64 characters, extended:; * A-Z a-z 0-9 + / -; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/utf7.h:29,extend,extended,29,graf2d/win32gdk/gdk/src/iconv/utf7.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/utf7.h,1,['extend'],['extended']
Modifiability,/* Set the default configuration parameters:; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c:19,config,configuration,19,builtins/zlib/deflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.c,4,['config'],['configuration']
Modifiability,"/* Set up portability */; /* #include ""tailor.h"" */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZIP.h:10,portab,portability,10,core/zip/src/ZIP.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZIP.h,1,['portab'],['portability']
Modifiability,/* Shuffle the bits around so we get the right configuration; for the clipping function */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:47,config,configuration,47,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,1,['config'],['configuration']
Modifiability,"/* Size of match buffer for literals/lengths. There are 4 reasons for; * limiting lit_bufsize to 64K:; * - frequencies can be kept in 16 bit counters; * - if compression is not successful for the first block, all input; * data is still in the window so we can still emit a stored block even; * when input comes from standard input. (This can also be done for; * all blocks if lit_bufsize is not greater than 32K.); * - if compression is not successful for a file smaller than 64K, we can; * even emit a stored file instead of a stored block (saving 5 bytes).; * This is applicable only for zip (not gzip or zlib).; * - creating new Huffman trees less frequently may not provide fast; * adaptation to changes in the input data statistics. (Take for; * example a binary file with poorly compressible code followed by; * a highly compressible string table.) Smaller buffer sizes give; * fast adaptation but have of course the overhead of transmitting; * trees more frequently.; * - I can't count above 4; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h:686,adapt,adaptation,686,builtins/zlib/deflate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/deflate.h,6,['adapt'],['adaptation']
Modifiability,"/* Sizes of match buffers for literals/lengths and distances. There are; * 4 reasons for limiting LIT_BUFSIZE to 64K:; * - frequencies can be kept in 16 bit counters; * - if compression is not successful for the first block, all input data is; * still in the window so we can still emit a stored block even when input; * comes from standard input. (This can also be done for all blocks if; * LIT_BUFSIZE is not greater than 32K.); * - if compression is not successful for a file smaller than 64K, we can; * even emit a stored file instead of a stored block (saving 5 bytes).; * - creating new Huffman trees less frequently may not provide fast; * adaptation to changes in the input data statistics. (Take for; * example a binary file with poorly compressible code followed by; * a highly compressible string table.) Smaller buffer sizes give; * fast adaptation but have of course the overhead of transmitting trees; * more frequently.; * - I can't count above 4; * The current code is general and allows DIST_BUFSIZE < LIT_BUFSIZE (to save; * memory at the expense of compression). Some optimizations would be possible; * if we rely on DIST_BUFSIZE == LIT_BUFSIZE.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZTrees.c:647,adapt,adaptation,647,core/zip/src/ZTrees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZTrees.c,2,['adapt'],['adaptation']
Modifiability,/* Skip over an unknown or uninteresting variable-length marker */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:41,variab,variable-length,41,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['variab'],['variable-length']
Modifiability,/* Standard state variables for error facility */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:18,variab,variables,18,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['variab'],['variables']
Modifiability,"/* Start web server. Parameters:; callbacks: mg_callbacks structure with user-defined callbacks.; options: NULL terminated list of option_name, option_value pairs that; specify Civetweb configuration parameters. Side-effects: on UNIX, ignores SIGCHLD and SIGPIPE signals. If custom; processing is required for these, signal handlers must be set up; after calling mg_start(). Example:; const char *options[] = {; ""document_root"", ""/var/www"",; ""listening_ports"", ""80,443s"",; NULL; };; struct mg_context *ctx = mg_start(&my_func, NULL, options);. Refer to https://github.com/civetweb/civetweb/blob/master/docs/UserManual.md; for the list of valid option and their possible values. Return:; web server context, or NULL on error. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:186,config,configuration,186,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['config'],['configuration']
Modifiability,/* Start with the file extenstion from the configuration. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:43,config,configuration,43,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['configuration']
Modifiability,/* State variables made visible to other modules */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h:9,variab,variables,9,graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,3,['variab'],['variables']
Modifiability,"/* Step 5: If there is no root directory, don't look for files. */; /* Note that root == NULL is a regular use case here. This occurs,; 	 * if all requests are handled by callbacks, so the WEBSOCKET_ROOT; 	 * config is not required. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:209,config,config,209,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['config']
Modifiability,"/* Step 5: while (scan lines remain to be written) */; /* jpeg_write_scanlines(...); */; /* Here we use the library's state variable cinfo.next_scanline as the; 	* loop counter, so that we don't have to keep track ourselves.; 	* To keep things simple, we pass one scanline per call; you can pass; 	* more if you wish, though.; 	*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/export.c:124,variab,variable,124,graf2d/asimage/src/libAfterImage/export.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/export.c,1,['variab'],['variable']
Modifiability,"/* Step 8: Check if the file exists at the server */; /* Local file path and name, corresponding to requested URI; 	 * is now stored in ""filename"" variable. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:147,variab,variable,147,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['variab'],['variable']
Modifiability,"/* String truncation in buf may only occur if; 					 * error_handler is too long. This string is; 					 * from the config, not from a client. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:115,config,config,115,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['config']
Modifiability,"/* Successfully processed marker, so reset state variable */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c:49,variab,variable,49,graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdmarker.c,1,['variab'],['variable']
Modifiability,/* System generated locals */; //Int_t f_inqu();; /* Local variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:59,variab,variables,59,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['variab'],['variables']
Modifiability,/* TODO (Feature): Add config value for allowed script path.; 	 * Default: All allowed. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:23,config,config,23,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['config']
Modifiability,/* TODO : temporary workaround untill we implement layers merging */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c:51,layers,layers,51,graf2d/asimage/src/libAfterImage/import.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/import.c,1,['layers'],['layers']
Modifiability,/* TRUE if next pass must zero histogram */; /* Variables for Floyd-Steinberg dithering */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:48,Variab,Variables,48,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['Variab'],['Variables']
Modifiability,"/* The ""non blocking"" property should already be; 		 * inherited from the parent socket. Set it for; 		 * non-compliant socket implementations. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:55,inherit,inherited,55,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['inherit'],['inherited']
Modifiability,/* The Microsoft C Run-Time Library for Windows CE doesn't have; * errno. We define it as a global variable to simplify porting.; * Its value is always 0 and should not be used. We rename it to; * avoid conflict with other libraries that use the same workaround.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zutil.h:99,variab,variable,99,graf2d/asimage/src/libAfterImage/zlib/zutil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zutil.h,1,['variab'],['variable']
Modifiability,/* The Microsoft C Run-Time Library for Windows CE doesn't have; * errno. We define it as a global variable to simplify porting.; * Its value is always 0 and should not be used.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.c:99,variab,variable,99,builtins/zlib/zutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.c,2,['variab'],['variable']
Modifiability,"/* The actual parser. This can be called repeatedly. It updates; * the index into the string and the state variable (which must; * be initialized to 0). It returns a result code, as above. There; * is no point calling the parser any more if it fails to advance to; * the end of the string - it is stuck on an invalid character (or; * terminated by '\0').; *; * Note that the pointer will consume an E or even an E+ and then leave; * a 'maybe' state even though a preceding integer.fraction is valid.; * The PNG_FP_WAS_VALID flag indicates that a preceding substring was; * a valid number. It's possible to recover from this by calling; * the parser again (from the start, with state 0) but with a string; * that omits the last character (i.e. set the size to the index of; * the problem character.) This has not been tested within libpng.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:107,variab,variable,107,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['variab'],['variable']
Modifiability,"/* The color map as a 2-D pixel array */; /* State variables: these variables indicate the progress of decompression.; * The application may examine these but must not modify them.; */; /* Row index of next scanline to be read from jpeg_read_scanlines().; * Application may use this to control its processing loop, e.g.,; * ""while (output_scanline < output_height)"".; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:51,variab,variables,51,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,2,['variab'],['variables']
Modifiability,"/* The following static variable is declared 'volatile' to avoid a; possible multithread problem in the function get_charset_aliases. If we; are running in a threaded environment, and if two threads initialize; 'charset_aliases' simultaneously, both will produce the same value,; and everything will be ok if the two assignments to 'charset_aliases'; are atomic. But I don't know what will happen if the two assignments mix. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/localcharset.c:24,variab,variable,24,graf2d/win32gdk/gdk/src/iconv/localcharset.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/localcharset.c,1,['variab'],['variable']
Modifiability,/* The number of configured worker threads. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:17,config,configured,17,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['configured']
Modifiability,"/* The png_set_<chunk> functions are for storing values in the png_info_struct.; * Similarly, the png_get_<chunk> calls are used to read values from the; * png_info_struct, either storing the parameters in the passed variables, or; * setting pointers into the png_info_struct where the data is stored. The; * png_get_<chunk> functions return a non-zero value if the data was available; * in info_ptr, or return zero and do not change any of the parameters if the; * data was not available.; *; * These functions should be used instead of directly accessing png_info; * to avoid problems with future changes in the size and internal layout of; * png_info_struct.; */; /* Returns ""flag"" if chunk data is valid in info_ptr. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:217,variab,variables,217,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['variab'],['variables']
Modifiability,"/* The request would move us past the end of the currently; mapped memory, so map in enough more memory to satisfy; the request. This means we also have to grow the mapped-to; file by an appropriate amount, since mmap cannot be used; to extend a file. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmapsup.c:237,extend,extend,237,core/clib/src/mmapsup.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmapsup.c,1,['extend'],['extend']
Modifiability,"/* The runtime_mutex is the first (or only) member of GStaticMutex,; * see both versions (of glibconfig.h) in configure.in */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthread.c:110,config,configure,110,graf2d/win32gdk/gdk/src/glib/gthread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthread.c,1,['config'],['configure']
Modifiability,/* The same but an existing array is extended by add_elements. This function; * also memsets the new elements to 0 and copies the old elements. The old; * array is not freed or altered.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:37,extend,extended,37,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['extend'],['extended']
Modifiability,"/* The system specific file gdkconfig.h contains such configuration; * settings that are needed not only when compiling GDK (or GTK); * itself, but also occasionally when compiling programs that use GDK; * (or GTK). One such setting is what windowing API backend is in use.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdktypes.h:54,config,configuration,54,graf2d/win32gdk/gdk/src/gdk/gdktypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/gdktypes.h,1,['config'],['configuration']
Modifiability,/* The threshold on gamma processing is configurable but hard-wired into the; * library. The following is the floating point variant.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:40,config,configurable,40,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['config'],['configurable']
Modifiability,/* There is no sign-extending load-byte instruction. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp:20,extend,extending,20,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,1,['extend'],['extending']
Modifiability,"/* This Source Code Form is subject to the terms of the Mozilla Public; * License, v. 2.0. If a copy of the MPL was not distributed with this; * file, You can obtain one at https://mozilla.org/MPL/2.0/. */; /**; * @file; * Adapter between for KDTree and CDT; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/LocatorKDTree.h:223,Adapt,Adapter,223,math/mathcore/src/CDT/LocatorKDTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/LocatorKDTree.h,1,['Adapt'],['Adapter']
Modifiability,"/* This allows Pvariables for ARGS. ARGF machinery is above ARGFP.; * B is not needed because the variable may be changed by the Fortran routine,; * but because B is the only way to access an arbitrary macro argument. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:98,variab,variable,98,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['variab'],['variable']
Modifiability,"/* This code solves the resolvent cubic in a convenient fashion; * for this implementation of the quartic. If there are three real; * roots, then they are placed directly into u[]. If two are; * complex, then the real root is put into u[0] and the real; * and imaginary part of the complex roots are placed into; * u[1] and u[2], respectively. Additionally, this; * calculates the discriminant of the cubic and puts it into the; * variable disc. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/complex_quartic.h:431,variab,variable,431,math/mathmore/src/complex_quartic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/complex_quartic.h,1,['variab'],['variable']
Modifiability,"/* This file is arranged in several sections:; *; * 1. [omitted]; * 2. Any configuration options that can be specified by for the application; * code when it is built. (Build time configuration is in pnglibconf.h); * 3. Type definitions (base types are defined in pngconf.h), structure; * definitions.; * 4. Exported library functions.; * 5. Simplified API.; * 6. Implementation options.; *; * The library source code has additional files (principally pngpriv.h) that; * allow configuration of the library.; */; /* Section 1: [omitted] */; /* Section 2: run time configuration; * See pnglibconf.h for build time configuration; *; * Run time configuration allows the application to choose between; * implementations of certain arithmetic APIs. The default is set; * at build time and recorded in pnglibconf.h, but it is safe to; * override these (and only these) settings. Note that this won't; * change what the library does, only application code, and the; * settings can (and probably should) be made on a per-file basis; * by setting the #defines before including png.h; *; * Use macros to read integers from PNG data or use the exported; * functions?; * PNG_USE_READ_MACROS: use the macros (see below) Note that; * the macros evaluate their argument multiple times.; * PNG_NO_USE_READ_MACROS: call the relevant library function.; *; * Use the alternative algorithm for compositing alpha samples that; * does not use division?; * PNG_READ_COMPOSITE_NODIV_SUPPORTED: use the 'no division'; * algorithm.; * PNG_NO_READ_COMPOSITE_NODIV: use the 'division' algorithm.; *; * How to handle benign errors if PNG_ALLOW_BENIGN_ERRORS is; * false?; * PNG_ALLOW_BENIGN_ERRORS: map calls to the benign error; * APIs to png_warning.; * Otherwise the calls are mapped to png_error.; */; /* Section 3: type definitions, including structures and compile time; * constants.; * See pngconf.h for base types that vary by machine/system; */; /* This triggers a compiler error in png.c, if png.c and png.h; * do not agr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:75,config,configuration,75,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,6,['config'],['configuration']
Modifiability,"/* This function is called when there is a warning, but the library thinks; * it can continue anyway. Replacement functions don't have to do anything; * here if you don't want them to. In the default configuration, png_ptr is; * not used, but it is passed in case it may be useful.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c:200,config,configuration,200,graf2d/asimage/src/libAfterImage/libpng/pngerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngerror.c,1,['config'],['configuration']
Modifiability,"/* This header file is to help porting code using Intel intrinsics; explicitly from x86_64 to powerpc64/powerpc64le. Since PowerPC target doesn't support native 64-bit vector type, we; typedef __m64 to 64-bit unsigned long long in MMX intrinsics, which; works well for _si64 and some _pi32 operations. For _pi16 and _pi8 operations, it's better to transfer __m64 into; 128-bit PowerPC vector first. Power8 introduced direct register; move instructions which helps for more efficient implementation. It's user's responsibility to determine if the results of such port; are acceptable or further changes are needed. Please note that much; code using Intel intrinsics CAN BE REWRITTEN in more portable and; efficient standard C or GNU C extensions with 64-bit scalar; operations, or 128-bit SSE/Altivec operations, which are more; recommended. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/mmintrin.h:690,portab,portable,690,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/mmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/mmintrin.h,1,['portab'],['portable']
Modifiability,"/* This header file is to help porting code using Intel intrinsics; explicitly from x86_64 to powerpc64/powerpc64le. Since X86 SSE intrinsics mainly handles __m128 type, PowerPC; VMX/VSX ISA is a good match for vector float SIMD operations.; However scalar float operations in vector (XMM) registers require; the POWER8 VSX ISA (2.07) level. There are differences for data; format and placement of float scalars in the vector register, which; require extra steps to match SSE scalar float semantics on POWER. It should be noted that there's much difference between X86_64's; MXSCR and PowerISA's FPSCR/VSCR registers. It's recommended to use; portable <fenv.h> instead of access MXSCR directly. Most SSE scalar float intrinsic operations can be performed more; efficiently as C language float scalar operations or optimized to; use vector SIMD operations. We recommend this for new applications. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/xmmintrin.h:643,portab,portable,643,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/xmmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/xmmintrin.h,1,['portab'],['portable']
Modifiability,"/* This header file is to help porting code using Intel intrinsics; explicitly from x86_64 to powerpc64/powerpc64le. Since X86 SSE2 intrinsics mainly handles __m128i and __m128d type,; PowerPC VMX/VSX ISA is a good match for vector float SIMD operations.; However scalar float operations in vector (XMM) registers require; the POWER8 VSX ISA (2.07) level. There are differences for data; format and placement of float scalars in the vector register, which; require extra steps to match SSE2 scalar float semantics on POWER. It should be noted that there's much difference between X86_64's; MXSCR and PowerISA's FPSCR/VSCR registers. It's recommended to use; portable <fenv.h> instead of access MXSCR directly. Most SSE2 scalar float intrinsic operations can be performed more; efficiently as C language float scalar operations or optimized to; use vector SIMD operations. We recommend this for new applications.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/emmintrin.h:658,portab,portable,658,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/emmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/emmintrin.h,1,['portab'],['portable']
Modifiability,"/* This header is distributed to simplify porting x86_64 code that; makes explicit use of Intel intrinsics to powerpc64/powerpc64le. It is the user's responsibility to determine if the results are; acceptable and make additional changes as necessary. Note that much code that uses Intel intrinsics can be rewritten in; standard C or GNU C extensions, which are more portable and better; optimized across multiple targets. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/smmintrin.h:366,portab,portable,366,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/smmintrin.h,1,['portab'],['portable']
Modifiability,"/* This header is distributed to simplify porting x86_64 code that; makes explicit use of Intel intrinsics to powerpc64le. It is the user's responsibility to determine if the results are; acceptable and make additional changes as necessary. Note that much code that uses Intel intrinsics can be rewritten in; standard C or GNU C extensions, which are more portable and better; optimized across multiple targets. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/tmmintrin.h:356,portab,portable,356,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/tmmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/tmmintrin.h,1,['portab'],['portable']
Modifiability,"/* This header is distributed to simplify porting x86_64 code that; makes explicit use of Intel intrinsics to powerpc64le.; It is the user's responsibility to determine if the results are; acceptable and make additional changes as necessary.; Note that much code that uses Intel intrinsics can be rewritten in; standard C or GNU C extensions, which are more portable and better; optimized across multiple targets. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/nmmintrin.h:358,portab,portable,358,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/nmmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/nmmintrin.h,2,['portab'],['portable']
Modifiability,"/* This header is distributed to simplify porting x86_64 code that; makes explicit use of Intel intrinsics to powerpc64le.; It is the user's responsibility to determine if the results are; acceptable and make additional changes as necessary.; Note that much code that uses Intel intrinsics can be rewritten in; standard C or GNU C extensions, which are more portable and better; optimized across multiple targets. In the specific case of X86 SSE3 intrinsics, the PowerPC VMX/VSX ISA; is a good match for most SIMD operations. However the Horizontal; add/sub requires the data pairs be permuted into a separate; registers with vertical even/odd alignment for the operation.; And the addsub operation requires the sign of only the even numbered; elements be flipped (xored with -0.0).; For larger blocks of code using these intrinsic implementations,; the compiler be should be able to schedule instructions to avoid; additional latency. In the specific case of the monitor and mwait instructions there are; no direct equivalent in the PowerISA at this time. So those; intrinsics are not implemented. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/pmmintrin.h:358,portab,portable,358,interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/pmmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/ppc_wrappers/pmmintrin.h,1,['portab'],['portable']
Modifiability,"/* This is a 'mntr' (display) profile with a mediaWhitePointTag that does not; * match the D50 PCS illuminant in the header (it is in fact the D65 values,; * so the white point is recorded as the un-adapted value.) The profiles; * below only differ in one byte - the intent - and are basically the same as; * the previous profile except for the mediaWhitePointTag error and a missing; * chromaticAdaptationTag.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:199,adapt,adapted,199,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['adapt'],['adapted']
Modifiability,"/* This is a valid CORS preflight, and the server is configured; 			 * to handle it automatically. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:53,config,configured,53,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['configured']
Modifiability,"/* This is not ; * memset (array->pdata + array->len, 0,; * sizeof (gpointer) * (length - array->len));; * to make it really portable. Remember (void*)NULL needn't be; * bitwise zero. It of course is silly not to use memset (..,0,..).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/garray.c:125,portab,portable,125,graf2d/win32gdk/gdk/src/glib/garray.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/garray.c,1,['portab'],['portable']
Modifiability,/* This is to give the caller an easier error detection in the NULL; * case and guard against uninitialized variable problems:; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:108,variab,variable,108,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,1,['variab'],['variable']
Modifiability,"/* This pair of functions encapsulates the operation of (a) compressing a; * text string, and (b) issuing it later as a series of chunk data writes.; * The compression_state structure is shared context for these functions; * set up by the caller to allow access to the relevant local variables.; *; * compression_buffer (new in 1.6.0) is just a linked list of zbuffer_size; * temporary buffers. From 1.6.0 it is retained in png_struct so that it will; * be correctly freed in the event of a write error (previous implementations; * just leaked memory.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c:284,variab,variables,284,graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwutil.c,1,['variab'],['variables']
Modifiability,/* This structure contains information about the HTTP request. */; /* This structure may be extended in future versions. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:92,extend,extended,92,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['extend'],['extended']
Modifiability,"/* This structure helps to create an environment for the spawned CGI; * program.; * Environment is an array of ""VARIABLE=VALUE\0"" ASCII strings,; * last element must be NULL.; * However, on Windows there is a requirement that all these; * VARIABLE=VALUE\0; * strings must reside in a contiguous buffer. The end of the buffer is; * marked by two '\0' characters.; * We satisfy both worlds: we create an envp array (which is vars), all; * entries are actually pointers inside buf. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:112,VARIAB,VARIABLE,112,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['VARIAB'],['VARIABLE']
Modifiability,"/* To allow for future enhancements to the profile accept unrecognized; * profile classes with a warning, these then hit the test below on the; * tag content to ensure they are backward compatible with one of the; * understood profiles.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:23,enhance,enhancements,23,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['enhance'],['enhancements']
Modifiability,"/* To support symbol prefixing it is necessary to know *before* including png.h; * whether the fixed point (and maybe other) APIs are exported, because if they; * are not internal definitions may be required. This is handled below just; * before png.h is included, but load the configuration now if it is available.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h:278,config,configuration,278,graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpriv.h,1,['config'],['configuration']
Modifiability,"/* To train the Deep AutoEncoder network with required number of Corruption, Compression and Reconstruction; * layers. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h:111,layers,layers,111,tmva/tmva/inc/TMVA/DNN/DeepNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h,1,['layers'],['layers']
Modifiability,"/* To use this define PNG_FILTER_OPTIMIZATIONS as the name of a function to; * call to install hardware optimizations for the above functions; simply; * replace whatever elements of the pp->read_filter[] array with a hardware; * specific (or, for that matter, generic) optimization.; *; * To see an example of this examine what configure.ac does when; * --enable-arm-neon is specified on the command line.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c:328,config,configure,328,graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngrutil.c,1,['config'],['configure']
Modifiability,/* Transforms vertex depending on the actual blending function -; currently the vertex v is considered as source vertex and its; alpha value is changed to 1.0 if source blending GL_ONE is; active. This might be extended in the future */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:211,extend,extended,211,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['extend'],['extended']
Modifiability,/* Try to use old VS_PROFILER variable */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c:30,variab,variable,30,interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c,1,['variab'],['variable']
Modifiability,"/* Types with names ending 'p' are pointer types. The corresponding types with; * names ending 'rp' are identical pointer types except that the pointer is; * marked 'restrict', which means that it is the only pointer to the object; * passed to the function. Applications should not use the 'restrict' types;; * it is always valid to pass 'p' to a pointer with a function argument of the; * corresponding 'rp' type. Different compilers have different rules with; * regard to type matching in the presence of 'restrict'. For backward; * compatibility libpng callbacks never have 'restrict' in their parameters and,; * consequentially, writing portable application code is extremely difficult if; * an attempt is made to use 'restrict'.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:641,portab,portable,641,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,1,['portab'],['portable']
Modifiability,"/* Undocumented GCC/Clang operand modifier: %e0 = lower D half, %f0 = upper D half */; /* https://github.com/gcc-mirror/gcc/blob/38cf91e5/gcc/config/arm/arm.c#L22486 */; /* https://github.com/llvm-mirror/llvm/blob/2c4ca683/lib/Target/ARM/ARMAsmPrinter.cpp#L399 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:142,config,config,142,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['config'],['config']
Modifiability,"/* Update screen clearing, pix copying variables */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:39,variab,variables,39,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,1,['variab'],['variables']
Modifiability,"/* Use ""Cache-Control: max-age"" instead of ""Expires"" header.; 	 * Reason: see https://www.mnot.net/blog/2007/05/15/expires_max-age */; /* See also https://www.mnot.net/cache_docs/ */; /* According to RFC 2616, Section 14.21, caching times should not exceed; 	 * one year. A year with 365 days corresponds to 31536000 seconds, a; 	 * leap; 	 * year to 31622400 seconds. For the moment, we just send whatever has; 	 * been configured, still the behavior for >1 year should be considered; 	 * as undefined. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:421,config,configured,421,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['configured']
Modifiability,"/* Use mg_cry_internal here, since gpass has been; 				 * configured. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:58,config,configured,58,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['configured']
Modifiability,/* Variable */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp:3,Variab,Variable,3,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,2,['Variab'],['Variable']
Modifiability,/* Variable alpha and color: Shader Object for the colored; triangle(s) and an extra extended Graphics State; + Xobject + Shader object for the alpha mask */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:3,Variab,Variable,3,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,2,"['Variab', 'extend']","['Variable', 'extended']"
Modifiability,/* Variable alpha and const color: Simple PDF draw orders; and an extra extended Graphics State + Xobject + Shader; object for the alpha mask */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:3,Variab,Variable,3,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,2,"['Variab', 'extend']","['Variable', 'extended']"
Modifiability,/* Variable color and const alpha < 1: Shader Object for the; colored triangle(s) and an extra extended Graphics State; for the alpha const */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:3,Variab,Variable,3,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,2,"['Variab', 'extend']","['Variable', 'extended']"
Modifiability,/* Variable color and no alpha: Shader Object for the colored; triangle(s) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx:3,Variab,Variable,3,graf3d/gl/src/gl2ps.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/gl2ps.cxx,1,['Variab'],['Variable']
Modifiability,"/* WRITE_COMPRESSED_TEXT */; /* This is a highly dubious configuration option; by default it is off,; * but it may be appropriate for private builds that are testing; * extensions not conformant to the current specification, or of; * applications that must not fail to write at all costs!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:57,config,configuration,57,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,1,['config'],['configuration']
Modifiability,"/* We assume that right shift corresponds to signed division by 2 with; * rounding towards minus infinity. This is correct for typical ""arithmetic; * shift"" instructions that shift in copies of the sign bit. But some; * C compilers implement >> with an unsigned shift. For these machines you; * must define RIGHT_SHIFT_IS_UNSIGNED.; * RIGHT_SHIFT provides a proper signed right shift of an INT32 quantity.; * It is only applied with constant shift counts. SHIFT_TEMPS must be; * included in the variables of any routine using RIGHT_SHIFT.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h:495,variab,variables,495,graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpegint.h,1,['variab'],['variables']
Modifiability,"/* We let the main thread (the one that calls g_thread_init) inherit; * the data, that it set before calling g_thread_init; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthread.c:61,inherit,inherit,61,graf2d/win32gdk/gdk/src/glib/gthread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthread.c,1,['inherit'],['inherit']
Modifiability,"/* We must apply the point transform by Al. For AC coefficients this; * is an integer division with rounding towards 0. To do this portably; * in C, we shift after obtaining the absolute value.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c:131,portab,portably,131,graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,4,['portab'],['portably']
Modifiability,"/* We must apply the point transform by Al. For AC coefficients this; * is an integer division with rounding towards 0. To do this portably; * in C, we shift after obtaining the absolute value; so the code is; * interwoven with finding the abs value (temp) and output bits (temp2).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:131,portab,portably,131,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,2,['portab'],['portably']
Modifiability,/* We prefix variable declarations so they can; * properly get exported in windows dlls.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gtypes.h:13,variab,variable,13,graf2d/win32gdk/gdk/src/glib/gtypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gtypes.h,1,['variab'],['variable']
Modifiability,"/* We want the smaller of 'idat_size' and 'current_buffer_size', but they; * are of different types and we don't know which variable has the fewest; * bits. Carefully select the smaller and cast it to the type of the; * larger - this cannot overflow. Do not cast in the following test - it; * will break on either 16-bit or 64-bit platforms.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpread.c:124,variab,variable,124,graf2d/asimage/src/libAfterImage/libpng/pngpread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpread.c,1,['variab'],['variable']
Modifiability,"/* We want the smaller of 'idat_size' and 'current_buffer_size', but they; * are of different types and we don't know which variable has the fewest; * bits. Carefully select the smaller and cast it to the type of the; * larger - this cannot overflow.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpread.c:124,variab,variable,124,graf2d/asimage/src/libAfterImage/libpng/pngpread.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngpread.c,1,['variab'],['variable']
Modifiability,"/* When using -Weverything, clang does not accept it's own headers; * in a release build configuration. Disable what is too much in; * -Weverything. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:89,config,configuration,89,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['configuration']
Modifiability,"/* Which block we are extending (the `final free; block' referred to above) might have changed, if; it got combined with a freed info table. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmalloc.c:22,extend,extending,22,core/clib/src/mmalloc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmalloc.c,1,['extend'],['extending']
Modifiability,"/* Windows file systems are not case sensitive, but you can still use; 	 * uppercase and lowercase letters (on all modern file systems).; 	 * The server can check if the URI uses the same upper/lowercase; 	 * letters an the file system, effectively making Windows servers; 	 * case sensitive (like Linux servers are). It is still not possible; 	 * to use two files with the same name in different cases on Windows; 	 * (like /a and /A) - this would be possible in Linux.; 	 * As a default, Windows is not case sensitive, but the case sensitive; 	 * file name check can be activated by an additional configuration. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:599,config,configuration,599,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['configuration']
Modifiability,"/* Wipe variables */; /* memset(W, 0, sizeof(W)); */; /* memset(T, 0, sizeof(T)); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/RSha256.hxx:8,variab,variables,8,core/foundation/res/ROOT/RSha256.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/ROOT/RSha256.hxx,1,['variab'],['variables']
Modifiability,/* X window variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.h:12,variab,variables,12,graf3d/x3d/src/x3d.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.h,1,['variab'],['variables']
Modifiability,/* ZDICT_flatLit() :; * rewrite `countLit` to contain a mostly flat but still compressible distribution of literals.; * necessary to avoid generating a non-compressible distribution that HUF_writeCTable() cannot encode.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/zdict.c:24,rewrite,rewrite,24,builtins/zstd/dictBuilder/zdict.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/zdict.c,1,['rewrite'],['rewrite']
Modifiability,"/* _UNIX */; /*; * Needed for ptrdiff_t in turn needed by VBO. This is defined by ISO; * C. On my system, this amounts to _3 lines_ of included code, all of; * them pretty much harmless. If you know of a way of detecting 32 vs; * 64 _targets_ at compile time you are free to replace this with; * something that's portable. For now, _this_ is the portable solution.; * (mem, 2004-01-04); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h:313,portab,portable,313,builtins/glew/inc/GL/glew.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/glew/inc/GL/glew.h,2,['portab'],['portable']
Modifiability,"/* __x86_64__ */; /* Extract int from packed integer array at index. This returns the element; * as a zero extended value, so it is unsigned.; */; /// Extracts an 8-bit element from the 128-bit integer vector of; /// [16 x i8], using the immediate value parameter \a N as a selector.; ///; /// \headerfile <x86intrin.h>; ///; /// \code; /// int _mm_extract_epi8(__m128i X, const int N);; /// \endcode; ///; /// This intrinsic corresponds to the <c> VPEXTRB / PEXTRB </c> instruction.; ///; /// \param X; /// A 128-bit integer vector.; /// \param N; /// An immediate value. Bits [3:0] specify which 8-bit vector element from; /// the argument \a X to extract and copy to the result. \n; /// 0000: Bits [7:0] of parameter \a X are extracted. \n; /// 0001: Bits [15:8] of the parameter \a X are extracted. \n; /// 0010: Bits [23:16] of the parameter \a X are extracted. \n; /// 0011: Bits [31:24] of the parameter \a X are extracted. \n; /// 0100: Bits [39:32] of the parameter \a X are extracted. \n; /// 0101: Bits [47:40] of the parameter \a X are extracted. \n; /// 0110: Bits [55:48] of the parameter \a X are extracted. \n; /// 0111: Bits [63:56] of the parameter \a X are extracted. \n; /// 1000: Bits [71:64] of the parameter \a X are extracted. \n; /// 1001: Bits [79:72] of the parameter \a X are extracted. \n; /// 1010: Bits [87:80] of the parameter \a X are extracted. \n; /// 1011: Bits [95:88] of the parameter \a X are extracted. \n; /// 1100: Bits [103:96] of the parameter \a X are extracted. \n; /// 1101: Bits [111:104] of the parameter \a X are extracted. \n; /// 1110: Bits [119:112] of the parameter \a X are extracted. \n; /// 1111: Bits [127:120] of the parameter \a X are extracted.; /// \returns An unsigned integer, whose lower 8 bits are selected from the; /// 128-bit integer vector parameter and the remaining bits are assigned; /// zeros.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h:107,extend,extended,107,interpreter/llvm-project/clang/lib/Headers/smmintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/smmintrin.h,1,['extend'],['extended']
Modifiability,/* a block variable */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.h:11,variab,variable,11,interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.h,3,['variab'],['variable']
Modifiability,/* adapt lastRun to fill 'dst' */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:3,adapt,adapt,3,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,1,['adapt'],['adapt']
Modifiability,/* adapt lastRunSize to fill 'dest' */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c:3,adapt,adapt,3,builtins/lz4/lz4hc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c,1,['adapt'],['adapt']
Modifiability,/* adapt lastRunSize to fill 'dst' */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c:3,adapt,adapt,3,builtins/lz4/lz4hc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c,1,['adapt'],['adapt']
Modifiability,"/* appease ""unused variable"" warning for release builds */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:19,variab,variable,19,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['variab'],['variable']
Modifiability,"/* array of length elements or NULL */; /****f* libAfterImage/asfont/get_asfont_glyph_spacing(); * NAME; * get_asfont_glyph_spacing(); * SYNOPSIS; * Bool get_asfont_glyph_spacing( ASFont* font, int *x, int *y );; * INPUTS; * font - Loaded ASFont structure.; * x - pointer to the variable to receive horizontal spacing value.; * y - pointer to the variable to receive vertical spacing value.; * RETURN VALUE; * True if meaningfull information has been returned.; * DESCRIPTION; * Returns inter-glyph spacing of specified font.; *********/; /****f* libAfterImage/asfont/set_asfont_glyph_spacing(); * NAME; * set_asfont_glyph_spacing(); * SYNOPSIS; * Bool set_asfont_glyph_spacing( ASFont* font, int x, int y );; * INPUTS; * font - Loaded ASFont structure.; * x - new horizontal spacing value.; * y - new vertical spacing value.; * RETURN VALUE; * TRue on success.; * DESCRIPTION; * Changes inter-glyph spacing of the specified font.; *********/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h:279,variab,variable,279,graf2d/asimage/src/libAfterImage/asfont.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asfont.h,2,['variab'],['variable']
Modifiability,"/* at this stage, the following variables must be correctly set :; * - ip : at start of LZ operation; * - match : at start of previous pattern occurence; can be within current prefix, or within extDict; * - offset : if maybe_ext_memSegment==1 (constant); * - lowLimit : must be == dictionary to mean ""match is within extDict""; must be == source otherwise; * - token and *token : position to write 4-bits for match length; higher 4-bits for literal length supposed already written; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:32,variab,variables,32,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,1,['variab'],['variables']
Modifiability,/* auto configuration options */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jinclude.h:8,config,configuration,8,graf2d/asimage/src/libAfterImage/libjpeg/jinclude.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jinclude.h,1,['config'],['configuration']
Modifiability,/* avoid unused variable warning */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Tools.h:16,variab,variable,16,tmva/tmva/inc/TMVA/Tools.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Tools.h,1,['variab'],['variable']
Modifiability,/* call the configured interpreter */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:12,config,configured,12,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['configured']
Modifiability,/* can't inherit stdin if we have an input pipe. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:9,inherit,inherit,9,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,2,['inherit'],['inherit']
Modifiability,"/* compressed size, including the checksum. */; // NOTE: these next 6 bytes are required from the ROOT compressed buffer format;; // upper layers will assume they are laid out in a specific manner.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx:139,layers,layers,139,core/lz4/src/ZipLZ4.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/lz4/src/ZipLZ4.cxx,1,['layers'],['layers']
Modifiability,/* condition variable */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/threading.h:13,variab,variable,13,builtins/zstd/common/threading.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/threading.h,1,['variab'],['variable']
Modifiability,/* config */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:3,config,config,3,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['config'],['config']
Modifiability,/* config.h.in. Generated from configure.ac by autoheader. */; /* Define if the compiler is building for multiple architectures of Apple; platforms at once. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/config.h:3,config,config,3,graf2d/win32gdk/gdk/src/iconv/config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/config.h,2,['config'],"['config', 'configure']"
Modifiability,/* config.h.in. Generated from configure.in by autoheader. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/win32/config.h:3,config,config,3,graf2d/asimage/src/libAfterImage/win32/config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/win32/config.h,2,['config'],"['config', 'configure']"
Modifiability,/* config.h.win32. Handcrafted for Microsoft C and gcc -mno-cygwin */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/config.h:3,config,config,3,graf2d/win32gdk/gdk/src/gdk/config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/gdk/config.h,2,['config'],['config']
Modifiability,"/* continue history within tmpOutBuffer */; /* withinTmp expectation : content of [dstPtr,dstSize] is same as [dict+dictSize,dstSize], so we just extend it */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:146,extend,extend,146,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['extend'],['extend']
Modifiability,/* cpuid(7): Extended Features. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/cpu.h:13,Extend,Extended,13,builtins/zstd/common/cpu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/cpu.h,1,['Extend'],['Extended']
Modifiability,"/* crc32.c -- compute the CRC-32 of a data stream; * Copyright (C) 1995-2005 Mark Adler; * For conditions of distribution and use, see copyright notice in zlib.h; *; * Thanks to Rodney Brown <rbrown64@csc.com.au> for his contribution of faster; * CRC methods: exclusive-oring 32 bits of data at a time, and pre-computing; * tables for updating the shift register in one step with three exclusive-ors; * instead of four steps with four exclusive-ors. This results in about a; * factor of two increase in speed on a Power PC G4 (PPC7455) using gcc -O3.; */; /* @(#) $Id$ */; /*; Note on the use of DYNAMIC_CRC_TABLE: there is no mutex or semaphore; protection on the static variables used to control the first-use generation; of the crc tables. Therefore, if you #define DYNAMIC_CRC_TABLE, you should; first call get_crc_table() to initialize the tables before allowing more than; one thread to use crc32().; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/crc32.c:672,variab,variables,672,graf2d/asimage/src/libAfterImage/zlib/crc32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/crc32.c,1,['variab'],['variables']
Modifiability,"/* crc32.c -- compute the CRC-32 of a data stream; * Copyright (C) 1995-2006, 2010, 2011, 2012 Mark Adler; * For conditions of distribution and use, see copyright notice in zlib.h; *; * Thanks to Rodney Brown <rbrown64@csc.com.au> for his contribution of faster; * CRC methods: exclusive-oring 32 bits of data at a time, and pre-computing; * tables for updating the shift register in one step with three exclusive-ors; * instead of four steps with four exclusive-ors. This results in about a; * factor of two increase in speed on a Power PC G4 (PPC7455) using gcc -O3.; */; /* @(#) $Id$ */; /*; Note on the use of DYNAMIC_CRC_TABLE: there is no mutex or semaphore; protection on the static variables used to control the first-use generation; of the crc tables. Therefore, if you #define DYNAMIC_CRC_TABLE, you should; first call get_crc_table() to initialize the tables before allowing more than; one thread to use crc32(). DYNAMIC_CRC_TABLE and MAKECRCH can be #defined to write out crc32.h.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/crc32.c:690,variab,variables,690,builtins/zlib/crc32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/crc32.c,2,['variab'],['variables']
Modifiability,"/* data is ""var1=val1&var2=val2..."". Find variable first */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:42,variab,variable,42,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['variab'],['variable']
Modifiability,/* decision variable */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPolyUtils.c:12,variab,variable,12,graf2d/asimage/src/TASPolyUtils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPolyUtils.c,1,['variab'],['variable']
Modifiability,/* desired # of colors = size of colormap */; /* Variables for accumulating image statistics */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:49,Variab,Variables,49,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['Variab'],['Variables']
Modifiability,/* do we need the value of this component? */; /* These values are computed before starting a scan of the component. */; /* The decompressor output side may not use these variables. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:171,variab,variables,171,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['variab'],['variables']
Modifiability,"/* dx, dy, dz are the amount to step about each axis every frame; We want the scene to continue to rotate even if the user does; not give any new input */; /* Do not forget to put your automatic update variables into this if; statement. Be careful somehow you can get MANY bugs with these! */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c:202,variab,variables,202,graf3d/x3d/src/x3d.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/x3d/src/x3d.c,2,['variab'],['variables']
Modifiability,/* eslint-disable no-fallthrough */; /**; * This plugin mimics the HTML5 CanvasRenderingContext2D.; *; * The goal is to provide a way for current canvas implementations to print directly to a PDF.; *; * @name context2d; * @module; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:49,plugin,plugin,49,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['plugin'],['plugin']
Modifiability,/* extended */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLCamera.cxx:3,extend,extended,3,graf3d/gl/src/TGLCamera.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLCamera.cxx,1,['extend'],['extended']
Modifiability,"/* flexible, LZ4HC_MAXD dependent */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c:3,flexible,flexible,3,builtins/lz4/lz4hc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4hc.c,1,['flexible'],['flexible']
Modifiability,"/* for safety if init fails */; /* Check for configuration errors.; * SIZEOF(ALIGN_TYPE) should be a power of 2; otherwise, it probably; * doesn't reflect any real hardware alignment requirement.; * The test is a little tricky: for X>0, X and X-1 have no one-bits; * in common if and only if X is a power of 2, ie has only one one-bit.; * Some compilers may give an ""unreachable code"" warning here; ignore it.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:45,config,configuration,45,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['config'],['configuration']
Modifiability,/* from config sources */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/main.c:8,config,config,8,misc/rmkdepend/main.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/main.c,1,['config'],['config']
Modifiability,"/* g_parse_argv() does a semi-arbitrary weird subset of the way; * the shell parses a command line. We don't do variable expansion,; * don't understand that operators are tokens, don't do tilde expansion,; * don't do command substitution, no arithmetic expansion, IFS gets ignored,; * don't do filename globs, don't remove redirection stuff, etc.; *; * READ THE UNIX98 SPEC on ""Shell Command Language"" before changing; * the behavior of this code.; *; * Steps to parsing the argv string:; *; * - tokenize the string (but since we ignore operators,; * our tokenization may diverge from what the shell would do); * note that tokenization ignores the internals of a quoted; * word and it always splits on spaces, not on IFS even; * if we used IFS. We also ignore ""end of input indicator""; * (I guess this is control-D?); *; * Tokenization steps, from UNIX98 with operator stuff removed,; * are:; * ; * 1) ""If the current character is backslash, single-quote or; * double-quote (\, ' or "") and it is not quoted, it will affect; * quoting for subsequent characters up to the end of the quoted; * text. The rules for quoting are as described in Quoting; * . During token recognition no substitutions will be actually; * performed, and the result token will contain exactly the; * characters that appear in the input (except for newline; * character joining), unmodified, including any embedded or; * enclosing quotes or substitution operators, between the quote; * mark and the end of the quoted text. The token will not be; * delimited by the end of the quoted field.""; *; * 2) ""If the current character is an unquoted newline character,; * the current token will be delimited.""; *; * 3) ""If the current character is an unquoted blank character, any; * token containing the previous character is delimited and the; * current character will be discarded.""; *; * 4) ""If the previous character was part of a word, the current; * character will be appended to that word.""; *; * 5) ""If the current character is ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gshell.c:112,variab,variable,112,graf2d/win32gdk/gdk/src/glib/gshell.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gshell.c,1,['variab'],['variable']
Modifiability,/* gcc needs inline assembly */; /* Adapted from https://github.com/google/highwayhash/blob/master/highwayhash/hh_vsx.h. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:36,Adapt,Adapted,36,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['Adapt'],['Adapted']
Modifiability,/* glibconfig.h.win32.in Merged from two versions generated by configure for gcc and MSVC. */; /* glibconfig.h; *; * This is a generated file. Please modify 'configure.in'; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/glibconfig.h:63,config,configure,63,graf2d/win32gdk/gdk/src/glib/glibconfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/glibconfig.h,2,['config'],['configure']
Modifiability,"/* gspawn-win32.c - Process launching on Win32; *; * Copyright 2000 Red Hat, Inc.; *; * GLib is free software; you can redistribute it and/or; * modify it under the terms of the GNU Lesser General Public License as; * published by the Free Software Foundation; either version 2 of the; * License, or (at your option) any later version.; *; * GLib is distributed in the hope that it will be useful,; * but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Lesser General Public License for more details.; *; * You should have received a copy of the GNU Lesser General Public; * License along with GLib; see the file COPYING.LIB. If not, write; * to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,; * Boston, MA 02111-1307, USA.; */; /*; * Implementation details on Win32.; *; * - There is no way to set the no-inherit flag for; * a ""file descriptor"" in the MS C runtime. The flag is there,; * and the dospawn() function uses it, but unfortunately; * this flag can only be set when opening the file.; * - As there is no fork(), we cannot reliably change directory; * before starting the child process. (There might be several threads; * running, and the current directory is common for all threads.); *; * Thus, we must in most cases use a helper program to handle closing; * of (inherited) file descriptors and changing of directory. In fact,; * we do it all the time.; */; /* Define this to get some logging all the time */; /* #define G_SPAWN_WIN32_DEBUG */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:906,inherit,inherit,906,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,2,['inherit'],"['inherit', 'inherited']"
Modifiability,/* has com.apple.rootless.restricted-nvram-variables.heritable; entitlement */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MachO.h:43,variab,variables,43,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MachO.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MachO.h,1,['variab'],['variables']
Modifiability,"/* if this file is in fact a pre-gzipped file, rewrite its filename; 	 * it's important to rewrite the filename after resolving; 	 * the mime type from it, to preserve the actual file's type */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:47,rewrite,rewrite,47,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,2,['rewrite'],['rewrite']
Modifiability,/* in variables (count) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:6,variab,variables,6,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['variab'],['variables']
Modifiability,"/* inflate.c -- zlib decompression; * Copyright (C) 1995-2005 Mark Adler; * For conditions of distribution and use, see copyright notice in zlib.h; */; /*; * Change history:; *; * 1.2.beta0 24 Nov 2002; * - First version -- complete rewrite of inflate to simplify code, avoid; * creation of window when not needed, minimize use of window when it is; * needed, make inffast.c even faster, implement gzip decoding, and to; * improve code readability and style over the previous zlib inflate code; *; * 1.2.beta1 25 Nov 2002; * - Use pointers for available input and output checking in inffast.c; * - Remove input and output counters in inffast.c; * - Change inffast.c entry and loop from avail_in >= 7 to >= 6; * - Remove unnecessary second byte pull from length extra in inffast.c; * - Unroll direct copy to three copies per loop in inffast.c; *; * 1.2.beta2 4 Dec 2002; * - Change external routine names to reduce potential conflicts; * - Correct filename to inffixed.h for fixed tables in inflate.c; * - Make hbuf[] unsigned char to match parameter type in inflate.c; * - Change strm->next_out[-state->offset] to *(strm->next_out - state->offset); * to avoid negation problem on Alphas (64 bit) in inflate.c; *; * 1.2.beta3 22 Dec 2002; * - Add comments on state->bits assertion in inffast.c; * - Add comments on op field in inftrees.h; * - Fix bug in reuse of allocated window after inflateReset(); * - Remove bit fields--back to byte structure for speed; * - Remove distance extra == 0 check in inflate_fast()--only helps for lengths; * - Change post-increments to pre-increments in inflate_fast(), PPC biased?; * - Add compile time option, POSTINC, to use post-increments instead (Intel?); * - Make MATCH copy in inflate() much faster for when inflate_fast() not used; * - Use local copies of stream next and avail values, as well as local bit; * buffer and bit count in inflate()--for speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inflate.c:233,rewrite,rewrite,233,graf2d/asimage/src/libAfterImage/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/inflate.c,1,['rewrite'],['rewrite']
Modifiability,"/* inflate.c -- zlib decompression; * Copyright (C) 1995-2012 Mark Adler; * For conditions of distribution and use, see copyright notice in zlib.h; */; /*; * Change history:; *; * 1.2.beta0 24 Nov 2002; * - First version -- complete rewrite of inflate to simplify code, avoid; * creation of window when not needed, minimize use of window when it is; * needed, make inffast.c even faster, implement gzip decoding, and to; * improve code readability and style over the previous zlib inflate code; *; * 1.2.beta1 25 Nov 2002; * - Use pointers for available input and output checking in inffast.c; * - Remove input and output counters in inffast.c; * - Change inffast.c entry and loop from avail_in >= 7 to >= 6; * - Remove unnecessary second byte pull from length extra in inffast.c; * - Unroll direct copy to three copies per loop in inffast.c; *; * 1.2.beta2 4 Dec 2002; * - Change external routine names to reduce potential conflicts; * - Correct filename to inffixed.h for fixed tables in inflate.c; * - Make hbuf[] unsigned char to match parameter type in inflate.c; * - Change strm->next_out[-state->offset] to *(strm->next_out - state->offset); * to avoid negation problem on Alphas (64 bit) in inflate.c; *; * 1.2.beta3 22 Dec 2002; * - Add comments on state->bits assertion in inffast.c; * - Add comments on op field in inftrees.h; * - Fix bug in reuse of allocated window after inflateReset(); * - Remove bit fields--back to byte structure for speed; * - Remove distance extra == 0 check in inflate_fast()--only helps for lengths; * - Change post-increments to pre-increments in inflate_fast(), PPC biased?; * - Add compile time option, POSTINC, to use post-increments instead (Intel?); * - Make MATCH copy in inflate() much faster for when inflate_fast() not used; * - Use local copies of stream next and avail values, as well as local bit; * buffer and bit count in inflate()--for speed when inflate_fast() not used; *; * 1.2.beta4 1 Jan 2003; * - Split ptr - 257 statements in inflate_table(",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c:233,rewrite,rewrite,233,builtins/zlib/inflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inflate.c,1,['rewrite'],['rewrite']
Modifiability,/* inherit MS-DOS file system etc. stuff */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Tailor.h:3,inherit,inherit,3,core/zip/src/Tailor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Tailor.h,1,['inherit'],['inherit']
Modifiability,/* jconfig.h. Generated from jconfig.cfg by configure. */; /* jconfig.cfg --- source file edited by configure script */; /* see jconfig.txt for explanations */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jconfig.h:44,config,configure,44,graf2d/asimage/src/libAfterImage/libjpeg/jconfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jconfig.h,2,['config'],['configure']
Modifiability,/* kernel function (exec config) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:25,config,config,25,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['config'],['config']
Modifiability,/* link into the scanner configuration */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gscanner.h:25,config,configuration,25,graf2d/win32gdk/gdk/src/glib/gscanner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gscanner.h,1,['config'],['configuration']
Modifiability,/* local index variable */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:15,variab,variable,15,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,1,['variab'],['variable']
Modifiability,/* loop control variable is used outside the for-loop scope */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/cmake/win/w32pragma.h:16,variab,variable,16,cmake/win/w32pragma.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/cmake/win/w32pragma.h,1,['variab'],['variable']
Modifiability,/* mask flag and opcode */; /* Variables used for connection monitoring */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:31,Variab,Variables,31,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['Variab'],['Variables']
Modifiability,"/* max size of the hash we'll support */; /*; * Currently only to support Legacy VPN plugins, and Mac App Store; * but intended to replace all the various platform code, dev code etc. bits.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MachO.h:85,plugin,plugins,85,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MachO.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/MachO.h,1,['plugin'],['plugins']
Modifiability,/* may be set to #if 1 by ./configure */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h:28,config,configure,28,builtins/zlib/zconf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h,4,['config'],['configure']
Modifiability,/* mg_authorization_handler. Callback function definition for mg_set_auth_handler. Parameters:; conn: current connection information.; cbdata: the callback data configured with mg_set_request_handler().; Returns:; 0: access denied; 1: access granted; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:161,config,configured,161,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,1,['config'],['configured']
Modifiability,"/* mg_request_handler. Called when a new request comes in. This callback is URI based; and configured with mg_set_request_handler(). Parameters:; conn: current connection information.; cbdata: the callback data configured with mg_set_request_handler().; Returns:; 0: the handler could not handle the request, so fall through.; 1 - 999: the handler processed the request. The return code is; stored as a HTTP status code for the access log. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h:91,config,configured,91,net/http/civetweb/civetweb.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.h,2,['config'],['configured']
Modifiability,"/* min( Se, DCTSIZE2-1 ) */; /*; * Links to compression subobjects (methods and private variables of modules); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:88,variab,variables,88,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['variab'],['variables']
Modifiability,/* no configurable policy */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h:6,config,configurable,6,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineScheduler.h,1,['config'],['configurable']
Modifiability,"/* no interpreter configured, call the programm directly */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:18,config,configured,18,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['configured']
Modifiability,/* no llvm_unreachable in C. */; /* Set to NULL to prevent uninitialized variable warnings. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/c-index-test/c-index-test.c:73,variab,variable,73,interpreter/llvm-project/clang/tools/c-index-test/c-index-test.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/c-index-test/c-index-test.c,1,['variab'],['variable']
Modifiability,/* note: use after variable declarations */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:19,variab,variable,19,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['variab'],['variable']
Modifiability,"/* notes on macros:; * having DISABLE_MEM_POOLS defined, disables mem_chunks alltogether, their; * allocations are performed through ordinary g_malloc/g_free.; * having G_DISABLE_CHECKS defined disables use of glib_mem_profiler_table and; * g_mem_profile().; * REALLOC_0_WORKS is defined if g_realloc (NULL, x) works.; * SANE_MALLOC_PROTOS is defined if the systems malloc() and friends functions; * match the corresponding GLib prototypes, keep configure.in and gmem.h in sync here.; * if ENABLE_GC_FRIENDLY is defined, freed memory should be 0-wiped.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.c:446,config,configure,446,graf2d/win32gdk/gdk/src/glib/gmem.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gmem.c,1,['config'],['configure']
Modifiability,/* one dither array per component */; /* Variables for Floyd-Steinberg dithering */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c:41,Variab,Variables,41,graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant1.c,1,['Variab'],['Variables']
Modifiability,/* pass variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c:8,variab,variables,8,graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngwrite.c,1,['variab'],['variables']
Modifiability,"/* png_colorspace only contains 'flags' if neither GAMMA or COLORSPACE are; * defined. When COLORSPACE is switched on all the colorspace-defining; * chunks should be enabled, when GAMMA is switched on all the gamma-defining; * chunks should be enabled. If this is not done it becomes possible to read; * inconsistent PNG files and assign a probably incorrect interpretation to; * the information. (In other words, by carefully choosing which chunks to; * recognize the system configuration can select an interpretation for PNG; * files containing ambiguous data and this will result in inconsistent; * behavior between different libpng builds!); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pnginfo.h:476,config,configuration,476,graf2d/asimage/src/libAfterImage/libpng/pnginfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pnginfo.h,1,['config'],['configuration']
Modifiability,"/* png_time is a way to hold the time in an machine independent way.; * Two conversions are provided, both from time_t and struct tm. There; * is no portable way to convert to either of these structures, as far; * as I know. If you know of a portable way, send it to me. As a side; * note - PNG has always been Year 2000 compliant!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h:149,portab,portable,149,graf2d/asimage/src/libAfterImage/libpng/png.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.h,2,['portab'],['portable']
Modifiability,"/* pngconf.h - machine-configurable file for libpng; *; * libpng version 1.6.40; *; * Copyright (c) 2018-2022 Cosmin Truta; * Copyright (c) 1998-2002,2004,2006-2016,2018 Glenn Randers-Pehrson; * Copyright (c) 1996-1997 Andreas Dilger; * Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.; *; * This code is released under the libpng license.; * For conditions of distribution and use, see the disclaimer; * and license in png.h; *; * Any machine specific code is near the front of this file, so if you; * are configuring libpng for a machine, you may want to read the section; * starting here down to where it starts to typedef png_color, png_text,; * and png_info.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngconf.h:23,config,configurable,23,graf2d/asimage/src/libAfterImage/libpng/pngconf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pngconf.h,2,['config'],"['configurable', 'configuring']"
Modifiability,"/* pnglibconf.h - library build configuration */; /* libpng version 1.6.39 */; /* Copyright (c) 2018-2022 Cosmin Truta */; /* Copyright (c) 1998-2002,2004,2006-2018 Glenn Randers-Pehrson */; /* This code is released under the libpng license. */; /* For conditions of distribution and use, see the disclaimer */; /* and license in png.h */; /* pnglibconf.h */; /* Machine generated file: DO NOT EDIT */; /* Derived from: scripts/pnglibconf.dfa */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pnglibconf.h:32,config,configuration,32,graf2d/asimage/src/libAfterImage/libpng/pnglibconf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/pnglibconf.h,1,['config'],['configuration']
Modifiability,"/* poly/zsolve_cubic.c; *; * Copyright (C) 1996, 1997, 1998, 1999, 2000, 2007 Brian Gough; *; * This program is free software; you can redistribute it and/or modify; * it under the terms of the GNU General Public License as published by; * the Free Software Foundation; either version 3 of the License, or (at; * your option) any later version.; *; * This program is distributed in the hope that it will be useful, but; * WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * General Public License for more details.; *; * You should have received a copy of the GNU General Public License; * along with this program; if not, write to the Free Software; * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.; */; /* zsolve_cubic.c - finds the complex roots of x^3 + a x^2 + b x + c = 0 */; //#include <config.h>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/zsolve_cubic.cxx:904,config,config,904,math/mathmore/src/zsolve_cubic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/zsolve_cubic.cxx,1,['config'],['config']
Modifiability,"/* portably return maximum value for an int (when limits.h presumed not; available) -- we need to do this to cover cases where 2's complement not; used, since C standard permits 1's complement and sign-bit representations,; otherwise we could just use ((unsigned)-1) >> 1 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c:3,portab,portably,3,builtins/zlib/gzlib.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/gzlib.c,1,['portab'],['portably']
Modifiability,/* pthread adaptation */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/pool.c:11,adapt,adaptation,11,builtins/zstd/common/pool.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/pool.c,1,['adapt'],['adaptation']
Modifiability,"/* public fields */; /* These fields are loaded into local variables at start of each MCU.; * In case of suspension, we exit WITHOUT updating them.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:59,variab,variables,59,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,1,['variab'],['variables']
Modifiability,/* public fields */; /* These variables keep track of the current location of the input side. */; /* cinfo->input_iMCU_row is also used for this. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdcoefct.c:30,variab,variables,30,graf2d/asimage/src/libAfterImage/libjpeg/jdcoefct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdcoefct.c,1,['variab'],['variables']
Modifiability,"/* quantization table selector (0..3) */; /* These values may vary between scans. */; /* For compression, they must be supplied by parameter setup; */; /* for decompression, they are read from the SOS marker. */; /* The decompressor output side may not use these variables. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:263,variab,variables,263,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['variab'],['variables']
Modifiability,"/* sRGB sets known gamma, end points and (from the chunk) intent. */; /* IMPORTANT: these are not necessarily the values found in an ICC profile; * because ICC profiles store values adapted to a D50 environment; it is; * expected that the ICC profile mediaWhitePointTag will be D50; see the; * checks and code elsewhere to understand this better.; *; * These XYZ values, which are accurate to 5dp, produce rgb to gray; * coefficients of (6968,23435,2366), which are reduced (because they add up; * to 32769 not 32768) to (6968,23434,2366). These are the values that; * libpng has traditionally used (and are the best values given the 15bit; * algorithm used by the rgb to gray code.); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c:182,adapt,adapted,182,graf2d/asimage/src/libAfterImage/libpng/png.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libpng/png.c,1,['adapt'],['adapted']
Modifiability,/* safe and portable access using memcpy() */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:12,portab,portable,12,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,1,['portab'],['portable']
Modifiability,"/* scaling factor for litFreq, so that frequencies adapt faster to new stats */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c:51,adapt,adapt,51,builtins/zstd/compress/zstd_opt.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_opt.c,1,['adapt'],['adapt']
Modifiability,/* set up variables on first iteration */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:10,variab,variables,10,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['variab'],['variables']
Modifiability,"/* should an Adobe marker be written? */; /* State variable: index of next scanline to be written to; * jpeg_write_scanlines(). Application may use this to control its; * processing loop, e.g., ""while (next_scanline < image_height)"".; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:51,variab,variable,51,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['variab'],['variable']
Modifiability,"/* some abbreviations; note that some of these know variable names! */; /* do ""if I'm here, I can also be there"" etc without branches */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regexec.c:52,variab,variable,52,interpreter/llvm-project/llvm/lib/Support/regexec.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regexec.c,2,['variab'],['variable']
Modifiability,/* switch pointer to extended workspace */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c:21,extend,extended,21,graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jfdctint.c,12,['extend'],['extended']
Modifiability,/* temporary variable */; /*static*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:13,variab,variable,13,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['variab'],['variable']
Modifiability,/* temporary variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:13,variab,variables,13,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['variab'],['variables']
Modifiability,/* the HOME environment variable */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterbase.c:24,variab,variable,24,graf2d/asimage/src/libAfterImage/afterbase.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterbase.c,1,['variab'],['variable']
Modifiability,"/* the maximal number that pow(x,x-0.5) has no overflow */; /* we use a (very) conservative portable bound */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephes.h:92,portab,portable,92,math/mathcore/src/SpecFuncCephes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SpecFuncCephes.h,1,['portab'],['portable']
Modifiability,/* the on stack structure holding the __block; variable */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.h:47,variab,variable,47,interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.h,1,['variab'],['variable']
Modifiability,/* the on stack structure holding the; __block variable */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp:47,variab,variable,47,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,2,['variab'],['variable']
Modifiability,"/* the variable is only declared,; it actually lives in debug.c,; and is shared by the whole process.; It's not thread-safe.; It's useful when enabling very verbose levels; on selective conditions (such as position in src) */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/debug.h:7,variab,variable,7,builtins/zstd/common/debug.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/debug.h,1,['variab'],['variable']
Modifiability,"/* these are some convenience macros that expand to nothing if GLib; * was configured with --disable-threads. for using StaticMutexes,; * you define them with G_LOCK_DEFINE_STATIC (name) or G_LOCK_DEFINE (name); * if you need to export the mutex. With G_LOCK_EXTERN (name) you can; * declare such an globally defined lock. name is a unique identifier; * for the protected varibale or code portion. locking, testing and; * unlocking of such mutexes can be done with G_LOCK(), G_UNLOCK() and; * G_TRYLOCK() respectively.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthread.h:75,config,configured,75,graf2d/win32gdk/gdk/src/glib/gthread.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gthread.h,1,['config'],['configured']
Modifiability,/* these variables are not used when assert() is disabled */; /* ensure there will be no no underflow; * when translating a dict index into a local index */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_fast.c:9,variab,variables,9,builtins/zstd/compress/zstd_fast.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_fast.c,1,['variab'],['variables']
Modifiability,"/* type for top-level pointer */; /* Declarations for Floyd-Steinberg dithering.; *; * Errors are accumulated into the array fserrors[], at a resolution of; * 1/16th of a pixel count. The error at a given pixel is propagated; * to its not-yet-processed neighbors using the standard F-S fractions,; *		...	(here)	7/16; *		3/16	5/16	1/16; * We work left-to-right on even rows, right-to-left on odd rows.; *; * We can get away with a single array (holding one row's worth of errors); * by using it to store the current row's errors at pixel columns not yet; * processed, but the next row's errors at columns already processed. We; * need only a few extra variables to hold the errors immediately around the; * current column. (If we are lucky, those variables are in registers, but; * even if not, they're probably cheaper to access than array elements are.); *; * The fserrors[] array has (#columns + 2) entries; the extra entry at; * each end saves us from special-casing the first and last pixels.; * Each entry is three values long, one value for each color component.; *; * Note: on a wide image, we might not have enough room in a PC's near data; * segment to hold the error array; so it is allocated with alloc_large.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:652,variab,variables,652,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,2,['variab'],['variables']
Modifiability,/* type of extended-memory handles */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h:11,extend,extended-memory,11,graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,1,['extend'],['extended-memory']
Modifiability,/* update state variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:16,variab,variables,16,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,1,['variab'],['variables']
Modifiability,/* update variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:10,variab,variables,10,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,2,['variab'],['variables']
Modifiability,/* use after variable declarations */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c:13,variab,variable,13,builtins/lz4/lz4.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.c,1,['variab'],['variable']
Modifiability,/* use only *after* variable declarations */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:20,variab,variable,20,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,3,['variab'],['variable']
Modifiability,"/* value of request_timeout is in seconds, config in milliseconds */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c:43,config,config,43,net/http/civetweb/civetweb.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/civetweb/civetweb.c,1,['config'],['config']
Modifiability,/* variable */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:3,variab,variable,3,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,/* variable size */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c:3,variab,variable,3,builtins/zstd/compress/zstdmt_compress.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstdmt_compress.c,2,['variab'],['variable']
Modifiability,/* variables (inflate) */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:3,variab,variables,3,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['variab'],['variables']
Modifiability,/* was set to #if 1 by ./configure */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h:25,config,configure,25,builtins/zlib/zconf_cf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf_cf.h,2,['config'],['configure']
Modifiability,"/* was updated by lm_init() */; /* For portability, force little-endian order on all machines: */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.c:39,portab,portability,39,core/zip/src/Bits.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.c,1,['portab'],['portability']
Modifiability,/* we absolutely do not want to load floating selection or invisible layers :*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/xcf.c:69,layers,layers,69,graf2d/asimage/src/libAfterImage/xcf.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/xcf.c,1,['layers'],['layers']
Modifiability,/* where to copy match from */; /* copy state to local variables */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inffast.c:55,variab,variables,55,builtins/zlib/inffast.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/inffast.c,2,['variab'],['variables']
Modifiability,/* widely used configuration options */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:15,config,configuration,15,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['config'],['configuration']
Modifiability,/* working variable */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifdecode.c:11,variab,variable,11,graf2d/win32gdk/src/gifdecode.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifdecode.c,2,['variab'],['variable']
Modifiability,/* working variable for loops */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifdecode.c:11,variab,variable,11,graf2d/win32gdk/src/gifdecode.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/src/gifdecode.c,2,['variab'],['variable']
Modifiability,"/* xgk[1], xgk[3], ... abscissae of the 10-point gauss rule.; xgk[0], xgk[2], ... abscissae to optimally extend the 10-point gauss rule */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:105,extend,extend,105,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['extend'],['extend']
Modifiability,"/* xgk[1], xgk[3], ... abscissae of the 15-point gauss rule.; xgk[0], xgk[2], ... abscissae to optimally extend the 15-point gauss rule */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:105,extend,extend,105,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['extend'],['extend']
Modifiability,"/* xgk[1], xgk[3], ... abscissae of the 20-point gauss rule.; xgk[0], xgk[2], ... abscissae to optimally extend the 20-point gauss rule */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:105,extend,extend,105,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['extend'],['extend']
Modifiability,"/* xgk[1], xgk[3], ... abscissae of the 25-point gauss rule.; xgk[0], xgk[2], ... abscissae to optimally extend the 25-point gauss rule */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:105,extend,extend,105,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['extend'],['extend']
Modifiability,"/* xgk[1], xgk[3], ... abscissae of the 30-point gauss rule.; xgk[0], xgk[2], ... abscissae to optimally extend the 30-point gauss rule */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:105,extend,extend,105,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['extend'],['extend']
Modifiability,"/* xgk[1], xgk[3], ... abscissae of the 7-point gauss rule.; xgk[0], xgk[2], ... abscissae to optimally extend the 7-point gauss rule */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:104,extend,extend,104,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,1,['extend'],['extend']
Modifiability,"/* zconf.h -- configuration of the zlib compression library; * Copyright (C) 1995-2003 Jean-loup Gailly.; * For conditions of distribution and use, see copyright notice in zlib.h; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zconf.h:14,config,configuration,14,graf2d/asimage/src/libAfterImage/zlib/zconf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zconf.h,1,['config'],['configuration']
Modifiability,"/* zconf.h -- configuration of the zlib compression library; * Copyright (C) 1995-2013 Jean-loup Gailly.; * For conditions of distribution and use, see copyright notice in zlib.h; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h:14,config,configuration,14,builtins/zlib/zconf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h,2,['config'],['configuration']
Modifiability,"/* zutil.h -- internal interface and configuration of the compression library; * Copyright (C) 1995-2005 Jean-loup Gailly.; * For conditions of distribution and use, see copyright notice in zlib.h; */; /* WARNING: this file should *not* be used by applications. It is; part of the implementation of the compression library and is; subject to change. Applications should only use zlib.h.; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zutil.h:37,config,configuration,37,graf2d/asimage/src/libAfterImage/zlib/zutil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/zlib/zutil.h,1,['config'],['configuration']
Modifiability,"/* zutil.h -- internal interface and configuration of the compression library; * Copyright (C) 1995-2013 Jean-loup Gailly.; * For conditions of distribution and use, see copyright notice in zlib.h; */; /* WARNING: this file should *not* be used by applications. It is; part of the implementation of the compression library and is; subject to change. Applications should only use zlib.h.; */; /* @(#) $Id$ */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.h:37,config,configuration,37,builtins/zlib/zutil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zutil.h,1,['config'],['configuration']
Modifiability,"/*! After calling the ProcesOptions(), all of the options are parsed,; * so using the parsed options, and given the architecture and the; * type of the layers, we build the Deep Network passed as; * a reference in the function. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodDL.h:152,layers,layers,152,tmva/tmva/inc/TMVA/MethodDL.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodDL.h,1,['layers'],['layers']
Modifiability,"/*! Function for adding Compression layer in the Deep Neural Network,; * with given number of visibleUnits and hiddenUnits. It compresses the input units; * taking weights and biases from prev layers. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h:193,layers,layers,193,tmva/tmva/inc/TMVA/DNN/DeepNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h,1,['layers'],['layers']
Modifiability,"/*! Function for adding Reconstruction layer in the Deep Neural Network,; * with given number of visibleUnits and hiddenUnits. It reconstructs the input units; * taking weights and biases from prev layers. Same corruptionLevel and dropoutProbability; * must be passed as in corruptionLayer. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h:198,layers,layers,198,tmva/tmva/inc/TMVA/DNN/DeepNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h,1,['layers'],['layers']
Modifiability,/*! Get the layer in the vector of layers at position i */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h:35,layers,layers,35,tmva/tmva/inc/TMVA/DNN/DeepNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h,1,['layers'],['layers']
Modifiability,"/*! LZ4F_getFrameInfo() :; * This function extracts frame parameters (max blockSize, frame checksum, etc.).; * Usage is optional. Objective is to provide relevant information for allocation purposes.; * This function works in 2 situations :; * - At the beginning of a new frame, in which case it will decode this information from `srcBuffer`, and start the decoding process.; * Amount of input data provided must be large enough to successfully decode the frame header.; * A header size is variable, but is guaranteed to be <= LZ4F_HEADER_SIZE_MAX bytes. It's possible to provide more input data than this minimum.; * - After decoding has been started. In which case, no input is read, frame parameters are extracted from dctx.; * The number of bytes consumed from srcBuffer will be updated within *srcSizePtr (necessarily <= original value).; * Decompression must resume from (srcBuffer + *srcSizePtr).; * @return : an hint about how many srcSize bytes LZ4F_decompress() expects for next call,; * or an error code which can be tested using LZ4F_isError(); * note 1 : in case of error, dctx is not modified. Decoding operations can resume from where they stopped.; * note 2 : frame parameters are *copied into* an already allocated LZ4F_frameInfo_t structure.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c:490,variab,variable,490,builtins/lz4/lz4frame.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4frame.c,1,['variab'],['variable']
Modifiability,/*! Remove all layers from the network. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h:15,layers,layers,15,tmva/tmva/inc/TMVA/DNN/DeepNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h,1,['layers'],['layers']
Modifiability,/*! Remove all layers from the network.*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Net.h:15,layers,layers,15,tmva/tmva/inc/TMVA/DNN/Net.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Net.h,1,['layers'],['layers']
Modifiability,/*! Set Dropout probability. Reimplemented for layers supporting droput */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:47,layers,layers,47,tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,1,['layers'],['layers']
Modifiability,"/*! Setters */; // FIXME many of these won't work as the data structure storing activations; // and gradients have not changed in all the layers, also params in layers; // have not changed either",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h:138,layers,layers,138,tmva/tmva/inc/TMVA/DNN/DeepNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h,2,['layers'],['layers']
Modifiability,/*! \brief Constructor of ROperator_GRU from the attributes; *; * \param activation_alpha scaling values used by some activation functions; * \param activation_beta scaling values used by some activation functions; * \param activations activation functions; * \param clip clip threshold; * \param direction direction of processing of the sequneces; * \param hidden_size number of hidden layers; * \param layout data layout; * \param linear_before_reset Linear layer before the reset gate; * \param nameX name of the input tensor; * \param nameW name of the weight tensor; * \param nameR name of the recurrence tensor; * \param nameB name of the bias tensor; * \param nameSequence_lens name of the length of the sequences; * \param nameInitial_h name of the initial value of the hidden states; * \param nameY name of the output; * \param nameY_h name of the last sequence of the output; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/inc/TMVA/ROperator_GRU.hxx:387,layers,layers,387,tmva/sofie/inc/TMVA/ROperator_GRU.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/inc/TMVA/ROperator_GRU.hxx,1,['layers'],['layers']
Modifiability,/*! \brief Constructor of ROperator_LSTM from the attributes; *; * \param activation_alpha scaling values used by some activation functions; * \param activation_beta scaling values used by some activation functions; * \param activations activation functions; * \param clip clip threshold; * \param direction direction of processing of the sequneces; * \param hidden_size number of hidden layers; * \param input_forget forget gate; * \param layout data layout; * \param nameX name of the input tensor; * \param nameW name of the weight tensor; * \param nameR name of the recurrence tensor; * \param nameB name of the bias tensor; * \param nameSequence_lens name of the length of the sequences; * \param nameInitial_h name of the initial value of the hidden states; * \param nameInitial_c name of the initial value of the cell states; * \param nameP name of the peepholes tensor; * \param nameY name of the output; * \param nameY_h name of the last sequence of the output; * \param nameY_c name of the last sequence of the cell states; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/inc/TMVA/ROperator_LSTM.hxx:388,layers,layers,388,tmva/sofie/inc/TMVA/ROperator_LSTM.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/inc/TMVA/ROperator_LSTM.hxx,1,['layers'],['layers']
Modifiability,/*! \brief Constructor of ROperator_RNN from the attributes; *; * \param activation_alpha scaling values used by some activation functions; * \param activation_beta scaling values used by some activation functions; * \param activations activation functions; * \param clip clip threshold; * \param direction direction of processing of the sequneces; * \param hidden_size number of hidden layers; * \param layout data layout; * \param nameX name of the input tensor; * \param nameW name of the weight tensor; * \param nameR name of the recurrence tensor; * \param nameB name of the bias tensor; * \param nameSequence_lens name of the length of the sequences; * \param nameInitial_h name of the initial value of the hidden states; * \param nameY name of the output; * \param nameY_h name of the last sequence of the output; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/inc/TMVA/ROperator_RNN.hxx:387,layers,layers,387,tmva/sofie/inc/TMVA/ROperator_RNN.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/sofie/inc/TMVA/ROperator_RNN.hxx,1,['layers'],['layers']
Modifiability,"/*! \brief RMinimizer class.; *; * Minimizer class that uses the ROOT/R interface to pass functions and minimize them in R.; * ; * The class implements the ROOT::Math::Minimizer interface and can be instantiated using the ; * ROOT plugin manager (plugin name is ""RMinimizer""). The various minimization algorithms ; * (BFGS, Nelder-Mead, SANN, etc..) can be passed as an option. ; * The default algorithm is BFGS.; *; * The library for this and future R/ROOT classes is currently libRtools.so; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/rtools/inc/Math/RMinimizer.h:231,plugin,plugin,231,math/rtools/inc/Math/RMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/rtools/inc/Math/RMinimizer.h,2,['plugin'],['plugin']
Modifiability,/*! \brief c'tor of LayerData; *; * C'tor of LayerData for all layers which are not the input layer; Used during the application of the DNN; *; * \param size size of the layer; * \param itWeightBegin indicates the start of the weights for this layer on the weight vector; * \param activationFunction indicates the activation function for this layer; * \param eModeOutput indicates a potential tranformation of the output values before further computation; * DIRECT does not further transformation; SIGMOID applies a sigmoid transformation to each; * output value (to create a probability); SOFTMAX applies a softmax transformation to all; * output values (mutually exclusive probability); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:63,layers,layers,63,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,1,['layers'],['layers']
Modifiability,/*! \brief c'tor of LayerData; *; * C'tor of LayerData for all layers which are not the input layer; Used during the training of the DNN; *; * \param size size of the layer; * \param itWeightBegin indicates the start of the weights for this layer on the weight vector; * \param itGradientBegin indicates the start of the gradients for this layer on the gradient vector; * \param activationFunction indicates activation functions for this layer; * \param inverseActivationFunction indicates the inverse activation functions for this layer; * \param eModeOutput indicates a potential tranformation of the output values before further computation; * DIRECT does not further transformation; SIGMOID applies a sigmoid transformation to each; * output value (to create a probability); SOFTMAX applies a softmax transformation to all; * output values (mutually exclusive probability); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:63,layers,layers,63,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,1,['layers'],['layers']
Modifiability,/*! \brief executes one training cycle; *; * \param minimizer the minimizer to be used; * \param weights the weight vector to be used; * \param itPatternBegin the pattern to be trained with; * \param itPatternEnd the pattern to be trained with; * \param settings the settings for the training; * \param dropContainer the configuration for DNN drop-out; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:321,config,configuration,321,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,1,['config'],['configuration']
Modifiability,/*! \brief neural net; *; * holds the structure of all layers and some data for the whole net; * does not know the layer data though (i.e. values of the nodes and weights); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:55,layers,layers,55,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,1,['layers'],['layers']
Modifiability,/*! \brief set the drop-out configuration (layer-wise); *; * \param begin begin of an array or vector denoting the drop-out probabilities for each layer; * \param end end of an array or vector denoting the drop-out probabilities for each layer; * \param _dropRepetitions denotes after how many repetitions the drop-out setting (which nodes are dropped out exactly) is changed; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:28,config,configuration,28,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,1,['config'],['configuration']
Modifiability,"/*! \class TMVA::ClassificationResult; * Class to save the results of the classifier.; * Every machine learning method booked have an object for the results; * in the classification process, in this class is stored the mvas,; * data loader name and ml method name and title.; * You can to display the results calling the method Show, get the ROC-integral with the; * method GetROCIntegral or get the TMVA::ROCCurve object calling GetROC.; \ingroup TMVA; */; /*! \class TMVA::Classification; * Class to perform two class classification.; * The first step before any analysis is to prepare the data,; * to do that you need to create an object of TMVA::DataLoader,; * in this object you need to configure the variables and the number of events; * to train/test.; * The class TMVA::Experimental::Classification needs a TMVA::DataLoader object,; * optional a TFile object to save the results and some extra options in a string; * like ""V:Color:Transformations=I;D;P;U;G:Silent:DrawProgressBar:ModelPersistence:Jobs=2"" where:; * V = verbose output; * Color = coloured screen output; * Silent = batch mode: boolean silent flag inhibiting any output from TMVA; * Transformations = list of transformations to test.; * DrawProgressBar = draw progress bar to display training and testing.; * ModelPersistence = to save the trained model in xml or serialized files.; * Jobs = number of ml methods to test/train in parallel using MultiProc, requires to call Evaluate method.; * Basic example.; * \code; void classification(UInt_t jobs = 2); {; TMVA::Tools::Instance();. TFile *input(0);; TString fname = ""./tmva_class_example.root"";; if (!gSystem->AccessPathName(fname)) {; input = TFile::Open(fname); // check if file in local directory exists; } else {; TFile::SetCacheFileDir(""."");; input = TFile::Open(""http://root.cern/files/tmva_class_example.root"", ""CACHEREAD"");; }; if (!input) {; std::cout << ""ERROR: could not open data file"" << std::endl;; exit(1);; }. // Register the training and test trees. TTree *si",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Classification.h:692,config,configure,692,tmva/tmva/inc/TMVA/Classification.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Classification.h,2,"['config', 'variab']","['configure', 'variables']"
Modifiability,"/*! \class TMVA::MethodHMatrix; \ingroup TMVA. H-Matrix method, which is implemented as a simple comparison of; chi-squared estimators for signal and background, taking into; account the linear correlations between the input variables. This MVA approach is used by the \f$D\emptyset \f$ collaboration (FNAL) for the; purpose of electron identification (see, eg.,; [hep-ex/9507007](http://arxiv.org/abs/hep-ex/9507007)).; As it is implemented in TMVA, it is usually equivalent or worse than; the Fisher-Mahalanobis discriminant, and it has only been added for; the purpose of completeness.; Two chi^2 estimators are computed for an event, each one; for signal and background, using the estimates for the means and; covariance matrices obtained from the training sample:<br>. \f[; \chi^2_\eta = (x_\eta(i) - \bar{x}_\eta)^T C_\eta^{-1} (x_\eta(i) - \bar{x}_\eta), \eta = S,B; \f]. TMVA then uses as normalised analyser for event \f$ (i) \f$ the ratio:; \f[; \frac{(chi_S(i)^2 - chi_B^2(i))}{(chi_S^2(i) + chi_B^2(i))}; \f]; */; ////////////////////////////////////////////////////////////////////////////////; /// standard constructor for the H-Matrix method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodHMatrix.cxx:225,variab,variables,225,tmva/tmva/src/MethodHMatrix.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodHMatrix.cxx,1,['variab'],['variables']
Modifiability,"/*! \class TMVA::kNN::Node; \ingroup TMVA; This file contains binary tree and global function template; that searches tree for k-nearest neigbors. Node class template parameter T has to provide these functions:; rtype GetVar(UInt_t) const;; - rtype is any type convertible to Float_t; UInt_t GetNVar(void) const;; rtype GetWeight(void) const;; - rtype is any type convertible to Double_t. Find function template parameter T has to provide these functions:; (in addition to above requirements); rtype GetDist(Float_t, UInt_t) const;; - rtype is any type convertible to Float_t; rtype GetDist(const T &) const;; - rtype is any type convertible to Float_t. where T::GetDist(Float_t, UInt_t) <= T::GetDist(const T &); for any pair of events and any variable number for these events; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NodekNN.h:745,variab,variable,745,tmva/tmva/inc/TMVA/NodekNN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NodekNN.h,1,['variab'],['variable']
Modifiability,/*!; * ValueProfRecordClosure Interface implementation for InstrProfRecord; * class. These C wrappers are used as adaptors so that C++ code can be; * invoked as callbacks.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/InstrProf.cpp:114,adapt,adaptors,114,interpreter/llvm-project/llvm/lib/ProfileData/InstrProf.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/InstrProf.cpp,1,['adapt'],['adaptors']
Modifiability,"/** ********************************************************************************************; \ingroup HistFactory. <p>; This is a package that creates a RooFit probability density function from ROOT histograms; of expected distributions and histograms that represent the +/- 1 sigma variations; from systematic effects. The resulting probability density function can then be used; with any of the statistical tools provided within RooStats, such as the profile; likelihood ratio, Feldman-Cousins, etc. In this version, the model is directly; fed to a likelihood ratio test, but it needs to be further factorized.</p>. <p>; The user needs to provide histograms (in picobarns per bin) and configure the job; with XML. The configuration XML is defined in the file `$ROOTSYS/config/HistFactorySchema.dtd`, but essentially; it is organized as follows (see the examples in `${ROOTSYS}/tutorials/histfactory/`)</p>. <ul>; <li> a top level 'Combination' that is composed of:</li>; <ul>; <li> several 'Channels' (eg. ee, emu, mumu), which are composed of:</li>; <ul>; <li> several 'Samples' (eg. signal, bkg1, bkg2, ...), each of which has:</li>; <ul>; <li> a name</li>; <li> if the sample is normalized by theory (eg N = L*sigma) or not (eg. data driven)</li>; <li> a nominal expectation histogram</li>; <li> a named 'Normalization Factor' (which can be fixed or allowed to float in a fit)</li>; <li> several 'Overall Systematics' in normalization with:</li>; <ul>; <li> a name</li>; <li> +/- 1 sigma variations (eg. 1.05 and 0.95 for a 5% uncertainty)</li>; </ul>; <li> several 'Histogram Systematics' in shape with:</li>; <ul>; <li> a name (which can be shared with the OverallSyst if correlated)</li>; <li> +/- 1 sigma variational histograms</li>; </ul>; </ul>; </ul>; <li> several 'Measurements' (corresponding to a full fit of the model) each of which specifies</li>; <ul>; <li> a name for this fit to be used in tables and files</li>; <li> what is the luminosity associated to the measurement in pi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx:692,config,configure,692,roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx,3,['config'],"['config', 'configuration', 'configure']"
Modifiability,"/** ====================================================================; * @license; * jsPDF XMP metadata plugin; * Copyright (c) 2016 Jussi Utunen, u-jussi@suomi24.fi; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/jspdf.mjs:107,plugin,plugin,107,js/modules/jspdf.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/jspdf.mjs,1,['plugin'],['plugin']
Modifiability,"/** ====================================================================; * @license; * jsPDF XMP metadata plugin; * Copyright (c) 2016 Jussi Utunen, u-jussi@suomi24.fi; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */; /**; * @name xmp_metadata; * @module; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:107,plugin,plugin,107,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['plugin'],['plugin']
Modifiability,"/** @class Job; *; * @brief interface class for defining the actual work that must be done; *; * Think of ""job"" as in ""employment"", e.g. the job of a baker, which; * involves *tasks* like baking and selling bread. The Job must define the; * tasks through its execution (evaluate_task), based on a task index argument.; *; * Classes inheriting from Job must implement the pure virtual methods:; * - void evaluate_task(std::size_t task); * - void send_back_task_result_from_worker(std::size_t task); * - void receive_task_result_on_master(const zmq::message_t & message); *; * An example/reference implementation can be found in test_Job.cxx.; *; * Most Jobs will also want to override the virtual update_state() function.; * This function can be used to send and receive state from master to worker.; * In the worker loop, when something is received over the ZeroMQ ""SUB"" socket,; * update_state() is called to put the received data into the right places,; * thus updating for instance parameter values on the worker that were updated; * since the last call on the master side.; *; * ## Message protocol; *; * One simple rule must be upheld for the messages that the implementer will; * send with 'send_back_task_result_from_worker' and 'update_state': the first; * part of the message must always be the 'Job''s ID, stored in 'Job::id'.; * The rest of the message, i.e. the actual data to be sent, is completely up; * to the implementation. Note that on the receiving end, i.e. in the; * implementation of 'receive_task_result_on_master', one will get the whole; * message, but the 'Job' ID part will already have been identified in the; * 'JobManager', so one needn't worry about it further inside; * 'Job::receive_task_result_on_master' (it is already routed to the correct; * 'Job'). The same goes for the receiving end of 'update_state', except that; * update_state is routed from the 'worker_loop', not the 'JobManager'.; *; * A second rule applies to 'update_state' messages: the second part mus",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx:332,inherit,inheriting,332,roofit/multiprocess/src/Job.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Job.cxx,1,['inherit'],['inheriting']
Modifiability,"/** @defgroup API Public API; * Contains API for constrained and conforming Delaunay triangulations; */; /// @{; /**; * Type used for storing layer depths for triangles; * @note LayerDepth should support 60K+ layers, which could be to much or; * too little for some use cases. Feel free to re-define this typedef.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/CDT.h:209,layers,layers,209,math/mathcore/src/CDT/CDT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/CDT.h,1,['layers'],['layers']
Modifiability,"/** @fn RooStats::ModelConfig::fitTo(); *; * Wrapper around RooAbsPdf::fitTo(), where; * the pdf and some configuration options are retrieved from the ModelConfig.; *; * See ModelConfig::createNLL() for more information.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/ModelConfig.cxx:106,config,configuration,106,roofit/roofitcore/src/ModelConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/ModelConfig.cxx,1,['config'],['configuration']
Modifiability,"/** @license; * MIT license.; * Copyright (c) 2012 Willow Systems Corporation, https://github.com/willowsystems; * 2014 Diego Casorran, https://github.com/diegocr; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */; /**; * jsPDF split_text_to_size plugin; *; * @name split_text_to_size; * @module; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:1350,plugin,plugin,1350,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['plugin'],['plugin']
Modifiability,/** @license; * jsPDF Autoprint Plugin; *; * Licensed under the MIT License.; * http://opensource.org/licenses/mit-license; */; /**; * @name autoprint; * @module; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:32,Plugin,Plugin,32,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Plugin'],['Plugin']
Modifiability,"/** @license; * jsPDF addImage plugin; * Copyright (c) 2012 Jason Siefken, https://github.com/siefkenj/; * 2013 Chris Dowling, https://github.com/gingerchris; * 2013 Trinh Ho, https://github.com/ineedfat; * 2013 Edwin Alejandro Perez, https://github.com/eaparango; * 2013 Norah Smith, https://github.com/burnburnrocket; * 2014 Diego Casorran, https://github.com/diegocr; * 2014 James Robb, https://github.com/jamesbrobb; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:31,plugin,plugin,31,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,3,['plugin'],['plugin']
Modifiability,"/** @license; jsPDF standard_fonts_metrics plugin; * Copyright (c) 2012 Willow Systems Corporation, https://github.com/willowsystems; * MIT license.; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; * ; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; * ; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/modules/jspdf.mjs:43,plugin,plugin,43,js/modules/jspdf.mjs,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/modules/jspdf.mjs,1,['plugin'],['plugin']
Modifiability,"/** @license; jsPDF standard_fonts_metrics plugin; * Copyright (c) 2012 Willow Systems Corporation, https://github.com/willowsystems; * MIT license.; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; * ; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; * ; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */; /**; * This file adds the standard font metrics to jsPDF.; *; * Font metrics data is reprocessed derivative of contents of; * ""Font Metrics for PDF Core 14 Fonts"" package, which exhibits the following copyright and license:; *; * Copyright (c) 1989, 1990, 1991, 1992, 1993, 1997 Adobe Systems Incorporated. All Rights Reserved.; *; * This file and the 14 PostScript(R) AFM files it accompanies may be used,; * copied, and distributed for any purpose and without charge, with or without; * modification, provided that all copyright notices are retained; that the AFM; * files are not distributed without this file; that all modifications to this; * file or any of the AFM files are prominently noted",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:43,plugin,plugin,43,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['plugin'],['plugin']
Modifiability,/** @name --- Static methods --- **/; /**; Computes the numerical derivative of a function f at a point x using an adaptive central; difference algorithm with a step size h; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLDerivator.h:115,adapt,adaptive,115,math/mathmore/src/GSLDerivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLDerivator.h,1,['adapt'],['adaptive']
Modifiability,"/** @name --- Static methods ---; This methods don't require to use a Derivator object, and are designed to be used in; fast calculation. Error and status code cannot be retrieved in this case; */; /**; Computes the numerical derivative of a function f at a point x.; It uses Derivator::EvalCentral to compute the derivative using an; adaptive central difference algorithm with a step size h; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h:335,adapt,adaptive,335,math/mathmore/inc/Math/Derivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h,1,['adapt'],['adaptive']
Modifiability,"/** @name Backward Propagation (Dense Layers); * Low-level functions required for the forward propagation of activations; * through the network.; */; ///@{; /** Perform the complete backward propagation step. If the provided; * \p activationGradientsBackward matrix is not empty, compute the; * gradients of the objective function with respect to the activations; * of the previous layer (backward direction).; * Also compute the weight and the bias gradients. Modifies the values; * in \p df and thus produces only a valid result, if it is applied the; * first time after the corresponding forward propagation has been per-; * formed. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h:38,Layers,Layers,38,tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,3,['Layers'],['Layers']
Modifiability,/** @name interface inherited from IFunction */; /**; Clone the wrapper but not the original function; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Math/WrappedTF1.h:20,inherit,inherited,20,hist/hist/inc/Math/WrappedTF1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Math/WrappedTF1.h,1,['inherit'],['inherited']
Modifiability,/** @name interface inherited from IParamFunction */; /**; Clone the wrapper but not the original function; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Math/WrappedMultiTF1.h:20,inherit,inherited,20,hist/hist/inc/Math/WrappedMultiTF1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Math/WrappedMultiTF1.h,1,['inherit'],['inherited']
Modifiability,"/** @name interface inherited from IParamFunction */; /// get the parameter values (return values cachen inside, those inside TF1 might be different)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Math/WrappedTF1.h:20,inherit,inherited,20,hist/hist/inc/Math/WrappedTF1.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/Math/WrappedTF1.h,1,['inherit'],['inherited']
Modifiability,/** @summary Check if it is dummy variable */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:34,variab,variable,34,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['variab'],['variable']
Modifiability,/** @summary Check if user-defined tooltip function was configured; * @return {boolean} flag is user tooltip handler was configured */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:56,config,configured,56,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['config'],['configured']
Modifiability,"/** @summary Check pad ranges when drawing of frame axes will be performed; * @desc Only if histogram is main painter and drawn with SAME option, pad range can be used; * In all other cases configured range must be derived from histogram itself */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:190,config,configured,190,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,/** @summary Configure axis painter; * @desc Axis can be drawn inside frame <g> group with offset to 0 point for the frame; * Therefore one should distinguish when calculated coordinates used for axis drawing itself or for calculation of frame coordinates; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Config,Configure,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['Config'],['Configure']
Modifiability,/** @summary Configure custom interactive handlers for ratio plot; * @desc Should work for both new and old code */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Config,Configure,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Config'],['Configure']
Modifiability,"/** @summary Configure depth method, used for render order production.; * @param {string} method - Allowed values: 'ray', 'box','pnt', 'size', 'dflt' */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Config,Configure,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Config'],['Configure']
Modifiability,/** @summary Configure frame axes ranges */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Config,Configure,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Config'],['Configure']
Modifiability,/** @summary Configure hist painter which creates axis - to be able submit execs; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Config,Configure,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Config'],['Configure']
Modifiability,/** @summary Configure indices */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Config,Configure,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Config'],['Configure']
Modifiability,"/** @summary Configure mouse delay, required for complex geometries */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Config,Configure,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Config'],['Configure']
Modifiability,"/** @summary Configure only base parameters, later same handle will be used for drawing */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Config,Configure,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Config'],['Configure']
Modifiability,/** @summary Configure secondary frame axes ranges */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Config,Configure,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Config'],['Configure']
Modifiability,/** @summary Configure special style used for highlight or dragging elements; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Config,Configure,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Config'],['Configure']
Modifiability,/** @summary Configure tooltip enable flag for painter; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Config,Configure,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Config'],['Configure']
Modifiability,"/** @summary Configure user-defined click handler; * @desc Function will be called every time when frame click was performed; * As argument, tooltip object with selected bins will be provided; * If handler function returns true, default handling of click will be disabled */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Config,Configure,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['Config'],['Configure']
Modifiability,"/** @summary Configure user-defined click handler; * @desc Function will be called every time when frame click was performed; * As argument, tooltip object with selected bins will be provided; * If handler function returns true, default handling of click will be disabled; * @param {function} handler - function called when mouse click is done */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Config,Configure,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Config'],['Configure']
Modifiability,"/** @summary Configure user-defined context menu for the object; * @desc fillmenu_func will be called when context menu is activated; * Arguments fillmenu_func are (menu,kind); * First is menu object, second is object sub-element like axis 'x' or 'y'; * Function should return promise with menu when items are filled; * @param {function} fillmenu_func - function to fill custom context menu for object */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Config,Configure,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Config'],['Configure']
Modifiability,"/** @summary Configure user-defined dblclick handler; * @desc Function will be called every time when double click was called; * As argument, tooltip object with selected bins will be provided; * If handler function returns true, default handling of dblclick (unzoom) will be disabled */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Config,Configure,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['Config'],['Configure']
Modifiability,"/** @summary Configure user-defined dblclick handler; * @desc Function will be called every time when double click was called; * As argument, tooltip object with selected bins will be provided; * If handler function returns true, default handling of dblclick (unzoom) will be disabled; * @param {function} handler - function called when mouse double click is done */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Config,Configure,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Config'],['Configure']
Modifiability,"/** @summary Configure user-defined tooltip handler; * @desc Hook for the users to get tooltip information when mouse cursor moves over frame area; * Handler function will be called every time when new data is selected; * when mouse leave frame area, handler(null) will be called; * @param {function} handler - function called when tooltip is produced; * @param {number} [tmout = 100] - delay in ms before tooltip delivered */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Config,Configure,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Config'],['Configure']
Modifiability,/** @summary Configure xhr.withCredentials = true when submitting http requests from JSROOT */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Config,Configure,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Config'],['Configure']
Modifiability,"/** @summary Configures Latex usage, see {@link constants.Latex} for possible values */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Config,Configures,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Config'],['Configures']
Modifiability,/** @summary Configures dark mode for the GUI */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Config,Configures,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Config'],['Configures']
Modifiability,/** @summary Configures keyboard key press handling; * @desc Can be disabled to prevent keys handling in complex HTML layouts; * @default true */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Config,Configures,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Config'],['Configures']
Modifiability,/** @summary Configures monitoring interval; * @param {number} interval - repetition interval in ms; * @param {boolean} flag - initial monitoring state */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Config,Configures,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Config'],['Configures']
Modifiability,/** @summary Convert Date object into string used configured time zone; * @desc Time zone stored in settings.TimeZone */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:50,config,configured,50,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,"/** @summary Create SVG image for provided object.; * @desc Function especially useful in Node.js environment to generate images for; * supported ROOT classes; * @param {object} args - function settings; * @param {object} args.object - object for the drawing; * @param {string} [args.option] - draw options; * @param {number} [args.width = 1200] - image width; * @param {number} [args.height = 800] - image height; * @param {boolean} [args.use_canvas_size = false] - if configured used size stored in TCanvas object; * @return {Promise} with svg code; * @example; * // how makeSVG can be used in node.js; * import { openFile, makeSVG } from 'jsroot';; * let file = await openFile('https://root.cern/js/files/hsimple.root');; * let object = await file.readObject('hpxpy;1');; * let svg = await makeSVG({ object, option: 'lego2,pal50', width: 1200, height: 800 }); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:470,config,configured,470,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,"/** @summary Create SVG/PNG/JPEG image for provided object.; * @desc Function especially useful in Node.js environment to generate images for; * supported ROOT classes, but also can be used from web browser; * @param {object} args - function settings; * @param {object} args.object - object for the drawing; * @param {string} [args.format = 'svg'] - image format like 'svg' (default), 'png' or 'jpeg'; * @param {string} [args.option = ''] - draw options; * @param {number} [args.width = 1200] - image width; * @param {number} [args.height = 800] - image height; * @param {boolean} [args.as_buffer = false] - returns image as Buffer instance, can store directly to file; * @param {boolean} [args.use_canvas_size = false] - if configured used size stored in TCanvas object; * @return {Promise} with image code - svg as is, png/jpeg as base64 string or buffer (if as_buffer) specified; * @example; * // how makeImage can be used in node.js; * import { openFile, makeImage } from 'jsroot';; * let file = await openFile('https://root.cern/js/files/hsimple.root');; * let object = await file.readObject('hpxpy;1');; * let png64 = await makeImage({ format: 'png', object, option: 'colz', width: 1200, height: 800 });; * let pngbuf = await makeImage({ format: 'png', as_buffer: true, object, option: 'colz', width: 1200, height: 800 }); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:725,config,configured,725,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,/** @summary Create configured camera */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:20,config,configured,20,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,/** @summary Creates configured MDIDisplay object; * @return {Promise} when ready; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:21,config,configured,21,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,"/** @summary Define rendering kind which will be used for rendering of 3D elements; * @param {value} [render3d] - preconfigured value, will be used if applicable; * @param {value} [is_batch] - is batch mode is configured; * @return {value} - rendering kind, see constants.Render3D; * @private */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:210,config,configured,210,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,"/** @summary Draw axes if configured, otherwise just remove completely */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:26,config,configured,26,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,/** @summary Draw configured axes on the frame; * @desc axes can be drawn only for main histogram */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:18,config,configured,18,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,/** @summary Draw item name on canvas if gStyle.fOptFile is configured; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:60,config,configured,60,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,/** @summary Draw secondary configured axes */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:28,config,configured,28,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,/** @summary Evaluate RColor using attribute storage and configured RStyle */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:57,config,configured,57,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,/** @summary Evaluate v7 attributes using fAttr storage and configured RStyle */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:60,config,configured,60,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,/** @summary Extend custom geometry bounding box */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,Extend,Extend,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Extend'],['Extend']
Modifiability,"/** @summary Get object item with specified name; * @desc depending from provided option, same item can generate different object types; * @param {Object} arg - item name or config object; * @param {string} arg.name - item name; * @param {Object} arg.item - or item itself; * @param {string} options - supposed draw options; * @return {Promise} with object like { item, obj, itemname }; * @private */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:174,config,config,174,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['config']
Modifiability,/** @summary Get variable */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:17,variab,variable,17,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['variab'],['variable']
Modifiability,/** @summary Is X/Y swap is configured */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:28,config,configured,28,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,"/** @summary Method selects current pad name; * @param {string} [new_name] - when specified, new current pad name will be configured; * @return {string} previous selected pad or actual pad when new_name not specified; * @private; * @deprecated to be removed in v8 */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:122,config,configured,122,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,"/** @summary Parse variable; * @desc when only_branch specified, its placed in the front of the expression */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:19,variab,variable,19,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['variab'],['variable']
Modifiability,"/** @summary Produce variable; * @desc after reading tree branches into the object, calculate variable value */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:21,variab,variable,21,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['variab'],['variable']
Modifiability,"/** @summary Provides 3D rendering configuration from histogram painter; * @return {Object} with scene, renderer and other attributes; * @private */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:35,config,configuration,35,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configuration']
Modifiability,/** @summary Read font file from some pre-configured locations; * @return {Promise} with base64 code of the font; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:42,config,configured,42,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,/** @summary Reload configuration */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js:20,config,configuration,20,ui5/tree/controller/TreeViewer.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js,1,['config'],['configuration']
Modifiability,/** @summary Return true when GMT option configured in time format; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:41,config,configured,41,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,/** @summary Returns alternating size - which defined by sz1 variable */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:61,variab,variable,61,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['variab'],['variable']
Modifiability,/** @summary Returns array with supported draw options as configured in draw.mjs; * @desc works via pad painter and only when module was loaded */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:58,config,configured,58,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,/** @summary Returns configured layout */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:21,config,configured,21,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,/** @summary Returns configured maximal number of visible nodes */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:21,config,configured,21,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,/** @summary Returns configured monitoring interval in ms */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:21,config,configured,21,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,/** @summary Returns true if canvas configured with grayscale; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:36,config,configured,36,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['config'],['configured']
Modifiability,"/** @summary Set axes ranges for drawing, check configured attributes if range already specified */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:48,config,configured,48,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,/** @summary Set geo painter configuration - used for material creation */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:29,config,configuration,29,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configuration']
Modifiability,"/** @summary Set painter, stored in first child element; * @desc Only make sense after first drawing is completed and any child element add to configured DOM; * @protected */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:143,config,configured,143,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configured']
Modifiability,/** @summary Should be called when configuration of highlight is changed */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:35,config,configuration,35,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configuration']
Modifiability,/** @summary Should be called when configuration of particular axis is changed */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:35,config,configuration,35,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configuration']
Modifiability,/** @summary Should be invoked when light configuration changed */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:42,config,configuration,42,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configuration']
Modifiability,"/** @summary handler for configuration changes,; * @desc after short timeout send updated config to the server */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:25,config,configuration,25,ui5/geom/controller/GeomViewer.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js,2,['config'],"['config', 'configuration']"
Modifiability,/** @summary processing viewer configuration */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js:31,config,configuration,31,ui5/tree/controller/TreeViewer.controller.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js,1,['config'],['configuration']
Modifiability,/** @summary variable used to keep methods for known classes; * @private */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:13,variab,variable,13,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['variab'],['variable']
Modifiability,/** A variable. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:6,variab,variable,6,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['variab'],['variable']
Modifiability,"/** API class for minimization using Variable Metric technology (""MIGRAD"");; allows for user interaction: set/change parameters, do minimization,; change parameters, re-do minimization etc.;; also used by MnMinos and MnContours;; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnMinimize.h:37,Variab,Variable,37,math/minuit2/inc/Minuit2/MnMinimize.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/MnMinimize.h,1,['Variab'],['Variable']
Modifiability,/** Above functions extended to vectors */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h:20,extend,extended,20,tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Cpu.h,4,['extend'],['extended']
Modifiability,/** Adaptor class for mixing declarations with statements and; * expressions.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:4,Adapt,Adaptor,4,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['Adapt'],['Adaptor']
Modifiability,/** An Objective-C instance variable. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:28,variab,variable,28,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['variab'],['variable']
Modifiability,"/** Compute multiple values using optimized functions.; This method creates a Batches object and passes it to the correct compute function.; In case Implicit Multithreading is enabled, the events to be processed are equally; divided among the tasks to be generated and computed in parallel.; \param computer An enum specifying the compute function to be used.; \param output The array where the computation results are stored.; \param vars A std::span containing pointers to the variables involved in the computation.; \param extraArgs An optional std::span containing extra double values that may participate in the computation. **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx:479,variab,variables,479,roofit/batchcompute/src/RooBatchCompute.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/RooBatchCompute.cxx,1,['variab'],['variables']
Modifiability,/** Computes the preferred alignment of a global variable in bytes for a target.; See the method llvm::DataLayout::getPreferredAlignment. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h:49,variab,variable,49,interpreter/llvm-project/llvm/include/llvm-c/Target.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h,1,['variab'],['variable']
Modifiability,/** Configuration parameters which can be configured on the client; * Send as is to-from client */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomData.hxx:4,Config,Configuration,4,geom/webviewer/inc/ROOT/RGeomData.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomData.hxx,2,"['Config', 'config']","['Configuration', 'configured']"
Modifiability,/** Configure if working path in dialog can be changed via gui elements */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/inc/ROOT/RFileDialog.hxx:4,Config,Configure,4,gui/browserv7/inc/ROOT/RFileDialog.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/inc/ROOT/RFileDialog.hxx,1,['Config'],['Configure']
Modifiability,/** Configure receiver for scene-respective events. Following event used:; * onSceneChanged */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:4,Config,Configure,4,ui5/eve7/lib/EveManager.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js,1,['Config'],['Configure']
Modifiability,"/** Configures default hierarchy browser visibility, only has effect before showing web window */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomViewer.hxx:4,Config,Configures,4,geom/webviewer/inc/ROOT/RGeomViewer.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomViewer.hxx,2,['Config'],['Configures']
Modifiability,/** Configures maximal number of visible nodes and faces */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomViewer.hxx:4,Config,Configures,4,geom/webviewer/inc/ROOT/RGeomViewer.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomViewer.hxx,1,['Config'],['Configures']
Modifiability,/** Configures maximal visible level */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomViewer.hxx:4,Config,Configures,4,geom/webviewer/inc/ROOT/RGeomViewer.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/webviewer/inc/ROOT/RGeomViewer.hxx,1,['Config'],['Configures']
Modifiability,"/** Construct a convolutional neural network with one convolutional layer,; * one pooling layer and two fully connected layers. The dimensions are; * predetermined. The activation functions are chosen randomly. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/Utility.h:120,layers,layers,120,tmva/tmva/test/DNN/Utility.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/Utility.h,1,['layers'],['layers']
Modifiability,"/** Construct a linear convolutional neural network with one convolutional layer,; * one pooling layer and two fully connected layers. The dimensions are; * predetermined. The activation functions are all linear. */; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/Utility.h:127,layers,layers,127,tmva/tmva/test/DNN/Utility.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/Utility.h,1,['layers'],['layers']
Modifiability,"/** Construct a random linear neural network with up to five layers.*/; //______________________________________________________________________________",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/Utility.h:61,layers,layers,61,tmva/tmva/test/DNN/Utility.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/DNN/Utility.h,1,['layers'],['layers']
Modifiability,/** Full model used to configure openui5 widget */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/panel/webpanel.cxx:23,config,configure,23,tutorials/webgui/panel/webpanel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/panel/webpanel.cxx,1,['config'],['configure']
Modifiability,"/** Generic Constructor of multi dimensional Integrator passing a function. By default uses the adaptive integration method. @param f integration function (multi-dim interface); @param type integration type (adaptive, MC methods, etc..); @param absTol desired absolute Error; @param relTol desired relative Error; @param ncall number of function calls (apply only to MC integration methods); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h:96,adapt,adaptive,96,math/mathcore/inc/Math/IntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IntegratorMultiDim.h,2,['adapt'],['adaptive']
Modifiability,"/** LLVMInitializeAllAsmParsers - The main program should call this function if; it wants all asm parsers that LLVM is configured to support, to make them; available via the TargetRegistry. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h:119,config,configured,119,interpreter/llvm-project/llvm/include/llvm-c/Target.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h,1,['config'],['configured']
Modifiability,"/** LLVMInitializeAllAsmPrinters - The main program should call this function if; it wants all asm printers that LLVM is configured to support, to make them; available via the TargetRegistry. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h:121,config,configured,121,interpreter/llvm-project/llvm/include/llvm-c/Target.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h,1,['config'],['configured']
Modifiability,"/** LLVMInitializeAllDisassemblers - The main program should call this function; if it wants all disassemblers that LLVM is configured to support, to make; them available via the TargetRegistry. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h:124,config,configured,124,interpreter/llvm-project/llvm/include/llvm-c/Target.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h,1,['config'],['configured']
Modifiability,/** LLVMInitializeAllTargetInfos - The main program should call this function if; it wants access to all available targets that LLVM is configured to; support. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h:136,config,configured,136,interpreter/llvm-project/llvm/include/llvm-c/Target.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h,1,['config'],['configured']
Modifiability,/** LLVMInitializeAllTargetMCs - The main program should call this function if; it wants access to all available target MC that LLVM is configured to; support. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h:136,config,configured,136,interpreter/llvm-project/llvm/include/llvm-c/Target.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h,1,['config'],['configured']
Modifiability,/** LLVMInitializeAllTargets - The main program should call this function if it; wants to link in all available targets that LLVM is configured to; support. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h:133,config,configured,133,interpreter/llvm-project/llvm/include/llvm-c/Target.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Target.h,1,['config'],['configured']
Modifiability,/** Returns kTRUE if CORS was configured */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/inc/THttpServer.h:30,config,configured,30,net/http/inc/THttpServer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/inc/THttpServer.h,1,['config'],['configured']
Modifiability,"/** Returns true if axis configured as unzoomed, can be specified from client */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RFrame.hxx:25,config,configured,25,graf2d/gpadv7/inc/ROOT/RFrame.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RFrame.hxx,1,['config'],['configured']
Modifiability,/** This is the linkage for static variables and static functions. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:35,variab,variables,35,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['variab'],['variables']
Modifiability,"/** \class AdaptiveIntegratorMultiDim; \ingroup Integration. Class for adaptive quadrature integration in multi-dimensions using rectangular regions.; Algorithm from A.C. Genz, A.A. Malik, An adaptive algorithm for numerical integration over; an N-dimensional rectangular region, J. Comput. Appl. Math. 6 (1980) 295-302. Converted/adapted by R.Brun to C++ from Fortran CERNLIB routine RADMUL (D120); The new code features many changes compared to the Fortran version. Control parameters are:. - \f$ minpts \f$: Minimum number of function evaluations requested. Must not exceed maxpts.; if minpts < 1 minpts is set to \f$ 2^n +2n(n+1) +1 \f$ where n is the function dimension; - \f$ maxpts \f$: Maximum number of function evaluations to be allowed.; \f$ maxpts >= 2^n +2n(n+1) +1 \f$; if \f$ maxpts<minpts \f$, \f$ maxpts \f$ is set to \f$ 10minpts \f$; - \f$ epstol \f$, \f$ epsrel \f$ : Specified relative and absolute accuracy. The integral will stop if the relative error is less than relative tolerance OR the; absolute error is less than the absolute tolerance. The class computes in addition to the integral of the function in the desired interval:. - an estimation of the relative accuracy of the result.; - number of function evaluations performed.; - status code:; 0. Normal exit. . At least minpts and at most maxpts calls to the function were performed.; 1. maxpts is too small for the specified accuracy eps.; The result and relerr contain the values obtainable for the; specified value of maxpts.; 2. size is too small for the specified number MAXPTS of function evaluations.; 3. n<2 or n>15. ### Method:. An integration rule of degree seven is used together with a certain; strategy of subdivision.; For a more detailed description of the method see References. ### Notes:. 1..Multi-dimensional integration is time-consuming. For each rectangular; subregion, the routine requires function evaluations.; Careful programming of the integrand might result in substantial saving; of time.; 2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:11,Adapt,AdaptiveIntegratorMultiDim,11,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,4,"['Adapt', 'adapt']","['AdaptiveIntegratorMultiDim', 'adapted', 'adaptive']"
Modifiability,"/** \class CombinedCalculator; \ingroup Roostats. CombinedCalculator is an interface class for a tools which can produce both RooStats; HypoTestResults and ConfIntervals. The interface currently assumes that any such; calculator can be configured by specifying:. - a model common model (eg. a family of specific models which includes both the null and alternate),; - a data set,; - a set of parameters of which specify the null (including values and const/non-const status),; - a set of parameters of which specify the alternate (including values and const/non-const status),; - a set of parameters of nuisance parameters (including values and const/non-const status). The interface allows one to pass the model, data, and parameters via a workspace; and then specify them with names. The interface also allows one to pass the model,; data, and parameters without a workspace (which is created internally). After configuring the calculator, one only needs to ask GetHypoTest() (which will; return a HypoTestResult pointer) or GetInterval() (which will return an ConfInterval pointer). The concrete implementations of this interface should deal with the details of how; the nuisance parameters are dealt with (eg. integration vs. profiling) and which test-statistic is used (perhaps this should be added to the interface). The motivation for this interface is that we hope to be able to specify the problem; in a common way for several concrete calculators. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/CombinedCalculator.h:236,config,configured,236,roofit/roostats/inc/RooStats/CombinedCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/CombinedCalculator.h,2,['config'],"['configured', 'configuring']"
Modifiability,"/** \class ConfInterval; \ingroup Roostats. ConfInterval is an interface class for a generic interval in the RooStats framework.; Any tool inheriting from IntervalCalculator can return a ConfInterval.; There are many types of intervals, they may be a simple range [a,b] in 1 dimension,; or they may be disconnected regions in multiple dimensions.; So the common interface is simply to ask the interval if a given point ""IsInInterval"".; The Interval also knows what confidence level it was constructed at and the space of; parameters for which it was constructed.; Note, one could use the same class for a Bayesian ""credible interval"". */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ConfInterval.h:139,inherit,inheriting,139,roofit/roostats/inc/RooStats/ConfInterval.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ConfInterval.h,1,['inherit'],['inheriting']
Modifiability,"/** \class Config; *; * \brief Configuration for MultiProcess infrastructure; *; * This class offers user-accessible configuration of the MultiProcess infrastructure.; * Since the rest of the MultiProcess classes are only accessible at compile time, a; * separate class is needed to set configuration. Currently, the configurable parts; * are:; * 1. the number of workers to be deployed,; * 2. the number of event-tasks in LikelihoodJobs,; * 3. and the number of component-tasks in LikelihoodJobs.; *; * The default number of workers is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance. Note that it cannot be set to zero; * and also cannot be changed after JobManager has been instantiated.; *; * Use Config::getDefaultNWorkers() to access the current value.; *; * Under Config::LikelihoodJob, we find two members for the number of tasks to use to; * calculate the range of events and components in parallel, respectively:; * defaultNEventTasks and defaultNComponentTasks. Newly created LikelihoodJobs will; * then use these values at construction time. Note that (like with the number of; * workers) the number cannot be changed for an individual LikelihoodJob after it has; * been created.; *; * Both event- and component-based tasks by default are set to automatic mode using; * the automaticNEventTasks and automaticNComponentTasks constants (both under; * Config::LikelihoodJob as well). These are currently set to zero, but this could; * change. Automatic mode for events means that the number of tasks is set to the; * number of workers in the JobManager, with events divided equally over workers. For; * components, the automatic mode uses just 1 task for all components. These automatic; * modes may change in the future (for instance, we may switch them around).; *; * Under Config::Queue, we can set the desired queue type: FIFO or Priority. This; * setting ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx:11,Config,Config,11,roofit/multiprocess/src/Config.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Config.cxx,8,"['Config', 'config']","['Config', 'Configuration', 'configurable', 'configuration']"
Modifiability,"/** \class HistoFactor; * \ingroup HistFactory; * Configuration for an *un*constrained, coherent shape variation of affected samples.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:50,Config,Configuration,50,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,1,['Config'],['Configuration']
Modifiability,"/** \class HistoSys; * \ingroup HistFactory; * Configuration for a constrained, coherent shape variation of affected samples.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:47,Config,Configuration,47,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,1,['Config'],['Configuration']
Modifiability,"/** \class HypoTestCalculator; \ingroup Roostats. HypoTestCalculator is an interface class for a tools which produce RooStats; HypoTestResults. The interface currently assumes that any hypothesis test; calculator can be configured by specifying:. - a model for the null,; - a model for the alternate,; - a data set,; - a set of parameters of which specify the null (including values and const/non-const status), and; - a set of parameters of which specify the alternate (including values and const/non-const status). The interface allows one to pass the model, data, and parameters via a workspace; and then specify them with names. The interface will be extended so that one does; not need to use a workspace. After configuring the calculator, one only needs to ask GetHypoTest, which will; return a HypoTestResult pointer. The concrete implementations of this interface should deal with the details of; how the nuisance parameters are dealt with (eg. integration vs. profiling) and; which test-statistic is used (perhaps this should be added to the interface). The motivation for this interface is that we hope to be able to specify the; problem in a common way for several concrete calculators. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HypoTestCalculator.h:220,config,configured,220,roofit/roostats/inc/RooStats/HypoTestCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HypoTestCalculator.h,3,"['config', 'extend']","['configured', 'configuring', 'extended']"
Modifiability,"/** \class IntervalCalculator; \ingroup Roostats. IntervalCalculator is an interface class for a tools which produce RooStats; ConfIntervals. The interface currently assumes that any interval calculator can; be configured by specifying:. - a model,; - a data set,; - a set of parameters of interest,; - a set of nuisance parameters (eg. parameters on which the model depends, but are not of interest), and; - a confidence level or size of the test (eg. rate of Type I error). The interface allows one to pass the model, data, and parameters via a workspace; and then specify them with names. The interface will be extended so that one does; not need to use a workspace. After configuring the calculator, one only needs to ask GetInterval, which will; return a ConfInterval pointer. The concrete implementations of this interface should deal with the details of; how the nuisance parameters are dealt with (eg. integration vs. profiling) and; which test-statistic is used (perhaps this should be added to the interface). The motivation for this interface is that we hope to be able to specify the; problem in a common way for several concrete calculators. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/IntervalCalculator.h:211,config,configured,211,roofit/roostats/inc/RooStats/IntervalCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/IntervalCalculator.h,3,"['config', 'extend']","['configured', 'configuring', 'extended']"
Modifiability,"/** \class JobManager; *; * \brief Main point of access for all MultiProcess infrastructure; *; * This class mainly serves as the access point to the multi-process infrastructure; * for 'Job's. It is meant to be used as a singleton that holds and connects the other; * infrastructural classes: the messenger, process manager, worker and queue loops.; *; * It is important that the user of this class, particularly the one that calls; * 'instance()' first, calls 'activate()' soon after, because everything that is; * done in between 'instance()' and 'activate()' will be executed on all processes.; * This may be useful in some cases, but in general, one will probably want to always; * use the 'JobManager' in its full capacity, including the queue and worker loops.; * This is the way the Job class uses this class, see 'Job::get_manager()'.; *; * The default number of processes is set using 'std::thread::hardware_concurrency()'.; * To change it, use 'Config::setDefaultNWorkers()' to set it to a different value; * before creation of a new JobManager instance.; */; // static function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx:956,Config,Config,956,roofit/multiprocess/src/JobManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/JobManager.cxx,1,['Config'],['Config']
Modifiability,/** \class NormFactor; * \ingroup HistFactory; * Configuration for an \a un- constrained overall systematic to scale sample normalisations.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:49,Config,Configuration,49,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,1,['Config'],['Configuration']
Modifiability,/** \class OverallSys; * \ingroup HistFactory; * Configuration for a constrained overall systematic to scale sample normalisations.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:49,Config,Configuration,49,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,1,['Config'],['Configuration']
Modifiability,"/** \class ProofConfig; \ingroup Roostats. Holds configuration options for proof and proof-lite. This class will be expanded in the future to hold more specific configuration; options for the tools in RooStats. Access to TProof::Mgr for configuration is still possible as usual; (e.g. to set Root Version to be used on workers). You can do:. ~~~ {.cpp}; TProof::Mgr(""my.server.url"")->ShowROOTVersions(); TProof::Mgr(""my.server.url"")->SetROOTVersion(""v5-27-06_dbg""); ~~~. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ProofConfig.h:49,config,configuration,49,roofit/roostats/inc/RooStats/ProofConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ProofConfig.h,3,['config'],['configuration']
Modifiability,"/** \class REveSecondarySelectable; \ingroup REve; Semi-abstract interface for classes supporting secondary-selection. Element class that inherits from this, should also implement the; following virtual methods from REveElement:; ~~~ {.cpp}; virtual void UnSelected();; virtual void UnHighlighted();; ~~~; and clear corresponding selection-set from there. To support tooltips for sub-elements, implement:; ~~~ {.cpp}; virtual std::string REveElement::GetHighlightTooltip() const;; ~~~; and return tooltip for the entry in the fHighlightedSet.; There should always be a single entry there.; See EveDigitSet for an example.; */; ////////////////////////////////////////////////////////////////////////////////; /// Process secondary GL selection and populate selected set accordingly.; /*. void REveSecondarySelectable::ProcessGLSelection(TGLSelectRecord& rec); {; if (rec.GetHighlight()); ProcessGLSelectionInternal(rec, fHighlightedSet);; else; ProcessGLSelectionInternal(rec, fSelectedSet);; }. ////////////////////////////////////////////////////////////////////////////////; /// Process secondary GL selection and populate given set accordingly. void REveSecondarySelectable::ProcessGLSelectionInternal(TGLSelectRecord& rec,; SelectionSet_t& sset); {; Int_t id = (rec.GetN() > 1) ? (Int_t) rec.GetItem(1) : -1;. if (sset.empty()); {; if (id >= 0); {; sset.insert(id);; rec.SetSecSelResult(TGLSelectRecord::kEnteringSelection);; }; }; else; {; if (id >= 0); {; if (rec.GetMultiple()); {; if (sset.find(id) == sset.end()); {; sset.insert(id);; rec.SetSecSelResult(TGLSelectRecord::kModifyingInternalSelection);; }; else; {; sset.erase(id);; if (sset.empty()); rec.SetSecSelResult(TGLSelectRecord::kLeavingSelection);; else; rec.SetSecSelResult(TGLSelectRecord::kModifyingInternalSelection);; }; }; else; {; if (sset.size() != 1 || sset.find(id) == sset.end()); {; sset.clear();; sset.insert(id);; rec.SetSecSelResult(TGLSelectRecord::kModifyingInternalSelection);; }; }; }; else; {; if (!rec.GetMulti",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveSecondarySelectable.cxx:138,inherit,inherits,138,graf3d/eve7/src/REveSecondarySelectable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveSecondarySelectable.cxx,1,['inherit'],['inherits']
Modifiability,"/** \class REveVector2T; \ingroup REve; Minimal, templated two-vector.; No TObject inheritance and virtual functions.; Also used in VSD.; */; ////////////////////////////////////////////////////////////////////////////////; /// Normalize the vector to length if current length is non-zero.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveVector.cxx:83,inherit,inheritance,83,graf3d/eve7/src/REveVector.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveVector.cxx,1,['inherit'],['inheritance']
Modifiability,"/** \class REveVector4T; \ingroup REve; Minimal, templated four-vector.; No TObject inheritance and virtual functions.; Also used in VSD.; */; ////////////////////////////////////////////////////////////////////////////////; /// Dump to stdout as ""(x, y, z; t)\n"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveVector.cxx:84,inherit,inheritance,84,graf3d/eve7/src/REveVector.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveVector.cxx,1,['inherit'],['inheritance']
Modifiability,"/** \class REveVectorT; \ingroup REve; Minimal, templated three-vector.; No TObject inheritance and virtual functions.; Also used in VSD.; */; ////////////////////////////////////////////////////////////////////////////////; /// Dump to stdout as ""(x, y, z)\n"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveVector.cxx:84,inherit,inheritance,84,graf3d/eve7/src/REveVector.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/src/REveVector.cxx,1,['inherit'],['inheritance']
Modifiability,/** \class RFont; \ingroup GpadROOT7; \brief Custom font configuration for the RCanvas; \author Sergey Linev <s.linev@gsi.de>; \date 2021-07-02; \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RFont.hxx:57,config,configuration,57,graf2d/primitivesv7/inc/ROOT/RFont.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/primitivesv7/inc/ROOT/RFont.hxx,1,['config'],['configuration']
Modifiability,"/** \class ROOT::RFileDialog; \ingroup rbrowser; Initial message send to client to configure layout; */; /// function signature for file dialog call-backs; /// argument is selected file name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/inc/ROOT/RFileDialog.hxx:83,config,configure,83,gui/browserv7/inc/ROOT/RFileDialog.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/browserv7/inc/ROOT/RFileDialog.hxx,1,['config'],['configure']
Modifiability,"/** \class ROOT::RWebDisplayArgs; \ingroup webdisplay. Holds different arguments for starting browser with RWebDisplayHandle::Display() method. */; ///////////////////////////////////////////////////////////////////////////////////////////; /// Default constructor.; /// Browser kind configured from gROOT->GetWebDisplay()",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebDisplayArgs.cxx:284,config,configured,284,gui/webdisplay/src/RWebDisplayArgs.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebDisplayArgs.cxx,1,['config'],['configured']
Modifiability,"/** \class ROOT::RWebWindow; \ingroup webdisplay. Represents web window, which can be shown in web browser or any other supported environment. Window can be configured to run either in the normal or in the batch (headless) mode.; In second case no any graphical elements will be created. For the normal window one can configure geometry; (width and height), which are applied when window shown. Each window can be shown several times (if allowed) in different places - either as the; CEF (chromium embedded) window or in the standard web browser. When started, window will open and show; HTML page, configured with RWebWindow::SetDefaultPage() method. Typically (but not necessarily) clients open web socket connection to the window and one can exchange data,; using RWebWindow::Send() method and call-back function assigned via RWebWindow::SetDataCallBack(). */; //////////////////////////////////////////////////////////////////////////////////////////; /// RWebWindow constructor; /// Should be defined here because of std::unique_ptr<RWebWindowWSHandler>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindow.cxx:157,config,configured,157,gui/webdisplay/src/RWebWindow.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebWindow.cxx,3,['config'],"['configure', 'configured']"
Modifiability,"/** \class RooRealL; * \ingroup Roofitcore; *; * \brief RooAbsReal that wraps RooAbsL likelihoods for use in RooFit outside of the RooMinimizer context; *; * This class provides a simple wrapper to evaluate RooAbsL derived likelihood objects like a regular RooFit real value.; * Whereas the RooAbsL objects are meant to be used within the context of minimization, RooRealL can be used in any; * RooFit context, like plotting. The value can be accessed through getVal(), like with other RooFit real variables.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooRealL.cxx:498,variab,variables,498,roofit/roofitcore/src/TestStatistics/RooRealL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooRealL.cxx,1,['variab'],['variables']
Modifiability,"/** \class RooStats::FeldmanCousins; \ingroup Roostats. The FeldmanCousins class (like the Feldman-Cousins technique) is essentially a; specific configuration of the more general NeymanConstruction. It is a concrete; implementation of the IntervalCalculator interface that, which uses the; NeymanConstruction in a particular way. As the name suggests, it returns a; ConfidenceInterval. In particular, it produces a RooStats::PointSetInterval,; which is a concrete implementation of the ConfInterval interface. The Neyman Construction is not a uniquely defined statistical technique, it; requires that one specify an ordering rule or ordering principle, which is; usually encoded by choosing a specific test statistic and limits of integration; (corresponding to upper/lower/central limits). As a result, this class must be; configured with the corresponding information before it can produce an interval. In the case of the Feldman-Cousins approach, the ordering principle is the; likelihood ratio -- motivated by the Neyman-Pearson lemma. When nuisance; parameters are involved, the profile likelihood ratio is the natural; generalization. One may either choose to perform the construction over the full; space of the nuisance parameters, or restrict the nuisance parameters to their; conditional MLE (eg. profiled values). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/FeldmanCousins.cxx:145,config,configuration,145,roofit/roostats/src/FeldmanCousins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/FeldmanCousins.cxx,2,['config'],"['configuration', 'configured']"
Modifiability,/** \class RooStats::HLFactory; \ingroup Roostats. HLFactory is an High Level model Factory allows you to; describe your models in a configuration file; (_datacards_) acting as an interface with the RooFactoryWSTool.; Moreover it provides tools for the combination of models and datasets. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HLFactory.cxx:133,config,configuration,133,roofit/roostats/src/HLFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HLFactory.cxx,1,['config'],['configuration']
Modifiability,/** \class RooStats::TestStatistic; \ingroup Roostats. TestStatistic is an interface class to provide a facility for construction test statistics; distributions to the NeymanConstruction class. All the actual samplers inherit from this class.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/TestStatistic.h:218,inherit,inherit,218,roofit/roostats/inc/RooStats/TestStatistic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/TestStatistic.h,1,['inherit'],['inherit']
Modifiability,"/** \class RooSumL; * \ingroup Roofitcore; *; * \brief Likelihood class that sums over multiple -log components; *; * The likelihood is often a product of components, for instance when fitting simultaneous pdfs, but also when using; * subsidiary pdfs. Hence, the negative log likelihood that we, in fact, calculate is often a sum over these components.; * This sum is implemented by this class.; **/; /// \param[in] pdf Raw pointer to the pdf; will not be cloned in this object.; /// \param[in] data Raw pointer to the dataset; will not be cloned in this object.; /// \param[in] components The component likelihoods.; /// \param extended Set extended term calculation on, off or use Extended::Auto to determine automatically based on the; /// pdf whether to activate or not. \warning components must be passed with std::move, otherwise it cannot be moved into; /// the RooSumL because of the unique_ptr! \note The number of events in RooSumL is that of the full dataset. Components; /// will have their own number of events that may be more relevant.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx:629,extend,extended,629,roofit/roofitcore/src/TestStatistics/RooSumL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooSumL.cxx,3,"['Extend', 'extend']","['Extended', 'extended']"
Modifiability,/** \class StatErrorConfig; * \ingroup HistFactory; * Configuration to automatically assign nuisance parameters for the statistical; * error of the Monte Carlo simulations.; * The default is to assign a Poisson uncertainty to a bin when its statistical uncertainty; * is larger than 5% of the bin content.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h:54,Config,Configuration,54,roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/inc/RooStats/HistFactory/Systematics.h,1,['Config'],['Configuration']
Modifiability,"/** \class TAttBBox2D; \ingroup Base; \ingroup GraphicsAtt. Abstract base class for elements drawn in the editor.; Classes inheriting from TAttBBox2D implementing the TAttBBox2D; virtual classes, and using TPad::ShowGuideLines in ExecuteEvent; will automatically get the guide lines drawn when moved in the pad.; All methods work with pixel coordinates.; */; ////////////////////////////////////////////////////////////////////////////////; // TAttBBox2D destructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttBBox2D.cxx:123,inherit,inheriting,123,core/base/src/TAttBBox2D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttBBox2D.cxx,1,['inherit'],['inheriting']
Modifiability,"/** \class TAttFill; \ingroup Base; \ingroup GraphicsAtt. Fill Area Attributes class. This class is used (in general by secondary inheritance); by many other classes (graphics, histograms). It holds all the fill area; attributes. ## Fill Area attributes; Fill Area attributes are:. - [Fill Area color](\ref ATTFILL1); - [Fill Area style](\ref ATTFILL2). \anchor ATTFILL1; ## Fill Area color; The fill area color is a color index (integer) pointing in the ROOT; color table.; The fill area color of any class inheriting from `TAttFill` can; be changed using the method `SetFillColor` and retrieved using the; method `GetFillColor`.; The following table shows the first 50 default colors. Begin_Macro; {; TCanvas *c = new TCanvas(""c"",""Fill Area colors"",0,0,500,200);; c->DrawColorTable();; return c;; }; End_Macro. ### Color transparency; `SetFillColorAlpha()`, allows to set a transparent color.; In the following example the fill color of the histogram `histo`; is set to blue with an opacity of 35% (i.e. a transparency of 65%).; (The color `kBlue` itself is internally stored as fully opaque.). ~~~ {.cpp}; histo->SetFillColorAlpha(kBlue, 0.35);; ~~~. The transparency is available on all platforms when the flag; `OpenGL.CanvasPreferGL` is set to `1` in `$ROOTSYS/etc/system.rootrc`, or on Mac; with the Cocoa backend.; On the file output it is visible with PDF, PNG, Gif, JPEG, SVG, TeX... but not PostScript. Alternatively, you can call at the top of your script `gSytle->SetCanvasPreferGL();`.; Or if you prefer to activate GL for a single canvas `c`, then use `c->SetSupportGL(true);`. ### The ROOT Color Wheel.; The wheel contains the recommended 216 colors to be used in web applications.; The colors in the Color Wheel are created by TColor::CreateColorWheel. Using this color set for your text, background or graphics will give your; application a consistent appearance across different platforms and browsers. Colors are grouped by hue, the aspect most important in human perception; Touch",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttFill.cxx:130,inherit,inheritance,130,core/base/src/TAttFill.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttFill.cxx,2,['inherit'],"['inheritance', 'inheriting']"
Modifiability,"/** \class TAttLine; \ingroup Base; \ingroup GraphicsAtt. Line Attributes class. This class is used (in general by secondary inheritance); by many other classes (graphics, histograms). It holds all the line attributes. ## Line attributes; Line attributes are:. - [Line Color](\ref ATTLINE1); - [Line Width](\ref ATTLINE2); - [Line Style](\ref ATTLINE3). \anchor ATTLINE1; ## Line Color; The line color is a color index (integer) pointing in the ROOT; color table.; The line color of any class inheriting from `TAttLine` can; be changed using the method `SetLineColor` and retrieved using the; method `GetLineColor`.; The following table shows the first 50 default colors. Begin_Macro; {; TCanvas *c = new TCanvas(""c"",""Fill Area colors"",0,0,500,200);; c->DrawColorTable();; return c;; }; End_Macro. ### Color transparency; `SetLineColorAlpha()`, allows to set a transparent color.; In the following example the line color of the histogram `histo`; is set to blue with an opacity of 35% (i.e. a transparency of 65%).; (The color `kBlue` itself is internally stored as fully opaque.). ~~~ {.cpp}; histo->SetLineColorAlpha(kBlue, 0.35);; ~~~. The transparency is available on all platforms when the flag `OpenGL.CanvasPreferGL` is set to `1`; in `$ROOTSYS/etc/system.rootrc`, or on Mac with the Cocoa backend. On the file output; it is visible with PDF, PNG, Gif, JPEG, SVG, TeX ... but not PostScript. Alternatively, you can call at the top of your script `gSytle->SetCanvasPreferGL();`.; Or if you prefer to activate GL for a single canvas `c`, then use `c->SetSupportGL(true);`. \anchor ATTLINE2; ## Line Width; The line width is expressed in pixel units.; The line width of any class inheriting from `TAttLine` can; be changed using the method `SetLineWidth` and retrieved using the; method `GetLineWidth`.; The following picture shows the line widths from 1 to 10 pixels. Begin_Macro; {; TCanvas *Lw = new TCanvas(""Lw"",""test"",500,200);; TText t;; t.SetTextAlign(32);; t.SetTextSize(0.08);; Int_t i=1;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttLine.cxx:125,inherit,inheritance,125,core/base/src/TAttLine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttLine.cxx,2,['inherit'],"['inheritance', 'inheriting']"
Modifiability,"/** \class TAttMarker; \ingroup Base; \ingroup GraphicsAtt. Marker Attributes class. This class is used (in general by secondary inheritance); by many other classes (graphics, histograms). It holds all the markers; attributes. ## Marker attributes; The marker attributes are:. - [Marker color](\ref ATTMARKER1); - [Marker style](\ref ATTMARKER2); - [Marker line width](\ref ATTMARKER21); - [Marker size](\ref M3). \anchor ATTMARKER1; ## Marker color; The marker color is a color index (integer) pointing in the ROOT color; table.; The marker color of any class inheriting from `TAttMarker` can; be changed using the method `SetMarkerColor` and retrieved using the; method `GetMarkerColor`.; The following table shows the first 50 default colors. Begin_Macro; {; TCanvas *c = new TCanvas(""c"",""Fill Area colors"",0,0,500,200);; c->DrawColorTable();; return c;; }; End_Macro. ### Color transparency. `SetMarkerColorAlpha()`, allows to set a transparent color.; In the following example the marker color of the histogram `histo`; is set to blue with an opacity of 35% (i.e. a transparency of 65%).; (The color `kBlue` itself is internally stored as fully opaque.). ~~~ {.cpp}; histo->SetMarkerColorAlpha(kBlue, 0.35);; ~~~. The transparency is available on all platforms when the flag `OpenGL.CanvasPreferGL` is set to `1`; in `$ROOTSYS/etc/system.rootrc`, or on Mac with the Cocoa backend. On the file output; it is visible with PDF, PNG, Gif, JPEG, SVG, TeX ... but not PostScript. Alternatively, you can call at the top of your script `gSytle->SetCanvasPreferGL();`.; Or if you prefer to activate GL for a single canvas `c`, then use `c->SetSupportGL(true);`. \anchor ATTMARKER2; ## Marker style. The Marker style defines the markers' shape.; The marker style of any class inheriting from `TAttMarker` can; be changed using the method `SetMarkerStyle` and retrieved using the; method `GetMarkerStyle`. The following list gives the currently supported markers (screen; and PostScript) style. Each marker ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttMarker.cxx:129,inherit,inheritance,129,core/base/src/TAttMarker.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttMarker.cxx,2,['inherit'],"['inheritance', 'inheriting']"
Modifiability,"/** \class TAttText; \ingroup Base; \ingroup GraphicsAtt. Text Attributes class. This class is used (in general by secondary inheritance); by many other classes (graphics, histograms). It holds all the text attributes. ## Text attributes; Text attributes are:. - [Text Alignment](\ref ATTTEXT1); - [Text Angle](\ref ATTTEXT2); - [Text Color](\ref ATTTEXT3); - [Text Size](\ref ATTTEXT4); - [Text Font and Precision](\ref ATTTEXT5); - [Font quality and speed](\ref ATTTEXT51); - [How to use True Type Fonts](\ref ATTTEXT52); - [List of the currently supported fonts](\ref ATTTEXT53). \anchor ATTTEXT1; ## Text Alignment. The text alignment is an integer number (`align`) allowing to control; the horizontal and vertical position of the text string with respect; to the text position.; The text alignment of any class inheriting from `TAttText` can; be changed using the method `SetTextAlign` and retrieved using the; method `GetTextAlign`. ~~~ {.cpp}; align = 10*HorizontalAlign + VerticalAlign; ~~~. For horizontal alignment the following convention applies:. ~~~ {.cpp}; 1=left adjusted, 2=centered, 3=right adjusted; ~~~. For vertical alignment the following convention applies:. ~~~ {.cpp}; 1=bottom adjusted, 2=centered, 3=top adjusted; ~~~. For example:. ~~~ {.cpp}; align = 11 = left adjusted and bottom adjusted; align = 32 = right adjusted and vertically centered; ~~~. Begin_Macro(source); textalign.C; End_Macro. Mnemonic constants are available:. ~~~ {.cpp}; kHAlignLeft = 10, kHAlignCenter = 20, kHAlignRight = 30,; kVAlignBottom = 1, kVAlignCenter = 2, kVAlignTop = 3; ~~~. They allow to write:. ~~~ {.cpp}; object->SetTextAlign(kHAlignLeft+kVAlignTop);; ~~~. \anchor ATTTEXT2; ## Text Angle. Text angle in degrees.; The text angle of any class inheriting from `TAttText` can; be changed using the method `SetTextAngle` and retrieved using the; method `GetTextAngle`.; The following picture shows the text angle:. Begin_Macro(source); textangle.C; End_Macro. \anchor ATTTEXT3; ## Text Col",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttText.cxx:125,inherit,inheritance,125,core/base/src/TAttText.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TAttText.cxx,2,['inherit'],"['inheritance', 'inheriting']"
Modifiability,/** \class TBaseClass; Each class (see TClass) has a linked list of its base class(es).; This class describes one single base class.; The base class info is obtained via the CINT api.; see class TCling. The base class information is used a.o. in to find all inherited methods.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx:258,inherit,inherited,258,core/meta/src/TBaseClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TBaseClass.cxx,1,['inherit'],['inherited']
Modifiability,"/** \class TBatchNormLayer. Layer implementing Batch Normalization. The input from each batch are normalized during training to have zero mean and unit variance; and they are then scaled by two parameter, different for each input variable:; - a scale factor gamma; - an offset beta. In addition a running batch mean and variance is computed and stored in the class; During inference the inputs are not normalized using the batch mean but the previously computed; at running mean and variance; If momentum is in [0,1) the running mean and variances are the exponential averages using the momentum value; running_mean = momentum * running_mean + (1-momentum) * batch_mean; If instead momentum<1 the cumulative average is computed; running_mean = (nb/(nb+1) * running_mean + 1/(nb+1) * batch_mean. See more at [https://arxiv.org/pdf/1502.03167v3.pdf]; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/BatchNormLayer.h:230,variab,variable,230,tmva/tmva/inc/TMVA/DNN/BatchNormLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/BatchNormLayer.h,1,['variab'],['variable']
Modifiability,"/** \class TClassTree; \ingroup gpad. Draw inheritance tree and their relations for a list of classes. The following options are supported; - Direct inheritance (default); - Multiple inheritance; - Composition; - References by data members and member functions; - References from Code. The list of classes is specified:; - either in the TClassTree constructor as a second argument; - or the parameter to TClassTree::Draw. Note that the ClassTree viewer can also be started from the canvas; pull down menu ""Classes"". In the list of classes, class names are separated by a "":""; wildcarding is supported.; The following formats are supported, eg in TClassTree::Draw; 1. `Draw(""ClassA"")`; - Draw inheritance tree for ClassA; - Show all classes referenced by ClassA; 2. `Draw(""*ClassB"")`; - Draw inheritance tree for ClassB; and all the classes deriving from ClassB; 3. `Draw("">ClassC"")`; - Draw inheritance tree for ClassC; - Show classes referencing ClassC; 4. `Draw(""ClassD<"")`; - Draw inheritance tree for ClassD; - Show classes referenced by ClassD; - Show all classes referencing ClassD; 5. `Draw(""Cla*"")`; - Draw inheritance tree for all classes with name starting with ""Cla""; - Show classes referenced by these classes; 6. `Draw(""ClassA:ClassB<"")`; - Draw inheritance tree for ClassA; - Show all classes referenced by ClassA; - Draw inheritance tree for ClassB; - Show classes referenced by ClassB; - Show all classes referencing ClassB. Example: `Draw(""TTree<"")`; - Draw inheritance tree for the Root class TTree; - Show all classes referenced by TTree; - Show all classes using TTree. By default, only direct inheritance is drawn.; Use TClassTree::ShowLinks(option) to show additional references; - option = ""H"" to show links to embedded classes; - option = ""M"" to show multiple inheritance; - option = ""R"" to show pointers to other classes from data members; - option = ""C"" to show classes used by the code(implementation) of a class. The following picture is produced directly by:; ~~~ {.cpp}; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx:43,inherit,inheritance,43,graf2d/gpad/src/TClassTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TClassTree.cxx,6,['inherit'],['inheritance']
Modifiability,"/** \class TEveQuadSet; \ingroup TEve; Supports various internal formats that result in rendering of a; set of planar (lines, rectangles, hexagons with shared normal) objects. Names of internal structures and their variables use A, B and C as; names for coordinate value-holders. Typical assignment is A->X,; B->Y, C->Z but each render mode can override this convention and; impose y or x as a fixed (third or C) coordinate. Alphabetic order; is obeyed in this correspondence. For quad modes the deltas are expected to be positive.; For line modes negative deltas are ok.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveQuadSet.cxx:215,variab,variables,215,graf3d/eve/src/TEveQuadSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveQuadSet.cxx,1,['variab'],['variables']
Modifiability,"/** \class TEveSecondarySelectable; \ingroup TEve; Semi-abstract interface for classes supporting secondary-selection. Element class that inherits from this, should also implement the; following virtual methods from TEveElement:; ~~~ {.cpp}; virtual void UnSelected();; virtual void UnHighlighted();; ~~~; and clear corresponding selection-set from there. To support tooltips for sub-elements, implement:; ~~~ {.cpp}; virtual TString TEveElement::GetHighlightTooltip();; ~~~; and return tooltip for the entry in the fHighlightedSet.; There should always be a single entry there.; See TEveDigitSet for an example.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveSecondarySelectable.cxx:138,inherit,inherits,138,graf3d/eve/src/TEveSecondarySelectable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveSecondarySelectable.cxx,1,['inherit'],['inherits']
Modifiability,"/** \class TEveVector2T; \ingroup TEve; Minimal, templated two-vector.; No TObject inheritance and virtual functions.; Also used in VSD.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveVector.cxx:83,inherit,inheritance,83,graf3d/eve/src/TEveVector.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveVector.cxx,1,['inherit'],['inheritance']
Modifiability,"/** \class TEveVector4T; \ingroup TEve; Minimal, templated four-vector.; No TObject inheritance and virtual functions.; Also used in VSD.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveVector.cxx:84,inherit,inheritance,84,graf3d/eve/src/TEveVector.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveVector.cxx,1,['inherit'],['inheritance']
Modifiability,"/** \class TEveVectorT; \ingroup TEve; Minimal, templated three-vector.; No TObject inheritance and virtual functions.; Also used in VSD.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveVector.cxx:84,inherit,inheritance,84,graf3d/eve/src/TEveVector.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveVector.cxx,1,['inherit'],['inheritance']
Modifiability,"/** \class TF2; \ingroup Functions; \brief A 2-Dim function with parameters. The following types of functions can be created:. 1. [Expression using variables x and y](\ref TF2a); 2. [Expression using a user defined function](\ref TF2b); 3. [Lambda Expression with x and y variables and parameters](\ref TF2c). \anchor TF2a; ### Expression using variables x and y. Begin_Macro (source); {; auto f2 = new TF2(""f2"",""sin(x)*sin(y)/(x*y)"",0,5,0,5);; f2->Draw();; }; End_Macro. \anchor TF2b; ### Expression using a user defined function. ~~~~{.cpp}; Double_t func(Double_t *val, Double_t *par); {; Float_t x = val[0];; Float_t y = val[1];; Double_t f = x*x-y*y;; return f;; }. void fplot(); {; auto f = new TF2(""f"",func,-1,1,-1,1);; f->Draw(""surf1"");; }; ~~~~. \anchor TF2c; ### Lambda Expression with x and y variables and parameters. ~~~~{.cpp}; root [0] TF2 f2(""f2"", [](double* x, double*p) { return x[0] + x[1] * p[0]; }, 0., 1., 0., 1., 1); (TF2 &) Name: f2 Title: f2; root [1] f2.SetParameter(0, 1.); root [2] f2.Eval(1., 2.); (double) 3.0000000; ~~~~. See TF1 class for the list of functions formats; */; ////////////////////////////////////////////////////////////////////////////////; /// TF2 default constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF2.cxx:148,variab,variables,148,hist/hist/src/TF2.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF2.cxx,4,['variab'],['variables']
Modifiability,"/** \class TFastCgi; \ingroup http. THttpEngine implementation, based on fastcgi package. Allows to redirect http requests from normal web server like; Apache2 or lighttpd. Configuration example for lighttpd:. server.modules += ( ""mod_fastcgi"" ); fastcgi.server = (; ""/remote_scripts/"" =>; (( ""host"" => ""192.168.1.11"",; ""port"" => 9000,; ""check-local"" => ""disable"",; ""docroot"" => ""/""; )); ). When creating THttpServer, one should specify:. THttpServer* serv = new THttpServer(""fastcgi:9000"");. In this case, requests to lighttpd server will be; redirected to ROOT session. Like: `http://lighttpdhost/remote_scripts/root.cgi/`. Following additional options can be specified. top=foldername - name of top folder, seen in the browser; thrds=N - run N worker threads to process requests, default 10; debug=1 - run fastcgi server in debug mode. Example:. serv->CreateEngine(""fastcgi:9000?top=fastcgiserver"");; */; ////////////////////////////////////////////////////////////////////////////////; /// normal constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TFastCgi.cxx:173,Config,Configuration,173,net/http/src/TFastCgi.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TFastCgi.cxx,1,['Config'],['Configuration']
Modifiability,/** \class TFitResult; \ingroup Hist; Extends the ROOT::Fit::Result class with a TNamed inheritance; providing easy possibility for I/O; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFitResult.cxx:38,Extend,Extends,38,hist/hist/src/TFitResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFitResult.cxx,2,"['Extend', 'inherit']","['Extends', 'inheritance']"
Modifiability,"/** \class TGFileBrowser; \ingroup guiwidgets. System file browser, used as TRootBrowser plug-in.; This class is the real core of the ROOT browser. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFileBrowser.cxx:89,plug-in,plug-in,89,gui/gui/src/TGFileBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFileBrowser.cxx,1,['plug-in'],['plug-in']
Modifiability,/** \class TGLBoxPainter; \ingroup opengl; Paints TH3 histograms by rendering variable-sized boxes matching the; bin contents.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLBoxPainter.cxx:78,variab,variable-sized,78,graf3d/gl/src/TGLBoxPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLBoxPainter.cxx,1,['variab'],['variable-sized']
Modifiability,"/** \class TGLPadPainter; \ingroup opengl; ""Delegating"" part of TGLPadPainter. Line/fill/etc. attributes can be; set inside TPad, but not only there:; many of them are set by base sub-objects of 2d primitives; (2d primitives usually inherit TAttLine or TAttFill etc.). And these sub-objects; call gVirtualX->SetLineWidth ... etc. So, if I save some attributes in my painter,; it will be mess - at any moment I do not know, where to take line attribute - from; gVirtualX or from my own member. So! All attributed, _ALL_ go to/from gVirtualX.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPadPainter.cxx:233,inherit,inherit,233,graf3d/gl/src/TGLPadPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPadPainter.cxx,1,['inherit'],['inherit']
Modifiability,/** \class TGLSceneInfo; \ingroup opengl; Base class for extended scene context. Scenes can be shared among several viewers and each scene needs to; cache some viewer/camera/clipping specific state => this is a; storage class for this data. Sub-classes of TGLSceneBase can override the virtual; CreateSceneInfo() method and in it instantiate a sub-class of; TGLSceneInfo containing the needed information. See TGLScene and; inner class SceneInfo; note that some casting is needed in actual; methods as TGLRnrCtx holds the base-class pointer.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSceneInfo.cxx:57,extend,extended,57,graf3d/gl/src/TGLSceneInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLSceneInfo.cxx,1,['extend'],['extended']
Modifiability,"/** \class TGLViewer; \ingroup opengl; Base GL viewer object - used by both standalone and embedded (in pad); GL. Contains core viewer objects :. GL scene - collection of main drawn objects - see TGLStdScene; Cameras (fXyzzCamera) - ortho and perspective cameras - see TGLCamera; Clipping (fClipXyzz) - collection of clip objects - see TGLClip; Manipulators (fXyzzManip) - collection of manipulators - see TGLManip. It maintains the current active draw styles, clipping object,; manipulator, camera etc. TGLViewer is 'GUI free' in that it does not derive from any ROOT GUI; TGFrame etc - see TGLSAViewer for this. However it contains GUI; GUI style methods HandleButton() etc to which GUI events can be; directed from standalone frame or embedding pad to perform; interaction. Also, the TGLWidget needs to be created externally. It is not owned; by the viewer. For embedded (pad) GL this viewer is created directly by plugin; manager. For standalone the derived TGLSAViewer is.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewer.cxx:918,plugin,plugin,918,graf3d/gl/src/TGLViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewer.cxx,1,['plugin'],['plugin']
Modifiability,"/** \class TGLViewerBase; \ingroup opengl; Base class for GL viewers. Provides a basic scene management and a; small set of control variables (camera, LOD, style, clip) that are; used by the scene classes. Renering wrappers are available but; minimal. There is no concept of GL-context here ... we just draw; into whatever is set from outside. Development notes:. Each viewer automatically creates a TGLRnrCtx and passes it down; all render functions.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerBase.cxx:132,variab,variables,132,graf3d/gl/src/TGLViewerBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLViewerBase.cxx,1,['variab'],['variables']
Modifiability,"/** \class TGLWidget; \ingroup opengl; GL window with context. _Must_ _have_ a parent window; (the 'parent' parameter of ctors). The current version inherits; TGCanvas (I'm not sure about future versions), probably, in future; multiple inheritance will be added - the second; base class will be TGLPaintDevice or something like this. Usage:; - Simply create TGLWidget as an embedded widget, and; connect your slots to signals you need: HandleExpose, HandleConfigureNotify, etc.; In your slots you can use gl API directly - under Win32 TGLWidget switches; between threads internally (look TGLPShapeObjEditor for such usage).; - You can write your own class, derived from TGLWidget, with PaintGL and InitGL; overriden. Resources (and invariants):; - fContainer (TGLWidgetContainer) - controlled by std::auto_ptr; - fWindowIndex - controlled manually (see CreateWidget and dtor); - fGLContext - controlled manually (see CreateWidget and dtor); - visual info for X11 version, controlled manually (see CreateGLContainer and dtor). Exceptions:; - can be thrown only during construction.; - under win32 class does not throw itself (but some internal operations can throw); - under X11 can throw std::runtime_error (from CreateGLContext).; - In case of exceptions resources will be freed. TGLWidget object is immutable as far as it was created. Boolean parameter defines, if you want to grab user's input or not.; By default you want, but for example when not - see TGLPShapeObjEditor. Non-copyable.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLWidget.cxx:149,inherit,inherits,149,graf3d/gl/src/TGLWidget.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLWidget.cxx,2,['inherit'],"['inheritance', 'inherits']"
Modifiability,"/** \class TMaxPoolLayer. Generic Max Pooling Layer class. This generic Max Pooling Layer Class represents a pooling layer of; a CNN. It inherits all of the properties of the convolutional layer; TConvLayer, but it overrides the propagation methods. In a sense, max pooling; can be seen as non-linear convolution: a filter slides over the input and produces; one element as a function of the elements within the receptive field.; In addition to that, it contains a matrix of winning units. The height and width of the weights and biases is set to 0, since this; layer does not contain any weights. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/CNN/MaxPoolLayer.h:137,inherit,inherits,137,tmva/tmva/inc/TMVA/DNN/CNN/MaxPoolLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/CNN/MaxPoolLayer.h,1,['inherit'],['inherits']
Modifiability,"/** \class TNet. Generic neural network class. This generic neural network class represents a concrete neural; network through a vector of layers and coordinates the forward; and backward propagation through the net. The net takes as input a batch from the training data given in; matrix form, with each row corresponding to a certain training; event. On construction, the neural network allocates all the memory; required for the training of the neural net and keeps it until; its destruction. The Architecture type argument simply holds the; architecture-specific data types, which are just the matrix type; Matrix_t and the used scalar type Scalar_t. \tparam Architecture The Architecture type that holds the; \tparam Layer_t The type used for the layers. Can be either; Layer<Architecture> or SharedWeightLayer<Architecture>.; datatypes for a given architecture.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Net.h:139,layers,layers,139,tmva/tmva/inc/TMVA/DNN/Net.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Net.h,2,['layers'],['layers']
Modifiability,"/** \class TNtuple; \ingroup tree. A simple TTree restricted to a list of float variables only. Each variable goes to a separate branch. A Ntuple is created via; ~~~ {.cpp}; TNtuple(name,title,varlist,bufsize); ~~~; It is filled via:; ~~~ {.cpp}; TNtuple::Fill(*x) or; TNtuple::Fill(v1,v2,v3.....); ~~~; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor for Ntuple.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TNtuple.cxx:80,variab,variables,80,tree/tree/src/TNtuple.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TNtuple.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"/** \class TNtupleD; \ingroup tree. A simple TTree restricted to a list of double variables only. Each variable goes to a separate branch. A Ntuple is created via; ~~~ {.cpp}; TNtupleD(name,title,varlist,bufsize); ~~~; It is filled via:; ~~~ {.cpp}; TNtupleD::Fill(*x) or; TNtupleD::Fill(v1,v2,v3.....); ~~~; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor for Ntuple.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TNtupleD.cxx:82,variab,variables,82,tree/tree/src/TNtupleD.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TNtupleD.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"/** \class TPCON; \ingroup g3d; A polycone. \image html g3d_pcon.png; It has the following parameters:. - name: name of the shape; - title: shape's title; - material: (see TMaterial); - phi1: the azimuthal angle phi at which the volume begins (angles; are counted counterclockwise); - dphi: opening angle of the volume, which extends from; phi1 to phi1+dphi; - nz: number of planes perpendicular to the z axis where; the dimension of the section is given -- this number; should be at least 2; - rmin: array of dimension nz with minimum radius at a given plane; - rmax: array of dimension nz with maximum radius at a given plane; - z: array of dimension nz with z position of given plane; */; ////////////////////////////////////////////////////////////////////////////////; /// PCON shape default constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TPCON.cxx:326,extend,extends,326,graf3d/g3d/src/TPCON.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TPCON.cxx,1,['extend'],['extends']
Modifiability,"/** \class TPGON; \ingroup g3d; A polygon. \image html g3d_pgon.png. It has the following parameters:. - name: name of the shape; - title: shape's title; - material: (see TMaterial); - phi1: the azimuthal angle &phi at which the volume begins (angles; are counted counterclockwise); - dphi1: opening angle of the volume, which extends from phi1 to; phi1+dphi; - npdv: number of sides of the cross section between the given; phi limits; - nz: number of planes perpendicular to the z axis where; the dimension of the section is given -- this number; should be at least 2; - rmin: array of dimension nz with minimum radius at a given plane; - rmax: array of dimension nz with maximum radius at a given plane; - z: array of dimension nz with z position of given plane; */; ////////////////////////////////////////////////////////////////////////////////; /// PGON shape default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TPGON.cxx:327,extend,extends,327,graf3d/g3d/src/TPGON.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TPGON.cxx,1,['extend'],['extends']
Modifiability,/** \class TParallelCoordEditor. This is the TParallelCoord editor. It brings tools to explore datas; Using parallel coordinates. The main tools are:. - Dots spacing : Set the dots spacing with which-one the lines; must be drawn. This tool is useful to reduce the image; cluttering.; - The Selections section : Set the current edited selection and; allows to apply it to the tree through a generated entry list.; - The Entries section : Set how many events must be drawn.; A weight cut can be defined here (see TParallelCoord for a; a description of the weight cut).; - The Variables tab : To define the global settings to display; the axes. It is also possible to add a variable from its; expression or delete a selected one (also possible using right; click on the pad.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx:574,Variab,Variables,574,tree/treeviewer/src/TParallelCoordEditor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx,2,"['Variab', 'variab']","['Variables', 'variable']"
Modifiability,"/** \class TParallelCoordVar. TParallelCoord axes. Class containing a variable for the TParallelCoord. Options can be defined each axis separately using the right mouse click. These; options can be applied to every axes using the editor. - Axis width: If set to 0, the axis is simply a line. If higher, a color; histogram is drawn on the axis.; - Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The; axes can be dragged to change their position. A zoom is also available. The; logarithm scale is also available by right clicking on the axis.; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:70,variab,variable,70,tree/treeviewer/src/TParallelCoordVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"/** \class TRatioPlot; \ingroup gpad; Class for displaying ratios, differences and fit residuals. TRatioPlot has two constructors, one which accepts two histograms, and is responsible; for setting up the calculation of ratios and differences. This calculation is in part; delegated to `TEfficiency`. A single option can be given as a parameter, that is; used to determine which procedure is chosen. The remaining option string is then; passed through to the calculation, if applicable. The other constructor uses a; fitted histogram to calculate the fit residual and plot it with the histogram; and the fit function. ## Ratios and differences; The simplest case is passing two histograms without specifying any options. This defaults to using; `TGraphAsymmErrors::Divide`. The `option` variable is passed through, as are the parameters; `c1` and `c2`, that you can set via `TRatioPlot::SetC1` and `TRatioPlot::SetC1`. If you set the; `option` to `divsym` the method `TH1::Divide` will be used instead, also receiving all the parameters. Using the `option` `diff` or `diffsig`, both histograms will be subtracted, and in the case of diffsig,; the difference will be divided by the uncertainty. `c1` and `c2` will only be used to; scale the histograms using `TH1::Scale` prior to subtraction. Available options are for `option`:; | Option | Description |; | ---------- | ------------------------------------------------------------ |; | divsym | uses the histogram `TH1::Divide` method, yields symmetric errors |; | diff | subtracts the histograms |; | diffsig | subtracts the histograms and divides by the uncertainty |. Begin_Macro(source); ../../../tutorials/hist/ratioplot1.C; End_Macro. ## Fit residuals; A second constructor only accepts a single histogram, but expects it to have a fitted; function. The function is used to calculate the residual between the fit and the; histogram. Here, it is expected that h1 has a fit function in it's list of functions. The class calculates the; difference b",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx:786,variab,variable,786,graf2d/gpad/src/TRatioPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TRatioPlot.cxx,1,['variab'],['variable']
Modifiability,"/** \class TRealData; The TRealData class manages the effective list of all data members; for a given class. For example for an object of class TLine that inherits; from TObject and TAttLine, the TRealData object for a line contains the; complete list of all data members of the 3 classes. The list of TRealData members in TClass is built when functions like; object.Inspect or object.DrawClass are called.; */; ////////////////////////////////////////////////////////////////////////////////; /// RealData default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TRealData.cxx:155,inherit,inherits,155,core/meta/src/TRealData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TRealData.cxx,1,['inherit'],['inherits']
Modifiability,"/** \class TRecorderState; \ingroup guirecorder. Abstract class that defines interface for a state of recorder.; Inherited classes are:; - TRecorderInactive; - TRecorderRecording; - TRecorderReplaying; - TRecorderPaused. See TRecorder for more information about creating, using,; changing and deleting states. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/inc/TRecorder.h:113,Inherit,Inherited,113,gui/recorder/inc/TRecorder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/recorder/inc/TRecorder.h,1,['Inherit'],['Inherited']
Modifiability,"/** \class TRootSniffer; \ingroup http. Sniffer of ROOT objects, data provider for THttpServer. Provides methods to scan different structures like folders,; directories, files and collections. Can locate objects (or its data member) per name.; Can be extended to application-specific classes. Normally TRootSnifferFull class is used which able to access data from trees, canvases, histograms.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TRootSniffer.cxx:251,extend,extended,251,net/http/src/TRootSniffer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/http/src/TRootSniffer.cxx,1,['extend'],['extended']
Modifiability,"/** \class TRootSnifferFull; \ingroup http. Extends TRootSniffer for many ROOT classes. Provides access to different ROOT collections and containers; like TTree, TCanvas, TFile, ...; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/httpsniff/src/TRootSnifferFull.cxx:44,Extend,Extends,44,net/httpsniff/src/TRootSnifferFull.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/httpsniff/src/TRootSnifferFull.cxx,1,['Extend'],['Extends']
Modifiability,"/** \class TSPlot. \legacy{TSPlot}. A common method used in High Energy Physics to perform measurements is; the maximum Likelihood method, exploiting discriminating variables to; disentangle signal from background. The crucial point for such an; analysis to be reliable is to use an exhaustive list of sources of; events combined with an accurate description of all the Probability; Density Functions (PDF). To assess the validity of the fit, a convincing quality check; is to explore further the data sample by examining the distributions of; control variables. A control variable can be obtained for instance by; removing one of the discriminating variables before performing again; the maximum Likelihood fit: this removed variable is a control; variable. The expected distribution of this control variable, for; signal, is to be compared to the one extracted, for signal, from the; data sample. In order to be able to do so, one must be able to unfold; from the distribution of the whole data sample. The TSPlot method allows to reconstruct the distributions for; the control variable, independently for each of the various sources of; events, without making use of any <em>a priori</em> knowledge on <u>this</u>; variable. The aim is thus to use the knowledge available for the; discriminating variables to infer the behaviour of the individual; sources of events with respect to the control variable. TSPlot is optimal if the control variable is uncorrelated with the discriminating variables. A detail description of the formalism itself, called \f$\hbox{$_s$}{\cal P}lot\f$, is given; in [[1](https://arxiv.org/abs/physics/0402083)]. ### The method. The \f$\hbox{$_s$}{\cal P}lot\f$ technique is developed in the above context of a; maximum Likelihood method making use of discriminating variables. One considers a data sample in which are merged several species; of events. These species represent various signal components and; background components which all together account for the data s",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx:165,variab,variables,165,math/splot/src/TSPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/splot/src/TSPlot.cxx,7,['variab'],"['variable', 'variables']"
Modifiability,"/** \class TSimpleAnalysis. A TSimpleAnalysis object creates histograms from a TChain. These histograms; are stored to an output file. The histogrammed (TTreeFormula) expressions,; their cuts, the input and output files are configured through a simple config; file that allows comments starting with '#'.; Here an example of configuration file:. ~~~ {.cpp}; # This is an example of configuration file; file_output.root #the output file in which histograms are stored. # The next line has the name of the tree of the input data. It is; # optional if there is exactly one tree in the first input file.; ntuple #name of the input tree. # The lines of the next block correspond to .root input files that; # contain the tree; hsimple1.root #first .root input file; hsimple2.root #second .root input file. # The next block is composed by lines that allow to configure the; # histograms. They have the following syntax:; # NAME = EXPRESSION if CUT; # which corresponds to chain->Draw(""EXPRESSION >> NAME"", ""CUT""); # i.e. it will create a histogram called NAME and store it in; # file_output.root.; # ""if CUT"" is optional; hpx=px if px<-3 #first histogram; hpxpy=px:py #second histogram. # End of the configuration file; ~~~. It is possible to use the script rootdrawtree that allows to use the class; just in command line through the bash shell.; */; ////////////////////////////////////////////////////////////////////////////////; /// Delete comments, leading and trailing white spaces in a string.; ///; /// param[in] line - line read from the input file",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:224,config,configured,224,tree/treeplayer/src/TSimpleAnalysis.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx,6,['config'],"['config', 'configuration', 'configure', 'configured']"
Modifiability,"/** \class TSpider; Spider class. A spider view is a handy way to visualize a set of data stored in a TTree.; It draws as many polar axes as selected data members. For each of them, it draws; on the axis the position of the present event between the min and max of the; data member. Two modes are available:. - The spider view: With each points on the axes is drawn a polyline.; - The segment view: For each data member is drawn an arc segment with the; radius corresponding to the event. The spider plot is available from the treeviewer called by; ""atree->StartViewer()"", or simply by calling its constructor and defining the; variables to display. Begin_Macro(source); {; TCanvas *c1 = new TCanvas(""c1"",""TSpider example"",200,10,700,700);; TFile *f = new TFile(""$(ROOTSYS)/tutorials/hsimple.root"");; if (!f || f->IsZombie()) {; printf(""Please run <ROOT location>/tutorials/hsimple.C before."");; return;; }; TNtuple* ntuple = (TNtuple*)f->Get(""ntuple"");; TString varexp = ""px:py:pz:random:sin(px):log(px/py):log(pz)"";; TString selectStr = ""px>0 && py>0 && pz>0"";; TString options = ""average"";; TSpider *spider = new TSpider(ntuple,varexp.Data(),selectStr.Data(),options.Data());; spider->Draw();; c1->ToggleEditor();; c1->Selected(c1,spider,1);; return c1;; }; End_Macro; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:628,variab,variables,628,tree/treeviewer/src/TSpider.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx,1,['variab'],['variables']
Modifiability,"/** \class TStyle; \ingroup Base; \ingroup GraphicsAtt. TStyle objects may be created to define special styles.; By default ROOT creates a default style that can be accessed via; the gStyle pointer. This class includes functions to set some of the following object attributes.; - Canvas; - Pad; - Histogram axis; - Lines; - Fill areas; - Text; - Markers; - Functions; - Histogram Statistics and Titles. All objects that can be drawn in a pad inherit from one or more attribute classes; like TAttLine, TAttFill, TAttText, TAttMarker. When the objects are created, their; default attributes are taken from the current style. The current style is an object; of the class[TStyle](https://root.cern/doc/master/classTStyle.html) and can be; referenced via the global variable `gStyle` (in TStyle.h). ROOT provides two styles called ""Default"" and ""Plain"". The ""Default""; style is created simply by:. ~~~ {.cpp}; auto default = new TStyle(""Default"",""Default Style"");; ~~~. The `Plain` style can be used if you are working on a monochrome display or; if you want to get a ""conventional"" Postscript output. These are the instructions; in the ROOT constructor to create the `Plain` style. ```; auto plain = new TStyle(""Plain"",""Plain Style (no colors/fill areas)"");. plain->SetCanvasBorderMode(0);; plain->SetPadBorderMode(0);; plain->SetPadColor(0);; plain->SetCanvasColor(0);; plain->SetTitleColor(0);; plain->SetStatColor(0);; ```. You can set the current style with:. ```; gROOT->SetStyle(style_name);; ```. You can get a pointer to an existing style with:. ```; auto style = gROOT->GetStyle(style_name);; ```. You can create additional styles with:. ```; TStyle *st1 = new TStyle(""st1"",""my style"");; st1->Set....; st1->cd(); this becomes now the current style gStyle; ```. In your [rootlogon.C](https://root.cern/doc/master/classexamples/startsession.log.html); file, you can redefine the default parameters via statements like:. ```; gStyle->SetStatX(0.7);; gStyle->SetStatW(0.2);; gStyle->SetLabelOffset(1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStyle.cxx:442,inherit,inherit,442,core/base/src/TStyle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TStyle.cxx,2,"['inherit', 'variab']","['inherit', 'variable']"
Modifiability,"/** \class TTreeFormula; Used to pass a selection expression to the Tree drawing routine. See TTree::Draw. A TreeFormula can contain any arithmetic expression including; standard operators and mathematical functions separated by operators.; Examples of valid expression:; ~~~{.cpp}; ""x<y && sqrt(z)>3.2""; ~~~; TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the; reading of the information. Here is the list of theses classes:; - TFormLeafInfo; - TFormLeafInfoDirect; - TFormLeafInfoNumerical; - TFormLeafInfoClones; - TFormLeafInfoCollection; - TFormLeafInfoPointer; - TFormLeafInfoMethod; - TFormLeafInfoMultiVarDim; - TFormLeafInfoMultiVarDimDirect; - TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. - AddOffset(Int_t offset, TStreamerElement* element); - GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; - GetObjectAddress(TLeafElement* leaf) : Returns the location of the object pointed to.; - GetMultiplicity() : Returns info on the variability of the number of elements; - GetNdata(TLeaf* leaf) : Returns the number of elements; - GetNdata() : Used by GetNdata(TLeaf* leaf); - GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; - GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; - GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; - IsString(); - ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; - Update() : react to the possible loading of a shared library.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:1028,variab,variability,1028,tree/treeplayer/src/TTreeFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx,1,['variab'],['variability']
Modifiability,/** \class TVersionCheck; \ingroup Base. Used to check if the shared library or plugin is compatible with; the current version of ROOT.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVersionCheck.h:80,plugin,plugin,80,core/base/inc/TVersionCheck.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TVersionCheck.h,1,['plugin'],['plugin']
Modifiability,"/** \class TView3D; \ingroup g3d; The 3D view class. This package was originally written by Evgueni Tcherniaev from IHEP/Protvino. The original Fortran implementation was adapted to HIGZ/PAW by Olivier Couet and; Evgueni Tcherniaev. This View class is a subset of the original system. It has been converted to a; C++ class by Rene Brun. TView3D creates a 3-D view in the current pad. In this 3D view Lego and Surface; plots can be drawn and also 3D polyline and markers. Most of the time a TView3D; is created automatically when a 3D object needs to be painted in a pad (for; instance a Lego or a Surface plot). In some case a TView3D should be explicitly. For instance to paint a 3D simple; scene composed of simple objects like polylines and polymarkers.; The following macro gives an example:. Begin_Macro(source); {; auto cV3D = new TCanvas(""cV3D"",""PolyLine3D & PolyMarker3D Window"",200,10,500,500);. // Creating a view; TView3D *view = (TView3D*) TView::CreateView(1);; view->SetRange(5,5,5,25,25,25);. // Create a first PolyLine3D; TPolyLine3D *pl3d1 = new TPolyLine3D(6);; pl3d1->SetPoint(0, 10, 20, 10);; pl3d1->SetPoint(1, 15, 15, 15);; pl3d1->SetPoint(2, 20, 20, 20);; pl3d1->SetPoint(3, 20, 10, 20);; pl3d1->SetPoint(4, 10, 10, 20);; pl3d1->SetPoint(5, 10, 10, 10);. // Create a first PolyMarker3D; TPolyMarker3D *pm3d1 = new TPolyMarker3D(9);; pm3d1->SetPoint( 0, 10, 10, 10);; pm3d1->SetPoint( 1, 20, 20, 20);; pm3d1->SetPoint( 2, 10, 20, 20);; pm3d1->SetPoint( 3, 10, 10, 20);; pm3d1->SetPoint( 4, 20, 20, 10);; pm3d1->SetPoint( 5, 20, 10, 10);; pm3d1->SetPoint( 6, 20, 10, 20);; pm3d1->SetPoint( 7, 10, 20, 10);; pm3d1->SetPoint( 8, 15, 15, 15);; pm3d1->SetMarkerSize(2);; pm3d1->SetMarkerColor(4);; pm3d1->SetMarkerStyle(2);. // Draw; pl3d1->Draw();; pm3d1->Draw();; }; End_Macro. Several coordinate systems are available:. - Cartesian; - Polar; - Cylindrical; - Spherical; - PseudoRapidity/Phi; */; ////////////////////////////////////////////////////////////////////////////////; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TView3D.cxx:171,adapt,adapted,171,graf3d/g3d/src/TView3D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/g3d/src/TView3D.cxx,1,['adapt'],['adapted']
Modifiability,"/** \class TView; \ingroup gpad. See TView3D.; */; ////////////////////////////////////////////////////////////////////////////////; /// Create a concrete default 3-d view via the plug-in manager",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TView.cxx:180,plug-in,plug-in,180,graf2d/gpad/src/TView.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TView.cxx,1,['plug-in'],['plug-in']
Modifiability,"/** \class TVirtualBranchBrowsable; \ingroup tree. TVirtualBranchBrowsable is a base class (not really abstract, but useless; by itself) for helper objects that extend TBranch's browsing support.; Each registered derived class's generator method is called, which fills; all created helper objects into a list which can then be browsed.; For details of what these browser helper objects can do, see e.g.; TMethodBrowsable, which allows methods to show up in the TBrowser. Only registered helper objects are created. By default, only; TMethodBrowsable, TNonSplitBrowsable, and TCollectionPropertyBrowsable; are registered (see RegisterDefaultGenerators). You can prevent any of; their objects to show up in the browser by unregistering the generator:; ~~~ {.cpp}; TMethodBrowsable::Unregister(); ~~~; will stop creating browsable method helper objects from that call on.; Note that these helper objects are cached (in TBranch::fBrowsables);; already created (and thus cached) browsables will still appear in the; browser even after unregistering the corresponding generator. You can implement your own browsable objects and their generator; see; e.g. the simple TCollectionPropertyBrowsable. Note that you will have; to register your generator just like any other, and that you should; implement the following methods for your own class, mainly for; consistency reasons:; ~~~ {.cpp}; static void Register() {; TVirtualBranchBrowsable::RegisterGenerator(GetBrowsables); }; static void Unregister() {; TVirtualBranchBrowsable::UnregisterGenerator(GetBrowsables); }; ~~~; where GetBrowsables is a static member function of your class, that; creates the browsable helper objects, and has the signature; ~~~ {.cpp}; static Int_t GetBrowsables(TList& list, const TBranch* branch,; const TVirtualBranchBrowsable* parent=0);; ~~~. It has to return the number of browsable helper objects for parent; (or, if NULL, for branch) which are added to the list.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchBrowsable.cxx:161,extend,extend,161,tree/tree/src/TBranchBrowsable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchBrowsable.cxx,1,['extend'],['extend']
Modifiability,/** \class VGeneralLayer; Generic General Layer class. This class represents the general class for all layers in the Deep Learning; Module.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h:103,layers,layers,103,tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/GeneralLayer.h,1,['layers'],['layers']
Modifiability,/** constructor of GSL Integrator. In the case of Adaptive integration the Gauss-Krond rule of 31 points is used. @param type type of integration. The possible types are defined in the Integration::Type enumeration; @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:50,Adapt,Adaptive,50,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,1,['Adapt'],['Adaptive']
Modifiability,/** constructor of GSL Integrator. In the case of Adaptive integration the Gauss-Krond rule of 31 points is used; This is used by the plug-in manager (need a char * instead of enumerations). @param type type of integration. The possible types are defined in the Integration::Type enumeration; @param rule Gauss-Kronrod rule (from 1 to 6); @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:50,Adapt,Adaptive,50,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,2,"['Adapt', 'plug-in']","['Adaptive', 'plug-in']"
Modifiability,/** constructor of GSL MCIntegrator. VEGAS MC is set as default integration type. @param type type of integration using a char * (required by plug-in manager); @param absTol desired absolute Error; @param relTol desired relative Error; @param calls maximum number of function calls; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h:142,plug-in,plug-in,142,math/mathmore/inc/Math/GSLMCIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h,1,['plug-in'],['plug-in']
Modifiability,"/** minimizer configuration parameters **/; /// set print level",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:14,config,configuration,14,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['config'],['configuration']
Modifiability,"/** return covariance matrices element for variables ivar,jvar; if the variable is fixed the return value is zero; The ordering of the variables is the same as in the parameter and errors vectors; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx:43,variab,variables,43,math/mathcore/src/Minimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx,6,['variab'],"['variable', 'variables']"
Modifiability,/** return covariance matrices elements; if the variable is fixed the matrix is zero; The ordering of the variables is the same as in errors; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h:48,variab,variable,48,math/fumili/inc/TFumiliMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h,8,['variab'],"['variable', 'variables']"
Modifiability,/** summary Returns number of branches in the TTree; * desc Checks also sub-branches in the branches; * return {number} number of branches; * private; function getNumBranches(tree) {; function count(obj) {; if (!obj?.fBranches) return 0;; let nchld = 0;; obj.fBranches.arr.forEach(sub => { nchld += count(sub); });; return obj.fBranches.arr.length + nchld;; }. return count(tree);; }; */; /**; * @summary object with single variable in TTree::Draw expression; *; * @private; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:424,variab,variable,424,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['variab'],['variable']
Modifiability,"/******* Canonical representation *******/; /*; * The default return values from XXH functions are unsigned 32 and 64 bit; * integers.; * This the simplest and fastest format for further post-processing.; *; * However, this leaves open the question of what is the order on the byte level,; * since little and big endian conventions will store the same number differently.; *; * The canonical representation settles this issue by mandating big-endian; * convention, the same convention as human-readable numbers (large digits first).; *; * When writing hash values to storage, sending them over a network, or printing; * them, it's highly recommended to use the canonical representation to ensure; * portability across a wider range of systems, present and future.; *; * The following functions allow transformation of hash values to and from; * canonical format.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:699,portab,portability,699,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['portab'],['portability']
Modifiability,"/******************* End Escape Sequence Translator ***************/; /******************* Begin HTML tokenizer code *******************/; // The following variable becomes TRUE when the markup hash table; // (stored in HtmlMarkupMap[]) is initialized.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlParse.cxx:156,variab,variable,156,gui/guihtml/src/TGHtmlParse.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlParse.cxx,1,['variab'],['variable']
Modifiability,"/********************* setup **************************/; ////////////////////////////////////////////////////////////////////////; /// initialize variables for a given number of bins",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx:147,variab,variables,147,hist/unfold/src/TUnfoldBinning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/unfold/src/TUnfoldBinning.cxx,1,['variab'],['variables']
Modifiability,"/*************************** Static local guards ****************************/; /// Emits the guarded initializer and destructor setup for the given; /// variable, given that it couldn't be emitted as a constant.; /// If \p PerformInit is false, the initialization has been folded to a; /// constant and should not be performed.; ///; /// The variable may be:; /// - a static local variable; /// - a static data member of a class template instantiation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCXXABI.h:154,variab,variable,154,interpreter/llvm-project/clang/lib/CodeGen/CGCXXABI.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCXXABI.h,3,['variab'],['variable']
Modifiability,"/*************************** thread_local initialization ********************/; /// Emits ABI-required functions necessary to initialize thread_local; /// variables in this translation unit.; ///; /// \param CXXThreadLocals - The thread_local declarations in this translation; /// unit.; /// \param CXXThreadLocalInits - If this translation unit contains any; /// non-constant initialization or non-trivial destruction for; /// thread_local variables, a list of functions to perform the; /// initialization.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCXXABI.h:155,variab,variables,155,interpreter/llvm-project/clang/lib/CodeGen/CGCXXABI.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCXXABI.h,2,['variab'],['variables']
Modifiability,/*****************************************************************************************/; /* */; /* this section is really ugly. */; /* and slow. */; /* it could be made a lot better if there was some way to tell whether or not a given */; /* variable is a pointer or a pointer to a pointer. */; /* */; /*****************************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:246,variab,variable,246,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,1,['variab'],['variable']
Modifiability,"/**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VarTransformHandler *; * *; * *; * Description: *; * Implementation of unsupervised variable transformation methods *; * *; * Authors (alphabetical): *; * Abhinav Moudgil <abhinav.moudgil@research.iiit.ac.in> - IIIT-H, India *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VarTransformHandler.h:276,variab,variable,276,tmva/tmva/inc/TMVA/VarTransformHandler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VarTransformHandler.h,2,['variab'],['variable']
Modifiability,"/*********************************************************************************; //; // source:; //; // type: source code; //; // created: 20. Mar 2001; //; // author: Thorsten Glebe; // HERA-B Collaboration; // Max-Planck-Institut fuer Kernphysik; // Saupfercheckweg 1; // 69117 Heidelberg; // Germany; // E-mail: T.Glebe@mpi-hd.mpg.de; //; // Description: A fixed size two dimensional Matrix class; //; // changes:; // 20 Mar 2001 (TG) creation; // 21 Mar 2001 (TG) added operators +=, -=, *=, /=; // 26 Mar 2001 (TG) place_in_row(), place_in_col() added; // 02 Apr 2001 (TG) non-const Array() added; // 03 Apr 2001 (TG) invert() added; // 07 Apr 2001 (TG) CTOR from SVertex (dyadic product) added; // 09 Apr 2001 (TG) CTOR from array added; // 11 Apr 2001 (TG) rows(), cols(), size() replaced by rows, cols, size; // 25 Mai 2001 (TG) row(), col() added; // 04 Sep 2001 (TG) moved inlined functions to .icc file; // 11 Jan 2002 (TG) added operator==(), operator!=(); // 14 Jan 2002 (TG) added more operator==(), operator!=(), operator>(), operator<(); //; ***************************************************************************/; // for platform specific configurations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h:1164,config,configurations,1164,math/smatrix/inc/Math/SMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/smatrix/inc/Math/SMatrix.h,1,['config'],['configurations']
Modifiability,"/*******************************************************************************; Introduction. zstd, short for Zstandard, is a fast lossless compression algorithm, targeting; real-time compression scenarios at zlib-level and better compression ratios.; The zstd compression library provides in-memory compression and decompression; functions. The library supports regular compression levels from 1 up to ZSTD_maxCLevel(),; which is currently 22. Levels >= 20, labeled `--ultra`, should be used with; caution, as they require more memory. The library also offers negative; compression levels, which extend the range of speed vs. ratio preferences.; The lower the level, the faster the speed (at the cost of compression). Compression can be done in:; - a single step (described as Simple API); - a single step, reusing a context (described as Explicit context); - unbounded multiple steps (described as Streaming compression). The compression ratio achievable on small data can be highly improved using; a dictionary. Dictionary compression can be performed in:; - a single step (described as Simple dictionary API); - a single step, reusing a dictionary (described as Bulk-processing; dictionary API). Advanced experimental functions can be accessed using; `#define ZSTD_STATIC_LINKING_ONLY` before including zstd.h. Advanced experimental APIs should never be used with a dynamically-linked; library. They are not ""stable""; their definitions or signatures may change in; the future. Only static linking is allowed.; *******************************************************************************/; /*------ Version ------*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h:599,extend,extend,599,builtins/zstd/zstd.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/zstd.h,1,['extend'],['extend']
Modifiability,/******************************************************************************/; // Exception-safe global variable holders; /******************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveUtil.h:107,variab,variable,107,graf3d/eve/inc/TEveUtil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveUtil.h,1,['variab'],['variable']
Modifiability,"/******************************************************************************/; // Missing primary vertex class.; /******************************************************************************/; /******************************************************************************/; /******************************************************************************/; // This whole construction is somewhat doubtable. It requires; // shameless copying of experiment data. What is good about this; // scheme:; //; // 1) Filters can be applied at copy time so that only part of the; // data is copied over.; //; // 2) Once the data is extracted it can be used without experiment; // software. Thus, external service can provide this data and local; // client can be really thin.; //; // 3) Some pretty advanced visualization schemes/selections can be; // implemented in a general framework by providing data extractors; // only. This is also good for PR or VIP displays.; //; // 4) These classes can be extended by particular implementations. The; // container classes will use TClonesArray with user-specified element; // class.; // The common behaviour could be implemented entirely without usage of; // a common base classes, by just specifying names of members that; // retrieve specific data. This is fine as long as one only uses tree; // selections but becomes painful for extraction of data into local; // structures (could a) use interpreter but this is an overkill and; // would cause serious trouble for multi-threaded environment; b) use; // member offsets and data-types from the dictionary).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveVSDStructs.h:995,extend,extended,995,graf3d/eve/inc/TEveVSDStructs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveVSDStructs.h,1,['extend'],['extended']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * *; * Simple Gamma distribution; * authors: Stefan A. Schmitz, Gregory Schott; * *; *****************************************************************************/; /** \class RooGamma; \ingroup Roofit. Implementation of the Gamma PDF for RooFit/RooStats.; \f[; f(x) = \frac{(x-\mu)^{\gamma-1} \cdot \exp^{(-(x-mu) / \beta}}{\Gamma(\gamma) \cdot \beta^{\gamma}}; \f]; defined for \f$ x \geq 0 \f$ if \f$ \mu = 0 \f$. Notes from Kyle Cranmer:. Wikipedia and several sources refer to the Gamma distribution as. \f[; G(\mu,\alpha,\beta) = \beta^\alpha \mu^{(\alpha-1)} \frac{e^{(-\beta \mu)}}{\Gamma(\alpha)}; \f]. Below is the correspondence:. | Wikipedia | This Implementation |; |-----------------|--------------------------|; | \f$ \alpha \f$ | \f$ \gamma \f$ |; | \f$ \beta \f$ | \f$ \frac{1}{\beta} \f$ |; | \f$ \mu \f$ | x |; | 0 | \f$ \mu \f$ |. Note, that for a model Pois(N|mu), a uniform prior on mu, and a measurement N; the posterior is in the Wikipedia parameterization Gamma(mu, alpha=N+1, beta=1); thus for this implementation it is:. `RooGamma(_x=mu,_gamma=N+1,_beta=1,_mu=0)`. Also note, that in this case it is equivalent to; RooPoison(N,mu) and treating the function as a PDF in mu.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx:1065,parameteriz,parameterization,1065,roofit/roofit/src/RooGamma.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGamma.cxx,1,['parameteriz'],['parameterization']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * @(#)root/roofit:$Id$ *; * *; * RooFit Lognormal PDF *; * *; * Author: Gregory Schott and Stefan Schmitz *; * *; *****************************************************************************/; /** \class RooLognormal; \ingroup Roofit. RooFit Lognormal PDF. The two parameters are:; - `m0`: the median of the distribution; - `k = exp(sigma)`: sigma is called the shape parameter in the TMath parameterization. \f[; \mathrm{RooLognormal}(x \, | \, m_0, k) = \frac{1}{\sqrt{2\pi \cdot \ln(k) \cdot x}} \cdot \exp\left(; \frac{-\ln^2(\frac{x}{m_0})}{2 \ln^2(k)} \right) \f]. The parameterization here is physics driven and differs from the ROOT::Math::lognormal_pdf() in `x,m,s,x0` with:; - `m = log(m0)`; - `s = log(k)`; - `x0 = 0`; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx:493,parameteriz,parameterization,493,roofit/roofit/src/RooLognormal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLognormal.cxx,2,['parameteriz'],['parameterization']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2019, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; // Authors of this class:; // T. Skwarnicki:; // - modify RooCBShape to Asymmetrical Double-Sided CB; // Michael Wilkinson; // - add to RooFit source; // Jonas Rembser, CERN 02/2021:; // - merging RooDSCBShape with RooSDSCBShape to RooCrystalBall; // - implement possibility to have asymmetrical Gaussian core; // - complete rewrite of evaluation and integral code to reduce code; // duplication; /** \class RooCrystalBall; \ingroup Roofit. PDF implementing the generalized Asymmetrical Double-Sided Crystall Ball line shape.; \f[; f(m;m_0,\sigma,\alpha_L,n_L,\alpha_R,n_R) =; \begin{cases}; A_L \cdot (B_L - \frac{m - m_0}{\sigma_L})^{-n_L}, & \mbox{for }\frac{m - m_0}{\sigma_L} < -\alpha_L \\; \exp \left( - \frac{1}{2} \cdot \left[ \frac{m - m_0}{\sigma_L} \right]^2 \right), & \mbox{for }\frac{m - m_0}{\sigma_L} \leq 0 \\; \exp \left( - \frac{1}{2} \cdot \left[ \frac{m - m_0}{\sigma_R} \right]^2 \right), & \mbox{for }\frac{m - m_0}{\sigma_R} \leq \alpha_R \\; A_R \cdot (B_R + \frac{m - m_0}{\sigma_R})^{-n_R}, & \mbox{otherwise}, \\; \end{cases}; \f]; times some normalization factor,; where; \f[; \begin{align}; A_i &= \left(\frac{n_i}{\left| \alpha_i \right|}\right)^{n_i} \cdot \exp\left(- \frac {\left| \alpha_i \right|^2}{2}\right) \\; B_i &= \frac{n_i}{\left| \alpha_i \right|} - \left| \alpha_i \right| \\; \end{align}; \f]; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx:967,rewrite,rewrite,967,roofit/roofit/src/RooCrystalBall.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooCrystalBall.cxx,1,['rewrite'],['rewrite']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooWorkspace.cxx; \class RooWorkspace; \ingroup Roofitcore. Persistable container for RooFit projects. A workspace; can contain and own variables, p.d.f.s, functions and datasets. All objects; that live in the workspace are owned by the workspace. The `import()` method; enforces consistency of objects upon insertion into the workspace (e.g. no; duplicate object with the same name are allowed) and makes sure all objects; in the workspace are connected to each other. Easy accessor methods like; `pdf()`, `var()` and `data()` allow to refer to the contents of the workspace by; object name. The entire RooWorkspace can be saved into a ROOT TFile and organises; the consistent streaming of its contents without duplication.; If a RooWorkspace contains custom classes, i.e. classes not in the; ROOT distribution, portability of workspaces can be enhanced by; storing the source code of those classes in the workspace as well.; This process is also organized by the workspace through the; `importClassCode()` method. ### Seemingly random crashes when reading large workspaces; When reading or loading workspaces with deeply nested PDFs, one can encounter; ouf-of-memory errors if the stack size is too small. This manifests in crashes; at seemingly random locations, or in the process silently ending.; Unfortunately, ROOT neither recover from th",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:792,variab,variables,792,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,1,['variab'],['variables']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooExtendPdf; RooExtendPdf is a wrapper around an existing PDF that adds a; parameteric extended likelihood term to the PDF, optionally divided by a; fractional term from a partial normalization of the PDF:; \f[; n_\mathrm{Expected} = N \quad \text{or} \quad n_\mathrm{Expected} = N / \mathrm{frac}; \f]; where \f$ N \f$ is supplied as a RooAbsReal to RooExtendPdf.; The fractional term is defined as; \f[; \mathrm{frac} = \frac{\int_\mathrm{cutRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}{; \int_\mathrm{normRegion[x]} \mathrm{pdf}(x,y) \; \mathrm{d}x \mathrm{d}y}; \f]. where \f$ x \f$ is the set of dependents involved in the selection region and \f$ y \f$; is the set of remaining dependents. \f$ \mathrm{cutRegion}[x] \f$ is a limited integration range that is contained in; the nominal integration range \f$ \mathrm{normRegion}[x] \f$.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx:794,extend,extended,794,roofit/roofitcore/src/RooExtendPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendPdf.cxx,1,['extend'],['extended']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAbsFunc.cxx; \class RooAbsFunc; \ingroup Roofitcore. Abstract interface for evaluating a real-valued function of one real variable; and performing numerical algorithms on it. The purpose of this interface is; to decouple RooAbsArg-specific implementations from numerical algorithms that; only need a simple function evaluation interface. The domain of the function; is assumed to be an n-dimensional box with edge coordinates specified by the; the getMinLimit() and getMaxLimit() methods.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsFunc.cxx:831,variab,variable,831,roofit/roofitcore/src/RooAbsFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsFunc.cxx,1,['variab'],['variable']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAbsMCStudyModule.cxx; \class RooAbsMCStudyModule; \ingroup Roofitcore. Base class for add-on modules to RooMCStudy that; can perform additional calculations on each generate+fit cycle managed; by RooMCStudy. This class can insert code to be executed before each generation step,; between the generation and fitting step and after the fitting step.; Any summary output variables declared in the RooDataSet exported through; summaryData() is merged with the 'master' summary dataset in RooMCStudy. Look at RooDLLSignificanceMCSModule for an example of an implementation.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsMCStudyModule.cxx:1077,variab,variables,1077,roofit/roofitcore/src/RooAbsMCStudyModule.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsMCStudyModule.cxx,1,['variab'],['variables']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAbsTestStatistic.cxx; \class RooAbsTestStatistic; \ingroup Roofitcore. Abstract base class for all test; statistics. Test statistics that evaluate the PDF at each data; point should inherit from the RooAbsOptTestStatistic class which; implements several generic optimizations that can be done for such; quantities. This test statistic base class organizes calculation of test; statistic values for RooSimultaneous PDF as a combination of test; statistic values for the PDF components of the simultaneous PDF and; organizes multi-processor parallel calculation of test statistic; values. For the latter, the test statistic value is calculated in; partitions in parallel executing processes and a posteriori; combined in the main thread.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsTestStatistic.cxx:891,inherit,inherit,891,roofit/roofitcore/src/RooAbsTestStatistic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsTestStatistic.cxx,1,['inherit'],['inherit']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAdaptiveGaussKronrodIntegrator1D.cxx; \class RooAdaptiveGaussKronrodIntegrator1D; \ingroup Roofitcore. Implements the Gauss-Kronrod integration algorithm. An adaptive Gaussian quadrature method for numerical integration in; which error is estimated based on evaluation at special points; known as the ""Kronrod points"". By suitably picking these points,; abscissas from previous iterations can be reused as part of the new; set of points, whereas usual Gaussian quadrature would require; recomputation of all abscissas at each iteration. This class automatically handles (-inf,+inf) integrals by dividing; the integration in three regions (-inf,-1), (-1,1), (1,inf) and; calculating the 1st and 3rd term using a \f$ x \rightarrow 1/x \f$ coordinate; transformation. This class embeds the adaptive Gauss-Kronrod integrator from the; GNU Scientific Library version 1.5 and applies a chosen rule ( 10-,; 21-, 31-, 41, 51- or 61-point). The integration domain is; subdivided and recursively integrated until the required precision; is reached. For integrands with integrable singularities the Wynn epsilon rule; can be selected to speed up the convergence of these integrals.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx:867,adapt,adaptive,867,roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooAdaptiveGaussKronrodIntegrator1D.cxx,2,['adapt'],['adaptive']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooAdaptiveIntegratorND.cxx; \class RooAdaptiveIntegratorND; \ingroup Roofitcore. Adaptive one-dimensional numerical integration algorithm.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx:788,Adapt,Adaptive,788,roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAdaptiveIntegratorND.cxx,1,['Adapt'],['Adaptive']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooBinning.cxx; \class RooBinning; \ingroup Roofitcore. Implements a RooAbsBinning in terms; of an array of boundary values, posing no constraints on the choice; of binning, thus allowing variable bin sizes. Various methods allow; the user to add single bin boundaries, mirrored pairs, or sets of; uniformly spaced boundaries.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinning.cxx:894,variab,variable,894,roofit/roofitcore/src/RooBinning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinning.cxx,1,['variab'],['variable']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooCacheManager.cxx; \class RooCacheManager; \ingroup Roofitcore. Manages the storage of any type of data indexed on; the choice of normalization and optionally the set of integrated observables.; The purpose of this class is to facilitate storage of intermediate results; in operator p.d.f.s whose value and inner working are often highly dependent; on the user provided choice of normalization in getVal(). For efficiency reasons these normalization set pointer are; dereferenced as little as possible. This class contains a lookup; table for RooArgSet pointer pairs -> normalization lists. Distinct; pointer pairs that represent the same normalization/projection are; recognized and will all point to the same normalization list. Lists; for up to 'maxSize' different normalization/ projection; configurations can be cached.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCacheManager.cxx:1503,config,configurations,1503,roofit/roofitcore/src/RooCacheManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCacheManager.cxx,1,['config'],['configurations']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooCmdConfig.cxx; \class RooCmdConfig; \ingroup Roofitcore. Configurable parser for RooCmdArg named; arguments. It maps the contents of named arguments named to integers,; doubles, strings and TObjects that can be retrieved after processing; a set of RooCmdArgs. The parser also has options to enforce syntax; rules such as (conditionally) required arguments, mutually exclusive; arguments and dependencies between arguments.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCmdConfig.cxx:766,Config,Configurable,766,roofit/roofitcore/src/RooCmdConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooCmdConfig.cxx,1,['Config'],['Configurable']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooConvGenContext.cxx; \class RooConvGenContext; \ingroup Roofitcore. Efficient implementation of the generator context; specific for RooAbsAnaConvPdf objects. The physics model is generated; with a truth resolution model and the requested resolution model is generated; separately as a PDF. The convolution variable of the physics model is; subsequently explicitly smeared with the resolution model distribution.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvGenContext.cxx:1014,variab,variable,1014,roofit/roofitcore/src/RooConvGenContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvGenContext.cxx,1,['variab'],['variable']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooDataProjBinding.cxx; \class RooDataProjBinding; \ingroup Roofitcore. adaptor that projects a real function via summation of states; provided in a dataset. The real function must be attached to the; dataset before creating this binding object. If the dataset only contains category variables, the summation is optimized; performing a weighted sum over the states of a RooSuperCategory that is; constructed from all the categories in the dataset. **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataProjBinding.cxx:778,adapt,adaptor,778,roofit/roofitcore/src/RooDataProjBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataProjBinding.cxx,2,"['adapt', 'variab']","['adaptor', 'variables']"
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooDirItem.cxx; \class RooDirItem; \ingroup Roofitcore. Utility base class for \ref Roofitmain objects that are to be attached; to ROOT directories. Concrete classes inherit the appendToDir and removeToDir; methods that can be used to safely attach and detach one self from a TDirectory.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDirItem.cxx:872,inherit,inherit,872,roofit/roofitcore/src/RooDirItem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDirItem.cxx,1,['inherit'],['inherit']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooEfficiency.cxx; \class RooEfficiency; \ingroup Roofitcore. A PDF helper class to fit efficiencies parameterized; by a supplied function F. Given a dataset with a category C that determines if a given; event is accepted or rejected for the efficiency to be measured,; this class evaluates as F if C is 'accept' and as (1-F) if; C is 'reject'. Values of F below 0 and above 1 are clipped.; F may have an arbitrary number of dependents and parameters; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEfficiency.cxx:807,parameteriz,parameterized,807,roofit/roofitcore/src/RooEfficiency.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEfficiency.cxx,1,['parameteriz'],['parameterized']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooFoamGenerator.cxx; \class RooFoamGenerator; \ingroup Roofitcore. Generic Monte Carlo toy generator that implement; the TFOAM sampling technique on any positively valued function.; The RooFoamGenerator generator is used by the various generator context; classes to take care of generation of observables for which p.d.fs; do not define internal methods. The foam generator reacts to the following config options:; - nCell[123N]D; - nSample; - chatLevel; Access those using:; myPdf->specialGeneratorConfig()->getConfigSection(""RooFoamGenerator"").setRealValue(""nSample"",1e4);. \see rf902_numgenconfig.C; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFoamGenerator.cxx:1105,config,config,1105,roofit/roofitcore/src/RooFoamGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFoamGenerator.cxx,1,['config'],['config']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooFunctor.cxx; \class RooFunctor; \ingroup Roofitcore. Lightweight interface adaptor that exports a RooAbsPdf as a functor.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFunctor.cxx:784,adapt,adaptor,784,roofit/roofitcore/src/RooFunctor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFunctor.cxx,1,['adapt'],['adaptor']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooGenericPdf.cxx; \class RooGenericPdf; \ingroup Roofitcore. Implementation of a probability density function; that takes a RooArgList of servers and a C++ expression string defining how; its value should be calculated from the given list of servers.; A fully numerical integration is automatically performed to normalize the given; expression. RooGenericPdf uses a RooFormula object to perform the expression evaluation. The string expression can be any valid TFormula expression referring to the; listed servers either by name or by their ordinal list position. These three are; equivalent:; ```; RooFormulaVar(""gen"", ""x*y"", RooArgList(x,y)) // reference by name; RooFormulaVar(""gen"", ""@0*@1"", RooArgList(x,y)) // reference by ordinal with @; RooFormulaVar(""gen"", ""x[0]*x[1]"", RooArgList(x,y)) // TFormula-builtin reference by ordinal; ```; Note that `x[i]` is an expression reserved for TFormula. All variable references; are automatically converted to the TFormula-native format. If a variable with; the name `x` is given, the RooFormula interprets `x[i]` as a list position,; but `x` without brackets as the name of a RooFit object. The last two versions, while slightly less readable, are more versatile because; the names of the arguments are not hard coded.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx:1611,variab,variable,1611,roofit/roofitcore/src/RooGenericPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenericPdf.cxx,2,['variab'],['variable']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooInvTransform.cxx; \class RooInvTransform; \ingroup Roofitcore. Lightweight function binding that returns the inverse of an input function binding.; Apply the change of variables transformation x -> 1/x to the input; function and its range. The function must be one dimensional and its; range cannot include zero.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooInvTransform.cxx:877,variab,variables,877,roofit/roofitcore/src/RooInvTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooInvTransform.cxx,1,['variab'],['variables']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooLinTransBinning.cxx; \class RooLinTransBinning; \ingroup Roofitcore. Special binning implementation for RooLinearVar; that transforms the binning of the RooLinearVar input variable in the same; way that RooLinearVar does; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinTransBinning.cxx:881,variab,variable,881,roofit/roofitcore/src/RooLinTransBinning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooLinTransBinning.cxx,1,['variab'],['variable']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMCIntegrator.cxx; \class RooMCIntegrator; \ingroup Roofitcore. Implements an adaptive multi-dimensional Monte Carlo; numerical integration, following the VEGAS algorithm originally described; in G. P. Lepage, J. Comp. Phys. 27, 192(1978). This implementation is; based on a C version from the 0.9 beta release of the GNU scientific library.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx:786,adapt,adaptive,786,roofit/roofitcore/src/RooMCIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCIntegrator.cxx,1,['adapt'],['adaptive']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNLLVar.cxx; \class RooNLLVar; \ingroup Roofitcore. Implements a -log(likelihood) calculation from a dataset; and a PDF. The NLL is calculated as; \f[; \sum_\mathrm{data} -\log( \mathrm{pdf}(x_\mathrm{data})); \f]; In extended mode, a; \f$ N_\mathrm{expect} - N_\mathrm{observed}*log(N_\mathrm{expect}) \f$ term is added.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx:926,extend,extended,926,roofit/roofitcore/src/RooNLLVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVar.cxx,1,['extend'],['extended']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenConfig.cxx; \class RooNumGenConfig; \ingroup Roofitcore. Holds the configuration parameters of the various; numeric integrators used by RooRealIntegral. RooRealIntegral and RooAbsPdf; use this class in the (normalization) integral configuration interface; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:782,config,configuration,782,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,2,['config'],['configuration']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumGenFactory.cxx; \class RooNumGenFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:861,config,configuration,861,roofit/roofitcore/src/RooNumGenFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx,2,['config'],['configuration']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntConfig.cxx; \class RooNumIntConfig; \ingroup Roofitcore. Holds the configuration parameters of the various; numeric integrators used by RooRealIntegral. RooRealIntegral and RooAbsPdf; use this class in the (normalization) integral configuration interface; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx:782,config,configuration,782,roofit/roofitcore/src/RooNumIntConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntConfig.cxx,2,['config'],['configuration']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooNumIntFactory.cxx; \class RooNumIntFactory; \ingroup Roofitcore. %Factory to instantiate numeric integrators; from a given function binding and a given configuration. The factory; searches for a numeric integrator registered with the factory that; has the ability to perform the numeric integration. The choice of; method may depend on the number of dimensions integrated,; the nature of the integration limits (closed or open ended) and; the preference of the caller as encoded in the configuration object.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx:861,config,configuration,861,roofit/roofitcore/src/RooNumIntFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumIntFactory.cxx,2,['config'],['configuration']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooPlot.cxx; \class RooPlot; \ingroup Roofitcore. Plot frame and a container for graphics objects; within that frame. As a frame, it provides the TH1-style public interface; for setting plot ranges, configuring axes, etc. As a container, it; holds an arbitrary set of objects that might be histograms of data,; curves representing a fit model, or text labels. Use the Draw(); method to draw a frame and the objects it contains. Use the various; add...() methods to add objects to be drawn. In general, the; add...() methods create a private copy of the object you pass them; and return a pointer to this copy. The caller owns the input object; and this class owns the returned object.; All RooAbsReal and RooAbsData derived classes implement plotOn(); functions that facilitate to plot themselves on a given RooPlot, e.g.; ~~~ {.cpp}; RooPlot *frame = x.frame() ;; data.plotOn(frame) ;; pdf.plotOn(frame) ;; ~~~; These high level functions also take care of any projections; or other mappings that need to be made to plot a multi-dimensional; object onto a one-dimensional plot.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx:905,config,configuring,905,roofit/roofitcore/src/RooPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPlot.cxx,1,['config'],['configuring']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooProdPdf.cxx; \class RooProdPdf; \ingroup Roofitcore. Efficient implementation of a product of PDFs of the form; \f[ \prod_{i=1}^{N} \mathrm{PDF}_i (x, \ldots) \f]. PDFs may share observables. If that is the case any irreducible subset; of PDFs that share observables will be normalised with explicit numeric; integration as any built-in normalisation will no longer be valid. Alternatively, products using conditional PDFs can be defined, *e.g.*. \f[ F(x|y) \cdot G(y), \f]. meaning a PDF \f$ F(x) \f$ **given** \f$ y \f$ and a PDF \f$ G(y) \f$.; In this construction, \f$ F \f$ is only; normalised w.r.t \f$ x\f$, and \f$ G \f$ is normalised w.r.t \f$ y \f$. The product in this construction; is properly normalised. If exactly one of the component PDFs supports extended likelihood fits, the; product will also be usable in extended mode, returning the number of expected; events from the extendable component PDF. The extendable component does not; have to appear in any specific place in the list.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:1473,extend,extended,1473,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,4,['extend'],"['extendable', 'extended']"
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooQuasiRandomGenerator.cxx; \class RooQuasiRandomGenerator; \ingroup Roofitcore. This class generates the quasi-random (aka ""low discrepancy""); sequence for dimensions up to 12 using the Niederreiter base 2; algorithm described in Bratley, Fox, Niederreiter, ACM Trans.; Model. Comp. Sim. 2, 195 (1992). This implementation was adapted; from the 0.9 beta release of the GNU scientific library.; Quasi-random number sequences are useful for improving the; convergence of a Monte Carlo integration.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx:1035,adapt,adapted,1035,roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooQuasiRandomGenerator.cxx,1,['adapt'],['adapted']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRandomizeParamMCSModule.cxx; \class RooRandomizeParamMCSModule; \ingroup Roofitcore. Add-on module to RooMCStudy that; allows you to randomize input generation parameters. Randomized generation; parameters can be sampled from a uniform or Gaussian distribution.; For every randomized parameter, an extra variable is added to; RooMCStudy::fitParDataSet() named <tt>`<parname>`_gen</tt> that indicates the actual; value used for generation for each trial.; You can also choose to randomize the sum of N parameters, rather; than a single parameter. In that case common multiplicative scale; factor is applied to each component to bring the sum to the desired; target value taken from either uniform or Gaussian sampling. This; latter option is for example useful if you want to change the total; number of expected events of an extended p.d.f; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx:1013,variab,variable,1013,roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,2,"['extend', 'variab']","['extended', 'variable']"
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRangeBoolean.cxx; \class RooRangeBoolean; \ingroup Roofitcore. Returns `1.0` if variable is within given a range and `0.0` otherwise.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRangeBoolean.cxx:789,variab,variable,789,roofit/roofitcore/src/RooRangeBoolean.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRangeBoolean.cxx,1,['variab'],['variable']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealBinding.cxx; \class RooRealBinding; \ingroup Roofitcore. Lightweight interface adaptor that binds a RooAbsReal object to a subset; of its servers and present it as a simple array oriented interface.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx:792,adapt,adaptor,792,roofit/roofitcore/src/RooRealBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealBinding.cxx,1,['adapt'],['adaptor']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealIntegral.cxx; \class RooRealIntegral; \ingroup Roofitcore. Performs hybrid numerical/analytical integrals of RooAbsReal objects.; The class performs none of the actual integration, but only manages the logic; of what variables can be integrated analytically, accounts for eventual jacobian; terms and defines what numerical integrations needs to be done to complement the; analytical integral.; The actual analytical integrations (if any) are done in the PDF themselves, the numerical; integration is performed in the various implementations of the RooAbsIntegrator base class.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:930,variab,variables,930,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['variab'],['variables']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRealVar.cxx; \class RooRealVar; \ingroup Roofitcore. Variable that can be changed from the outside.; For example by the user or a fitter. It can be written into datasets, can hold a (possibly asymmetric) error, and; can have several ranges. These can be accessed with names, to e.g. limit fits; or integrals to sub ranges. The range without any name is used as default range.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx:762,Variab,Variable,762,roofit/roofitcore/src/RooRealVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealVar.cxx,1,['Variab'],['Variable']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooRombergIntegrator.cxx; \class RooRombergIntegrator; \ingroup Roofitcore. Adaptive numerical integration algorithm. It uses Romberg's method with trapezoids or midpoints.; The integrand is approximated by \f$ 1, 2, 4, 8, \ldots, 2^n \f$ trapezoids, and; Richardson series acceleration is applied to the series. For refinement step \f$ n \f$, that is; \f[; R(n,m) = \frac{1}{4^m - 1} \left( 4^m R(n, m-1) - R(n-1, m-1) \right); \f]; The integrator will evaluate the first six refinements (i.e. 64 points) in one go,; apply a five-point series acceleration, and successively add more steps until the; desired precision is reached.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx:782,Adapt,Adaptive,782,roofit/roofitcore/src/RooRombergIntegrator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRombergIntegrator.cxx,1,['Adapt'],['Adaptive']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooSimGenContext.cxx; \class RooSimGenContext; \ingroup Roofitcore. Efficient implementation of the generator context; specific for RooSimultaneous PDFs when generating more than one of the; component pdfs.; It runs in two modes:; - Proto data with category entries are given: An event from the same category as; in the proto data is created.; - No proto data: A category is chosen randomly.; \note This requires that the PDFs are extended, to determine the relative probabilities; that an event originates from a certain category.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimGenContext.cxx:1137,extend,extended,1137,roofit/roofitcore/src/RooSimGenContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimGenContext.cxx,1,['extend'],['extended']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /**; * \class RooResolutionModel; * RooResolutionModel is the base class for PDFs that represent a; * resolution model that can be convoluted with a physics model of the form; * \f[; * \mathrm{Phys}(x,a,b) = \sum_k \mathrm{coef}_k(a) * \mathrm{basis}_k(x,b); * \f]; * where basis_k are a limited number of functions in terms of the variable; * to be convoluted and coef_k are coefficients independent of the convolution; * variable.; *; * Classes derived from RooResolutionModel implement; * \f[; * R_k(x,\bar{b},\bar{c}) = \int \mathrm{basis}_k(x',\bar{b}) * \mathrm{resModel}(x-x',\bar{c}) \; \mathrm{d} x',; * \f]; * which RooAbsAnaConvPdf uses to construct the pdf for [ Phys (x) R ] :; * \f[; * \mathrm{PDF}(x,\bar a, \bar b, \bar c) = \sum_k \mathrm{coef}_k(\bar a) * R_k(x, \bar b, \bar c); * \f]; *; * A minimal implementation of a RooResolutionModel consists of a; * ```; * Int_t basisCode(const char* name); * ```; * function indicating which basis functions this resolution model supports, and; * ```; * double evaluate(),; * ```; * which should implement the resolution model (optionally convoluted with one of the; * supported basis functions). RooResolutionModel objects can be used as regular; * PDFs (They inhe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx:1107,variab,variable,1107,roofit/roofitcore/src/RooResolutionModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx,2,['variab'],['variable']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooAddModel; ///; /// RooAddModel is an efficient implementation of a sum of PDFs of the form; /// \f[; /// c_1 \cdot \mathrm{PDF}_1 + c_2 \cdot \mathrm{PDF}_2 + ... + c_n \cdot \mathrm{PDF}_n; /// \f]; /// or; /// \f[; /// c_1 \cdot \mathrm{PDF}_1 + c_2 \cdot \mathrm{PDF}_2 + ... + \left( 1-\sum_{i=1}^{n-1} c_i \right) \cdot \mathrm{PDF}_n; /// \f]; /// The first form is for extended likelihood fits, where the; /// expected number of events is \f$ \sum_i c_i \f$. The coefficients \f$ c_i \f$; /// can either be explicitly provided, or, if all components support; /// extended likelihood fits, they can be calculated from the contribution; /// of each PDF to the total number of expected events.; ///; /// In the second form, the sum of the coefficients is enforced to be one,; /// and the coefficient of the last PDF is calculated from that condition.; ///; /// RooAddModel relies on each component PDF to be normalized, and will perform; /// no normalization other than calculating the proper last coefficient \f$ c_n \f$, if requested.; /// An (enforced) condition for this assumption is that each \f$ \mathrm{PDF}_i \f$ is independent; /// of each coefficient \f$ i \f$.; ///; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx:1165,extend,extended,1165,roofit/roofitcore/src/RooAddModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx,2,['extend'],['extended']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; /// \class RooXYChi2Var; /// RooXYChi2Var implements a simple chi^2 calculation from an unbinned; /// dataset with values x,y with errors on y (and optionally on x) and a function.; /// The function can be either a RooAbsReal, or an extended RooAbsPdf where; /// the function value is calculated as the probability density times the; /// expected number of events.; /// The chi^2 is calculated as; /// ```; ///; /// / (Data[y]-) - func \+2; /// Sum[point] | ------------------ |; /// \ Data[ErrY] /; /// ```; ///",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:1008,extend,extended,1008,roofit/roofitcore/src/RooXYChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx,1,['extend'],['extended']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; ///; /// Class RooRealSumFunc implements a PDF constructed from a sum of; /// functions:; /// ```; /// Sum(i=1,n-1) coef_i * func_i(x) + [ 1 - (Sum(i=1,n-1) coef_i ] * func_n(x); /// pdf(x) = ------------------------------------------------------------------------------; /// Sum(i=1,n-1) coef_i * Int(func_i)dx + [ 1 - (Sum(i=1,n-1) coef_i ] * Int(func_n)dx; ///; /// ```; /// where coef_i and func_i are RooAbsReal objects, and x is the collection of dependents.; /// In the present version coef_i may not depend on x, but this limitation may be removed in the future; ///; /// ### Difference between RooAddPdf / RooRealSum{Func|Pdf}; /// - RooAddPdf is a PDF of PDFs, *i.e.* its components need to be normalised and non-negative.; /// - RooRealSumPdf is a PDF of functions, *i.e.*, its components can be negative, but their sum cannot be. The normalisation; /// is computed automatically, unless the PDF is extended (see above).; /// - RooRealSumFunc is a sum of functions. It is neither normalised, nor need it be positive.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumFunc.cxx:1685,extend,extended,1685,roofit/roofitcore/src/RooRealSumFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealSumFunc.cxx,1,['extend'],['extended']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; //////////////////////////////////////////////////////////////////////////////; //; // RooStreamParser is a utility class to parse istreams into tokens and optionally; // convert them into basic types (double,int,string); //; // The general tokenizing philosophy is that there are two kinds of tokens: value; // and punctuation. The former are variable length, the latter always; // one character. A token is terminated if one of the following conditions; // occur; // - space character found (' ',tab,newline); // - change of token type (value -> punctuation or vv); // - end of fixed-length token (punctuation only); // - start or end of quoted string; //; // The parser is aware of floating point notation and will assign leading; // minus signs, decimal points etc to a value token when this is obvious; // from the context. The definition of what is punctuation can be redefined.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx:1039,variab,variable,1039,roofit/roofitcore/src/RooStreamParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooStreamParser.cxx,1,['variab'],['variable']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * AL, Alfio Lazzaro, INFN Milan, alfio.lazzaro@mi.infn.it *; * PB, Patrick Bos, NL eScience Center, p.bos@esciencecenter.nl *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooMinimizer.cxx; \class RooMinimizer; \ingroup Roofitcore. Wrapper class around ROOT::Math::Minimizer that; provides a seamless interface between the minimizer functionality; and the native RooFit interface.; By default the Minimizer is Minuit 2.; RooMinimizer can minimize any RooAbsReal function with respect to; its parameters. Usual choices for minimization are the object returned by; RooAbsPdf::createNLL() or RooAbsReal::createChi2().; RooMinimizer has methods corresponding to MINUIT functions like; hesse(), migrad(), minos() etc. In each of these function calls; the state of the MINUIT engine is synchronized with the state; of the RooFit variables: any change in variables, change; in the constant status etc is forwarded to MINUIT prior to; execution of the MINUIT call. Afterwards the RooFit objects; are resynchronized with the output state of MINUIT: changes; parameter values, errors are propagated.; Various methods are available to control verbosity, profiling,; automatic PDF optimization.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx:1358,variab,variables,1358,roofit/roofitcore/src/RooMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMinimizer.cxx,2,['variab'],['variables']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * @(#)root/roofitcore:$Name: $:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; \file RooExtendedTerm.cxx; \class RooExtendedTerm; \ingroup Roofitcore. A p.d.f with no observables that only introduces; an extended ML term for a given number of expected events term when an extended ML; is constructed.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendedTerm.cxx:834,extend,extended,834,roofit/roofitcore/src/RooExtendedTerm.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendedTerm.cxx,2,['extend'],['extended']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitCore *; * File: $Id$; * Authors: *; * WV, Wouter Verkerke, NIKHEF, verkerke@nikhef.nl *; * *; * Copyright (c) 2000-2008, NIKHEF, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; *****************************************************************************/; /** \class RooFunctorBinding; \ingroup Roofit. RooFunctorBinding makes math functions from ROOT usable in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/; /** \class RooFunctorPdfBinding; \ingroup Roofit; RooFunctorPdfBinding makes math functions from ROOT usable as PDFs in RooFit. It takes; a ROOT::Math::IBaseFunctionMultiDim, and binds the variables of this function to; the RooFit variables passed in the constructor.; When the PDF is evaluated, the bound function is evaluated, and also integrated numerically; to normalise it to unity over the range of its observables. Instances of function binding; classes are fully functional RooFit function objects with one exception:; if the bound function is *not* a standard TMath or MathMore function the; class cannot be persisted in a RooWorkspace without registering the function; pointer first using RooCFunction1Binding<T1,T2>::register().; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:601,variab,variables,601,roofit/roofit/src/RooFunctorBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx,4,['variab'],['variables']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * GR, Gerhard Raven, UC San Diego, raven@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooKeysPdf; \ingroup Roofit. Class RooKeysPdf implements a one-dimensional kernel estimation p.d.f which model the distribution; of an arbitrary input dataset as a superposition of Gaussian kernels, one for each data point,; each contributing 1/N to the total integral of the pdf.; If the 'adaptive mode' is enabled, the width of the Gaussian is adaptively calculated from the; local density of events, i.e. narrow for regions with high event density to preserve details and; wide for regions with low event density to promote smoothness. The details of the general algorithm; are described in the following paper:. Cranmer KS, Kernel Estimation in High-Energy Physics.; Computer Physics Communications 136:198-207,2001 - e-Print Archive: hep ex/0011057; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx:1056,adapt,adaptive,1056,roofit/roofit/src/RooKeysPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooKeysPdf.cxx,2,['adapt'],"['adaptive', 'adaptively']"
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooGExpModel; \ingroup Roofit. The RooGExpModel is a RooResolutionModel implementation that models; a resolution function that is the convolution of a Gaussian with; a one-sided exponential. Such objects can be used; for analytical convolutions with classes inheriting from RooAbsAnaConvPdf.; \f[; \mathrm{GExp} = \exp \left( -\frac{1}{2} \left(\frac{x-\mu}{\sigma} \right)^2 \right)^2; \otimes \exp\left( -\frac{x}{\tau} \right); \f]. **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGExpModel.cxx:962,inherit,inheriting,962,roofit/roofit/src/RooGExpModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGExpModel.cxx,1,['inherit'],['inheriting']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooGaussModel; \ingroup Roofit. Class RooGaussModel implements a RooResolutionModel that models a Gaussian; distribution. Object of class RooGaussModel can be used; for analytical convolutions with classes inheriting from RooAbsAnaConvPdf; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx:910,inherit,inheriting,910,roofit/roofit/src/RooGaussModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooGaussModel.cxx,1,['inherit'],['inheriting']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooUnblindUniform; \ingroup Roofit. Implementation of BlindTools' offset blinding method.; A RooUnblindUniform object is a real-valued function; object, constructed from a parameter to be blinded and a; set of config parameters to change the blinding method.; When supplied to a PDF in lieu of the regular parameter,; a transformation will be applied such that the likelihood is computed with the actual; value of the parameter, but RooFit (, the user, MINUIT) see only; the transformed (blinded) value. The transformation is chosen such that; the error of the blind parameter is identical to that; of the original parameter.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUnblindUniform.cxx:914,config,config,914,roofit/roofit/src/RooUnblindUniform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooUnblindUniform.cxx,1,['config'],['config']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * @(#)root/roofit:$Id$; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2021: *; * CERN, Switzerland *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooPolyFunc; \ingroup Roofit. RooPolyFunc implements a polynomial function in multi-variables.; The polynomial coefficients are implemented as doubles and are not; part of the RooFit computation graph.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyFunc.cxx:715,variab,variables,715,roofit/roofitcore/src/RooPolyFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooPolyFunc.cxx,1,['variab'],['variables']
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooFitModels *; * File: $Id: RooNDKeysPdf.cxx 31258 2009-11-17 22:41:06Z wouter $; * Authors: *; * Max Baak, CERN, mbaak@cern.ch *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooNDKeysPdf; \ingroup Roofit. Generic N-dimensional implementation of a kernel estimation p.d.f. This p.d.f. models the distribution; of an arbitrary input dataset as a superposition of Gaussian kernels, one for each data point,; each contributing 1/N to the total integral of the p.d.f.; If the 'adaptive mode' is enabled, the width of the Gaussian is adaptively calculated from the; local density of events, i.e. narrow for regions with high event density to preserve details and; wide for regions with log event density to promote smoothness. The details of the general algorithm; are described in the following paper:; Cranmer KS, Kernel Estimation in High-Energy Physics.; Computer Physics Communications 136:198-207,2001 - e-Print Archive: hep ex/0011057; For multi-dimensional datasets, the kernels are modeled by multidimensional Gaussians. The kernels are; constructed such that they reflect the correlation coefficients between the observables; in the input dataset.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx:833,adapt,adaptive,833,roofit/roofit/src/RooNDKeysPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooNDKeysPdf.cxx,2,['adapt'],"['adaptive', 'adaptively']"
Modifiability,"/*****************************************************************************; * Project: RooFit *; * Package: RooLagrangianMorphing *; * @(#)root/roofit:$Id$; * Authors: *; * Lydia Brenner (lbrenner@cern.ch), Carsten Burgard (cburgard@cern.ch) *; * Katharina Ecker (kecker@cern.ch), Adam Kaluza (akaluza@cern.ch) *; * *; * Copyright (c) 2000-2005, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooLagrangianMorphFunc; \ingroup Roofit; Class RooLagrangianMorphing is a implementation of the method of Effective; Lagrangian Morphing, described in ATL-PHYS-PUB-2015-047.; Effective Lagrangian Morphing is a method to construct a continuous signal; model in the coupling parameter space. Basic assumption is that shape and; cross section of a physical distribution is proportional to it's; squared matrix element.; The signal model is constructed by a weighted sum over N input distributions.; The calculation of the weights is based on Matrix Elements evaluated for the; different input scenarios.; The number of input files depends on the number of couplings in production; and decay vertices, and also whether the decay and production vertices; describe the same process or not.; **/; // uncomment to force UBLAS multiprecision matrices; // #define USE_UBLAS 1; // #undef USE_UBLAS",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx:999,coupling,coupling,999,roofit/roofit/src/RooLagrangianMorphFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooLagrangianMorphFunc.cxx,2,['coupling'],"['coupling', 'couplings']"
Modifiability,"/****************************************************************************; *; * Find the specified icon file somewhere along the given path.; *; * There is a possible race condition here: We check the file and later; * do something with it. By then, the file might not be accessible.; * Oh well.; *; ****************************************************************************/; /* supposedly pathlist should not include any environment variables; including things like ~/; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterbase.c:441,variab,variables,441,graf2d/asimage/src/libAfterImage/afterbase.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/afterbase.c,1,['variab'],['variables']
Modifiability,"/*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // ----------------------------------------------------------------------; // HEP coherent Physical Constants; // Adapted for ROOT by Marko Petric; //; // This file has been provided by Geant4 (simulation toolkit for HEP).; //; // Below is a non exhaustive list of Physical CONSTANTS,; // computed in the Internal HEP System Of Units.; //; // Most of them are extracted from the Particle Data Book :; // Phys. Rev. D volume 50 3-1 (1994) page 1233; //; //; // Author: M.Maire; //; // History:; //; // 23.02.96 Created; // 26.03.96 Added constants for standard conditions of temperature; // and pressure; also added Gas threshold.; // 29.04.08 use PDG 2006 values; // 03.11.08 use PDG 2008 values; // 02.10.17 addopted constant from CLHEP 2.3.4.3",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4PhysicalConstants.h:472,Adapt,Adapted,472,geom/geom/inc/TGeant4PhysicalConstants.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4PhysicalConstants.h,2,['Adapt'],['Adapted']
Modifiability,"/*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // ----------------------------------------------------------------------; // HEP coherent system of Units; //; // This file has been provided to CLHEP by Geant4 (simulation toolkit for HEP).; // Adapted to TGeo units base by Marko Petric; //; // The basic units are :; // millimeter (millimeter); // nanosecond (nanosecond); // Mega electron Volt (MeV); // positron charge (eplus); // degree Kelvin (kelvin); // the amount of substance (mole); // luminous intensity (candela); // radian (radian); // steradian (steradian); //; // Below is a non exhaustive list of derived and pratical units; // (i.e. mostly the SI units).; // You can add your own units.; //; // The SI numerical value of the positron charge is defined here,; // as it is needed for conversion factor : positron charge = e_SI (coulomb); //; // The others physical constants are defined in the header file :; // PhysicalConstants.h; //; // Authors: M.Maire, S.Giani; //; // History:; //; // 06.02.96 Created.; // 28.03.96 Added miscellaneous constants.; // 05.12.97 E.Tcherniaev: Redefined pascal (to avoid warnings on WinNT); // 20.05.98 names: meter, second, gram, radian, degree; // (from Brian.Lasiuk@yale.edu (STAR)). Added luminous units.; // 05.08.98 angstrom, picobarn, microsecond, picosecond, petaelectronvolt; // 01.03.01 parsec; // 31.01.06 kilogray, milligray, microgray; // 29.04.08 use PDG 2006 value of e_SI; // 03.11.08 use PDG 2008 value of e_SI; // 19.08.15 added liter and its sub units (mma); // 12.01.16 added symbols for microsecond (us) and picosecond (ps) (mma); // 02.10.17 addopted units from CLHEP 2.3.4.3 and converted to TGeo unit base",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h:554,Adapt,Adapted,554,geom/geom/inc/TGeant4SystemOfUnits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeant4SystemOfUnits.h,2,['Adapt'],['Adapted']
Modifiability,"/****h* libAfterImage/asimage.h; * NAME; * asimage defines main structures and function for image manipulation.; * DESCRIPTION; * libAfterImage provides powerful functionality to load, store; * and transform images. It allows for smaller memory utilization by; * utilizing run-length encoding of the image data. There could be; * different levels of compression selected, allowing to choose best; * speed/memory ratio.; *; * SEE ALSO; * Structures :; * ASImage; * ASImageManager; * ASImageBevel; * ASImageDecoder; * ASImageOutput; * ASImageLayer; * ASGradient; *; * Functions :; * asimage_init(), asimage_start(), create_asimage(),; * clone_asimage(), destroy_asimage(); *; * ImageManager Reference counting and managing :; * create_image_manager(), destroy_image_manager(),; * store_asimage(), fetch_asimage(), query_asimage(),; * dup_asimage(), release_asimage(),; * release_asimage_by_name(), forget_asimage(),; * safe_asimage_destroy(); *; * Gradients helper functions :; * flip_gradient(), destroy_asgradient(); *; * Layers helper functions :; * init_image_layers(), create_image_layers(),; * destroy_image_layers(); *; * Encoding :; * asimage_add_line(),	asimage_add_line_mono(),; * asimage_print_line(), get_asimage_chanmask(),; * move_asimage_channel(), copy_asimage_channel(),; * copy_asimage_lines(); *; * Decoding; * start_image_decoding(), stop_image_decoding(),; * asimage_decode_line (), set_decoder_shift(),; * set_decoder_back_color(); *; * Output :; * start_image_output(), set_image_output_back_color(),; * toggle_image_output_direction(), stop_image_output(); *; * Other libAfterImage modules :; * ascmap.h asfont.h asimage.h asvisual.h blender.h export.h; * import.h transform.h ximage.h; * AUTHOR; * Sasha Vasko <sasha at aftercode dot net>; ******/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h:1022,Layers,Layers,1022,graf2d/asimage/src/libAfterImage/asimage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/asimage.h,1,['Layers'],['Layers']
Modifiability,"/**. Calculates the Wigner 3j coupling coefficients. (ja jb jc; ma mb mc). where ja,ma,...etc are integers or half integers.; The function takes as input arguments only integers which corresponds; to half integer units, e.g two_ja = 2 * ja. For detailed description see; <A HREF=""http://mathworld.wolfram.com/Wigner3j-Symbol.html.html"">; Mathworld</A>.; The implementation used is that of; <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/3_002dj-Symbols.html#g_t3_002dj-Symbols"">GSL</A>. @ingroup SpecFunc. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/SpecFuncMathMore.h:30,coupling,coupling,30,math/mathmore/inc/Math/SpecFuncMathMore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/SpecFuncMathMore.h,1,['coupling'],['coupling']
Modifiability,"/**. Calculates the Wigner 6j coupling coefficients. (ja jb jc; jd je jf). where ja,jb,...etc are integers or half integers.; The function takes as input arguments only integers which corresponds; to half integer units, e.g two_ja = 2 * ja. For detailed description see; <A HREF=""http://mathworld.wolfram.com/Wigner6j-Symbol.html"">; Mathworld</A>.; The implementation used is that of; <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/6_002dj-Symbols.html#g_t6_002dj-Symbols"">GSL</A>. @ingroup SpecFunc. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/SpecFuncMathMore.h:30,coupling,coupling,30,math/mathmore/inc/Math/SpecFuncMathMore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/SpecFuncMathMore.h,1,['coupling'],['coupling']
Modifiability,"/**. Calculates the Wigner 9j coupling coefficients. (ja jb jc; jd je jf; jg jh ji). where ja,jb...etc are integers or half integers.; The function takes as input arguments only integers which corresponds; to half integer units, e.g two_ja = 2 * ja. For detailed description see; <A HREF=""http://mathworld.wolfram.com/Wigner9j-Symbol.html"">; Mathworld</A>.; The implementation used is that of; <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/9_002dj-Symbols.html#g_t9_002dj-Symbols"">GSL</A>. @ingroup SpecFunc. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/SpecFuncMathMore.h:30,coupling,coupling,30,math/mathmore/inc/Math/SpecFuncMathMore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/SpecFuncMathMore.h,1,['coupling'],['coupling']
Modifiability,/**. Calculates the function for the maximum likelihood method. The user must; implement in a class which inherits from FumiliChi2FCN the member function; Elements() which will supply the Elements for the sum. @param par vector containing the Parameter values for the model function. @return The sum of the natural logarithm of the Elements multiplied by -1. @see FumiliFCNBase#elements. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliMaximumLikelihoodFCN.h:106,inherit,inherits,106,math/minuit2/inc/Minuit2/FumiliMaximumLikelihoodFCN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliMaximumLikelihoodFCN.h,1,['inherit'],['inherits']
Modifiability,"/**. Calculates the sum of Elements squared, ie the chi-square. The user must; implement in a class which inherits from FumiliChi2FCN the member function; Elements() which will supply the Elements for the sum. @param par vector containing the Parameter values for the model function. @return The sum of Elements squared. @see FumiliFCNBase#elements. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliChi2FCN.h:106,inherit,inherits,106,math/minuit2/inc/Minuit2/FumiliChi2FCN.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliChi2FCN.h,1,['inherit'],['inherits']
Modifiability,"/**. Function which has parameters. For example, one could define; a one-dimensional Gaussian, by considering x as an input coordinate; for the evaluation of the function, and the mean and the square root; of the variance as parameters.; <p>; AS OF NOW PARAMETRICFUNCTION INHERITS FROM FCNBASE INSTEAD OF; GENERICFUNCTION. THIS IS ONLY BECAUSE NUMERICAL2PGRADIENTCALCULATOR; NEEDS AN FCNBASE OBJECT AND WILL BE CHANGED!!!!!!!!!!!!!!!!. @ingroup Minuit. \todo ParametricFunction and all the classes that inherit from it; are inheriting also FCNBase so that the Gradient calculation has; the Up() member function. That is not really good... */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/ParametricFunction.h:272,INHERIT,INHERITS,272,math/minuit2/inc/Minuit2/ParametricFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/ParametricFunction.h,3,"['INHERIT', 'inherit']","['INHERITS', 'inherit', 'inheriting']"
Modifiability,"/**. In the case of the Fumili algorithm the Error matrix (or the Hessian; matrix containing the (approximate) second derivatives) is calculated; using a linearization of the model function negleting second; derivatives. (In some sense the Name Updator is a little bit misleading; as the Error matrix is not calculated by iteratively updating, like; in Davidon's or other similar variable metric methods, but by; recalculating each time). @author Andras Zsenei and Lorenzo Moneta, Creation date: 28 Sep 2004. @see <A HREF=""http://www.cern.ch/winkler/minuit/tutorial/mntutorial.pdf"">MINUIT Tutorial</A> on function minimization,; section 5. @see DavidonErrorUpdator. @ingroup Minuit. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliErrorUpdator.h:380,variab,variable,380,math/minuit2/inc/Minuit2/FumiliErrorUpdator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliErrorUpdator.h,1,['variab'],['variable']
Modifiability,/**. Member function returning the Gradient of the function with respect; to its variables (but without including gradients with respect to; its internal parameters). @param x vector containing the coordinates of the point where the; Gradient is to be calculated. @return the Gradient vector of the function at the given point. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/ParametricFunction.h:81,variab,variables,81,math/minuit2/inc/Minuit2/ParametricFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/ParametricFunction.h,1,['variab'],['variables']
Modifiability,"/**. Member function which is only present due to the design already in place; of the software. As all classes calculating the Error matrix are supposed; inherit from the MinimumErrorUpdator they must inherit this method. In some; methods calculating the aforementioned matrix some of these parameters are; not needed and other parameters are necessary... Hopefully, a more elegant; solution will be found in the future. \todo How to get rid of this dummy method which is only due to the inheritance. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliErrorUpdator.h:154,inherit,inherit,154,math/minuit2/inc/Minuit2/FumiliErrorUpdator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliErrorUpdator.h,3,['inherit'],"['inherit', 'inheritance']"
Modifiability,"/**. Probability density function of the bi-dimensional (Gaussian) distribution. \f[ p(x) = {1 \over 2 \pi \sigma_x \sigma_y \sqrt{1-\rho^2}} \exp (-((x-x0)^2/\sigma_x^2 + (y-y0)^2/\sigma_y^2 - 2 \rho x y/(\sigma_x\sigma_y))/2(1-\rho^2)) \f]. For detailed description see; <A HREF=""http://mathworld.wolfram.com/BivariateNormalDistribution.html"">; Mathworld</A>. It can also be evaluated using #normal_pdf which will; call the same implementation. @param x x variable; @param y y variable; @param sigmax the stdev in x; @param sigmay the stdev in y; @param rho correlation, must be between -1,1; @param x0 the offset in x; @param y0 the offset in y. @ingroup PdfFunc. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/PdfFuncMathCore.h:458,variab,variable,458,math/mathcore/inc/Math/PdfFuncMathCore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/PdfFuncMathCore.h,2,['variab'],['variable']
Modifiability,"/**. Probability density function of the lognormal distribution. \f[ p(x) = {1 \over x \sqrt{2 \pi s^2} } e^{-(\ln{x} - m)^2/2 s^2} \f]. for x>0. For detailed description see; <A HREF=""http://mathworld.wolfram.com/LogNormalDistribution.html"">; Mathworld</A>.; @param x x variable; @param m M = 0 for lognormal; @param s scale parameter (not the sigma of the distribution which is not even defined); @param x0 location parameter, corresponds approximately to the most probable value. For x0 = 0, sigma = 1, the x_mpv = -0.22278. @ingroup PdfFunc. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/PdfFuncMathCore.h:271,variab,variable,271,math/mathcore/inc/Math/PdfFuncMathCore.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/PdfFuncMathCore.h,1,['variab'],['variable']
Modifiability,"/**. Sample implementation of a parametric function. It can be used for; example for the Fumili method when minimizing with Minuit.; In the present case the function is a one-dimensional Gaussian,; which is described by its mean, standard deviation and the constant; term describing the amplitude. As it is used for; function minimization, the role of the variables (or coordinates) and; parameters is inversed! I.e. in the case of a one-dimensional; Gaussian it is x that will be the Parameter and the mean, standard; deviation etc will be the variables. @author Andras Zsenei and Lorenzo Moneta, Creation date: 26 Oct 2004. @see <A HREF=""http://mathworld.wolfram.com/NormalDistribution.html""> Definition of; the Normal/Gaussian distribution </A> (note: this Gaussian is normalized). @see ParametricFunction. @see FumiliFCNBase. @see FumiliMaximumLikelihoodFCN. @ingroup Minuit. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/GaussianModelFunction.h:356,variab,variables,356,math/minuit2/test/MnSim/GaussianModelFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/GaussianModelFunction.h,2,['variab'],['variables']
Modifiability,"/**. THAT SHOULD BE REMOVED, IT IS ONLY HERE, BECAUSE AT PRESENT FOR GRADIENT; CALCULATION ONE NEEDS TO INHERIT FROM FCNBASE WHICH NEEDS THIS METHOD. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/GaussianModelFunction.h:104,INHERIT,INHERIT,104,math/minuit2/test/MnSim/GaussianModelFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/test/MnSim/GaussianModelFunction.h,1,['INHERIT'],['INHERIT']
Modifiability,"/**. The meaning of the vector of parameters is of course defined by the user,; who uses the values of those parameters to calculate their function Value.; The order and the position of these parameters is strictly the one specified; by the user when supplying the starting values for minimization. The starting; values must be specified by the user, either via an std::vector<double> or the; MnUserParameters supplied as input to the MINUIT minimizers such as; VariableMetricMinimizer or MnMigrad. Later values are determined by MINUIT; as it searches for the Minimum or performs whatever analysis is requested by; the user. @param v function parameters as defined by the user. @return the Value of the function. @see MnUserParameters; @see VariableMetricMinimizer; @see MnMigrad. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FCNBase.h:462,Variab,VariableMetricMinimizer,462,math/minuit2/inc/Minuit2/FCNBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FCNBase.h,2,['Variab'],['VariableMetricMinimizer']
Modifiability,/**. template wrapped class for adapting to FCNBase signature a IGradFunction. @author Lorenzo Moneta. @ingroup Minuit. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FCNGradAdapter.h:32,adapt,adapting,32,math/minuit2/inc/Minuit2/FCNGradAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FCNGradAdapter.h,1,['adapt'],['adapting']
Modifiability,/**. template wrapped class for adapting to FCNBase signature. @author Lorenzo Moneta. @ingroup Minuit. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FCNAdapter.h:32,adapt,adapting,32,math/minuit2/inc/Minuit2/FCNAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FCNAdapter.h,1,['adapt'],['adapting']
Modifiability,/**. template wrapped class for adapting to FumiliFCNBase signature. @author Lorenzo Moneta. @ingroup Minuit. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliFCNAdapter.h:32,adapt,adapting,32,math/minuit2/inc/Minuit2/FumiliFCNAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliFCNAdapter.h,1,['adapt'],['adapting']
Modifiability,"/**; * (Optional; inheritable) A code specifying the form of quadding (justification) that shall be used in displaying the text:; * 'left', 'center', 'right'; *; * @name AcroFormField#textAlign; * @default 'left'; * @type {string}; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:18,inherit,inheritable,18,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['inherit'],['inheritable']
Modifiability,"/**; * (Optional; inheritable) The default value to which the field reverts when a reset-form action is executed (see 12.7.5.3, “Reset-Form Action”). The format of this value is the same as that of value.; *; * @name AcroFormField#defaultValue; * @default null; * @type {any}; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:18,inherit,inheritable,18,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['inherit'],['inheritable']
Modifiability,"/**; * (Optional; inheritable) The field’s value, whose format varies depending on the field type. See the descriptions of individual field types for further information.; *; * @name AcroFormField#value; * @default null; * @type {any}; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:18,inherit,inheritable,18,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['inherit'],['inheritable']
Modifiability,"/**; * (Optional; inheritable) The maximum length of the field’s text, in characters.; *; * @name AcroFormTextField#maxLength; * @type {number}; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:18,inherit,inheritable,18,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['inherit'],['inheritable']
Modifiability,/**; * 0xc0 (SOF) Huffman - Baseline DCT; * 0xc1 (SOF) Huffman - Extended sequential DCT; * 0xc2 Progressive DCT (SOF2); * 0xc3 Spatial (sequential) lossless (SOF3); * 0xc4 Differential sequential DCT (SOF5); * 0xc5 Differential progressive DCT (SOF6); * 0xc6 Differential spatial (SOF7); * 0xc7; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:65,Extend,Extended,65,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Extend'],['Extended']
Modifiability,"/**; * @brief Check if a RooAbsArg is a literal constant variable.; *; * This function checks whether the provided RooAbsArg 'arg' is a literal constant variable.; * A literal constant variable is a RooConstVar with a numeric value as a name.; *; * @param arg The reference to the RooAbsArg to be checked.; * @return bool Returns true if 'arg' is a literal constant variable; otherwise, returns false.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:57,variab,variable,57,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,4,['variab'],['variable']
Modifiability,"/**; * @brief Configure a RooRealVar based on information from a JSONNode.; *; * This function configures the provided RooRealVar 'v' based on the information provided in the JSONNode 'p'.; * The JSONNode 'p' contains information about various properties of the RooRealVar, such as its value, error, number of; * bins, etc. The function reads these properties from the JSONNode and sets the corresponding properties of the; * RooRealVar accordingly.; *; * @param domains The reference to the RooFit::JSONIO::Detail::Domains containing domain information for variables (not; * used in this function).; * @param p The JSONNode containing information about the properties of the RooRealVar 'v'.; * @param v The reference to the RooRealVar to be configured.; * @return void; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:14,Config,Configure,14,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,4,"['Config', 'config', 'variab']","['Configure', 'configured', 'configures', 'variables']"
Modifiability,/**; * @brief Constructor for Var from JSONNode.; * @param val JSONNode containing variable information.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:83,variab,variable,83,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,1,['variab'],['variable']
Modifiability,"/**; * @brief Creates a new Option that is a one-element linked list and has the given; * values for @ref desc, @ref name and @ref arg.; *; * If @c name_ points at a character other than '-' it will be assumed to refer to a; * short option and @ref namelen will be set to 1. Otherwise the length will extend to; * the first '=' character or the string's 0-terminator.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:301,extend,extend,301,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['extend'],['extend']
Modifiability,"/**; * @brief Export a variable from the workspace to a JSONNode.; *; * This function exports a variable, represented by the provided RooAbsArg pointer 'v', from the workspace to a; * JSONNode. The variable's information is added to the JSONNode as key-value pairs.; *; * @param v The pointer to the RooAbsArg representing the variable to be exported.; * @param node The JSONNode to which the variable will be exported.; * @return void; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:23,variab,variable,23,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,5,['variab'],['variable']
Modifiability,"/**; * @brief Export combined data from the workspace to a custom struct.; *; * This function exports combined data from the workspace, represented by the provided RooAbsData object,; * to a CombinedData struct. The struct contains information such as variables, categories,; * and bin contents of the combined data.; *; * @param data The RooAbsData object representing the combined data to be exported.; * @return CombinedData A custom struct containing the exported combined data.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:252,variab,variables,252,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,1,['variab'],['variables']
Modifiability,"/**; * @brief Export histogram data to a JSONNode.; *; * This function exports histogram data, represented by the provided variables and contents, to a JSONNode.; * The histogram's axes information and bin contents are added as key-value pairs to the JSONNode.; *; * @param vars The RooArgSet representing the variables associated with the histogram.; * @param n The number of bins in the histogram.; * @param contents A pointer to the array containing the bin contents of the histogram.; * @param output The JSONNode to which the histogram data will be exported.; * @return void; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:123,variab,variables,123,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,2,['variab'],['variables']
Modifiability,"/**; * @brief Export variables from the workspace to a JSONNode.; *; * This function exports variables, represented by the provided RooArgSet, from the workspace to a JSONNode.; * The variables' information is added to the JSONNode as key-value pairs.; *; * @param allElems The RooArgSet representing the variables to be exported.; * @param n The JSONNode to which the variables will be exported.; * @return void; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:21,variab,variables,21,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,5,['variab'],['variables']
Modifiability,/**; * @brief Import a variable from the JSONNode into the workspace.; *; * This function imports a variable from the given JSONNode into the workspace.; * The variable's information is read from the JSONNode and added to the workspace.; *; * @param p The JSONNode representing the variable to be imported.; * @return void; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:23,variab,variable,23,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,4,['variab'],['variable']
Modifiability,/**; * @brief Perform prediction using int as spectator variable; * @param method Path to a method weight file.; * This tests check if issue #9115 is fixed since it uses an integer; * type in TMVA::Reader; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/crossvalidation/TestCrossValidationIntVar.cxx:56,variab,variable,56,tmva/tmva/test/crossvalidation/TestCrossValidationIntVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/crossvalidation/TestCrossValidationIntVar.cxx,1,['variab'],['variable']
Modifiability,/**; * @brief Read axes from the JSONNode and create a RooArgSet representing them.; *; * This function reads axes information from the given JSONNode and; * creates a RooArgSet with variables representing these axes.; *; * @param topNode The JSONNode containing the axes information to be read.; * @return RooArgSet A RooArgSet containing the variables created from the JSONNode.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:183,variab,variables,183,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,2,['variab'],['variables']
Modifiability,/**; * @brief Read binned data from the JSONNode and create a RooDataHist object.; *; * This function reads binned data from the given JSONNode and creates a RooDataHist object.; * The binned data is associated with the specified name and variables (RooArgSet) in the workspace.; *; * @param n The JSONNode representing the binned data to be read.; * @param name The name to be associated with the created RooDataHist object.; * @param vars The RooArgSet representing the variables associated with the binned data.; * @return std::unique_ptr<RooDataHist> A unique pointer to the created RooDataHist object.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:239,variab,variables,239,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,2,['variab'],['variables']
Modifiability,"/**; * @brief The length of the option @ref name.; *; * Because @ref name points into the actual @c argv string, the option name may be; * followed by more characters (e.g. other short options in the same short option group).; * This value is the number of bytes (not characters!) that are part of the actual name.; *; * For a short option, this length is always 1. For a long option this length is always; * at least 2 if single minus long options are permitted and at least 3 if they are disabled.; *; * @note; * In the pathological case of a minus within a short option group (e.g. @c -xf-z), this; * length is incorrect, because this case will be misinterpreted as a long option and the; * name will therefore extend to the string's 0-terminator or a following '="" character; * if there is one. This is irrelevant for most uses of @ref name and @c namelen. If you; * really need to distinguish the case of a long and a short option, compare @ref name to; * the @c argv pointers. A long option's @c name is always identical to one of them,; * whereas a short option's is never.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:714,extend,extend,714,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['extend'],['extend']
Modifiability,"/**; * @callback ApiSwitchBody; * @param {jsPDF} pdf; */; /**; * For compatibility reasons jsPDF offers two API modes which differ in the way they convert between the the usual; * screen coordinates and the PDF coordinate system.; * - ""compat"": Offers full compatibility across all plugins but does not allow arbitrary transforms; * - ""advanced"": Allows arbitrary transforms and more advanced features like pattern fills. Some plugins might; * not support this mode, though.; * Initial mode is ""compat"".; *; * You can either provide a callback to the body argument, which means that jsPDF will automatically switch back to; * the original API mode afterwards; or you can omit the callback and switch back manually using {@link compatAPI}.; *; * Note, that the calls to {@link saveGraphicsState} and {@link restoreGraphicsState} need to be balanced within the; * callback or between calls of this method and its counterpart {@link compatAPI}. Calls to {@link beginFormObject}; * or {@link beginTilingPattern} need to be closed by their counterparts before switching back to ""compat"" API mode.; *; * @param {ApiSwitchBody=} body When provided, this callback will be called after the API mode has been switched.; * The API mode will be switched back automatically afterwards.; * @returns {jsPDF}; * @memberof jsPDF#; * @name advancedAPI; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:282,plugin,plugins,282,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['plugin'],['plugins']
Modifiability,/**; * @class AcroFormButton; * @extends AcroFormField; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:33,extend,extends,33,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['extend'],['extends']
Modifiability,/**; * @class AcroFormCheckBox; * @extends AcroFormButton; * @extends AcroFormField; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:35,extend,extends,35,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['extend'],['extends']
Modifiability,/**; * @class AcroFormChoiceField; * @extends AcroFormField; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:38,extend,extends,38,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['extend'],['extends']
Modifiability,/**; * @class AcroFormComboBox; * @extends AcroFormListBox; * @extends AcroFormChoiceField; * @extends AcroFormField; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:35,extend,extends,35,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,6,['extend'],['extends']
Modifiability,/**; * @class AcroFormEditBox; * @extends AcroFormComboBox; * @extends AcroFormListBox; * @extends AcroFormChoiceField; * @extends AcroFormField; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:34,extend,extends,34,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,8,['extend'],['extends']
Modifiability,/**; * @class AcroFormListBox; * @extends AcroFormChoiceField; * @extends AcroFormField; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:34,extend,extends,34,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['extend'],['extends']
Modifiability,/**; * @class AcroFormPasswordField; * @extends AcroFormTextField; * @extends AcroFormField; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:40,extend,extends,40,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['extend'],['extends']
Modifiability,/**; * @class AcroFormPushButton; * @extends AcroFormButton; * @extends AcroFormField; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:37,extend,extends,37,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['extend'],['extends']
Modifiability,/**; * @class AcroFormRadioButton; * @extends AcroFormButton; * @extends AcroFormField; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:38,extend,extends,38,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['extend'],['extends']
Modifiability,/**; * @class AcroFormTextField; * @extends AcroFormField; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:36,extend,extends,36,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['extend'],['extends']
Modifiability,"/**; * @defgroup LLVMCCoreValueConstantScalar Scalar constants; *; * Functions in this group model LLVMValueRef instances that correspond; * to constants referring to scalar types.; *; * For integer types, the LLVMTypeRef parameter should correspond to a; * llvm::IntegerType instance and the returned LLVMValueRef will; * correspond to a llvm::ConstantInt.; *; * For floating point types, the LLVMTypeRef returned corresponds to a; * llvm::ConstantFP.; *; * @{; */; /**; * Obtain a constant value for an integer type.; *; * The returned value corresponds to a llvm::ConstantInt.; *; * @see llvm::ConstantInt::get(); *; * @param IntTy Integer type to obtain value of.; * @param N The value the returned instance should refer to.; * @param SignExtend Whether to sign extend the produced value.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:766,extend,extend,766,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['extend'],['extend']
Modifiability,"/**; * @defgroup LLVMCCoreValueWithAlignment Values with alignment; *; * Functions in this group only apply to values with alignment, i.e.; * global variables, load and store instructions.; */; /**; * Obtain the preferred alignment of the value.; * @see llvm::AllocaInst::getAlignment(); * @see llvm::LoadInst::getAlignment(); * @see llvm::StoreInst::getAlignment(); * @see llvm::AtomicRMWInst::setAlignment(); * @see llvm::AtomicCmpXchgInst::setAlignment(); * @see llvm::GlobalValue::getAlignment(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:149,variab,variables,149,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['variab'],['variables']
Modifiability,/**; * @defgroup LLVMCExecutionEngineLLJIT LLJIT; * @ingroup LLVMCExecutionEngine; *; * @{; */; /**; * A function for constructing an ObjectLinkingLayer instance to be used; * by an LLJIT instance.; *; * Clients can call LLVMOrcLLJITBuilderSetObjectLinkingLayerCreator to; * set the creator function to use when constructing an LLJIT instance.; * This can be used to override the default linking layer implementation; * that would otherwise be chosen by LLJITBuilder.; *; * Object linking layers returned by this function will become owned by the; * LLJIT instance. The client is not responsible for managing their lifetimes; * after the function returns.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/LLJIT.h:489,layers,layers,489,interpreter/llvm-project/llvm/include/llvm-c/LLJIT.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/LLJIT.h,1,['layers'],['layers']
Modifiability,/**; * @defgroup LLVMCExecutionEngineLLJITUtils LLJIT Utilities; * @ingroup LLVMCExecutionEngineLLJIT; *; * @{; */; /**; * Install the plugin that submits debug objects to the executor. Executors must; * expose the llvm_orc_registerJITLoaderGDBWrapper symbol.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/LLJITUtils.h:135,plugin,plugin,135,interpreter/llvm-project/llvm/include/llvm-c/LLJITUtils.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/LLJITUtils.h,1,['plugin'],['plugin']
Modifiability,"/**; * @file; *; * @brief This is the only file required to use The Lean Mean C++ Option Parser.; * Just \#include it and you're set.; *; * The Lean Mean C++ Option Parser handles the program's command line arguments; * (argc, argv).; * It supports the short and long option formats of getopt(), getopt_long(); * and getopt_long_only() but has a more convenient interface.; * The following features set it apart from other option parsers:; *; * @par Highlights:; * <ul style=""padding-left:1em;margin-left:0"">; * <li> It is a header-only library. Just <code>\#include ""optionparser.h""</code> and you're set.; * <li> It is freestanding. There are no dependencies whatsoever, not even the; * C or C++ standard library.; * <li> It has a usage message formatter that supports column alignment and; * line wrapping. This aids localization because it adapts to; * translated strings that are shorter or longer (even if they contain; * Asian wide characters).; * <li> Unlike getopt() and derivatives it doesn't force you to loop through; * options sequentially. Instead you can access options directly like this:; * <ul style=""margin-top:.5em"">; * <li> Test for presence of a switch in the argument vector:; * @code if ( options[QUIET] ) ... @endcode; * <li> Evaluate --enable-foo/--disable-foo pair where the last one used wins:; * @code if ( options[FOO].last()->type() == DISABLE ) ... @endcode; * <li> Cumulative option (-v verbose, -vv more verbose, -vvv even more verbose):; * @code int verbosity = options[VERBOSE].count(); @endcode; * <li> Iterate over all --file=&lt;fname> arguments:; * @code for (Option* opt = options[FILE]; opt; opt = opt->next()); * fname = opt->arg; ... @endcode; * <li> If you really want to, you can still process all arguments in order:; * @code; * for (int i = 0; i < p.optionsCount(); ++i) {; * Option& opt = buffer[i];; * switch(opt.index()) {; * case HELP: ...; * case VERBOSE: ...; * case FILE: fname = opt.arg; ...; * case UNKNOWN: ...; * @endcode; * </ul>; * </ul> @n",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:844,adapt,adapts,844,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['adapt'],['adapts']
Modifiability,/**; * @internal; * @brief Sets the fields of this Option to the given values (extracting @c name if necessary).; *; * If @c name_ points at a character other than '-' it will be assumed to refer to a; * short option and @ref namelen will be set to 1. Otherwise the length will extend to; * the first '=' character or the string's 0-terminator.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:278,extend,extend,278,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['extend'],['extend']
Modifiability,"/**; * @internal; * @brief Splits a @c Descriptor[] array into tables, rows, lines and columns and; * iterates over these components.; *; * The top-level organizational unit is the @e table.; * A table begins at a Descriptor with @c help!=NULL and extends up to; * a Descriptor with @c help==NULL.; *; * A table consists of @e rows. Due to line-wrapping and explicit breaks; * a row may take multiple lines on screen. Rows within the table are separated; * by \\n. They never cross Descriptor boundaries. This means a row ends either; * at \\n or the 0 at the end of the help string.; *; * A row consists of columns/cells. Columns/cells within a row are separated by \\t.; * Line breaks within a cell are marked by \\v.; *; * Rows in the same table need not have the same number of columns/cells. The; * extreme case are interjections, which are rows that contain neither \\t nor \\v.; * These are NOT treated specially by LinePartIterator, but they are treated; * specially by printUsage().; *; * LinePartIterator iterates through the usage at 3 levels: table, row and part.; * Tables and rows are as described above. A @e part is a line within a cell.; * LinePartIterator iterates through 1st parts of all cells, then through the 2nd; * parts of all cells (if any),... @n; * Example: The row <code> ""1 \v 3 \t 2 \v 4"" </code> has 2 cells/columns and 4 parts.; * The parts will be returned in the order 1, 2, 3, 4.; *; * It is possible that some cells have fewer parts than others. In this case; * LinePartIterator will ""fill up"" these cells with 0-length parts. IOW, LinePartIterator; * always returns the same number of parts for each column. Note that this is different; * from the way rows and columns are handled. LinePartIterator does @e not guarantee that; * the same number of columns will be returned for each row.; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h:248,extend,extends,248,core/dictgen/res/OptionParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/OptionParser.h,1,['extend'],['extends']
Modifiability,"/**; * @license; * ====================================================================; * Copyright (c) 2013 Eduardo Menezes de Morais, eduardo.morais@usp.br; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */; /**; * jsPDF total_pages plugin; * @name total_pages; * @module; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:1339,plugin,plugin,1339,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['plugin'],['plugin']
Modifiability,"/**; * @license; * ====================================================================; * Copyright (c) 2013 Youssef Beddad, youssef.beddad@gmail.com; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */; /**; * jsPDF JavaScript plugin; *; * @name javascript; * @module; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:1330,plugin,plugin,1330,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['plugin'],['plugin']
Modifiability,/**; * @license; * Copyright (c) 2014 Steven Spungin (TwelveTone LLC) steven@twelvetone.tv; *; * Licensed under the MIT License.; * http://opensource.org/licenses/mit-license; */; /**; * jsPDF Canvas PlugIn; * This plugin mimics the HTML5 Canvas; *; * The goal is to provide a way for current canvas users to print directly to a PDF.; * @name canvas; * @module; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:200,PlugIn,PlugIn,200,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,"['PlugIn', 'plugin']","['PlugIn', 'plugin']"
Modifiability,/**; * @license; * Copyright (c) 2014 Steven Spungin (TwelveTone LLC) steven@twelvetone.tv; *; * Licensed under the MIT License.; * http://opensource.org/licenses/mit-license; */; /**; * jsPDF Outline PlugIn; *; * Generates a PDF Outline; * @name outline; * @module; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:201,PlugIn,PlugIn,201,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['PlugIn'],['PlugIn']
Modifiability,/**; * @license; * Copyright (c) 2017 Aras Abbasi; *; * Licensed under the MIT License.; * http://opensource.org/licenses/mit-license; */; /**; * jsPDF Gif Support PlugIn; *; * @name gif_support; * @module; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:164,PlugIn,PlugIn,164,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['PlugIn'],['PlugIn']
Modifiability,/**; * @license; * Copyright (c) 2017 Aras Abbasi; *; * Licensed under the MIT License.; * http://opensource.org/licenses/mit-license; */; /**; * jsPDF arabic parser PlugIn; *; * @name arabic; * @module; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:166,PlugIn,PlugIn,166,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['PlugIn'],['PlugIn']
Modifiability,/**; * @license; * Copyright (c) 2018 Aras Abbasi; *; * Licensed under the MIT License.; * http://opensource.org/licenses/mit-license; */; /**; * jsPDF bmp Support PlugIn; * @name bmp_support; * @module; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:164,PlugIn,PlugIn,164,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['PlugIn'],['PlugIn']
Modifiability,/**; * @license; * Copyright (c) 2019 Aras Abbasi; *; * Licensed under the MIT License.; * http://opensource.org/licenses/mit-license; */; /**; * jsPDF webp Support PlugIn; *; * @name webp_support; * @module; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:165,PlugIn,PlugIn,165,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['PlugIn'],['PlugIn']
Modifiability,/**; * @license; * Licensed under the MIT License.; * http://opensource.org/licenses/mit-license; */; /**; * jsPDF setLanguage Plugin; *; * @name setLanguage; * @module; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:127,Plugin,Plugin,127,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Plugin'],['Plugin']
Modifiability,/**; * @license; * jsPDF filters PlugIn; * Copyright (c) 2014 Aras Abbasi; *; * Licensed under the MIT License.; * http://opensource.org/licenses/mit-license; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:33,PlugIn,PlugIn,33,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,3,['PlugIn'],['PlugIn']
Modifiability,/**; * @license; * jsPDF viewerPreferences Plugin; * @author Aras Abbasi (github.com/arasabbasi); * Licensed under the MIT License.; * http://opensource.org/licenses/mit-license; */; /**; * Adds the ability to set ViewerPreferences and by thus; * controlling the way the document is to be presented on the; * screen or in print.; * @name viewerpreferences; * @module; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:43,Plugin,Plugin,43,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Plugin'],['Plugin']
Modifiability,"/**; * @license; *; * Copyright (c) 2014 James Robb, https://github.com/jamesbrobb; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */; /**; * jsPDF PNG PlugIn; * @name png_support; * @module; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:1255,PlugIn,PlugIn,1255,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['PlugIn'],['PlugIn']
Modifiability,"/**; * @license; *; * Copyright (c) 2021 Antti Palola, https://github.com/Pantura; *; * Permission is hereby granted, free of charge, to any person obtaining; * a copy of this software and associated documentation files (the; * ""Software""), to deal in the Software without restriction, including; * without limitation the rights to use, copy, modify, merge, publish,; * distribute, sublicense, and/or sell copies of the Software, and to; * permit persons to whom the Software is furnished to do so, subject to; * the following conditions:; *; * The above copyright notice and this permission notice shall be; * included in all copies or substantial portions of the Software.; *; * THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE; * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION; * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION; * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.; * ====================================================================; */; /**; * jsPDF RGBA array PlugIn; * @name rgba_support; * @module; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:1261,PlugIn,PlugIn,1261,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['PlugIn'],['PlugIn']
Modifiability,/**; * @license; *; * Licensed under the MIT License.; * http://opensource.org/licenses/mit-license; */; /**; * jsPDF jpeg Support PlugIn; *; * @name jpeg_support; * @module; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:131,PlugIn,PlugIn,131,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['PlugIn'],['PlugIn']
Modifiability,"/**; * @struct Var; * @brief Structure to store variable information.; *; * This structure represents variable information such as the number of bins, minimum and maximum values,; * and a vector of binning edges for a variable.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx:48,variab,variable,48,roofit/hs3/src/RooJSONFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/RooJSONFactoryWSTool.cxx,3,['variab'],['variable']
Modifiability,"/**; * @summary Painter of hierarchical structures; *; * @example; * import { HierarchyPainter } from 'https://root.cern/js/latest/modules/gui/HierarchyPainter.mjs';; * // create hierarchy painter in 'myTreeDiv'; * let h = new HierarchyPainter('example', 'myTreeDiv');; * // configure 'simple' layout in 'myMainDiv'; * // one also can specify 'grid2x2' or 'flex' or 'tabs'; * h.setDisplay('simple', 'myMainDiv');; * // open file and display element; * h.openRootFile('https://root.cern/js/files/hsimple.root').then(() => h.display('hpxpy;1','colz')); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:275,config,configure,275,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configure']
Modifiability,/**; * @}; */; /** Deallocate and destroy all ManagedStatic variables.; @see llvm::llvm_shutdown; @see ManagedStatic */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:60,variab,variables,60,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['variab'],['variables']
Modifiability,/**; * @}; */; /**; * @defgroup LLVMCoreValueConstantGlobalVariable Global Variables; *; * This group contains functions that operate on global variable values.; *; * @see llvm::GlobalVariable; *; * @{; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:75,Variab,Variables,75,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,2,"['Variab', 'variab']","['Variables', 'variable']"
Modifiability,"/**; * @}; */; /**; * \defgroup CINDEX_CURSOR_XREF Cross-referencing in the AST; *; * These routines provide the ability to determine references within and; * across translation units, by providing the names of the entities referenced; * by cursors, follow reference cursors to the declarations they reference,; * and associate declarations with their definitions.; *; * @{; */; /**; * Retrieve a Unified Symbol Resolution (USR) for the entity referenced; * by the given cursor.; *; * A Unified Symbol Resolution (USR) is a string that identifies a particular; * entity (function, class, variable, etc.) within a program. USRs can be; * compared across translation units to determine, e.g., when references in; * one translation refer to an entity defined in another translation unit.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:588,variab,variable,588,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['variab'],['variable']
Modifiability,"/**; * A PDF Tiling pattern.; *; * Only available in ""advanced"" API mode.; *; * @param {Array.<Number>} boundingBox The bounding box at which one pattern cell gets clipped.; * @param {Number} xStep Horizontal spacing between pattern cells.; * @param {Number} yStep Vertical spacing between pattern cells.; * @param {API.GState=} gState An additional graphics state that gets applied to the pattern (optional).; * @param {Matrix=} matrix A matrix that describes the transformation between the pattern coordinate system; * and the use coordinate system (optional).; * @constructor; * @extends API.Pattern; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:583,extend,extends,583,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['extend'],['extends']
Modifiability,"/**; * A pattern describing a shading pattern.; *; * Only available in ""advanced"" API mode.; *; * @param {String} type One of ""axial"" or ""radial""; * @param {Array<Number>} coords Either [x1, y1, x2, y2] for ""axial"" type describing the two interpolation points; * or [x1, y1, r, x2, y2, r2] for ""radial"" describing inner and the outer circle.; * @param {Array<Object>} colors An array of objects with the fields ""offset"" and ""color"". ""offset"" describes; * the offset in parameter space [0, 1]. ""color"" is an array of length 3 describing RGB values in [0, 255].; * @param {GState=} gState An additional graphics state that gets applied to the pattern (optional).; * @param {Matrix=} matrix A matrix that describes the transformation between the pattern coordinate system; * and the use coordinate system (optional).; * @constructor; * @extends API.Pattern; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:834,extend,extends,834,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['extend'],['extends']
Modifiability,"/**; * A reference to a type declaration.; *; * A type reference occurs anywhere where a type is named but not; * declared. For example, given:; *; * \code; * typedef unsigned size_type;; * size_type size;; * \endcode; *; * The typedef is a declaration of size_type (CXCursor_TypedefDecl),; * while the type of the variable ""size"" is referenced. The cursor; * referenced by the type of size is the typedef for size_type.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:315,variab,variable,315,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['variab'],['variable']
Modifiability,"/**; * A reference to a variable that occurs in some non-expression; * context, e.g., a C++ lambda capture list.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:24,variab,variable,24,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['variab'],['variable']
Modifiability,"/**; * An expression that refers to some value declaration, such; * as a function, variable, or enumerator.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:83,variab,variable,83,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['variab'],['variable']
Modifiability,"/**; * Annotate the given set of tokens by providing cursors for each token; * that can be mapped to a specific entity within the abstract syntax tree.; *; * This token-annotation routine is equivalent to invoking; * clang_getCursor() for the source locations of each of the; * tokens. The cursors provided are filtered, so that only those; * cursors that have a direct correspondence to the token are; * accepted. For example, given a function call \c f(x),; * clang_getCursor() would provide the following cursors:; *; * * when the cursor is over the 'f', a DeclRefExpr cursor referring to 'f'.; * * when the cursor is over the '(' or the ')', a CallExpr referring to 'f'.; * * when the cursor is over the 'x', a DeclRefExpr cursor referring to 'x'.; *; * Only the first and last of these cursors will occur within the; * annotate, since the tokens ""f"" and ""x' directly refer to a function; * and a variable, respectively, but the parentheses are just a small; * part of the full syntax of the function call expression, which is; * not provided as an annotation.; *; * \param TU the translation unit that owns the given tokens.; *; * \param Tokens the set of tokens to annotate.; *; * \param NumTokens the number of tokens in \p Tokens.; *; * \param Cursors an array of \p NumTokens cursors, whose contents will be; * replaced with the cursors corresponding to each token.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:901,variab,variable,901,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['variab'],['variable']
Modifiability,"/**; * Append a cubic Bézier curve to the current path. The curve shall extend from the current point to the point; * (x3, y3), using (x1, y1) and (x2, y2) as Bézier control points. The new current point shall be (x3, x3).; * @param {number} x1; * @param {number} y1; * @param {number} x2; * @param {number} y2; * @param {number} x3; * @param {number} y3; * @memberof jsPDF#; * @name curveTo; * @function; * @instance; * @memberof jsPDF#; * @returns {jsPDF}; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:72,extend,extend,72,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['extend'],['extend']
Modifiability,"/**; * Centripetal CatmullRom Curve - which is useful for avoiding; * cusps and self-intersections in non-uniform catmull rom curves.; * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf; *; * curve.type accepts centripetal(default), chordal and catmullrom; * curve.tension is used for catmullrom which defaults to 0.5; */; /*; Based on an optimized c++ solution in; - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/; - http://ideone.com/NoEbVM. This CubicPoly class could be used for reusing some variables and calculations,; but for three.js curve use, it could be possible inlined and flatten into a single function call; which can be placed in CurveUtils.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:568,variab,variables,568,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['variab'],['variables']
Modifiability,"/**; * Completions for any possible value (variables, function calls, etc.); * should be included in the results.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:43,variab,variables,43,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['variab'],['variables']
Modifiability,/**; * Construct a USR for a specified Objective-C instance variable and; * the USR for its containing class.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:60,variab,variable,60,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['variab'],['variable']
Modifiability,"/**; * Create a ""bare"" JITDylib.; *; * The client is responsible for ensuring that the JITDylib's name is unique,; * e.g. by calling LLVMOrcExecutionSessionGetJTIDylibByName first.; *; * This call does not install any library code or symbols into the newly; * created JITDylib. The client is responsible for all configuration.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h:312,config,configuration,312,interpreter/llvm-project/llvm/include/llvm-c/Orc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Orc.h,1,['config'],['configuration']
Modifiability,"/**; * Create a descriptor for an imported function, type, or variable. Suitable; * for e.g. FORTRAN-style USE declarations.; * \param Builder The DIBuilder.; * \param Scope The scope this module is imported into.; * \param Decl The declaration (or definition) of a function, type,; or variable.; * \param File File where the declaration is located.; * \param Line Line number of the declaration.; * \param Name A name that uniquely identifies this imported; declaration.; * \param NameLen The length of the C string passed to \c Name.; * \param Elements Renamed elements.; * \param NumElements Number of renamed elements.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h:62,variab,variable,62,interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,2,['variab'],['variable']
Modifiability,"/**; * Create a new descriptor for a function parameter variable.; * \param Builder The DIBuilder.; * \param Scope The local scope the variable is declared in.; * \param Name Variable name.; * \param NameLen Length of variable name.; * \param ArgNo Unique argument number for this variable; starts at 1.; * \param File File where this variable is defined.; * \param LineNo Line number.; * \param Ty Metadata describing the type of the variable.; * \param AlwaysPreserve If true, this descriptor will survive optimizations.; * \param Flags Flags.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h:56,variab,variable,56,interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,7,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,"/**; * Create a new descriptor for a local auto variable.; * \param Builder The DIBuilder.; * \param Scope The local scope the variable is declared in.; * \param Name Variable name.; * \param NameLen Length of variable name.; * \param File File where this variable is defined.; * \param LineNo Line number.; * \param Ty Metadata describing the type of the variable.; * \param AlwaysPreserve If true, this descriptor will survive optimizations.; * \param Flags Flags.; * \param AlignInBits Variable alignment.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h:48,variab,variable,48,interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,7,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,/**; * Create a new descriptor for the specified global variable that is temporary; * and meant to be RAUWed.; * \param Scope Variable scope.; * \param Name Name of the variable.; * \param NameLen The length of the C string passed to \c Name.; * \param Linkage Mangled name of the variable.; * \param LnkLen The length of the C string passed to \c Linkage.; * \param File File where this variable is defined.; * \param LineNo Line number.; * \param Ty Variable Type.; * \param LocalToUnit Boolean flag indicate whether this variable is; * externally visible or not.; * \param Decl Reference to the corresponding declaration.; * \param AlignInBits Variable alignment(or 0 if no alignment attr was; * specified); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h:56,variab,variable,56,interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,8,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,/**; * Create a new descriptor for the specified subprogram.; * \param Builder The \c DIBuilder.; * \param Scope Function scope.; * \param Name Function name.; * \param NameLen Length of enumeration name.; * \param LinkageName Mangled function name.; * \param LinkageNameLen Length of linkage name.; * \param File File where this variable is defined.; * \param LineNo Line number.; * \param Ty Function type.; * \param IsLocalToUnit True if this function is not externally visible.; * \param IsDefinition True if this is a function definition.; * \param ScopeLine Set to the beginning of the scope this starts; * \param Flags E.g.: \c LLVMDIFlagLValueReference. These flags are; * used to emit dwarf attributes.; * \param IsOptimized True if optimization is ON.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h:330,variab,variable,330,interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,1,['variab'],['variable']
Modifiability,"/**; * Create a new descriptor for the specified variable that does not have an; * address, but does have a constant value.; * \param Builder The DIBuilder.; * \param Value The constant value.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h:49,variab,variable,49,interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,1,['variab'],['variable']
Modifiability,/**; * Create a new descriptor for the specified variable which has a complex; * address expression for its address.; * \param Builder The DIBuilder.; * \param Addr An array of complex address operations.; * \param Length Length of the address operation array.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h:49,variab,variable,49,interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,1,['variab'],['variable']
Modifiability,/**; * Create a new descriptor for the specified variable.; * \param Scope Variable scope.; * \param Name Name of the variable.; * \param NameLen The length of the C string passed to \c Name.; * \param Linkage Mangled name of the variable.; * \param LinkLen The length of the C string passed to \c Linkage.; * \param File File where this variable is defined.; * \param LineNo Line number.; * \param Ty Variable Type.; * \param LocalToUnit Boolean flag indicate whether this variable is; * externally visible or not.; * \param Expr The location of the global relative to the attached; * GlobalVariable.; * \param Decl Reference to the corresponding declaration.; * variables.; * \param AlignInBits Variable alignment(or 0 if no alignment attr was; * specified); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h:49,variab,variable,49,interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,9,"['Variab', 'variab']","['Variable', 'variable', 'variables']"
Modifiability,/**; * Create a new llvm::TargetMachine.; *; * \param T the target to create a machine for.; * \param Triple a triple describing the target machine.; * \param Options additional configuration (see; * LLVMCreateTargetMachineOptions()).; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h:178,config,configuration,178,interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/TargetMachine.h,1,['config'],['configuration']
Modifiability,"/**; * Create a table from a set of data.; * @name table; * @function; * @param {Integer} [x] : left-position for top-left corner of table; * @param {Integer} [y] top-position for top-left corner of table; * @param {Object[]} [data] An array of objects containing key-value pairs corresponding to a row of data.; * @param {String[]} [headers] Omit or null to auto-generate headers at a performance cost. * @param {Object} [config.printHeaders] True to print column headers at the top of every page; * @param {Object} [config.autoSize] True to dynamically set the column widths to match the widest cell value; * @param {Object} [config.margins] margin values for left, top, bottom, and width; * @param {Object} [config.fontSize] Integer fontSize to use (optional); * @param {Object} [config.padding] cell-padding in pt to use (optional); * @param {Object} [config.headerBackgroundColor] default is #c8c8c8 (optional); * @param {Object} [config.headerTextColor] default is #000 (optional); * @param {Object} [config.rowStart] callback to handle before print each row (optional); * @param {Object} [config.cellStart] callback to handle before print each cell (optional); * @returns {jsPDF} jsPDF-instance; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:423,config,config,423,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,18,['config'],['config']
Modifiability,"/**; * Create debugging information entry for Objective-C instance variable.; * \param Builder The DIBuilder.; * \param Name Member name.; * \param NameLen The length of the C string passed to \c Name.; * \param File File where this member is defined.; * \param LineNo Line number.; * \param SizeInBits Member size.; * \param AlignInBits Member alignment.; * \param OffsetInBits Member offset.; * \param Flags Flags to encode member attribute, e.g. private; * \param Ty Parent type.; * \param PropertyNode Property associated with this ivar.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h:67,variab,variable,67,interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,1,['variab'],['variable']
Modifiability,"/**; * Create debugging information entry to establish inheritance relationship; * between two types.; * \param Builder The DIBuilder.; * \param Ty Original type.; * \param BaseTy Base type. Ty is inherits from base.; * \param BaseOffset Base offset.; * \param VBPtrOffset Virtual base pointer offset.; * \param Flags Flags to describe inheritance attribute, e.g. private; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h:55,inherit,inheritance,55,interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,3,['inherit'],"['inheritance', 'inherits']"
Modifiability,"/**; * Create the Reference to the widgetAnnotation, so that it gets referenced; * in the Annot[] int the+ (Requires the Annotation Plugin); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:132,Plugin,Plugin,132,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Plugin'],['Plugin']
Modifiability,/**; * Creates a new descriptor for a module with the specified parent scope.; * \param Builder The \c DIBuilder.; * \param ParentScope The parent scope containing this module declaration.; * \param Name Module name.; * \param NameLen The length of the C string passed to \c Name.; * \param ConfigMacros A space-separated shell-quoted list of -D macro; definitions as they would appear on a command line.; * \param ConfigMacrosLen The length of the C string passed to \c ConfigMacros.; * \param IncludePath The path to the module map file.; * \param IncludePathLen The length of the C string passed to \c IncludePath.; * \param APINotesFile The path to an API notes file for the module.; * \param APINotesFileLen The length of the C string passed to \c APINotestFile.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h:291,Config,ConfigMacros,291,interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,3,['Config'],"['ConfigMacros', 'ConfigMacrosLen']"
Modifiability,"/**; * Creates extruded geometry from a path shape.; *; * parameters = {; *; * curveSegments: <int>, // number of points on the curves; * steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too; * depth: <float>, // Depth to extrude the shape; *; * bevelEnabled: <bool>, // turn on bevel; * bevelThickness: <float>, // how deep into the original shape bevel goes; * bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel; * bevelOffset: <float>, // how far from shape outline does bevel start; * bevelSegments: <int>, // number of bevel layers; *; * extrudePath: <THREE.Curve> // curve to extrude shape along; *; * UVGenerator: <Object> // object that provides UV generator functions; *; * }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:619,layers,layers,619,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['layers'],['layers']
Modifiability,"/**; * Depth-peel a layer in triangulation, used when calculating triangle; * depths; *; * It takes starting seed triangles, traverses neighboring triangles, and; * assigns given layer depth to the traversed triangles. Traversal is; * blocked by constraint edges. Triangles behind constraint edges are; * recorded as seeds of next layer and returned from the function.; *; * @param seeds indices of seed triangles; * @param layerDepth current layer's depth to mark triangles with; * @param[in, out] triDepths depths of triangles; * @return triangles of the deeper layers that are adjacent to the peeled; * layer. To be used as seeds when peeling deeper layers.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/Triangulation.h:564,layers,layers,564,math/mathcore/src/CDT/Triangulation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/Triangulation.h,2,['layers'],['layers']
Modifiability,"/**; * Determine the set of methods that are overridden by the given; * method.; *; * In both Objective-C and C++, a method (aka virtual member function,; * in C++) can override a virtual method in a base class. For; * Objective-C, a method is said to override any method in the class's; * base class, its protocols, or its categories' protocols, that has the same; * selector and is of the same kind (class or instance).; * If no such method exists, the search continues to the class's superclass,; * its protocols, and its categories, and so on. A method from an Objective-C; * implementation is considered to override the same methods as its; * corresponding method in the interface.; *; * For C++, a virtual member function overrides any virtual member; * function with the same signature that occurs in its base; * classes. With multiple inheritance, a virtual member function can; * override several virtual member functions coming from different; * base classes.; *; * In all cases, this function determines the immediate overridden; * method, rather than all of the overridden methods. For example, if; * a method is originally declared in a class A, then overridden in B; * (which in inherits from A) and also in C (which inherited from B),; * then the only overridden method returned from this function when; * invoked on C's method will be B's method. The client may then; * invoke this function again, given the previously-found overridden; * methods, to map out the complete method-override set.; *; * \param cursor A cursor representing an Objective-C or C++; * method. This routine will compute the set of methods that this; * method overrides.; *; * \param overridden A pointer whose pointee will be replaced with a; * pointer to an array of cursors, representing the set of overridden; * methods. If there are no overridden methods, the pointee will be; * set to NULL. The pointee must be freed via a call to; * \c clang_disposeOverriddenCursors().; *; * \param num_overridden A point",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:843,inherit,inheritance,843,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['inherit'],['inheritance']
Modifiability,"/**; * Error thrown when intersecting constraint edges are detected, but; * triangulation is not configured to attempt to resolve them; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/Triangulation.h:97,config,configured,97,math/mathcore/src/CDT/Triangulation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/Triangulation.h,1,['config'],['configured']
Modifiability,"/**; * Extensible curve object.; *; * Some common of curve methods:; * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget ); * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget ); * .getPoints(), .getSpacedPoints(); * .getLength(); * .updateArcLengths(); *; * This following curves inherit from THREE.Curve:; *; * -- 2D curves --; * THREE.ArcCurve; * THREE.CubicBezierCurve; * THREE.EllipseCurve; * THREE.LineCurve; * THREE.QuadraticBezierCurve; * THREE.SplineCurve; *; * -- 3D curves --; * THREE.CatmullRomCurve3; * THREE.CubicBezierCurve3; * THREE.LineCurve3; * THREE.QuadraticBezierCurve3; *; * A series of curves can be represented as a THREE.CurvePath.; *; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:311,inherit,inherit,311,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['inherit'],['inherit']
Modifiability,/**; * Finalize a specific subprogram.; * No new variables may be added to this subprogram afterwards.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h:49,variab,variables,49,interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,1,['variab'],['variables']
Modifiability,"/**; * Frontend action adaptor that merges ASTs together.; *; * This action takes an existing AST file and ""merges"" it into the AST; * context, producing a merged context. This action is an action; * adaptor, which forwards most of its calls to another action that; * will consume the merged context.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/FrontendActions.h:23,adapt,adaptor,23,interpreter/llvm-project/clang/include/clang/Frontend/FrontendActions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/FrontendActions.h,2,['adapt'],['adaptor']
Modifiability,"/**; * Generates two uniformly distributed variables. When doing a; * classification, you can do no better than random -> AUC = 0.5.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/ROC/testRocWeights.cxx:43,variab,variables,43,tmva/tmva/test/ROC/testRocWeights.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/ROC/testRocWeights.cxx,1,['variab'],['variables']
Modifiability,"/**; * Generates two variables, the signal class (A) will be uniformly; * distributed while the background class (B) will be triangular.; * __________; * |\_ |; * | \_ A |; * | B \_ |; * |______\_|; *; * The analytical roc curve has in this case an area of 2/3.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/ROC/testRocWeights.cxx:21,variab,variables,21,tmva/tmva/test/ROC/testRocWeights.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/ROC/testRocWeights.cxx,1,['variab'],['variables']
Modifiability,/**; * Get the metadata of the file associated with a given variable.; * \param Var The variable object.; *; * @see DIVariable::getFile(); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h:60,variab,variable,60,interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,2,['variab'],['variable']
Modifiability,/**; * Get the metadata of the scope associated with a given variable.; * \param Var The variable object.; *; * @see DIVariable::getScope(); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h:61,variab,variable,61,interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,2,['variab'],['variable']
Modifiability,"/**; * If cursor is a statement declaration tries to evaluate the; * statement and if its variable, tries to evaluate its initializer,; * into its corresponding type.; * If it's an expression, tries to evaluate the expression.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:90,variab,variable,90,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['variab'],['variable']
Modifiability,/**; * If cursor refers to a variable declaration and it has initializer returns; * cursor referring to the initializer otherwise return null cursor.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:29,variab,variable,29,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['variab'],['variable']
Modifiability,/**; * If cursor refers to a variable declaration that has external storage; * returns 1. If cursor refers to a variable declaration that doesn't have; * external storage returns 0. Otherwise returns -1.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:29,variab,variable,29,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,['variab'],['variable']
Modifiability,/**; * If cursor refers to a variable declaration that has global storage returns 1.; * If cursor refers to a variable declaration that doesn't have global storage; * returns 0. Otherwise returns -1.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:29,variab,variable,29,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,['variab'],['variable']
Modifiability,"/**; * Immediate ""parent"" of the reference. For example:; *; * \code; * Foo *var;; * \endcode; *; * The parent of reference of type 'Foo' is the variable 'var'.; * For references inside statement bodies of functions/methods,; * the parentEntity will be the function/method.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:145,variab,variable,145,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['variab'],['variable']
Modifiability,"/**; * Index initialization options.; *; * 0 is the default value of each member of this struct except for Size.; * Initialize the struct in one of the following three ways to avoid adapting; * code each time a new member is added to it:; * \code; * CXIndexOptions Opts;; * memset(&Opts, 0, sizeof(Opts));; * Opts.Size = sizeof(CXIndexOptions);; * \endcode; * or explicitly initialize the first data member and zero-initialize the rest:; * \code; * CXIndexOptions Opts = { sizeof(CXIndexOptions) };; * \endcode; * or to prevent the -Wmissing-field-initializers warning for the above version:; * \code; * CXIndexOptions Opts{};; * Opts.Size = sizeof(CXIndexOptions);; * \endcode; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:182,adapt,adapting,182,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['adapt'],['adapting']
Modifiability,"/**; * Insert a new llvm.dbg.declare intrinsic call at the end of the given basic; * block. If the basic block has a terminator instruction, the intrinsic is; * inserted before that terminator instruction.; * \param Builder The DIBuilder.; * \param Storage The storage of the variable to declare.; * \param VarInfo The variable's debug info descriptor.; * \param Expr A complex location expression for the variable.; * \param DebugLoc Debug info location.; * \param Block Basic block acting as a location for the new intrinsic.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h:276,variab,variable,276,interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,3,['variab'],['variable']
Modifiability,/**; * Insert a new llvm.dbg.declare intrinsic call before the given instruction.; * \param Builder The DIBuilder.; * \param Storage The storage of the variable to declare.; * \param VarInfo The variable's debug info descriptor.; * \param Expr A complex location expression for the variable.; * \param DebugLoc Debug info location.; * \param Instr Instruction acting as a location for the new intrinsic.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h:152,variab,variable,152,interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,3,['variab'],['variable']
Modifiability,"/**; * Insert a new llvm.dbg.value intrinsic call at the end of the given basic; * block. If the basic block has a terminator instruction, the intrinsic is; * inserted before that terminator instruction.; * \param Builder The DIBuilder.; * \param Val The value of the variable.; * \param VarInfo The variable's debug info descriptor.; * \param Expr A complex location expression for the variable.; * \param DebugLoc Debug info location.; * \param Block Basic block acting as a location for the new intrinsic.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h:268,variab,variable,268,interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,3,['variab'],['variable']
Modifiability,/**; * Insert a new llvm.dbg.value intrinsic call before the given instruction.; * \param Builder The DIBuilder.; * \param Val The value of the variable.; * \param VarInfo The variable's debug info descriptor.; * \param Expr A complex location expression for the variable.; * \param DebugLoc Debug info location.; * \param Instr Instruction acting as a location for the new intrinsic.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h:144,variab,variable,144,interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,3,['variab'],['variable']
Modifiability,/**; * Object exposing internal API to plugins; * @public; * @ignore; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:39,plugin,plugins,39,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['plugin'],['plugins']
Modifiability,/**; * Obtain the sign extended value for an integer constant value.; *; * @see llvm::ConstantInt::getSExtValue(); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:23,extend,extended,23,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['extend'],['extended']
Modifiability,/**; * Obtain the zero extended value for an integer constant value.; *; * @see llvm::ConstantInt::getZExtValue(); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h:23,extend,extended,23,interpreter/llvm-project/llvm/include/llvm-c/Core.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/Core.h,1,['extend'],['extended']
Modifiability,"/**; * Parse the given source file and the translation unit corresponding; * to that file.; *; * This routine is the main entry point for the Clang C API, providing the; * ability to parse a source file into a translation unit that can then be; * queried by other functions in the API. This routine accepts a set of; * command-line arguments so that the compilation can be configured in the same; * way that the compiler is configured on the command line.; *; * \param CIdx The index object with which the translation unit will be; * associated.; *; * \param source_filename The name of the source file to load, or NULL if the; * source file is included in \c command_line_args.; *; * \param command_line_args The command-line arguments that would be; * passed to the \c clang executable if it were being invoked out-of-process.; * These command-line options will be parsed and will affect how the translation; * unit is parsed. Note that the following options are ignored: '-c',; * '-emit-ast', '-fsyntax-only' (which is the default), and '-o \<output file>'.; *; * \param num_command_line_args The number of command-line arguments in; * \c command_line_args.; *; * \param unsaved_files the files that have not yet been saved to disk; * but may be required for parsing, including the contents of; * those files. The contents and name of these files (as specified by; * CXUnsavedFile) are copied when necessary, so the client only needs to; * guarantee their validity until the call to this function returns.; *; * \param num_unsaved_files the number of unsaved file entries in \p; * unsaved_files.; *; * \param options A bitmask of options that affects how the translation unit; * is managed but not its compilation. This should be a bitwise OR of the; * CXTranslationUnit_XXX flags.; *; * \param[out] out_TU A non-NULL pointer to store the created; * \c CXTranslationUnit, describing the parsed code and containing any; * diagnostics produced by the compiler.; *; * \returns Zero on success, otherwi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:373,config,configured,373,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,['config'],['configured']
Modifiability,/**; * Perform prediction using float as spectator variable; * @param method Path to a method weight file.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/crossvalidation/TestCrossValidationIntVar.cxx:51,variab,variable,51,tmva/tmva/test/crossvalidation/TestCrossValidationIntVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/crossvalidation/TestCrossValidationIntVar.cxx,1,['variab'],['variable']
Modifiability,"/**; * Provides a shared context for creating translation units.; *; * Call this function instead of clang_createIndex() if you need to configure; * the additional options in CXIndexOptions.; *; * \returns The created index or null in case of error, such as an unsupported; * value of options->Size.; *; * For example:; * \code; * CXIndex createIndex(const char *ApplicationTemporaryPath) {; * const int ExcludeDeclarationsFromPCH = 1;; * const int DisplayDiagnostics = 1;; * CXIndex Idx;; * #if CINDEX_VERSION_MINOR >= 64; * CXIndexOptions Opts;; * memset(&Opts, 0, sizeof(Opts));; * Opts.Size = sizeof(CXIndexOptions);; * Opts.ThreadBackgroundPriorityForIndexing = 1;; * Opts.ExcludeDeclarationsFromPCH = ExcludeDeclarationsFromPCH;; * Opts.DisplayDiagnostics = DisplayDiagnostics;; * Opts.PreambleStoragePath = ApplicationTemporaryPath;; * Idx = clang_createIndexWithOptions(&Opts);; * if (Idx); * return Idx;; * fprintf(stderr,; * ""clang_createIndexWithOptions() failed. ""; * ""CINDEX_VERSION_MINOR = %d, sizeof(CXIndexOptions) = %u\n"",; * CINDEX_VERSION_MINOR, Opts.Size);; * #else; * (void)ApplicationTemporaryPath;; * #endif; * Idx = clang_createIndex(ExcludeDeclarationsFromPCH, DisplayDiagnostics);; * clang_CXIndex_setGlobalOptions(; * Idx, clang_CXIndex_getGlobalOptions(Idx) |; * CXGlobalOpt_ThreadBackgroundPriorityForIndexing);; * return Idx;; * }; * \endcode; *; * \sa clang_createIndex(); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:136,config,configure,136,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,1,['config'],['configure']
Modifiability,"/**; * Resolves a positional attribute (dx, dy) on a given tSpan, possibly; * inheriting it from the nearest ancestor. Positional attributes; * are only inherited from a parent to its first child.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:78,inherit,inheriting,78,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,['inherit'],"['inherited', 'inheriting']"
Modifiability,/**; * Retrieves the \c DIExpression associated with this global variable expression.; * \param GVE The global variable expression.; *; * @see llvm::DIGlobalVariableExpression::getExpression(); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h:65,variab,variable,65,interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,2,['variab'],['variable']
Modifiability,/**; * Retrieves the \c DIVariable associated with this global variable expression.; * \param GVE The global variable expression.; *; * @see llvm::DIGlobalVariableExpression::getVariable(); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h:63,variab,variable,63,interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DebugInfo.h,2,['variab'],['variable']
Modifiability,/**; * Returns an key-value-List of all non-configurable Variables from the Object; *; * @name getKeyValueListForStream; * @returns {string}; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:44,config,configurable,44,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,4,"['Variab', 'config']","['Variables', 'configurable']"
Modifiability,"/**; * Returns the storage class for a function or variable declaration.; *; * If the passed in Cursor is not a function or variable declaration,; * CX_SC_Invalid is returned else the storage class.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:51,variab,variable,51,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,['variab'],['variable']
Modifiability,/**; * Store the config for outputting a table header; *; * @name setTableHeaderRow; * @function; * @param {Object[]} config; * An array of cell configs that would define a header row: Each config matches the config used by jsPDFAPI.cell; * except the lineNumber parameter is excluded; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:17,config,config,17,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,10,['config'],"['config', 'configs']"
Modifiability,/**; * The Child class of a RadioButton (the radioGroup) -> The single Buttons; *; * @class AcroFormChildClass; * @extends AcroFormField; * @ignore; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:115,extend,extends,115,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['extend'],['extends']
Modifiability,"/**; * The Field Object contains the Variables, that every Field needs; *; * @class AcroFormField; * @classdesc An AcroForm FieldObject; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:37,Variab,Variables,37,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Variab'],['Variables']
Modifiability,"/**; * This is the Deep Neural Network Designer: it produces an interactive interface, where we can build easily the; * deep network. This script can transform the graphical representation of the network to an option string.; * By using IPython JavaScript API, this script is able to communicate with the python kernel and book the method,; * and print out the kernel response.; * Used libraries/plugins:; * - jquery; * - jquery-ui; * - jquery.connections; * - jquery-timing; * Author: Attila Bagoly <battila93@gmail.com>; * Created: 8/3/2016; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/etc/notebook/JsMVA/js/NetworkDesigner.js:396,plugin,plugins,396,etc/notebook/JsMVA/js/NetworkDesigner.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/etc/notebook/JsMVA/js/NetworkDesigner.js,1,['plugin'],['plugins']
Modifiability,"/**; * This is the linkage for variables, parameters, and so on that; * have automatic storage. This covers normal (non-extern) local variables.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h:31,variab,variables,31,interpreter/llvm-project/clang/include/clang-c/Index.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Index.h,2,['variab'],['variables']
Modifiability,"/**; * This table is indexed first by the four ZSTD_dictMode_e values, and then; * by the two searchMethod_e values. NULLs are placed for configurations; * that should never occur (extDict modes go to the other implementation; * below and there is no DDSS for binary tree search yet).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_lazy.c:138,config,configurations,138,builtins/zstd/compress/zstd_lazy.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/compress/zstd_lazy.c,1,['config'],['configurations']
Modifiability,"/**; * Type used for storing layer depths for triangles; * @note LayerDepth should support 60K+ layers, which could be to much or; * too little for some use cases. Feel free to re-define this typedef.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/Triangulation.h:96,layers,layers,96,math/mathcore/src/CDT/Triangulation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/CDT/Triangulation.h,1,['layers'],['layers']
Modifiability,"/**; * \brief Configure constrained gamma parameters for fitting.; *; * This function configures constrained gamma parameters for fitting. If a; * given relative sigma is less than or equal to zero or below a threshold, the; * gamma parameter is set to be constant. The function also sets reasonable; * ranges for the gamma parameter and provides a reasonable starting point for; * pre-fit errors.; *; * @param gammas The gamma parameters to be configured.; * @param sigmaRel The relative sigma values to be used for configuring the; * limits and errors.; * @param minSigma The minimum relative sigma threshold. If a relative sigma is; * below this threshold, the gamma parameter is set to be; * constant.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx:14,Config,Configure,14,roofit/histfactory/src/HistFactoryImpl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistFactoryImpl.cxx,4,"['Config', 'config']","['Configure', 'configured', 'configures', 'configuring']"
Modifiability,"/**; * \brief Namespace for new RooFit test statistic calculation.; *; * RooFit::TestStatistics contains a major refactoring of the RooAbsTestStatistic-RooAbsOptTestStatistic-RooNLLVar; * inheritance tree into:; * 1. statistics-based classes on the one hand;; * 2. calculation/evaluation/optimization based classes on the other hand.; *; * The likelihood is the central unit on the statistics side. The RooAbsL class is implemented for four kinds of; * likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like; * global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute; * their components in parallelizable chunks that can be used by the calculator classes as they see fit.; *; * On top of the likelihood classes, we also provide for convenience a likelihood builder buildLikelihood, as a free; * function in the namespace. This function analyzes the pdf and automatically constructs the proper likelihood, built; * up from the available RooAbsL subclasses.; *; * The calculator ""Wrapper"" classes are abstract interfaces. These can be implemented for different kinds of algorithms,; * or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based; * multi-processing implementation based on RooFit::MultiProcess. Other possible implementations could use the GPU or; * external tools like TensorFlow.; *; * The coupling of all these classes to RooMinimizer is made via the MinuitFcnGrad class, which owns the Wrappers that; * calculate the likelihood components.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx:113,refactor,refactoring,113,roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/buildLikelihood.cxx,3,"['coupling', 'inherit', 'refactor']","['coupling', 'inheritance', 'refactoring']"
Modifiability,"/**; * \brief Split the dataset into subsets based on the channels of a RooSimultaneous.; *; * Returns a list of sub-datasets, which each dataset named after the; * applicable state name of the RooSimultaneous index category. The index; * category itself is no longer present in the sub-datasets. The sub-datasets; * only contain variables that the pdf for the corresponding channel depends; * on.; *; * \param simPdf The simultaneous pdf used for splitting the dataset.; * \param createEmptyDataSets Flag indicating whether to create empty datasets; * for missing categories (`false` by default).; *; * \return An owning pointer to a TList of subsets of the dataset.; * Returns `nullptr` if an error occurs.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:330,variab,variables,330,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['variab'],['variables']
Modifiability,/**; * \class ROOT::Internal::TSpinLockGuard; * \brief A spin mutex-as-code-guard class.; * \ingroup Parallelism; * This class allows to acquire spin locks in combination with a std::atomic_flag variable.; * For example:; * ~~~{.cpp}; * mutable std::atomic_flag fSpinLock;; * [...]; * ROOT::Internal::TSpinLockGuard slg(fSpinLock);; * // do something important; * [...]; * ~~~{.cpp}; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/TSpinLockGuard.h:195,variab,variable,195,core/foundation/res/TSpinLockGuard.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/res/TSpinLockGuard.h,1,['variab'],['variable']
Modifiability,/**; * \class RRawFileWin RRawFileWin.hxx; * \ingroup IO; *; * The RRawFileWin class uses portable C I/O calls to read from a drive. The standard C I/O buffering is turned off; * for the buffering of RRawFile base class.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/ROOT/RRawFileWin.hxx:90,portab,portable,90,io/io/inc/ROOT/RRawFileWin.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/ROOT/RRawFileWin.hxx,1,['portab'],['portable']
Modifiability,/**; * extends RGBColor by rgba colors as RGBColor is not capable of it; * currentcolor: the color to return if colorString === 'currentcolor'; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:7,extend,extends,7,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['extend'],['extends']
Modifiability,"/**; * g_file_error_from_errno:; * @err_no: an ""errno"" value; * ; * Gets a #GFileError constant based on the passed-in errno.; * For example, if you pass in EEXIST this function returns; * #G_FILE_ERROR_EXIST. Unlike errno values, you can portably; * assume that all #GFileError values will exist.; *; * Normally a #GFileError value goes into a #GError returned; * from a function that manipulates files. So you would use; * g_file_error_from_errno() when constructing a #GError.; * ; * Return value: #GFileError corresponding to the given errno; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gfileutils.c:239,portab,portably,239,graf2d/win32gdk/gdk/src/glib/gfileutils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gfileutils.c,1,['portab'],['portably']
Modifiability,"/**; * g_find_program_in_path:; * @program: a program name; * ; * Locates the first executable named @program in the user's path, in the; * same way that execvp() would locate it. Returns an allocated string; * with the absolute path name, or NULL if the program is not found in; * the path. If @program is already an absolute path, returns a copy of; * @program if @program exists and is executable, and NULL otherwise.; * ; * On Windows, if @program does not have a file type suffix, tries to; * append the suffixes in the PATHEXT environment variable (if that; * doesn't exists, the suffixes .com, .exe, and .bat) in turn, and; * then look for the resulting file name in the same way as; * CreateProcess() would. This means first in the directory where the; * program was loaded from, then in the current directory, then in the; * Windows 32-bit system directory, then in the Windows directory, and; * finally in the directories in the PATH environment variable. If; * the program is found, the return value contains the full name; * including the type suffix.; *; * Return value: absolute path, or NULL; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutils.c:545,variab,variable,545,graf2d/win32gdk/gdk/src/glib/gutils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gutils.c,2,['variab'],['variable']
Modifiability,"/**; * g_shell_parse_argv:; * @command_line: command line to parse; * @argcp: return location for number of args; * @argvp: return location for array of args; * @error: return location for error; * ; * Parses a command line into an argument vector, in much the same way; * the shell would, but without many of the expansions the shell would; * perform (variable expansion, globs, operators, filename expansion,; * etc. are not supported). The results are defined to be the same as; * those you would get from a UNIX98 /bin/sh, as long as the input; * contains none of the unsupported shell expansions. If the input; * does contain such expansions, they are passed through; * literally. Possible errors are those from the #G_SHELL_ERROR; * domain.; * ; * Return value: TRUE on success, FALSE if error set; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gshell.c:353,variab,variable,353,graf2d/win32gdk/gdk/src/glib/gshell.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gshell.c,1,['variab'],['variable']
Modifiability,"/**; * g_shell_unquote:; * @quoted_string: shell-quoted string; * @error: error return location or NULL; * ; * Unquotes a string as the shell (/bin/sh) would. Only handles; * quotes; if a string contains file globs, arithmetic operators,; * variables, backticks, redirections, or other special-to-the-shell; * features, the result will be different from the result a real shell; * would produce (the variables, backticks, etc. will be passed; * through literally instead of being expanded). This function is; * guaranteed to succeed if applied to the result of; * g_shell_quote(). If it fails, it returns NULL and sets the; * error. The @quoted_string need not actually contain quoted or; * escaped text; g_shell_unquote() simply goes through the string and; * unquotes/unescapes anything that the shell would. Both single and; * double quotes are handled, as are escapes including escaped; * newlines. The return value must be freed with g_free(). Possible; * errors are in the #G_SHELL_ERROR domain.; * ; * Shell quoting rules are a bit strange. Single quotes preserve the; * literal string exactly. escape sequences are not allowed; not even; * \' - if you want a ' in the quoted text, you have to do something; * like 'foo'\''bar'. Double quotes allow $, `, "", \, and newline to; * be escaped with backslash. Otherwise double quotes preserve things; * literally.; *; * Return value: an unquoted string; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gshell.c:241,variab,variables,241,graf2d/win32gdk/gdk/src/glib/gshell.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gshell.c,2,['variab'],['variables']
Modifiability,"/**; * g_spawn_async:; * @working_directory: child's current working directory, or NULL to inherit parent's; * @argv: child's argument vector; * @envp: child's environment, or NULL to inherit parent's; * @flags: flags from #GSpawnFlags; * @child_setup: function to run in the child just before exec(); * @user_data: user data for @child_setup; * @child_pid: return location for child process ID, or NULL; * @error: return location for error; * ; * See g_spawn_async_with_pipes() for a full description; this function; * simply calls the g_spawn_async_with_pipes() without any pipes.; * ; * Return value: TRUE on success, FALSE if error is set; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:91,inherit,inherit,91,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,4,['inherit'],['inherit']
Modifiability,"/**; * g_spawn_async_with_pipes:; * @working_directory: child's current working directory, or NULL to inherit parent's; * @argv: child's argument vector; * @envp: child's environment, or NULL to inherit parent's; * @flags: flags from #GSpawnFlags; * @child_setup: function to run in the child just before exec(); * @user_data: user data for @child_setup; * @child_pid: return location for child process ID, or NULL; * @standard_input: return location for file descriptor to write to child's stdin, or NULL; * @standard_output: return location for file descriptor to read child's stdout, or NULL; * @standard_error: return location for file descriptor to read child's stderr, or NULL; * @error: return location for error; *; * Executes a child program asynchronously (your program will not; * block waiting for the child to exit). The child program is; * specified by the only argument that must be provided, @argv. @argv; * should be a NULL-terminated array of strings, to be passed as the; * argument vector for the child. The first string in @argv is of; * course the name of the program to execute. By default, the name of; * the program must be a full path; the PATH shell variable will only; * be searched if you pass the %G_SPAWN_SEARCH_PATH flag.; *; * @envp is a NULL-terminated array of strings, where each string; * has the form <literal>KEY=VALUE</literal>. This will become; * the child's environment. If @envp is NULL, the child inherits its; * parent's environment.; *; * @flags should be the bitwise OR of any flags you want to affect the; * function's behavior. The %G_SPAWN_DO_NOT_REAP_CHILD means that the; * child will not be automatically reaped; you must call waitpid() or; * handle SIGCHLD yourself, or the child will become a zombie.; * %G_SPAWN_LEAVE_DESCRIPTORS_OPEN means that the parent's open file; * descriptors will be inherited by the child; otherwise all; * descriptors except stdin/stdout/stderr will be closed before; * calling exec() in the child. %G_SPAWN_SEARCH_PA",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:102,inherit,inherit,102,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,4,['inherit'],['inherit']
Modifiability,"/**; * g_spawn_sync:; * @working_directory: child's current working directory, or NULL to inherit parent's; * @argv: child's argument vector; * @envp: child's environment, or NULL to inherit parent's; * @flags: flags from #GSpawnFlags; * @child_setup: function to run in the child just before exec(); * @user_data: user data for @child_setup; * @standard_output: return location for child output ; * @standard_error: return location for child error messages; * @exit_status: child exit status, as returned by waitpid(); * @error: return location for error; *; * Executes a child synchronously (waits for the child to exit before returning).; * All output from the child is stored in @standard_output and @standard_error,; * if those parameters are non-NULL. If @exit_status is non-NULL, the exit status; * of the child is stored there as it would be by waitpid(); standard UNIX; * macros such as WIFEXITED() and WEXITSTATUS() must be used to evaluate the; * exit status. If an error occurs, no data is returned in @standard_output,; * @standard_error, or @exit_status.; * ; * This function calls g_spawn_async_with_pipes() internally; see that function; * for full details on the other parameters.; * ; * Return value: TRUE on success, FALSE if an error was set.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c:90,inherit,inherit,90,graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gspawn-win32.c,4,['inherit'],['inherit']
Modifiability,"/**; * g_win32_get_package_installation_directory:; * @package: An identifier for a software package, or NULL; * @dll_name: The name of a DLL that a package provides, or NULL; *; * Try to determine the installation directory for a software package.; * Typically used by GNU software packages.; *; * @package should be a short identifier for the package. Typically it; * is the same identifier as used for GETTEXT_PACKAGE in software; * configured accoring to GNU standards. The function first looks in; * the Windows Registry for the value #InstallationDirectory in the; * key #HKLM\Software\@package, and if that value exists and is a; * string, returns that.; *; * If @package is NULL, or the above value isn't found in the; * Registry, but @dll_name is non-NULL, it should name a DLL loaded; * into the current process. Typically that would be the name of the; * DLL calling this function, looking for its installation; * directory. The function then asks Windows what directory that DLL; * was loaded from. If that directory's last component is ""bin"" or; * ""lib"", the parent directory is returned, otherwise the directory; * itself. If that DLL isn't loaded, the function proceeds as if; * @dll_name was NULL.; *; * If both @package and @dll_name are NULL, the directory from where; * the main executable of the process was loaded is uses instead in; * the same way as above.; *; * The return value should be freed with g_free() when not needed any longer. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gwin32.c:436,config,configured,436,graf2d/win32gdk/gdk/src/glib/gwin32.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gwin32.c,1,['config'],['configured']
Modifiability,"/**; * jsPDF.API is a STATIC property of jsPDF class.; * jsPDF.API is an object you can add methods and properties to.; * The methods / properties you add will show up in new jsPDF objects.; *; * One property is prepopulated. It is the 'events' Object. Plugin authors can add topics,; * callbacks to this object. These will be reassigned to all new instances of jsPDF.; *; * @static; * @public; * @memberof jsPDF#; * @name API; *; * @example; * jsPDF.API.mymethod = function(){; * // 'this' will be ref to internal API object. see jsPDF source; * // , so you can refer to built-in methods like so:; * // this.line(....); * // this.text(....); * }; * var pdfdoc = new jsPDF(); * pdfdoc.mymethod() // <- !!!!!!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:253,Plugin,Plugin,253,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['Plugin'],['Plugin']
Modifiability,/**; *; * @package; * @param values; * @constructor; * @property pdf; * @property attributeState Keeps track of parent attributes that are inherited automatically; * @property refsHandler The handler that will render references on demand; * @property styleSheets; * @property textMeasure; * @property transform The current transformation matrix; * @property withinClipPath; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:139,inherit,inherited,139,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['inherit'],['inherited']
Modifiability,"/**; @defgroup CppFunctions Function Classes and Interfaces. Interfaces (abstract classes) and Base classes used in MathCore and MathMore numerical methods; for describing function classes. They define function and gradient evaluation and as well the; functionality for dealing with parameters in the case of parametric functions which are used for; fitting and data modeling.; Included are also adapter classes, such as functors, to wrap generic callable C++ objects; in the desired interface. @ingroup MathCore; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IFunction.h:396,adapt,adapter,396,math/mathcore/inc/Math/IFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/IFunction.h,1,['adapt'],['adapter']
Modifiability,"/**; @defgroup FitMain User Fitting classes. Main Classes used for fitting a given data set; @ingroup Fit; */; //___________________________________________________________________________________; /**; Fitter class, entry point for performing all type of fits.; Fits are performed using the generic ROOT::Fit::Fitter::Fit method.; The inputs are the data points and a model function (using a ROOT::Math::IParamFunction); The result of the fit is returned and kept internally in the ROOT::Fit::FitResult class.; The configuration of the fit (parameters, options, etc...) are specified in the; ROOT::Math::FitConfig class.; After fitting the config of the fit will be modified to have the new values the resulting; parameter of the fit with step sizes equal to the errors. FitConfig can be preserved with; initial parameters by calling FitConfig.SetUpdateAfterFit(false);. @ingroup FitMain; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:516,config,configuration,516,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,2,['config'],"['config', 'configuration']"
Modifiability,"/**; @defgroup MCIntegration Numerical Monte Carlo Integration Classes; Classes implementing method for Monte Carlo Integration.; @ingroup Integration. Class for performing numerical integration of a multidimensional function.; It uses the numerical integration algorithms of GSL, which reimplements the; algorithms used in the QUADPACK, a numerical integration package written in Fortran. Plain MC, MISER and VEGAS integration algorithms are supported for integration over finite (hypercubic) ranges. <A HREF=""http://www.gnu.org/software/gsl/manual/gsl-ref_16.html#SEC248"">GSL Manual</A>. It implements also the interface ROOT::Math::VirtualIntegratorMultiDim so it can be; instantiate using the plugin manager (plugin name is ""GSLMCIntegrator""); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h:697,plugin,plugin,697,math/mathmore/inc/Math/GSLMCIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLMCIntegrator.h,2,['plugin'],['plugin']
Modifiability,"/**; @defgroup MultiMin Multi-dimensional Minimization; @ingroup NumAlgo. Classes implementing algorithms for multi-dimensional minimization; */; //_______________________________________________________________________________; /**; Abstract Minimizer class, defining the interface for the various minimizer; (like Minuit2, Minuit, GSL, etc..) in ROOT.; Plug-in's exist in ROOT to be able to instantiate the derived classes without linking the library; using the static function ROOT::Math::Factory::CreateMinimizer. Here is the list of all possible minimizers and their respective methods (algorithms) that can be instantiated:; The name shown below can be used to create them. More documentation can be found in the respective class. - Minuit (class TMinuitMinimizer); - Migrad (default); - MigradImproved (Migrad with adding a method to improve minimization when ends-up in a local minimum, see par. 6.3 of [Minuit tutorial on Function Minimization](https://seal.web.cern.ch/documents/minuit/mntutorial.pdf)); - Simplex; - Minimize (a combination of Simplex + Migrad); - Minimize; - Scan; - Seek. - Minuit2 (class ROOT::Minuit2::Minuit2Minimizer); - Migrad (default); - Simplex; - Minimize; - Fumili (Fumili2); - Scan. - Fumili (class TFumiliMinimizer). - GSLMultiMin (class ROOT::Math::GSLMinimizer) available when ROOT is built with `mathmore` support; - BFGS2 (Default); - BFGS; - ConjugateFR; - ConjugatePR; - SteepestDescent. - GSLMultiFit (class ROOT::Math::GSLNLMinimizer) available when ROOT is built `mathmore` support. - GSLSimAn (class ROOT::Math::GSLSimAnMinimizer) available when ROOT is built with `mathmore` support. - Genetic (class ROOT::Math::GeneticMinimizer). - RMinimizer (class ROOT::Math::RMinimizer) available when ROOT is built with `r` support; - BFGS (default); - L-BFGS-S; - Nelder-Mead; - CG; - and more methods, see the Details in the documentation of the function `optimix` of the [optmix R package](https://cran.r-project.org/web/packages/optimx/optimx.pdf). The Mi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:355,Plug-in,Plug-in,355,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,1,['Plug-in'],['Plug-in']
Modifiability,"/**; @defgroup NumAlgo Numerical Algorithms. Numerical Algorithm classes from the \ref MathCore and \ref MathMore libraries. @ingroup MathCore; @ingroup MathMore. */; /**. @defgroup Integration Numerical Integration. Classes for numerical integration of functions.; These classes provide algorithms for integration of one-dimensional functions, with several adaptive and non-adaptive methods; and for integration of multi-dimensional function using an adaptive method or MonteCarlo Integration (GSLMCIntegrator).; The basic classes ROOT::Math::IntegratorOneDim provides a common interface for the one-dimensional methods while the class; ROOT::Math::IntegratorMultiDim provides the interface for the multi-dimensional ones.; The methods can be configured (e.g setting the default method with its default parameters) using the ROOT::Math::IntegratorOneDimOptions and; ROOT::Math::IntegratorMultiDimOptions classes. @ingroup NumAlgo. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:358,adapt,adaptive,358,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,4,"['adapt', 'config']","['adaptive', 'configured']"
Modifiability,"/**; @param PriorizeIfSubclassOf These classes should be prioritized in the output.; This is useful to force enum generation/jump tables/lookup tables to be more; compact in both size and surrounding code in hot functions. An example use is; in Decl for classes that inherit from DeclContext, for functions like; castFromDeclContext.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/TableGenBackends.h:267,inherit,inherit,267,interpreter/llvm-project/clang/utils/TableGen/TableGenBackends.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/TableGenBackends.h,1,['inherit'],['inherit']
Modifiability,"/**; A log configuration for a channel, e.g. ""RHist"".; Each ROOT module has its own log, with potentially distinct verbosity.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx:11,config,configuration,11,core/foundation/inc/ROOT/RLogger.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ROOT/RLogger.hxx,1,['config'],['configuration']
Modifiability,/**; Binned Likelihood fit copying the input data.; Default is extended.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:63,extend,extended,63,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['extend'],['extended']
Modifiability,/**; Binned Likelihood fit using a `shared_ptr` for NOT copying the input data.; Default is extended.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:92,extend,extended,92,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['extend'],['extended']
Modifiability,/**; Build (find) function minimum using the Variable Metric method (MIGRAD); Two possible error updators can be chosen; - Davidon : this is the standard formula used in Migrad; - BFGS this is the new formula based on BFGS algorithm; (see Broyden–Fletcher–Goldfarb–Shanno algorithm; https://en.wikipedia.org/wiki/Broyden–Fletcher–Goldfarb–Shanno_algorithm ); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/VariableMetricBuilder.h:45,Variab,Variable,45,math/minuit2/inc/Minuit2/VariableMetricBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/VariableMetricBuilder.h,1,['Variab'],['Variable']
Modifiability,"/**; Class for adapting a C++ functor class to C function pointers used by GSL MultiFit; Algorithm; The templated C++ function class must implement:. <em> double operator( const double * x)</em>; and if the derivatives are required:; <em> void Gradient( const double * x, double * g)</em>; and; <em> void FdF( const double * x, double &f, double * g)</em>. This class defines static methods with will be used to fill the; \a gsl_multimin_function and; \a gsl_multimin_function_fdf structs used by GSL.; See for examples the; <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Providing-a-function-to-minimize.html#Providing-a-function-to-minimize"">GSL online manual</A>. @ingroup MultiMin; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiFitFunctionAdapter.h:15,adapt,adapting,15,math/mathmore/src/GSLMultiFitFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiFitFunctionAdapter.h,1,['adapt'],['adapting']
Modifiability,"/**; Class for adapting a C++ functor class to C function pointers used by GSL MultiRoot; Algorithm; The templated C++ function class must implement:. <em> double operator( const double * x)</em>; and if the derivatives are required:; <em> void Gradient( const double * x, double * g)</em>; and; <em> void FdF( const double * x, double &f, double * g)</em>. @ingroup MultiRoot; */; // FuncVector must contain a vector of pointers to functions; // this same as MultiFit but here need to use pointers where there we used class elements",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiRootFunctionAdapter.h:15,adapt,adapting,15,math/mathmore/src/GSLMultiRootFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiRootFunctionAdapter.h,1,['adapt'],['adapting']
Modifiability,"/**; Class for adapting any C++ functor class to C function pointers used by GSL.; The templated C++ function class must implement:. <em> double operator( double x)</em>; and if the derivatives are required:; <em> double Gradient( double x)</em>. This class defines static methods with will be used to fill the; \a gsl_function and \a gsl_function_fdf structs used by GSL.; See for examples the <A HREF=""http://www.gnu.org/software/gsl/manual/gsl-ref_32.html#SEC432"">GSL online manual</A>; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLFunctionAdapter.h:15,adapt,adapting,15,math/mathmore/inc/Math/GSLFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLFunctionAdapter.h,1,['adapt'],['adapting']
Modifiability,"/**; Class for adapting any multi-dimension C++ functor class to C function pointers used by; GSL MonteCarlo integration algorithms.; The templated C++ function class must implement:. <em> double operator( const double * x)</em>. This class defines static methods with will be used to fill the; \a gsl_monte_function used by GSL.; See for examples the; <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Monte-Carlo-Interface.html"">GSL online manual</A>. @ingroup MCIntegration; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMonteFunctionAdapter.h:15,adapt,adapting,15,math/mathmore/src/GSLMonteFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMonteFunctionAdapter.h,1,['adapt'],['adapting']
Modifiability,"/**; Class for adapting any multi-dimension C++ functor class to C function pointers used by; GSL MultiMin algorithms.; The templated C++ function class must implement:. <em> double operator( const double * x)</em>; and if the derivatives are required:; <em> void Gradient( const double * x, double * g)</em>. This class defines static methods with will be used to fill the; \a gsl_multimin_function and; \a gsl_multimin_function_fdf structs used by GSL.; See for examples the; <A HREF=""http://www.gnu.org/software/gsl/manual/html_node/Providing-a-function-to-minimize.html#Providing-a-function-to-minimize"">GSL online manual</A>. @ingroup MultiMin. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiMinFunctionAdapter.h:15,adapt,adapting,15,math/mathmore/src/GSLMultiMinFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiMinFunctionAdapter.h,1,['adapt'],['adapting']
Modifiability,/**; Computes the numerical derivative at a point x using an adaptive backward; difference algorithm with a step size h.; The function is evaluated only at points less than x and at x itself.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h:61,adapt,adaptive,61,math/mathmore/inc/Math/Derivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h,2,['adapt'],['adaptive']
Modifiability,/**; Computes the numerical derivative at a point x using an adaptive central; difference algorithm with a step size h.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h:61,adapt,adaptive,61,math/mathmore/inc/Math/Derivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h,2,['adapt'],['adaptive']
Modifiability,/**; Computes the numerical derivative at a point x using an adaptive forward; difference algorithm with a step size h.; The function is evaluated only at points greater than x and at x itself.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h:61,adapt,adaptive,61,math/mathmore/inc/Math/Derivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h,2,['adapt'],['adaptive']
Modifiability,/**; Computes the numerical derivative of a function f at a point x using an adaptive backward; difference algorithm with a step size h.; The function is evaluated only at points less than x and at x itself; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h:77,adapt,adaptive,77,math/mathmore/inc/Math/Derivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h,2,['adapt'],['adaptive']
Modifiability,/**; Computes the numerical derivative of a function f at a point x using an adaptive central; difference algorithm with a step size h; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h:77,adapt,adaptive,77,math/mathmore/inc/Math/Derivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h,1,['adapt'],['adaptive']
Modifiability,/**; Computes the numerical derivative of a function f at a point x using an adaptive forward; difference algorithm with a step size h.; The function is evaluated only at points greater than x and at x itself; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h:77,adapt,adaptive,77,math/mathmore/inc/Math/Derivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h,2,['adapt'],['adaptive']
Modifiability,/**; Computes the numerical derivative of a function f at a point x.; It uses Derivator::EvalCentral to compute the derivative using an; adaptive central difference algorithm with a step size h; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h:137,adapt,adaptive,137,math/mathmore/inc/Math/Derivator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/Derivator.h,1,['adapt'],['adaptive']
Modifiability,"/**; Construct Monte Carlo Study Manager. This class automates generating data from a given PDF,; fitting the PDF to data and accumulating the fit statistics. \param[in] model The PDF to be studied; \param[in] observables The variables of the PDF to be considered observables; \param[in] arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8 Optional arguments according to table below. <table>; <tr><th> Optional arguments <th>; <tr><td> Silence() <td> Suppress all RooFit messages during running below PROGRESS level; <tr><td> FitModel(const RooAbsPdf&) <td> The PDF for fitting if it is different from the PDF for generating.; <tr><td> ConditionalObservables(const RooArgSet& set) <td> The set of observables that the PDF should _not_ be normalized over; <tr><td> Binned(bool flag) <td> Bin the dataset before fitting it. Speeds up fitting of large data samples; <tr><td> FitOptions(....) <td> Options to be used for fitting. All named arguments inside FitOptions() are passed to RooAbsPdf::fitTo().; `Save()` is especially interesting to be able to retrieve fit results of each run using fitResult().; <tr><td> Verbose(bool flag) <td> Activate informational messages in event generation phase; <tr><td> Extended(bool flag) <td> Determine number of events for each sample anew from a Poisson distribution; <tr><td> Constrain(const RooArgSet& pars) <td> Apply internal constraints on given parameters in fit and sample constrained parameter values from constraint p.d.f for each toy.; <tr><td> ProtoData(const RooDataSet&, bool randOrder); <td> Prototype data for the event generation. If the randOrder flag is set, the order of the dataset will be re-randomized for each generation; cycle to protect against systematic biases if the number of generated events does not exactly match the number of events in the prototype dataset; at the cost of reduced precision with mu equal to the specified number of events; </table>; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:226,variab,variables,226,roofit/roofitcore/src/RooMCStudy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx,2,"['Extend', 'variab']","['Extended', 'variables']"
Modifiability,"/**; Constructor a wrapped function from a pointer to a generic callable object implementation operator()(const double *), the new function dimension, the number of parameters (number of fixed variables) and an array specifying the index of the fixed variables which became; parameters in the new API; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedParamFunction.h:193,variab,variables,193,math/mathcore/inc/Math/WrappedParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedParamFunction.h,2,['variab'],['variables']
Modifiability,"/**; Constructor from a IMultiGradFunction interface that is externally managed; vector specifying the variable types (free, bounded or fixed, defined in enum EMinimVariableTypes ); variable values (used for the fixed ones) and a map with the bounds (for the bounded variables). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformFunction.h:103,variab,variable,103,math/mathcore/inc/Math/MinimTransformFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformFunction.h,3,['variab'],"['variable', 'variables']"
Modifiability,/**; Constructor from a fit-config for a dummy fit; (e.g. when only one fcn evaluation is done); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h:28,config,config,28,math/mathcore/inc/Fit/FitResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h,1,['config'],['config']
Modifiability,"/**; Constructor from the function object , dimension of the function and; and coordinate we want to adapt.; The coordinate cached vector is created inside and eventually the values must be passed; later with the SetX which will copy them; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/OneDimFunctionAdapter.h:101,adapt,adapt,101,math/mathcore/inc/Math/OneDimFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/OneDimFunctionAdapter.h,1,['adapt'],['adapt']
Modifiability,"/**; Constructor from the function object , pointer to an external array of x values; and coordinate we want to adapt; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/OneDimFunctionAdapter.h:112,adapt,adapt,112,math/mathcore/inc/Math/OneDimFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/OneDimFunctionAdapter.h,1,['adapt'],['adapt']
Modifiability,"/**; Constructor from the function object , x value and coordinate we want to adapt; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/OneDimFunctionAdapter.h:78,adapt,adapt,78,math/mathcore/inc/Math/OneDimFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/OneDimFunctionAdapter.h,1,['adapt'],['adapt']
Modifiability,"/**; Constructor of one dimensional Integrator passing a function interface. @param f integration function (1D interface). It is copied inside; @param type integration type (adaptive, non-adaptive, etc..); @param absTol desired absolute tolerance. The algorithm will stop when either the absolute OR the relative tolerance are satisfied.; @param relTol desired relative tolerance; @param size maximum number of sub-intervals; @param rule Gauss-Kronrod integration rule (only for GSL ADAPTIVE type). NOTE: When no values are passed, the values used are taken from the default defined in ROOT::Math::IntegratorOneDimOptions; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:174,adapt,adaptive,174,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,3,"['ADAPT', 'adapt']","['ADAPTIVE', 'adaptive']"
Modifiability,/**; Default Constructor for an unlimited variable; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformVariable.h:42,variab,variable,42,math/mathcore/inc/Math/MinimTransformVariable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformVariable.h,1,['variab'],['variable']
Modifiability,/**; Default constructor (an argument is needed by plug-in manager); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h:51,plug-in,plug-in,51,math/fumili/inc/TFumiliMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/fumili/inc/TFumiliMinimizer.h,1,['plug-in'],['plug-in']
Modifiability,/**; Destructor.; Make it virtual in case users derive from Fitter class to extend it by adding new methods.; This is needed to avoid a warning seen when doing from Python; (see ROOT issue [#12391](https://github.com/root-project/root/issues/12391) ).; Note that the Fitter class does not provide virtual functions to be re-implemented by derived classes.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:76,extend,extend,76,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['extend'],['extend']
Modifiability,/**; Enumeration describing the status of the variable; The enumeration are used in the minimizer classes to categorize the variables; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformVariable.h:46,variab,variable,46,math/mathcore/inc/Math/MinimTransformVariable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformVariable.h,2,['variab'],"['variable', 'variables']"
Modifiability,/**; Fill the fit result from a Minimizer instance after fitting; Run also Minos if requested from the configuration; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h:103,config,configuration,103,math/mathcore/inc/Fit/FitResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h,1,['config'],['configuration']
Modifiability,/**; Fill the passed array with the Hessian matrix elements; The Hessian matrix is the matrix of the second derivatives; and is the inverse of the covariance matrix; If the variable is fixed or const the values for that variables are zero.; The array will be filled as h[i *ndim + j]; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx:173,variab,variable,173,math/mathcore/src/Minimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx,6,['variab'],"['variable', 'variables']"
Modifiability,/**; Fill the passed array with the covariance matrix elements; if the variable is fixed or const the value is zero.; The array will be filled as cov[i *ndim + j]; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx:71,variab,variable,71,math/mathcore/src/Minimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx,12,['variab'],"['variable', 'variables']"
Modifiability,/**; Free functions adapter needed by UNURAN for multidimensional cont distribution; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/UnuranDistrAdapter.h:20,adapt,adapter,20,math/unuran/src/UnuranDistrAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/UnuranDistrAdapter.h,1,['adapt'],['adapter']
Modifiability,/**; Free functions adapter needed by UNURAN for one-dimensional discrete distribution; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/UnuranDistrAdapter.h:20,adapt,adapter,20,math/unuran/src/UnuranDistrAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/UnuranDistrAdapter.h,1,['adapt'],['adapter']
Modifiability,/**; Free functions adapter needed by UNURAN for onedimensional continuous distributions; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/UnuranDistrAdapter.h:20,adapt,adapter,20,math/unuran/src/UnuranDistrAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/src/UnuranDistrAdapter.h,1,['adapt'],['adapter']
Modifiability,"/**; Generate a binned data set.; A range must have been set before (otherwise inf is returned); and the bins are equidistant in the previously defined range; bin center values must be present in given data set; If the sampler is implemented by a random one, the entries; will be binned according to the Poisson distribution; It is assumed the distribution is normalized, otherwise the nevt must be scaled; accordingly. The expected value/bin nexp = f(x_i) * binArea/ nevt; Extend control if use a fixed (i.e. multinomial statistics) or floating total number of events; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/DistSampler.h:474,Extend,Extend,474,math/mathcore/inc/Math/DistSampler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/DistSampler.h,1,['Extend'],['Extend']
Modifiability,"/**; Introduction. LZ4 is lossless compression algorithm, providing compression speed >500 MB/s per core,; scalable with multi-cores CPU. It features an extremely fast decoder, with speed in; multiple GB/s per core, typically reaching RAM speed limits on multi-core systems. The LZ4 compression library provides in-memory compression and decompression functions.; It gives full buffer control to user.; Compression can be done in:; - a single step (described as Simple Functions); - a single step, reusing a context (described in Advanced Functions); - unbounded multiple steps (described as Streaming compression). lz4.h generates and decodes LZ4-compressed blocks (doc/lz4_Block_format.md).; Decompressing such a compressed block requires additional metadata.; Exact metadata depends on exact decompression function.; For the typical case of LZ4_decompress_safe(),; metadata includes block's compressed size, and maximum bound of decompressed size.; Each application is free to encode and pass such metadata in whichever way it wants. lz4.h only handle blocks, it can not generate Frames. Blocks are different from Frames (doc/lz4_Frame_format.md).; Frames bundle both blocks and metadata in a specified manner.; Embedding metadata is required for compressed data to be self-contained and portable.; Frame format is delivered through a companion API, declared in lz4frame.h.; The `lz4` CLI can only manage frames.; */; /*^***************************************************************; * Export parameters; *****************************************************************/; /*; * LZ4_DLL_EXPORT :; * Enable exporting of functions when building a Windows DLL; * LZ4LIB_VISIBILITY :; * Control library symbols visibility.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h:1291,portab,portable,1291,builtins/lz4/lz4.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/lz4/lz4.h,1,['portab'],['portable']
Modifiability,/**; Method to assign TRDataFrame in R's environment; \param df TRDataFrame; \param name name of the variable in R's environment; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:101,variab,variable,101,bindings/r/inc/TRInterface.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h,1,['variab'],['variable']
Modifiability,/**; Method to assign TRFunctionExport in R's environment; \param fun TRFunctionExport; \param name name of the variable in R's environment; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:112,variab,variable,112,bindings/r/inc/TRInterface.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h,1,['variab'],['variable']
Modifiability,/**; MinimTransformFunction class to perform a transformations on the; variables to deal with fixed or limited variables (support both double and single bounds); The class manages the passed function pointer. @ingroup MultiMin; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformFunction.h:71,variab,variables,71,math/mathcore/inc/Math/MinimTransformFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformFunction.h,2,['variab'],['variables']
Modifiability,"/**; MinimTransformVariable class; Contains meta information of the variables such as bounds, fix flags and; deals with transformation of the variable; The class does not contain the values and the step size (error) of the variable; This is an internal class used by the MinimTransformFunction class. @ingroup MultiMin; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformVariable.h:68,variab,variables,68,math/mathcore/inc/Math/MinimTransformVariable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimTransformVariable.h,3,['variab'],"['variable', 'variables']"
Modifiability,/**; MultiDimParamFunctionAdapter class to wrap a one-dimensional parametric function in; a multi dimensional parametric function interface; This is used typically in fitting where internally the function is stored as multidimensional. To wrap a non-parametric one-dim function in a multi-dim interface one can use simply a; ROOT::Math::WrappedFunction<ROOT::Math::IGenFunction> or ROOT::Math::Functor; and ROOT::Math::GradFunctor for gradient functions. This class differs from WrappedParamFunction in the fact that the parameters are not stored in; the adapter class and optionally it keeps a cloned and managed copy of the adapter class. @ingroup ParamFunc. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h:555,adapt,adapter,555,math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h,2,['adapt'],['adapter']
Modifiability,/**; MultiDimParamGradFunctionAdapter class to wrap a one-dimensional parametric gradient function in; a multi dimensional parametric gradient function interface; This is used typically in fitting where internally the function is stored as multidimensional. To wrap a non-parametric one-dim gradient function in a multi-dim interface one can use simply a; a ROOT::Math::GradFunctor. The parameters are not stored in the adapter class and by default the pointer to the 1D function is owned.; This means that deleting the class deletes also the 1D function and copying the class copies also the; 1D function; This class differs from WrappedParamFunction in the fact that the parameters are not stored in; the adapter class and optionally it keeps a cloned and managed copy of the adapter class. @ingroup ParamFunc. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h:420,adapt,adapter,420,math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MultiDimParamFunctionAdapter.h,3,['adapt'],['adapter']
Modifiability,/**; Pre-processor macro to report messages; which can be configured to use ROOT error or; simply an std::iostream in case of stan-alone builds; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Error.h:58,config,configured,58,math/mathcore/inc/Math/Error.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Error.h,1,['config'],['configured']
Modifiability,/**; Return an information string about the used Unuran generator method.; @param extended : if true return some helper information about the existing options of the method.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h:82,extend,extended,82,math/unuran/inc/TUnuran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/unuran/inc/TUnuran.h,1,['extend'],['extended']
Modifiability,/**; Set integration function from a multi-dim function type.; Can be used in case of having 1D function implementing the generic interface; @param f integration function; @param icoord index of coordinate on which the integration is performed; @param x array of the passed variables values. In case of dim=1 a 0 can be passed; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:274,variab,variables,274,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,1,['variab'],['variables']
Modifiability,/**; Sin Transformation class for dealing with double bounded variables. @ingroup MultiMin; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimizerVariableTransformation.h:62,variab,variables,62,math/mathcore/inc/Math/MinimizerVariableTransformation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimizerVariableTransformation.h,1,['variab'],['variables']
Modifiability,/**; Sqrt Transformation class for dealing with lower bounded variables. @ingroup MultiMin; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimizerVariableTransformation.h:62,variab,variables,62,math/mathcore/inc/Math/MinimizerVariableTransformation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimizerVariableTransformation.h,1,['variab'],['variables']
Modifiability,/**; Sqrt Transformation class for dealing with upper bounded variables. @ingroup MultiMin; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimizerVariableTransformation.h:62,variab,variables,62,math/mathcore/inc/Math/MinimizerVariableTransformation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/MinimizerVariableTransformation.h,1,['variab'],['variables']
Modifiability,"/**; Template Constructor of one dimensional Integrator passing a generic function object. @param f integration function (any C++ callable object implementing operator()(double x); @param type integration type (adaptive, non-adaptive, etc..); @param absTol desired absolute tolerance. The algorithm will stop when either the absolute OR the relative tolerance are satisfied.; @param relTol desired relative tolerance; @param size maximum number of sub-intervals; @param rule Gauss-Kronrod integration rule (only for GSL ADAPTIVE type). NOTE: When no values are passed, the values used are taken from the default defined in ROOT::Math::IntegratorOneDimOptions. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h:211,adapt,adaptive,211,math/mathcore/inc/Math/Integrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Integrator.h,3,"['ADAPT', 'adapt']","['ADAPTIVE', 'adaptive']"
Modifiability,/**; Template method to assign C++ variables into R environment; \param var any R wrappable datatype; \param name name of the variable in R's environment; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h:35,variab,variables,35,bindings/r/inc/TRInterface.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRInterface.h,2,['variab'],"['variable', 'variables']"
Modifiability,/**; Un-binned Likelihood fit copying the input data; Default is NOT extended; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:69,extend,extended,69,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['extend'],['extended']
Modifiability,/**; Un-binned Likelihood fit using a `shared_ptr` for NOT copying the input data.; Default is NOT extended; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:99,extend,extended,99,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['extend'],['extended']
Modifiability,/**; Update of the covariance matrix for the Variable Metric minimizer (MIGRAD); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/BFGSErrorUpdator.h:45,Variab,Variable,45,math/minuit2/inc/Minuit2/BFGSErrorUpdator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/BFGSErrorUpdator.h,2,['Variab'],['Variable']
Modifiability,/**; Update the fit result with a new minimization status; To be run only if same fit is performed with same configuration; Note that in this case MINOS is not re-run. If one wants to run also MINOS; a new result must be created; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h:109,config,configuration,109,math/mathcore/inc/Fit/FitResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitResult.h,1,['config'],['configuration']
Modifiability,"/**; WrappedParamGenFunction class to wrap any multi-dimensional function; implementing the operator()(const double * ); in an interface-like IParamFunction, by fixing some of the variables and define them as; parameters.; i.e. transform any multi-dim function in a parametric function. @ingroup ParamFunc. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedParamFunction.h:180,variab,variables,180,math/mathcore/inc/Math/WrappedParamFunction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/WrappedParamFunction.h,1,['variab'],['variables']
Modifiability,/**; Wrapper class to the gsl_function C structure.; This class to fill the GSL C structure gsl_function with; the C++ function objcet.; Use the class ROOT::Math::GSLFunctionAdapter to adapt the; C++ function object to the right signature (function pointer type); requested by GSL; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLFunctionWrapper.h:185,adapt,adapt,185,math/mathmore/src/GSLFunctionWrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLFunctionWrapper.h,1,['adapt'],['adapt']
Modifiability,"/**; \class RAxisConfig; Objects used to configure the different axis types. It can store the; properties of all ROOT-provided axis types, together with the type of the axis. TODO: that's what a variant will be invented for!; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxisConfig.hxx:41,config,configure,41,hist/histv7/inc/ROOT/RAxisConfig.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RAxisConfig.hxx,1,['config'],['configure']
Modifiability,"/**; \class RHistImplBase; Interface class for `RHistImpl`. `RHistImpl` is templated for a specific configuration of axes. To enable access; through `RHist`, `RHistImpl` inherits from `RHistImplBase`, exposing only dimension; (`DIMENSION`) and bin type (`PRECISION`).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:100,config,configuration,100,hist/histv7/inc/ROOT/RHistImpl.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx,2,"['config', 'inherit']","['configuration', 'inherits']"
Modifiability,"/**; \class RHistImplPrecisionAgnosticBase; Base class for `RHistImplBase` that abstracts out the histogram's `PRECISION`. For operations such as painting a histogram, the `PRECISION` (type of the bin; content) is not relevant; painting will cast the underlying bin type to double.; To facilitate this, `RHistImplBase` itself inherits from the; `RHistImplPrecisionAgnosticBase` interface.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx:326,inherit,inherits,326,hist/histv7/inc/ROOT/RHistImpl.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistImpl.hxx,1,['inherit'],['inherits']
Modifiability,"/**; \class RooTemplateProxy; \ingroup Roofitcore. ## Introduction; A RooTemplateProxy is used to hold references to other RooFit objects in an expression tree.; A `RooGaussian(..., x, mean, sigma)` can e.g. store references to `x, mean, sigma` as; ```; RooTemplateProxy<RooAbsReal> _x;; RooTemplateProxy<RooAbsReal> _mean;; RooTemplateProxy<RooAbsReal> _sigma;; ```; Now, the values of these three can be accessed, and the template argument ensures that only objects that evaluate; to real numbers (RooAbsReal) can be stored in such a proxy. These can e.g. be variables, PDFs and functions.; To store an object that's a `RooCategory`, one would, for example, use; ```; RooTemplateProxy<RooCategory> _category;; ```. Since %ROOT 6.22, the proxy can be used like a pointer to an instance of the template argument.; For this, it provides `operator*` and `operator->`, e.g.; ```; double oldValue = _x->getVal(normalisationSet);; *_x = 17.;; ```. RooTemplateProxy's base class RooArgProxy registers the proxied objects as ""servers"" of the object; that holds the proxy. When the value of the proxied object is changed, the owner is; notified, and can recalculate its own value. Renaming or exchanging objects that; serve values to the owner of the proxy is handled automatically. ## Modernisation of proxies in ROOT 6.22; In ROOT 6.22, the classes RooRealProxy and RooCategoryProxy were replaced by RooTemplateProxy<class T>. Two typedefs have been defined for backward compatibility:; - `RooRealProxy = RooTemplateProxy<RooAbsReal>`. Any generic object that converts to a real value.; - `RooCategoryProxy = RooTemplateProxy<RooAbsCategory>`. Any category object. To modernise a class, one can change the template argument of the proxy to the most appropriate type,; and increment the class version of the owner. <table>; <tr><th> %RooFit before %ROOT 6.22 <th> %RooFit starting with %ROOT 6.22; <tr><td>; ~~~{.cpp}; // In .h: Declare member; RooRealProxy pdfProxy;. ClassDefOverride(MyPdf, 1); };. // In .",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooTemplateProxy.h:561,variab,variables,561,roofit/roofitcore/inc/RooTemplateProxy.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooTemplateProxy.h,1,['variab'],['variables']
Modifiability,"/**; \class TRDataFrame. This is a class to create DataFrames from ROOT to R; <center><h2>TRDataFrame class</h2></center>. DataFrame is a very important datatype in R and in ROOTR we have a class to manipulate<br>; dataframes called TRDataFrame, with a lot of very useful operators overloaded to work with TRDataFrame's objects<br>; in a similar way that in the R environment but from c++ in ROOT.<br>; Example:<br>; <br>; Lets to create need data to play with dataframe features<br>. <h2>Creating variables</h2><br>; \code{.cpp}; TVectorD v1(3);; std::vector<Double_t> v2(3);; std::array<Int_t,3> v3{ {1,2,3} };; std::list<std::string> names;; \endcode. <h2> Assigning values </h2><br>; \code{.cpp}; v1[0]=1;; v1[1]=2;; v1[2]=3;. v2[0]=0.101;; v2[1]=0.202;; v2[2]=0.303;. names.push_back(""v1"");; names.push_back(""v2"");; names.push_back(""v3"");. ROOT::R::TRInterface &r=ROOT::R::TRInterface::Instance();; \endcode. In R the dataframe have associate to every column a label,; in ROOTR you can have the same label using the class ROOT::R::Label to create a TRDataFrame where you data; have a label associate.; <h2> Creating dataframe object with its labels</h2> <br>; \code{.cpp}; using namespace ROOT::R;; TRDataFrame df1(Label[""var1""]=v1,Label[""var2""]=v2,Label[""var3""]=v3,Label[""strings""]=names);; \endcode. <h2>Passing dataframe to R's environment</h2><br>; \code{.cpp}; r[""df1""]<<df1;; r<<""print(df1)"";; \endcode; Output; \code; var1 var2 var3 strings; 1 1 0.101 1 v1; 2 2 0.202 2 v2; 3 3 0.303 3 v3; \endcode. Manipulating data between dataframes; <h2>Adding colunms to dataframe</h2><br>; \code{.cpp}; TVectorD v4(3);; //filling the vector fro R's environment; r[""c(-1,-2,-3)""]>>v4;; //adding new colunm to df1 with name var4; df1[""var4""]=v4;; //updating df1 in R's environment; r[""df1""]<<df1;; //printing df1; r<<""print(df1)"";; \endcode. Output; var1 var2 var3 strings var4; 1 1 0.101 1 v1 -1; 2 2 0.202 2 v2 -2; 3 3 0.303 3 v3 -3. <h2>Getting dataframe from R's environment</h2><br>; \code{.cpp};",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRDataFrame.h:498,variab,variables,498,bindings/r/inc/TRDataFrame.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/r/inc/TRDataFrame.h,1,['variab'],['variables']
Modifiability,/**; access to the configuration (non const method); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:19,config,configuration,19,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['config'],['configuration']
Modifiability,/**; access to the fit configuration (const method); */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:23,config,configuration,23,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['config'],['configuration']
Modifiability,/**; calculate the distance (metric) between this one and another configuration; Presently a cartesian metric is used.; re-implement by derived classes if needed to be modified; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLSimAnnealing.h:66,config,configuration,66,math/mathmore/inc/Math/GSLSimAnnealing.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLSimAnnealing.h,1,['config'],['configuration']
Modifiability,"/**; class describing the simplex set of points (f(x), x ) which evolve during the minimization; iteration process.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/SimplexParameters.h:65,evolve,evolve,65,math/minuit2/inc/Minuit2/SimplexParameters.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/SimplexParameters.h,1,['evolve'],['evolve']
Modifiability,/**; create a new minimizer according to chosen configuration; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h:48,config,configuration,48,math/mathcore/inc/Fit/FitConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitConfig.h,1,['config'],['configuration']
Modifiability,/**; fit a data set using any generic model function; If data set is binned a least square fit is performed; If data set is unbinned a maximum likelihood fit (not extended) is done; Pre-requisite on the function:; it must implement the 1D or multidimensional parametric function interface.; Note that both the input data and the function object are copied by the Fitter.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h:163,extend,extended,163,math/mathcore/inc/Fit/Fitter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/Fitter.h,1,['extend'],['extended']
Modifiability,/**; generic constructor for GSL Integrator. @param type type of integration. The possible types are defined in the Integration::Type enumeration; @param rule Gauss-Kronrod rule. It is used only for ADAPTIVE::Integration types. The possible rules are defined in the Integration::GKRule enumeration; @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:199,ADAPT,ADAPTIVE,199,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,1,['ADAPT'],['ADAPTIVE']
Modifiability,/**; get global correlation coefficient for the variable i. This is a number between zero and one which gives; the correlation between the i-th variable and that linear combination of all other variables which; is most strongly correlated with i.; If the variable is fixed or const the return value is zero; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h:48,variab,variable,48,math/minuit2/inc/Minuit2/Minuit2Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h,4,['variab'],"['variable', 'variables']"
Modifiability,"/**; minos error for variable i, return false if Minos failed or not supported; and the lower and upper errors are returned in errLow and errUp; An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx:21,variab,variable,21,math/mathcore/src/Minimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx,1,['variab'],['variable']
Modifiability,/**; return correlation coefficient between variable i and j.; If the variable is fixed or const the return value is zero; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h:44,variab,variable,44,math/mathcore/inc/Math/Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/Minimizer.h,4,['variab'],['variable']
Modifiability,/**; return covariance matrix elements; if the variable is fixed or const the value is zero; The ordering of the variables is the same as in errors and parameter value.; This is different from the direct interface of Minuit2 or TMinuit where the; values were obtained only to variable parameters; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h:47,variab,variable,47,math/minuit2/inc/Minuit2/Minuit2Minimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/Minuit2Minimizer.h,3,['variab'],"['variable', 'variables']"
Modifiability,/**; return global correlation coefficient for variable i; This is a number between zero and one which gives; the correlation between the i-th parameter and that linear combination of all; other parameters which is most strongly correlated with i.; Minimizer must overload method if implemented; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx:47,variab,variable,47,math/mathcore/src/Minimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx,1,['variab'],['variable']
Modifiability,"/**; return number of function variable (parameters) , i.e. function dimension; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliFCNBase.h:31,variab,variable,31,math/minuit2/inc/Minuit2/FumiliFCNBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit2/inc/Minuit2/FumiliFCNBase.h,1,['variab'],['variable']
Modifiability,/**; scan function minimum for variable i. Variable and function must be set before using Scan; Return false if an error or if minimizer does not support this functionality; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx:31,variab,variable,31,math/mathcore/src/Minimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/Minimizer.cxx,2,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,/**; set the integration rule (Gauss-Kronrod rule).; The possible rules are defined in the Integration::GKRule enumeration.; The integration rule can be modified only for ADAPTIVE type integrations; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h:171,ADAPT,ADAPTIVE,171,math/mathmore/inc/Math/GSLIntegrator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLIntegrator.h,1,['ADAPT'],['ADAPTIVE']
Modifiability,"/**<; Let's now decompose FSE_decompress_usingDTable() into its unitary components.; You will decode FSE-encoded symbols from the bitStream,; and also any other bitFields you put in, **in reverse order**. You will need a few variables to track your bitStream. They are :. BIT_DStream_t DStream; // Stream context; FSE_DState_t DState; // State context. Multiple ones are possible; FSE_DTable* DTablePtr; // Decoding table, provided by FSE_buildDTable(). The first thing to do is to init the bitStream.; errorCode = BIT_initDStream(&DStream, srcBuffer, srcSize);. You should then retrieve your initial state(s); (in reverse flushing order if you have several ones) :; errorCode = FSE_initDState(&DState, &DStream, DTablePtr);. You can then decode your data, symbol after symbol.; For information the maximum number of bits read by FSE_decodeSymbol() is 'tableLog'.; Keep in mind that symbols are decoded in reverse order, like a LIFO stack (last in, first out).; unsigned char symbol = FSE_decodeSymbol(&DState, &DStream);. You can retrieve any bitfield you eventually stored into the bitStream (in reverse order); Note : maximum allowed nbBits is 25, for 32-bits compatibility; size_t bitField = BIT_readBits(&DStream, nbBits);. All above operations only read from local register (which size depends on size_t).; Refueling the register from memory is manually performed by the reload method.; endSignal = FSE_reloadDStream(&DStream);. BIT_reloadDStream() result tells if there is still some more data to read from DStream.; BIT_DStream_unfinished : there is still some data left into the DStream.; BIT_DStream_endOfBuffer : Dstream reached end of buffer. Its container may no longer be completely filled.; BIT_DStream_completed : Dstream reached its exact end, corresponding in general to decompression completed.; BIT_DStream_tooFar : Dstream went too far. Decompression result is corrupted. When reaching end of buffer (BIT_DStream_endOfBuffer), progress slowly, notably if you decode multiple symbo",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:225,variab,variables,225,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['variab'],['variables']
Modifiability,"/**<; These functions are inner components of FSE_compress_usingCTable().; They allow the creation of custom streams, mixing multiple tables and bit sources. A key property to keep in mind is that encoding and decoding are done **in reverse direction**.; So the first symbol you will encode is the last you will decode, like a LIFO stack. You will need a few variables to track your CStream. They are :. FSE_CTable ct; // Provided by FSE_buildCTable(); BIT_CStream_t bitStream; // bitStream tracking structure; FSE_CState_t state; // State tracking structure (can have several). The first thing to do is to init bitStream and state.; size_t errorCode = BIT_initCStream(&bitStream, dstBuffer, maxDstSize);; FSE_initCState(&state, ct);. Note that BIT_initCStream() can produce an error code, so its result should be tested, using FSE_isError();; You can then encode your input data, byte after byte.; FSE_encodeSymbol() outputs a maximum of 'tableLog' bits at a time.; Remember decoding will be done in reverse direction.; FSE_encodeByte(&bitStream, &state, symbol);. At any time, you can also add any bit sequence.; Note : maximum allowed nbBits is 25, for compatibility with 32-bits decoders; BIT_addBits(&bitStream, bitField, nbBits);. The above methods don't commit data to memory, they just store it into local register, for speed.; Local register size is 64-bits on 64-bits systems, 32-bits on 32-bits systems (size_t).; Writing data to memory is a manual operation, performed by the flushBits function.; BIT_flushBits(&bitStream);. Your last FSE encoding operation shall be to flush your last state value(s).; FSE_flushState(&bitStream, &state);. Finally, you must close the bitStream.; The function returns the size of CStream in bytes.; If data couldn't fit into dstBuffer, it will return a 0 ( == not compressible); If there is an error, it returns an errorCode (which can be tested using FSE_isError()).; size_t size = BIT_closeCStream(&bitStream);; */; /* ***********************************",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h:359,variab,variables,359,builtins/zstd/common/fse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/fse.h,1,['variab'],['variables']
Modifiability,"/*-**********************************************************************; * XXH3 64-bit variant; ************************************************************************/; /* ************************************************************************; * XXH3 is a new hash algorithm featuring:; * - Improved speed for both small and large inputs; * - True 64-bit and 128-bit outputs; * - SIMD acceleration; * - Improved 32-bit viability; *; * Speed analysis methodology is explained here:; *; * https://fastcompression.blogspot.com/2019/03/presenting-xxh3.html; *; * In general, expect XXH3 to run about ~2x faster on large inputs and >3x; * faster on small ones compared to XXH64, though exact differences depend on; * the platform.; *; * The algorithm is portable: Like XXH32 and XXH64, it generates the same hash; * on all platforms.; *; * It benefits greatly from SIMD and 64-bit arithmetic, but does not require it.; *; * Almost all 32-bit and 64-bit targets that can run XXH32 smoothly can run; * XXH3 at competitive speeds, even if XXH64 runs slowly. Further details are; * explained in the implementation.; *; * Optimized implementations are provided for AVX512, AVX2, SSE2, NEON, POWER8,; * ZVector and scalar targets. This can be controlled with the XXH_VECTOR macro.; *; * XXH3 offers 2 variants, _64bits and _128bits.; * When only 64 bits are needed, prefer calling the _64bits variant, as it; * reduces the amount of mixing, resulting in faster speed on small inputs.; *; * It's also generally simpler to manipulate a scalar return type than a struct.; *; * The 128-bit version adds additional strength, but it is slightly slower.; *; * The XXH3 algorithm is still in development.; * The results it produces may still change in future versions.; *; * Results produced by v0.7.x are not comparable with results from v0.7.y.; * However, the API is completely stable, and it can safely be used for; * ephemeral data (local sessions).; *; * Avoid storing values in long-term storage until the a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:755,portab,portable,755,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['portab'],['portable']
Modifiability,"/*-**************************************************************; * Memory I/O Implementation; *****************************************************************/; /* MEM_FORCE_MEMORY_ACCESS :; * By default, access to unaligned memory is controlled by `memcpy()`, which is safe and portable.; * Unfortunately, on some target/compiler combinations, the generated assembly is sub-optimal.; * The below switch allow to select different access method for improved performance.; * Method 0 (default) : use `memcpy()`. Safe and portable.; * Method 1 : `__packed` statement. It depends on compiler extension (i.e., not portable).; * This method is safe if your compiler supports it, and *generally* as fast or faster than `memcpy`.; * Method 2 : direct access. This method is portable but violate C standard.; * It can generate buggy code on targets depending on alignment.; * In some circumstances, it's the only known way to get the most performance (i.e. GCC + ARMv6); * See http://fastcompression.blogspot.fr/2015/08/accessing-unaligned-memory.html for details.; * Prefer these methods in priority order (0 > 1 > 2); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/mem.h:282,portab,portable,282,builtins/zstd/common/mem.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/common/mem.h,4,['portab'],['portable']
Modifiability,/*-------------------------------------------------------------------------*/; /* UTILITIES FOR C TO CALL FORTRAN SUBROUTINES */; /* Define lookup tables for how to handle the various types of variables. */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:193,variab,variables,193,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['variab'],['variables']
Modifiability,/*--.. Operations on global variables ......................................--*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Core.cpp:28,variab,variables,28,interpreter/llvm-project/llvm/lib/IR/Core.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Core.cpp,1,['variab'],['variables']
Modifiability,"/*--.. Operations on global variables, functions, and aliases (globals) ....--*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Core.cpp:28,variab,variables,28,interpreter/llvm-project/llvm/lib/IR/Core.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Core.cpp,1,['variab'],['variables']
Modifiability,"/*--.. Operations on global variables, load and store instructions .........--*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Core.cpp:28,variab,variables,28,interpreter/llvm-project/llvm/lib/IR/Core.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Core.cpp,1,['variab'],['variables']
Modifiability,"/*. if (fParent && !fParent->mk()) {; throw std::runtime_error(""mk failure"");; }. if (fComp) return *this;. if (o.InheritsFrom(""RooAbsArg"")) {; fComp = acquire(std::shared_ptr<TObject>(const_cast<TObject*>(&o),[](TObject* o){}));; std::dynamic_pointer_cast<RooAbsArg>(fComp)->setStringAttribute(""alias"",GetName());; }. if (fComp && fParent) {; fParent->incorporate(fComp);; }. return *this;; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooNode.cxx:114,Inherit,InheritsFrom,114,roofit/xroofit/src/xRooNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooNode.cxx,1,['Inherit'],['InheritsFrom']
Modifiability,"/*; * $Header$; * $Log$; *; * Various routines, and global variables; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSVarious.cxx:59,variab,variables,59,test/periodic/XSVarious.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSVarious.cxx,2,['variab'],['variables']
Modifiability,"/*; * $XConsortium: ifparser.c /main/10 1996/09/28 16:15:18 rws $; * $XFree86: xc/config/makedepend/ifparser.c,v 3.6 1996/12/30 13:57:55 dawes Exp $; *; * Copyright 1992 Network Computing Devices, Inc.; *; * Permission to use, copy, modify, and distribute this software and its; * documentation for any purpose and without fee is hereby granted, provided; * that the above copyright notice appear in all copies and that both that; * copyright notice and this permission notice appear in supporting; * documentation, and that the name of Network Computing Devices may not be; * used in advertising or publicity pertaining to distribution of the software; * without specific, written prior permission. Network Computing Devices makes; * no representations about the suitability of this software for any purpose.; * It is provided ``as is'' without express or implied warranty.; *; * NETWORK COMPUTING DEVICES DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS; * SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS,; * IN NO EVENT SHALL NETWORK COMPUTING DEVICES BE LIABLE FOR ANY SPECIAL,; * INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM; * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE; * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR; * PERFORMANCE OF THIS SOFTWARE.; *; * Author: Jim Fulton; * Network Computing Devices, Inc.; *; * Simple if statement processor; *; * This module can be used to evaluate string representations of C language; * if constructs. It accepts the following grammar:; *; * EXPRESSION := VALUE; * | VALUE BINOP EXPRESSION; * | VALUE '?' EXPRESSION ':' EXPRESSION; *; * VALUE := '(' EXPRESSION ')'; * | '!' VALUE; * | '-' VALUE; * | '~' VALUE; * | 'defined' '(' variable ')'; * | 'defined' variable; * | # variable '(' variable-list ')'; * | variable; * | number; *; * BINOP := '*' | '/' | '%'; * | '+' | '-'; * | '<<' | '>>'; * | '<' | '>' | '<=' | '>='; * | '==' | '!='; ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/ifparser.c:82,config,config,82,misc/rmkdepend/ifparser.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/ifparser.c,1,['config'],['config']
Modifiability,"/*; * About virtual array management:; *; * The above ""normal"" array routines are only used to allocate strip buffers; * (as wide as the image, but just a few rows high). Full-image-sized buffers; * are handled as ""virtual"" arrays. The array is still accessed a strip at a; * time, but the memory manager must save the whole array for repeated; * accesses. The intended implementation is that there is a strip buffer in; * memory (as high as is possible given the desired memory limit), plus a; * backing file that holds the rest of the array.; *; * The request_virt_array routines are told the total size of the image and; * the maximum number of rows that will be accessed at once. The in-memory; * buffer must be at least as large as the maxaccess value.; *; * The request routines create control blocks but not the in-memory buffers.; * That is postponed until realize_virt_arrays is called. At that time the; * total amount of space needed is known (approximately, anyway), so free; * memory can be divided up fairly.; *; * The access_virt_array routines are responsible for making a specific strip; * area accessible (after reading or writing the backing file, if necessary).; * Note that the access routines are told whether the caller intends to modify; * the accessed strip; during a read-only pass this saves having to rewrite; * data to disk. The access routines are also responsible for pre-zeroing; * any newly accessed rows, if pre-zeroing was requested.; *; * In current usage, the access requests are usually for nonoverlapping; * strips; that is, successive access start_row numbers differ by exactly; * num_rows = maxaccess. This means we can get good performance with simple; * buffer dump/reload logic, by making the in-memory buffer be a multiple; * of the access height; then there will never be accesses across bufferload; * boundaries. The code will still work with overlapping access requests,; * but it doesn't handle bufferload overlaps very efficiently.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:1329,rewrite,rewrite,1329,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,1,['rewrite'],['rewrite']
Modifiability,"/*; * Copyright (C) 1999-2001, 2005 Free Software Foundation, Inc.; * This file is part of the GNU LIBICONV Library.; *; * The GNU LIBICONV Library is free software; you can redistribute it; * and/or modify it under the terms of the GNU Library General Public; * License as published by the Free Software Foundation; either version 2; * of the License, or (at your option) any later version.; *; * The GNU LIBICONV Library is distributed in the hope that it will be; * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Library General Public License for more details.; *; * You should have received a copy of the GNU Library General Public; * License along with the GNU LIBICONV Library; see the file COPYING.LIB.; * If not, write to the Free Software Foundation, Inc., 51 Franklin Street,; * Fifth Floor, Boston, MA 02110-1301, USA.; */; /*; * BIG5-2003; */; /*; * BIG5-2003 is a slightly extended and slightly modified version of BIG5.; * It is actually nearer to Microsoft CP950 than to BIG5. The differences; * between EASTASIA/OTHER/BIG5.TXT found on ftp.unicode.org and BIG5-2003.TXT; * are as follows:; *; * 1. Some characters in the symbols area (0xA140..0xA2CE) are defined; * differently:; *; * code BIG5.TXT BIG5-2003.TXT; * 0xA145 0x2022 # BULLET 0x2027 # HYPHENATION POINT; * 0xA14E 0xFF64 # HALFWIDTH IDEOGRAPHIC COMMA; * 0xFE51 # SMALL IDEOGRAPHIC COMMA; * 0xA156 0x2013 # EN DASH 0x2015 # HORIZONTAL BAR; * 0xA15A --- 0x2574 # BOX DRAWINGS LIGHT LEFT; * 0xA1C3 --- 0xFFE3 # FULLWIDTH MACRON; * 0xA1C5 --- 0x02CD # MODIFIER LETTER LOW MACRON; * 0xA1E3 0x223C # TILDE OPERATOR 0xFF5E # FULLWIDTH TILDE; * 0xA1F2 0x2641 # EARTH 0x2295 # CIRCLED PLUS; * 0xA1F3 0x2609 # SUN 0x2299 # CIRCLED DOT OPERATOR; * 0xA1FE --- 0xFF0F # FULLWIDTH SOLIDUS; * 0xA240 --- 0xFF3C # FULLWIDTH REVERSE SOLIDUS; * 0xA241 0xFF0F # FULLWIDTH SOLIDUS 0x2215 # DIVISION SLASH; * 0xA242 0xFF3C # FULLWIDTH REVERSE SOLID",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/big5_2003.h:982,extend,extended,982,graf2d/win32gdk/gdk/src/iconv/big5_2003.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/big5_2003.h,1,['extend'],['extended']
Modifiability,"/*; * Copyright (C) 1999-2001, 2005 Free Software Foundation, Inc.; * This file is part of the GNU LIBICONV Library.; *; * The GNU LIBICONV Library is free software; you can redistribute it; * and/or modify it under the terms of the GNU Library General Public; * License as published by the Free Software Foundation; either version 2; * of the License, or (at your option) any later version.; *; * The GNU LIBICONV Library is distributed in the hope that it will be; * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Library General Public License for more details.; *; * You should have received a copy of the GNU Library General Public; * License along with the GNU LIBICONV Library; see the file COPYING.LIB.; * If not, write to the Free Software Foundation, Inc., 51 Franklin Street,; * Fifth Floor, Boston, MA 02110-1301, USA.; */; /*; * CP950; */; /*; * Microsoft CP950 is a slightly extended and slightly modified version of; * BIG5. The differences between the EASTASIA/OTHER/BIG5.TXT and; * VENDORS/MICSFT/WINDOWS/CP950.TXT tables found on ftp.unicode.org are; * as follows:; *; * 1. Some characters in the BIG5 range are defined differently:; *; * code BIG5.TXT CP950.TXT; * 0xA145 0x2022 # BULLET 0x2027 # HYPHENATION POINT; * 0xA14E 0xFF64 # HALFWIDTH IDEOGRAPHIC COMMA; * 0xFE51 # SMALL IDEOGRAPHIC COMMA; * 0xA15A --- 0x2574 # BOX DRAWINGS LIGHT LEFT; * 0xA1C2 0x203E # OVERLINE 0x00AF # MACRON; * 0xA1C3 --- 0xFFE3 # FULLWIDTH MACRON; * 0xA1C5 --- 0x02CD # MODIFIER LETTER LOW MACRON; * 0xA1E3 0x223C # TILDE OPERATOR 0xFF5E # FULLWIDTH TILDE; * 0xA1F2 0x2641 # EARTH 0x2295 # CIRCLED PLUS; * 0xA1F3 0x2609 # SUN 0x2299 # CIRCLED DOT OPERATOR; * 0xA1FE --- 0xFF0F # FULLWIDTH SOLIDUS; * 0xA240 --- 0xFF3C # FULLWIDTH REVERSE SOLIDUS; * 0xA241 0xFF0F # FULLWIDTH SOLIDUS 0x2215 # DIVISION SLASH; * 0xA242 0xFF3C # FULLWIDTH REVERSE SOLIDUS; * 0xFE68 # SMALL REVERSE SOLIDUS; * 0xA244 0x00A5 # ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/cp950.h:984,extend,extended,984,graf2d/win32gdk/gdk/src/iconv/cp950.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/cp950.h,1,['extend'],['extended']
Modifiability,"/*; * Copyright (C) 1999-2001, 2005, 2007 Free Software Foundation, Inc.; * This file is part of the GNU LIBICONV Library.; *; * The GNU LIBICONV Library is free software; you can redistribute it; * and/or modify it under the terms of the GNU Library General Public; * License as published by the Free Software Foundation; either version 2; * of the License, or (at your option) any later version.; *; * The GNU LIBICONV Library is distributed in the hope that it will be; * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Library General Public License for more details.; *; * You should have received a copy of the GNU Library General Public; * License along with the GNU LIBICONV Library; see the file COPYING.LIB.; * If not, write to the Free Software Foundation, Inc., 51 Franklin Street,; * Fifth Floor, Boston, MA 02110-1301, USA.; */; /*; * CP949 is EUC-KR, extended with UHC (Unified Hangul Code).; *; * Some variants of CP949 (in JDK, Windows-2000, ICU) also add:; *; * 2. Private area mappings:; *; * code Unicode; * 0xC9{A1..FE} U+E000..U+E05D; * 0xFE{A1..FE} U+E05E..U+E0BB; *; * We add them too because, although there are backward compatibility problems; * when a character from a private area is moved to an official Unicode code; * point, they are useful for some people in practice.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/cp949.h:960,extend,extended,960,graf2d/win32gdk/gdk/src/iconv/cp949.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/cp949.h,1,['extend'],['extended']
Modifiability,"/*; * Copyright (C) 1999-2002, 2005 Free Software Foundation, Inc.; * This file is part of the GNU LIBICONV Library.; *; * The GNU LIBICONV Library is free software; you can redistribute it; * and/or modify it under the terms of the GNU Library General Public; * License as published by the Free Software Foundation; either version 2; * of the License, or (at your option) any later version.; *; * The GNU LIBICONV Library is distributed in the hope that it will be; * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Library General Public License for more details.; *; * You should have received a copy of the GNU Library General Public; * License along with the GNU LIBICONV Library; see the file COPYING.LIB.; * If not, write to the Free Software Foundation, Inc., 51 Franklin Street,; * Fifth Floor, Boston, MA 02110-1301, USA.; */; /*; * CP932; */; /*; * Microsoft CP932 is a slightly extended version of SHIFT_JIS.; * The differences between the EASTASIA/JIS/SHIFTJIS.TXT and the; * VENDORS/MICSFT/WINDOWS/CP932.TXT tables found on ftp.unicode.org are; * as follows:; *; * 1. CP932 uses ASCII, not JISX0201 Roman.; *; * 2. Some characters in the JISX0208 range are defined differently:; *; * code SHIFTJIS.TXT CP932.TXT; * 0x815F 0x005C # REVERSE SOLIDUS 0xFF3C # FULLWIDTH REVERSE SOLIDUS; * 0x8160 0x301C # WAVE DASH 0xFF5E # FULLWIDTH TILDE; * 0x8161 0x2016 # DOUBLE VERTICAL LINE 0x2225 # PARALLEL TO; * 0x817C 0x2212 # MINUS SIGN 0xFF0D # FULLWIDTH HYPHEN-MINUS; * 0x8191 0x00A2 # CENT SIGN 0xFFE0 # FULLWIDTH CENT SIGN; * 0x8192 0x00A3 # POUND SIGN 0xFFE1 # FULLWIDTH POUND SIGN; * 0x81CA 0x00AC # NOT SIGN 0xFFE2 # FULLWIDTH NOT SIGN; *; * We don't implement the latter 6 of these changes, only the first one.; * SHIFTJIS.TXT makes more sense. However, as a compromise with user; * expectation, we implement the middle 5 of these changes in the; * Unicode to CP932 direction. We don't implement",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/cp932.h:984,extend,extended,984,graf2d/win32gdk/gdk/src/iconv/cp932.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/cp932.h,1,['extend'],['extended']
Modifiability,"/*; * Copyright (C) 1999-2002, 2006 Free Software Foundation, Inc.; * This file is part of the GNU LIBICONV Library.; *; * The GNU LIBICONV Library is free software; you can redistribute it; * and/or modify it under the terms of the GNU Library General Public; * License as published by the Free Software Foundation; either version 2; * of the License, or (at your option) any later version.; *; * The GNU LIBICONV Library is distributed in the hope that it will be; * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Library General Public License for more details.; *; * You should have received a copy of the GNU Library General Public; * License along with the GNU LIBICONV Library; see the file COPYING.LIB.; * If not, write to the Free Software Foundation, Inc., 51 Franklin Street,; * Fifth Floor, Boston, MA 02110-1301, USA.; */; /*; * BIG5-HKSCS:1999; */; /*; * BIG5-HKSCS:1999 can be downloaded from; * http://www.info.gov.hk/digital21/eng/hkscs/download.html; * http://www.info.gov.hk/digital21/eng/hkscs/index.html; *; * It extends BIG5 (without the rows 0xC6..0xC7) through the ranges; *; * 0x{88..8D}{40..7E,A1..FE} 641 characters; * 0x{8E..A0}{40..7E,A1..FE} 2898 characters; * 0x{C6..C8}{40..7E,A1..FE} 359 characters; * 0xF9{D6..FE} 41 characters; * 0x{FA..FE}{40..7E,A1..FE} 763 characters; *; * Note that some HKSCS characters are not contained in Unicode 3.2; * and are therefore best represented as sequences of Unicode characters:; * 0x8862 U+00CA U+0304 LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND MACRON; * 0x8864 U+00CA U+030C LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND CARON; * 0x88A3 U+00EA U+0304 LATIN SMALL LETTER E WITH CIRCUMFLEX AND MACRON; * 0x88A5 U+00EA U+030C LATIN SMALL LETTER E WITH CIRCUMFLEX AND CARON; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/big5hkscs1999.h:1129,extend,extends,1129,graf2d/win32gdk/gdk/src/iconv/big5hkscs1999.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/big5hkscs1999.h,1,['extend'],['extends']
Modifiability,"/*; * Copyright (C) 1999-2002, 2006 Free Software Foundation, Inc.; * This file is part of the GNU LIBICONV Library.; *; * The GNU LIBICONV Library is free software; you can redistribute it; * and/or modify it under the terms of the GNU Library General Public; * License as published by the Free Software Foundation; either version 2; * of the License, or (at your option) any later version.; *; * The GNU LIBICONV Library is distributed in the hope that it will be; * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Library General Public License for more details.; *; * You should have received a copy of the GNU Library General Public; * License along with the GNU LIBICONV Library; see the file COPYING.LIB.; * If not, write to the Free Software Foundation, Inc., 51 Franklin Street,; * Fifth Floor, Boston, MA 02110-1301, USA.; */; /*; * BIG5-HKSCS:2001; */; /*; * BIG5-HKSCS:2001 can be downloaded from; * http://www.info.gov.hk/digital21/eng/hkscs/download.html; * http://www.info.gov.hk/digital21/eng/hkscs/index.html; *; * It extends BIG5-HKSCS:1999 through 116 characters.; *; * It extends BIG5 (without the rows 0xC6..0xC7) through the ranges; *; * 0x{88..8D}{40..7E,A1..FE} 757 characters; * 0x{8E..A0}{40..7E,A1..FE} 2898 characters; * 0x{C6..C8}{40..7E,A1..FE} 359 characters; * 0xF9{D6..FE} 41 characters; * 0x{FA..FE}{40..7E,A1..FE} 763 characters; *; * Note that some HKSCS characters are not contained in Unicode 3.2; * and are therefore best represented as sequences of Unicode characters:; * 0x8862 U+00CA U+0304 LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND MACRON; * 0x8864 U+00CA U+030C LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND CARON; * 0x88A3 U+00EA U+0304 LATIN SMALL LETTER E WITH CIRCUMFLEX AND MACRON; * 0x88A5 U+00EA U+030C LATIN SMALL LETTER E WITH CIRCUMFLEX AND CARON; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/big5hkscs2001.h:1129,extend,extends,1129,graf2d/win32gdk/gdk/src/iconv/big5hkscs2001.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/big5hkscs2001.h,2,['extend'],['extends']
Modifiability,"/*; * Copyright (C) 1999-2002, 2006 Free Software Foundation, Inc.; * This file is part of the GNU LIBICONV Library.; *; * The GNU LIBICONV Library is free software; you can redistribute it; * and/or modify it under the terms of the GNU Library General Public; * License as published by the Free Software Foundation; either version 2; * of the License, or (at your option) any later version.; *; * The GNU LIBICONV Library is distributed in the hope that it will be; * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; * Library General Public License for more details.; *; * You should have received a copy of the GNU Library General Public; * License along with the GNU LIBICONV Library; see the file COPYING.LIB.; * If not, write to the Free Software Foundation, Inc., 51 Franklin Street,; * Fifth Floor, Boston, MA 02110-1301, USA.; */; /*; * BIG5-HKSCS:2004; */; /*; * BIG5-HKSCS:2004 can be downloaded from; * http://www.info.gov.hk/digital21/eng/hkscs/download.html; * http://www.info.gov.hk/digital21/eng/hkscs/index.html; *; * It extends BIG5-HKSCS:2001 through 123 characters.; *; * It extends BIG5 (without the rows 0xC6..0xC7) through the ranges; *; * 0x{87..8D}{40..7E,A1..FE} 880 characters; * 0x{8E..A0}{40..7E,A1..FE} 2898 characters; * 0x{C6..C8}{40..7E,A1..FE} 359 characters; * 0xF9{D6..FE} 41 characters; * 0x{FA..FE}{40..7E,A1..FE} 763 characters; *; * Note that some HKSCS characters are not contained in Unicode 3.2; * and are therefore best represented as sequences of Unicode characters:; * 0x8862 U+00CA U+0304 LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND MACRON; * 0x8864 U+00CA U+030C LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND CARON; * 0x88A3 U+00EA U+0304 LATIN SMALL LETTER E WITH CIRCUMFLEX AND MACRON; * 0x88A5 U+00EA U+030C LATIN SMALL LETTER E WITH CIRCUMFLEX AND CARON; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/big5hkscs2004.h:1129,extend,extends,1129,graf2d/win32gdk/gdk/src/iconv/big5hkscs2004.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/big5hkscs2004.h,2,['extend'],['extends']
Modifiability,"/*; * Copyright (c) 2016-2020, Yann Collet, Facebook, Inc.; * All rights reserved.; *; * This source code is licensed under both the BSD-style license (found in the; * LICENSE file in the root directory of this source tree) and the GPLv2 (found; * in the COPYING file in the root directory of this source tree).; * You may select, at your option, one of the above-listed licenses.; */; /* *****************************************************************************; * Constructs a dictionary using a heuristic based on the following paper:; *; * Liao, Petri, Moffat, Wirth; * Effective Construction of Relative Lempel-Ziv Dictionaries; * Published in WWW 2016.; *; * Adapted from code originally written by @ot (Giuseppe Ottaviano).; ******************************************************************************/; /*-*************************************; * Dependencies; ***************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c:669,Adapt,Adapted,669,builtins/zstd/dictBuilder/cover.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zstd/dictBuilder/cover.c,1,['Adapt'],['Adapted']
Modifiability,"/*; * Figure F.12: extend sign bit.; * On some machines, a shift and sub will be faster than a table lookup.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:19,extend,extend,19,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,1,['extend'],['extend']
Modifiability,"/*; * GCC/Clang __uint128_t method.; *; * On most 64-bit targets, GCC and Clang define a __uint128_t type.; * This is usually the best way as it usually uses a native long 64-bit; * multiply, such as MULQ on x86_64 or MUL + UMULH on aarch64.; *; * Usually.; *; * Despite being a 32-bit platform, Clang (and emscripten) define this type; * despite not having the arithmetic for it. This results in a laggy; * compiler builtin call which calculates a full 128-bit multiply.; * In that case it is best to use the portable one.; * https://github.com/Cyan4973/xxHash/issues/211#issuecomment-515575677; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:510,portab,portable,510,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['portab'],['portable']
Modifiability,"/*; * If you *really* need a unique prefix for all types and library functions,; * compile with -DZ_PREFIX. The ""standard"" zlib should be compiled without it.; * Even better than compiling with -DZ_PREFIX would be to use configure to set; * this permanently in zconf.h using ""./configure --zprefix"".; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h:221,config,configure,221,builtins/zlib/zconf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/zconf.h,4,['config'],['configure']
Modifiability,"/*; * Init variables and weights; */; // Get variables, classes and target numbers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/MethodPyKeras.cxx:11,variab,variables,11,tmva/pymva/src/MethodPyKeras.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/MethodPyKeras.cxx,4,['variab'],['variables']
Modifiability,"/*; * Links to decompression subobjects (methods, private variables of modules); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h:58,variab,variables,58,graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jpeglib.h,1,['variab'],['variables']
Modifiability,"/*; * Need RHist::iterator for full range, takes a predicate for ""in range?""; * Returns true for RHist; for RHistView, checks range, returns false if not in; * range. i+= 7 then does i++ seven times and checks at each step.; * iterator is simply an int with a predicate functor. end is end of the; * histogram - i.e. the number of bins (incl over / underflow).; *; * Add is then an operation (through a functor) on two bins.; *; * Drawing: need adaptor from RHist<n,p>::GetBinContent(...) to; * RHistPrecNormalizer<n>::Get(i) that casts the bin content to a double. That; * should be in internal but outside the drawing library (that needs to; * communicate through abstract interfaces and can thus not instantiate; * templates with user precision parameters.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistView.hxx:445,adapt,adaptor,445,hist/histv7/inc/ROOT/RHistView.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHistView.hxx,1,['adapt'],['adaptor']
Modifiability,/*; * Portable and safe solution. Generally efficient.; * see: https://stackoverflow.com/a/32095106/646947; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:6,Portab,Portable,6,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,2,['Portab'],['Portable']
Modifiability,/*; * Portable and well-defined behavior.; * Don't use static: it is detrimental to performance.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:6,Portab,Portable,6,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['Portab'],['Portable']
Modifiability,"/*; * Portable scalar method. Optimized for 32-bit and 64-bit ALUs.; *; * This is a fast and simple grade school multiply, which is shown below; * with base 10 arithmetic instead of base 0x100000000.; *; * 9 3 // D2 lhs = 93; * x 7 5 // D2 rhs = 75; * ----------; * 1 5 // D2 lo_lo = (93 % 10) * (75 % 10) = 15; * 4 5 | // D2 hi_lo = (93 / 10) * (75 % 10) = 45; * 2 1 | // D2 lo_hi = (93 % 10) * (75 / 10) = 21; * + 6 3 | | // D2 hi_hi = (93 / 10) * (75 / 10) = 63; * ---------; * 2 7 | // D2 cross = (15 / 10) + (45 % 10) + 21 = 27; * + 6 7 | | // D2 upper = (27 / 10) + (45 / 10) + 63 = 67; * ---------; * 6 9 7 5 // D4 res = (27 * 10) + (15 % 10) + (67 * 100) = 6975; *; * The reasons for adding the products like this are:; * 1. It avoids manual carry tracking. Just like how; * (9 * 9) + 9 + 9 = 99, the same applies with this for UINT64_MAX.; * This avoids a lot of complexity.; *; * 2. It hints for, and on Clang, compiles to, the powerful UMAAL; * instruction available in ARM's Digital Signal Processing extension; * in 32-bit ARMv6 and later, which is shown below:; *; * void UMAAL(xxh_u32 *RdLo, xxh_u32 *RdHi, xxh_u32 Rn, xxh_u32 Rm); * {; * xxh_u64 product = (xxh_u64)*RdLo * (xxh_u64)*RdHi + Rn + Rm;; * *RdLo = (xxh_u32)(product & 0xFFFFFFFF);; * *RdHi = (xxh_u32)(product >> 32);; * }; *; * This instruction was designed for efficient long multiplication, and; * allows this to be calculated in only 4 instructions at speeds; * comparable to some 64-bit ALUs.; *; * 3. It isn't terrible on other platforms. Usually this will be a couple; * of 32-bit ADD/ADCs.; */; /* First calculate all of the cross products. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:6,Portab,Portable,6,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['Portab'],['Portable']
Modifiability,"/*; * Prepare for output to a memory buffer.; * The caller may supply an own initial buffer with appropriate size.; * Otherwise, or when the actual data output exceeds the given size,; * the library adapts the buffer size as necessary.; * The standard library functions malloc/free are used for allocating; * larger memory, so the buffer is available to the application after; * finishing compression, and then the application is responsible for; * freeing the requested memory.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatadst.c:199,adapt,adapts,199,graf2d/asimage/src/libAfterImage/libjpeg/jdatadst.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatadst.c,1,['adapt'],['adapts']
Modifiability,"/*; * Process some data in the first pass of a multi-pass case.; * We process the equivalent of one fully interleaved MCU row (""iMCU"" row); * per call, ie, v_samp_factor block rows for each component in the image.; * This amount of data is read from the source buffer, DCT'd and quantized,; * and saved into the virtual arrays. We also generate suitable dummy blocks; * as needed at the right and lower edges. (The dummy blocks are constructed; * in the virtual arrays, which have been padded appropriately.) This makes; * it possible for subsequent passes not to worry about real vs. dummy blocks.; *; * We must also emit the data to the entropy encoder. This is conveniently; * done by calling compress_output() after we've loaded the current strip; * of the virtual arrays.; *; * NB: input_buf contains a plane for each component in image. All; * components are DCT'd and loaded into the virtual arrays in this pass.; * However, it may be that only a subset of the components are emitted to; * the entropy encoder during this first pass; be careful about looking; * at the scan-dependent variables (MCU dimensions, etc).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jccoefct.c:1091,variab,variables,1091,graf2d/asimage/src/libAfterImage/libjpeg/jccoefct.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jccoefct.c,1,['variab'],['variables']
Modifiability,"/*; * Project: RooFit; * Authors:; * Emmanouil Michalainas, CERN 3 March 2021; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file Batches.h; \class Batch; \class Batches; \ingroup roofit_dev_docs_batchcompute. These classes encapsulate the necessary data for the computations.; They are lightweight objects designed to be passed by value and also flexible,; so that they can contain data for every kind of compute function.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/Batches.h:534,flexible,flexible,534,roofit/batchcompute/src/Batches.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/Batches.h,1,['flexible'],['flexible']
Modifiability,"/*; * Project: RooFit; * Authors:; * Emmanouil Michalainas, CERN, Summer 2019; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file ComputeFunctions.cxx; \ingroup roofit_dev_docs_batchcompute. This file contains vectorizable computation functions for PDFs and other Roofit objects.; The same source file can also be compiled with nvcc. All functions have a single `Batches`; object as an argument passed by value, which contains all the information necessary for the; computation. In case of cuda computations, the loops have a step (stride) the size of the grid; which allows for reusing the same code as the cpu implementations, easier debugging and in terms; of performance, maximum memory coalescing. For more details, see; https://developer.nvidia.com/blog/cuda-pro-tip-write-flexible-kernels-grid-stride-loops/; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/ComputeFunctions.cxx:966,flexible,flexible-kernels-grid-stride-loops,966,roofit/batchcompute/src/ComputeFunctions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/batchcompute/src/ComputeFunctions.cxx,1,['flexible'],['flexible-kernels-grid-stride-loops']
Modifiability,"/*; * Project: RooFit; * Authors:; * Kyle Cranmer,; * Lorenzo Moneta,; * Gregory Schott,; * Wouter Verkerke,; * Sven Kreiss; *; * Copyright (c) 2023, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /** \class RooStats::ModelConfig; \ingroup Roostats. ModelConfig is a simple class that holds configuration information specifying how a model; should be used in the context of various RooStats tools. A single model can be used; in different ways, and this class should carry all that is needed to specify how it should be used.; ModelConfig requires a workspace to be set. A ModelConfig holds sets of parameters of the likelihood function that have different interpretations:; - **Parameter of interest** Parameters that are measured (*i.e.* fitted).; - **Nuisance parameters** Parameters that are fitted, but their post-fit value is not interesting. Often,; they might be constrained because external knowledge about them exists, *e.g.* from external measurements.; - **Constraint parameters** No direct use in RooFit/RooStats. Can be used by the user for bookkeeping.; - **Observables** Parameters that have been measured externally, *i.e.* they exist in a dataset. These are not fitted,; but read during fitting from the entries of a dataset.; - **Conditional observables** Observables that are not integrated when the normalisation of the PDF is calculated.; See *e.g.* `rf306_condpereventerrors` in the RooFit tutorials.; - **Global observables** Observables that to the fit look like ""constant"" values, *i.e.* they are not being; fitted and they are not loaded from a dataset, but some knowledge exists that allows to set them to a; specific value. Examples:; -- A signal efficiency measured in a Monte Carlo study.; -- When constraining a parameter \f$ b \f$, the target value (\f$ b_0 \f$) that this parameter is constrained to:; \f[; \math",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/ModelConfig.cxx:446,config,configuration,446,roofit/roofitcore/src/ModelConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/ModelConfig.cxx,1,['config'],['configuration']
Modifiability,"/*; * Project: RooFit; * Authors:; * PB, Patrick Bos, Netherlands eScience Center, p.bos@esciencecenter.nl; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file RooBinnedL.cxx; \class RooBinnedL; \ingroup Roofitcore. Implements a -log(likelihood) calculation from a dataset; (assumed to be binned) and a PDF. The NLL is calculated as; \f[; \sum_\mathrm{data} -\log( \mathrm{pdf}(x_\mathrm{data})); \f]; In extended mode, a; \f$ N_\mathrm{expect} - N_\mathrm{observed}*log(N_\mathrm{expect}) \f$ term is added.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx:591,extend,extended,591,roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooBinnedL.cxx,1,['extend'],['extended']
Modifiability,"/*; * Project: RooFit; * Authors:; * PB, Patrick Bos, Netherlands eScience Center, p.bos@esciencecenter.nl; *; * Copyright (c) 2021, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /**; \file RooUnbinnedL.cxx; \class RooUnbinnedL; \ingroup Roofitcore. A -log(likelihood) calculation from a dataset; (assumed to be unbinned) and a PDF. The NLL is calculated as; \f[; \sum_\mathrm{data} -\log( \mathrm{pdf}(x_\mathrm{data})); \f]; In extended mode, a; \f$ N_\mathrm{expect} - N_\mathrm{observed}*log(N_\mathrm{expect}) \f$ term is added.; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx:586,extend,extended,586,roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooUnbinnedL.cxx,1,['extend'],['extended']
Modifiability,"/*; * Project: RooFit; *; * Copyright (c) 2024, CERN; *; * Redistribution and use in source and binary forms,; * with or without modification, are permitted according to the terms; * listed in LICENSE (http://roofit.sourceforge.net/license.txt); */; /** \class RooBernstein; \ingroup Roofit. Bernstein basis polynomials are positive-definite in the range [0,1].; In this implementation, we extend [0,1] to be the range of the parameter.; There are n+1 Bernstein basis polynomials of degree n:; \f[; B_{i,n}(x) = \begin{pmatrix}n \\\ i \end{pmatrix} x^i \cdot (1-x)^{n-i}; \f]; Thus, by providing n coefficients that are positive-definite, there; is a natural way to have well-behaved polynomial PDFs. For any n, the n+1 polynomials; 'form a partition of unity', i.e., they sum to one for all values of x.; They can be used as a basis to span the space of polynomials with degree n or less:; \f[; PDF(x, c_0, ..., c_n) = \mathcal{N} \cdot \sum_{i=0}^{n} c_i \cdot B_{i,n}(x).; \f]; By giving n+1 coefficients in the constructor, this class constructs the n+1; polynomials of degree n, and sums them to form an element of the space of polynomials; of degree n. \f$ \mathcal{N} \f$ is a normalisation constant that takes care of the; cases where the \f$ c_i \f$ are not all equal to one. See also; http://www.idav.ucdavis.edu/education/CAGDNotes/Bernstein-Polynomials.pdf; **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBernstein.cxx:390,extend,extend,390,roofit/roofit/src/RooBernstein.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooBernstein.cxx,1,['extend'],['extend']
Modifiability,"/*; * Reset error state variables at start of a new image.; * This is called during compression startup to reset trace/error; * processing to default state, without losing any application-specific; * method pointers. An application might possibly want to override; * this method if it has additional error processing state.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c:24,variab,variables,24,graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jerror.c,1,['variab'],['variables']
Modifiability,"/*; * Skip data --- used to skip over a potentially large amount of; * uninteresting data (such as an APPn marker).; *; * Writers of suspendable-input applications must note that skip_input_data; * is not granted the right to give a suspension return. If the skip extends; * beyond the data currently in the buffer, the buffer can be marked empty so; * that the next read will cause a fill_input_buffer call that can suspend.; * Arranging for additional bytes to be discarded before reloading the input; * buffer is the application writer's problem.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c:264,extend,extends,264,graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdatasrc.c,1,['extend'],['extends']
Modifiability,"/*; * Some important notes:; * The allocation routines provided here must never return NULL.; * They should exit to error_exit if unsuccessful.; *; * It's not a good idea to try to merge the sarray and barray routines,; * even though they are textually almost the same, because samples are; * usually stored as bytes while coefficients are shorts or ints. Thus,; * in machines where byte pointers have a different representation from; * word pointers, the resulting machine code could not be the same.; */; /*; * Many machines require storage alignment: longs must start on 4-byte; * boundaries, doubles on 8-byte boundaries, etc. On such machines, malloc(); * always returns pointers that are multiples of the worst-case alignment; * requirement, and we had better do so too.; * There isn't any really portable way to determine the worst-case alignment; * requirement. This module assumes that the alignment requirement is; * multiples of sizeof(ALIGN_TYPE).; * By default, we define ALIGN_TYPE as double. This is necessary on some; * workstations (where doubles really do need 8-byte alignment) and will work; * fine on nearly everything. If your machine has lesser alignment needs,; * you can save a few bytes by making ALIGN_TYPE smaller.; * The only place I know of where this will NOT work is certain Macintosh; * 680x0 compilers that define double as a 10-byte IEEE extended float.; * Doing 10-byte alignment is counterproductive because longwords won't be; * aligned well. Put ""#define ALIGN_TYPE long"" in jconfig.h if you have; * such a compiler.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c:803,portab,portable,803,graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemmgr.c,2,"['extend', 'portab']","['extended', 'portable']"
Modifiability,/*; * Step 1: imake_ccflags; * Define any special flags that will be needed to get imake.c to compile.; * These will be passed to the compile along with the contents of the; * make variable BOOTSTRAPCFLAGS.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/imakemdep.h:181,variab,variable,181,misc/rmkdepend/imakemdep.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/imakemdep.h,1,['variab'],['variable']
Modifiability,"/*; * The core arithmetic decoding routine (common in JPEG and JBIG).; * This needs to go as fast as possible.; * Machine-dependent optimization facilities; * are not utilized in this portable implementation.; * However, this code should be fairly efficient and; * may be a good base for further optimizations anyway.; *; * Return value is 0 or 1 (binary decision).; *; * Note: I've changed the handling of the code base & bit; * buffer register C compared to other implementations; * based on the standards layout & procedures.; * While it also contains both the actual base of the; * coding interval (16 bits) and the next-bits buffer,; * the cut-point between these two parts is floating; * (instead of fixed) with the bit shift counter CT.; * Thus, we also need only one (variable instead of; * fixed size) shift for the LPS/MPS decision, and; * we can get away with any renormalization update; * of C (except for new data insertion, of course).; *; * I've also introduced a new scheme for accessing; * the probability estimation state machine table,; * derived from Markus Kuhn's JBIG implementation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c:184,portab,portable,184,graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,2,"['portab', 'variab']","['portable', 'variable']"
Modifiability,"/*; * The core arithmetic encoding routine (common in JPEG and JBIG).; * This needs to go as fast as possible.; * Machine-dependent optimization facilities; * are not utilized in this portable implementation.; * However, this code should be fairly efficient and; * may be a good base for further optimizations anyway.; *; * Parameter 'val' to be encoded may be 0 or 1 (binary decision).; *; * Note: I've added full ""Pacman"" termination support to the; * byte output routines, which is equivalent to the optional; * Discard_final_zeros procedure (Figure D.15) in the spec.; * Thus, we always produce the shortest possible output; * stream compliant to the spec (no trailing zero bytes,; * except for FF stuffing).; *; * I've also introduced a new scheme for accessing; * the probability estimation state machine table,; * derived from Markus Kuhn's JBIG implementation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c:184,portab,portable,184,graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,1,['portab'],['portable']
Modifiability,/*; * The first two conversion loops have an extended conversion descriptor.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/loop_wchar.h:45,extend,extended,45,graf2d/win32gdk/gdk/src/iconv/loop_wchar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/iconv/loop_wchar.h,1,['extend'],['extended']
Modifiability,"/*; * The next three routines implement inverse colormap filling. They could; * all be folded into one big routine, but splitting them up this way saves; * some stack space (the mindist[] and bestdist[] arrays need not coexist); * and may allow some compilers to produce better code by registerizing more; * inner-loop variables.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c:319,variab,variables,319,graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jquant2.c,1,['variab'],['variables']
Modifiability,"/*; * These are the data structures needed to scan; * convert regions. Two different scan conversion; * methods are available -- the even-odd method, and; * the winding number method.; * The even-odd rule states that a point is inside; * the polygon if a ray drawn from that point in any; * direction will pass through an odd number of; * path segments.; * By the winding number rule, a point is decided; * to be inside the polygon if a ray drawn from that; * point in any direction passes through a different; * number of clockwise and counter-clockwise path; * segments.; *; * These data structures are adapted somewhat from; * the algorithm in (Foley/Van Dam) for scan converting; * polygons.; * The basic algorithm is to start at the top (smallest y); * of the polygon, stepping down to the bottom of; * the polygon by incrementing the y coordinate. We; * keep a list of edges which the current scanline crosses,; * sorted by x. This list is called the Active Edge Table (AET); * As we change the y-coordinate, we update each entry in; * in the active edge table to reflect the edges new xcoord.; * This list must be sorted at each scanline in case; * two edges intersect.; * We also keep a data structure known as the Edge Table (ET),; * which keeps track of all the edges which the current; * scanline has not yet reached. The ET is basically a; * list of ScanLineList structures containing a list of; * edges which are entered at a given scanline. There is one; * ScanLineList per scanline at which an edge is entered.; * When we enter a new edge, we move it from the ET to the AET.; *; * From the AET, we can implement the even-odd rule as in; * (Foley/Van Dam).; * The winding number rule is a little trickier. We also; * keep the EdgeTableEntries in the AET linked by the; * nextWETE (winding EdgeTableEntry) link. This allows; * the edges to be linked just as before for updating; * purposes, but only uses the edges linked by the nextWETE; * link as edges representing spans of the polygon",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPolyUtils.c:605,adapt,adapted,605,graf2d/asimage/src/TASPolyUtils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPolyUtils.c,1,['adapt'],['adapted']
Modifiability,"/*; * These macros provide the in-line portion of bit fetching.; * Use CHECK_BIT_BUFFER to ensure there are N bits in get_buffer; * before using GET_BITS, PEEK_BITS, or DROP_BITS.; * The variables get_buffer and bits_left are assumed to be locals,; * but the state struct might not be (jpeg_huff_decode needs this).; *	CHECK_BIT_BUFFER(state,n,action);; *		Ensure there are N bits in get_buffer; if suspend, take action.; * val = GET_BITS(n);; *		Fetch next N bits.; * val = PEEK_BITS(n);; *		Fetch next N bits without removing them from the buffer.; *	DROP_BITS(n);; *		Discard next N bits.; * The value N should be a simple variable, not an expression, because it; * is evaluated multiple times.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:187,variab,variables,187,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,4,['variab'],"['variable', 'variables']"
Modifiability,/*; * These variables used by cpy.y and yylex.c; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/cppsetup.c:12,variab,variables,12,misc/rmkdepend/cppsetup.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/rmkdepend/cppsetup.c,1,['variab'],['variables']
Modifiability,"/*; * This code is derived from (original license follows):; *; * This is an OpenSSL-compatible implementation of the RSA Data Security, Inc.; * MD5 Message-Digest Algorithm (RFC 1321).; *; * Homepage:; * http://openwall.info/wiki/people/solar/software/public-domain-source-code/md5; *; * Author:; * Alexander Peslyak, better known as Solar Designer <solar at openwall.com>; *; * This software was written by Alexander Peslyak in 2001. No copyright is; * claimed, and the software is hereby placed in the public domain.; * In case this attempt to disclaim copyright and place the software in the; * public domain is deemed null and void, then the software is; * Copyright (c) 2001 Alexander Peslyak and it is hereby released to the; * general public under the following terms:; *; * Redistribution and use in source and binary forms, with or without; * modification, are permitted.; *; * There's ABSOLUTELY NO WARRANTY, express or implied.; *; * (This is a heavily cut-down ""BSD license"".); *; * This differs from Colin Plumb's older public domain implementation in that; * no exactly 32-bit integer data type is required (any 32-bit or wider; * unsigned integer data type will do), there's no compile-time endianness; * configuration, and the function prototypes match OpenSSL's. No code from; * Colin Plumb's implementation has been reused; this comment merely compares; * the properties of the two independent implementations.; *; * The primary goals of this implementation are portability and ease of use.; * It is meant to be fast, but not as fast as possible. Some known; * optimizations are not included to reduce source code size and avoid; * compile-time configuration.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/MD5.cpp:1221,config,configuration,1221,interpreter/llvm-project/llvm/lib/Support/MD5.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/MD5.cpp,3,"['config', 'portab']","['configuration', 'portability']"
Modifiability,"/*; * This section is for debugging outside of VTune. ; * It creates the environment variables that indicates call graph mode.; * If running outside of VTune remove the remark.; *; *; * static int firstTime = 1;; * char DoCallGraph[12] = ""DoCallGraph"";; * if (firstTime); * {; * firstTime = 0;; * SetEnvironmentVariable( ""BISTRO_COLLECTORS_DO_CALLGRAPH"", DoCallGraph);; * }; *; * end of section.; */; /* initialization part - the functions have not been loaded yet. This part; * will load the functions, and check if we are in Call Graph mode. ; * (for special treatment).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c:85,variab,variables,85,interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/jitprofiling.c,1,['variab'],['variables']
Modifiability,/*; * This structure contains all of the information needed; * to run the bresenham algorithm.; * The variables may be hardcoded into the declarations; * instead of using this structure to make use of; * register declarations.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPolyUtils.c:102,variab,variables,102,graf2d/asimage/src/TASPolyUtils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/TASPolyUtils.c,1,['variab'],['variables']
Modifiability,"/*; * XXH3_accumulate_512 is the tightest loop for long inputs, and it is the most optimized.; *; * It is a hardened version of UMAC, based off of FARSH's implementation.; *; * This was chosen because it adapts quite well to 32-bit, 64-bit, and SIMD; * implementations, and it is ridiculously fast.; *; * We harden it by mixing the original input to the accumulators as well as the product.; *; * This means that in the (relatively likely) case of a multiply by zero, the; * original input is preserved.; *; * On 128-bit inputs, we swap 64-bit pairs when we add the input to improve; * cross-pollination, as otherwise the upper and lower halves would be; * essentially independent.; *; * This doesn't matter on 64-bit hashes since they all get merged together in; * the end, so we skip the extra step.; *; * Both XXH3_64bits and XXH3_128bits use this subroutine.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h:204,adapt,adapts,204,builtins/xxhash/xxhash.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/xxhash/xxhash.h,1,['adapt'],['adapts']
Modifiability,"/*; * bits.c by Jean-loup Gailly and Kai Uwe Rommel.; *; * This is a new version of im_bits.c originally written by Richard B. Wales; *; * PURPOSE; *; * Output variable-length bit strings. Compression can be done; * to a file or to memory.; *; * DISCUSSION; *; * The PKZIP ""deflate"" file format interprets compressed file data; * as a sequence of bits. Multi-bit strings in the file may cross; * byte boundaries without restriction.; *; * The first bit of each byte is the low-order bit.; *; * The routines in this file allow a variable-length bit value to; * be output right-to-left (useful for literal values). For; * left-to-right output (useful for code strings from the tree routines),; * the bits must have been reversed first with R__bi_reverse().; *; * For in-memory compression, the compressed bit stream goes directly; * into the requested output buffer. The input data is read in blocks; * by the R__mem_read() function. The buffer is limited to 64K on 16 bit; * machines.; *; * INTERFACE; *; * void R__bi_init (bits_internal_state *state); * Initialize the bit string routines.; *; * void R__send_bits (int value, int length); * Write out a bit string, taking the source bits right to; * left.; *; * int R__bi_reverse (int value, int length); * Reverse the bits of a bit string, taking the source bits left to; * right and emitting them right to left.; *; * void R__bi_windup (void); * Write out any remaining bits in an incomplete byte.; *; * void R__copy_block(char far *buf, unsigned len, int header); * Copy a stored block to the zip file, storing first the length and; * its one's complement if requested.; *; * int R__seekable(void); * Return true if the zip file can be seeked.; *; * ulg R__memcompress (char *tgt, ulg tgtsize, char *src, ulg srcsize);; * Compress the source buffer src into the target buffer tgt.; */; // Global value of the compression level for the old compression algorithm.; // NOTE: Not thread-safe.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.c:160,variab,variable-length,160,core/zip/src/Bits.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/Bits.c,2,['variab'],['variable-length']
Modifiability,"/*; * jcarith.c; *; * Developed 1997-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains portable arithmetic entropy encoding routines for JPEG; * (implementing the ISO/IEC IS 10918-1 and CCITT Recommendation ITU-T T.81).; *; * Both sequential and progressive modes are supported in this single module.; *; * Suspension is not currently supported in this module.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c:228,portab,portable,228,graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jcarith.c,1,['portab'],['portable']
Modifiability,"/*; * jchuff.c; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * Modified 2006-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains Huffman entropy encoding routines.; * Both sequential and progressive modes are supported in this single module.; *; * Much of the complexity here has to do with supporting output suspension.; * If the data destination module demands suspension, we want to be able to; * back up to the start of the current MCU. To do this, we copy state; * variables into local working storage, and update them back to the; * permanent JPEG objects only upon successful completion of an MCU.; *; * We do not support output suspension for the progressive JPEG mode, since; * the library currently does not allow multiple-scan files to be written; * with output suspension.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c:611,variab,variables,611,graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jchuff.c,1,['variab'],['variables']
Modifiability,"/*; * jdarith.c; *; * Developed 1997-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains portable arithmetic entropy decoding routines for JPEG; * (implementing the ISO/IEC IS 10918-1 and CCITT Recommendation ITU-T T.81).; *; * Both sequential and progressive modes are supported in this single module.; *; * Suspension is not currently supported in this module.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c:228,portab,portable,228,graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdarith.c,1,['portab'],['portable']
Modifiability,"/*; * jdhuff.c; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * Modified 2006-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains Huffman entropy decoding routines.; * Both sequential and progressive modes are supported in this single module.; *; * Much of the complexity here has to do with supporting input suspension.; * If the data source module demands suspension, we want to be able to back; * up to the start of the current MCU. To do this, we copy state variables; * into local working storage, and update them back to the permanent; * storage only upon successful completion of an MCU.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c:602,variab,variables,602,graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jdhuff.c,1,['variab'],['variables']
Modifiability,"/*; * jinclude.h; *; * Copyright (C) 1991-1994, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file exists to provide a single place to fix any problems with; * including the wrong system include files. (Common problems are taken; * care of by the standard jconfig symbols, but on really weird systems; * you may have to edit this file.); *; * NOTE: this file is NOT intended to be included by applications using the; * JPEG library. Most applications need only include jpeglib.h.; */; /* Include auto-config file to find out which system include files we need. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jinclude.h:622,config,config,622,graf2d/asimage/src/libAfterImage/libjpeg/jinclude.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jinclude.h,1,['config'],['config']
Modifiability,"/*; * jmemnobs.c; *; * Copyright (C) 1992-1996, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file provides a really simple implementation of the system-; * dependent portion of the JPEG memory manager. This implementation; * assumes that no backing-store files are needed: all required space; * can be obtained from malloc().; * This is very portable in the sense that it'll compile on almost anything,; * but you'd better have lots of main memory (or virtual memory) if you want; * to process big images.; * Note that the max_memory_to_use option is ignored by this implementation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c:464,portab,portable,464,graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemnobs.c,1,['portab'],['portable']
Modifiability,"/*; * jmemsys.h; *; * Copyright (C) 1992-1997, Thomas G. Lane.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This include file defines the interface between the system-independent; * and system-dependent portions of the JPEG memory manager. No other; * modules need include it. (The system-independent portion is jmemmgr.c;; * there are several different versions of the system-dependent portion.); *; * This file works as-is for the system-dependent memory managers supplied; * in the IJG distribution. You may need to modify it if you write a; * custom memory manager. If system-dependent changes are needed in; * this file, the best method is to #ifdef them based on a configuration; * symbol supplied in jconfig.h, as we have done with USE_MSDOS_MEMMGR; * and USE_MAC_MEMMGR.; */; /* Short forms of external names for systems with brain-damaged linkers. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h:772,config,configuration,772,graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmemsys.h,1,['config'],['configuration']
Modifiability,"/*; * jmorecfg.h; *; * Copyright (C) 1991-1997, Thomas G. Lane.; * Modified 1997-2009 by Guido Vollbeding.; * This file is part of the Independent JPEG Group's software.; * For conditions of distribution and use, see the accompanying README file.; *; * This file contains additional configuration options that customize the; * JPEG software for special applications or support machine-dependent; * optimizations. Most users will not need to touch this file.; */; /*; * Define BITS_IN_JSAMPLE as either; * 8 for 8-bit sample values (the usual setting); * 12 for 12-bit sample values; * Only 8 and 12 are legal data precisions for lossy JPEG according to the; * JPEG standard, and the IJG code does not support anything else!; * We do not support run-time selection of data precision, sorry.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h:283,config,configuration,283,graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/asimage/src/libAfterImage/libjpeg/jmorecfg.h,1,['config'],['configuration']
Modifiability,"/*; * mkstemp() implementation is from the GNU C library.; * Copyright (C) 1991,92,93,94,95,96,97,98,99 Free Software Foundation, Inc.; */; /**; * g_mkstemp:; * @tmpl: template filename; *; * Open a temporary file. See ""man mkstemp"" on most UNIX-like systems.; * This is a portability wrapper, which simply calls mkstemp() on systems; * that have it, and implements it in GLib otherwise.; *; * The parameter is a string that should match the rules for mktemp, i.e.; * end in ""XXXXXX"". The X string will be modified to form the name; * of a file that didn't exist.; *; * Return value: A file handle (as from open()) to the file; * opened for reading and writing. The file is opened in binary mode; * on platforms where there is a difference. The file handle should be; * closed with close(). In case of errors, -1 is returned.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gfileutils.c:273,portab,portability,273,graf2d/win32gdk/gdk/src/glib/gfileutils.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/win32gdk/gdk/src/glib/gfileutils.c,1,['portab'],['portability']
Modifiability,"/*; * parse structure, passed up and down to avoid global variables and; * other clumsinesses; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c:58,variab,variables,58,interpreter/llvm-project/llvm/lib/Support/regcomp.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/regcomp.c,1,['variab'],['variables']
Modifiability,"/*; * trees.c by Jean-loup Gailly; *; * This is a new version of im_ctree.c originally written by Richard B. Wales; * for the defunct implosion method.; *; * PURPOSE; *; * Encode various sets of source values using variable-length; * binary code trees.; *; * DISCUSSION; *; * The PKZIP ""deflation"" process uses several Huffman trees. The more; * common source values are represented by shorter bit sequences.; *; * Each code tree is stored in the ZIP file in a compressed form; * which is itself a Huffman encoding of the lengths of; * all the code strings (in ascending order by source values).; * The actual code strings are reconstructed from the lengths in; * the UNZIP process, as described in the ""application note""; * (APPNOTE.TXT) distributed as part of PKWARE's PKZIP program.; *; * REFERENCES; *; * Lynch, Thomas J.; * Data Compression: Techniques and Applications, pp. 53-55.; * Lifetime Learning Publications, 1985. ISBN 0-534-03418-7.; *; * Storer, James A.; * Data Compression: Methods and Theory, pp. 49-50.; * Computer Science Press, 1988. ISBN 0-7167-8156-5.; *; * Sedgewick, R.; * Algorithms, p290.; * Addison-Wesley, 1983. ISBN 0-201-06672-6.; *; * INTERFACE; *; * void ct_init (ush *attr, int *method); * Allocate the match buffer, initialize the various tables and save; * the location of the internal file attribute (ascii/binary) and; * method (DEFLATE/STORE); *; * void ct_tally (int dist, int lc);; * Save the match info and tally the frequency counts.; *; * long flush_block (char *buf, ulg stored_len, int eof); * Determine the best encoding for the current block: dynamic trees,; * static trees or store, and output the encoded block to the zip; * file. Returns the total compressed length for the file so far.; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZTrees.c:215,variab,variable-length,215,core/zip/src/ZTrees.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZTrees.c,1,['variab'],['variable-length']
Modifiability,/*; *----------------------------------------------------------------------; * Constructor --; *; * Initialize variables from pointer to object header.; *; *----------------------------------------------------------------------; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/misc/win/bindexplib/bindexplib.cxx:111,variab,variables,111,misc/win/bindexplib/bindexplib.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/misc/win/bindexplib/bindexplib.cxx,1,['variab'],['variables']
Modifiability,/*; // set variables back to where they were; nullParamsOfInterest = *saveNullPOI;; *allVars = *saveAll;; delete saveAll;; delete allVars;; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/RatioOfProfiledLikelihoodsTestStat.cxx:11,variab,variables,11,roofit/roostats/src/RatioOfProfiledLikelihoodsTestStat.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/RatioOfProfiledLikelihoodsTestStat.cxx,1,['variab'],['variables']
Modifiability,"/*; ////////////////////////////////////////////////////////////////////////////////; /// Not used yet. Return 0 if all child frames are inside area x,y, w,h. static Int_t canResize(TGFrame *frame, Int_t x, Int_t y, UInt_t &w, UInt_t &h); {; if (frame->InheritsFrom(TGCompositeFrame::Class())) return 0;. TGCompositeFrame *comp = (TGCompositeFrame*)frame;. TIter next(comp->GetList());; TGFrameElement *fe;; Int_t d = gGuiBldDragManager->GetGridStep();; Int_t ret = 0;. while ((fe = (TGFrameElement*)next())) {; if (x + fe->fFrame->GetX() + fe->fFrame->GetWidth() > w) {; w = fe->fFrame->GetX() + x + fe->fFrame->GetWidth();; ret |= 4;; }; if (y + fe->fFrame->GetY() + fe->fFrame->GetHeight() > h) {; h = fe->fFrame->GetY() + y + fe->fFrame->GetHeight();; ret |= 8;; }; }; return ret;; }; */; ////////////////////////////////////////////////////////////////////////////////; /// handle resize",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldDragManager.cxx:253,Inherit,InheritsFrom,253,gui/guibuilder/src/TGuiBldDragManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldDragManager.cxx,1,['Inherit'],['InheritsFrom']
Modifiability,"/*; Data set adapted from the paper (1); ""K-Sample Anderson-Darling Tests of Fit for continuous and discrete cases"" by Scholz and Stephens; values of expected A2 taken by running R kSamples code; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/stressGoFTest.cxx:13,adapt,adapted,13,math/mathcore/test/stressGoFTest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/stressGoFTest.cxx,1,['adapt'],['adapted']
Modifiability,"/*; Data sets adapted from the paper (1); ""K-Sample Anderson-Darling Tests of Fit for continuous and discrete cases"" by Scholz and Stephens; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/stressGoFTest.cxx:14,adapt,adapted,14,math/mathcore/test/stressGoFTest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/stressGoFTest.cxx,1,['adapt'],['adapted']
Modifiability,"/*; Huffman code decoding is performed using a multi-level table lookup.; The fastest way to decode is to simply build a lookup table whose; size is determined by the longest code. However, the time it takes; to build this table can also be a factor if the data being decoded; is not very long. The most common codes are necessarily the; shortest codes, so those codes dominate the decoding time, and hence; the speed. The idea is you can have a shorter table that decodes the; shorter, more probable codes, and then point to subsidiary tables for; the longer codes. The time it costs to decode the longer codes is; then traded against the time it takes to make longer tables. This results of this trade are in the variables lbits and dbits; below. lbits is the number of bits the first level table for literal/; length codes can decode in one step, and dbits is the same thing for; the distance codes. Subsequent tables are also less than or equal to; those sizes. These values may be adjusted either when all of the; codes are shorter than that, in which case the longest code length in; bits is used, or when the shortest code is *longer* than the requested; table size, in which case the length of the shortest code in bits is; used. There are two different values for the two tables, since they code a; different number of possibilities each. The literal/length table; codes 286 possible values, or in a flat code, a little over eight; bits. The distance table codes 30 possible values, or a little less; than five bits, flat. The optimum values for speed end up being; about one bit more than those, so lbits is 8+1 and dbits is 5+1.; The optimum values may differ though from machine to machine, and; possibly even between compilers. Your mileage may vary.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c:715,variab,variables,715,core/zip/src/ZInflate.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/zip/src/ZInflate.c,1,['variab'],['variables']
Modifiability,"/*; Line/fill/etc. attributes can be set inside TPad, but not only where:; many of them are set by base sub-objects of 2d primitives; (2d primitives usually inherit TAttLine or TAttFill etc.). And these sub-objects; call gVirtualX->SetLineWidth ... etc. So, if I save some attributes in my painter,; it will be mess - at any moment I do not know, where to take line attribute - from; gVirtualX or from my own member. So! All attributed, _ALL_ go to/from gVirtualX.; */; ////////////////////////////////////////////////////////////////////////////////; /// Delegate to gVirtualX.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPadPainter.cxx:157,inherit,inherit,157,graf2d/gpad/src/TPadPainter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPadPainter.cxx,1,['inherit'],['inherit']
Modifiability,"/*; Mesh builder requires generic ""data source"": it can; be a wrapped TH3 object, a wrapped TF3 object or some; ""density estimator"" object.; Mesh builder inherits this data source type. TH3Adapter is one of such data sources.; It has _direct_ access to TH3 internal data.; GetBinContent(i, j, k) is a virtual function; and it calls two other virtual functions - this; is very expensive if you call GetBinContent; several million times as I do in marching cubes. ""H"" parameter is one of TH3 classes,; ""E"" is the type of internal data. For example, H == TH3C, E == Char_t.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLMarchingCubes.h:154,inherit,inherits,154,graf3d/gl/inc/TGLMarchingCubes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLMarchingCubes.h,1,['inherit'],['inherits']
Modifiability,"/*; RooNLLVar* nll = new RooNLLVar(""nll"","""",*pdf,*data, Extended(),Constrain(*constrainedParams));; RooProfileLL* profile = new RooProfileLL(""pll"","""",*nll, *fPOI);; profile->addOwnedComponents(*nll) ; // to avoid memory leak; */; // do a global fit cloning the data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodCalculator.cxx:56,Extend,Extended,56,roofit/roostats/src/ProfileLikelihoodCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/ProfileLikelihoodCalculator.cxx,1,['Extend'],['Extended']
Modifiability,"/*; TGLHistPainter is a proxy class. It inherits TVirtualHistPainter and; overrides its virtual functions, but all actual work is done by :; THistPainter - I name it ""default"" painter, it's the member of type; TVirtualHistPainter * and loaded via plugin-manager;; TGLLegoPainter - it draws different legos (lego/lego1/lego2/lego3);; TGLSurfacePainter - supports surfaces (surf/surf1/surf2/surf3/surf4/surf5);; TGLBoxPainter - box option for TH3;; TGLTF3Painter - TF3.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLHistPainter.h:40,inherit,inherits,40,graf3d/gl/inc/TGLHistPainter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLHistPainter.h,2,"['inherit', 'plugin']","['inherits', 'plugin-manager']"
Modifiability,"/*; TH1* hSample = sample.GetHisto();; if( ! hSample ) {; std::cout << ""Error getting histogram for sample: ""; << sampName << std::endl;; throw -1;; }; sampleDir->cd();; hSample->Write();. sample.InputFile = OutputFileName;; sample.HistoName = hSample->GetName();; sample.HistoPath = sampleDirPath;; */; // Write the histograms associated with; // systematics; /* THIS IS WHAT I""M COMMENTING; sample.GetStatError().writeToFile( OutputFileName, sampleDirPath );. // Must write all systematics that contain internal histograms; // (This is not all systematics). for( unsigned int i = 0; i < sample.GetHistoSysList().size(); ++i ) {; sample.GetHistoSysList().at(i).writeToFile( OutputFileName, sampleDirPath );; }; for( unsigned int i = 0; i < sample.GetHistoFactorList().size(); ++i ) {; sample.GetHistoFactorList().at(i).writeToFile( OutputFileName, sampleDirPath );; }; for( unsigned int i = 0; i < sample.GetShapeSysList().size(); ++i ) {; sample.GetShapeSysList().at(i).writeToFile( OutputFileName, sampleDirPath );; }; END COMMENT */; /*; sample.statError.writeToFile( OutputFileName, sampleDirPath );. // Now, get the Stat config histograms; if( sample.statError.HistoName != """" ) {; TH1* hStatError = sample.statError.GetErrorHist();; if( ! hStatError ) {; std::cout << ""Error getting stat error histogram for sample: ""; << sampName << std::endl;; throw -1;; }; hStatError->Write();. sample.statError.InputFile = OutputFileName;; sample.statError.HistoName = hStatError->GetName();; sample.statError.HistoPath = sampleDirPath;. }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx:1127,config,config,1127,roofit/histfactory/src/Measurement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Measurement.cxx,1,['config'],['config']
Modifiability,"/*; THIS FILE IS PROPERTY OF BURKHARD BUROW. IF YOU ARE USING THIS FILE YOU; SHOULD ALSO HAVE ACCESS TO CFORTRAN.DOC WHICH PROVIDES TERMS FOR USING,; MODIFYING, COPYING AND DISTRIBUTING THE CFORTRAN.H PACKAGE.; */; /* The following modifications were made by the authors of CFITSIO or by me.; * They are flagged below with CFITSIO, the author's initials, or KMCCARTY.; * PDW = Peter Wilson; * DM = Doug Mink; * LEB = Lee E Brotzman; * MR = Martin Reinecke; * WDP = William D Pence; * -- Kevin McCarty, for Debian (19 Dec. 2005) */; /*******; Modifications:; Oct 1997: Changed symbol name extname to appendus (PDW/HSTX); (Conflicted with a common variable name in FTOOLS); Nov 1997: If g77Fortran defined, also define f2cFortran (PDW/HSTX); Feb 1998: Let VMS see the NUM_ELEMS code. Lets programs treat; single strings as vectors with single elements; Nov 1999: If macintoxh defined, also define f2cfortran (for Mac OS-X); Apr 2000: If WIN32 defined, also define PowerStationFortran and; VISUAL_CPLUSPLUS (Visual C++); Jun 2000: If __GNUC__ and linux defined, also define f2cFortran; (linux/gcc environment detection); Apr 2002: If __CYGWIN__ is defined, also define f2cFortran; Nov 2002: If __APPLE__ defined, also define f2cfortran (for Mac OS-X). Nov 2003: If __INTEL_COMPILER or INTEL_COMPILER defined, also define; f2cFortran (KMCCARTY); Dec 2005: If f2cFortran is defined, enforce REAL functions in FORTRAN; returning ""double"" in C. This was one of the items on; Burkhard's TODO list. (KMCCARTY); Dec 2005: Modifications to support 8-byte integers. (MR); USE AT YOUR OWN RISK!; Feb 2006 Added logic to typedef the symbol 'LONGLONG' to an appropriate; intrinsic 8-byte integer datatype (WDP); Apr 2006: Modifications to support gfortran (and g77 with -fno-f2c flag); since by default it returns ""float"" for FORTRAN REAL function.; (KMCCARTY); May 2008: Revert commenting out of ""extern"" in COMMON_BLOCK_DEF macro.; Add braces around do-nothing "";"" in 3 empty while blocks to; get rid of compiler w",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h:646,variab,variable,646,montecarlo/eg/inc/cfortran.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/cfortran.h,1,['variab'],['variable']
Modifiability,"/*; The following code does a BFS traversal of the `PtrAssignmentGraph`; considering all unsafe vars as starting nodes and constructs an undirected; graph `DependenciesMap`. Constructing the `DependenciesMap` in this manner; elimiates all variables that are unreachable from any unsafe var. In other; words, this removes all dependencies that don't include any unsafe variable; and consequently don't need any fixit generation.; Note: A careful reader would observe that the code traverses; `PtrAssignmentGraph` using `CurrentVar` but adds edges between `Var` and; `Adj` and not between `CurrentVar` and `Adj`. Both approaches would; achieve the same result but the one used here dramatically cuts the; amount of hoops the second part of the algorithm needs to jump, given that; a lot of these connections become ""direct"". The reader is advised not to; imagine how the graph is transformed because of using `Var` instead of; `CurrentVar`. The reader can continue reading as if `CurrentVar` was used,; and think about why it's equivalent later.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp:239,variab,variables,239,interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,/*; return (!IsFixedLayout(w) &&; w->InheritsFrom(TGCompositeFrame::Class()) &&; ((TGCompositeFrame*)w)->IsLayoutBroken() &&; !IsEditDisabled((TGWindow*)w->GetParent()) &&; !IsFixedLayout((TGWindow*)w->GetParent()));; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldDragManager.cxx:37,Inherit,InheritsFrom,37,gui/guibuilder/src/TGuiBldDragManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guibuilder/src/TGuiBldDragManager.cxx,1,['Inherit'],['InheritsFrom']
Modifiability,"/*; std::vector<TString>::const_iterator variter = varnames.begin();; std::cout << ""Available variables:"" << std::endl;; while(variter != varnames.end()){; std::cout << *variter << std::endl;; variter++;; }; ; std::vector<TString>::const_iterator classiter = classnames.begin();; std::cout << ""Available classes:"" << std::endl;; while(classiter != classnames.end()){; std::cout << *classiter << std::endl;; classiter++;; }; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmvagui/src/variablesMultiClass.cxx:94,variab,variables,94,tmva/tmvagui/src/variablesMultiClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmvagui/src/variablesMultiClass.cxx,1,['variab'],['variables']
Modifiability,/*; struct _objc_protocol_extension {; uint32_t size;; struct objc_method_description_list *optional_instance_methods;; struct objc_method_description_list *optional_class_methods;; struct objc_property_list *instance_properties;; const char ** extendedMethodTypes;; struct objc_property_list *class_properties;; };; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:245,extend,extendedMethodTypes,245,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['extend'],['extendedMethodTypes']
Modifiability,/*; vs1 = adler + sum(c[i]); vs2 = sum2 + 16 vs1 + sum( (16-i+1) c[i] ). NOTE: 256-bit equivalents are:; _mm256_maddubs_epi16 <- operates on 32 bytes to 16 shorts; _mm256_madd_epi16 <- Sums 16 shorts to 8 int32_t.; We could rewrite the below to use 256-bit instructions instead of 128-bit.; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/adler32_cf.c:224,rewrite,rewrite,224,builtins/zlib/adler32_cf.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/builtins/zlib/adler32_cf.c,1,['rewrite'],['rewrite']
Modifiability,"/*===-- clang-c/Rewrite.h - C CXRewriter --------------------------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Rewrite.h:16,Rewrite,Rewrite,16,interpreter/llvm-project/clang/include/clang-c/Rewrite.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang-c/Rewrite.h,1,['Rewrite'],['Rewrite']
Modifiability,"/*===-- include/llvm-c/DataTypes.h - Define fixed size types ------*- C -*-===*\; |* *|; |* Part of the LLVM Project, under the Apache License v2.0 with LLVM *|; |* Exceptions. *|; |* See https://llvm.org/LICENSE.txt for license information. *|; |* SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception *|; |* *|; |*===----------------------------------------------------------------------===*|; |* *|; |* This file contains definitions to figure out the size of _HOST_ data types.*|; |* This file is important because different host OS's define different macros,*|; |* which makes portability tough. This file exports the following *|; |* definitions: *|; |* *|; |* [u]int(32|64)_t : typedefs for signed and unsigned 32/64 bit system types*|; |* [U]INT(8|16|32|64)_(MIN|MAX) : Constants for the min and max values. *|; |* *|; |* No library is required when using these functions. *|; |* *|; |*===----------------------------------------------------------------------===*/; /* Please leave this file C-compatible. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DataTypes.h:584,portab,portability,584,interpreter/llvm-project/llvm/include/llvm-c/DataTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm-c/DataTypes.h,1,['portab'],['portability']
Modifiability,"/*===-- ittnotify_config.h - JIT Profiling API internal config-----*- C -*-===*; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===----------------------------------------------------------------------===*; *; * This file provides Intel(R) Performance Analyzer JIT (Just-In-Time); * Profiling API internal config.; *; * NOTE: This file comes in a style different from the rest of LLVM; * source base since this is a piece of code shared from Intel(R); * products. Please do not reformat / re-style this code to make; * subsequent merges and contributions from the original source base eaiser.; *; *===----------------------------------------------------------------------===*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/ittnotify_config.h:56,config,config,56,interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/ittnotify_config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/IntelJITEvents/ittnotify_config.h,2,['config'],['config']
Modifiability,"/*===---- cuda_builtin_vars.h - CUDA built-in variables ---------------------===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_builtin_vars.h:46,variab,variables,46,interpreter/llvm-project/clang/lib/Headers/__clang_cuda_builtin_vars.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_builtin_vars.h,1,['variab'],['variables']
Modifiability,"/*===---- pconfigintrin.h - X86 platform configuration ---------------------===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/pconfigintrin.h:41,config,configuration,41,interpreter/llvm-project/clang/lib/Headers/pconfigintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/pconfigintrin.h,1,['config'],['configuration']
Modifiability,"/*===---- sgxintrin.h - X86 SGX intrinsics configuration -------------------===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/sgxintrin.h:43,config,configuration,43,interpreter/llvm-project/clang/lib/Headers/sgxintrin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/sgxintrin.h,1,['config'],['configuration']
Modifiability,"/*===---- stdarg.h - Variable argument handling ----------------------------===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */; /*; * This header is designed to be included multiple times. If any of the __need_; * macros are defined, then only that subset of interfaces are provided. This; * can be useful for POSIX headers that need to not expose all of stdarg.h, but; * need to use some of its interfaces. Otherwise this header provides all of; * the expected interfaces.; *; * When clang modules are enabled, this header is a textual header. It ignores; * its header guard so that multiple submodules can export its interfaces.; * Take module SM with submodules A and B, whose headers both include stdarg.h; * When SM.A builds, __STDARG_H will be defined. When SM.B builds, the; * definition from SM.A will leak when building without local submodule; * visibility. stdarg.h wouldn't include any of its implementation headers, and; * SM.B wouldn't import any of the stdarg modules, and SM.B's `export *`; * wouldn't export any stdarg interfaces as expected. However, since stdarg.h; * ignores its header guard when building with modules, it all works as; * expected.; *; * When clang modules are not enabled, the header guards can function in the; * normal simple fashion.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/stdarg.h:21,Variab,Variable,21,interpreter/llvm-project/clang/lib/Headers/stdarg.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/stdarg.h,1,['Variab'],['Variable']
Modifiability,"/*===---- varargs.h - Variable argument handling -------------------------------------===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/varargs.h:22,Variab,Variable,22,interpreter/llvm-project/clang/lib/Headers/varargs.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/varargs.h,1,['Variab'],['Variable']
Modifiability,"/*===---- wasm_simd128.h - WebAssembly portable SIMD intrinsics ------------===; *; * Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.; * See https://llvm.org/LICENSE.txt for license information.; * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception; *; *===-----------------------------------------------------------------------===; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/wasm_simd128.h:39,portab,portable,39,interpreter/llvm-project/clang/lib/Headers/wasm_simd128.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/wasm_simd128.h,1,['portab'],['portable']
Modifiability,/*Extend*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:2,Extend,Extend,2,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,8,['Extend'],['Extend']
Modifiability,/*ExtendKind*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:2,Extend,ExtendKind,2,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,1,['Extend'],['ExtendKind']
Modifiability,/*Extended*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:2,Extend,Extended,2,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,2,['Extend'],['Extended']
Modifiability,/*ExtendedDescription=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/PathDiagnostic.cpp:2,Extend,ExtendedDescription,2,interpreter/llvm-project/clang/lib/Analysis/PathDiagnostic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/PathDiagnostic.cpp,3,['Extend'],['ExtendedDescription']
Modifiability,/*ExtendingManyInputs=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:2,Extend,ExtendingManyInputs,2,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['Extend'],['ExtendingManyInputs']
Modifiability,/*Variable*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:2,Variab,Variable,2,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,3,['Variab'],['Variable']
Modifiability,/*VariableMask=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:2,Variab,VariableMask,2,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,2,['Variab'],['VariableMask']
Modifiability,"/*[](const TObject& c) {; c.InheritsFrom(""RooAbsArg"");; if (s) {; return (s->getStringAttribute(""alias"")) ? s->getStringAttribute(""alias"") : c.GetName();; }; return c.GetName();; }(comp)*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooNode.cxx:28,Inherit,InheritsFrom,28,roofit/xroofit/src/xRooNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/xroofit/src/xRooNode.cxx,1,['Inherit'],['InheritsFrom']
Modifiability,/*extended=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:2,extend,extended,2,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,2,['extend'],['extended']
Modifiability,"/*fprintf(stderr, ""mmap_morecore: try to extend mapping by %d bytes, use bigger TMapFile\n"", mapbytes);*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmapsup.c:41,extend,extend,41,core/clib/src/mmapsup.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clib/src/mmapsup.c,1,['extend'],['extend']
Modifiability,/*i8/i16 extend*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTargetTransformInfo.cpp:9,extend,extend,9,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTargetTransformInfo.cpp,1,['extend'],['extend']
Modifiability,/*register variable*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/Sema.cpp:11,variab,variable,11,interpreter/llvm-project/clang/lib/Sema/Sema.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/Sema.cpp,1,['variab'],['variable']
Modifiability,/*variable of non-literal type*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:2,variab,variable,2,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['variab'],['variable']
Modifiability,/*variable template*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:2,variab,variable,2,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['variab'],['variable']
Modifiability,/*variable*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:2,variab,variable,2,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['variab'],['variable']
Modifiability,/*variable=*/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/Sema.cpp:2,variab,variable,2,interpreter/llvm-project/clang/lib/Sema/Sema.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/Sema.cpp,3,['variab'],['variable']
Modifiability,"/*|| obj->InheritsFrom(""TH2"") || obj->InheritsFrom(""TProfile"")*/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx:10,Inherit,InheritsFrom,10,gui/ged/src/TH1Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx,2,['Inherit'],['InheritsFrom']
Modifiability,"// !!histogram with variable binwidth??; // !!only works for histograms with fixed binwidth",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx:20,variab,variable,20,gui/ged/src/TH1Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx,1,['variab'],['variable']
Modifiability,"// !!problem: histogram with variable binwidth??; // computes the new histogram in ""delay draw"" mode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx:29,variab,variable,29,gui/ged/src/TH1Editor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/ged/src/TH1Editor.cxx,1,['variab'],['variable']
Modifiability,"// !LLVM_ENABLE_THREADS; // If threading is disabled entirely, this compiles to nothing and you get; // a normal global variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Compiler.h:120,variab,variable,120,interpreter/llvm-project/llvm/include/llvm/Support/Compiler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Compiler.h,1,['variab'],['variable']
Modifiability,"// ""Callee"" (i.e. value producer) zero extends pointers at function; // boundary.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp:39,extend,extends,39,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp,1,['extend'],['extends']
Modifiability,"// ""Global"" configuration state that can actually vary between modules.; // Ignore all warnings: -w",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h:12,config,configuration,12,interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/Diagnostic.h,1,['config'],['configuration']
Modifiability,"// ""Promote"" the operation by extending the operand.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorOps.cpp:30,extend,extending,30,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorOps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorOps.cpp,1,['extend'],['extending']
Modifiability,"// ""Properties do not inherit from the element referencing the 'marker' into the contents of the; // marker. However, by using the context-stroke value for the fill or stroke on elements in its; // definition, a single marker can be designed to match the style of the element referencing the; // marker.""; // -> we need to reset all attributes",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:22,inherit,inherit,22,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['inherit'],['inherit']
Modifiability,"// ""Zero-extend"" the i8 vectors. This is not a per-element zext, rather we; // fill in the missing vector elements with 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:9,extend,extend,9,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,2,['extend'],['extend']
Modifiability,"// ""extend"" type operations don't need an immediate, #0 is implicit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp:4,extend,extend,4,interpreter/llvm-project/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AsmParser/AArch64AsmParser.cpp,1,['extend'],['extend']
Modifiability,"// ""super"" may be the name of a type or variable. Figure out which; // it is.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:40,variab,variable,40,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['variab'],['variable']
Modifiability,"// ""theta"" = -45 ... 135 degrees; // set the variables to be minimized",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx:45,variab,variables,45,tutorials/fit/fitEllipseTGraphRMM.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx,1,['variab'],['variables']
Modifiability,"// # History file size, once HistSize is reached remove all but HistSave entries,; // # set to 0 to turn off command recording.; // # Can be overridden by environment variable ROOT_HIST=size[:save],; // # the "":save"" part is optional.; // # Rint.HistSize: 500; // # Set to -1 for sensible default (80% of HistSize), set to 0 to disable history.; // # Rint.HistSave: 400",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx:167,variab,variable,167,core/textinput/src/Getline.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/Getline.cxx,1,['variab'],['variable']
Modifiability,"// ### set up some other variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:25,variab,variables,25,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,2,['variab'],['variables']
Modifiability,"// #### When nbins is close to the order of the data this version of parallelization is faster; // #### Parallelize by vectorizing the variable loop",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:135,variab,variable,135,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['variab'],['variable']
Modifiability,"// #### last variable entry is the fisher variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:13,variab,variable,13,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,4,['variab'],['variable']
Modifiability,"// #### looping through the variables...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:28,variab,variables,28,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['variab'],['variables']
Modifiability,"// #### ncuts means that we need n+1 bins for each variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:51,variab,variable,51,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['variab'],['variable']
Modifiability,"// #### ok loop through each variable to initialize all the values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:29,variab,variable,29,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['variab'],['variable']
Modifiability,"// #### set up a map to the subset of variables using two arrays",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:38,variab,variables,38,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,2,['variab'],['variables']
Modifiability,"// #### xmin and xmax for earch variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx:32,variab,variable,32,tmva/tmva/src/DecisionTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTree.cxx,1,['variab'],['variable']
Modifiability,// #2 check that the truncate just drops extended bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:41,extend,extended,41,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['extend'],['extended']
Modifiability,"// #pragma link C++ class ROOT::Experimental::REveProjectionAxes+;; // Generic configuration; // #pragma link C++ class REveParamList;; // #pragma link C++ class REveParamList::FloatConfig_t+;; // #pragma link C++ class REveParamList::IntConfig_t+;; // #pragma link C++ class REveParamList::BoolConfig_t+;; // REveTrack",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/LinkDef.h:79,config,configuration,79,graf3d/eve7/inc/LinkDef.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve7/inc/LinkDef.h,1,['config'],['configuration']
Modifiability,// ${variable},MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp:5,variab,variable,5,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinterInlineAsm.cpp,1,['variab'],['variable']
Modifiability,// '--Attribute=extended' settings.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVOptions.cpp:16,extend,extended,16,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVOptions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVOptions.cpp,1,['extend'],['extended']
Modifiability,"// 'increment' of the whole VariablesState is defined identically to the; // increment of a number: starting from the least significant element,; // increment it, and if it wrapped, then propagate that carry by also; // incrementing next (more significant) element.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/CombinationGenerator.h:28,Variab,VariablesState,28,interpreter/llvm-project/llvm/include/llvm/ADT/CombinationGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/CombinationGenerator.h,1,['Variab'],['VariablesState']
Modifiability,// 'inline' is not allowed on block scope variable declaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:42,variab,variable,42,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,"// 'ptr' argument.; // note: This assumes all address spaces share a common libfunc; // implementation and that addresses are convertable. For systems without; // that property, we'd need to extend this mechanism to support AS-specific; // families of atomic intrinsics.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AtomicExpandPass.cpp:191,extend,extend,191,interpreter/llvm-project/llvm/lib/CodeGen/AtomicExpandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AtomicExpandPass.cpp,1,['extend'],['extend']
Modifiability,// 'restrict' -> 'noalias' is done in EmitFunctionProlog when we; // have the corresponding parameter variable. It doesn't make; // sense to do it here because parameters are so messed up.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp:102,variab,variable,102,interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,1,['variab'],['variable']
Modifiability,// 'selectany' only applies to externally visible variable declarations.; // It does not apply to functions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:50,variab,variable,50,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,// 'using_if_exists' doesn't make sense on an inherited constructor.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:46,inherit,inherited,46,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['inherit'],['inherited']
Modifiability,// (C++98 8.3.5p3):; // All declarations for a function shall agree exactly in both the; // return type and the parameter-type-list.; // We also want to respect all the extended bits except noreturn.; // noreturn should now match unless the old type info didn't have it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:169,extend,extended,169,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['extend'],['extended']
Modifiability,// (Multiple inheritance is fine though.),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp:13,inherit,inheritance,13,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp,1,['inherit'],['inheritance']
Modifiability,// (N - Y) + Z --> (Z - Y) + N; // when N is an extend or shift operand,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:48,extend,extend,48,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['extend'],['extend']
Modifiability,"// (X+Y) == X --> Y == 0 and similar folds.; // Don't do this if X is an immediate that can fold into a cmp; // instruction and X+Y has other uses. It could be an induction variable; // chain, and the transform would increase register pressure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:173,variab,variable,173,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,1,['variab'],['variable']
Modifiability,"// (__: ## + Rs<<0); // Store-immediates are treated as non-memory operations, since; // it's the value being stored that is extended (as opposed to; // a part of the address).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp:125,extend,extended,125,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,1,['extend'],['extended']
Modifiability,"// (dpbusd (zext a), (sext, b)). Since the first operand should be unsigned; // value, we need to check LHS is zero extended value. RHS should be signed; // value, so we just check the signed bits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86PartialReduction.cpp:116,extend,extended,116,interpreter/llvm-project/llvm/lib/Target/X86/X86PartialReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86PartialReduction.cpp,1,['extend'],['extended']
Modifiability,"// (dpbusd (zext a), (sext, b)). Since the first operand should be unsigned; // value, we need to check Op0 is zero extended value. Op1 should be signed; // value, so we just check the signed bits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:116,extend,extended,116,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['extend'],['extended']
Modifiability,// (last_iv <= iv) ? Check if the variable is updated and store new; // value in global var.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:34,variab,variable,34,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['variab'],['variable']
Modifiability,"// (note: may want to extend functionality in the future)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:22,extend,extend,22,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['extend'],['extend']
Modifiability,"// (note: may want to extend this in the future?)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx:22,extend,extend,22,hist/hist/src/TF1.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TF1.cxx,1,['extend'],['extend']
Modifiability,"// (or (and a b) (and (not a) c)) => (bsl a b c); // We only have to look for constant vectors here since the general, variable; // case can be handled in TableGen.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:119,variab,variable,119,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['variab'],['variable']
Modifiability,"// (tbz (any_ext x), b) -> (tbz x, b) if we don't use the extended bits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:58,extend,extended,58,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['extend'],['extended']
Modifiability,"// (tbz (any_ext x), b) -> (tbz x, b) if we don't use the extended bits.; //; // (tbz (trunc x), b) -> (tbz x, b) is always safe, because the bit number; // on the truncated x is the same as the bit number on x.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp:58,extend,extended,58,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp,1,['extend'],['extended']
Modifiability,"// (zext bool X) * (zext bool Y) --> zext (and X, Y); // (sext bool X) * (sext bool Y) --> zext (and X, Y); // Note: -1 * -1 == 1 * 1 == 1 (if the extends match, the result is the same)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp:147,extend,extends,147,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp,1,['extend'],['extends']
Modifiability,"// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // * F) Make list of numerical integration variables consisting of: *; // * - Category dependents of RealLValues in analytical integration *; // * - Expanded server lists of server that are not analytically integrated *; // * Make Jacobian list with analytically integrated RealLValues *; // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *; // Loop over actually analytically integrated dependents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:125,variab,variables,125,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['variab'],['variables']
Modifiability,"// *** Error checking for a fundamental index category ***; //cout << ""RooSim::plotOn: index is fundamental"" << endl ;; // Check that the provided projection dataset contains our index variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:185,variab,variable,185,roofit/roofitcore/src/RooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx,1,['variab'],['variable']
Modifiability,// *** Part3: Predicates are ready. Now go ahead and create the new addrec in; // which the casts had been folded away. The caller can rewrite SymbolicPHI; // into NewAR if it will also add the runtime overflow checks specified in; // Predicates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:135,rewrite,rewrite,135,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['rewrite'],['rewrite']
Modifiability,"// ************************************************************************* //; // * * //; // * s t r e s s P r o o f * //; // * * //; // * This file contains a set of test of PROOF related functionality. * //; // * The tests can be run as a standalone program or with the interpreter. * //; // * To run as a standalone program: * //; // * * //; // * $ cd $ROOTSYS/test * //; // * $ make stressProof * //; // * * //; // * Run stressProof with '-h' to get the list of supported options * //; // * $ ./stressProof -h * //; // * * //; // * To run interactively: * //; // * $ root * //; // * root[] .include $ROOTSYS/tutorials * //; // * root[] .L stressProof.cxx+ * //; // * root[] stressProof(master, tests, wrks, verbose, logfile, dyn, \ * //; // * dyn, skipds, h1src, eventsrc, dryrun) * //; // * * //; // * The arguments have the same meaning as above except for * //; // * verbose [Int_t] increasing verbosity (0 == minimal) * //; // * dyn [Bool_t] if kTRUE run in dynamic startup mode * //; // * skipds [Bool_t] if kTRUE the dataset related tests are skipped * //; // * * //; // * A certain number of swithces can also be controlled via environment * //; // * variables: check './stressProof -h' * //; // * * //; // * The stressProof function returns 0 on success, 1 on failure. * //; // * * //; // * The successful output looks like this: * //; // * * //; // * ****************************************************************** * //; // * * Starting P R O O F - S T R E S S suite * * //; // * ****************************************************************** * //; // * * Log file: /tmp/ProofStress_XrcwBe * //; // * ****************************************************************** * //; // * Test 1 : Open a session ................................... OK * * //; // * Test 2 : Get session logs ................................. OK * * //; // * Test 3 : Simple random number generation .................. OK * * //; // * Test 4 : Dataset handling with H1 files ................... OK * * //; /",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx:1164,variab,variables,1164,test/stressProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressProof.cxx,1,['variab'],['variables']
Modifiability,// *_EXTEND_VECTOR_INREG instructions extend the lowest elements of the; // input vector (i.e. we only use InLo):; // OutLo will extend the first OutNumElements from InLo.; // OutHi will extend the next OutNumElements from InLo.; // Shuffle the elements from InLo for OutHi into the bottom elements to; // create a 'fake' InHi.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp:38,extend,extend,38,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,3,['extend'],['extend']
Modifiability,"// - Offsets into the Zip64 Extended Information Extra Field",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TZIPFile.h:28,Extend,Extended,28,io/io/inc/TZIPFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TZIPFile.h,1,['Extend'],['Extended']
Modifiability,"// - a non-template variable of non-volatile const-qualified type, unless; // - it is explicitly declared extern, or; // - it is declared in the purview of a module interface unit; // (outside the private-module-fragment, if any) or module partition, or; // - it is inline, or; // - it was previously declared and the prior declaration did not have; // internal linkage; // (There is no equivalent in C99.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp:20,variab,variable,20,interpreter/llvm-project/clang/lib/AST/Decl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp,1,['variab'],['variable']
Modifiability,// - a potentially evaluated typeid expression applied to a glvalue; // expression whose type is a polymorphic class type,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExceptionSpec.cpp:99,polymorphi,polymorphic,99,interpreter/llvm-project/clang/lib/Sema/SemaExceptionSpec.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExceptionSpec.cpp,1,['polymorphi'],['polymorphic']
Modifiability,"// - a variable, variable template, function, or function template; // that is explicitly declared static; or; // (This bullet corresponds to C99 6.2.2p3.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp:7,variab,variable,7,interpreter/llvm-project/clang/lib/AST/Decl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp,2,['variab'],['variable']
Modifiability,// - fast enumeration variables,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:22,variab,variables,22,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['variab'],['variables']
Modifiability,// - it names a potentially-constant variable that is initialized with an; // expression that is value-dependent,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp:37,variab,variable,37,interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,1,['variab'],['variable']
Modifiability,// - variables,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:5,variab,variables,5,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['variab'],['variables']
Modifiability,"// -- A collection was stored in a collection, we choose not to split it.; // Note: Splitting it would require extending TTreeFormula; // to understand how to access it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:111,extend,extending,111,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['extend'],['extending']
Modifiability,"// -- If more than one matching specialization is found, the; // partial order rules (14.5.4.2) are used to determine; // whether one of the specializations is more specialized; // than the others. If none of the specializations is more; // specialized than all of the other matching; // specializations, then the use of the variable template is; // ambiguous and the program is ill-formed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:325,variab,variable,325,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['variab'],['variable']
Modifiability,"// -- If we are an object data member which inherits from TObject,; // flag it so that later during i/o we will register the object; // with the buffer so that pointers are handled correctly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:44,inherit,inherits,44,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['inherit'],['inherits']
Modifiability,"// -- Newer versions allow polymorphic pointers to objects.; // Loop over the entries in the clones array or the STL container.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoWriteBuffer.cxx:27,polymorphi,polymorphic,27,io/io/src/TStreamerInfoWriteBuffer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoWriteBuffer.cxx,1,['polymorphi'],['polymorphic']
Modifiability,"// -- Newer versions allow polymorphic pointers to objects.; // Loop over the entries in the clones array or the STL container.; //for (int k = 0; k < narr; ++k) {; // Get the counter for the varying length array.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:27,polymorphi,polymorphic,27,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['polymorphi'],['polymorphic']
Modifiability,"// -- Newer versions allow polymorphic pointers.; // Loop over the entries in the clones array or the STL container.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoReadBuffer.cxx:27,polymorphi,polymorphic,27,io/io/src/TStreamerInfoReadBuffer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoReadBuffer.cxx,1,['polymorphi'],['polymorphic']
Modifiability,"// -- Newer versions allow polymorphic pointers.; // Loop over the entries in the clones array or the STL container.; // for (Int_t k = 0; k < narr; ++k) {; // Get the counter for the varying length array.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:27,polymorphi,polymorphic,27,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['polymorphi'],['polymorphic']
Modifiability,"// -- Older versions do *not* allow polymorphic pointers to objects.; // Loop over each element of the array of pointers to varying-length arrays.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:36,polymorphi,polymorphic,36,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,2,['polymorphi'],['polymorphic']
Modifiability,"// -- Older versions do *not* allow polymorphic pointers to objects.; // Loop over the entries in the clones array or the STL container.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoWriteBuffer.cxx:36,polymorphi,polymorphic,36,io/io/src/TStreamerInfoWriteBuffer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoWriteBuffer.cxx,1,['polymorphi'],['polymorphic']
Modifiability,"// -- Older versions do *not* allow polymorphic pointers to objects.; // Loop over the entries in the clones array or the STL container.; //for (int k = 0; k < narr; ++k) {; // Get the counter for the varying length array.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:36,polymorphi,polymorphic,36,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['polymorphi'],['polymorphic']
Modifiability,"// -- Older versions do *not* allow polymorphic pointers.; // Loop over the entries in the clones array or the STL container.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoReadBuffer.cxx:36,polymorphi,polymorphic,36,io/io/src/TStreamerInfoReadBuffer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoReadBuffer.cxx,1,['polymorphi'],['polymorphic']
Modifiability,"// -- Older versions do *not* allow polymorphic pointers.; // Loop over the entries in the clones array or the STL container.; // for (Int_t k = 0; k < narr; ++k) {; // Get the counter for the varying length array.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:36,polymorphi,polymorphic,36,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['polymorphi'],['polymorphic']
Modifiability,// -- The lifetime of a temporary bound to the returned value in a; // function return statement is not extended; the temporary is; // destroyed at the end of the full-expression in the return statement.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:104,extend,extended,104,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['extend'],['extended']
Modifiability,"// -- We are a varying-length array of objects.; // Note: Polymorphism is not allowed here.; // Allocate a new array of objects to read into.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:58,Polymorphi,Polymorphism,58,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,4,['Polymorphi'],['Polymorphism']
Modifiability,"// -- We are a varying-length array of objects.; // Write the entire array of objects to the buffer.; // Note: Polymorphism is not allowed here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:111,Polymorphi,Polymorphism,111,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,2,['Polymorphi'],['Polymorphism']
Modifiability,"// -- We are a varying-length array of pointers to objects.; // Note: The object pointers are allowed to be polymorphic.; // Allocate a new array of pointers to objects to read into.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:108,polymorphi,polymorphic,108,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,4,['polymorphi'],['polymorphic']
Modifiability,"// -- We are a varying-length array of pointers to objects.; // Write the entire array of object pointers to the buffer.; // Note: The object pointers are allowed to be polymorphic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:169,polymorphi,polymorphic,169,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,2,['polymorphi'],['polymorphic']
Modifiability,"// -- We are splitting a non-TClonesArray (may inherit from TClonesArray though), non-STL container object.; //; // Ignore an abstract class.; // FIXME: How could an abstract class get here?; // Partial answer: It is a base class. But this is a data member!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:47,inherit,inherit,47,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['inherit'],['inherit']
Modifiability,"// -- We do not have a pointer to a varying-length array.; // Error(""WriteBufferAux"", ""The pointer to element %s::%s type %d (%s) is null\n"", GetName(), aElement->GetFullName(), compinfo[i]->fType, aElement->GetTypeName());; // ::ErrorHandler(kError, ""::WriteStreamerLoop"", Form(""The pointer to element %s::%s type %d (%s) is null\n"", config->fInfo->GetName(), config->fCompInfo->fElem->GetFullName(), config->fCompInfo->fType, config->fCompInfo->fElem->GetTypeName()));",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:335,config,config,335,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,4,['config'],['config']
Modifiability,"// -- We do not have a pointer to a varying-length array.; //Error(""WriteBufferAux"", ""The pointer to element %s::%s type %d (%s) is null\n"", GetName(), aElement->GetFullName(), compinfo[i]->fType, aElement->GetTypeName());; // ::ErrorHandler(kError, ""::WriteTextStreamerLoop"", Form(""The pointer to element %s::%s type %d (%s) is null\n"", config->fInfo->GetName(), config->fCompInfo->fElem->GetFullName(), config->fCompInfo->fType, config->fCompInfo->fElem->GetTypeName()));",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:338,config,config,338,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,4,['config'],['config']
Modifiability,"// -- a temporary object; // -- a string literal; // -- the result of a typeid expression, or; // -- a predefined __func__ variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:123,variab,variable,123,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['variab'],['variable']
Modifiability,// -- the initializers of inline or templated variables,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp:46,variab,variables,46,interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,1,['variab'],['variables']
Modifiability,"// --- Dump contents of object build config ---",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:37,config,config,37,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['config'],['config']
Modifiability,"// --- Initialise GUI variables ---",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSVarious.cxx:22,variab,variables,22,test/periodic/XSVarious.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/periodic/XSVarious.cxx,1,['variab'],['variables']
Modifiability,"// --- Left vertical area; // File Browser plugin",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowser.cxx:43,plugin,plugin,43,gui/gui/src/TRootBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowser.cxx,1,['plugin'],['plugin']
Modifiability,"// --- Right bottom area; // Command plugin...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowser.cxx:37,plugin,plugin,37,gui/gui/src/TRootBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowser.cxx,1,['plugin'],['plugin']
Modifiability,// --- TypeSetByHwMode; // This is a parameterized type-set class. For each mode there is a list; // of types that are currently possible for a given tree node. Type; // inference will apply to each mode separately.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp:37,parameteriz,parameterized,37,interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp,1,['parameteriz'],['parameterized']
Modifiability,"// --- low level factory interface ---; // Create variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFactoryWSTool.h:50,variab,variables,50,roofit/roofitcore/inc/RooFactoryWSTool.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooFactoryWSTool.h,1,['variab'],['variables']
Modifiability,// --- vectorization state --- //; /// Holds the primary induction variable. This is the counter of the; /// loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h:67,variab,variable,67,interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Vectorize/LoopVectorizationLegality.h,1,['variab'],['variable']
Modifiability,"// ---- perform series of fits to achieve best convergence; // ""m_ga_spread"" times the number of variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticFitter.cxx:97,variab,variables,97,tmva/tmva/src/GeneticFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/GeneticFitter.cxx,1,['variab'],['variables']
Modifiability,"// ----- signature of a minimizer -------------; // class Minimizer; // {; // public:; // template <typename Function, typename Variables, typename PassThrough>; // double operator() (Function& fnc, Variables& vars, PassThrough& passThrough); // {; // // auto itVars = begin (vars);; // // auto itVarsEnd = end (vars);; // std::vector<double> myweights;; // std::vector<double> gradients;; // double value = fnc (passThrough, myweights);; // value = fnc (passThrough, myweights, gradients);; // return value;; // }; // };; ///< list all the minimizer types",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h:128,Variab,Variables,128,tmva/tmva/inc/TMVA/NeuralNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/NeuralNet.h,2,['Variab'],['Variables']
Modifiability,"// ---------- Transformation functions for event variables into foam boundaries; // reason: foam always has boundaries [0, 1]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoam.h:49,variab,variables,49,tmva/tmva/inc/TMVA/PDEFoam.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/PDEFoam.h,1,['variab'],['variables']
Modifiability,"// ---------- protected accessors -------------------------------------------; //TDirectory* LocalTDir() const { return Data().LocalRootDir(); }; // weight file name and directory (given by global config variable)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBase.h:197,config,config,197,tmva/tmva/inc/TMVA/MethodBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBase.h,2,"['config', 'variab']","['config', 'variable']"
Modifiability,"// ---------- protected event and tree accessors -----------------------------; // names of input variables (if the original names are expressions, they are; // transformed into regexps)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBase.h:98,variab,variables,98,tmva/tmva/inc/TMVA/MethodBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBase.h,1,['variab'],['variables']
Modifiability,"// ---------- public evaluation methods --------------------------------------; // individual initialization for testing of each method; // overload this one for individual initialisation of the testing,; // it is then called automatically within the global ""TestInit""; // variables (and private member functions) for the Evaluation:; // get the efficiency. It fills a histogram for efficiency/vs/bkg; // and returns the one value fo the efficiency demanded for; // in the TString argument. (Watch the string format)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBase.h:273,variab,variables,273,tmva/tmva/inc/TMVA/MethodBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodBase.h,1,['variab'],['variables']
Modifiability,"// ----------------- Stmt traversal -----------------; //; // For stmts, we automate (in the DEF_TRAVERSE_STMT macro) iterating; // over the children defined in children() (every stmt defines these,; // though sometimes the range is empty). Each individual Traverse*; // method only needs to worry about children other than those. To see; // what children() does for a given class, see, e.g.,; // http://clang.llvm.org/doxygen/Stmt_8cpp_source.html; // This macro makes available a variable S, the passed-in stmt.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h:482,variab,variable,482,interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h,1,['variab'],['variable']
Modifiability,"// ----------------- Type traversal -----------------; // This macro makes available a variable T, the passed-in type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h:87,variab,variable,87,interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h,1,['variab'],['variable']
Modifiability,"// ----------------- TypeLoc traversal -----------------; // This macro makes available a variable TL, the passed-in TypeLoc.; // If requested, it calls WalkUpFrom* for the Type in the given TypeLoc,; // in addition to WalkUpFrom* for the TypeLoc itself, such that existing; // clients that override the WalkUpFrom*Type() and/or Visit*Type() methods; // continue to work.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h:90,variab,variable,90,interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/RecursiveASTVisitor.h,1,['variab'],['variable']
Modifiability,"// ---------------------------------------------------------------------------------------; // ----- methods related to the decoding of the input variable names ---------------------; // ---------------------------------------------------------------------------------------; ////////////////////////////////////////////////////////////////////////////////; /// decodes ""name1:name2:..."" form",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx:146,variab,variable,146,tmva/tmva/src/Reader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx,1,['variab'],['variable']
Modifiability,"// -----------------------------------------------------------------------------; // Class that describes an ACLE intrinsic implemented as a macro.; //; // This class is used when the intrinsic is polymorphic in 2 or 3 types, but we; // want to avoid a combinatorial explosion by reinterpreting the arguments to; // fixed types.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:197,polymorphi,polymorphic,197,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,1,['polymorphi'],['polymorphic']
Modifiability,"// -----------------------------------------------------------------------------; // Class to facilitate merging together the code generation for many intrinsics; // by means of varying a few constant or type parameters.; //; // Most obviously, the intrinsics in a single parametrised family will have; // code generation sequences that only differ in a type or two, e.g. vaddq_s8; // and vaddq_u16 will look the same apart from putting a different vector type; // in the call to CGM.getIntrinsic(). But also, completely different intrinsics; // will often code-generate in the same way, with only a different choice of; // _which_ IR intrinsic they lower to (e.g. vaddq_m_s8 and vmulq_m_s8), but; // marshalling the arguments and return values of the IR intrinsic in exactly; // the same way. And others might differ only in some other kind of constant,; // such as a lane index.; //; // So, when we generate the IR-building code for all these intrinsics, we keep; // track of every value that could possibly be pulled out of the code and; // stored ahead of time in a local variable. Then we group together intrinsics; // by textual equivalence of the code that would result if _all_ those; // parameters were stored in local variables. That gives us maximal sets that; // can be implemented by a single piece of IR-building code by changing; // parameter values ahead of time.; //; // After we've done that, we do a second pass in which we only allocate _some_; // of the parameters into local variables, by tracking which ones have the same; // values as each other (so that a single variable can be reused) and which; // ones are the same across the whole set (so that no variable is needed at; // all).; //; // Hence the class below. Its allocParam method is invoked during code; // generation by every method of a Result subclass (see below) that wants to; // give it the opportunity to pull something out into a switchable parameter.; // It returns a variable name for the parameter, or (if it",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:1076,variab,variable,1076,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,1,['variab'],['variable']
Modifiability,"// ----------------------------------------------------------------------------; //; // global/file scope variables; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:106,variab,variables,106,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,1,['variab'],['variables']
Modifiability,"// -----------------------------------------------------------------------; // First part of evaluation process; // --> compute efficiencies, and other separation estimators; // -----------------------------------------------------------------------; // although equal, we now want to separate the output for the variables; // and the real methods",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx:313,variab,variables,313,tmva/tmva/src/Classification.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx,2,['variab'],['variables']
Modifiability,"// -----------------------------------------------------------------------; // Second part of evaluation process; // --> compute correlations among MVAs; // --> compute correlations between input variables and MVA (determines importance); // --> count overlaps; // -----------------------------------------------------------------------",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx:196,variab,variables,196,tmva/tmva/src/Classification.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx,2,['variab'],['variables']
Modifiability,"// ----------------------------------------------------------------; // SceneInfo ... extended scene context",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLScene.h:86,extend,extended,86,graf3d/gl/inc/TGLScene.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLScene.h,1,['extend'],['extended']
Modifiability,"// ---; // the variable data; // ---",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSetInfo.h:15,variab,variable,15,tmva/tmva/inc/TMVA/DataSetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DataSetInfo.h,1,['variab'],['variable']
Modifiability,// --attribute=extended,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVOptions.h:15,extend,extended,15,interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Core/LVOptions.h,1,['extend'],['extended']
Modifiability,"// --no-sandbox is required to run chrome with super-user, but only in headless mode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebDisplayHandle.cxx:8,sandbox,sandbox,8,gui/webdisplay/src/RWebDisplayHandle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/webdisplay/src/RWebDisplayHandle.cxx,1,['sandbox'],['sandbox']
Modifiability,// -X / C --> X / -C (if the negation doesn't overflow).; // TODO: This could be enhanced to handle arbitrary vector constants by; // checking if all elements are not the min-signed-val.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp:81,enhance,enhanced,81,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineMulDivRem.cpp,1,['enhance'],['enhanced']
Modifiability,// -fencode-extended-block-signature=1 is default.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:12,extend,extended-block-signature,12,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['extend'],['extended-block-signature']
Modifiability,"// -ffp-eval-method options: double, extended, source",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:37,extend,extended,37,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['extend'],['extended']
Modifiability,"// -fobjc-infer-related-result-type is the default, except in the Objective-C; // rewriter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:82,rewrite,rewriter,82,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['rewrite'],['rewriter']
Modifiability,"// ... if it is a constexpr variable, or it is of reference type or of; // const-qualified integral or enumeration type, ...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp:28,variab,variable,28,interpreter/llvm-project/clang/lib/AST/Decl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp,1,['variab'],['variable']
Modifiability,"// ... or if we've seen variables with cleanup functions.; // We can't reason that we've seen every path in this case,; // and thus abandon reporting any warnings that imply that.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CalledOnceCheck.cpp:24,variab,variables,24,interpreter/llvm-project/clang/lib/Analysis/CalledOnceCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CalledOnceCheck.cpp,1,['variab'],['variables']
Modifiability,// .BTF generates FK_Data_4 relocations for variable; // offset in DataSec kind.; // The reloc symbol should be in data section.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/MCTargetDesc/BPFELFObjectWriter.cpp:44,variab,variable,44,interpreter/llvm-project/llvm/lib/Target/BPF/MCTargetDesc/BPFELFObjectWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/MCTargetDesc/BPFELFObjectWriter.cpp,1,['variab'],['variable']
Modifiability,"// // A two-vector template without TObject inheritance and virtual functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveVector.h:44,inherit,inheritance,44,graf3d/eve/inc/TEveVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveVector.h,1,['inherit'],['inheritance']
Modifiability,"// // Idea: need to cache this result!; // TStreamerInfo *info = (TStreamerInfo*)config->fInfo;; // TStreamerElement *aElement = (TStreamerElement*)info->GetElem(config->fElemId);; //; // *Int_t clversion = ((TStreamerBase*)aElement)->Get BaseVersion();; // *TClass *cle = aElement->GetNewBaseClass();; // *(TSequence *actions = CreateReadMemberWiseActions( cle->GetStreamerInfo(clversion), ???? );; //; // TSequence *actions = CreateReadMemberWiseActions( ((TStreamerBase*)aElement)->GetBaseStreamerInfo(), ???? );; //; // actions->ReadBuffer(b,start,end);; // delete actions;; // const Int_t incr = ((TVectorLoopConfig*)loopconfig)->fIncrement;; // for(void *iter = start; iter != end; iter = (char*)iter + incr ); // {; // ((TStreamerInfo*)(((TStreamerBase*)aElement)->GetBaseStreamerInfo())->ReadBuffer(b,arr,-1,narr,ioffset,arrayMode);; //; // ((TStreamerInfo*)config->fInfo)->ReadBuffer(buf, (char**)&iter, config->fElemId, 1, config->fOffset, 1|2 );; // }",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:81,config,config,81,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,5,['config'],['config']
Modifiability,"// // configure TestStatSampler for the Null run; // int PreNullHook(RooArgSet *parameterPoint, double obsTestStat) const;; // // configure TestStatSampler for the Alt run; // int PreAltHook(RooArgSet *parameterPoint, double obsTestStat) const;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/AsymptoticCalculator.h:6,config,configure,6,roofit/roostats/inc/RooStats/AsymptoticCalculator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/AsymptoticCalculator.h,2,['config'],['configure']
Modifiability,"// // type of integration; // enum Type { NONADAPTIVE, ADAPTIVE, ADAPTIVESINGULAR } ;; /**; enumeration specifying the Gauss-KronRod integration rule for ADAPTIVE integration type; @ingroup Integration; */; // Gauss KronRod Adaptive rule",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/IntegrationTypes.h:55,ADAPT,ADAPTIVE,55,math/mathmore/inc/Math/IntegrationTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/IntegrationTypes.h,4,"['ADAPT', 'Adapt']","['ADAPTIVE', 'ADAPTIVESINGULAR', 'Adaptive']"
Modifiability,"// /Maybe/ we could do pointer type parameters, looking for the; // symbol in the ELF symbol table to get back to the variable...; // but probably not worth it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFTypePrinter.cpp:118,variab,variable,118,interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFTypePrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFTypePrinter.cpp,1,['variab'],['variable']
Modifiability,"// 0 Method; 1 Variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx:15,Variab,Variable,15,tmva/tmva/src/Classification.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Classification.cxx,2,['Variab'],['Variable']
Modifiability,"// 0 means the classic and 1 (default) - the adaptive strategy",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h:45,adapt,adaptive,45,proof/proofplayer/inc/TPacketizerAdaptive.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proofplayer/inc/TPacketizerAdaptive.h,2,['adapt'],['adaptive']
Modifiability,// 1 - single inheritance <name>; // H - multiple inheritance <name> <number>; // I - virtual inheritance <name> <number> <number>; // J - unspecified inheritance <name> <number> <number> <number>,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Demangle/MicrosoftDemangle.cpp:14,inherit,inheritance,14,interpreter/llvm-project/llvm/lib/Demangle/MicrosoftDemangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Demangle/MicrosoftDemangle.cpp,4,['inherit'],['inheritance']
Modifiability,"// 1. Build a list of reduction variables.; // void *RedList[<n>] = {<ReductionVars>[0], ..., <ReductionVars>[<n>-1]};",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:32,variab,variables,32,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,4,['variab'],['variables']
Modifiability,// 1. Extend the truncated value back to the same width as the Src.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:6,Extend,Extend,6,interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,1,['Extend'],['Extend']
Modifiability,"// 1. Get the expression containing @-s and get the variable addresses",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:52,variab,variable,52,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp,1,['variab'],['variable']
Modifiability,"// 100 ms; // From the man page from pthread_ond_timedwait:; // When using condition variables there is always a Boolean predicate; // involving shared variables associated with each condition wait that; // is true if the thread should proceed. Spurious wakeups from the; // pthread_cond_timedwait() or pthread_cond_wait() functions may occur.; // Since the return from pthread_cond_timedwait() or pthread_cond_wait(); // does not imply anything about the value of this predicate, the; // predicate should be re-evaluated upon such return.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx:85,variab,variables,85,core/thread/src/TThread.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TThread.cxx,2,['variab'],['variables']
Modifiability,"// 128 bytes of spill slots; // If there is a frame pointer, try using it.; // The FP is only available if there is no dynamic realignment. We; // don't know for sure yet whether we'll need that, so we guess based; // on whether there are any local variables that would trigger it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp:249,variab,variables,249,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RegisterInfo.cpp,1,['variab'],['variables']
Modifiability,"// 128 bytes of spill slots; // If there's a frame pointer and the addressing mode allows it, try using it.; // The FP is only available if there is no dynamic realignment. We; // don't know for sure yet whether we'll need that, so we guess based; // on whether there are any local variables that would trigger it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseRegisterInfo.cpp:282,variab,variables,282,interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseRegisterInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMBaseRegisterInfo.cpp,1,['variab'],['variables']
Modifiability,// 16-bit types are reported as legal for 32-bit registers. We need to; // extend and do a 32-bit copy to avoid the verifier complaining about it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUCallLowering.cpp:75,extend,extend,75,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUCallLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUCallLowering.cpp,1,['extend'],['extend']
Modifiability,"// 2) Find out if IV is an induction phi. Note that we can't use Loop; // helpers here to get the induction variable, because the hardware loop is; // no longer in loopsimplify form, and also the hwloop intrinsic uses a; // different counter. Using SCEV, we check that the induction is of the; // form i = i + 4, where the increment must be equal to the VectorWidth.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVETailPredication.cpp:108,variab,variable,108,interpreter/llvm-project/llvm/lib/Target/ARM/MVETailPredication.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVETailPredication.cpp,1,['variab'],['variable']
Modifiability,// 2) containing the (relocated) offset of the TLS variable; // within the module's TLS block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp:51,variab,variable,51,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,1,['variab'],['variable']
Modifiability,// 2*extend/vpsravd/pack sequence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp:5,extend,extend,5,interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp,1,['extend'],['extend']
Modifiability,// 2*extend/vpsrlvd/pack sequence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp:5,extend,extend,5,interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86TargetTransformInfo.cpp,2,['extend'],['extend']
Modifiability,// 2.10.6: threadprivate variable cannot appear in a declare target; // directive.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:25,variab,variable,25,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,"// 2.3 Create a variable from LifetimeHandler.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:16,variab,variable,16,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp,1,['variab'],['variable']
Modifiability,"// 2.4 Call the best-match constructor. The method does overload; // resolution of the constructors and then initializes the new; // variable with it",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp:133,variab,variable,133,interpreter/cling/lib/Interpreter/DynamicLookup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DynamicLookup.cpp,1,['variab'],['variable']
Modifiability,"// 256-bit horizontal instructions operate on 128-bit chunks rather than; // across the whole vector, so we need an extract + hop preliminary stage.; // This is the only step where the operands of the hop are not the same value.; // TODO: We could extend this to handle 512-bit or even longer vectors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:248,extend,extend,248,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['extend'],['extend']
Modifiability,"// 2==ExtendedWings",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:6,Extend,ExtendedWings,6,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['Extend'],['ExtendedWings']
Modifiability,"// 2D Variable bins test",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:6,Variab,Variable,6,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,1,['Variab'],['Variable']
Modifiability,"// 3-op Variable Permute (VPERMT2).; // Res = VPERMV3 V0, MaskV, V1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.h:8,Variab,Variable,8,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.h,1,['Variab'],['Variable']
Modifiability,// 32-bit SVR4 ABI Stack Frame Layout:; // +-----------------------------------+; // +--> | Back chain |; // | +-----------------------------------+; // | | Floating-point register save area |; // | +-----------------------------------+; // | | General register save area |; // | +-----------------------------------+; // | | CR save word |; // | +-----------------------------------+; // | | VRSAVE save word |; // | +-----------------------------------+; // | | Alignment padding |; // | +-----------------------------------+; // | | Vector register save area |; // | +-----------------------------------+; // | | Local variable space |; // | +-----------------------------------+; // | | Parameter list area |; // | +-----------------------------------+; // | | LR save word |; // | +-----------------------------------+; // SP--> +--- | Back chain |; // +-----------------------------------+; //; // Specifications:; // System V Application Binary Interface PowerPC Processor Supplement; // AltiVec Technology Programming Interface Manual,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:622,variab,variable,622,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['variab'],['variable']
Modifiability,// 32-bit signed integer constant for use with sign-extending x86_64; // instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp:52,extend,extending,52,interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp,1,['extend'],['extending']
Modifiability,// 32-bit signed. Unlike FK_Data_4; // this will be sign extended at; // runtime.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86FixupKinds.h:57,extend,extended,57,interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86FixupKinds.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86FixupKinds.h,1,['extend'],['extended']
Modifiability,"// 32-bit so no special extended frame, create or reuse an existing; // stack slot.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:24,extend,extended,24,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['extend'],['extended']
Modifiability,// 32-bit unsigned integer constant for use with zero-extending; // x86_64 instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp:54,extend,extending,54,interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Targets/X86.cpp,1,['extend'],['extending']
Modifiability,// 32/64-bits needs support for s64/s128 to handle cases:; // s64 = EXTEND (G_IMPLICIT_DEF s32) -> s64 = G_IMPLICIT_DEF; // s128 = EXTEND (G_IMPLICIT_DEF s32/s64) -> s128 = G_IMPLICIT_DEF,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/GISel/X86LegalizerInfo.cpp:68,EXTEND,EXTEND,68,interpreter/llvm-project/llvm/lib/Target/X86/GISel/X86LegalizerInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/GISel/X86LegalizerInfo.cpp,2,['EXTEND'],['EXTEND']
Modifiability,"// 64 bit operations accept sign extended 32 bit immediates.; // 32 bit operations accept all 32 bit immediates, so we don't need to check; // them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp:33,extend,extended,33,interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InstrInfo.cpp,1,['extend'],['extended']
Modifiability,"// 64-bit Mersenne Twister by Matsumoto and Nishimura, 2000; // http://en.cppreference.com/w/cpp/numeric/random/mersenne_twister_engine; // This RNG is deterministically portable across C++11; // implementations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/RandomNumberGenerator.h:170,portab,portable,170,interpreter/llvm-project/llvm/include/llvm/Support/RandomNumberGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/RandomNumberGenerator.h,1,['portab'],['portable']
Modifiability,"// 8-, 16-, and 32-bit integer loads all implicitly zero-extend.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:57,extend,extend,57,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['extend'],['extend']
Modifiability,// 8-bit and 16-bit loads implicitly zero-extend to 32-bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:42,extend,extend,42,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['extend'],['extend']
Modifiability,"// 9. All type declarations (OpTypeXXX instructions), all constant; // instructions, and all global variable declarations. This section is; // the first section to allow use of: OpLine and OpNoLine debug information;; // non-semantic instructions with OpExtInst.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVAsmPrinter.cpp:100,variab,variable,100,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVAsmPrinter.cpp,1,['variab'],['variable']
Modifiability,// ::= v <digit> <source-name> # vendor extended operator,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h:40,extend,extended,40,interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,1,['extend'],['extended']
Modifiability,// <builtin-type> ::= u <source-name> # vendor extended type,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h:47,extend,extended,47,interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,1,['extend'],['extended']
Modifiability,"// <ctor-dtor-name> ::= C1 # complete object constructor; // ::= C2 # base object constructor; // ::= CI1 <type> # complete inheriting constructor; // ::= CI2 <type> # base inheriting constructor; //; // In addition, C5 is a comdat name with C1 and C2 in it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:124,inherit,inheriting,124,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,2,['inherit'],['inheriting']
Modifiability,"// <expression> ::= <unary operator-name> <expression>; // ::= <binary operator-name> <expression> <expression>; // ::= <trinary operator-name> <expression> <expression> <expression>; // ::= cv <type> expression # conversion with one argument; // ::= cv <type> _ <expression>* E # conversion with a different number of arguments; // ::= dc <type> <expression> # dynamic_cast<type> (expression); // ::= sc <type> <expression> # static_cast<type> (expression); // ::= cc <type> <expression> # const_cast<type> (expression); // ::= rc <type> <expression> # reinterpret_cast<type> (expression); // ::= st <type> # sizeof (a type); // ::= at <type> # alignof (a type); // ::= <template-param>; // ::= <function-param>; // ::= fpT # 'this' expression (part of <function-param>); // ::= sr <type> <unqualified-name> # dependent name; // ::= sr <type> <unqualified-name> <template-args> # dependent template-id; // ::= ds <expression> <expression> # expr.*expr; // ::= sZ <template-param> # size of a parameter pack; // ::= sZ <function-param> # size of a function parameter pack; // ::= u <source-name> <template-arg>* E # vendor extended expression; // ::= <expr-primary>; // <expr-primary> ::= L <type> <value number> E # integer literal; // ::= L <type> <value float> E # floating literal; // ::= L <type> <string type> E # string literal; // ::= L <nullptr type> E # nullptr literal ""LDnE""; // ::= L <pointer type> 0 E # null pointer template argument; // ::= L <type> <real-part float> _ <imag-part float> E # complex floating point literal (C99); not used by clang; // ::= L <mangled-name> E # external name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:1123,extend,extended,1123,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,1,['extend'],['extended']
Modifiability,"// <guard-name> ::= ?_B <postfix> @5 <scope-depth>; // ::= ?__J <postfix> @5 <scope-depth>; // ::= ?$S <guard-num> @ <postfix> @4IA; // The first mangling is what MSVC uses to guard static locals in inline; // functions. It uses a different mangling in external functions to support; // guarding more than 32 variables. MSVC rejects inline functions with more; // than 32 static locals. We don't fully implement the second mangling; // because those guards are not externally visible, and instead use LLVM's; // default renaming when creating a new guard variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/MicrosoftMangle.cpp:309,variab,variables,309,interpreter/llvm-project/clang/lib/AST/MicrosoftMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/MicrosoftMangle.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,"// <operator-name> ::= See parseOperatorEncoding(); // ::= li <source-name> # operator """"; // ::= v <digit> <source-name> # vendor extended operator",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h:131,extend,extended,131,interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,1,['extend'],['extended']
Modifiability,// <qualified-type> ::= <qualifiers> <type>; // <qualifiers> ::= <extended-qualifier>* <CV-qualifiers>; // <extended-qualifier> ::= U <source-name> [<template-args>] # vendor extended type qualifier,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h:66,extend,extended-qualifier,66,interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,3,['extend'],"['extended', 'extended-qualifier']"
Modifiability,// <special-name> ::= GV <object name> # Guard variable for one-time; // # initialization,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:47,variab,variable,47,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,1,['variab'],['variable']
Modifiability,// <special-name> ::= TV <type> # virtual table; // ::= TT <type> # VTT structure (construction vtable index); // ::= TI <type> # typeinfo structure; // ::= TS <type> # typeinfo name (null-terminated byte string); // ::= Tc <call-offset> <call-offset> <base encoding>; // # base is the nominal target function of thunk; // # first call-offset is 'this' adjustment; // # second call-offset is result adjustment; // ::= T <call-offset> <base encoding>; // # base is the nominal target function of thunk; // # Guard variable for one-time initialization; // ::= GV <object name>; // # No <type>; // ::= TW <object name> # Thread-local wrapper; // ::= TH <object name> # Thread-local initialization; // ::= GR <object name> _ # First temporary; // ::= GR <object name> <seq-id> _ # Subsequent temporaries; // # construction vtable for second-in-first; // extension ::= TC <first type> <number> _ <second type>; // extension ::= GR <object name> # reference temporary for object; // extension ::= GI <module name> # module global initializer,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h:513,variab,variable,513,interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,1,['variab'],['variable']
Modifiability,"// <tr><td> `DataError()` <td> Choose between:; /// - RooAbsData::Expected: Expected Poisson error (\f$ \sqrt{n_\text{expected}} \f$ from the PDF).; /// - RooAbsData::SumW2: The observed error from the square root of the sum of weights,; /// i.e., symmetric errors calculated with the standard deviation of a Poisson distribution.; /// - RooAbsData::Poisson: Asymmetric errors from the central 68 % interval around a Poisson distribution with mean \f$ n_\text{observed} \f$.; /// If for a given bin \f$ n_\text{expected} \f$ is lower than the \f$ n_\text{observed} \f$, the lower uncertainty is taken; /// (e.g., the difference between the mean and the 16 % quantile).; /// If \f$ n_\text{expected} \f$ is higher than \f$ n_\text{observed} \f$, the higher uncertainty is taken; /// (e.g., the difference between the 84 % quantile and the mean).; /// - RooAbsData::Auto (default): RooAbsData::Expected for unweighted data, RooAbsData::SumW2 for weighted data.; /// <tr><td>; /// `Extended()` <td> Use expected number of events of an extended p.d.f as normalization; /// <tr><td>; /// NumCPU() <td> Activate parallel processing feature; /// <tr><td>; /// Range() <td> Calculate \f$ \chi^2 \f$ only in selected region; /// <tr><td>; /// Verbose() <td> Verbose output of GOF framework; /// <tr><td>; /// IntegrateBins() <td> Integrate PDF within each bin. This sets the desired precision. Only useful for binned fits.; /// <tr><td> `SumCoefRange()` <td> Set the range in which to interpret the coefficients of RooAddPdf components; /// <tr><td> `SplitRange()` <td> Fit ranges used in different categories get named after the category.; /// Using `Range(""range""), SplitRange()` as switches, different ranges could be set like this:; /// ```; /// myVariable.setRange(""range_pi0"", 135, 210);; /// myVariable.setRange(""range_gamma"", 50, 210);; /// ```; /// <tr><td> `ConditionalObservables(Args_t &&... argsOrArgSet)` <td> Define projected observables.; /// Arguments can either be multiple RooRealVar or a si",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:1313,Extend,Extended,1313,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,"['Extend', 'extend']","['Extended', 'extended']"
Modifiability,// <type-encoding> ::= <storage-class> <variable-type>; // <storage-class> ::= 0 # private static member; // ::= 1 # protected static member; // ::= 2 # public static member; // ::= 3 # global; // ::= 4 # static local,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Demangle/MicrosoftDemangle.cpp:40,variab,variable-type,40,interpreter/llvm-project/llvm/lib/Demangle/MicrosoftDemangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Demangle/MicrosoftDemangle.cpp,1,['variab'],['variable-type']
Modifiability,// <type-encoding> ::= <storage-class> <variable-type>; // <storage-class> ::= 0 # private static member; // ::= 1 # protected static member; // ::= 2 # public static member; // ::= 3 # global; // ::= 4 # static local; // The first character in the encoding (after the name) is the storage class.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/MicrosoftMangle.cpp:40,variab,variable-type,40,interpreter/llvm-project/clang/lib/AST/MicrosoftMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/MicrosoftMangle.cpp,1,['variab'],['variable-type']
Modifiability,"// <type> ::= <builtin-type>; // <builtin-type> ::= v # void; // ::= w # wchar_t; // ::= b # bool; // ::= c # char; // ::= a # signed char; // ::= h # unsigned char; // ::= s # short; // ::= t # unsigned short; // ::= i # int; // ::= j # unsigned int; // ::= l # long; // ::= m # unsigned long; // ::= x # long long, __int64; // ::= y # unsigned long long, __int64; // ::= n # __int128; // ::= o # unsigned __int128; // ::= f # float; // ::= d # double; // ::= e # long double, __float80; // ::= g # __float128; // ::= g # __ibm128; // UNSUPPORTED: ::= Dd # IEEE 754r decimal floating point (64 bits); // UNSUPPORTED: ::= De # IEEE 754r decimal floating point (128 bits); // UNSUPPORTED: ::= Df # IEEE 754r decimal floating point (32 bits); // ::= Dh # IEEE 754r half-precision floating point (16 bits); // ::= DF <number> _ # ISO/IEC TS 18661 binary floating point type _FloatN (N bits);; // ::= Di # char32_t; // ::= Ds # char16_t; // ::= Dn # std::nullptr_t (i.e., decltype(nullptr)); // ::= [DS] DA # N1169 fixed-point [_Sat] T _Accum; // ::= [DS] DR # N1169 fixed-point [_Sat] T _Fract; // ::= u <source-name> # vendor extended type; //; // <fixed-point-size>; // ::= s # short; // ::= t # unsigned short; // ::= i # plain; // ::= j # unsigned; // ::= l # long; // ::= m # unsigned long",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:1124,extend,extended,1124,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,1,['extend'],['extended']
Modifiability,// <type> ::= U <source-name> <type> # vendor extended type qualifier; // (Until there's a standardized mangling...),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:46,extend,extended,46,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,1,['extend'],['extended']
Modifiability,"// <use> inherits width/height only to svg/symbol; // if there is no viewBox attribute, width/height don't have an effect; // in theory, the default value for width/height is 100%, but we currently don't support this",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:9,inherit,inherits,9,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['inherit'],['inherits']
Modifiability,"// <variable-type> ::= <type> <cvr-qualifiers>; // ::= <type> <pointee-cvr-qualifiers> # pointers, references",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Demangle/MicrosoftDemangle.cpp:4,variab,variable-type,4,interpreter/llvm-project/llvm/lib/Demangle/MicrosoftDemangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Demangle/MicrosoftDemangle.cpp,2,['variab'],['variable-type']
Modifiability,"// ======= evaluate all formulas =================; // first we check if some of the formulas are arrays; // This is the case when all inputs (variables, targets and spectetors are array and a TMVA event is not; // an event of the tree but an event + array index). In this case we set the flag haveAllArrayData = true; // Otherwise we support for arrays of variables where each; // element of the array corresponds to a different variable like in the case of image; // In that case the VAriableInfo has a bit, IsVariableFromArray that is set and we have a single formula for the array; // fInputFormulaTable contains a map of the formula and the variable index to evaluate the formula",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetFactory.cxx:143,variab,variables,143,tmva/tmva/src/DataSetFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataSetFactory.cxx,5,"['VAriab', 'variab']","['VAriableInfo', 'variable', 'variables']"
Modifiability,"// @(#)root/base:$Id$; // Author: Fons Rademakers 22/12/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TApplication; \ingroup Base. This class creates the ROOT Application Environment that interfaces; to the windowing system eventloop and eventhandlers.; This class must be instantiated exactly once in any given; application. Normally the specific application class inherits from; TApplication (see TRint).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx:693,inherit,inherits,693,core/base/src/TApplication.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx,1,['inherit'],['inherits']
Modifiability,"// @(#)root/base:$Id$; // Author: Fons Rademakers 26/1/2002; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TPluginManager; \ingroup Base. This class implements a plugin library manager. It keeps track of a list of plugin handlers. A plugin handler knows which plugin; library to load to get a specific class that is used to extend the; functionality of a specific base class and how to create an object; of this class. For example, to extend the base class TFile to be; able to read SQLite files one needs to load the plugin library; libRSQLite.so which defines the TRSQLiteServer class. This loading; should be triggered when a given URI contains a regular expression; defined by the handler. Plugin handlers can be defined via macros in a list of plugin; directories. With $ROOTSYS/etc/plugins the default top plugin; directory specified in $ROOTSYS/etc/system.rootrc. Additional; directories can be specified by adding them to the end of the list.; Macros for identical plugin handlers in later directories will; override previous ones (the inverse of normal search path behavior).; The macros must have names like `<BaseClass>/PX0_<PluginClass>.C`,; e.g. TSQLServer/P20_TMySQLServer.C, to allow easy sorting and grouping.; If the BaseClass is in a namespace the directory must have the name; NameSpace@@BaseClass as `:` is a reserved pathname character on some; operating systems. Macros not beginning with 'P' and ending with "".C""; are ignored. These macros typically look like:; ~~~ {.cpp}; void P10_TDCacheFile(); {; gPluginMgr->AddHandler(""TFile"", ""^dcache"", ""TDCacheFile"",; ""DCache"", ""TDCacheFile(const char*,Option_t*)"");; }; ~~~; Plugin handlers can also be defined v",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx:485,plugin,plugin,485,core/base/src/TPluginManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TPluginManager.cxx,7,"['extend', 'plugin']","['extend', 'plugin']"
Modifiability,"// @(#)root/base:$Id$; // Author: R. Hatcher 30/9/2001; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTimeStamp; \ingroup Base. The TTimeStamp encapsulates seconds and ns since EPOCH. This extends (and isolates) struct timespec; ~~~ {.cpp}; struct timespec; {; time_t tv_sec; // seconds; long tv_nsec; // nanoseconds; }; time_t seconds is relative to Jan 1, 1970 00:00:00 UTC; ~~~; No accounting of leap seconds is made. Due to ROOT/CINT limitations TTimeStamp does not explicitly; hold a timespec struct; attempting to do so means the Streamer; must be hand written. Instead we have chosen to simply contain; similar fields within the private area of this class. NOTE: the use of time_t (and its default implementation as a 32 int); implies overflow conditions occurs somewhere around; `Jan 18, 19:14:07, 2038`.; If this experiment is still going when it becomes significant; someone will have to deal with it.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx:513,extend,extends,513,core/base/src/TTimeStamp.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TTimeStamp.cxx,1,['extend'],['extends']
Modifiability,"// @(#)root/base:$Id$; // Author: Rene Brun 05/01/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TDatime; \ingroup Base. This class stores the date and time with a precision of one second; in an unsigned 32 bit word (950130 124559).; The date is stored with the origin being the 1st January 1995. This class has no support for time zones. The time is assumed; to be in the local time of the machine where the object was created.; As a result, TDatime objects are not portable between machines; operating in different time zones and unsuitable for storing the; date/time of data taking events and the like. If absolute time is; required, use TTimeStamp.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDatime.cxx:793,portab,portable,793,core/base/src/TDatime.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TDatime.cxx,1,['portab'],['portable']
Modifiability,"// @(#)root/base:$Id$; // Author: Rene Brun 26/12/94; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TObject; \ingroup Base. Mother of all ROOT objects. The TObject class provides default behaviour and protocol for all; objects in the ROOT system. It provides protocol for object I/O,; error handling, sorting, inspection, printing, drawing, etc.; Every object which inherits from TObject can be stored in the; ROOT collection classes. TObject's bits can be used as flags, bits 0 - 13 and 24-31 are; reserved as global bits while bits 14 - 23 can be used in different; class hierarchies (watch out for overlaps).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx:689,inherit,inherits,689,core/base/src/TObject.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TObject.cxx,1,['inherit'],['inherits']
Modifiability,"// @(#)root/base:$Id$; // Author: Timur Pocheptsov 20/3/2012; /*************************************************************************; * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TColorGradient; \ingroup Base; \ingroup GraphicsAtt. TColorGradient extends basic TColor.; Actually, this is not a simple color, but linear gradient + shadow; for filled area. By inheriting from TColor, gradients can be placed; inside gROOT's list of colors and use it in all TAttXXX descendants; without modifying any existing code. Shadow, of course, is not a property of any color, and gradient is; not, but this is the best way to add new attributes to filled area; without re-writing all the graphics code.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColorGradient.cxx:499,extend,extends,499,core/base/src/TColorGradient.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TColorGradient.cxx,2,"['extend', 'inherit']","['extends', 'inheriting']"
Modifiability,"// @(#)root/base:$Id$; // Authors: Fons Rademakers, Eddy Offermann Jan 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMatrixTCramerInv; \ingroup Matrix. TMatrixTCramerInv. Encapsulate templates of Cramer Inversion routines. The 4x4, 5x5 and 6x6 are adapted from routines written by; Mark Fischler and Steven Haywood as part of the CLHEP package. Although for sizes <= 6x6 the Cramer Inversion has a gain in speed; compared to factorization schemes (like LU) , one pays a price in; accuracy . For Example:; ~~~; H * H^-1 = U, where H is a 5x5 Hilbert matrix; U is a 5x5 Unity matrix. LU : |U_jk| < 10e-13 for j!=k; Cramer: |U_jk| < 10e-7 for j!=k; ~~~. however Cramer algorithm is about 10 (!) times faster; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTCramerInv.cxx:578,adapt,adapted,578,math/matrix/src/TMatrixTCramerInv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTCramerInv.cxx,1,['adapt'],['adapted']
Modifiability,"// @(#)root/base:$Id$; // Authors: Fons Rademakers, Eddy Offermann Oct 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMatrixTSymCramerInv; \ingroup Matrix. TMatrixTSymCramerInv. Encapsulate templates of Cramer Inversion routines. The 4x4, 5x5 and 6x6 are adapted from routines written by; Mark Fischler and Steven Haywood as part of the CLHEP package. Although for sizes <= 6x6 the Cramer Inversion has a gain in speed; compared to factorization schemes (like LU) , one pays a price in; accuracy . For Example:; ~~~; H * H^-1 = U, where H is a 5x5 Hilbert matrix; U is a 5x5 Unity matrix. LU : |U_jk| < 10e-13 for j!=k; Cramer: |U_jk| < 10e-7 for j!=k; ~~~. however Cramer algorithm is about 10 (!) times faster; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSymCramerInv.cxx:584,adapt,adapted,584,math/matrix/src/TMatrixTSymCramerInv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/matrix/src/TMatrixTSymCramerInv.cxx,1,['adapt'],['adapted']
Modifiability,"// @(#)root/base:$Id$; // Authors: Rene Brun 08/02/2007; /*************************************************************************; * Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** TMath Base functions; \ingroup Base. Define the functions Min, Max, Abs, Sign, Range for all types.; NB: These functions are unfortunately not available in a portable; way in std::. More functions are defined in TMath.h. TMathBase.h is designed to be; a stable file and used in place of TMath.h in the ROOT miniCore.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMathBase.cxx:577,portab,portable,577,core/base/src/TMathBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TMathBase.cxx,1,['portab'],['portable']
Modifiability,"// @(#)root/base:$Id: 0daf41ec24086ee7af29fdc2f9f2f848b150dcc8 $; // Author: Fons Rademakers 22/09/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TEnv; \ingroup Base. The TEnv class reads config files, by default named `.rootrc`.; Three types of config files are read: global, user and local files. The; global file is `$ROOTSYS/etc/system<name>` (or `ROOTETCDIR/system<name>`); the user file is `$HOME/<name>` and the local file is `./<name>`.; By setting the shell variable `ROOTENV_NO_HOME=1` the reading of; the `$HOME/<name>` resource file will be skipped. This might be useful; in case the home directory resides on an auto-mounted remote file; system and one wants to avoid this file system from being mounted. The format of the `.rootrc` file is similar to the `.Xdefaults` format:; ~~~ {.cpp}; [+]<SystemName>.<RootName|ProgName>.<name>[(type)]: <value>; ~~~; Where `<SystemName>` is either Unix, WinNT, MacOS or Vms,; `<RootName>` the name as given in the TApplication ctor (or ""RootApp""; in case no explicit TApplication derived object was created),; `<ProgName>` the current program name and `<name>` the resource name,; with optionally a type specification. `<value>` can be either a; string, an integer, a float/double or a boolean with the values; TRUE, FALSE, ON, OFF, YES, NO, OK, NOT. Booleans will be returned as; an integer 0 or 1. The options [+] allows the concatenation of; values to the same resource name. E.g.:; ~~~ {.cpp}; Unix.Rint.Root.DynamicPath: .:$(ROOTSYS)/lib:~/lib; myapp.Root.Debug: FALSE; TH.Root.Debug: YES; *.Root.ObjStat: 1; ~~~; `<SystemName>` and `<ProgName>` or `<RootName>` may be the wildcard ""*"".; A # in the first column starts",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TEnv.cxx:514,config,config,514,core/base/src/TEnv.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TEnv.cxx,3,"['config', 'variab']","['config', 'variable']"
Modifiability,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 10/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class THashList; \ingroup Containers; THashList implements a hybrid collection class consisting of a; hash table and a list to store TObject's. The hash table is used for; quick access and lookup of objects while the list allows the objects; to be ordered. The hash value is calculated using the value returned; by the TObject's Hash() function. Each class inheriting from TObject; can override Hash() as it sees fit.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx:780,inherit,inheriting,780,core/cont/src/THashList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashList.cxx,1,['inherit'],['inheriting']
Modifiability,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 10/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TList; \ingroup Containers; A doubly linked list. All classes inheriting from TObject can be; inserted in a TList. Before being inserted into the list the object; pointer is wrapped in a TObjLink object which contains, besides; the object pointer also a previous and next pointer. There are several ways to iterate over a TList; in order of preference, if; not forced by other constraints:. 1. (Preferred way) Using the C++ range-based `for` or `begin()` / `end()`:; ~~~ {.cpp}; for(TObject *obj: *GetListOfPrimitives()); obj->Write();; ~~~; 2. Using the R__FOR_EACH macro:; ~~~ {.cpp}; GetListOfPrimitives()->R__FOR_EACH(TObject,Paint)(option);; ~~~; 3. Using the TList iterator TListIter (via the wrapper class TIter):; ~~~ {.cpp}; TIter next(GetListOfPrimitives());; while (TObject *obj = next()); obj->Draw(next.GetOption());; ~~~; 4. Using the TList iterator TListIter and std::for_each algorithm:; ~~~ {.cpp}; // A function object, which will be applied to each element; // of the given range.; struct STestFunctor {; bool operator()(TObject *aObj) {; ...; return true;; }; }; ...; ...; TIter iter(mylist);; for_each( iter.Begin(), TIter::End(), STestFunctor() );; ~~~; 5. Using the TObjLink list entries (that wrap the TObject*):; ~~~ {.cpp}; TObjLink *lnk = GetListOfPrimitives()->FirstLink();; while (lnk) {; lnk->GetObject()->Draw(lnk->GetOption());; lnk = lnk->Next();; }; ~~~; 6. Using the TList's After() and Before() member functions:; ~~~ {.cpp}; TFree *idcur = this;; while (idcur) {; ...; ...; idcur = (TFree*)GetListOfFree()->After(idcur);; }; ~~~; Metho",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx:491,inherit,inheriting,491,core/cont/src/TList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TList.cxx,1,['inherit'],['inheriting']
Modifiability,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 10/10/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TBtree; \ingroup Containers; B-tree class. TBtree inherits from the TSeqCollection ABC. ## B-tree Implementation notes. This implements B-trees with several refinements. Most of them can be found; in Knuth Vol 3, but some were developed to adapt to restrictions imposed; by C++. First, a restatement of Knuth's properties that a B-tree must; satisfy, assuming we make the enhancement he suggests in the paragraph; at the bottom of page 476. Instead of storing null pointers to non-existent; nodes (which Knuth calls the leaves) we utilize the space to store keys.; Therefore, what Knuth calls level (l-1) is the bottom of our tree, and; we call the nodes at this level LeafNodes. Other nodes are called InnerNodes.; The other enhancement we have adopted is in the paragraph at the bottom of; page 477: overflow control. The following are modifications of Knuth's properties on page 478:. 1. Every InnerNode has at most Order keys, and at most Order+1 sub-trees.; 2. Every LeafNode has at most 2*(Order+1) keys.; 3. An InnerNode with k keys has k+1 sub-trees.; 4. Every InnerNode that is not the root has at least InnerLowWaterMark keys.; 5. Every LeafNode that is not the root has at least LeafLowWaterMark keys.; 6. If the root is a LeafNode, it has at least one key.; 7. If the root is an InnerNode, it has at least one key and two sub-trees.; 8. All LeafNodes are the same distance from the root as all the other; LeafNodes.; 9. For InnerNode n with key n[i].key, then sub-tree n[i-1].tree contains; all keys < n[i].key, and sub-tree n[i].tree contains all keys; >= n[i",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx:479,inherit,inherits,479,core/cont/src/TBtree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBtree.cxx,3,"['adapt', 'enhance', 'inherit']","['adapt', 'enhancement', 'inherits']"
Modifiability,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 12/11/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMap; \ingroup Containers; TMap implements an associative array of (key,value) pairs using a; THashTable for efficient retrieval (therefore TMap does not conserve; the order of the entries). The hash value is calculated; using the value returned by the keys Hash() function and the; key comparison is done via the IsEqual() function.; Both key and value must inherit from TObject.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx:788,inherit,inherit,788,core/cont/src/TMap.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TMap.cxx,1,['inherit'],['inherit']
Modifiability,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 13/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TCollection; \ingroup Containers; Collection abstract base class. This class describes the base; protocol all collection classes have to implement. The ROOT; collection classes always store pointers to objects that inherit; from TObject. They never adopt the objects. Therefore, it is the; user's responsibility to take care of deleting the actual objects; once they are not needed anymore. In exceptional cases, when the; user is 100% sure nothing else is referencing the objects in the; collection, one can delete all objects and the collection at the; same time using the Delete() function. Collections can be iterated using an iterator object (see; TIterator). Depending on the concrete collection class there may be; some additional methods of iterating. See the respective classes. TCollection inherits from TObject since we want to be able to have; collections of collections. In a later release the collections may become templatized.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx:644,inherit,inherit,644,core/cont/src/TCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TCollection.cxx,2,['inherit'],"['inherit', 'inherits']"
Modifiability,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 14/09/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TSortedList; \ingroup Containers; A sorted doubly linked list. All sortable classes inheriting from; TObject can be inserted in a TSortedList.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TSortedList.cxx:513,inherit,inheriting,513,core/cont/src/TSortedList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TSortedList.cxx,1,['inherit'],['inheriting']
Modifiability,"// @(#)root/cont:$Id$; // Author: Fons Rademakers 27/09/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class THashTable; \ingroup Containers; THashTable implements a hash table to store TObject's. The hash; value is calculated using the value returned by the TObject's; Hash() function. Each class inheriting from TObject can override; Hash() as it sees fit. THashTable does not preserve the insertion order of the objects.; If the insertion order is important AND fast retrieval is needed; use THashList instead.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx:618,inherit,inheriting,618,core/cont/src/THashTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/THashTable.cxx,1,['inherit'],['inheriting']
Modifiability,"// @(#)root/cont:$Id$; // Author: Philippe Canal 05/02/2001; // Feb 5 2001: Creation; // Feb 6 2001: Changed all int to unsigned int.; /** \class TBits; \ingroup Containers; Container of bits. This class provides a simple container of bits.; Each bit can be set and tested via the functions SetBitNumber and; TestBitNumber. The default value of all bits is kFALSE.; The size of the container is automatically extended when a bit; number is either set or tested. To reduce the memory size of the; container use the Compact function, this will discard the memory; occupied by the upper bits that are 0.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx:409,extend,extended,409,core/cont/src/TBits.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/cont/src/TBits.cxx,1,['extend'],['extended']
Modifiability,"// @(#)root/core/meta:$Id$e; // Author: Vassil Vassilev 13/03/2013; /*******************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; ******************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; // //; // Class representing a value coming from cling. Its main use case //; // is to TCallFunc. When TCallFunc returns by-value, i.e. a temporary //; // variable, its lifetime has to be extended. TClingValue provides a //; // way to extend the temporaries lifetime and gives the user to control it. //; // //; // The class is used to hide the implementation details of //; // cling::Value. //; // //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingValue.h:674,variab,variable,674,core/metacling/src/TClingValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingValue.h,3,"['extend', 'variab']","['extend', 'extended', 'variable']"
Modifiability,"// @(#)root/core/meta:$Id$e; // Author: Vassil Vassilev 13/03/2013; /*******************************************************************************; * Copyright (C) 1995-2013, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; ******************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; // //; // Class representing a value coming from the interpreter. Its main use case //; // is to TCallFunc. When TCallFunc returns by-value, i.e. a temporary //; // variable, its lifetime has to be extended. TInterpreterValue provides a //; // way to extend the temporaries lifetime and gives the user to control it. //; // //; // The class needs to be derived from for the actual interpreter, //; // see TClingValue. //; // //; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreterValue.h:684,variab,variable,684,core/meta/inc/TInterpreterValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/inc/TInterpreterValue.h,3,"['extend', 'variab']","['extend', 'extended', 'variable']"
Modifiability,"// @(#)root/core/utils:$Id: VariableSelectionRule.cxx 41697 2011-11-01 21:03:41Z pcanal $; // Author: Velislava Spasova September 2010; /*************************************************************************; * Copyright (C) 1995-2011, Rene Brun, Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // VariableSelectionRule //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/VariableSelectionRule.cxx:28,Variab,VariableSelectionRule,28,core/dictgen/src/VariableSelectionRule.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/VariableSelectionRule.cxx,2,['Variab'],['VariableSelectionRule']
Modifiability,"// @(#)root/core/utils:$Id: VariableSelectionRule.h 28529 2009-05-11 16:43:35Z pcanal $; // Author: Velislava Spasova September 2010; /*************************************************************************; * Copyright (C) 1995-2011, Rene Brun, Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/VariableSelectionRule.h:28,Variab,VariableSelectionRule,28,core/dictgen/res/VariableSelectionRule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/VariableSelectionRule.h,1,['Variab'],['VariableSelectionRule']
Modifiability,"// @(#)root/eg:$Id$; // Author: Ola Nordmann 21/09/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGenerator; \ingroup eg. The interface to various event generators. Is an base class, that defines the interface of ROOT to various ; event generators. Every event generator should inherit from ; TGenerator or its subclasses. ; ; Derived class can overload the member function GenerateEvent ; to do the actual event generation (e.g., call PYEVNT or similar). ; ; The derived class should overload the member function ; ImportParticles (both types) to read the internal storage of the ; generated event into either the internal TObjArray or the passed ; TClonesArray of TParticles. ; ; If the generator code stores event data in the /HEPEVT/ common block ; Then the default implementation of ImportParticles should suffice. ; The common block /HEPEVT/ is structed like ; ; \verbatim; // C ; typedef struct { ; Int_t nevhep; // Event number ; Int_t nhep; // # of particles ; Int_t isthep[4000]; // Status flag of i'th particle ; Int_t idhep[4000]; // PDG # of particle ; Int_t jmohep[4000][2]; // 1st & 2nd mother particle # ; Int_t jdahep[4000][2]; // 1st & 2nd daughter particle # ; Double_t phep[4000][5]; // 4-momentum and 1 word ; Double_t vhep[4000][4]; // 4-position of production ; } HEPEVT_DEF; ; ; ; C Fortran ; COMMON/HEPEVT/NEVHEP,NHEP,ISTHEP(4000),IDHEP(4000), ; + JMOHEP(2,4000),JDAHEP(2,4000),PHEP(5,4000),VHEP(4,4000) ; INTEGER NEVHEP,NHEP,ISTHEP,IDHEP,JMOHEP,JDAHEP ; DOUBLE PRECISION PHEP,VHEP ; \endverbatim. The generic member functions SetParameter and GetParameter can be; overloaded to set and get parameters of the event generator. Note, if the derived cl",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/src/TGenerator.cxx:605,inherit,inherit,605,montecarlo/eg/src/TGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/src/TGenerator.cxx,1,['inherit'],['inherit']
Modifiability,"// @(#)root/eg:$Id$; // Author: Ola Nordmann 21/09/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TGenerator //; // //; // Is an base class, that defines the interface of ROOT to various //; // event generators. Every event generator should inherit from //; // TGenerator or its subclasses. //; // //; // Derived class can overload the member function GenerateEvent //; // to do the actual event generation (e.g., call PYEVNT or similar). //; // //; // The derived class should overload the member function //; // ImportParticles (both types) to read the internal storage of the //; // generated event into either the internal TObjArray or the passed //; // TClonesArray of TParticles. //; // //; // If the generator code stores event data in the /HEPEVT/ common block //; // Then the default implementation of ImportParticles should suffice. //; // The common block /HEPEVT/ is structed like //; // //; // /* C */ //; // typedef struct { //; // Int_t nevhep; //; // Int_t nhep; //; // Int_t isthep[4000]; //; // Int_t idhep[4000]; //; // Int_t jmohep[4000][2]; //; // Int_t jdahep[4000][2]; //; // Double_t phep[4000][5]; //; // Double_t vhep[4000][4]; //; // } HEPEVT_DEF; //; // //; // //; // C Fortran //; // COMMON/HEPEVT/NEVHEP,NHEP,ISTHEP(4000),IDHEP(4000), //; // + JMOHEP(2,4000),JDAHEP(2,4000),PHEP(5,4000),VHEP(4,4000) //; // INTEGER NEVHEP,NHEP,ISTHEP,IDHEP,JMOHEP,JDAHEP //; // DOUBLE PRECISION PHEP,VHEP //; // //; // The generic member functions SetParameter and GetParameter can be //; // overloaded to set and get parameters of the event generator. //; // //; // Note, if the derived",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/TGenerator.h:642,inherit,inherit,642,montecarlo/eg/inc/TGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/montecarlo/eg/inc/TGenerator.h,1,['inherit'],['inherit']
Modifiability,"// @(#)root/foam:$Id$; // Author: S. Jadach <mailto:Stanislaw.jadach@ifj.edu.pl>, P.Sawicki <mailto:Pawel.Sawicki@ifj.edu.pl>; /** \class TFoam. TFoam is the main class of the multi-dimensional general purpose; Monte Carlo event generator (integrator) FOAM. ### FOAM Version 1.02M. \authors; S. Jadach and P.Sawicki; Institute of Nuclear Physics, Cracow, Poland; Stanislaw. Jadach@ifj.edu.pl, Pawel.Sawicki@ifj.edu.pl. ### What is FOAM for?. - Suppose you want to generate randomly points (vectors) according to; an arbitrary probability distribution in n dimensions,; for which you supply your own method. FOAM can do it for you!; Even if your distributions has quite strong peaks and is discontinuous!; - FOAM generates random points with weight one or with variable weight.; - FOAM is capable to integrate using efficient ""adaptive"" MC method.; (The distribution does not need to be normalized to one.). ### How does it work?. FOAM is the simplified version of the multi-dimensional general purpose; Monte Carlo event generator (integrator) FOAM.; It creates hyper-rectangular ""foam of cells"", which is more dense around its peaks.; See the following 2-dim. example of the map of 1000 cells for doubly peaked distribution:. \image html foam_MapCamel1000.png width=400. FOAM is now fully integrated with the ROOT package.; The important bonus of the ROOT use is persistency of the FOAM objects!. For more sophisticated problems full version of FOAM may be more appropriate:; See [full version of FOAM](http://jadach.home.cern.ch/jadach/Foam/Index.html). ### Simple example of the use of FOAM:. Begin_Macro(source); ../../../tutorials/foam/foam_kanwa.C; End_Macro. ### Canonical nine steering parameters of FOAM. | Name | default | Description |; |----------|----------|--------------------------------------------------------|; | kDim | 0 | Dimension of the integration space. Must be redefined! |; | nCells | 1000 | No of allocated number of cells, |; | nSampl | 200 | No. of MC events in the cell ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx:760,variab,variable,760,math/foam/src/TFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx,2,"['adapt', 'variab']","['adaptive', 'variable']"
Modifiability,"// @(#)root/geom:$Id$// Author: Andrei Gheata 24/10/01; // Contains() and DistFromOutside/Out() implemented by Mihaela Gheata; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGeoBBox; \ingroup Shapes_classes; \brief Box class. - [Building boxes](\ref GEOB00); - [Creation of boxes](\ref GEOB01); - [Divisions of boxes](\ref GEOB02). All shape primitives inherit from this, their; constructor filling automatically the parameters of the box that bounds; the given shape. Defined by 6 parameters :. ```; TGeoBBox(Double_t dx,Double_t dy,Double_t dz,Double_t *origin=0);; ```. - `fDX`, `fDY`, `fDZ` : half lengths on X, Y and Z axis; - `fOrigin[3]` : position of box origin. \anchor GEOB00; ### Building boxes. Normally a box has to be built only with 3 parameters: `DX,DY,DZ`; representing the half-lengths on X, Y and Z-axes. In this case, the; origin of the box will match the one of its reference frame and the box; will range from: `-DX` to `DX` on X-axis, from `-DY` to `DY` on Y and; from `-DZ` to `DZ` on Z. On the other hand, any other shape needs to; compute and store the parameters of their minimal bounding box. The; bounding boxes are essential to optimize navigation algorithms.; Therefore all other primitives derive from **`TGeoBBox`**. Since the; minimal bounding box is not necessary centered in the origin, any box; allows an origin translation `(Ox`,`Oy`,`Oz)`. All primitive; constructors automatically compute the bounding box parameters. Users; should be aware that building a translated box that will represent a; primitive shape by itself would affect any further positioning of other; shapes inside. Therefore it is highly recommendable to build; non-tran",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx:676,inherit,inherit,676,geom/geom/src/TGeoBBox.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/src/TGeoBBox.cxx,1,['inherit'],['inherit']
Modifiability,"// @(#)root/gpad:$Id$; // Author: Nenad Buncic 20/02/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TControlBar; \ingroup gpad. A Control Bar is a fully user configurable tool which provides fast; access to frequently used operations. The user can choose between; buttons and drawn buttons (let's say icons) and assign to them their; own actions (let's say ROOT or C++ commands). The macro below shows an example of control bar.; To execute an item, click with the left mouse button.; To see the HELP of a button, click on the right mouse button. You have access to the last clicked button via the method; GetClicked(). For example, bar->GetClicked()->GetName(); will return the name of the last clicked button. ~~~ {.cpp}; {; // run macro from tutorials directory of ROOT!; TControlBar bar(""vertical"");; bar.AddButton(""Help to run demos"","".x demoshelp.C"",; ""Explains how to run the demos"");; bar.AddButton(""framework"", "".x graphics/framework.C"",; ""An Example of Object Oriented User Interface"");; bar.AddButton(""hsimple"", "".x hsimple.C"",; ""An Example Creating Histograms/Ntuples on File"");; bar.AddButton(""hsum"", "".x hist/hsum.C"",; ""Filling histograms and some graphics options"");; bar.AddButton(""canvas"", "".x graphics/canvas.C"",; ""Canvas and Pad Management"");; bar.AddButton(""formula1"", "".x graphics/formula1.C"",; ""Simple Formula and Functions"");; bar.AddButton(""fillrandom"", "".x hist/fillrandom.C"",; ""Histograms with Random Numbers from a Function"");; bar.AddButton(""fit1"", "".x fit/fit1.C"",; ""A Simple Fitting Example"");; bar.AddButton(""draw2dopt"", "".x hist/draw2dopt.C"",; ""Drawing Options for 2D Histograms"");; bar.AddButton(""graph"", "".x graphs/graph.C"",; ""Examples of a ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TControlBar.cxx:484,config,configurable,484,graf2d/gpad/src/TControlBar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TControlBar.cxx,1,['config'],['configurable']
Modifiability,"// @(#)root/graf2d:$Id$; // Author: Claudi Martinez, July 19th 2010; /*************************************************************************; * Copyright (C) 1995-2010, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /// \defgroup fitsio FITS file; /// \brief Interface to FITS file.; /// \ingroup Graphics2D; ///; /// TFITS is an interface that lets you reading Flexible Image Transport System; /// (FITS) files, which are generally used in astronomy. This file format; /// was standardized 1981 and today is still widely used among professional; /// and amateur astronomers. FITS is not only an image file, but also; /// it can contain spectrums, data tables, histograms, and multidimensional; /// data. Furthermore, FITS data can be described itself by containing; /// human-readable information that let us to interpret the data within; /// the FITS file. For example, a FITS could contain a 3D data cube,; /// but an additional description would tell us that we must read it, for; /// example, as a 3-layer image.; ///; /// TFITS requires CFITSIO library to be installed on your system. It; /// is currently maintained by NASA/GSFC and can be downloaded from; /// [NASA/GSFC web site](http://fits.gsfc.nasa.gov), as well as documentation.; ///; /// Using this interface is easy and straightforward. There is only 1 class; /// called ""TFITSHDU"" which has several methods to extract data from a; /// FITS file, more specifically, from an HDU within the file. An HDU, or; /// Header Data Unit, is a chunk of data with a header containing several; /// ""keyword = value"" tokens. The header describes the structure of data; /// within the HDU. An HDU can be of two types: an ""image HDU"" or a ""table; /// HDU"". The former can be any kind of multidimensional array of real numbers,; /// by whic",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx:573,Flexible,Flexible,573,graf2d/fitsio/src/TFITS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx,1,['Flexible'],['Flexible']
Modifiability,"// @(#)root/graf:$Id$; // Author: Otto Schaile 20/11/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TCurlyArc; \ingroup BasicGraphics. Implements curly or wavy arcs used to draw Feynman diagrams. Amplitudes and wavelengths may be specified in the constructors,; via commands or interactively from popup menus.; The class make use of TCurlyLine by inheritance, ExecuteEvent methods; are highly inspired from the methods used in TPolyLine and TArc.; The picture below has been generated by the tutorial feynman. Begin_Macro(source); ../../../tutorials/graphics/feynman.C; End_Macro; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCurlyArc.cxx:673,inherit,inheritance,673,graf2d/graf/src/TCurlyArc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCurlyArc.cxx,1,['inherit'],['inheritance']
Modifiability,"// @(#)root/graf:$Id$; // Author: Otto Schaile 20/11/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TCurlyLine; \ingroup BasicGraphics. Implements curly or wavy polylines used to draw Feynman diagrams. Amplitudes and wavelengths may be specified in the constructors,; via commands or interactively from popup menus.; The class make use of TPolyLine by inheritance, ExecuteEvent methods; are highly inspired from the methods used in TPolyLine and TArc.; The picture below has been generated by the tutorial feynman. Begin_Macro(source); ../../../tutorials/graphics/feynman.C; End_Macro; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCurlyLine.cxx:678,inherit,inheritance,678,graf2d/graf/src/TCurlyLine.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/graf/src/TCurlyLine.cxx,1,['inherit'],['inheritance']
Modifiability,"// @(#)root/gui:$Id$; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGTextViewStream; \ingroup guiwidgets. A TGTextViewStream is a text viewer widget. It is a specialization; of TGTextView and std::ostream, and it uses a TGTextViewStreamBuf,; who inherits from std::streambuf, allowing to stream text directly; to the text view in a cout-like fashion. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextViewStream.cxx:570,inherit,inherits,570,gui/gui/src/TGTextViewStream.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGTextViewStream.cxx,1,['inherit'],['inherits']
Modifiability,"// @(#)root/gui:$Id$; // Author: Bertrand Bellenot 26/09/2007; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TRootBrowser; \ingroup guiwidgets. This class creates a ROOT object browser, constituted by three main tabs. All tabs can 'swallow' frames, thanks to the new method:; ExecPlugin(const char *name = 0, const char *fname = 0,; const char *cmd = 0, Int_t pos = kRight,; Int_t subpos = -1); allowing to select plugins (can be a macro or a command); to be executed, and where to embed the frame created by; the plugin (tab and tab element). ### Examples:. #### create a new browser:; ```; TBrowser b;; ```. #### create a new TCanvas in a new top right tab element:; ```; b.ExecPlugin(""Canvas"", 0, ""new TCanvas()"");; ```; #### create a new top right tab element embedding the TGMainFrame created by the macro 'myMacro.C':; ```; b.ExecPlugin(""MyPlugin"", ""myMacro.C"");; ```. #### create a new bottom tab element embedding the TGMainFrame created by the macro 'myMacro.C':; ```; b.ExecPlugin(""MyPlugin"", ""myMacro.C"", 0, TRootBrowser::kBottom);; ```. this browser implementation can be selected via the env; `Browser.Name` in `.rootrc`, (TRootBrowser or TRootBrowserLite); the default being TRootBrowserLite; a list of options (plugins) for the new TRootBrowser is also; specified via the env 'Browser.Options' in .rootrc, the default; being: FECI. Here is the list of available options:; - F: File browser; - E: Text Editor; - H: HTML browser C: Canvas I: I/O redirection; - P: Proof; - G: GL viewer. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowser.cxx:737,plugin,plugins,737,gui/gui/src/TRootBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowser.cxx,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"// @(#)root/gui:$Id$; // Author: David Gonzalez Maline 21/10/2008; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeInput; \ingroup fitpanel. Tree Input Dialog Widget. An dialog box that asks the user for the variables and cuts; of the selected tree in the fitpanel. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TTreeInput.cxx:534,variab,variables,534,gui/fitpanel/src/TTreeInput.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/fitpanel/src/TTreeInput.cxx,1,['variab'],['variables']
Modifiability,"// @(#)root/gui:$Id$; // Author: Fons Rademakers 05/01/98; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**************************************************************************. This source is based on Xclass95, a Win95-looking GUI toolkit.; Copyright (C) 1996, 1997 David Barth, Ricky Ralston, Hector Peraza. Xclass95 is free software; you can redistribute it and/or; modify it under the terms of the GNU Library General Public; License as published by the Free Software Foundation; either; version 2 of the License, or (at your option) any later version. **************************************************************************/; /** \class TGWidget; \ingroup guiwidgets. The widget base class. It is light weight (all inline service; methods) and is typically used as mixin class (via multiple; inheritance), see for example TGButton. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGWidget.cxx:1116,inherit,inheritance,1116,gui/gui/src/TGWidget.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGWidget.cxx,1,['inherit'],['inheritance']
Modifiability,"// @(#)root/gui:$Id: TGSpeedo.cxx; // Author: Bertrand Bellenot 26/10/06; /*************************************************************************; * Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGSpeedo; \ingroup guiwidgets. TGSpeedo is a widget looking like a speedometer, with a needle,; a counter and a small odometer window. Three thresholds are configurable, with their glowing color; A peak mark can be enabled, allowing to keep track of the highest; value displayed. The mark can be reset by right-clicking on the; widget. Two signals are available:; - OdoClicked(): when user click on the small odometer window; - LedClicked(): when user click on the small led near the counter. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGSpeedo.cxx:599,config,configurable,599,gui/gui/src/TGSpeedo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGSpeedo.cxx,1,['config'],['configurable']
Modifiability,"// @(#)root/hbook:$Id$; // Author: Rene Brun 18/02/2002; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class THbookFile; \ingroup Hist; This class is an interface to the Hbook objects in Hbook files.; Any Hbook object (1-D, 2-D, Profile, RWN or CWN can be read. NB: a THbookFile can only be used in READ mode; Use the utility in $ROOTSYS/bin/h2root to convert Hbook to Root. Example of use:. gSystem->Load(""libHbook"");; THbookFile f(""myfile.hbook"");; f.ls();; TH1F *h1 = (TH1F*)f.Get(1); //import histogram ID=1 in h1; h1->Fit(""gaus"");; THbookTree *T = (THbookTree*)f.Get(111); //import ntuple header; T->Print(); //show the Hbook ntuple variables; T->Draw(""x"",""y<0""); // as in normal TTree::Draw. THbookFile can be browsed via TBrowser.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hbook/src/THbookFile.cxx:955,variab,variables,955,hist/hbook/src/THbookFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hbook/src/THbookFile.cxx,1,['variab'],['variables']
Modifiability,"// @(#)root/hbook:$Id$; // Author: Rene Brun 18/02/2002; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class THbookTree; \ingroup Hist; A wrapper class supporting Hbook ntuples (CWN and RWN).; The normal TTree calls can be used, including TTree::Draw().; Data read directly from the Hbook file via THbookFile. IMPORTANT NOTE; When setting the branch address (via THbookTree::SetBranchAddress); for a branch in an Hbook block containing several names, eg; Hbook block SELEVN with the following variables:. ~~~; ******************************************************************; * 1 * R*4 * * * SELEVN * WGGS; * 2 * R*4 * * * SELEVN * AM12; * 3 * R*4 * * * SELEVN * AM34; * 4 * R*4 * * * SELEVN * AM14; * 5 * R*4 * * * SELEVN * AM32; * 6 * R*4 * * * SELEVN * PtPI(4); * 7 * R*4 * * * SELEVN * PHIPI(4); * 8 * R*4 * * * SELEVN * THTPI(4). one must define a C struct like:; struct {; Float_t Wggs;; Float_t Am12;; Float_t Am34;; Float_t Am14;; Float_t Am32;; Float_t Ptpi[4];; Float_t Phipi[4];; Float_t Thtpi[4];; } event;. and set ONLY the first variable address with:; h96->SetBranchAddress(""Wggs"",&event.Wggs);; ~~~; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hbook/src/THbookTree.cxx:810,variab,variables,810,hist/hbook/src/THbookTree.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hbook/src/THbookTree.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"// @(#)root/hist:$Id$; // Author: Christian Stratowa 30/09/2001; /*************************************************************************; * Copyright (C) 2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /******************************************************************************; * Copyright(c) 2001-2006, Dr. Christian Stratowa, Vienna, Austria. *; * Author: Christian Stratowa with help from Rene Brun. *; * *; * Algorithms for smooth regression adapted from: *; * R: A Computer Language for Statistical Data Analysis *; * *; ******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphSmooth.cxx:667,adapt,adapted,667,hist/hist/src/TGraphSmooth.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TGraphSmooth.cxx,1,['adapt'],['adapted']
Modifiability,"// @(#)root/hist:$Id$; // Author: Christian Stratowa 30/09/2001; /*************************************************************************; * Copyright (C) 2006, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /******************************************************************************; * Copyright(c) 2001-2006, Dr. Christian Stratowa, Vienna, Austria. *; * Author: Christian Stratowa with help from Rene Brun. *; * *; * Algorithms for smooth regression adapted from: *; * R: A Computer Language for Statistical Data Analysis *; ******************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphSmooth.h:667,adapt,adapted,667,hist/hist/inc/TGraphSmooth.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/inc/TGraphSmooth.h,1,['adapt'],['adapted']
Modifiability,// @(#)root/hist:$Id$; // Author: Christophe.Delaere@cern.ch 21/08/2002; ////////////////////////////////////////////////////////////////////////////////; /** \class TConfidenceLevel; \ingroup Hist; \brief Class to compute 95% CL limits; */; //////////////////////////////////////////////////////////////////////////////; /*************************************************************************; * C.Delaere *; * adapted from the mclimit code from Tom Junk *; * see http://cern.ch/thomasj/searchlimits/ecl.html *; *************************************************************************/,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TConfidenceLevel.cxx:415,adapt,adapted,415,hist/hist/src/TConfidenceLevel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TConfidenceLevel.cxx,1,['adapt'],['adapted']
Modifiability,"// @(#)root/hist:$Id$; // Author: Christophe.Delaere@cern.ch 21/08/2002; ///////////////////////////////////////////////////////////////////////////; //; // TLimit; //; // Class to compute 95% CL limits; //; // adapted from the mclimit code from Tom Junk (CLs method); // see http://root.cern/root/doc/TomJunk.pdf; // see http://cern.ch/thomasj/searchlimits/ecl.html; // see: Tom Junk,NIM A434, p. 435-443, 1999; //; // see also the following interesting references:; // Alex Read, ""Presentation of search results: the CLs technique""; // Journal of Physics G: Nucl. Part. Phys. 28 2693-2704 (2002).; // http://www.iop.org/EJ/abstract/0954-3899/28/10/313/; //; // A nice article is also available in the CERN yellow report with the proceeding; // of the 2000 CERN workshop on confidence intervals.; //; // Alex Read, ""Modified Frequentist Analysis of Search Results (The CLs Method)""; // CERN 2000-005 (30 May 2000); //; ///////////////////////////////////////////////////////////////////////////; /** \class TLimit; \legacy{TLimit, Consider switching to RooStats.}; \ingroup Hist; Algorithm to compute 95% CL limits using the Likelihood ratio semi-bayesian method. Implemented by C. Delaere from the mclimit code written by Tom Junk [HEP-EX/9902006].; See [http://cern.ch/thomasj/searchlimits/ecl.html](http://cern.ch/thomasj/searchlimits/ecl.html) for more details. It takes signal, background and data histograms wrapped in a; TLimitDataSource as input and runs a set of Monte Carlo experiments in; order to compute the limits. If needed, inputs are fluctuated according; to systematics. The output is a TConfidenceLevel. The class TLimitDataSource takes the signal, background and data histograms as well as different; systematics sources to form the TLimit input. The class TConfidenceLevel represents the final result of the TLimit algorithm. It is created just after the; time-consuming part and can be stored in a TFile for further processing.; It contains light methods to return CLs, CLb and ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TLimit.cxx:211,adapt,adapted,211,hist/hist/src/TLimit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TLimit.cxx,1,['adapt'],['adapted']
Modifiability,"// @(#)root/hist:$Id$; // Author: Frank Filthaut, Rene Brun 30/05/2007; /*************************************************************************; * Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TBinomialEfficiencyFitter; \ingroup Hist; \brief Binomial fitter for the division of two histograms. Use when you need to calculate a selection's efficiency from two histograms,; one containing all entries, and one containing the subset of these entries; that pass the selection, and when you have a parametrization available for; the efficiency as a function of the variable(s) under consideration. A very common problem when estimating efficiencies is that of error estimation:; when no other information is available than the total number of events N and; the selected number n, the best estimate for the selection efficiency p is n/N.; Standard binomial statistics dictates that the uncertainty (this presupposes; sufficiently high statistics that an approximation by a normal distribution is; reasonable) on p, given N, is; \f[; \sqrt{\frac{p(1-p)}{N}}; \f]; However, when p is estimated as n/N, fluctuations from the true p to its; estimate become important, especially for low numbers of events, and giving; rise to biased results. When fitting a parametrized efficiency, these problems can largely be overcome,; as a hypothesized true efficiency is available by construction. Even so, simply; using the corresponding uncertainty still presupposes that Gaussian errors; yields a reasonable approximation. When using, instead of binned efficiency; histograms, the original numerator and denominator histograms, a binned maximum; likelihood can be constructed as the product of bin-by-bin binomial probabilities; to select n out of N events. Assuming that",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBinomialEfficiencyFitter.cxx:808,variab,variable,808,hist/hist/src/TBinomialEfficiencyFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBinomialEfficiencyFitter.cxx,1,['variab'],['variable']
Modifiability,"// @(#)root/hist:$Id$; // Author: Lorenzo Moneta; /*************************************************************************; * Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /** \class TBackCompFitter; \ingroup Hist; \brief Backward compatible implementation of TVirtualFitter. Backward compatible implementation of TVirtualFitter using the; class ROOT::Fit::Fitter. This class is created after fitting an; histogram (TH1), TGraph or TTree and provides in addition to the; methods of the TVirtualFitter hooks to access the fit result class; (ROOT::Fit::FitResult), the fit configuration; (ROOT::Fit::FitConfig) or the fit data (ROOT::Fit::FitData) using. ~~~~~~~~{.cpp}; TBackCompFitter * fitter = (TBackCompFitter *) TVirtualFitter::GetFitter();; ROOT::Fit::FitResult & result = fitter->GetFitResult();; result.Print(std::cout);; ~~~~~~~~. Methods for getting the confidence level or contours are also; provided. Note that after a new calls to TH1::Fit (or similar) the; class will be deleted and all reference to the FitResult, FitConfig; or minimizer will be invalid. One could eventually copying the; class before issuing a new fit to avoid deleting this information.; */; //////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx:889,config,configuration,889,hist/hist/src/TBackCompFitter.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TBackCompFitter.cxx,1,['config'],['configuration']
Modifiability,"// @(#)root/histpainter:$Id$; // Author: Rene Brun, Evgueni Tcherniaev, Olivier Couet 12/12/94; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*! \class TPainter3dAlgorithms; \ingroup Histpainter; \brief The Legos and Surfaces painter class. 3D graphics representations package. This package was originally written by Evgueni Tcherniaev from IHEP/Protvino. The original Fortran implementation was adapted to HIGZ/PAW by Olivier Couet; and Evgueni Tcherniaev. This class is a subset of the original system. It has been converted to a C++; class by Rene Brun.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx:709,adapt,adapted,709,hist/histpainter/src/TPainter3dAlgorithms.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histpainter/src/TPainter3dAlgorithms.cxx,1,['adapt'],['adapted']
Modifiability,"// @(#)root/io:$Id$; // Author: Andreas Peters + Fons Rademakers + Rene Brun 26/5/2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \class TFileMerger TFileMerger.cxx; \ingroup IO. This class provides file copy and merging services. It can be used to copy files (not only ROOT files), using TFile or; any of its remote file access plugins. It is therefore useful in; a Grid environment where the files might be accessible only remotely.; The merging interface allows files containing histograms and trees; to be merged, like the standalone hadd program.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileMerger.cxx:650,plugin,plugins,650,io/io/src/TFileMerger.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileMerger.cxx,1,['plugin'],['plugins']
Modifiability,"// @(#)root/mathcore:$Id$; // Author: M. Slawinska 08/2007; /**********************************************************************; * *; * Copyright (c) 2007 , LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header source file for class AdaptiveIntegratorMultiDim",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h:301,Adapt,AdaptiveIntegratorMultiDim,301,math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h,1,['Adapt'],['AdaptiveIntegratorMultiDim']
Modifiability,"// @(#)root/mathcore:$Id$; // Authors: W. Brown, M. Fischler, L. Moneta 2005; /**********************************************************************; * *; * Copyright (c) 2005 , LCG ROOT MathLib Team and *; * FNAL LCG ROOT MathLib Team *; * *; * *; **********************************************************************/; // Header source file for class DisplacementVector3D; //; // Created by: Lorenzo Moneta at Mon May 30 12:21:43 2005; // Major rewrite: M. FIschler at Wed Jun 8 2005; //; // Last update: $Id$; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/DisplacementVector3D.h:449,rewrite,rewrite,449,math/genvector/inc/Math/GenVector/DisplacementVector3D.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/DisplacementVector3D.h,1,['rewrite'],['rewrite']
Modifiability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, 08/2007; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLMultiMinFunctionAdapter; //; // Generic adapter for gsl_multimin_function signature; // usable for any c++ class which defines operator( ); //; // Created by: Lorenzo Moneta at Fri Nov 12 16:58:51 2004; //; // Last update: Fri Nov 12 16:58:51 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMonteFunctionAdapter.h:1125,adapt,adapter,1125,math/mathmore/src/GSLMonteFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMonteFunctionAdapter.h,1,['adapt'],['adapter']
Modifiability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, 12/2006; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLMultiMinFunctionAdapter; //; // Generic adapter for gsl_multimin_function signature; // usable for any c++ class which defines operator( ); //; // Created by: Lorenzo Moneta at Fri Nov 12 16:58:51 2004; //; // Last update: Fri Nov 12 16:58:51 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiMinFunctionAdapter.h:1125,adapt,adapter,1125,math/mathmore/src/GSLMultiMinFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiMinFunctionAdapter.h,1,['adapt'],['adapter']
Modifiability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, A. Zsenei 08/2005; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLFunctionAdapter; //; // Generic adapter for gsl_function signature; // usable for any c++ class which defines operator( ); //; // Created by: Lorenzo Moneta at Fri Nov 12 16:58:51 2004; //; // Last update: Fri Nov 12 16:58:51 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLFunctionAdapter.h:1127,adapt,adapter,1127,math/mathmore/inc/Math/GSLFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/inc/Math/GSLFunctionAdapter.h,1,['adapt'],['adapter']
Modifiability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, Dec 2006; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLMultiMinFunctionAdapter; //; // Generic adapter for gsl_multimin_function signature; // usable for any c++ class which defines operator( ); //; // Created by: Lorenzo Moneta at Fri Nov 12 16:58:51 2004; //; // Last update: Fri Nov 12 16:58:51 2004; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiFitFunctionAdapter.h:1126,adapt,adapter,1126,math/mathmore/src/GSLMultiFitFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiFitFunctionAdapter.h,1,['adapt'],['adapter']
Modifiability,"// @(#)root/mathmore:$Id$; // Authors: L. Moneta, Mar 2011; /**********************************************************************; * *; * Copyright (c) 2004 ROOT Foundation, CERN/PH-SFT *; * *; * This library is free software; you can redistribute it and/or *; * modify it under the terms of the GNU General Public License *; * as published by the Free Software Foundation; either version 2 *; * of the License, or (at your option) any later version. *; * *; * This library is distributed in the hope that it will be useful, *; * but WITHOUT ANY WARRANTY; without even the implied warranty of *; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU *; * General Public License for more details. *; * *; * You should have received a copy of the GNU General Public License *; * along with this library (see file COPYING); if not, write *; * to the Free Software Foundation, Inc., 59 Temple Place, Suite *; * 330, Boston, MA 02111-1307 USA, or contact the author. *; * *; **********************************************************************/; // Header file for class GSLMultiMinFunctionAdapter; //; // Generic adapter for gsl_multiroot_function signature type; // usable for any array of function pointers; // implementing operator()(const double *x) and (if needed); // Gradient(const double *x, double * g); //; // The class is very similar to GSLMultiFitFunctionAdapter,; // but in that case the array is for function references (or value); //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiRootFunctionAdapter.h:1126,adapt,adapter,1126,math/mathmore/src/GSLMultiRootFunctionAdapter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathmore/src/GSLMultiRootFunctionAdapter.h,1,['adapt'],['adapter']
Modifiability,"// @(#)root/meta:$Id$; // Author: Fons Rademakers 20/06/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TDictionary. This class defines an abstract interface that must be implemented; by all classes that contain dictionary information. The dictionary is defined by the following classes:; ~~~ {.cpp}; TDataType (typedef definitions); TGlobal (global variables); TGlobalFunc (global functions); TClass (classes); TBaseClass (base classes); TDataMember (class datamembers); TMethod (class methods); TMethodArg (method arguments); ~~~; All the above classes implement the TDictionary abstract interface.; Note: the indentation shows aggregation not inheritance.; ~~~ {.cpp}; TMethodCall (method call environment); ~~~; \image html base_tdictionary.png; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictionary.cxx:675,variab,variables,675,core/meta/src/TDictionary.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TDictionary.cxx,2,"['inherit', 'variab']","['inheritance', 'variables']"
Modifiability,"// @(#)root/meta:$Id$; // Author: Piotr Golonka 30/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TToggle. This class defines toggling facility for both - object's method or; variables.; Assume that user provides an object with a two-state field , and; methods to Get/Set value of this field. This object enables to switch; values via this method when the only thing you know about the field; is the name of the method (or method itself) which sets the field.; This facility is required in context Pop-Up menu, when the only; information about how to toggle a field is a name of methhod which; sets it.; This class may be also used for toggling an integer variable,; which may be important while building universal objects...; When user provides a ""set-method"" of name SetXXX this object tries; automaticaly find a matching ""get-method"" by lookin for a method; with name GetXXX, IsXXX or HasXXX for given object.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx:504,variab,variables,504,core/gui/src/TToggle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/gui/src/TToggle.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,"// @(#)root/meta:$Id$; // Author: Rene Brun 13/11/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TGlobal; Global variables class (global variables are obtained from CINT).; This class describes the attributes of a global variable.; The TROOT class contains a list of all currently defined global; variables (accessible via TROOT::GetListOfGlobals()).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx:439,variab,variables,439,core/meta/src/TGlobal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TGlobal.cxx,4,['variab'],"['variable', 'variables']"
Modifiability,"// @(#)root/minuit:$Id$; // Author: Rene Brun, Frederick James 12/08/95; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*! \class TMinuit; \see Minuit2 for a newer version of this package; \ingroup MinuitOld. Implementation in C++ of the Minuit package written by Fred James.; This is a straightforward conversion of the original Fortran version. The main changes are:. - The variables in the various Minuit labelled common blocks; have been changed to the TMinuit class data members. - The internal arrays with a maximum dimension depending on the; maximum number of parameters are now data members arrays with; a dynamic dimension such that one can fit very large problems; by simply initialising the TMinuit constructor with the maximum; number of parameters. - The include file Minuit.h has been commented as much as possible; using existing comments in the code or the printed documentation. - The original Minuit subroutines are now member functions. - Constructors and destructor have been added. - Instead of passing the FCN function in the argument; list, the addresses of this function is stored as pointer; in the data members of the class. This is by far more elegant; and flexible in an interactive environment.; The member function SetFCN can be used to define this pointer. - The ROOT static function Printf is provided to replace all; format statements and to print on currently defined output file.; - The functions SetObjectFit(TObject * obj)/GetObjectFit() can be; used inside the FCN function to set/get a referenced object; instead of using global variables. ## Basic concepts of MINUIT. The [MINUIT](https://root.cern/download/minuit.pdf); package acts on a multipara",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx:688,variab,variables,688,math/minuit/src/TMinuit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TMinuit.cxx,1,['variab'],['variables']
Modifiability,"// @(#)root/mlp:$Id$; // Author: Christophe.Delaere@cern.ch 25/04/04; /*************************************************************************; * Copyright (C) 1995-2003, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TMLPAnalyzer. This utility class contains a set of tests useful when developing; a neural network.; It allows you to check for unneeded variables, and to control; the network structure. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMLPAnalyzer.cxx:575,variab,variables,575,math/mlp/src/TMLPAnalyzer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMLPAnalyzer.cxx,1,['variab'],['variables']
Modifiability,"// @(#)root/mysql:$Id$; // Author: Fons Rademakers 15/02/2000; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TMySQLServer //; // //; // MySQL server plugin implementing the TSQLServer interface. //; // //; // To open a connection to a server use the static method Connect(). //; // The db argument of Connect() is of the form: //; // mysql://<host>[:<port>][/<database>], e.g. //; // mysql://pcroot.cern.ch:3456/test //; // //; // As an example of connecting to mysql we assume that the server is //; // running on the local host and that you have access to a database //; // named ""test"" by connecting using an account that has a username and //; // password of ""tuser"" and ""tpass"". You can set up this account //; // by using the ""mysql"" program to connect to the server as the MySQL //; // root user and issuing the following statement: //; // //; // mysql> GRANT ALL ON test.* TO 'tuser'@'localhost' IDENTIFIED BY 'tpass';; // //; // If the test database does not exist, create it with this statement: //; // //; // mysql> CREATE DATABASE test; //; // //; // If you want to use a different server host, username, password, //; // or database name, just substitute the appropriate values. //; // To connect do: //; // //; // TSQLServer *db = TSQLServer::Connect(""mysql://localhost/test"", ""tuser"", ""tpass"");; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLServer.cxx:547,plugin,plugin,547,sql/mysql/src/TMySQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/sql/mysql/src/TMySQLServer.cxx,1,['plugin'],['plugin']
Modifiability,"// @(#)root/net:$Id$; // Author: A. Peters, G. Ganis 7/2/2007; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TFileStager //; // //; // Abstract base class defining an interface to a stager. //; // //; // To open a connection to a stager use the static method //; // Open(""<stager>""), where <stager> contains a keyword allowing to load //; // the relevant plug-in, e.g. //; // TFileStager::Open(""root://lxb6064.cern.ch"") //; // will load TNetXNGFileStager and initialize it for the redirector at //; // lxb6046.cern.ch . //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFileStager.cxx:753,plug-in,plug-in,753,net/net/src/TFileStager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TFileStager.cxx,1,['plug-in'],['plug-in']
Modifiability,"// @(#)root/net:$Id$; // Author: Fabio Hernandez 22/01/2013; // extending an initial version by Marcelo Sousa (class TAS3File); /*************************************************************************; * Copyright (C) 1995-2011, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; \file TS3WebFile.cxx; \class TS3WebFile; \ingroup IO. A TS3WebFile is a TWebFile which retrieves the file contents from a; web server implementing the REST API of the Amazon S3 protocol. This; class is meant to be as generic as possible to be used with files; hosted not only by Amazon S3 servers but also by other providers; implementing the core of the S3 protocol. The S3 protocol works on top of HTTPS (and HTTP) and imposes that; each HTTP request be signed using a specific convention: the request; must include an 'Authorization' header which contains the signature; of a concatenation of selected request fields. For signing the; request, an 'Access Key Id' and a 'Secret Access Key' need to be; known. These keys are used by the S3 servers to identify the client; and to authenticate the request as genuine. As an end user, you must know the Access Key and Secret Access Key; in order to access each S3 file. They are provided to you by your S3; service provider. Those two keys can be provided to ROOT when; initializing an object of this class by two means:; a. by using the environmental variables S3_ACCESS_KEY and ; S3_SECRET_KEY, or; b. by specifying them when opening each file. You can use AWS temporary security credentials (temporary access key; and secret access key), but you must also give the associated; session token. The token may be set in the S3_SESSION_TOKEN; environmental variable, or on open in the TOKEN option. The first method is convenient if all the S3 files you want to; a",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx:64,extend,extending,64,net/net/src/TS3WebFile.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3WebFile.cxx,1,['extend'],['extending']
Modifiability,"// @(#)root/net:$Id$; // Author: Fabio Hernandez 30/01/2013; // based on an initial version by Marcelo Sousa (class THTTPMessage); /*************************************************************************; * Copyright (C) 1995-2011, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TS3HTTPRequest //; // //; // An object of this class represents an HTTP request extended to be //; // compatible with Amazon's S3 protocol. //; // Specifically, such a request contains an 'Authorization' header with //; // information used by the S3 server for authenticating this request. //; // The authentication information is computed based on a pair of access //; // key and secret key which are both provided to the user by the S3 //; // service provider (e.g. Amazon, Google, etc.). //; // The secret key is used to compute a signature of selected fields in //; // the request. The algorithm for computing the signature is documented //; // in: //; // //; // Google storage: //; // http://code.google.com/apis/storage/docs/reference/v1/developer-guidev1.html#authentication; // //; // Amazon: //; // http://docs.aws.amazon.com/AmazonS3/latest/dev/S3_Authentication2.html; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3HTTPRequest.cxx:655,extend,extended,655,net/net/src/TS3HTTPRequest.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TS3HTTPRequest.cxx,1,['extend'],['extended']
Modifiability,"// @(#)root/net:$Id$; // Author: Fons Rademakers 19/12/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TMessage //; // //; // Message buffer class used for serializing objects and sending them //; // over a network. This class inherits from TBuffer the basic I/O //; // serializer. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMessage.cxx:627,inherit,inherits,627,net/net/src/TMessage.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TMessage.cxx,1,['inherit'],['inherits']
Modifiability,"// @(#)root/net:$Id$; // Author: Fons Rademakers 25/11/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TSQLServer //; // //; // Abstract base class defining interface to a SQL server. //; // //; // To open a connection to a server use the static method Connect(). //; // The db argument of Connect() is of the form: //; // <dbms>://<host>[:<port>][/<database>], e.g. //; // mysql://pcroot.cern.ch:3456/test, oracle://srv1.cern.ch/main, ... //; // Depending on the <dbms> specified an appropriate plugin library //; // will be loaded which will provide the real interface. //; // For SQLite, the syntax is slightly different: //; // sqlite://<database> //; // The string 'database' is directly passed to sqlite3_open(_v2), //; // so e.g. a filename or "":memory:"" are possible values. //; // For SQLite versions >= 3.7.7, SQLITE_OPEN_URI is activated to also //; // allow URI-parameters if needed. //; // //; // Related classes are TSQLResult and TSQLRow. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx:896,plugin,plugin,896,net/net/src/TSQLServer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TSQLServer.cxx,1,['plugin'],['plugin']
Modifiability,"// @(#)root/net:$Id$; // Author: Fons Rademakers 3/1/2002; /*************************************************************************; * Copyright (C) 1995-2002, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TGrid //; // //; // Abstract base class defining interface to common GRID services. //; // //; // To open a connection to a GRID use the static method Connect(). //; // The argument of Connect() is of the form: //; // <grid>[://<host>][:<port>], e.g. alien://alice.cern.ch //; // Depending on the <grid> specified an appropriate plugin library //; // will be loaded which will provide the real interface. //; // //; // Related classes are TGridResult. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TGrid.cxx:832,plugin,plugin,832,net/net/src/TGrid.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/src/TGrid.cxx,1,['plugin'],['plugin']
Modifiability,"// @(#)root/net:$Id: TS3WebFile.h$; // Author: Fabio Hernandez 22/01/2013; // extending an initial version by Marcelo Sousa (class TAS3File); /*************************************************************************; * Copyright (C) 1995-2011, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TS3WebFile.h:78,extend,extending,78,net/net/inc/TS3WebFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/net/inc/TS3WebFile.h,1,['extend'],['extending']
Modifiability,"// @(#)root/physics:$Id$; // Author: Adrian Bevan 2001; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * Copyright (C) 2001, Liverpool University. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TFeldmanCousins; \legacy{TFeldmanCousins, Consider switching to RooStats for non-trivial cases.}; \ingroup Physics. Class to calculate the CL upper limit using; the Feldman-Cousins method as described in PRD V57 #7, p3873-3889. The default confidence interval calculated using this method is 90%; This is set either by having a default the constructor, or using the; appropriate fraction when instantiating an object of this class (e.g. 0.9). The simple extension to a gaussian resolution function bounded at zero; has not been addressed as yet -> `time is of the essence' as they write; on the wall of the maze in that classic game ... #### VARIABLES THAT CAN BE ALTERED; => depending on your desired precision: The initial values of fMuMin,; fMuMax, fMuStep and fNMax are those used in the PRD:; ~~~ {.cpp}; fMuMin = 0.0; fMuMax = 50.0; fMuStep= 0.005; ~~~; but there is total flexibility in changing this should you desire. see example of use in $ROOTSYS/tutorials/math/FeldmanCousins.C. see note about: ""Should I use TRolke, TFeldmanCousins, TLimit?""; in the TRolke class description. \author: Adrian Bevan, Liverpool University. Copyright Liverpool University 2001 bevan@slac.stanford.edu; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TFeldmanCousins.cxx:1114,VARIAB,VARIABLES,1114,math/physics/src/TFeldmanCousins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TFeldmanCousins.cxx,1,['VARIAB'],['VARIABLES']
Modifiability,"// @(#)root/physics:$Id$; // Author: Pasha Murat, Peter Malzacher 12/02/99; // Aug 11 1999: added Pt == 0 guard to Eta(); // Oct 8 1999: changed Warning to Error and; // return fX in Double_t & operator(); // Oct 20 1999: Bug fix: sign in PseudoRapidity; // Warning-> Error in Double_t operator(); /** \class TVector3; \ingroup Physics. \attention \parblock; TVector3 is a legacy class. It is slower and worse for serialization than the recommended superior alternative ROOT::Math::XYZVector. More details can be found in the documentation of the @ref GenVector package.; \endparblock. TVector3 is a general three vector class, which can be used for; the description of different vectors in 3D. ### Declaration / Access to the components. TVector3 has been implemented as a vector of three Double_t; variables, representing the cartesian coordinates. By default all components; are initialized to zero:. ~~~; TVector3 v1; // v1 = (0,0,0); TVector3 v3(1,2,3); // v3 = (1,2,3); TVector3 v4(v2); // v4 = v2; ~~~. It is also possible (but not recommended) to initialize a TVector3; with a Double_t or Float_t C array. You can get the basic components either by name or by index using operator():. ~~~; xx = v1.X(); or xx = v1(0);; yy = v1.Y(); yy = v1(1);; zz = v1.Z(); zz = v1(2);; ~~~. The member functions SetX(), SetY(), SetZ() and SetXYZ() allow to set the components:. ~~~; v1.SetX(1.); v1.SetY(2.); v1.SetZ(3.);; v1.SetXYZ(1.,2.,3.);; ~~~. ### Non-cartesian coordinates. To get information on the TVector3 in spherical (rho,phi,theta); or cylindrical (z,r,theta) coordinates, the. the member functions Mag() (=magnitude=rho in spherical coordinates),; Mag2(), Theta(), CosTheta(), Phi(), Perp() (the transverse component=r in; cylindrical coordinates), Perp2() can be used:. ~~~; Double_t m = v.Mag(); // get magnitude (=rho=Sqrt(x*x+y*y+z*z))); Double_t m2 = v.Mag2(); // get magnitude squared; Double_t t = v.Theta(); // get polar angle; Double_t ct = v.CosTheta(); // get cos of theta; Double_t ",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TVector3.cxx:800,variab,variables,800,math/physics/src/TVector3.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/physics/src/TVector3.cxx,1,['variab'],['variables']
Modifiability,"// @(#)root/proof:$Id$; // Author: G Ganis Sep 2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofQueryResult; \ingroup proofkernel. TQueryResult version adapted to PROOF neeeds. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofQueryResult.cxx:484,adapt,adapted,484,proof/proof/src/TProofQueryResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofQueryResult.cxx,1,['adapt'],['adapted']
Modifiability,"// @(#)root/proof:$Id$; // Author: Paul Nilsson 7/12/2005; /*************************************************************************; * Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofResourcesStatic; \ingroup proofkernel. The purpose of this class is to provide a standard interface to; static config files. It interprets Proof config files (proof.conf); and sorts the contents into TProofNodeInfo objects. Master info will; be placed in fMaster (of type TProofNodeInfo). Submaster info will; be put in fSubmasterList (a TList of TProofNodeInfo objects), while; workers (and condorworkers) will be placed in fWorkerList (a TList; of TProofNodeInfo objects). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx:545,config,config,545,proof/proof/src/TProofResourcesStatic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx,2,['config'],['config']
Modifiability,"// @(#)root/proofplayer:$Id$; // Author: G. Ganis 04/08/2010; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TProofOutputList; \ingroup proofkernel. Derivation of TList with an overload of ls() and Print() allowing to filter; out some of the variables. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofOutputList.cxx:564,variab,variables,564,proof/proof/src/TProofOutputList.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofOutputList.cxx,1,['variab'],['variables']
Modifiability,"// @(#)root/quadp:$Id$; // Author: Eddy Offermann May 2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*************************************************************************; * Parts of this file are copied from the OOQP distribution and *; * are subject to the following license: *; * *; * COPYRIGHT 2001 UNIVERSITY OF CHICAGO *; * *; * The copyright holder hereby grants you royalty-free rights to use, *; * reproduce, prepare derivative works, and to redistribute this software*; * to others, provided that any changes are clearly documented. This *; * software was authored by: *; * *; * E. MICHAEL GERTZ gertz@mcs.anl.gov *; * Mathematics and Computer Science Division *; * Argonne National Laboratory *; * 9700 S. Cass Avenue *; * Argonne, IL 60439-4844 *; * *; * STEPHEN J. WRIGHT swright@cs.wisc.edu *; * Computer Sciences Department *; * University of Wisconsin *; * 1210 West Dayton Street *; * Madison, WI 53706 FAX: (608)262-9777 *; * *; * Any questions or comments may be directed to one of the authors. *; * *; * ARGONNE NATIONAL LABORATORY (ANL), WITH FACILITIES IN THE STATES OF *; * ILLINOIS AND IDAHO, IS OWNED BY THE UNITED STATES GOVERNMENT, AND *; * OPERATED BY THE UNIVERSITY OF CHICAGO UNDER PROVISION OF A CONTRACT *; * WITH THE DEPARTMENT OF ENERGY. *; *************************************************************************/; /** \class TQpVar. Class containing the variables for the general QP formulation. In terms of in our abstract problem formulation, these variables are; the vectors x, y, z and s.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpVar.cxx:1713,variab,variables,1713,math/quadp/src/TQpVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/src/TQpVar.cxx,2,['variab'],['variables']
Modifiability,"// @(#)root/rint:$Id$; // Author: Christian Lacunza <lacunza@cdfsg6.lbl.gov> 27/04/99; // Modified by Artur Szostak <artur@alice.phy.uct.ac.za> : 1 June 2003; // Added support for namespaces.; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////; // //; // TTabCom //; // //; // This class performs basic tab completion. //; // You should be able to hit [TAB] to complete a partially typed: //; // //; // username //; // environment variable //; // preprocessor directive //; // pragma //; // filename (with a context-sensitive path) //; // public member function or data member (including base classes) //; // global variable, function, or class name //; // //; // Also, something like //; // //; // someObject->Func([TAB] //; // someObject.Func([TAB] //; // someClass::Func([TAB] //; // someClass var([TAB] //; // new someClass([TAB] //; // //; // will print a list of prototypes for the indicated //; // method or constructor. //; // //; // Current limitations and bugs: //; // //; // 1. you can only use one member access operator at a time. //; // eg, this will work: gROOT->GetListOfG[TAB] //; // but this will not: gROOT->GetListOfGlobals()->Conta[TAB] //; // //; // 2. nothing is guaranteed to work on windows //; // (for one thing, /bin/env and /etc/passwd are hardcoded) //; // //; // 3. CINT shortcut #2 is deliberately not supported. //; // (using ""operator.()"" instead of ""operator->()"") //; // //; // 4. most identifiers (including C++ identifiers, usernames, //; // environment variables, etc) //; // are restriceted to this character set: [_a-zA-Z0-9] //; // therefore, you won't be able to complete thi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx:815,variab,variable,815,core/rint/src/TTabCom.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/rint/src/TTabCom.cxx,2,['variab'],['variable']
Modifiability,"// @(#)root/roostats:$Id$; /*************************************************************************; * Project: RooStats *; * Package: RooFit/RooStats *; * Authors: *; * Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke *; *************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::HybridResult; \ingroup Roostats. Class encapsulating the result of the HybridCalculatorOriginal.; This class is a fresh rewrite in RooStats of; RooStatsCms/LimitResults developed by D. Piparo and G. Schott; New contributions to this class have been written by Matthias Wolf (error estimation). The objects of this class store and access with lightweight methods the; information calculated by LimitResults through a Lent calculation using; MC toy experiments.; In some ways can be considered an extended and extensible implementation of; TConfidenceLevel.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HybridResult.cxx:735,rewrite,rewrite,735,roofit/roostats/src/HybridResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HybridResult.cxx,2,"['extend', 'rewrite']","['extended', 'rewrite']"
Modifiability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer 28/07/2008; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /** \class RooStats::NumberCountingPdfFactory; \ingroup Roostats. A factory for building PDFs and data for a number counting combination.; The factory produces a PDF for N channels with uncorrelated background; uncertainty. Correlations can be added by extending this PDF with additional terms.; The factory relates the signal in each channel to a master signal strength times the; expected signal in each channel. Thus, the final test is performed on the master signal strength.; This yields a more powerful test than letting signal in each channel be independent. The problem has been studied in these references:. - http://arxiv.org/abs/physics/0511028; - http://arxiv.org/abs/physics/0702156; - http://cdsweb.cern.ch/record/1099969?ln=en. One can incorporate uncertainty on the expected signal by adding additional terms.; For the future, perhaps this factory should be extended to include the efficiency terms automatically. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/NumberCountingPdfFactory.cxx:756,extend,extending,756,roofit/roostats/src/NumberCountingPdfFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/NumberCountingPdfFactory.cxx,2,['extend'],"['extended', 'extending']"
Modifiability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke, Sven Kreiss; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*****************************************************************************; * Project: RooStats; * Package: RooFit/RooStats; * @(#)root/roofit/roostats:$Id$; * Authors:; * Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke, Sven Kreiss; *; *****************************************************************************/; /** \class RooStats::HypoTestResult; \ingroup Roostats. HypoTestResult is a base class for results from hypothesis tests.; Any tool inheriting from HypoTestCalculator can return a HypoTestResult.; As such, it stores a p-value for the null-hypothesis (eg. background-only); and an alternate hypothesis (eg. signal+background).; The p-values can also be transformed into confidence levels; (\f$CL_{b}\f$, \f$CL_{s+b}\f$) in a trivial way.; The ratio of the \f$CL_{s+b}\f$ to \f$CL_{b}\f$ is often called; \f$CL_{s}\f$, and is considered useful, though it is not a probability.; Finally, the p-value of the null can be transformed into a number of; equivalent Gaussian sigma using the Significance method. The p-value of the null for a given test statistic is rigorously defined and; this is the starting point for the following conventions. ### Conventions used in this class. The p-value for the null and alternate are on the **same side** of the; observed value of the test statistic. This is the more standard; convention and avoids confusion when doing inverted tests. For exclusion, we also want the formula \f$CL_{s} = CL_{s+b} / CL_{b}\f$; to hold which therefore defines our conventions f",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestResult.cxx:939,inherit,inheriting,939,roofit/roostats/src/HypoTestResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestResult.cxx,1,['inherit'],['inheriting']
Modifiability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::HypoTestInverterResult; \ingroup Roostats. HypoTestInverterResult class holds the array of hypothesis test results and compute a confidence interval.; Based on the RatioFinder code available in the RooStatsCms package developed by Gregory Schott and Danilo Piparo; Ported and adapted to RooStats by Gregory Schott; Some contributions to this class have been written by Matthias Wolf (error estimation). */; // include header file of this class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx:756,adapt,adapted,756,roofit/roostats/src/HypoTestInverterResult.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/HypoTestInverterResult.cxx,1,['adapt'],['adapted']
Modifiability,"// @(#)root/roostats:$Id$; // Author: Kyle Cranmer, Sven Kreiss 23/05/10; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::AsymptoticCalculator; \ingroup Roostats. Hypothesis Test Calculator based on the asymptotic formulae for the profile; likelihood ratio. It performs hypothesis tests using the asymptotic formula for the profile likelihood, and; uses the Asimov data set to compute expected significances or limits. See G. Cowan, K. Cranmer, E. Gross and O. Vitells: Asymptotic formulae for; likelihood- based tests of new physics. Eur. Phys. J., C71:1–19, 2011.; It provides methods to perform hypothesis tests using the likelihood function,; and computes the \f$p\f$-values for the null and the alternate hypothesis using the asymptotic; formulae for the profile likelihood ratio described in the given paper. The calculator provides methods to produce the Asimov dataset, *i.e.* a dataset; generated where the observed values are equal to the expected ones.; The Asimov data set is then used to compute the observed asymptotic \f$p\f$-value for; the alternate hypothesis and the asymptotic expected \f$p\f$-values. The asymptotic formulae are valid only for one POI (parameter of interest). So; the calculator works only for one-dimensional (one POI) models.; If more than one POI exists, only the first one is used. The calculator can generate Asimov datasets from two kinds of PDFs:; - ""Counting"" distributions: RooPoisson, RooGaussian, or products of RooPoissons.; - Extended, *i.e.* number of events can be read off from extended likelihood term.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/AsymptoticCalculator.cxx:1807,Extend,Extended,1807,roofit/roostats/src/AsymptoticCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/AsymptoticCalculator.cxx,2,"['Extend', 'extend']","['Extended', 'extended']"
Modifiability,"// @(#)root/roostats:$Id$; // Authors: Kevin Belasco 17/06/2009; // Authors: Kyle Cranmer 17/06/2009; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::MCMCCalculator; \ingroup Roostats. Bayesian Calculator estimating an interval or a credible region using the; Markov-Chain Monte Carlo method to integrate the likelihood function with the; prior to obtain the posterior function. By using the Markov-Chain Monte Carlo methods this calculator can work with; model which require the integration of a large number of parameters. MCMCCalculator is a concrete implementation of IntervalCalculator. It uses a; MetropolisHastings object to construct a Markov Chain of data points in the; parameter space. From this Markov Chain, this class can generate a; MCMCInterval as per user specification. The interface allows one to pass the model, data, and parameters via a; workspace and then specify them with names. After configuring the calculator, one only needs to ask GetInterval(), which; will return an ConfInterval (MCMCInterval in this case).; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCCalculator.cxx:1241,config,configuring,1241,roofit/roostats/src/MCMCCalculator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCCalculator.cxx,1,['config'],['configuring']
Modifiability,"// @(#)root/roostats:$Id$; // Authors: Kevin Belasco 17/06/2009; // Authors: Kyle Cranmer 17/06/2009; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class RooStats::MCMCInterval; \ingroup Roostats. MCMCInterval is a concrete implementation of the RooStats::ConfInterval; interface. It takes as input Markov Chain of data points in the parameter; space generated by Monte Carlo using the Metropolis algorithm. From the Markov; Chain, the confidence interval can be determined in two ways:. #### Using a Kernel-Estimated PDF: (not the default method). A RooNDKeysPdf is constructed from the data set using adaptive kernel width.; With this RooNDKeysPdf F, we then integrate over the most likely domain in the; parameter space (tallest points in the posterior RooNDKeysPdf) until the target; confidence level is reached within an acceptable neighborhood as defined by; SetEpsilon(). More specifically: we calculate the following for different; cutoff values C until we reach the target confidence level: \f$\int_{ F >= C } F; d{normset} \f$.; Important note: this is not the default method because of a bug in constructing; the RooNDKeysPdf from a weighted data set. Configure to use this method by; calling SetUseKeys(true), and the data set will be interpreted without weights. #### Using a binned data set: (the default method). This is the binned analog of the continuous integrative method that uses the; kernel-estimated PDF. The points in the Markov Chain are put into a binned; data set and the interval is then calculated by adding the heights of the bins; in decreasing order until the desired level of confidence has been reached.; Note that this means the actual confidence le",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCInterval.cxx:920,adapt,adaptive,920,roofit/roostats/src/MCMCInterval.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/MCMCInterval.cxx,1,['adapt'],['adaptive']
Modifiability,"// @(#)root/roostats:$Id$; // Authors: Kevin Belasco 17/06/2009; // Authors: Kyle Cranmer 17/06/2009; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /** \class RooStats::PdfProposal; \ingroup Roostats. PdfProposal is a concrete implementation of the ProposalFunction interface.; It proposes points across the parameter space in the distribution of the; given PDF. To make Propose(xPrime, x) dependent on x, configure with; PdfProposal::AddMapping(varToUpdate, valueToUse). For example, suppose we have:. ~~~{.cpp}; // our parameter; RooRealVar p(""p"", ""p"", 5, 0, 10);. // create mean and sigma for gaussian proposal function; RooRealVar meanP(""meanP"", ""meanP"", 0, 10);; RooRealVar sigma(""sigma"", ""sigma"", 1, 0, 5);; RooGaussian pGaussian(""pGaussian"", ""pGaussian"", p, meanP, sigma);. // configure proposal function; PdfProposal pdfProposal(pGaussian);; pdfProposal.AddMapping(meanP, p); // each call of Propose(xPrime, x), meanP in; // the proposal function will be updated to; // the value of p in x. this will center the; // proposal function about x's p when; // proposing for xPrime. // To improve performance, PdfProposal has the ability to cache a specified; // number of proposals. If you don't call this function, the default cache size; // is 1, which can be slow.; pdfProposal.SetCacheSize(desiredCacheSize);; ~~~. PdfProposal currently uses a fixed cache size. Adaptive caching methods are in the works; for future versions.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/PdfProposal.cxx:800,config,configure,800,roofit/roostats/src/PdfProposal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/PdfProposal.cxx,3,"['Adapt', 'config']","['Adaptive', 'configure']"
Modifiability,"// @(#)root/roostats:$Id: cranmer $; // Author: Kyle Cranmer, Akira Shibata; /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /** \class RooStats::HistFactory::ConfigParser; * \ingroup HistFactory; * TODO Add documentation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx:551,Config,ConfigParser,551,roofit/histfactory/src/ConfigParser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ConfigParser.cxx,1,['Config'],['ConfigParser']
Modifiability,"// @(#)root/roostats:$Id: cranmer $; // Author: Kyle Cranmer, Akira Shibata; // Author: Giovanni Petrucciani (UCSD) (log-interpolation); /*************************************************************************; * Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; ////////////////////////////////////////////////////////////////////////////////; /** \class RooStats::HistFactory::FlexibleInterpVar; * \ingroup HistFactory; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/FlexibleInterpVar.cxx:611,Flexible,FlexibleInterpVar,611,roofit/histfactory/src/FlexibleInterpVar.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/FlexibleInterpVar.cxx,1,['Flexible'],['FlexibleInterpVar']
Modifiability,"// @(#)root/rootx:$Id$; // Author: Fons Rademakers 19/02/98; //////////////////////////////////////////////////////////////////////////; // //; // Rootx //; // //; // Rootx is a small front-end program that starts the main ROOT module. //; // This program is called ""root"" in the $ROOTSYS/bin directory and the //; // real ROOT executable is now called ""root.exe"" (formerly ""root""). //; // Rootx puts up a splash screen giving some info about the current //; // version of ROOT and, more importantly, it sets up the required //; // LD_LIBRARY_PATH, SHLIB_PATH and LIBPATH environment variables //; // (depending on the platform). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootx.cxx:584,variab,variables,584,rootx/src/rootx.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/rootx/src/rootx.cxx,1,['variab'],['variables']
Modifiability,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/06; /** \class TSpectrum2Transform; \ingroup Spectrum; \brief Advanced 2-dimensional orthogonal transform functions; \author Miroslav Morhac. \legacy{TSpectrum2Transform, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. Class to carry out transforms of 2D spectra, its filtering and; enhancement. It allows to calculate classic Fourier, Cosine, Sin,; Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier-; Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh; and Sin-Haar). All the transforms are fast. The algorithms in this class have been published in the following; references:. 1. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform; spectral enhancement techniques for gamma-ray spectroscopy.NIM A353; (1994) 280-284.; 2. Morhac M., Matousek V., New adaptive Cosine-Walsh transform and; its application to nuclear data compression, IEEE Transactions on; Signal Processing 48 (2000) 2693.; 3. Morhac M., Matousek V., Data compression using new fast adaptive; Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; 4. Morhac M., Matousek V.: Multidimensional nuclear data compression; using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51; (2001) 307.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx:437,enhance,enhancement,437,hist/spectrum/src/TSpectrum2Transform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrum2Transform.cxx,5,"['adapt', 'enhance']","['adaptive', 'enhancement']"
Modifiability,"// @(#)root/spectrum:$Id$; // Author: Miroslav Morhac 25/09/06; /** \class TSpectrumTransform; \ingroup Spectrum; \brief Advanced 1-dimensional orthogonal transform functions; \author Miroslav Morhac. \legacy{TSpectrumTransform, For modeling a spectrum fitting and estimating the background one can use RooFit while for deconvolution and unfolding one can use TUnfold.}. Class to carry out transforms of 1D spectra, its filtering and; enhancement. It allows to calculate classic Fourier, Cosine, Sin,; Hartley, Walsh, Haar transforms as well as mixed transforms (Fourier-; Walsh, Fourier-Haar, Walsh-Haar, Cosine-Walsh, Cosine-Haar, Sin-Walsh; and Sin-Haar). All the transforms are fast. The algorithms in this class have been published in the following; references:. 1. C.V. Hampton, B. Lian, Wm. C. McHarris: Fast-Fourier-transform; spectral enhancement techniques for gamma-ray spectroscopy.NIM A353(1994) 280-284.; 2. Morhac M., Matousek V., New adaptive Cosine-Walsh transform and; its application to nuclear data compression, IEEE Transactions on; Signal Processing 48 (2000) 2693.; 3. Morhac M., Matousek V., Data compression using new fast adaptive; Cosine-Haar transforms, Digital Signal Processing 8 (1998) 63.; 4. Morhac M., Matousek V.: Multidimensional nuclear data compression; using fast adaptive Walsh-Haar transform. Acta Physica Slovaca 51 (2001) 307.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx:435,enhance,enhancement,435,hist/spectrum/src/TSpectrumTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/spectrum/src/TSpectrumTransform.cxx,5,"['adapt', 'enhance']","['adaptive', 'enhancement']"
Modifiability,"// @(#)root/test:$Id$; // Author: David Smith 20/10/14; /////////////////////////////////////////////////////////////////; //; //___A test for I/O plugins by reading files___; //; // The files used in this test have been generated by; // stress.cxx and preplaced on some data servers.; // stressIOPlugins reads the remote files via various data; // access protocols to test ROOT IO plugins. The data read are; // tested via tests based on some of stress.cxx tests.; //; // Can be run as:; // stressIOPlugins [name]; //; // The name parameter is a protocol name, as expected; // in a url. The supported names are: xroot, root, http, https.; // If the name is omitted a selection of schemes are tested; // based on feature availability:; //; // feature protocol multithreaded test available; //; // xrootd root no; // davix http no; //; // An example of output of a non multithreaded test, when all the tests; // run OK is shown below:; //; // ****************************************************************************; // * Starting stressIOPlugins test for protocol http; // * Test files will be read from:; // * http://root.cern/files/StressIOPluginsTestFiles/; // ****************************************************************************; // Test 1 : Check size & compression factor of a Root file........ using stress_2.root; // : opened file with plugin class......................... TDavixFile; // : Check size & compression factor of a Root file........ OK; // Test 2 : Test graphics & Postscript............................ using stress_5.root; // : opened file with plugin class......................... TDavixFile; // : Test graphics & Postscript............................ OK; // Test 3 : Trees split and compression modes..................... using Event_8a.root; // : opened file with plugin class......................... TDavixFile; // : Trees split and compression modes..................... using Event_8b.root; // : opened file with plugin class......................... TDavix",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressIOPlugins.cxx:147,plugin,plugins,147,test/stressIOPlugins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressIOPlugins.cxx,2,['plugin'],['plugins']
Modifiability,"// @(#)root/test:$Id$; // Author: Lorenzo Moneta 06/2005; ///////////////////////////////////////////////////////////////////////////////////; //; // MathCore Benchmark test suite; // ==============================; //; // This program performs tests :; // - mathematical functions in particular the statistical functions by estimating; // pdf, cdf and quantiles. cdf are estimated directly and compared with calculated integral from pdf; // - physics vectors (2D, 3D and 4D) including I/O for every type and for both double and Double32_t; // - SMatrix and SVectors including I/O for double and Double32_t types; // - I/O of complex objects which dictionary has been generated using CINT (default) or Reflex; // TrackD and TrackD32 which contain physics vectors of double and Double32_t; // TrackErrD and TrackErrD32 which contain physics vectors and an SMatrix of double and Double32_t; // VecTrackD which contains an std::vector<TrackD>; //; //; // the program cun run only in compiled mode.; // To run outside ROOT do:; //; // > cd $ROOTSYS/test; // > make stressMathMore; // > ./stressMathMore; //; // to run using REflex set before compiling the environment variable useReflex.; //; // > export useReflex=1; // > make stressMathMore; // > ./stressMathMore; //; // to run inside ROOT using ACliC; // for using CINT you need first to have the library libTrackMathCoreDict.so; // (type: make libTrackMathCoreDict.so to make it); //; // root> gSystem->Load(""libMathCore"");; // root> gSystem->Load(""libTree"");; // root> gSystem->Load(""libHist"");; // root> .x stressMathCore.cxx+; //; // for using Reflex dictionaries you need first to have the library libTrackMathCoreRflx.so; // (type: make libTrackMathCoreRflx.so to make it); //; // root> gSystem->Load(""libMathCore"");; // root> gSystem->Load(""libTree"");; // root> gSystem->Load(""libHist"");; // root> gSystem->Load(""libReflex"");; // root> gSystem->SetIncludePath(""-DUSE_REFLEX"");; // root> .x stressMathCore.cxx+; //; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressMathCore.cxx:1164,variab,variable,1164,test/stressMathCore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressMathCore.cxx,1,['variab'],['variable']
Modifiability,"// @(#)root/test:$name: $:$id: stressHistoFit.cxx,v 1.15 2002/10/25 10:47:51 rdm exp $; // Authors: David Gonzalez Maline November 2008; //*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*//; // //; // //; // Set of tests for different minimization algorithms and for //; // different objects. The tests are divided into three types: //; // //; // 1. 1D and 2D Objects, including 1D and 2D histograms, 1D and 2D //; // histograms with variable bins, TGraph, TGraphErrors, TGraph2D, //; // TGraph2DErrors //; // 2. Same as before, but trying linear fitters. //; // 3. Unbinned fits with trees of different dimensions. //; // //; // Each test will performed fits with different functions and //; // different minimization algorithms selected. There is an error //; // tolerance for each one of them. There is also the possibility to //; // inspect each one of the test individually changing the //; // defaultOptions variable. //; // //; // //; // An example of output when all the tests run OK is shown below: //; // ****************************************************************************; // * Starting stress H I S T O F I T *; // ****************************************************************************; // Test 1D and 2D objects; // Test 1: 'Histogram 1D Variable' with 'GAUS'...................OK; // Test 2: 'Histogram 1D' with 'GAUS'............................OK; // Test 3: 'TGraph 1D' with 'GAUS'...............................OK; // Test 4: 'TGraphErrors 1D' with 'GAUS'.........................OK; // Test 5: 'THnSparse 1D' with 'GAUS'............................OK; // Test 6: 'Histogram 1D Variable' with 'Polynomial'.............OK; // Test 7: 'Histogram 1D' with 'Polynomial'......................OK; // Test 8: 'TGraph 1D' with 'Polynomial'.........................OK; // Test 9: 'TGraphErrors 1D' with 'Polynomial'...................OK; // Test 10: 'THnSparse 1D' with 'Polynomial'......................OK; // Test 11: 'Histogram 2D Variable' wi",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:465,variab,variable,465,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,2,['variab'],['variable']
Modifiability,"// @(#)root/thread:$Id$; /*; * Copyright (c) 2006-2011 High Performance Computing Center Stuttgart,; * University of Stuttgart. All rights reserved.; * Author: Rainer Keller, HLRS; * Modified: Fons Rademakers, CERN; * Modified: Philippe Canal, FNAL; *; * Thread-local storage (TLS) is not supported on all environments.; * This header file and test-program shows how to abstract away, using either; * __thread,; * __declspec(thread),; * thread_local or; * Pthread-Keys; * depending on the (configure-set) CPP-variables R__HAS___THREAD,; * R__HAS_DECLSPEC_THREAD or R__HAS_PTHREAD.; *; * Use the macros TTHREAD_TLS_DECLARE, TTHREAD_TLS_INIT, and the; * getters and setters TTHREAD_TLS_GET and TTHREAD_TLS_GET; * to work on the declared variables.; *; * In case of PThread keys, we need to resolve to using keys!; * In order to do so, we need to declare and access; * TLS variables through three macros:; * - TTHREAD_TLS_DECLARE; * - TTHREAD_TLS_INIT; * - TTHREAD_TLS_SET and; * - TTHREAD_TLS_GET; * We do depend on the following (GCC-)extension:; * - In case of function-local static functions,; * we declare a sub-function to create a specific key.; * Unfortunately, we do NOT use the following extensions:; * - Using typeof, we could get rid of the type-declaration; * which is used for casting, however typeof is not ANSI C.; * - We do NOT allow something like; * func (a, TTHREAD_TLS_SET(int, my_var, 5));; * as we do not use the gcc-extension of returning macro-values.; *; * C++11 requires the implementation of the thread_local storage.; *; * For simple type use:; * TTHREAD_TLS(int) varname;; *; * For array of simple type use:; * TTHREAD_TLS_ARRAY(int, arraysize, varname);; *; * For object use:; * TTHREAD_TLS_DECL(classname, varname);; * TTHREAD_TLS_DECL_ARG(classname, varname, arg);; * TTHREAD_TLS_DECL_ARG2(classname, varname, arg1, arg2);; *; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h:490,config,configure-set,490,core/foundation/inc/ThreadLocalStorage.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/ThreadLocalStorage.h,4,"['config', 'variab']","['configure-set', 'variables']"
Modifiability,"// @(#)root/thread:$Id$; // Author: Bertrand Bellenot 20/10/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TWin32Condition //; // //; // This class provides an interface to the win32 condition variable //; // routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx:596,variab,variable,596,core/thread/src/TWin32Condition.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TWin32Condition.cxx,1,['variab'],['variable']
Modifiability,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 01/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TCondition //; // //; // This class implements a condition variable. Use a condition variable //; // to signal threads. The actual work is done via the TConditionImp //; // class (either TPosixCondition or TWin32Condition). //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TCondition.cxx:565,variab,variable,565,core/thread/src/TCondition.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TCondition.cxx,2,['variab'],['variable']
Modifiability,"// @(#)root/thread:$Id$; // Author: Fons Rademakers 01/07/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////////; // //; // TPosixCondition //; // //; // This class provides an interface to the posix condition variable //; // routines. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx:592,variab,variable,592,core/thread/src/TPosixCondition.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TPosixCondition.cxx,1,['variab'],['variable']
Modifiability,"// @(#)root/thread:$Id$; // Authors: Enric Tejedor CERN 12/09/2016; // Philippe Canal FNAL 12/09/2016; /*************************************************************************; * Copyright (C) 1995-2016, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TRWSpinLock; \brief An implementation of a read-write lock with an internal spin lock. This class provides an implementation of a read-write lock that uses an; internal spin lock and a condition variable to synchronize readers and; writers when necessary. The implementation tries to make faster the scenario when readers come; and go but there is no writer. In that case, readers will not pay the; price of taking the internal spin lock. Moreover, this RW lock tries to be fair with writers, giving them the; possibility to claim the lock and wait for only the remaining readers,; thus preventing starvation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWSpinLock.cxx:667,variab,variable,667,core/thread/src/TRWSpinLock.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TRWSpinLock.cxx,1,['variab'],['variable']
Modifiability,"// @(#)root/thread:$Id$; // Authors: Enric Tejedor CERN 12/09/2016; // Philippe Canal FNAL 12/09/2016; /*************************************************************************; * Copyright (C) 1995-2016, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TReentrantRWLock; \brief An implementation of a reentrant read-write lock with a; configurable internal mutex/lock (default Spin Lock). This class provides an implementation of a reentrant read-write lock; that uses an internal lock and a condition variable to synchronize; readers and writers when necessary. The implementation allows a single reader to take the write lock without; releasing the reader lock. It also allows the writer to take a read lock.; In other word, the lock is re-entrant for both reading and writing. The implementation tries to make faster the scenario when readers come; and go but there is no writer. In that case, readers will not pay the; price of taking the internal spin lock. Moreover, this RW lock tries to be fair with writers, giving them the; possibility to claim the lock and wait for only the remaining readers,; thus preventing starvation.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx:554,config,configurable,554,core/thread/src/TReentrantRWLock.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/src/TReentrantRWLock.cxx,2,"['config', 'variab']","['configurable', 'variable']"
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Config *; * *; * *; * Description: *; * GLobal configuration settings (singleton) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, GER *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * Iowa State U., USA *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Config.h:290,Config,Config,290,tmva/tmva/inc/TMVA/Config.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Config.h,2,"['Config', 'config']","['Config', 'configuration']"
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Fredrik Tegenfeldt, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Config *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Fredrik Tegenfeldt <Fredrik.Tegenfeldt@cern.ch> - Iowa State U., USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, GER *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * Iowa State U., USA *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/; /*! \class TMVA::Config; \ingroup TMVA. Singleton class for global configuration settings used by TMVA. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Config.cxx:290,Config,Config,290,tmva/tmva/src/Config.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Config.cxx,3,"['Config', 'config']","['Config', 'configuration']"
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Eckhard v. Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableGaussTransform *; * *; * *; * Description: *; * Decorrelation of input variables *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Eckhard v. Toerne <evt@uni-bonn.de> - Uni Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableGaussTransform.h:289,Variab,VariableGaussTransform,289,tmva/tmva/inc/TMVA/VariableGaussTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableGaussTransform.h,2,"['Variab', 'variab']","['VariableGaussTransform', 'variables']"
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Eckhard v. Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableGaussTransform *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Eckhard v. Toerne <evt@uni-bonn.de> - Uni Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::VariableGaussTransform; \ingroup TMVA; Gaussian Transformation of input variables.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableGaussTransform.cxx:289,Variab,VariableGaussTransform,289,tmva/tmva/src/VariableGaussTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableGaussTransform.cxx,3,"['Variab', 'variab']","['VariableGaussTransform', 'variables']"
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodCompositeBase *; * *; * *; * Description: *; * Virtual base class for all MVA method *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Nadim Sah <Nadim.Sah@cern.ch> - Berlin, Germany *; * Peter Speckmayer <Peter.Speckmazer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - MSU East Lansing, USA *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * MSU East Lansing, USA *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodCategory; \ingroup TMVA. Class for categorizing the phase space. This class is meant to allow categorisation of the data. For different; categories, different classifiers may be booked and different variables; may be considered. The aim is to account for the difference that; is due to different locations/angles.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCategory.cxx:1489,variab,variables,1489,tmva/tmva/src/MethodCategory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCategory.cxx,1,['variab'],['variables']
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableDecorrTransform *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::VariableDecorrTransform; \ingroup TMVA; Linear interpolation class; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableDecorrTransform.cxx:290,Variab,VariableDecorrTransform,290,tmva/tmva/src/VariableDecorrTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableDecorrTransform.cxx,2,['Variab'],['VariableDecorrTransform']
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariablePCATransform *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::VariablePCATransform; \ingroup TMVA; Linear interpolation class; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariablePCATransform.cxx:290,Variab,VariablePCATransform,290,tmva/tmva/src/VariablePCATransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariablePCATransform.cxx,2,['Variab'],['VariablePCATransform']
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::DecisionTreeNode *; * *; * *; * Description: *; * Implementation of a Decision Tree Node *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Eckhard von Toerne <evt@physik.uni-bonn.de> - U. of Bonn, Germany *; * *; * CopyRight (c) 2009: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::; \ingroup TMVA. Node for the Decision Tree. The node specifies ONE variable out of the given set of selection variable; that is used to split the sample which ""arrives"" at the node, into a left; (background-enhanced) and a right (signal-enhanced) sample. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTreeNode.cxx:1178,variab,variable,1178,tmva/tmva/src/DecisionTreeNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DecisionTreeNode.cxx,4,"['enhance', 'variab']","['enhanced', 'variable']"
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss, Peter Speckmayer, Eckhard von Toerne, Jan Therhaag; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodLikelihood *; * *; * *; * Description: *; * Likelihood analysis (""non-parametric approach"") *; * Also implemented is a ""diagonalized likelihood approach"", *; * which improves over the uncorrelated likelihood ansatz by transforming *; * linearly the input variables into a diagonal space, using the square-root *; * of the covariance matrix. This approach can be chosen by inserting *; * the letter ""D"" into the option string. *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmazer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodLikelihood.h:593,variab,variables,593,tmva/tmva/inc/TMVA/MethodLikelihood.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodLikelihood.h,1,['variab'],['variables']
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : Ranking *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Ranking; \ingroup TMVA; Ranking for variables in method (implementation); */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Ranking.cxx:997,variab,variables,997,tmva/tmva/src/Ranking.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Ranking.cxx,1,['variab'],['variables']
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Class : TMVA::MethodPlugins *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Peter Speckmayer <peter.speckmayer@cern.ch> - CERN, Switzerland *; * Jan Therhaag <Jan.Therhaag@cern.ch> - U of Bonn, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Daniel Martscheit <martschei@ekp.uni-karlsruhe.de> -KIT Karlsruhe, Ger. *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::CreateMethodPlugins; \ingroup TMVA. Plugins analysis. The MethodPlugins is actually not a real method, but it is just a wrapper to call; the TPluginsManager of ROOT and find a external method which can be used to extend; TMVA by another classifier. The only methods which are actually really implemented; are the constructors which fulfill the plugins handling. The others will produce; FATAL warnings and stop TMVA execution. Right after the constructor, the additional method 'getPlugedinMethod()' is called,; which returns the method loaded by the plugin manager, and the MethodPlugins object; is already deleted. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPlugins.cxx:1327,Plugin,Plugins,1327,tmva/tmva/src/MethodPlugins.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodPlugins.cxx,4,"['Plugin', 'extend', 'plugin']","['Plugins', 'extend', 'plugin', 'plugins']"
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Classes: Node *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * CopyRight (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::BinarySearchTreeNode; \ingroup TMVA. Node for the BinarySearch or Decision Trees. for the binary search tree, it basically consists of the EVENT, and; pointers to the parent and daughters. in case of the Decision Tree, it specifies parent and daughters, as; well as ""which variable is used"" in the selection of this node, including; the respective cut value.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinarySearchTreeNode.cxx:1260,variab,variable,1260,tmva/tmva/src/BinarySearchTreeNode.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/BinarySearchTreeNode.cxx,1,['variab'],['variable']
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate Data analysis *; * Package: TMVA *; * Classes: Node *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * CopyRight (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Node; \ingroup TMVA; Node for the BinarySearch or Decision Trees. For the binary search tree, it basically consists of the EVENT, and; pointers to the parent and daughters. In case of the Decision Tree, it specifies parent and daughters, as; well as ""which variable is used"" in the selection of this node,; including the respective cut value.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Node.cxx:1244,variab,variable,1244,tmva/tmva/src/Node.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Node.cxx,1,['variab'],['variable']
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodHMatrix *; * *; * *; * Description: *; * H-Matrix method, which is implemented as a simple comparison of *; * chi-squared estimators for signal and background, taking into account *; * the linear correlations between the input variables. *; * Method is (also) used by D0 Collaboration (FNAL) for electron *; * identification; for more information, see, eg, *; * http://www-d0.fnal.gov/d0dist/dist/packages/tau_hmchisq/devel/doc/ *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodHMatrix.h:513,variab,variables,513,tmva/tmva/inc/TMVA/MethodHMatrix.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodHMatrix.h,1,['variab'],['variables']
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TMVA::MethodCFMlpANN_utils *; * *; * *; * Reference for the original FORTRAN version ""mlpl3.F"": *; * Authors : J. Proriol and contributions from ALEPH-Clermont-Ferrand *; * Team members *; * Copyright: Laboratoire Physique Corpusculaire *; * Universite de Blaise Pascal, IN2P3/CNRS *; * *; * Modifications by present authors: *; * use dynamical data tables (not for all of them, but for the big ones) *; * *; * Description: *; * Utility routine translated from original mlpl3.F FORTRAN routine *; * *; * MultiLayerPerceptron : Training code *; * *; * NTRAIN: Nb of events used during the learning *; * NTEST: Nb of events used for the test *; * TIN: Input variables *; * TOUT: type of the event *; * *; * ---------------------------------------------------------------------------- *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Xavier Prudent <prudent@lapp.in2p3.fr> - LAPP, France *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/; /*! \class TMVA::MethodCFMlpANN_Utils; \ingroup TMVA. Implementation of Clermond-Ferrand artificial neural network. Reference for the original FORTRAN version ""mlpl3.F"":; - Authors : J. Proriol and contributions from ALEPH-Clermont-Ferrand; Team m",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN_Utils.cxx:936,variab,variables,936,tmva/tmva/src/MethodCFMlpANN_Utils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN_Utils.cxx,1,['variab'],['variables']
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Volume *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Volume; \ingroup TMVA; Volume for BinarySearchTree. volume element: variable space between upper and lower bonds of; nvar-dimensional variable space; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Volume.cxx:1056,variab,variable,1056,tmva/tmva/src/Volume.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Volume.cxx,2,['variab'],['variable']
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Peter Speckmayer, Eckhard von Toerne; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableNormalizeTransform *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Eckhard v. Toerne <evt@uni-bonn.de> - U of Bonn, Germany *; * *; * Copyright (c) 2005-2011: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::VariableNormalizeTransform; \ingroup TMVA; Linear interpolation class; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableNormalizeTransform.cxx:308,Variab,VariableNormalizeTransform,308,tmva/tmva/src/VariableNormalizeTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableNormalizeTransform.cxx,2,['Variab'],['VariableNormalizeTransform']
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss, Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableRearrangeTransform *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::VariableRearrangeTransform; \ingroup TMVA; Rearrangement of input variables; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableRearrangeTransform.cxx:288,Variab,VariableRearrangeTransform,288,tmva/tmva/src/VariableRearrangeTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableRearrangeTransform.cxx,3,"['Variab', 'variab']","['VariableRearrangeTransform', 'variables']"
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Configurable *; * *; * *; * Description: *; * Base class for all classes with option parsing *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Configurable.h:270,Config,Configurable,270,tmva/tmva/inc/TMVA/Configurable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Configurable.h,1,['Config'],['Configurable']
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Configurable *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; * *; **********************************************************************************/; /*! \class TMVA::; \ingroup TMVA. Base Class for all classes that need option parsing. */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Configurable.cxx:270,Config,Configurable,270,tmva/tmva/src/Configurable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Configurable.cxx,1,['Config'],['Configurable']
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Option *; * *; * *; * Description: *; * Variable type info *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2006: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h:310,Variab,Variable,310,tmva/tmva/inc/TMVA/VariableInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableInfo.h,1,['Variab'],['Variable']
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : Timer *; * *; * *; * Description: *; * Implementation (see header file for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::Timer; \ingroup TMVA; Timing information for training and evaluation of MVA methods. Usage:. ~~~ {.cpp}; TMVA::gConfig().SetDrawProgressBar(true);. TMVA::Timer timer( Nloops, ""MyClassName"" );; for (Int_t i=0; i<Nloops; i++) {; ... // some code. // now, print progress bar:; timer.DrawProgressBar( i );. // **OR** text output of left time (never both !); fLogger << "" time left: "" << timer.GetLeftTime( i ) << Endl;. }; fLogger << ""MyClassName"" << "": elapsed time: "" << timer.GetElapsedTime(); << Endl;; ~~~. Remark: in batch mode, the progress bar is quite ugly; you may; want to use the text output then. Note that by default in TMVA::Config the drawing of the; progress bar is switched off. To have the progress bar visible you need ; to enable it by calling TMVA::gConfig().SetDrawProgressBar(true). */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Timer.cxx:1648,Config,Config,1648,tmva/tmva/src/Timer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Timer.cxx,1,['Config'],['Config']
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableDecorrTransform *; * *; * *; * Description: *; * Decorrelation of input variables *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableDecorrTransform.h:270,Variab,VariableDecorrTransform,270,tmva/tmva/inc/TMVA/VariableDecorrTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableDecorrTransform.h,2,"['Variab', 'variab']","['VariableDecorrTransform', 'variables']"
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableIdentityTransform *; * *; * *; * Description: *; * Identity transform *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableIdentityTransform.h:270,Variab,VariableIdentityTransform,270,tmva/tmva/inc/TMVA/VariableIdentityTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableIdentityTransform.h,1,['Variab'],['VariableIdentityTransform']
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableIdentityTransform *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::VariableIdentityTransform; \ingroup TMVA; Linear interpolation class; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableIdentityTransform.cxx:270,Variab,VariableIdentityTransform,270,tmva/tmva/src/VariableIdentityTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableIdentityTransform.cxx,2,['Variab'],['VariableIdentityTransform']
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableNormalizeTransform *; * *; * *; * Description: *; * Decorrelation of input variables *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableNormalizeTransform.h:270,Variab,VariableNormalizeTransform,270,tmva/tmva/inc/TMVA/VariableNormalizeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableNormalizeTransform.h,2,"['Variab', 'variab']","['VariableNormalizeTransform', 'variables']"
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariablePCATransform *; * *; * *; * Description: *; * Principal value composition of input variables *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariablePCATransform.h:270,Variab,VariablePCATransform,270,tmva/tmva/inc/TMVA/VariablePCATransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariablePCATransform.h,2,"['Variab', 'variab']","['VariablePCATransform', 'variables']"
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableRearrangeTransform *; * *; * *; * Description: *; * rearrangement of input variables *; * *; * Authors (alphabetical): *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableRearrangeTransform.h:270,Variab,VariableRearrangeTransform,270,tmva/tmva/inc/TMVA/VariableRearrangeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableRearrangeTransform.h,2,"['Variab', 'variab']","['VariableRearrangeTransform', 'variables']"
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Matt Jachowski, Peter Speckmayer, Helge Voss, Kai Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodCuts *; * *; * *; * Description: *; * Multivariate optimisation of signal efficiency for given background *; * efficiency, using rectangular minimum and maximum requirements on *; * input variables *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Matt Jachowski <jachowski@stanford.edu> - Stanford University, USA *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * Kai Voss <Kai.Voss@cern.ch> - U. of Victoria, Canada *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCuts.h:493,variab,variables,493,tmva/tmva/inc/TMVA/MethodCuts.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodCuts.h,1,['variab'],['variables']
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss, Omar Zapata; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableTransformBase *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransform.cxx:301,Variab,VariableTransformBase,301,tmva/tmva/src/VariableTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransform.cxx,1,['Variab'],['VariableTransformBase']
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableInfo *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * LAPP, Annecy, France *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (http://mva.sourceforge.net/license.txt) *; **********************************************************************************/; /*! \class TMVA::VariableInfo; \ingroup TMVA; Class for type info of MVA input variable; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableInfo.cxx:288,Variab,VariableInfo,288,tmva/tmva/src/VariableInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableInfo.cxx,3,"['Variab', 'variab']","['VariableInfo', 'variable']"
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableTransformBase *; * *; * *; * Description: *; * Implementation (see header for description) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::VariableTransformBase; \ingroup TMVA; Linear interpolation class.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx:288,Variab,VariableTransformBase,288,tmva/tmva/src/VariableTransformBase.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableTransformBase.cxx,2,['Variab'],['VariableTransformBase']
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer, Joerg Stelzer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodFDA *; * *; * *; * Description: *; * Implementation *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * Joerg Stelzer <stelzer@cern.ch> - DESY, Germany *; * Maciej Kruk <mkruk@cern.ch> - IFJ PAN & AGH, Poland *; * *; * Copyright (c) 2005-2006: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::MethodFDA; \ingroup TMVA. Function discriminant analysis (FDA). This simple classifier; fits any user-defined TFormula (via option configuration string) to; the training data by requiring a formula response of 1 (0) to signal; (background) events. The parameter fitting is done via the abstract; class FitterBase, featuring Monte Carlo sampling, Genetic; Algorithm, Simulated Annealing, MINUIT and combinations of these. Can compute regression value for one dimensional output; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFDA.cxx:1114,config,configuration,1114,tmva/tmva/src/MethodFDA.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodFDA.cxx,1,['config'],['configuration']
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer,Joerg Stelzer, Helge Voss, Omar Zapata; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableTransformBase *; * *; * *; * Description: *; * Pre-transformation of input variables (base class) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransform.h:300,Variab,VariableTransformBase,300,tmva/tmva/inc/TMVA/VariableTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransform.h,2,"['Variab', 'variab']","['VariableTransformBase', 'variables']"
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer,Joerg Stelzer, Helge Voss; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : VariableTransformBase *; * *; * *; * Description: *; * Pre-transformation of input variables (base class) *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <Peter.Speckmayer@cern.ch> - CERN, Switzerland *; * Joerg Stelzer <Joerg.Stelzer@cern.ch> - CERN, Switzerland *; * Helge Voss <Helge.Voss@cern.ch> - MPI-K Heidelberg, Germany *; * *; * Copyright (c) 2005: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h:287,Variab,VariableTransformBase,287,tmva/tmva/inc/TMVA/VariableTransformBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h,2,"['Variab', 'variab']","['VariableTransformBase', 'variables']"
Modifiability,"// @(#)root/tmva $Id$; // Author: Andreas Hoecker, Peter Speckmayer; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : MethodFDA *; * *; * *; * Description: *; * Function discriminant analysis (FDA). This simple classifier *; * fits any user-defined TFormula (via option configuration string) to *; * the training data by requiring a formula response of 1 (0) to signal *; * (background) events. The parameter fitting is done via the abstract *; * class FitterBase, featuring Monte Carlo sampling, Genetic *; * Algorithm, Simulated Annealing, MINUIT and combinations of these. *; * *; * Authors (alphabetical): *; * Andreas Hoecker <Andreas.Hocker@cern.ch> - CERN, Switzerland *; * Peter Speckmayer <speckmay@mail.cern.ch> - CERN, Switzerland *; * *; * Copyright (c) 2005-2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodFDA.h:413,config,configuration,413,tmva/tmva/inc/TMVA/MethodFDA.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/MethodFDA.h,1,['config'],['configuration']
Modifiability,// @(#)root/tmva $Id$; // Author: Omar Zapata and Sergei Gleyzer; /*! \class TMVA::VariableImportanceResult; \ingroup TMVA; */; /*! \class TMVA::VariableImportance; \ingroup TMVA; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableImportance.cxx:83,Variab,VariableImportanceResult,83,tmva/tmva/src/VariableImportance.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableImportance.cxx,2,['Variab'],"['VariableImportance', 'VariableImportanceResult']"
Modifiability,"// @(#)root/tmva $Id$; // Author: Rustem Ospanov; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : ModulekNN *; * *; * *; * Description: *; * Implementation *; * *; * Author: *; * Rustem Ospanov <rustem@fnal.gov> - U. of Texas at Austin, USA *; * *; * Copyright (c) 2007: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * U. of Texas at Austin, USA *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::kNN; \ingroup TMVA; kNN::Event describes point in input variable vector-space, with; additional functionality like distance between points; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ModulekNN.cxx:841,variab,variable,841,tmva/tmva/src/ModulekNN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/ModulekNN.cxx,1,['variab'],['variable']
Modifiability,"// @(#)root/tmva $Id$; // Author: Tancredi Carli, Dominik Dannheim, Alexander Voigt; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Classes: PDEFoamMultiTarget *; * *; * *; * Description: *; * Implementation. *; * *; * Authors (alphabetical): *; * Tancredi Carli - CERN, Switzerland *; * Dominik Dannheim - CERN, Switzerland *; * S. Jadach - Institute of Nuclear Physics, Cracow, Poland *; * Alexander Voigt - TU Dresden, Germany *; * Peter Speckmayer - CERN, Switzerland *; * *; * Copyright (c) 2008, 2010: *; * CERN, Switzerland *; * MPI-K Heidelberg, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; /*! \class TMVA::PDEFoamMultiTarget; \ingroup TMVA; This PDEFoam variant is used to estimate multiple targets by; creating an event density foam (PDEFoamEvent), which has dimension:. dimension = number of variables + number targets. This PDEFoam variant stores in every cell the sum of event weights; and the sum of the squared event weights. During evaluation for a; given event, which has only variables and no targets (number of; event variables is smaller than the foam dimension), the targets; are estimated by finding all cells, which correspond to this event; and calculate the Mean (or Mpv, depending on the ETargetSelection); cell center weighted by the event density in the cell. This PDEFoam variant should be booked together with the; PDEFoamEventDensity density estimator, which returns the event; weight density at a given phase space point during the foam; build-up.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamMultiTarget.cxx:1171,variab,variables,1171,tmva/tmva/src/PDEFoamMultiTarget.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/PDEFoamMultiTarget.cxx,3,['variab'],['variables']
Modifiability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Simon Pfreundschuh 06/06/17; /*************************************************************************; * Copyright (C) 2016, Simon Pfreundschuh *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /////////////////////////////////////////////////////////////////////; // Partial specialization of the TDataLoader class to adapt it to //; // the TMatrix class. Also the data transfer is kept simple, since //; // this implementation (being intended as reference and fallback //; // is not optimized for performance. //; /////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Reference/DataLoader.h:538,adapt,adapt,538,tmva/tmva/inc/TMVA/DNN/Architectures/Reference/DataLoader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Reference/DataLoader.h,1,['adapt'],['adapt']
Modifiability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Simon Pfreundschuh 20/06/16; /*************************************************************************; * Copyright (C) 2016, Simon Pfreundschuh *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //////////////////////////////////////////////////////////////////////; // Contains Layer and SharedLayer classes, that represent layers in //; // neural networks. //; //////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Layer.h:543,layers,layers,543,tmva/tmva/inc/TMVA/DNN/Layer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Layer.h,1,['layers'],['layers']
Modifiability,"// @(#)root/tmva/tmva/dnn:$Id$; // Author: Vladimir Ilievski; /**********************************************************************************; * Project: TMVA - a Root-integrated toolkit for multivariate data analysis *; * Package: TMVA *; * Class : TTensorDataLoader *; * *; * *; * Description: *; * Specialization of the Tensor Data Loader Class *; * *; * Authors (alphabetical): *; * Vladimir Ilievski <ilievski.vladimir@live.com> - CERN, Switzerland *; * *; * Copyright (c) 2005-2015: *; * CERN, Switzerland *; * U. of Victoria, Canada *; * MPI-K Heidelberg, Germany *; * U. of Bonn, Germany *; * *; * Redistribution and use in source and binary forms, with or without *; * modification, are permitted according to the terms listed in LICENSE *; * (see tmva/doc/LICENSE) *; **********************************************************************************/; //////////////////////////////////////////////////////////////////////////; // Partial specialization of the TTensorDataLoader class to adapt //; // it to the TMatrix class. Also the data transfer is kept simple, //; // since this implementation (being intended as reference and fallback) //; // is not optimized for performance. //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Reference/TensorDataLoader.h:1003,adapt,adapt,1003,tmva/tmva/inc/TMVA/DNN/Architectures/Reference/TensorDataLoader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/Architectures/Reference/TensorDataLoader.h,1,['adapt'],['adapt']
Modifiability,"// @(#)root/tree:$Id$; // Author: Rene Brun 07/04/2001; /*************************************************************************; * Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TFriendElement; \ingroup tree. A TFriendElement TF describes a TTree object TF in a file.; When a TFriendElement TF is added to the list of friends of an; existing TTree T, any variable from TF can be referenced in a query; to T. To add a TFriendElement to an existing TTree T, do:; ~~~ {.cpp}; T.AddFriend(""friendTreename"",""friendTreeFile"");; ~~~; See TTree::AddFriend for more information.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TFriendElement.cxx:602,variab,variable,602,tree/tree/src/TFriendElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TFriendElement.cxx,1,['variab'],['variable']
Modifiability,"// @(#)root/tree:$Id$; // Author: Rene Brun 17/03/97; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TLeafC; \ingroup tree. A TLeaf for a variable length string.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TLeafC.cxx:460,variab,variable,460,tree/tree/src/TLeafC.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TLeafC.cxx,1,['variab'],['variable']
Modifiability,"// @(#)root/tree:$Id$; // Author: Rene Brun 30/08/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualTreePlayer; \ingroup tree. Abstract base class defining the interface for the plugins that; implement Draw, Scan, Process, MakeProxy, etc. for a TTree object.; See the individual documentations in TTree.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TVirtualTreePlayer.cxx:509,plugin,plugins,509,tree/tree/src/TVirtualTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TVirtualTreePlayer.cxx,1,['plugin'],['plugins']
Modifiability,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 01/06/2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TFormLeafInfo; This class is a small helper class to implement reading a data member; on an object stored in a TTree. TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the; reading of the information. Here is the list of theses classes:; - TFormLeafInfo; - TFormLeafInfoDirect; - TFormLeafInfoNumerical; - TFormLeafInfoClones; - TFormLeafInfoCollection; - TFormLeafInfoPointer; - TFormLeafInfoMethod; - TFormLeafInfoMultiVarDim; - TFormLeafInfoMultiVarDimDirect; - TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. - AddOffset(Int_t offset, TStreamerElement* element); - GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; - GetObjectAddress(TLeafElement* leaf) : Returns the location of the object pointed to.; - GetMultiplicity() : Returns info on the variability of the number of elements; - GetNdata(TLeaf* leaf) : Returns the number of elements; - GetNdata() : Used by GetNdata(TLeaf* leaf); - GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; - GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; - GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; - IsString(); - ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; - Update() : react to the possible loading of a shared library.; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:1279,variab,variability,1279,tree/treeplayer/src/TFormLeafInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx,1,['variab'],['variability']
Modifiability,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 06/06/2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*; TODO:; Have separate names for the wrapper classes in the cases of: [done]; clones/non clones; split/non split; split levels. Have a solution for passing top+"".""+middle to the parents classes [probably done .. need testing]. Have a solution for the return by references of abstract classes [not done]. Have object inside ClonesArray properly treated! [done]; Why is there 2 TRef proxy classes? [done]. check why some inheritance are TObjProxy and not TPx_. Be smart enough to avoid issue about having 2 classes one unrolled and one non unrolled!. When using in interpreted mode understand why the reloading reloads the calling script and then crashes :(. CINT does not properly call the custom operators when doing return fNtrack. CINT does not handle fMatrix[2][1] well. The user's function in script.h are not exposed by ACLiC. Review the method to avoid the useless refreshing of the generated file; - for most efficiency it would require a different name for each tree; */",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx:853,inherit,inheritance,853,tree/treeplayer/src/TTreeProxyGenerator.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx,1,['inherit'],['inheritance']
Modifiability,"// @(#)root/treeviewer:$Id: c8e226dde2f9b6f39946bfe90cabcb778d63dc4f $; //Author : Andrei Gheata 16/08/00; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeViewer; A graphic user interface designed to handle ROOT trees and to take advantage of; TTree class features. It uses ROOT native GUI widgets adapted for ""drag and drop"" functionality.; in the same session. ### The following capabilities are making the viewer a helpful tool for analysis:. - several trees may be opened in the same session;; - branches and leaves can be easily browsed or scanned;; - fast drawing of branch expressions by double-clicking;; - new variables/selections easy to compose with the built-in editor;; - histograms can be composed by dragging leaves or user-defined expressions; to X, Y and Z axis items;; - the tree entries to be processed can be selected with a double slider;; - selections can be defined and activated by dragging them to the 'Cut' item;; - all expressions can be aliased and aliases can be used in composing others;; - input/output event lists easy to handle;; - menu with histogram drawing options;; - user commands may be executed within the viewer and the current command; can be echoed;; - current 'Draw' event loop is reflected by a progress bar and may be; interrupted by the user;; - all widgets have self-explaining tool tips and/or context menus;; - expressions/leaves can be dragged to a 'scan box' and scanned by; double-clicking this item. The result can be redirected to an ASCII file;. ### The layout has the following items:. - a menu bar with entries : File, Edit, Run, Options and Help;; - a toolbar in the upper part where you can issue user commands, cha",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:624,adapt,adapted,624,tree/treeviewer/src/TTreeViewer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx,1,['adapt'],['adapted']
Modifiability,"// @(#)root/xml:$Id$; // Author: Sergey Linev, Rene Brun 10.05.2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; //________________________________________________________________________; //; // Class for xml code generation; // It should be used for generation of xml streamers, which could be used outside root; // environment. This means, that with help of such streamers user can read and write; // objects from/to xml file, which later can be accepted by ROOT.; //; // At the moment supported only classes, which are not inherited from TObject; // and which not contains any TObject members.; //; // To generate xml code:; //; // 1. ROOT library with required classes should be created.; // In general, without such library non of user objects can be stored and; // retrieved from any ROOT file; //; // 2. Generate xml streamers by root script like:; //; // void generate() {; // gSystem->Load(""libRXML.so""); // load ROOT xml library; // gSystem->Load(""libuser.so""); // load user ROOT library; //; // TList lst;; // lst.Add(TClass::GetClass(""TUserClass1""));; // lst.Add(TClass::GetClass(""TUserClass2""));; // ...; // TXMLPlayer player;; // player.ProduceCode(&lst, ""streamers""); // create xml streamers; // }; //; // 3. Copy ""streamers.h"", ""streamers.cxx"", ""TXmlFile.h"", ""TXmlFile.cxx"" files; // to user project and compile them. TXmlFile class implementation can be taken; // from http://web-docs.gsi.de/~linev/xmlfile.tar.gz; //; // TXMLPlayer class generates one function per class, which called class streamer.; // Name of such function for class TExample will be TExample_streamer.; //; // Following data members for streamed classes are supported:; // - simple data types (int",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLPlayer.cxx:841,inherit,inherited,841,io/xml/src/TXMLPlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/xml/src/TXMLPlayer.cxx,1,['inherit'],['inherited']
Modifiability,// A 32-bit variable-flag where runtime returns 1 for the last iteration.; // This will be used to implement clause 'lastprivate'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:12,variab,variable-flag,12,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable-flag']
Modifiability,"// A <closure-prefix> represents a variable or field, not a regular; // DeclContext, so needs special handling. In this case we're mangling a; // limited form of <nested-name>:; //; // <nested-name> ::= N <closure-prefix> <closure-type-name> E",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:35,variab,variable,35,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,1,['variab'],['variable']
Modifiability,// A Block literal expression may be used as the initialization value for; // Block variables at global or local static scope.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:84,variab,variables,84,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['variab'],['variables']
Modifiability,// A CSE config for fully optimized builds.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CSEInfo.h:9,config,config,9,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CSEInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CSEInfo.h,1,['config'],['config']
Modifiability,// A CodeTemplate is a set of InstructionTemplates that may not be fully; // specified (i.e. some variables are not yet set). This allows the; // SnippetGenerator to instantiate it many times with specific values to study; // their impact on instruction's performance.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/CodeTemplate.h:98,variab,variables,98,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/CodeTemplate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/CodeTemplate.h,1,['variab'],['variables']
Modifiability,"// A D mangled symbol is comprised of both scope and type information.; // MangleName:; // _D QualifiedName Type; // _D QualifiedName Z; // ^; // The caller should have guaranteed that the start pointer is at the; // above location.; // Note that type is never a function type, but only the return type of; // a function or the type of a variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Demangle/DLangDemangle.cpp:338,variab,variable,338,interpreter/llvm-project/llvm/lib/Demangle/DLangDemangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Demangle/DLangDemangle.cpp,1,['variab'],['variable']
Modifiability,"// A DAGRootSet models an induction variable being used in a rerollable; // loop. For example,; //; // x[i*3+0] = y1; // x[i*3+1] = y2; // x[i*3+2] = y3; //; // Base instruction -> i*3; // +---+----+; // / | \; // ST[y1] +1 +2 <-- Roots; // | |; // ST[y2] ST[y3]; //; // There may be multiple DAGRoots, for example:; //; // x[i*2+0] = ... (1); // x[i*2+1] = ... (1); // x[i*2+4] = ... (2); // x[i*2+5] = ... (2); // x[(i+1234)*2+5678] = ... (3); // x[(i+1234)*2+5679] = ... (3); //; // The loop will be rerolled by adding a new loop induction variable,; // one for the Base instruction in each DAGRootSet.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp:36,variab,variable,36,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp,2,['variab'],['variable']
Modifiability,// A DBG_VALUE $noreg is an empty variable location,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DbgEntityHistoryCalculator.cpp:34,variab,variable,34,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DbgEntityHistoryCalculator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DbgEntityHistoryCalculator.cpp,1,['variab'],['variable']
Modifiability,// A GUID behaves like an inline variable with external linkage. Fall; // through.; // Everything not covered here has no linkage.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp:33,variab,variable,33,interpreter/llvm-project/clang/lib/AST/Decl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp,1,['variab'],['variable']
Modifiability,"// A LocalVariableMap maintains a map from local variables to their currently; // valid definitions. It provides SSA-like functionality when traversing the; // CFG. Like SSA, each definition or assignment to a variable is assigned a; // unique name (an integer), which acts as the SSA name for that definition.; // The total set of names is shared among all CFG basic blocks.; // Unlike SSA, we do not rewrite expressions to replace local variables declrefs; // with their SSA-names. Instead, we compute a Context for each point in the; // code, which maps local variables to the appropriate SSA-name. This map; // changes with each assignment.; //; // The map is computed in a single pass over the CFG. Subsequent analyses can; // then query the map to find the appropriate Context for a statement, and use; // that Context to look up the definitions of variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp:49,variab,variables,49,interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp,6,"['rewrite', 'variab']","['rewrite', 'variable', 'variables']"
Modifiability,// A PHI inside the loop causes a copy because the live range of Reg is; // extended across the PHI.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp:76,extend,extended,76,interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp,1,['extend'],['extended']
Modifiability,"// A PHI node is power of two if all incoming values are power of two, or if; // it is an induction variable where in each step its value is a power of; // two.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp:100,variab,variable,100,interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,1,['variab'],['variable']
Modifiability,"// A R/O variable is placed in code section. If the R/O variable has as; // least two byte alignment, then generated code can use relative; // instructions to address the variable. Otherwise, use the ADA to address; // the variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZSubtarget.cpp:9,variab,variable,9,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZSubtarget.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZSubtarget.cpp,4,['variab'],['variable']
Modifiability,// A Swift asynchronous context extends the frame record with a pointer; // directly before FP.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:32,extend,extends,32,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['extend'],['extends']
Modifiability,"// A Variable of a parallel coordinates plot.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h:5,Variab,Variable,5,tree/treeviewer/inc/TParallelCoordVar.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h,1,['Variab'],['Variable']
Modifiability,// A array/variable index is always of the form i*S where S is the; // constant scale size. See if we can push the scale into immediates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:11,variab,variable,11,interpreter/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp,1,['variab'],['variable']
Modifiability,// A base class inheriting constructor doesn't get forwarded arguments; // needed to construct a virtual base (or base class thereof).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp:16,inherit,inheriting,16,interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,1,['inherit'],['inheriting']
Modifiability,"// A brief description of the algorithm:; // First, we compute what should define the new def, using the SSA; // construction algorithm.; // Then, we update the defs below us (and any new phi nodes) in the graph to; // point to the correct new defs, to ensure we only have one variable, and no; // disconnected stores.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp:277,variab,variable,277,interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/MemorySSAUpdater.cpp,1,['variab'],['variable']
Modifiability,// A bseti with X0 is sign extended if the immediate is less than 31.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVOptWInstrs.cpp:27,extend,extended,27,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVOptWInstrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVOptWInstrs.cpp,1,['extend'],['extended']
Modifiability,"// A build vector of two extracted elements is equivalent to an; // extract subvector where the inner vector is any-extended to the; // extract_vector_elt VT.; // (build_vector (extract_elt_iXX_to_i32 vec Idx+0); // (extract_elt_iXX_to_i32 vec Idx+1)); // => (extract_subvector (anyext_iXX_to_i32 vec) Idx); // For now, only consider the v2i32 case, which arises as a result of; // legalization.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:116,extend,extended,116,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['extend'],['extended']
Modifiability,// A call or an invoke can be optionally prefixed with some variable; // number of operand bundle blocks. These blocks are read into; // OperandBundles and consumed at the next call or invoke instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:60,variab,variable,60,interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,1,['variab'],['variable']
Modifiability,// A call to alloca with a variable size requires protectors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackProtector.cpp:27,variab,variable,27,interpreter/llvm-project/llvm/lib/CodeGen/StackProtector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackProtector.cpp,1,['variab'],['variable']
Modifiability,"// A character literal might be sign-extended, which; // would result in an invalid \U escape sequence.; // FIXME: multicharacter literals such as '\xFF\xFF\xFF\xFF'; // are not correctly handled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Expr.cpp:37,extend,extended,37,interpreter/llvm-project/clang/lib/AST/Expr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Expr.cpp,1,['extend'],['extended']
Modifiability,"// A class which contains a flexible array member is not suitable for use as a; // base class:; // - If the layout determines that a base comes before another base,; // the flexible array member would index into the subsequent base.; // - If the layout determines that base comes before the derived class,; // the flexible array member would index into the derived class.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:28,flexible,flexible,28,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,3,['flexible'],['flexible']
Modifiability,"// A collection can be saved member wise when it contain is guaranteed to be; // homogeneous. For example std::vector<THit> can be stored member wise,; // while std::vector<THit*> can not (possible use of polymorphism).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx:205,polymorphi,polymorphism,205,core/meta/src/TVirtualStreamerInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TVirtualStreamerInfo.cxx,1,['polymorphi'],['polymorphism']
Modifiability,"// A configured action",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TStreamerInfoActions.h:5,config,configured,5,io/io/inc/TStreamerInfoActions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/inc/TStreamerInfoActions.h,1,['config'],['configured']
Modifiability,"// A constant undef variable can't be written to, and any load is; // undef, so it should be eliminated by the optimizer. It could be; // dropped by the back end if not. This pass skips over it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/Utils/AMDGPUMemoryUtils.cpp:20,variab,variable,20,interpreter/llvm-project/llvm/lib/Target/AMDGPU/Utils/AMDGPUMemoryUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/Utils/AMDGPUMemoryUtils.cpp,1,['variab'],['variable']
Modifiability,"// A d j u s t i n g d e f a u l t c o n f i g f o r a s p e c i f i c p d f; // -------------------------------------------------------------------------------------; // Another possibility: associate custom numeric integration configuration as default for object 'landau'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:229,config,configuration,229,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['config'],['configuration']
Modifiability,"// A dbg.declare describes the address of a source variable, so lower it; // into an indirect DBG_VALUE.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp:51,variab,variable,51,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/IRTranslator.cpp,2,['variab'],['variable']
Modifiability,"// A dbg.declare instruction should not be cloned, since there can only be; // one per variable fragment. It should be left in the original place; // because the sunk instruction is not an alloca (otherwise we could not be; // here).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp:87,variab,variable,87,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,1,['variab'],['variable']
Modifiability,// A dead initialization is a variable that is dead after it; // is initialized. We don't flag warnings for those variables; // marked 'unused' or 'objc_precise_lifetime'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DeadStoresChecker.cpp:30,variab,variable,30,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DeadStoresChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DeadStoresChecker.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,// A declarator that uses 'auto' in any way other than to declare a; // variable with a deduced type cannot be combined with any other; // declarator in the same group.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:72,variab,variable,72,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,// A defm can inherit from regular classes (non-multiclasses) as; // long as they come in the end of the inheritance list.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/TGParser.cpp:14,inherit,inherit,14,interpreter/llvm-project/llvm/lib/TableGen/TGParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/TGParser.cpp,2,['inherit'],"['inherit', 'inheritance']"
Modifiability,// A direct inbounds access to a stack variable is always valid.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp:39,variab,variable,39,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp,1,['variab'],['variable']
Modifiability,"// A dllimport variable never acts like a constant, unless we're; // evaluating a value for use only in name mangling.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:15,variab,variable,15,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['variab'],['variable']
Modifiability,"// A f32 load feeding into a v4f32 insert_vector_elt is handled in this way; // because on P10, it allows this specific insert_vector_elt load pattern to; // utilize the refactored load and store infrastructure in order to exploit; // prefixed loads.; // On targets with inexpensive direct moves (Power9 and up), a; // (insert_vector_elt v4f32:$vec, (f32 load)) is always better as an integer; // load since a single precision load will involve conversion to double; // precision on the load followed by another conversion to single precision.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:170,refactor,refactored,170,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['refactor'],['refactored']
Modifiability,"// A faster local-exec TLS access sequence (enabled with the; // -maix-small-local-exec-tls option) can be produced for TLS variables;; // consistent with the IBM XL compiler, we apply a max size of slightly under; // 32KB.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:124,variab,variables,124,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['variab'],['variables']
Modifiability,// A first private variable captured by reference will use only the; // 'private ptr' and 'map to' flag. Return the right flags if the captured; // declaration is known as first-private in this handler.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:19,variab,variable,19,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['variab'],['variable']
Modifiability,// A foreach loop introduces a new scope for local variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/TGParser.cpp:51,variab,variables,51,interpreter/llvm-project/llvm/lib/TableGen/TGParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/TGParser.cpp,1,['variab'],['variables']
Modifiability,"// A forward reference was mutated into a definition. Rewrite it.; // FIXME: This happens during template instantiation, should we; // have created a new definition decl instead ?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:54,Rewrite,Rewrite,54,interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,1,['Rewrite'],['Rewrite']
Modifiability,"// A four-vector template without TObject inheritance and virtual functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveVector.h:42,inherit,inheritance,42,graf3d/eve/inc/TEveVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveVector.h,1,['inherit'],['inheritance']
Modifiability,"// A function template specialization inherits the target attributes; // of its template. (We require the attributes explicitly in the; // code to match, but a template may have implicit attributes by; // virtue e.g. of being constexpr, and it passes these implicit; // attributes on to its specializations.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:38,inherit,inherits,38,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['inherit'],['inherits']
Modifiability,"// A general case: Start and End are some values, but the actual; // iteration count may not be available. If it is not, insert; // a computation of it into the preheader.; // If the induction variable bump is not a power of 2, quit.; // Othwerise we'd need a general integer division.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHardwareLoops.cpp:193,variab,variable,193,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHardwareLoops.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonHardwareLoops.cpp,1,['variab'],['variable']
Modifiability,// A global Random Number Generator to randomize configurations.; // FIXME: Move random number generation into an object and make it seedable for; // unit tests.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/SnippetGenerator.h:49,config,configurations,49,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/SnippetGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/SnippetGenerator.h,1,['config'],['configurations']
Modifiability,"// A global variable in address space 0 is non null unless extern weak; // or an absolute symbol reference. Other address spaces may have null as a; // valid address for a global, so we can't assume anything.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp:12,variab,variable,12,interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,1,['variab'],['variable']
Modifiability,"// A global variable is a root if it is a pointer, or could plausibly contain; // a pointer. There are two challenges; one is that we could have a struct; // the has an inner member which is a pointer. We recurse through the type to; // detect these (up to a point). The other is that we may actually be a union; // of a pointer and another type, and so our LLVM type is an integer which; // gets converted into a pointer, or our type is an [i8 x #] with a pointer; // potentially contained here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp:12,variab,variable,12,interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,1,['variab'],['variable']
Modifiability,"// A guess at how many times we will enter the initialization of a; // variable, depending on the kind of variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp:71,variab,variable,71,interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp,2,['variab'],['variable']
Modifiability,// A helper to measure counters while executing a function in a sandboxed; // context.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/BenchmarkRunner.h:64,sandbox,sandboxed,64,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/BenchmarkRunner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/BenchmarkRunner.h,1,['sandbox'],['sandboxed']
Modifiability,// A list of variables referenced in possibly overflowing malloc operands.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocOverflowSecurityChecker.cpp:13,variab,variables,13,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocOverflowSecurityChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocOverflowSecurityChecker.cpp,1,['variab'],['variables']
Modifiability,"// A load extending to i64 will actually produce i32, which will then; // need to be extended to i64.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp:10,extend,extending,10,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp,2,['extend'],"['extended', 'extending']"
Modifiability,// A load of i8 or i16 sign/zero extends to i32.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTargetTransformInfo.cpp:33,extend,extends,33,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZTargetTransformInfo.cpp,1,['extend'],['extends']
Modifiability,// A loop counter is considered escaped if:; // case 1: It is a global variable.; // case 2: It is a reference parameter or a reference capture.; // case 3: It is assigned to a non-const reference variable or parameter.; // case 4: Has its address taken.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/LoopUnrolling.cpp:71,variab,variable,71,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/LoopUnrolling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/LoopUnrolling.cpp,2,['variab'],['variable']
Modifiability,// A materialized temporary might have been lifetime-extended to static; // storage duration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:53,extend,extended,53,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['extend'],['extended']
Modifiability,"// A method is either tagged direct explicitly, or inherits it from its; // canonical declaration.; //; // We have to do the merge upfront and not in mergeInterfaceMethodToImpl(); // because IDecl->lookupMethod() returns more possible matches than just; // the canonical declaration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:51,inherit,inherits,51,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['inherit'],['inherits']
Modifiability,// A more flexible cost calculation for the critical path includes the slack; // of the original code sequence. This may allow the transform to proceed; // even if the instruction depths (data dependency cycles) become worse.; // Account for the latency of the inserted and deleted instructions by,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCombiner.cpp:10,flexible,flexible,10,interpreter/llvm-project/llvm/lib/CodeGen/MachineCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCombiner.cpp,1,['flexible'],['flexible']
Modifiability,"// A negative \p IdxInst or \p CountedByInst means that the index lands; // outside of the flexible array member. If that's the case, we want to; // return 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:91,flexible,flexible,91,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,1,['flexible'],['flexible']
Modifiability,"// A normal fixed sized variable becomes an alloca in the entry block,; // unless:; // - it's an NRVO variable.; // - we are compiling OpenMP and it's an OpenMP local variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp:24,variab,variable,24,interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,3,['variab'],['variable']
Modifiability,// A polymorphic version of the previous calls with dynamic type check.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h:5,polymorphi,polymorphic,5,interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/ConstructionContext.h,1,['polymorphi'],['polymorphic']
Modifiability,// A promoted result type forces the need for an extending load.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:49,extend,extending,49,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['extend'],['extending']
Modifiability,// A reference to an `auto` variable: approximate-resolve its initializer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:28,variab,variable,28,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['variab'],['variable']
Modifiability,// A rewrite operation will call SFun constructor to set Vvd->Definition.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:5,rewrite,rewrite,5,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,1,['rewrite'],['rewrite']
Modifiability,// A scalar can be splatted to an extended vector of the same element type,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:34,extend,extended,34,interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,1,['extend'],['extended']
Modifiability,// A scalar extend.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64CallLowering.cpp:12,extend,extend,12,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64CallLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64CallLowering.cpp,1,['extend'],['extend']
Modifiability,// A scope for temporaries lifetime-extended by reference members.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:36,extend,extended,36,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['extend'],['extended']
Modifiability,// A scope to hold variable definitions from defvar.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/TGParser.h:19,variab,variable,19,interpreter/llvm-project/llvm/lib/TableGen/TGParser.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/TGParser.h,1,['variab'],['variable']
Modifiability,"// A self-variable points to the SFunction itself.; // A rewrite must introduce the variable with a null definition, and update; // it after 'this' has been rewritten.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:10,variab,variable,10,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,3,"['rewrite', 'variab']","['rewrite', 'variable']"
Modifiability,// A sign-extend of a truncate of a sign-extend is free.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp:10,extend,extend,10,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp,2,['extend'],['extend']
Modifiability,// A signed comparison of sign extended values simplifies into a; // signed comparison.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:31,extend,extended,31,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,2,['extend'],['extended']
Modifiability,"// A simple user iterator plugin that changes volume color",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tutorials/geom/iterplugin.cxx:26,plugin,plugin,26,tutorials/geom/iterplugin.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/geom/iterplugin.cxx,1,['plugin'],['plugin']
Modifiability,"// A specialization of a class template member function is processed here; // since it's a redeclaration. If the parent class is dllexport, the; // specialization inherits that attribute. This doesn't happen automatically; // since the parent class isn't instantiated until later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:163,inherit,inherits,163,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['inherit'],['inherits']
Modifiability,// A static member variable can end the MemberExpr chain with either; // a MemberExpr or a DeclRefExpr.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Expr.cpp:19,variab,variable,19,interpreter/llvm-project/clang/lib/AST/Expr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Expr.cpp,1,['variab'],['variable']
Modifiability,"// A subexpression in which the extender is used. In general, this; // represents an expression where adding D to the extender will be; // equivalent to adding D to the expression as a whole. In other; // words, expr(add(##V,D) = add(expr(##V),D).; // The original motivation for this are the io/ur addressing modes,; // where the offset is extended. Consider the io example:; // In memw(Rs+##V), the ##V could be replaced by a register Rt to; // form the rr mode: memw(Rt+Rs<<0). In such case, however, the; // register Rt must have exactly the value of ##V. If there was; // another instruction memw(Rs+##V+4), it would need a different Rt.; // Now, if Rt was initialized as ""##V+Rs<<0"", both of these; // instructions could use the same Rt, just with different offsets.; // Here it's clear that ""initializer+4"" should be the same as if; // the offset 4 was added to the ##V in the initializer.; // The only kinds of expressions that support the requirement of; // commuting with addition are addition and subtraction from ##V.; // Include shifting the Rs to account for the ur addressing mode:; // ##Val + Rs << S; // ##Val - Rs",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp:32,extend,extender,32,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,3,['extend'],"['extended', 'extender']"
Modifiability,// A template for an Instruction holding values for each of its Variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/CodeTemplate.h:64,Variab,Variables,64,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/CodeTemplate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/CodeTemplate.h,1,['Variab'],['Variables']
Modifiability,"// A template specialization is attached to the list of specialization of; // the templated variable.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:92,variab,variable,92,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp,1,['variab'],['variable']
Modifiability,"// A temporary i1 alloca that stores whether 'await_resume' threw an; // exception. If it did, 'true' is stored in this variable, and the coroutine; // body must be skipped. If the promise type does not define an exception; // handler, this is null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCoroutine.cpp:120,variab,variable,120,interpreter/llvm-project/clang/lib/CodeGen/CGCoroutine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCoroutine.cpp,1,['variab'],['variable']
Modifiability,// A temporary lifetime-extended by the variable whose initializer we're; // evaluating.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:24,extend,extended,24,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,2,"['extend', 'variab']","['extended', 'variable']"
Modifiability,// A thread-local variable cannot be imported.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:18,variab,variable,18,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['variab'],['variable']
Modifiability,"// A three-vector template without TObject inheritance and virtual functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveVector.h:43,inherit,inheritance,43,graf3d/eve/inc/TEveVector.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveVector.h,1,['inherit'],['inheritance']
Modifiability,// A type which contains a flexible array member is considered to be a; // flexible array member.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:27,flexible,flexible,27,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,2,['flexible'],['flexible']
Modifiability,"// A uniform shift amount in a vector shift or funnel shift may be much; // cheaper than a generic variable vector shift, so make that pattern visible; // to SDAG by sinking the shuffle instruction next to the shift.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:99,variab,variable,99,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['variab'],['variable']
Modifiability,"// A variable array type that has an initializer can only do empty; // initialization. And because this feature is not exposed as an extension; // in C++, we can safely memset the array memory to zero.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprAgg.cpp:5,variab,variable,5,interpreter/llvm-project/clang/lib/CodeGen/CGExprAgg.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprAgg.cpp,1,['variab'],['variable']
Modifiability,"// A variable can't shadow a local variable in an enclosing scope, if; // they are separated by a non-capturing declaration context.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:5,variab,variable,5,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,2,['variab'],['variable']
Modifiability,// A variable cannot be both common and exist in a comdat.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:5,variab,variable,5,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['variab'],['variable']
Modifiability,// A variable cannot be both common and exist in a section.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:5,variab,variable,5,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['variab'],['variable']
Modifiability,"// A variable cannot be both common and exist in a section.; // We don't try to determine which is the right section in the front-end.; // If no specialized section name is applicable, it will resort to default.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:5,variab,variable,5,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['variab'],['variable']
Modifiability,// A variable definition might imply a destructor call.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:5,variab,variable,5,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['variab'],['variable']
Modifiability,// A variable is unclaimed if at least one use is unclaimed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp:5,variab,variable,5,interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp,1,['variab'],['variable']
Modifiability,"// A variable may have a definite true/false assignment, or it may be; // unassigned indicating its truth value does not affect the result of; // the formula. Unassigned variables are assigned to true as a default.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp:5,variab,variable,5,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,// A variable must not have an incomplete type or a reference type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:5,variab,variable,5,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,// A variable reachable by only one kernel is best lowered with kernel; // strategy,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:5,variab,variable,5,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variable']
Modifiability,// A variable represents the value associated to an Operand or a set of Operands; // if they are tied together.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/MCInstrDescView.h:5,variab,variable,5,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/MCInstrDescView.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/MCInstrDescView.h,1,['variab'],['variable']
Modifiability,// A variable template specialization (other than a static data member; // template or an explicit specialization) is a declaration until we; // instantiate its initializer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp:5,variab,variable,5,interpreter/llvm-project/clang/lib/AST/Decl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp,1,['variab'],['variable']
Modifiability,"// A variable used to track whether (and possible which) thunks have been; // inserted so far. InsertedThunksTy is usually a bool, but can be other types; // to represent more than one type of thunk. Requires an |= operator to; // accumulate results.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/IndirectThunks.h:5,variab,variable,5,interpreter/llvm-project/llvm/include/llvm/CodeGen/IndirectThunks.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/IndirectThunks.h,1,['variab'],['variable']
Modifiability,"// A variable with no size ambiguity, but with extra elements in it's; // expression. Manually dereference the stack location.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:5,variab,variable,5,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['variab'],['variable']
Modifiability,// A variable's value may have been narrowed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:5,variab,variable,5,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['variab'],['variable']
Modifiability,// A vector PartLLT needs extending to LLTy's element size.; // E.g. <2 x s64> = G_SEXT <2 x s32>.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CallLowering.cpp:26,extend,extending,26,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CallLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CallLowering.cpp,1,['extend'],['extending']
Modifiability,"// A vector of i16 will be broken up into a build_vector of i16's.; // This is a problem, since at the time of operation legalization,; // all operations are expected to be type-legalized, and i16 is not; // a legal type. If any of the extracted elements is not of a valid; // type, sign-extend it to a valid one.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLoweringHVX.cpp:288,extend,extend,288,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLoweringHVX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLoweringHVX.cpp,1,['extend'],['extend']
Modifiability,// A very small number of intrinsics _only_ have a polymorphic; // variant (vuninitializedq taking an unevaluated argument).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:51,polymorphi,polymorphic,51,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,1,['polymorphi'],['polymorphic']
Modifiability,// A wider extend was hidden behind a narrower one. This may induce; // another round of IV widening in which the intermediate IV becomes; // dead. It should be very rare.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp:11,extend,extend,11,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp,1,['extend'],['extend']
Modifiability,"// A wrapper around SCEV::isKnownPredicate.; // Looks for cases where we're interested in comparing for equality.; // If both X and Y have been identically sign or zero extended,; // it strips off the (confusing) extensions before invoking; // SCEV::isKnownPredicate. Perhaps, someday, the ScalarEvolution package; // will be similarly updated.; //; // If SCEV::isKnownPredicate can't prove the predicate,; // we try simple subtraction, which seems to help in some cases; // involving symbolics.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:169,extend,extended,169,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,1,['extend'],['extended']
Modifiability,"// A zero step value for LHS means the induction variable is essentially a; // loop invariant value. We don't really depend on the predicate actually; // flipping from false to true (for increasing predicates, and the other way; // around for decreasing predicates), all we care about is that *if* the; // predicate changes then it only changes from false to true.; //; // A zero step value in itself is not very useful, but there may be places; // where SCEV can prove X >= 0 but not prove X > 0, so it is helpful to be; // as general as possible.; // Only handle LE/LT/GE/GT predicates.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:49,variab,variable,49,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['variab'],['variable']
Modifiability,"// A) Check that all dependents are lvalues; //; // B) Check if list of dependents can be re-expressed in; // lvalues that are higher in the expression tree; //; // C) Check for dependents that the PDF insists on integrating; // analytically itself; //; // D) Make list of servers that can be integrated analytically; // Add all parameters/dependents as value/shape servers; //; // E) Interact with function to make list of objects actually integrated analytically; //; // F) Make list of numerical integration variables consisting of:; // - Category dependents of RealLValues in analytical integration; // - Leaf nodes server lists of function server that are not analytically integrated; // - Make Jacobian list for analytically integrated RealLValues; //; // G) Split numeric list in integration list and summation list; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx:511,variab,variables,511,roofit/roofitcore/src/RooRealIntegral.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealIntegral.cxx,1,['variab'],['variables']
Modifiability,"// AAPCS requires i1 to be zero-extended to 8-bits by the caller.; //; // Check if we actually have to do this, because the value may; // already be zero-extended.; //; // We cannot just emit a (zext i8 (trunc (assert-zext i8))); // and rely on DAGCombiner to fold this, because the following; // (anyext i32) is combined with (zext i8) in DAG.getNode:; //; // (ext (zext x)) -> (zext x); //; // This will give us (zext i32), which we cannot remove, so; // try to check this beforehand.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:32,extend,extended,32,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,2,['extend'],['extended']
Modifiability,"// AAPCS requires i1 to be zero-extended to i8 by the producer of the; // value. This is strictly redundant on Darwin (which uses ""zeroext; // i1""), but will be optimised out before ISel.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:32,extend,extended,32,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['extend'],['extended']
Modifiability,// AAPCS requires that we zero-extend i1 to 8 bits by the caller.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64CallLowering.cpp:31,extend,extend,31,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64CallLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64CallLowering.cpp,1,['extend'],['extend']
Modifiability,// AARCH64 ELF ABI does not define static relocation type for TLS offset; // within a module. Do not generate AT_location for TLS variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetObjectFile.cpp:130,variab,variables,130,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetObjectFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetObjectFile.cpp,1,['variab'],['variables']
Modifiability,"// AArch64 does not have floating-point extending loads, i1 sign-extending; // load, floating-point truncating stores, or v2i32->v2i16 truncating store.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:40,extend,extending,40,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,2,['extend'],['extending']
Modifiability,"// AArch64 mandates that the RHS of the operation must use the smallest; // register class that could contain the size being extended from. Thus,; // if we're folding a (sext i8), we need the RHS to be a GPR32, even though; // there might not be an actual 32-bit value in the program. We can; // (harmlessly) synthesize one by injected an EXTRACT_SUBREG here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:125,extend,extended,125,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,1,['extend'],['extended']
Modifiability,"// ABC for user plugins connecter to a geometry iterator.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNode.h:16,plugin,plugins,16,geom/geom/inc/TGeoNode.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/geom/inc/TGeoNode.h,1,['plugin'],['plugins']
Modifiability,"// ABI says: ""One of the simple integer types no more than 64 bits wide.; // ... If such an argument is shorter than 64 bits, replace it by a full; // 64-bit integer representing the same number, using sign or zero; // extension"". Shadow for an integer argument has the same type as the; // argument itself, so it can be sign or zero extended as well.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp:334,extend,extended,334,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,1,['extend'],['extended']
Modifiability,// ABIArgInfo will record the argument as being extended based on the sign; // of its type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CodeGen/CGFunctionInfo.h:48,extend,extended,48,interpreter/llvm-project/clang/include/clang/CodeGen/CGFunctionInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CodeGen/CGFunctionInfo.h,1,['extend'],['extended']
Modifiability,// ADD/SUB with can negate the immediate and use the opposite operation; // to fit 128 into a sign extended 8 bit immediate.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp:99,extend,extended,99,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,1,['extend'],['extended']
Modifiability,// ADDiu sign extends immediate. Used for values with 1s in high 17 bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsInstructionSelector.cpp:14,extend,extends,14,interpreter/llvm-project/llvm/lib/Target/Mips/MipsInstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsInstructionSelector.cpp,1,['extend'],['extends']
Modifiability,"// ADRPs and ADDs for this candidate may be split apart if using; // GlobalISel instead of pseudo-expanded. If that happens, the; // def register of the ADD may have a use in between. Adding an LOH in; // this case can cause the linker to rewrite the ADRP to write to that; // register, clobbering the use.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp:239,rewrite,rewrite,239,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64CollectLOH.cpp,1,['rewrite'],['rewrite']
Modifiability,// AIX ABI Stack Frame Layout:; //; // Low Memory +--------------------------------------------+; // SP +---> | Back chain | ---+; // | +--------------------------------------------+ | ; // | | Saved Condition Register | |; // | +--------------------------------------------+ |; // | | Saved Linkage Register | |; // | +--------------------------------------------+ | Linkage Area; // | | Reserved for compilers | |; // | +--------------------------------------------+ |; // | | Reserved for binders | |; // | +--------------------------------------------+ |; // | | Saved TOC pointer | ---+; // | +--------------------------------------------+; // | | Parameter save area |; // | +--------------------------------------------+; // | | Alloca space |; // | +--------------------------------------------+; // | | Local variable space |; // | +--------------------------------------------+; // | | Float/int conversion temporary |; // | +--------------------------------------------+; // | | Save area for AltiVec registers |; // | +--------------------------------------------+; // | | AltiVec alignment padding |; // | +--------------------------------------------+; // | | Save area for VRSAVE register |; // | +--------------------------------------------+; // | | Save area for General Purpose registers |; // | +--------------------------------------------+; // | | Save area for Floating Point registers |; // | +--------------------------------------------+; // +---- | Back chain |; // High Memory +--------------------------------------------+; //; // Specifications:; // AIX 7.2 Assembler Language Reference; // Subroutine linkage convention,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:818,variab,variable,818,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['variab'],['variable']
Modifiability,"// AIX debug for thread local location is not ready. And for integrated as; // mode, the relocatable address for the thread local variable will cause; // linker error. So disable the location attribute generation for thread local; // variables for now.; // FIXME: when TLS debug on AIX is ready, remove this setting.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp:130,variab,variable,130,interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,"// AMBefore is the addressing mode before this instruction was folded into it,; // and AMAfter is the addressing mode after the instruction was folded. Get; // the set of registers referenced by AMAfter and subtract out those; // referenced by AMBefore: this is the set of values which folding in this; // address extends the lifetime of.; //; // Note that there are only two potential values being referenced here,; // BaseReg and ScaleReg (global addresses are always available, as are any; // folded immediates).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:314,extend,extends,314,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['extend'],['extends']
Modifiability,"// AMD64-ABI 3.2.3p2: Rule 1. If the size of an object is larger than; // eight eightbytes, or it contains unaligned fields, it has class MEMORY.; //; // The only case a 256-bit or a 512-bit wide vector could be used is when; // the struct contains a single 256-bit or 512-bit element. Early check; // and fallback to memory.; //; // FIXME: Extended the Lo and Hi logic properly to work for size wider; // than 128.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp:341,Extend,Extended,341,interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,1,['Extend'],['Extended']
Modifiability,"// AMT note ... the REveSelection changes fall here; // I think this should be a separate change bit; // Yes, or maybe Color should be be json only, ObjProps for RnrData.; // Although some classes might have an extended json part --; // and this case could be separated out.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:211,extend,extended,211,ui5/eve7/lib/EveManager.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js,1,['extend'],['extended']
Modifiability,// AND32ri is the same as AND64ri32 with zext imm.; // Try this before sign extended immediates below.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp:76,extend,extended,76,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,1,['extend'],['extended']
Modifiability,"// APInts must be the same size for most operations, this helper; // function zero extends the shorter of the pair so that they match.; // We provide an Offset so that we can create bitwidths that won't overflow.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:83,extend,extends,83,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['extend'],['extends']
Modifiability,// ARC __strong __block variables need to be retained.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp:24,variab,variables,24,interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp,1,['variab'],['variables']
Modifiability,// ARM does not have floating-point extending loads.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:36,extend,extending,36,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['extend'],['extending']
Modifiability,// ARM does not have i1 sign extending load.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:29,extend,extending,29,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['extend'],['extending']
Modifiability,// ARM mode needs an extra reg0 here due to addrmode2. Will go away once; // that refactoring is complete (eventually).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp:82,refactor,refactoring,82,interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFrameLowering.cpp,1,['refactor'],['refactoring']
Modifiability,"// ASan, HWASan and Memtag sanitizers have some instrumentation that applies; // specifically to global variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GlobalValue.h:104,variab,variables,104,interpreter/llvm-project/llvm/include/llvm/IR/GlobalValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GlobalValue.h,1,['variab'],['variables']
Modifiability,"// ASan-specific metadata. Is this global variable dynamically initialized; // (from a C++ language perspective), and should therefore be checked for; // ODR violations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GlobalValue.h:42,variab,variable,42,interpreter/llvm-project/llvm/include/llvm/IR/GlobalValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GlobalValue.h,1,['variab'],['variable']
Modifiability,// ATOMIC_CMP_SWAP for i8/i16 needs to zero-extend its input since it will be; // compared to a value that is atomically loaded (atomic loads zero-extend).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:44,extend,extend,44,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,2,['extend'],['extend']
Modifiability,"// AVX2 also has wider vector sign/zero extending loads, VPMOV[SZ]X",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:40,extend,extending,40,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['extend'],['extending']
Modifiability,// AVX2 has vpsllv[dq] instructions (and other shifts) that make variable; // shifts just as cheap as scalar ones.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:65,variab,variable,65,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['variab'],['variable']
Modifiability,"// AVX512 - Extend select with zero to merge with target shuffle.; // select(mask, extract_subvector(shuffle(x)), zero) -->; // extract_subvector(select(insert_subvector(mask), shuffle(x), zero)); // TODO - support non target shuffles as well.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:12,Extend,Extend,12,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['Extend'],['Extend']
Modifiability,// Abandon early if there is no tile register to config.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastPreTileConfig.cpp:49,config,config,49,interpreter/llvm-project/llvm/lib/Target/X86/X86FastPreTileConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastPreTileConfig.cpp,1,['config'],['config']
Modifiability,"// Absolute address LDS variables that exist prior to the LDS lowering; // pass raise a fatal error in that pass. These failure modes are only; // reachable if that lowering pass is disabled or broken. If/when adding; // support for absolute addresses on user specified variables, the; // alignment check moves to the lowering pass and the frame calculation; // needs to take the user variables into consideration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUMachineFunction.cpp:24,variab,variables,24,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUMachineFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUMachineFunction.cpp,3,['variab'],['variables']
Modifiability,"// Absolute values represent the min of all real dimensions; // that are known. The fact that it is negatif indicates; // that one of the leaf has a variable size for this; // dimensions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx:149,variab,variable,149,tree/treeplayer/src/TTreeFormulaManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx,1,['variab'],['variable']
Modifiability,"// Abstract discrete variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategory.h:21,variab,variable,21,roofit/roofitcore/inc/RooAbsCategory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategory.h,1,['variab'],['variable']
Modifiability,"// Abstract hidden real-valued variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsHiddenReal.h:31,variab,variable,31,roofit/roofitcore/inc/RooAbsHiddenReal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsHiddenReal.h,1,['variab'],['variable']
Modifiability,"// Abstract modifiable index variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategoryLValue.h:29,variab,variable,29,roofit/roofitcore/inc/RooAbsCategoryLValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsCategoryLValue.h,1,['variab'],['variable']
Modifiability,"// Abstract real-valued variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsReal.h:24,variab,variable,24,roofit/roofitcore/inc/RooAbsReal.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsReal.h,1,['variab'],['variable']
Modifiability,"// Abstract variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h:12,variab,variable,12,roofit/roofitcore/inc/RooAbsArg.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsArg.h,2,['variab'],['variable']
Modifiability,"// Abstract variables don't get common attributes later, so apply them now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp:12,variab,variables,12,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,1,['variab'],['variables']
Modifiability,"// Access of the ctor is access of the base inheritance, and; // cannot be overruled by the access of the using decl.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx:44,inherit,inheritance,44,core/metacling/src/TClingMethodInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingMethodInfo.cxx,1,['inherit'],['inheritance']
Modifiability,"// Access to address of TLS varialbe xyz is lowered to a function call:; // __emutls_get_address( address of global variable named ""__emutls_v.xyz"" )",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:116,variab,variable,116,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,1,['variab'],['variable']
Modifiability,"// Accessors for fit options, generator and MCstudy configuration flags; /// Return list of fit options provided by user",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsMCStudyModule.h:52,config,configuration,52,roofit/roofitcore/inc/RooAbsMCStudyModule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsMCStudyModule.h,1,['config'],['configuration']
Modifiability,"// According to ABI document section 'Optional Save Areas': If extended; // precision floating-point values in IEEE BINARY 128 QUADRUPLE PRECISION; // format are supported, map them to a single quadword, quadword aligned.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/PPC.cpp:63,extend,extended,63,interpreter/llvm-project/clang/lib/CodeGen/Targets/PPC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/PPC.cpp,1,['extend'],['extended']
Modifiability,"// According to AMX ABI, all the tile registers including config register; // are volatile. Caller need to save/restore config register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastPreTileConfig.cpp:58,config,config,58,interpreter/llvm-project/llvm/lib/Target/X86/X86FastPreTileConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastPreTileConfig.cpp,2,['config'],['config']
Modifiability,"// According to E.2.3.1 in CUDA-7.5 Programming guide: __device__,; // __constant__ and __shared__ variables defined in namespace scope,; // that are of class type, cannot have a non-empty constructor. All; // the checks have been done in Sema by now. Whatever initializers; // are allowed are empty and we just need to ignore them here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp:99,variab,variables,99,interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp,1,['variab'],['variables']
Modifiability,"// According to GCC 'Basic PowerPC Built-in Functions Available on ISA 2.05',; // __builtin_(un)pack_longdouble are available only if long double uses IBM; // extended double representation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:159,extend,extended,159,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['extend'],['extended']
Modifiability,"// According to GCC info page:; //; // 6.28 Compound Literals; //; // As an optimization, G++ sometimes gives array compound literals longer; // lifetimes: when the array either appears outside a function or has a; // const-qualified type. If foo and its initializer had elements of type; // char *const rather than char *, or if foo were a global variable, the; // array would have static storage duration. But it is probably safest; // just to avoid the use of array compound literals in C++ code.; //; // Obey that rule by checking constness for converted array types.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:348,variab,variable,348,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['variab'],['variable']
Modifiability,"// According to https://clang.llvm.org/docs/ClangPlugins.html; // plugin arguments are in the form:; // -Xclang {-load, -plugin, -plugin-arg-<plugin-name>, -add-plugin}; // -Xclang <arbitrary-argument>",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/ArgumentsAdjusters.cpp:66,plugin,plugin,66,interpreter/llvm-project/clang/lib/Tooling/ArgumentsAdjusters.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/ArgumentsAdjusters.cpp,5,['plugin'],"['plugin', 'plugin-arg', 'plugin-name']"
Modifiability,"// According to the blocks spec, the capture of a variable from; // the stack requires a const copy constructor. This is not true; // of the copy/move done to move a __block variable to the heap.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:50,variab,variable,50,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,2,['variab'],['variable']
Modifiability,// According to; // https://docs.nvidia.com/cuda/archive/10.0/ptx-writers-guide-to-interoperability/index.html#cuda-specific-dwarf; // cuda-gdb requires DW_AT_address_class for all variables to be able to; // correctly interpret address space of the variable address.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp:181,variab,variables,181,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,// According to; // https://docs.nvidia.com/cuda/archive/10.0/ptx-writers-guide-to-interoperability/index.html#cuda-specific-dwarf; // cuda-gdb requires DW_AT_address_class for all variables to be able to; // correctly interpret address space of the variable address.; // Decode DW_OP_constu <DWARF Address Space> DW_OP_swap DW_OP_xderef; // sequence for the NVPTX + gdb target.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp:181,variab,variables,181,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,// According to; // https://docs.nvidia.com/cuda/archive/10.0/ptx-writers-guide-to-interoperability/index.html#cuda-specific-dwarf; // cuda-gdb requires DW_AT_address_class for all variables to be; // able to correctly interpret address space of the variable; // address.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp:181,variab,variables,181,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,// According to; // https://docs.nvidia.com/cuda/archive/10.0/ptx-writers-guide-to-interoperability/index.html#cuda-specific-dwarf; // cuda-gdb requires DW_AT_address_class for all variables to be; // able to correctly interpret address space of the variable; // address. Decode DW_OP_constu <DWARF Address Space> DW_OP_swap; // DW_OP_xderef sequence for the NVPTX + gdb target.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp:181,variab,variables,181,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,// Account as cost in the original configuration the gain obtained; // with the current slices.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:35,config,configuration,35,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['config'],['configuration']
Modifiability,"// Account for when ADD_TLS is used for the initial-exec TLS model on Linux.; //; // Although ADD_TLS does not explicitly use the thread pointer; // register when LD_GOT_TPREL_L is one of it's operands, the LD_GOT_TPREL_L; // instruction will have a relocation specifier, @got@tprel, that is used to; // generate a GOT entry. The linker replaces this entry with an offset for a; // for a thread local variable, which will be relative to the thread pointer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:401,variab,variable,401,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,1,['variab'],['variable']
Modifiability,// Accumulate the constant indices in a separate variable; // to minimize the number of calls to computeForAddSub.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp:49,variab,variable,49,interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,1,['variab'],['variable']
Modifiability,"// Acquire pointers to ROOT's task arena from many threads in parallel.; // To create more chaos, half of the threads will immediately try to get the pointer,; // while the other half waits for a condition variable.; // To test destroying and recreating a task arena, the first half of the shared; // pointers will be destroyed before the other threads are released.; // Then, using a notify_all(), the other half of threads will wake up; // and race to create a task arena again.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx:206,variab,variable,206,core/imt/test/testRTaskArena.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/imt/test/testRTaskArena.cxx,1,['variab'],['variable']
Modifiability,"// ActionButton( cbar,; // TString::Format( ""(%i) Rule Ensemble Importance Plots (RuleFit)"", ++ic ),; // TString::Format( ""TMVA::rulevis(\""%s\"",0)"", fName ),; // ""Plots all input variables with rule ensemble weights, including linear terms (macro rulevis.cxx)"",; // buttonType, ""RuleFit"" );",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmvagui/src/TMVAGui.cxx:179,variab,variables,179,tmva/tmvagui/src/TMVAGui.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmvagui/src/TMVAGui.cxx,1,['variab'],['variables']
Modifiability,"// Activate signal with variable argument list.; // For internal use and for var arg EmitVA() in RQ_OBJECT.h.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TQObject.h:24,variab,variable,24,core/base/inc/TQObject.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/TQObject.h,1,['variab'],['variable']
Modifiability,// Actually capture the variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:24,variab,variable,24,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,2,['variab'],['variable']
Modifiability,// Adapt following lines on the current indent level to the same level; // unless the current \c AnnotatedLine is not at the beginning of a line.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp:3,Adapt,Adapt,3,interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/UnwrappedLineFormatter.cpp,1,['Adapt'],['Adapt']
Modifiability,"// Adapt the end range, because LocationCompare() reports; // RangeOverlap even for the not-inclusive end location.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp:3,Adapt,Adapt,3,interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,1,['Adapt'],['Adapt']
Modifiability,"// Adapt the start of the token, for example indent.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp:3,Adapt,Adapt,3,interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp,2,['Adapt'],['Adapt']
Modifiability,// Adapt to the width of a register.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:3,Adapt,Adapt,3,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['Adapt'],['Adapt']
Modifiability,"// Adaptable scheduling; // A small, but very parallel; // region, where reg pressure is an issue.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp:3,Adapt,Adaptable,3,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ResourcePriorityQueue.cpp,1,['Adapt'],['Adaptable']
Modifiability,"// Adapted from VisualStudio/VC/crt/src/vcruntime/throw.cpp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp:3,Adapt,Adapted,3,interpreter/cling/lib/Utils/PlatformWin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp,1,['Adapt'],['Adapted']
Modifiability,"// Adapted from clang/lib/Frontend/CompilerInvocation.cpp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/Paths.cpp:3,Adapt,Adapted,3,interpreter/cling/lib/Utils/Paths.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/Paths.cpp,1,['Adapt'],['Adapted']
Modifiability,"// Adapted from http://stackoverflow.com/questions/3758606/; // how-to-convert-byte-size-into-human-readable-format-in-java; // and http://agentzlerich.blogspot.com/2011/01/converting-to-and-from-human-readable.html; // However those sources use the 'conventional' 'legacy' nomenclature,; // rather than the official Standard Units. See; // http://physics.nist.gov/cuu/Units/binary.html; // and http://www.dr-lex.be/info-stuff/bytecalc.html for example.; ///////////////////////////////////////////////////////////////////////////////; /// Return the size expressed in 'human readable' format.; /// \param bytes the size in bytes to be converted; /// \param si whether to use the SI units or not.; /// \param coeff return the size expressed in the new unit.; /// \param units return a pointer to the string representation of the new unit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/StringConv.hxx:3,Adapt,Adapted,3,core/base/inc/ROOT/StringConv.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/inc/ROOT/StringConv.hxx,1,['Adapt'],['Adapted']
Modifiability,"// Adapted from https://gcc.gnu.org/wiki/Visibility",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Visibility.h:3,Adapt,Adapted,3,interpreter/cling/include/cling/Interpreter/Visibility.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Visibility.h,1,['Adapt'],['Adapted']
Modifiability,"// Adapted from https://github.com/mountainstorm/CoreSymbolication; // Under the hood the framework basically just calls through to a set of C++ libraries",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx:3,Adapt,Adapted,3,core/unix/src/TUnixSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/unix/src/TUnixSystem.cxx,1,['Adapt'],['Adapted']
Modifiability,"// Adapted from llvm/Support/Compiler.h",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Visibility.h:3,Adapt,Adapted,3,interpreter/cling/include/cling/Interpreter/Visibility.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/include/cling/Interpreter/Visibility.h,1,['Adapt'],['Adapted']
Modifiability,"// Adapted from utf8++",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/UTF8.cpp:3,Adapt,Adapted,3,interpreter/cling/lib/Utils/UTF8.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/UTF8.cpp,1,['Adapt'],['Adapted']
Modifiability,// Adapter class to llvm::support::endian::Writer for pwrite().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/SampleProfWriter.cpp:3,Adapt,Adapter,3,interpreter/llvm-project/llvm/lib/ProfileData/SampleProfWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/SampleProfWriter.cpp,1,['Adapt'],['Adapter']
Modifiability,"// Adapter for a VecGeom shape",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/geom/vecgeom/inc/TGeoVGShape.h:3,Adapt,Adapter,3,geom/vecgeom/inc/TGeoVGShape.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/geom/vecgeom/inc/TGeoVGShape.h,1,['Adapt'],['Adapter']
Modifiability,"// Adaptive kernel estimation pdf with increased bandwidth scale factor; // (promotes smoothness over detail preservation)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:3,Adapt,Adaptive,3,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['Adapt'],['Adaptive']
Modifiability,// Adapts the external decomposeBitTestICmp for local use.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:3,Adapt,Adapts,3,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,1,['Adapt'],['Adapts']
Modifiability,"// Add ""found"" diagnostic, substitutions, and variable definitions to Diags.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp:46,variab,variable,46,interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,1,['variab'],['variable']
Modifiability,// Add 'const' and mark the variable as pseudo-strong.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:28,variab,variable,28,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,1,['variab'],['variable']
Modifiability,// Add Layers,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/SpeculativeJIT/SpeculativeJIT.cpp:7,Layers,Layers,7,interpreter/llvm-project/llvm/examples/SpeculativeJIT/SpeculativeJIT.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/SpeculativeJIT/SpeculativeJIT.cpp,1,['Layers'],['Layers']
Modifiability,// Add a __block variable introduced in this function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/ScopeInfo.h:17,variab,variable,17,interpreter/llvm-project/clang/include/clang/Sema/ScopeInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/ScopeInfo.h,1,['variab'],['variable']
Modifiability,// Add a conjunct for each variable that represents a top-level conjunction; // value in `Vals`.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp:27,variab,variable,27,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp,1,['variab'],['variable']
Modifiability,// Add a prefix to allocated sections and their relocation sections. This; // should be done after renaming the section by Config.SectionToRename to; // imitate the GNU objcopy behavior.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ObjCopy/ELF/ELFObjcopy.cpp:123,Config,Config,123,interpreter/llvm-project/llvm/lib/ObjCopy/ELF/ELFObjcopy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ObjCopy/ELF/ELFObjcopy.cpp,1,['Config'],['Config']
Modifiability,// Add a rewrite that encodes the size information we used from the; // frontend.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp:9,rewrite,rewrite,9,interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp,1,['rewrite'],['rewrite']
Modifiability,"// Add a suffix to the CUDA module ctor/dtor, CUDA specific functions and; // variables to generate a unique name. This is necessary for lazy; // compilation. Without suffix, cling cannot distinguish ctor/dtor, register; // function and and ptx code string of subsequent modules.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:78,variab,variables,78,interpreter/cling/lib/Interpreter/BackendPasses.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp,1,['variab'],['variables']
Modifiability,"// Add all appropriate layers to deepNet and (if fBuildNet is true) also to fNet",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDL.cxx:23,layers,layers,23,tmva/tmva/src/MethodDL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodDL.cxx,1,['layers'],['layers']
Modifiability,// Add all of the instance variables in this class and its superclasses.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:27,variab,variables,27,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['variab'],['variables']
Modifiability,// Add all of the unnamed global variables to the value table.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AsmWriter.cpp:33,variab,variables,33,interpreter/llvm-project/llvm/lib/IR/AsmWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AsmWriter.cpp,1,['variab'],['variables']
Modifiability,"// Add an extra element to the shuffle, taking it from element Elem of Op.; // A null Op indicates a vector input whose value will be calculated later;; // there is at most one such input per shuffle and it always has the same; // type as the result. Aborts and returns false if the source vector elements; // of an EXTRACT_VECTOR_ELT are smaller than the destination elements. Per; // LLVM they become implicitly extended, but this is rare and not optimized.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp:414,extend,extended,414,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,1,['extend'],['extended']
Modifiability,// Add an instance of our plugin.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithObjectLinkingLayerPlugin/LLJITWithObjectLinkingLayerPlugin.cpp:26,plugin,plugin,26,interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithObjectLinkingLayerPlugin/LLJITWithObjectLinkingLayerPlugin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithObjectLinkingLayerPlugin/LLJITWithObjectLinkingLayerPlugin.cpp,1,['plugin'],['plugin']
Modifiability,"// Add an integer variable or expression to the reader",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx:18,variab,variable,18,tmva/tmva/src/Reader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/Reader.cxx,1,['variab'],['variable']
Modifiability,// Add arguments to variable symbol table.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp:20,variab,variable,20,interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,13,['variab'],['variable']
Modifiability,// Add arguments. Do not add arguments for subprogram definition. They will; // be handled while processing variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.cpp:108,variab,variables,108,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfUnit.cpp,1,['variab'],['variables']
Modifiability,// Add back the flexible array.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Randstruct.cpp:16,flexible,flexible,16,interpreter/llvm-project/clang/lib/AST/Randstruct.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Randstruct.cpp,1,['flexible'],['flexible']
Modifiability,"// Add capture. The capture uses a fake variable, which doesn't correspond; // to any actual memory location. However, the initializer copy-initializes; // the lambda object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp:40,variab,variable,40,interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,1,['variab'],['variable']
Modifiability,"// Add column with variable w to previously generated dataset",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:19,variab,variable,19,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['variab'],['variable']
Modifiability,"// Add configuration paths to interpreter's include files.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:7,config,configuration,7,interpreter/cling/lib/Interpreter/CIFactory.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp,1,['config'],['configuration']
Modifiability,// Add conjuncts that represent the mapping between newly-created variables; // and their corresponding sub-formulas.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp:66,variab,variables,66,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp,1,['variab'],['variables']
Modifiability,"// Add cost for extending to illegal -too wide- scalable vectors.; // zero/sign extend are implemented by multiple unpack operations,; // where each operation has a cost of 1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp:16,extend,extending,16,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp,2,['extend'],"['extend', 'extending']"
Modifiability,"// Add default config to master config",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx:15,config,config,15,roofit/roofitcore/src/RooNumGenFactory.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenFactory.cxx,4,['config'],['config']
Modifiability,// Add dirs specified via 'configure --with-c-include-dirs'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Haiku.cpp:27,config,configure,27,interpreter/llvm-project/clang/lib/Driver/ToolChains/Haiku.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Haiku.cpp,2,['config'],['configure']
Modifiability,// Add extra constraints for variables that are known positive.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp:29,variab,variables,29,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,1,['variab'],['variables']
Modifiability,// Add fake parenthesis around declarations of the same type for example in a; // module prototype. Return the first port / variable of the current type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp:124,variab,variable,124,interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp,1,['variab'],['variable']
Modifiability,// Add implicit scope and dtors for loop variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:41,variab,variable,41,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,1,['variab'],['variable']
Modifiability,// Add initializer for private variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:31,variab,variable,31,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,// Add inner imported variables now used in current block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp:22,variab,variables,22,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,2,['variab'],['variables']
Modifiability,"// Add linkage unit visibility to any variable with type metadata, which are; // the vtable definitions. We won't have an existing vcall_visibility; // metadata on vtable definitions with public visibility.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp:38,variab,variable,38,interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp,1,['variab'],['variable']
Modifiability,// Add local variables with trivial type to the variable map,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp:13,variab,variables,13,interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp,4,['variab'],"['variable', 'variables']"
Modifiability,"// Add module metadata for return address signing (ignoring; // non-leaf/all) and stack tagging. These are actually turned on by function; // attributes, but we use module metadata to emit build attributes. This is; // needed for LTO, where the function attributes are inside bitcode; // serialised into a global variable by the time build attributes are; // emitted, so we can't access them. LTO objects could be compiled with; // different flags therefore module flags are set to ""Min"" behavior to achieve; // the same end result of the normal build where e.g BTI is off if any object; // doesn't support it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:313,variab,variable,313,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['variab'],['variable']
Modifiability,// Add non-variable argument origins.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp:11,variab,variable,11,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,1,['variab'],['variable']
Modifiability,// Add number of variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineDebugify.cpp:17,variab,variables,17,interpreter/llvm-project/llvm/lib/CodeGen/MachineDebugify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineDebugify.cpp,1,['variab'],['variables']
Modifiability,// Add parameters to local variable map.; // FIXME: right now we emulate params with loads; that should be fixed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafetyCommon.cpp:27,variab,variable,27,interpreter/llvm-project/clang/lib/Analysis/ThreadSafetyCommon.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafetyCommon.cpp,1,['variab'],['variable']
Modifiability,// Add paths specified in LIBRARY_PATH environment variable as -L options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.cpp:51,variab,variable,51,interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Cuda.cpp,1,['variab'],['variable']
Modifiability,// Add plugin for debug support.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithRemoteDebugging/LLJITWithRemoteDebugging.cpp:7,plugin,plugin,7,interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithRemoteDebugging/LLJITWithRemoteDebugging.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithRemoteDebugging/LLJITWithRemoteDebugging.cpp,1,['plugin'],['plugin']
Modifiability,"// Add prolog and epilog code to the function. This function is required; // to align the stack frame as necessary for any stack variables or; // called functions. Because of this, calculateCalleeSavedRegisters(); // must be called before this function in order to set the AdjustsStack; // and MaxCallFrameSize variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp:129,variab,variables,129,interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp,2,['variab'],['variables']
Modifiability,// Add search directories from LIBRARY_PATH env variable,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/CommonArgs.cpp:48,variab,variable,48,interpreter/llvm-project/clang/lib/Driver/ToolChains/CommonArgs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/CommonArgs.cpp,1,['variab'],['variable']
Modifiability,// Add template arguments from a variable template instantiation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp:33,variab,variable,33,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp,1,['variab'],['variable']
Modifiability,// Add temporary variable to initialize the private copy of the pointer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:17,variab,variable,17,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,"// Add the (potentially negative) delta to all the configuration's offset. This is used by; // TBranchElement in the case of split sub-object.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:51,config,configuration,51,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,5,['config'],['configuration']
Modifiability,"// Add the (potentially negative) delta to all the configuration's offset. This is used by; // TTBranchElement in the case of split sub-object.; // If opt contains 'func', also print the (mangled) name of the function that will be executed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:51,config,configuration,51,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['config'],['configuration']
Modifiability,"// Add the contribution from the valid remaining points and store the result in the output variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitUtil.h:91,variab,variable,91,math/mathcore/inc/Fit/FitUtil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/inc/Fit/FitUtil.h,4,['variab'],['variable']
Modifiability,// Add the global variable record to the API set.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ExtractAPI/ExtractAPIVisitor.h:18,variab,variable,18,interpreter/llvm-project/clang/include/clang/ExtractAPI/ExtractAPIVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ExtractAPI/ExtractAPIVisitor.h,1,['variab'],['variable']
Modifiability,// Add the live variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:16,variab,variables,16,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['variab'],['variables']
Modifiability,// Add the mapper variable declaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp:18,variab,variable,18,interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp,1,['variab'],['variable']
Modifiability,// Add the most recent definition (or extended definition) of each; // namespace to the list of results.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp:38,extend,extended,38,interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCodeComplete.cpp,1,['extend'],['extended']
Modifiability,// Add the nested pass manager with the appropriate adaptor.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp:52,adapt,adaptor,52,interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilder.cpp,5,['adapt'],['adaptor']
Modifiability,"// Add the pair Reg, Expr to the list of entry values describing the variable.; // If multiple expressions are added, it is the callers responsibility to; // ensure they are all non-overlapping fragments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.h:69,variab,variable,69,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.h,1,['variab'],['variable']
Modifiability,"// Add the part of A that extends on the ""less"" side of B.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBlockRanges.cpp:26,extend,extends,26,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBlockRanges.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBlockRanges.cpp,1,['extend'],['extends']
Modifiability,"// Add the remainder of the reduction-variable chain to the instruction vector; // (the initial PHINode has already been added). If successful, the object is; // marked as valid.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp:38,variab,variable,38,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp,1,['variab'],['variable']
Modifiability,// Add the single-location variables first.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp:27,variab,variables,27,interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,1,['variab'],['variables']
Modifiability,"// Add the streamer info records from streamer fields: because of runtime polymorphism we may need to add additional; // types not covered by the type names stored in the field headers",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/src/RNTupleDescriptor.cxx:74,polymorphi,polymorphism,74,tree/ntuple/v7/src/RNTupleDescriptor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/src/RNTupleDescriptor.cxx,1,['polymorphi'],['polymorphism']
Modifiability,// Add the variable to scope,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:11,variab,variable,11,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,1,['variab'],['variable']
Modifiability,// Add this PHI to the rewrite table.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp:23,rewrite,rewrite,23,interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/M68k/M68kISelLowering.cpp,5,['rewrite'],['rewrite']
Modifiability,// Add this function to constructors.; // Set priority to 1 so that __tgt_register_lib is executed AFTER; // __tgt_register_requires (we want to know what requirements have been; // asked for before we load a libomptarget plugin so that by the time the; // plugin is loaded it can report how many devices there are which can; // satisfy these requirements).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/Offloading/OffloadWrapper.cpp:222,plugin,plugin,222,interpreter/llvm-project/llvm/lib/Frontend/Offloading/OffloadWrapper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/Offloading/OffloadWrapper.cpp,2,['plugin'],['plugin']
Modifiability,// Add this partial specialization to the set of variable template partial; // specializations. The instantiation of the initializer is not necessary.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:49,variab,variable,49,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,1,['variab'],['variable']
Modifiability,// Add this variable to the BB map.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp:12,variab,variable,12,interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,1,['variab'],['variable']
Modifiability,"// Add to Consumers the main consumer, then all the plugins that go after it",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/FrontendAction.cpp:52,plugin,plugins,52,interpreter/llvm-project/clang/lib/Frontend/FrontendAction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/FrontendAction.cpp,1,['plugin'],['plugins']
Modifiability,// Add to size number of constant extenders seen * 4.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp:34,extend,extenders,34,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp,1,['extend'],['extenders']
Modifiability,// Add variable argument origins.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp:7,variab,variable,7,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,1,['variab'],['variable']
Modifiability,"// Add variable to summary dataset to hold generator value",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx:7,variab,variable,7,roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,2,['variab'],['variable']
Modifiability,"// Add variables and register the trees with the dataloader",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/rreader.cxx:7,variab,variables,7,tmva/tmva/test/rreader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/test/rreader.cxx,3,['variab'],['variables']
Modifiability,"// Add variables to summary dataset to hold generator values",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx:7,variab,variables,7,roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,2,['variab'],['variables']
Modifiability,"// Add weight variable explicitly if dataset has weights, but no top-level weight; // variable exists (can happen with composite datastores)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:14,variab,variable,14,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,2,['variab'],['variable']
Modifiability,"// Adding -fmodules to the args will break lexing with __CINT__ defined,; // and we actually do lex with __CINT__ and reuse this variable later,; // we have to copy it now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:129,variab,variable,129,core/dictgen/src/rootcling_impl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx,1,['variab'],['variable']
Modifiability,// Additional options to pass into the code generator.; // Note: This array will contain all plugin options which are not claimed; // as plugin exclusive to pass to the code generator.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/gold/gold-plugin.cpp:93,plugin,plugin,93,interpreter/llvm-project/llvm/tools/gold/gold-plugin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/gold/gold-plugin.cpp,2,['plugin'],['plugin']
Modifiability,"// Additionally, in C++11, non-volatile constexpr variables can be used in; // constant expressions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp:50,variab,variables,50,interpreter/llvm-project/clang/lib/AST/Decl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp,1,['variab'],['variables']
Modifiability,// Address of the thread local variable is the add of thread; // pointer and the offset of the variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp:31,variab,variable,31,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp,4,['variab'],['variable']
Modifiability,"// Adds a new definition to the given context, and returns a new context.; // This method should be called when declaring a new variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp:128,variab,variable,128,interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp,1,['variab'],['variable']
Modifiability,// Adds a new variable declaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafetyCommon.cpp:14,variab,variable,14,interpreter/llvm-project/clang/lib/Analysis/ThreadSafetyCommon.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafetyCommon.cpp,1,['variab'],['variable']
Modifiability,// Adds non-variable argument shadows.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp:12,variab,variable,12,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,1,['variab'],['variable']
Modifiability,// Adds non-variable arguments.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp:12,variab,variable,12,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,1,['variab'],['variable']
Modifiability,// Adds variable argument shadows.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp:8,variab,variable,8,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,1,['variab'],['variable']
Modifiability,// Adds variable arguments.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp:8,variab,variable,8,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/DataFlowSanitizer.cpp,1,['variab'],['variable']
Modifiability,// Adjust local variables that are 4-bytes or larger to 4-byte boundary,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARC/ARCFrameLowering.cpp:16,variab,variables,16,interpreter/llvm-project/llvm/lib/Target/ARC/ARCFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARC/ARCFrameLowering.cpp,1,['variab'],['variables']
Modifiability,"// Adjust offset for extended arguments, SPARC is big-endian.; // The caller will have written the full slot with extended bytes, but we; // prefer our own extending loads.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Sparc/SparcISelLowering.cpp:21,extend,extended,21,interpreter/llvm-project/llvm/lib/Target/Sparc/SparcISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Sparc/SparcISelLowering.cpp,3,['extend'],"['extended', 'extending']"
Modifiability,// Adjust the slice offset so that we go from describing the a slice; // of memory to a slice of the variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp:101,variab,variable,101,interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,1,['variab'],['variable']
Modifiability,"// Adjust the width of ShAmt for narrowed funnel shift operation:; // - Zero-extend if ShAmt is narrower than the destination type.; // - Truncate if ShAmt is wider, discarding non-significant high-order bits.; // This prepares ShAmt for llvm.fshl.i8(trunc(ShVal), trunc(ShVal),; // zext/trunc(ShAmt)).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp:77,extend,extend,77,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp,1,['extend'],['extend']
Modifiability,// Adjust type of load/store op if we've extended the scalar; // return value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp:41,extend,extended,41,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp,1,['extend'],['extended']
Modifiability,// Adjust type of the store op if we've extended the scalar; // return value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp:40,extend,extended,40,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp,1,['extend'],['extended']
Modifiability,"// After a call to a function like setjmp or vfork, any variable which is; // initialized anywhere within this function may now be initialized. For; // now, just assume such a call initializes all variables. FIXME: Only; // mark variables as initialized if they have an initializer which is; // reachable from here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UninitializedValues.cpp:56,variab,variable,56,interpreter/llvm-project/clang/lib/Analysis/UninitializedValues.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UninitializedValues.cpp,3,['variab'],"['variable', 'variables']"
Modifiability,"// After splitting the edge and updating SlotIndexes, live intervals may be; // in one of two situations, depending on whether this block was the last in; // the function. If the original block was the last in the function, all; // live intervals will end prior to the beginning of the new split block. If; // the original block was not at the end of the function, all live intervals; // will extend to the end of the new split block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp:393,extend,extend,393,interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp,1,['extend'],['extend']
Modifiability,"// After the body surrounded by the critical region, the single executing; // thread will jump to the synchronisation point.; // Block waits for all threads in current team to finish then increments the; // counter variable and returns to the loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:215,variab,variable,215,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['variab'],['variable']
Modifiability,"// After we have configured the preprocessor, enter the main file.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/PrintPreprocessedOutput.cpp:17,config,configured,17,interpreter/llvm-project/clang/lib/Frontend/PrintPreprocessedOutput.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/PrintPreprocessedOutput.cpp,1,['config'],['configured']
Modifiability,"// After we have processed all vars of the inlined function (or function with; // an abstract_origin), we want to know how many variables have no location.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp:128,variab,variables,128,interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,1,['variab'],['variables']
Modifiability,"// Aggregates and complex variables are accessed by reference. All we; // need to do is realign the value, if requested. Also, if the address; // may be aliased, copy it to ensure that the parameter variable is; // mutable and has a unique adress, as C requires.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp:26,variab,variables,26,interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,"// Align following lines within parentheses / brackets if configured.; // Note: This doesn't apply to macro expansion lines, which are MACRO( , , ); // with args as children of the '(' and ',' tokens. It does not make sense to; // align the commas with the opening paren.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp:58,config,configured,58,interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp,1,['config'],['configured']
Modifiability,// Alignment of the variable (power of 2).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/ASanStackFrameLayout.h:20,variab,variable,20,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/ASanStackFrameLayout.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/ASanStackFrameLayout.h,1,['variab'],['variable']
Modifiability,// Alignment power-of-two before extending operand.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h:33,extend,extending,33,interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonBaseInfo.h,1,['extend'],['extending']
Modifiability,"// All (non-entry) blocks have at least one non-backedge predecessor.; // Pick the variable value from the first of these, to compare against; // all others.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:83,variab,variable,83,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['variab'],['variable']
Modifiability,// All LDS variables accessed indirectly have now been partitioned into; // the distinct lowering strategies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:11,variab,variables,11,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability,"// All PHIs in the inner and outer headers must either be:; // - The induction PHI, which we are going to rewrite as one induction in; // the new loop. This is already checked by findLoopComponents.; // - An outer header PHI with all incoming values from outside the loop.; // LoopSimplify guarantees we have a pre-header, so we don't need to; // worry about that here.; // - Pairs of PHIs in the inner and outer headers, which implement a; // loop-carried dependency that will still be valid in the new loop. To; // be valid, this variable must be modified only in the inner loop.; // The set of PHI nodes in the outer loop header that we know will still be; // valid after the transformation. These will not need to be modified (with; // the exception of the induction variable), but we do need to check that; // there are no unsafe PHI nodes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp:106,rewrite,rewrite,106,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp,3,"['rewrite', 'variab']","['rewrite', 'variable']"
Modifiability,// All __interfaces are inheritently interface-like.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp:24,inherit,inheritently,24,interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp,1,['inherit'],['inheritently']
Modifiability,"// All arguments, from both config file and command line.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:28,config,config,28,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['config'],['config']
Modifiability,"// All blocks that aren't dominated have no live-in value, thus no variable; // value will be given to them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:67,variab,variable,67,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['variab'],['variable']
Modifiability,"// All byte-wide stores are splatable, even of arbitrary variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp:57,variab,variables,57,interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,1,['variab'],['variables']
Modifiability,// All code for this class below this point is needed because of the; // temporary implicit conversion to uint64_t. The operator overloads are; // needed because otherwise the conversion of the parent class; // UnivariateLinearPolyBase -> TypeSize is ambiguous.; // TODO: Remove the implicit conversion.; // Casts to a uint64_t if this is a fixed-width size.; //; // This interface is deprecated and will be removed in a future version; // of LLVM in favour of upgrading uses that rely on this implicit conversion; // to uint64_t. Calls to functions that return a TypeSize should use the; // proper interfaces to TypeSize.; // In practice this is mostly calls to MVT/EVT::getSizeInBits().; //; // To determine how to upgrade the code:; //; // if (<algorithm works for both scalable and fixed-width vectors>); // use getKnownMinValue(); // else if (<algorithm works only for fixed-width vectors>) {; // if <algorithm can be adapted for both scalable and fixed-width vectors>; // update the algorithm and use getKnownMinValue(); // else; // bail out early for scalable vectors and use getFixedValue(); // },MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TypeSize.h:923,adapt,adapted,923,interpreter/llvm-project/llvm/include/llvm/Support/TypeSize.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TypeSize.h,1,['adapt'],['adapted']
Modifiability,// All configs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ObjCopy/ConfigManager.h:7,config,configs,7,interpreter/llvm-project/llvm/include/llvm/ObjCopy/ConfigManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ObjCopy/ConfigManager.h,1,['config'],['configs']
Modifiability,// All constant incoming values map to the same variable along the incoming; // edges of the phi. The phi is unnecessary.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/CorrelatedValuePropagation.cpp:48,variab,variable,48,interpreter/llvm-project/llvm/lib/Transforms/Scalar/CorrelatedValuePropagation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/CorrelatedValuePropagation.cpp,1,['variab'],['variable']
Modifiability,"// All extending loads extend to i32, so even if the value in; // memory is shorter than 32 bits, it will be i32 after the load.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp:7,extend,extending,7,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp,2,['extend'],"['extend', 'extending']"
Modifiability,// All extending must be with undef elements.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Instructions.cpp:7,extend,extending,7,interpreter/llvm-project/llvm/lib/IR/Instructions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Instructions.cpp,1,['extend'],['extending']
Modifiability,// All inputs need to be sign extends.; // TODO: Support ZERO_EXTEND from known positive?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:30,extend,extends,30,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['extend'],['extends']
Modifiability,"// All later checks examine the initializer specified on the variable. If; // the variable is weak, such examination would not be correct.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCXXABI.cpp:61,variab,variable,61,interpreter/llvm-project/clang/lib/CodeGen/CGCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCXXABI.cpp,2,['variab'],['variable']
Modifiability,// All live variables we know about in the object/image file.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objdump/SourcePrinter.h:12,variab,variables,12,interpreter/llvm-project/llvm/tools/llvm-objdump/SourcePrinter.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objdump/SourcePrinter.h,1,['variab'],['variables']
Modifiability,"// All of the below API is for querying properties of the ""outer type"", i.e.; // the type that contains the indexed type. Most of the time this is just; // the type that was visited immediately prior to the indexed type, but for; // the first element this is an unbounded array of the GEP's source element; // type, for which there is no clearly corresponding IR type (we've; // historically used a pointer type as the outer type in this case, but; // pointers will soon lose their element type).; //; // FIXME: Most current users of this class are just interested in byte; // offsets (a few need to know whether the outer type is a struct because; // they are trying to replace a constant with a variable, which is only; // legal for arrays, e.g. canReplaceOperandWithVariable in SimplifyCFG.cpp);; // we should provide a more minimal API here that exposes not much more than; // that.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GetElementPtrTypeIterator.h:697,variab,variable,697,interpreter/llvm-project/llvm/include/llvm/IR/GetElementPtrTypeIterator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/GetElementPtrTypeIterator.h,1,['variab'],['variable']
Modifiability,"// All other cases are not important, as they are either part of declaration; // specifiers (e.g. inheritors of TypeSpecTypeLoc) or introduce modifiers on; // existing declarators (e.g. QualifiedTypeLoc). They cannot start the; // declarator themselves, but their underlying type can.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Syntax/BuildTree.cpp:98,inherit,inheritors,98,interpreter/llvm-project/clang/lib/Tooling/Syntax/BuildTree.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Syntax/BuildTree.cpp,1,['inherit'],['inheritors']
Modifiability,// All other type attributes aren't qualifiers; they rewrite the modified; // type to be a semantically different type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp:53,rewrite,rewrite,53,interpreter/llvm-project/clang/lib/AST/Type.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp,1,['rewrite'],['rewrite']
Modifiability,// All paths from this block lead to the use and don't initialize the; // variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UninitializedValues.cpp:74,variab,variable,74,interpreter/llvm-project/clang/lib/Analysis/UninitializedValues.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UninitializedValues.cpp,1,['variab'],['variable']
Modifiability,"// All remaining non-variable cases constitute an odr-use. For variables, we; // need to wait and see how the expression is used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:21,variab,variable,21,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,"// All source assignments to this variable remain and all stores to any; // part of the variable store to the same address (with varying; // offsets). We can just emit a single location for the whole variable.; //; // Unless we've already done so, create the single location def now.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp:34,variab,variable,34,interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,3,['variab'],['variable']
Modifiability,// All stack variables are considered to have undefined values; // upon creation. All heap allocated blocks are considered to; // have undefined values as well unless they are explicitly bound; // to specific values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp:13,variab,variables,13,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp,1,['variab'],['variables']
Modifiability,"// All subscripts are all the same type.; // Loop bound may be smaller (e.g., a char).; // Should zero extend loop bound, since it's always >= 0.; // This routine collects upper bound and extends or truncates if needed.; // Truncating is safe when subscripts are known not to wrap. Cases without; // nowrap flags should have been rejected earlier.; // Return null if no bound available.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:103,extend,extend,103,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,2,['extend'],"['extend', 'extends']"
Modifiability,"// All superclasses in the inheritance forest in post-order (yes, it; // must be a forest; diamond-shaped inheritance is not allowed).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TableGen/Record.h:27,inherit,inheritance,27,interpreter/llvm-project/llvm/include/llvm/TableGen/Record.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TableGen/Record.h,2,['inherit'],['inheritance']
Modifiability,"// All the inputs that are extended need to be folded, otherwise; // we would be leaving the old input (since it is may still be used),; // and the new one.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:27,extend,extended,27,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,1,['extend'],['extended']
Modifiability,"// All the potentially captureable variables in the current nested; // lambda (within a generic outer lambda), must be captured by an; // outer lambda that is enclosed within a non-dependent context.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:35,variab,variables,35,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,1,['variab'],['variables']
Modifiability,// All three of these are optional. The first variable is allocated at; // zero. They are allocated by AMDGPUMachineFunction as one block.; // Layout:; //{; // module.lds; // alignment padding; // kernel instance; // alignment padding; // dynamic lds variables; //},MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:46,variab,variable,46,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,"// All variable are generated with accept-reject; // Check if PDF supports maximum finding",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:7,variab,variable,7,roofit/roofitcore/src/RooGenContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx,1,['variab'],['variable']
Modifiability,"// All variables defining a convolutional layer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h:7,variab,variables,7,tmva/tmva/inc/TMVA/DNN/DeepNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h,1,['variab'],['variables']
Modifiability,// All variables have precise lifetime except local variables with; // automatic storage duration that aren't specially marked.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp:7,variab,variables,7,interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,2,['variab'],['variables']
Modifiability,// All-true mask for the currently configured explicit vector length.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/VectorBuilder.h:35,config,configured,35,interpreter/llvm-project/llvm/include/llvm/IR/VectorBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/VectorBuilder.h,1,['config'],['configured']
Modifiability,"// Alloca always returns a pointer in alloca address space, which may; // be different from the type defined by the language. For example,; // in C++ the auto variables are in the default address space. Therefore; // cast alloca to the default address space when necessary.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp:159,variab,variables,159,interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,1,['variab'],['variables']
Modifiability,// Allocate a stack slot like for any local variable to guarantee optimal; // debug info at -O0. The mem2reg pass will eliminate it when optimizing.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp:44,variab,variable,44,interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp,1,['variab'],['variable']
Modifiability,"// Allocate resources (i.e. 4 bytes) for constant extender. If succeeded,; // return true, otherwise, return false.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp:50,extend,extender,50,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonVLIWPacketizer.cpp,1,['extend'],['extender']
Modifiability,// Allocate space for nontemporal variables + private references.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/OpenMPClause.cpp:34,variab,variables,34,interpreter/llvm-project/clang/lib/AST/OpenMPClause.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/OpenMPClause.cpp,1,['variab'],['variables']
Modifiability,// Allocate space for private variables and initializer expressions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/OpenMPClause.cpp:30,variab,variables,30,interpreter/llvm-project/clang/lib/AST/OpenMPClause.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/OpenMPClause.cpp,2,['variab'],['variables']
Modifiability,// Allocate space for the variable to be globalized,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:26,variab,variable,26,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['variab'],['variable']
Modifiability,// Allocating variables that are accessed indirectly so that a lookup of; // this struct instance can find them from nested functions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:14,variab,variables,14,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability,// Allocating variables that are used directly in this struct to get; // alignment aware allocation and predictable frame size.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:14,variab,variables,14,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability,"// Allow any 'static constexpr' members, whether or not they are of literal; // type. We separately check that every constexpr variable is of literal; // type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:127,variab,variable,127,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,"// Allow assignment of anything to self. Self is a local variable in the; // initializer, so it is legal to assign anything to it, like results of; // static functions/method calls. After self is assigned something we cannot; // reason about, stop enforcing the rules.; // (Only continue checking if the assigned value should be treated as self.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCSelfInitChecker.cpp:57,variab,variable,57,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCSelfInitChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCSelfInitChecker.cpp,1,['variab'],['variable']
Modifiability,// Allow attributes to precede or succeed the inheritance specifiers.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp:46,inherit,inheritance,46,interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDeclCXX.cpp,1,['inherit'],['inheritance']
Modifiability,"// Allow constant lane indices, expand variable lane indices",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp:39,variab,variable,39,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp,1,['variab'],['variable']
Modifiability,"// Allow default construction to build variables, but this doesn't build; // a useful iterator.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/BasicBlock.h:39,variab,variables,39,interpreter/llvm-project/llvm/include/llvm/IR/BasicBlock.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/BasicBlock.h,1,['variab'],['variables']
Modifiability,// Allow local register variables without initializer as they don't; // require prologue.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:24,variab,variables,24,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variables']
Modifiability,// Allow redefinitions of variables that haven't yet been used.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp:26,variab,variables,26,interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp,1,['variab'],['variables']
Modifiability,"// Allow the user to specify which external variable they want to store the; // results of the command line argument processing into, if they don't want to; // store it in the option itself.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h:44,variab,variable,44,interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,1,['variab'],['variable']
Modifiability,// Allow with a warning for free functions and global variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:54,variab,variables,54,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variables']
Modifiability,// Allowed AddRec as induction variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopBoundSplit.cpp:31,variab,variable,31,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopBoundSplit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopBoundSplit.cpp,1,['variab'],['variable']
Modifiability,// Allows for testing of the irsymtab writer and upgrade mechanism. This; // environment variable should not be set by users.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/IRSymtab.cpp:89,variab,variable,89,interpreter/llvm-project/llvm/lib/Object/IRSymtab.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Object/IRSymtab.cpp,1,['variab'],['variable']
Modifiability,"// Almost all expression bases are internal. The exception is; // lifetime-extended temporaries.; // FIXME: These should be modeled as having the; // LifetimeExtendedTemporaryDecl itself as the base.; // FIXME: If we permit Objective-C object literals in template arguments,; // they should not imply internal linkage.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/APValue.cpp:75,extend,extended,75,interpreter/llvm-project/clang/lib/AST/APValue.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/APValue.cpp,1,['extend'],['extended']
Modifiability,// Already saw global variable table.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/APINotes/APINotesReader.cpp:22,variab,variable,22,interpreter/llvm-project/clang/lib/APINotes/APINotesReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/APINotes/APINotesReader.cpp,1,['variab'],['variable']
Modifiability,"// Also generate the declaration attribute merging logic if the current; // attribute is one that can be inheritted on a declaration. It is assumed; // this code will be executed in the context of a function with parameters:; // Sema &S, Decl *D, Attr *A and that returns a bool (false on diagnostic,; // true on success).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangAttrEmitter.cpp:105,inherit,inheritted,105,interpreter/llvm-project/clang/utils/TableGen/ClangAttrEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangAttrEmitter.cpp,1,['inherit'],['inheritted']
Modifiability,"// Also sink all related debug uses from the source basic block. Otherwise we; // get debug use before the def. Attempt to salvage debug uses first, to; // maximise the range variables have location for. If we cannot salvage, then; // mark the location undef: we know it was supposed to receive a new location; // here, but that computation has been sunk.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp:175,variab,variables,175,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,1,['variab'],['variables']
Modifiability,// Also visit the temporaries lifetime-extended by this initializer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:39,extend,extended,39,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['extend'],['extended']
Modifiability,"// Also, check for methods declared in protocols inherited by; // this protocol.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:49,inherit,inherited,49,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['inherit'],['inherited']
Modifiability,"// Although the initializer is not allocating a buffer, the pointer; // variable could still be used in buffer access operations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp:72,variab,variable,72,interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp,1,['variab'],['variable']
Modifiability,"// Although variables of reference type always need to be initialized, it; // can happen that we can't see the initializer, so `InitExpr` may still; // be null.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/DataflowEnvironment.cpp:12,variab,variables,12,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/DataflowEnvironment.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/DataflowEnvironment.cpp,1,['variab'],['variables']
Modifiability,"// Always add all bases, since the inheritance tree can contain; // disqualifications for multiple matches.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:35,inherit,inheritance,35,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['inherit'],['inheritance']
Modifiability,"// Always emit the vtable for an explicit instantiation definition; // of a polymorphic class template specialization. Otherwise, eagerly; // instantiate only constexpr virtual functions in preparation for their use; // in constant evaluation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp:76,polymorphi,polymorphic,76,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp,1,['polymorphi'],['polymorphic']
Modifiability,// Always import variables with appending linkage.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Linker/LinkModules.cpp:17,variab,variables,17,interpreter/llvm-project/llvm/lib/Linker/LinkModules.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Linker/LinkModules.cpp,1,['variab'],['variables']
Modifiability,"// Always try to replace 16 bit load with 32 bit zero extending.; // Code size is the same, and there is sometimes a perf advantage; // from eliminating a false dependence on the upper portion of; // the register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupBWInsts.cpp:54,extend,extending,54,interpreter/llvm-project/llvm/lib/Target/X86/X86FixupBWInsts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FixupBWInsts.cpp,1,['extend'],['extending']
Modifiability,"// An ""asm goto"" statement is a terminator that may initialize some variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UninitializedValues.cpp:68,variab,variables,68,interpreter/llvm-project/clang/lib/Analysis/UninitializedValues.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UninitializedValues.cpp,1,['variab'],['variables']
Modifiability,// An AND with a constant mask is the same as a truncate + zero-extend.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:64,extend,extend,64,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['extend'],['extend']
Modifiability,"// An adaptive kernel estimation pdf on the same data without mirroring option; // for comparison",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:6,adapt,adaptive,6,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['adapt'],['adaptive']
Modifiability,"// An alias cannot act as an external reference, so we need to create; // either a function or a global variable depending on the value type.; // FIXME: Once pointee types are gone we can probably pick one or the; // other.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneModule.cpp:104,variab,variable,104,interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CloneModule.cpp,1,['variab'],['variable']
Modifiability,// An ashr recurrence will extend the initial sign bit,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp:27,extend,extend,27,interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,1,['extend'],['extend']
Modifiability,// An empty SecName means an extern variable without section attribute.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BTFDebug.cpp:36,variab,variable,36,interpreter/llvm-project/llvm/lib/Target/BPF/BTFDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BTFDebug.cpp,1,['variab'],['variable']
Modifiability,"// An enum that contains the extended 'partial' parsed variants. This type; // should never escape the initial parse functionality, but is useful for; // simplifying the implementation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenACC.cpp:29,extend,extended,29,interpreter/llvm-project/clang/lib/Parse/ParseOpenACC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenACC.cpp,1,['extend'],['extended']
Modifiability,"// An explicit instantiation definition can add a dll attribute to a; // template with a previous implicit instantiation. MinGW doesn't allow; // this. We limit clang to only adding dllexport, to avoid potentially; // strange codegen behavior. For example, if we extend this conditional; // to dllimport, and we have a source file calling a method on an; // implicitly instantiated template class instance and then declaring a; // dllimport explicit instantiation definition for the same template; // class, the codegen for the method call will not respect the dllimport,; // while it will with cl. The Def will already have the DLL attribute,; // since the Def and Specialization will be the same in the case of; // Old_TSK == TSK_ImplicitInstantiation, and we already added the; // attribute to the Specialization; we just need to make it take effect.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:263,extend,extend,263,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['extend'],['extend']
Modifiability,"// An explicit variable specialization is an independent, top-level; // declaration. As such, if it has an explicit visibility attribute,; // that must directly express the user's intent, and we should honor; // it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp:15,variab,variable,15,interpreter/llvm-project/clang/lib/AST/Decl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp,1,['variab'],['variable']
Modifiability,// An expression E is a core constant expression unless the evaluation of E; // would evaluate one of the following: [C++23] - a control flow that passes; // through a declaration of a variable with static or thread storage duration; // unless that variable is usable in constant expressions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:185,variab,variable,185,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,2,['variab'],['variable']
Modifiability,"// An extended value of 1 is always true, unless its original type is i1,; // in which case it will be sign extended to -1.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:6,extend,extended,6,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,2,['extend'],['extended']
Modifiability,"// An extract element return value type can be wider than its vector; // operand element type. In that case, the high bits are undefined, so; // it's possible that we may need to extend rather than truncate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:179,extend,extend,179,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['extend'],['extend']
Modifiability,"// An i8 return value should not be extended to i16, since AVR has 8-bit; // registers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/AVR.cpp:36,extend,extended,36,interpreter/llvm-project/clang/lib/CodeGen/Targets/AVR.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/AVR.cpp,1,['extend'],['extended']
Modifiability,// An if-statement introduces a new scope for local variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/TGParser.cpp:52,variab,variables,52,interpreter/llvm-project/llvm/lib/TableGen/TGParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/TGParser.cpp,1,['variab'],['variables']
Modifiability,"// An in-register sign-extend of a boolean is a negation:; // 'true' (1) sign-extended is -1.; // 'false' (0) sign-extended is 0.; // However, we must mask the high bits of the source operand because the; // SIGN_EXTEND_INREG does not guarantee that the high bits are already zero.; // TODO: Do this for vectors too?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp:23,extend,extend,23,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeDAG.cpp,3,['extend'],"['extend', 'extended']"
Modifiability,// An induction variable will remain scalar if all users of the induction; // variable and induction variable update remain scalar.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:16,variab,variable,16,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,3,['variab'],['variable']
Modifiability,// An input zero extended from i31 can also be considered sign extended.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:17,extend,extended,17,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,2,['extend'],['extended']
Modifiability,// An instance variable symbol was released nilling out its property:; // self.property = nil;,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:15,variab,variable,15,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,1,['variab'],['variable']
Modifiability,// An instance variable symbol was released with -release:; // [_property release];,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp:15,variab,variable,15,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckObjCDealloc.cpp,1,['variab'],['variable']
Modifiability,"// An instantiated function template inherits the declaration context of the; // templated decl. This is used for name mangling; fix it to avoid clashing.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp:37,inherit,inherits,37,interpreter/cling/lib/Interpreter/DefinitionShadower.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DefinitionShadower.cpp,1,['inherit'],['inherits']
Modifiability,"// An instruction can correspond to multiple candidates. Therefore, instead of; // simply deleting an instruction when we rewrite it, we mark its parent as; // nullptr (i.e. unlink it) so that we can skip the candidates whose; // instruction is already rewritten.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp:122,rewrite,rewrite,122,interpreter/llvm-project/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp,1,['rewrite'],['rewrite']
Modifiability,// An object body introduces a new scope for local variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/TGParser.cpp:51,variab,variables,51,interpreter/llvm-project/llvm/lib/TableGen/TGParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/TGParser.cpp,1,['variab'],['variables']
Modifiability,"// An opaque configuration, that can be used to separate several benchmarks of; // the same instruction under different configurations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/BenchmarkResult.h:13,config,configuration,13,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/BenchmarkResult.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/BenchmarkResult.h,2,['config'],"['configuration', 'configurations']"
Modifiability,// Analyse loop body region. Find all input variables which are used inside; // loop body region.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp:44,variab,variables,44,interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,1,['variab'],['variables']
Modifiability,"// Analyze \p SymbolicPHI, a SCEV expression of a phi node, and check if the; // computation that updates the phi follows the following pattern:; // (SExt/ZExt ix (Trunc iy (%SymbolicPHI) to ix) to iy) + InvariantAccum; // which correspond to a phi->trunc->sext/zext->add->phi update chain.; // If so, try to see if it can be rewritten as an AddRecExpr under some; // Predicates. If successful, return them as a pair. Also cache the results; // of the analysis.; //; // Example usage scenario:; // Say the Rewriter is called for the following SCEV:; // 8 * ((sext i32 (trunc i64 %X to i32) to i64) + %Step); // where:; // %X = phi i64 (%Start, %BEValue); // It will visitMul->visitAdd->visitSExt->visitTrunc->visitUnknown(%X),; // and call this function with %SymbolicPHI = %X.; //; // The analysis will find that the value coming around the backedge has; // the following SCEV:; // BEValue = ((sext i32 (trunc i64 %X to i32) to i64) + %Step); // Upon concluding that this matches the desired pattern, the function; // will return the pair {NewAddRec, SmallPredsVec} where:; // NewAddRec = {%Start,+,%Step}; // SmallPredsVec = {P1, P2, P3} as follows:; // P1(WrapPred): AR: {trunc(%Start),+,(trunc %Step)}<nsw> Flags: <nssw>; // P2(EqualPred): %Start == (sext i32 (trunc i64 %Start to i32) to i64); // P3(EqualPred): %Step == (sext i32 (trunc i64 %Step to i32) to i64); // The returned pair means that SymbolicPHI can be rewritten into NewAddRec; // under the predicates {P1,P2,P3}.; // This predicated rewrite will be cached in PredicatedSCEVRewrites:; // PredicatedSCEVRewrites[{%X,L}] = {NewAddRec, {P1,P2,P3)}; //; // TODO's:; //; // 1) Extend the Induction descriptor to also support inductions that involve; // casts: When needed (namely, when we are called in the context of the; // vectorizer induction analysis), a Set of cast instructions will be; // populated by this method, and provided back to isInductionPHI. This is; // needed to allow the vectorizer to properly record them to be igno",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:506,Rewrite,Rewriter,506,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['Rewrite'],['Rewriter']
Modifiability,"// Analyze all uses of 'add'. If the output of 'add' is used as an address; // in the base+immediate addressing mode load/store instructions, see if; // they can be updated to use the immediate value as an offet. Thus,; // providing us the opportunity to eliminate 'add'.; // Ex: Rx= add(Rt,#12); // memw(Rx+#0) = Rs; // This can be replaced with memw(Rt+#12) = Rs; //; // This transformation is only performed if all uses can be updated and; // the offset isn't required to be constant extended.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonOptAddrMode.cpp:487,extend,extended,487,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonOptAddrMode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonOptAddrMode.cpp,1,['extend'],['extended']
Modifiability,// Analyze and build list of variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:29,variab,variables,29,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variables']
Modifiability,"// Analyze the list of variables to generate...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:23,variab,variables,23,roofit/roofitcore/src/RooGenContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx,1,['variab'],['variables']
Modifiability,// Analyzer suppression applies only to variables and statements.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp:40,variab,variables,40,interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,1,['variab'],['variables']
Modifiability,"// AnalyzerOptions' config table contains the user input, so an entry could; // look like this:; //; // cor:NoFalsePositives=true; //; // Since lower_bound would look for the first element *not less* than ""cor"",; // it would return with an iterator to the first checker in the core, so we; // we really have to use find here, which uses operator==.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/CheckerRegistry.cpp:20,config,config,20,interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/CheckerRegistry.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Frontend/CheckerRegistry.cpp,1,['config'],['config']
Modifiability,// And can our users be adapted?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:24,adapt,adapted,24,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,1,['adapt'],['adapted']
Modifiability,// And can the operands be adapted?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:27,adapt,adapted,27,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,1,['adapt'],['adapted']
Modifiability,// And extend to the neighbors of Q if the region is dense enough.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Clustering.cpp:7,extend,extend,7,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Clustering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Clustering.cpp,1,['extend'],['extend']
Modifiability,"// And variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:7,variab,variables,7,core/dictgen/src/rootcling_impl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx,1,['variab'],['variables']
Modifiability,"// And, adapt users.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:8,adapt,adapt,8,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,1,['adapt'],['adapt']
Modifiability,// Anonymous parameters of an inheriting constructor are live for the entire; // duration of the constructor.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SymbolManager.cpp:30,inherit,inheriting,30,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SymbolManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/SymbolManager.cpp,1,['inherit'],['inheriting']
Modifiability,"// Another legacy compatibility encoding. Some ObjC qualifier and type; // combinations need to be rearranged.; // Rewrite ""in const"" from ""nr"" to ""rn""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:115,Rewrite,Rewrite,115,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['Rewrite'],['Rewrite']
Modifiability,"// Another special-case: SRL/SRA is basically zero/sign-extending a narrower; // value, or it may be shifting a higher subword, half or byte into the; // lowest bits.; // Only handle shift with constant shift amount, and the shiftee must be a; // load.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:56,extend,extending,56,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['extend'],['extending']
Modifiability,"// Another way we can guess what is in Class object, is when it is a; // 'self' variable of the current class method.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DynamicTypePropagation.cpp:80,variab,variable,80,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DynamicTypePropagation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/DynamicTypePropagation.cpp,1,['variab'],['variable']
Modifiability,"// Any local variable that is referenced by an exported function needs; // to be promoted to global scope. Since we don't currently know which; // functions reference which local variables/functions, we must treat; // all as potentially exported if this module is exporting anything.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/FunctionImportUtils.cpp:13,variab,variable,13,interpreter/llvm-project/llvm/lib/Transforms/Utils/FunctionImportUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/FunctionImportUtils.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,"// Any references made by this variable will be marked exported; // later, in ComputeCrossModuleImport, after import decisions are; // complete, which is more efficient than adding them here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp:31,variab,variable,31,interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp,1,['variab'],['variable']
Modifiability,"// Any resolution model with more dependents than the convolution variable; // or pdf or resmodel do not support direct generation",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx:66,variab,variable,66,roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,3,['variab'],['variable']
Modifiability,"// Any variable linked to an instruction is considered; // interesting. Ideally we only need to check Allocas, however, a; // DIAssignID might get dropped from an alloca but not stores. In that; // case, we need to consider the variable interesting for NFC behaviour; // with this change. TODO: Consider only looking at allocas.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp:7,variab,variable,7,interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,2,['variab'],['variable']
Modifiability,// Append a copy of the command-line definition adapted to use the same; // format as in the input file to be able to reuse; // parseNumericSubstitutionBlock.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp:48,adapt,adapted,48,interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,1,['adapt'],['adapted']
Modifiability,"// Append blinding state category to variable list if not already there",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:37,variab,variable,37,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,1,['variab'],['variable']
Modifiability,"// Append proto variables to allDependents",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:16,variab,variables,16,roofit/roofitcore/src/RooMCStudy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx,1,['variab'],['variables']
Modifiability,// Append this load onto the list of split loads so we can find it later; // to rewrite the stores.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp:80,rewrite,rewrite,80,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,1,['rewrite'],['rewrite']
Modifiability,"// Applies RHS to all elements of MHS, using LHS as a temp variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/Record.cpp:59,variab,variable,59,interpreter/llvm-project/llvm/lib/TableGen/Record.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/Record.cpp,1,['variab'],['variable']
Modifiability,// Apply section attributes and pragmas to global variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:50,variab,variables,50,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variables']
Modifiability,"// Apply the named return value optimization for this return statement,; // which means doing nothing: the appropriate result has already been; // constructed into the NRVO variable.; // If there is an NRVO flag for this variable, set it to 1 into indicate; // that the cleanup code should not destroy the variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp:173,variab,variable,173,interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp,3,['variab'],['variable']
Modifiability,"// Apply the two updates that dbg.values get: invalid operands, and; // variable metadata fixup.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeExtractor.cpp:72,variab,variable,72,interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeExtractor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeExtractor.cpp,1,['variab'],['variable']
Modifiability,// Apply transformations described by Config and store result into; // Config.OutputFilename using specified ObjcopyFunc function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objcopy/llvm-objcopy.cpp:38,Config,Config,38,interpreter/llvm-project/llvm/tools/llvm-objcopy/llvm-objcopy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objcopy/llvm-objcopy.cpp,2,['Config'],['Config']
Modifiability,"// Apply transformations described by Config, remove .dwo tables and; // store result into Config.OutputFilename using specified ObjcopyFunc; // function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objcopy/llvm-objcopy.cpp:38,Config,Config,38,interpreter/llvm-project/llvm/tools/llvm-objcopy/llvm-objcopy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objcopy/llvm-objcopy.cpp,2,['Config'],['Config']
Modifiability,// Are we comparing variables?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp:20,variab,variables,20,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp,1,['variab'],['variables']
Modifiability,// Are we dealing with different variables/fields?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:33,variab,variables,33,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,3,['variab'],['variables']
Modifiability,"// ArgDbgValues are hoisted to the beginning of the entry block. So we; // should only emit as ArgDbgValue if the dbg.value intrinsic describes a; // variable that also is a param.; //; // Although, if we are at the top of the entry block already, we can still; // emit using ArgDbgValue. This might catch some situations when the; // dbg.value refers to an argument that isn't used in the entry block, so; // any CopyToReg node would be optimized out and the only way to express; // this DBG_VALUE is by using the physical reg (or FI) as done in this; // method. ArgDbgValues are hoisted to the beginning of the entry block. So; // we should only emit as ArgDbgValue if the Variable is an argument to the; // current function, and the dbg.value intrinsic is found in the entry; // block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:150,variab,variable,150,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,2,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,"// Argument is an aggregate which is passed by value, thus we need to; // create a copy of it in the local variable space of the current stack; // frame (which is the stack frame of the caller) and pass the address of; // this copy to the callee.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:107,variab,variable,107,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['variab'],['variable']
Modifiability,// Array of global variables which need to be emitted into a COMDAT section.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.h:19,variab,variables,19,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.h,1,['variab'],['variables']
Modifiability,// Array of non-COMDAT global variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.h:30,variab,variables,30,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.h,1,['variab'],['variables']
Modifiability,"// Array of sizes of the variable dimension",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfo.h:25,variab,variable,25,tree/treeplayer/inc/TFormLeafInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfo.h,1,['variab'],['variable']
Modifiability,"// Artificially extended beyond fDim",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx:16,extend,extended,16,math/foam/src/TFoam.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/foam/src/TFoam.cxx,1,['extend'],['extended']
Modifiability,"// As a heuristic prune all diagnostics not in the main file. Currently; // the majority of warnings in headers are false positives. These; // are largely caused by configuration state, e.g. preprocessor; // defined code, etc.; //; // Note that this is also a performance optimization. Analyzing; // headers many times can be expensive.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/AnalysisBasedWarnings.cpp:165,config,configuration,165,interpreter/llvm-project/clang/lib/Sema/AnalysisBasedWarnings.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/AnalysisBasedWarnings.cpp,1,['config'],['configuration']
Modifiability,"// As a heuristic, locals that have been marked 'const' explicitly; // can be treated as configuration values as well.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp:89,config,configuration,89,interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,1,['config'],['configuration']
Modifiability,"// As a heuristic, treat globals as configuration values. Note; // that we only will get here if Sema evaluated this; // condition to a constant expression, which means the global; // had to be declared in a way to be a truly constant value.; // We could generalize this to local variables, but it isn't; // clear if those truly represent configuration values that; // gate unreachable code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp:36,config,configuration,36,interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,3,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"// As a special case, these operators use the type to mean the type to; // sign-extend from.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp:80,extend,extend,80,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp,1,['extend'],['extend']
Modifiability,"// As an exception, do not flag errors for variables binding to; // const string literals.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:43,variab,variables,43,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['variab'],['variables']
Modifiability,"// As an extension for interactive REPLs, make sure constant variables are; // only emitted once instead of LinkageComputer::getLVForNamespaceScopeDecl; // marking them as internal.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:61,variab,variables,61,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['variab'],['variables']
Modifiability,"// As input, we have the following pattern:; // Sh0 (Sh1 X, Q), K; // We want to rewrite that as:; // Sh x, (Q+K) iff (Q+K) u< bitwidth(x); // While we know that originally (Q+K) would not overflow; // (because 2 * (N-1) u<= iN -1), we have looked past extensions of; // shift amounts. so it may now overflow in smaller bitwidth.; // To ensure that does not happen, we need to ensure that the total maximal; // shift amount is still representable in that smaller bit width.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp:81,rewrite,rewrite,81,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,1,['rewrite'],['rewrite']
Modifiability,"// As input, we have the following pattern:; // icmp eq/ne (and ((x shift Q), (y oppositeshift K))), 0; // We want to rewrite that as:; // icmp eq/ne (and (x shift (Q+K)), y), 0 iff (Q+K) u< bitwidth(x); // While we know that originally (Q+K) would not overflow; // (because 2 * (N-1) u<= iN -1), we have looked past extensions of; // shift amounts. so it may now overflow in smaller bitwidth.; // To ensure that does not happen, we need to ensure that the total maximal; // shift amount is still representable in that smaller bit width.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:118,rewrite,rewrite,118,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,1,['rewrite'],['rewrite']
Modifiability,"// As long as the user is another old PHI node, then even if we don't; // rewrite it, the PHI web we're considering won't have any users; // outside itself, so it'll be dead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp:74,rewrite,rewrite,74,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp,1,['rewrite'],['rewrite']
Modifiability,"// As long as the user is another old PHI node, then even if we don't; // rewrite it, the PHI web we're considering won't have any users; // outside itself, so it'll be dead.; // example:; // bb.0:; // %0 = amxcast ...; // bb.1:; // %1 = amxcast ...; // bb.2:; // %goodphi = phi %0, %1; // %3 = amxcast %goodphi; // bb.3:; // %goodphi2 = phi %0, %goodphi; // %4 = amxcast %goodphi2; // When optimizeAMXCastFromPhi process %3 and %goodphi, %goodphi2 is; // outside the phi-web, so the combination stop When; // optimizeAMXCastFromPhi process %4 and %goodphi2, the optimization; // will be done.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86LowerAMXType.cpp:74,rewrite,rewrite,74,interpreter/llvm-project/llvm/lib/Target/X86/X86LowerAMXType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86LowerAMXType.cpp,1,['rewrite'],['rewrite']
Modifiability,"// As of clang 12, uuidof uses the vendor extended expression; // mangling. Previously, it used a special-cased nonstandard extension.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:42,extend,extended,42,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,1,['extend'],['extended']
Modifiability,"// As ptxas does not support forward references of globals, we need to first; // sort the list of module-level globals in def-use order. We visit each; // global variable in order, and ensure that we emit it *after* its dependent; // globals. We use a little extra memory maintaining both a set and a list to; // have fast searches while maintaining a strict ordering.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.cpp:162,variab,variable,162,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXAsmPrinter.cpp,1,['variab'],['variable']
Modifiability,"// As the name suggests, externally initialized variables need preserving as; // they would be initialized elsewhere externally.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Internalize.cpp:48,variab,variables,48,interpreter/llvm-project/llvm/lib/Transforms/IPO/Internalize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Internalize.cpp,1,['variab'],['variables']
Modifiability,"// As we did not continue breaking the line, RemainingTokenColumns is; // known to fit after ContentStartColumn. Adapt ContentStartColumn to; // the position at which we want to format the next line if we do; // actually reflow.; // When we reflow, we need to add a space between the end of the current; // line and the next line's start column.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp:113,Adapt,Adapt,113,interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/ContinuationIndenter.cpp,1,['Adapt'],['Adapt']
Modifiability,// Ask the variable if it has a definition.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp:11,variab,variable,11,interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,1,['variab'],['variable']
Modifiability,"// Assert that the alloca that Declare uses is now linked to a dbg.assign; // describing the same variable (i.e. check that this dbg.declare has; // been replaced by a dbg.assign). Use DebugVariableAggregate to Discard; // the fragment part because trackAssignments may alter the; // fragment. e.g. if the alloca is smaller than the variable, then; // trackAssignments will create an alloca-sized fragment for the; // dbg.assign.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp:98,variab,variable,98,interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,2,['variab'],['variable']
Modifiability,"// Assert that the converted value fits in the original type. If it doesn't; // (eg: because the value being converted is too big), then the result of the; // original operation was undefined anyway, so the assert is still correct.; //; // NOTE: fp-to-uint to fp-to-sint promotion guarantees zero extend. For example:; // before legalization: fp-to-uint16, 65534. -> 0xfffe; // after legalization: fp-to-sint32, 65534. -> 0x0000fffe",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp:297,extend,extend,297,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp,1,['extend'],['extend']
Modifiability,// Assert that the following invariants hold:; // 1. All active variables are unassigned.; // 2. All active variables form watched literals.; // 3. Unassigned variables that form watched literals are active.; // FIXME: Consider replacing these with test cases that fail if the any; // of the invariants is broken. That might not be easy due to the; // transformations performed by `buildCNF`.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp:64,variab,variables,64,interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/FlowSensitive/WatchedLiteralsSolver.cpp,3,['variab'],['variables']
Modifiability,// Asserts that a function argument (i32) is zero-extended to i8 by; // the caller,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.h:50,extend,extended,50,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.h,1,['extend'],['extended']
Modifiability,"// Assign $T0, the VFRAME register, the value of ESP after it is aligned.; // Starting from the CFA, we subtract the size of all pushed registers, and; // align the result. While we don't store any CSRs in this area, $T0 is used; // by S_DEFRANGE_FRAMEPOINTER_REL records to find local variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86WinCOFFTargetStreamer.cpp:286,variab,variables,286,interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86WinCOFFTargetStreamer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86WinCOFFTargetStreamer.cpp,1,['variab'],['variables']
Modifiability,"// Assign a value to our optional FixedAttributeSize member variable. If; // this member variable still has a value after the while loop below, then; // all attribute data in this abbreviation declaration has a fixed byte size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFAbbreviationDeclaration.cpp:60,variab,variable,60,interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFAbbreviationDeclaration.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/DWARF/DWARFAbbreviationDeclaration.cpp,2,['variab'],['variable']
Modifiability,"// Assign it to a more convenient variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:34,variab,variable,34,core/winnt/src/TWinNTSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx,1,['variab'],['variable']
Modifiability,"// Assign locations to all of the incoming aggregate by value arguments.; // Aggregates passed by value are stored in the local variable space of the; // caller's stack frame, right above the parameter list area.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:128,variab,variable,128,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['variab'],['variable']
Modifiability,// Assign the variable value to entry to each dominated block that's in scope.; // Skip the definition block -- it's assigned the variable value in the middle; // of the block somewhere.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:14,variab,variable,14,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,2,['variab'],['variable']
Modifiability,// Assign variables to all MatchDatas.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp:10,variab,variables,10,interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelCombinerEmitter.cpp,1,['variab'],['variables']
Modifiability,// Assigning Operands to Variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/MCInstrDescView.cpp:25,Variab,Variables,25,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/MCInstrDescView.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/MCInstrDescView.cpp,1,['Variab'],['Variables']
Modifiability,// Assigning Variables to tied operands.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/MCInstrDescView.cpp:13,Variab,Variables,13,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/MCInstrDescView.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/MCInstrDescView.cpp,1,['Variab'],['Variables']
Modifiability,// Assigning to a variable?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/LiveVariables.cpp:18,variab,variable,18,interpreter/llvm-project/clang/lib/Analysis/LiveVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/LiveVariables.cpp,1,['variab'],['variable']
Modifiability,// Assigns a Random Value to all Variables in IT that are still Invalid.; // Do not use any of the registers in `ForbiddenRegs`.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/SnippetGenerator.h:33,Variab,Variables,33,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/SnippetGenerator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/SnippetGenerator.h,1,['Variab'],['Variables']
Modifiability,// Assigns a random operand of the right type to variable Var.; // The target is responsible for handling any operand starting from; // OPERAND_FIRST_TARGET.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Target.h:49,variab,variable,49,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Target.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/Target.h,1,['variab'],['variable']
Modifiability,"// Associate this new state with an ExplodedNode.; // FIXME: If I pass null tag, the graph is incorrect, e.g for; // int *p;; // p = 0;; // *p = 0xDEADBEEF;; // ""p = 0"" is not noted as ""Null pointer value stored to 'p'"" but; // instead ""int *p"" is noted as; // ""Variable 'p' initialized to a null pointer value""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp:262,Variab,Variable,262,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngine.cpp,1,['Variab'],['Variable']
Modifiability,// Assume is a variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.h:15,variab,variable,15,interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.h,1,['variab'],['variable']
Modifiability,// Assume that all extendable branches will be extended.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBranchRelaxation.cpp:19,extend,extendable,19,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBranchRelaxation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBranchRelaxation.cpp,2,['extend'],"['extendable', 'extended']"
Modifiability,"// Assume that reads and writes to stack variables can be eliminated by; // Mem2Reg, SROA or LICM. That is, don't count them towards the loop body's; // size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp:41,variab,variables,41,interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,1,['variab'],['variables']
Modifiability,"// Assume that the config file will be ok",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx:19,config,config,19,proof/proof/src/TProofResourcesStatic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx,1,['config'],['config']
Modifiability,"// Assume that the instance variable was holding on the object at; // +1, and we just didn't know.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp:28,variab,variable,28,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/RetainCountChecker/RetainCountChecker.cpp,1,['variab'],['variable']
Modifiability,// Assume that the variable is non-null.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NonnullGlobalConstantsChecker.cpp:19,variab,variable,19,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NonnullGlobalConstantsChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/NonnullGlobalConstantsChecker.cpp,1,['variab'],['variable']
Modifiability,"// Assume that we'll replace the any-extend with a zero-extend, and; // narrow the search to the extended value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp:37,extend,extend,37,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,3,['extend'],"['extend', 'extended']"
Modifiability,// Assume variable sized types are passed in memory.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp:10,variab,variable,10,interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,1,['variab'],['variable']
Modifiability,"// Assume variables referenced within a lambda's call operator that were; // not declared within the call operator are captures and during checking; // of a potential constant expression, assume they are unknown constant; // expressions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:10,variab,variables,10,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['variab'],['variables']
Modifiability,// At least one variable name is required.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp:16,variab,variable,16,interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,13,['variab'],['variable']
Modifiability,"// At the moment the only way to end a variable lifetime is with; // a VARIABLE_LIFETIME op (which can't contain a start). If things; // change and the IR allows for a single inst that both begins; // and ends lifetime(s), this interface will need to be reworked.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp:39,variab,variable,39,interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/StackColoring.cpp,1,['variab'],['variable']
Modifiability,"// At the moment, the only aggressive peephole we do in IR gen; // is trunc(zext) folding, but if we add more, we can easily; // extend this protection.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.cpp:129,extend,extend,129,interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenFunction.cpp,1,['extend'],['extend']
Modifiability,"// At the moment, we currently support changing the estimate trip count of; // the latch branch only. We could extend this API to manipulate estimated; // trip counts for any exit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp:111,extend,extend,111,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,1,['extend'],['extend']
Modifiability,"// At this point directVars are all variables that are safe to be generated directly; // otherVars are all variables that are _not_ safe to be generated directly",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:36,variab,variables,36,roofit/roofitcore/src/RooGenContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx,2,['variab'],['variables']
Modifiability,"// At this point we assume the file is an object file -- and if that doesn't; // work, we treat it as YAML.; // FIXME: Extend to support non-ELF and non-x86_64 binaries.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/XRay/InstrumentationMap.cpp:119,Extend,Extend,119,interpreter/llvm-project/llvm/lib/XRay/InstrumentationMap.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/XRay/InstrumentationMap.cpp,1,['Extend'],['Extend']
Modifiability,// At this point we either have the evaluated source expression or a pointer; // to an object on the stack. We want to create a local variable that stores; // this value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.cpp:134,variab,variable,134,interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.cpp,1,['variab'],['variable']
Modifiability,"// At this point we have an element which is inside a class (which is not; // a collection) and this element of a collection of numerical type.; // (Note: it is not possible to have more than one variable dimension; // unless we were supporting variable size C-style array of collection).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:196,variab,variable,196,tree/treeplayer/src/TTreeFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx,2,['variab'],['variable']
Modifiability,"// At this point we know two things must be true:; // 1. Start <= End; // 2. ExtMaxLen <= MinPageSize due to the page checks.; // Therefore, we know that we can use a 64-bit induction variable that; // starts from 0 -> ExtMaxLen and it will not overflow.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoopIdiomTransform.cpp:184,variab,variable,184,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoopIdiomTransform.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoopIdiomTransform.cpp,1,['variab'],['variable']
Modifiability,"// At this point we should definitiely have a font family, but if we; // don't there is something wrong with our configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:113,config,configuration,113,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configuration']
Modifiability,"// At this point, 'Matches' contains a list of seemingly valid bases, however; // in the event that we have more than 1 match, it is possible that the base; // of one of the matches might be disqualified for being a base of another; // valid match. We can count on cyclical instantiations being invalid to; // simplify the disqualifications. That is, if A & B are both matches, and B; // inherits from A (disqualifying A), we know that A cannot inherit from B.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:388,inherit,inherits,388,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,2,['inherit'],"['inherit', 'inherits']"
Modifiability,"// At this point, AnalyzerOptions is configured. Let's validate some options.; // FIXME: Here we try to validate the silenced checkers or packages are valid.; // The current approach only validates the registered checkers which does not; // contain the runtime enabled checkers and optimally we would validate both.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp:37,config,configured,37,interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,1,['config'],['configured']
Modifiability,"// At this point, all variable type sets should be simple, i.e. only; // have a default mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp:22,variab,variable,22,interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp,1,['variab'],['variable']
Modifiability,"// At this point, any lifetime-extended temporaries are completely; // initialized.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:31,extend,extended,31,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['extend'],['extended']
Modifiability,"// At this point, every statement in the translation unit has been analyzed by; // the CloneDetector. The only thing left to do is to report the found clones.; // Let the CloneDetector create a list of clones from all the analyzed; // statements. We don't filter for matching variable patterns at this point; // because reportSuspiciousClones() wants to search them for errors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CloneChecker.cpp:276,variab,variable,276,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CloneChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CloneChecker.cpp,1,['variab'],['variable']
Modifiability,"// At this point, the remaining uses of GV should be found only in global; // variable initializers, as other uses have been already been removed; // while walking through the instructions in function definitions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXGenericToNVVM.cpp:78,variab,variable,78,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXGenericToNVVM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXGenericToNVVM.cpp,1,['variab'],['variable']
Modifiability,"// At this point, we have collected all of the loads and stores we can; // pre-split, and the specific splits needed for them. We actually do the; // splitting in a specific order in order to handle when one of the loads in; // the value operand to one of the stores.; //; // First, we rewrite all of the split loads, and just accumulate each split; // load in a parallel structure. We also build the slices for them and append; // them to the alloca slices.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp:286,rewrite,rewrite,286,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,1,['rewrite'],['rewrite']
Modifiability,"// At this point, we know:; //; // 1. If IsSigned, Start <=s End; otherwise, Start <=u End; // 2. The index variable doesn't overflow.; //; // Therefore, we know N exists such that; // (Start + Stride * N) >= End, and computing ""(Start + Stride * N)""; // doesn't overflow.; //; // Using this information, try to prove whether the addition in; // ""(Start - End) + (Stride - 1)"" has unsigned overflow.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:108,variab,variable,108,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['variab'],['variable']
Modifiability,"// At this very end of the compilation pipeline, if any DBG_VALUEs with; // registers remain, it means they are dangling info which we failed to update; // when their corresponding def instruction was transformed/moved/splitted etc.; // Because Wasm cannot access values in LLVM virtual registers in the debugger,; // these dangling DBG_VALUEs in effect kill the effect of any previous DBG_VALUE; // associated with the variable, which will appear as ""optimized out"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyDebugFixup.cpp:420,variab,variable,420,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyDebugFixup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyDebugFixup.cpp,1,['variab'],['variable']
Modifiability,// Atomics have zero extending behavior.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64LegalizerInfo.cpp:21,extend,extending,21,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64LegalizerInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64LegalizerInfo.cpp,1,['extend'],['extending']
Modifiability,"// Attach each variable to the dataset",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:15,variab,variable,15,roofit/roofitcore/src/RooTreeDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx,1,['variab'],['variable']
Modifiability,"// Attempt to combine a shuffle of 2 inputs of 'scalar sources' -; // BUILD_VECTOR or SCALAR_TO_VECTOR into a single BUILD_VECTOR.; //; // SHUFFLE(BUILD_VECTOR(), BUILD_VECTOR()) -> BUILD_VECTOR() is always; // a simplification in some sense, but it isn't appropriate in general: some; // BUILD_VECTORs are substantially cheaper than others. The general case; // of a BUILD_VECTOR requires inserting each element individually (or; // performing the equivalent in a temporary stack variable). A BUILD_VECTOR of; // all constants is a single constant pool load. A BUILD_VECTOR where each; // element is identical is a splat. A BUILD_VECTOR where most of the operands; // are undef lowers to a small number of element insertions.; //; // To deal with this, we currently use a bunch of mostly arbitrary heuristics.; // We don't fold shuffles where one side is a non-zero constant, and we don't; // fold shuffles if the resulting (non-splat) BUILD_VECTOR would have duplicate; // non-constant operands. This seems to work out reasonably well in practice.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:481,variab,variable,481,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['variab'],['variable']
Modifiability,// Attempt to constant fold all of the constant source ops.; // Returns true if the entire shuffle is folded to a constant.; // TODO: Extend this to merge multiple constant Ops and update the mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:134,Extend,Extend,134,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['Extend'],['Extend']
Modifiability,// Attempt to convert a sra of a load into a narrower sign-extending load.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:59,extend,extending,59,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['extend'],['extending']
Modifiability,// Attempt to convert a srl of a load into a narrower zero-extending load.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:59,extend,extending,59,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['extend'],['extending']
Modifiability,"// Attempt to determine whether this declaration lifetime-extends a; // temporary.; //; // FIXME: This is incorrect. Non-reference declarations can lifetime-extend; // temporaries, and a single declaration can extend multiple temporaries.; // We should look at the storage duration on each nested; // MaterializeTemporaryExpr instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:58,extend,extends,58,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,3,['extend'],"['extend', 'extends']"
Modifiability,// Attempt to emit an integer extend of SrcReg into DestReg. Both; // signed and zero extensions are supported. Return false if we; // can't handle it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp:30,extend,extend,30,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,1,['extend'],['extend']
Modifiability,"// Attempt to extend constant bool vectors to match target's BooleanContent.; // While not necessary, this improves chances of the constant correctly; // folding with compare results (e.g. for NOT patterns).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp:14,extend,extend,14,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp,1,['extend'],['extend']
Modifiability,// Attempt to fast-select a floating-point extend instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsFastISel.cpp:43,extend,extend,43,interpreter/llvm-project/llvm/lib/Target/Mips/MipsFastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsFastISel.cpp,2,['extend'],['extend']
Modifiability,// Attempt to fast-select an integer extend instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp:37,extend,extend,37,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,1,['extend'],['extend']
Modifiability,// Attempt to generically simplify the variable shuffle mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:39,variab,variable,39,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['variab'],['variable']
Modifiability,// Attempt to load pass plugins and register their callbacks with PB.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/BackendUtil.cpp:24,plugin,plugins,24,interpreter/llvm-project/clang/lib/CodeGen/BackendUtil.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/BackendUtil.cpp,1,['plugin'],['plugins']
Modifiability,"// Attempt to load pass plugins and register their callbacks with PB.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:24,plugin,plugins,24,interpreter/cling/lib/Interpreter/BackendPasses.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp,1,['plugin'],['plugins']
Modifiability,"// Attempt to propagate the AND back up to the leaves which, if they're; // loads, can be combined to narrow loads and the AND node can be removed.; // Perform after legalization so that extend nodes will already be; // combined into the loads.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:187,extend,extend,187,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['extend'],['extend']
Modifiability,"// Attempt to rule out some unprofitable cases using heuristics (some working; // around suboptimal code generation), notably if the extend not be able to; // use ushll2 instructions as the types are not large enough. Otherwise zip's; // will need to be created which can increase the instruction count.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:133,extend,extend,133,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['extend'],['extend']
Modifiability,"// Attempt to salvage back through as many instructions as possible. Bail if; // a non-instruction is seen, such as a constant expression or global; // variable. FIXME: Further work could recover those too.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:152,variab,variable,152,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['variab'],['variable']
Modifiability,// Attempt to store one global variable for the declaration - even if we; // emit a lot of fields.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp:31,variab,variable,31,interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,1,['variab'],['variable']
Modifiability,// Attempting to do a template diff on non-templates. Set the variables; // and continue with regular type printing of the appropriate type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTDiagnostic.cpp:62,variab,variables,62,interpreter/llvm-project/clang/lib/AST/ASTDiagnostic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTDiagnostic.cpp,1,['variab'],['variables']
Modifiability,// Attribute does not apply to non-static local variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp:48,variab,variables,48,interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,2,['variab'],['variables']
Modifiability,"// Attribute inheritance is processed after attribute parsing. To keep the; // order as in the source code, add inherited attributes before non-inherited; // ones.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclBase.cpp:13,inherit,inheritance,13,interpreter/llvm-project/clang/lib/AST/DeclBase.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclBase.cpp,3,['inherit'],"['inheritance', 'inherited']"
Modifiability,// Attributes that are classified as extended options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVOptions.cpp:37,extend,extended,37,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVOptions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Core/LVOptions.cpp,1,['extend'],['extended']
Modifiability,"// Author: Enrico Guiraud, Enric Tejedor, Danilo Piparo CERN 04/2021; // Implementation adapted from from llvm::SmallVector.; // See /math/vecops/ARCHITECTURE.md for more information.; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx:88,adapt,adapted,88,math/vecops/inc/ROOT/RVec.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/vecops/inc/ROOT/RVec.hxx,2,['adapt'],['adapted']
Modifiability,"// Author: Giulio Eulisse CERN 2/2018; /*************************************************************************; * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // clang-format off; /** \class ROOT::RDF::RArrowDS; \ingroup dataframe; \brief RDataFrame data source class to interface with Apache Arrow. The RArrowDS implements a proxy RDataSource to be able to use Apache Arrow; tables with RDataFrame. A RDataFrame that adapts an arrow::Table class can be constructed using the factory method; ROOT::RDF::FromArrow, which accepts one parameter:; 1. An arrow::Table smart pointer. The types of the columns are derived from the types in the associated; arrow::Schema. */; // clang-format on",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RArrowDS.cxx:656,adapt,adapts,656,tree/dataframe/src/RArrowDS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/src/RArrowDS.cxx,1,['adapt'],['adapts']
Modifiability,"// Author: Stephan Hageboeck, CERN, May 2019; /*****************************************************************************; * Project: RooFit *; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2019, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /** \class RooJohnson; \ingroup Roofit. Johnson's \f$ S_{U} \f$ distribution. This PDF results from transforming a normally distributed variable \f$ x \f$ to this form:; \f[; z = \gamma + \delta \sinh^{-1}\left( \frac{x - \mu}{\lambda} \right); \f]; The resulting PDF is; \f[; \mathrm{PDF}[\mathrm{Johnson}\ S_U] = \frac{\delta}{\lambda\sqrt{2\pi}}; \frac{1}{\sqrt{1 + \left( \frac{x-\mu}{\lambda} \right)^2}}; \;\exp\left[-\frac{1}{2} \left(\gamma + \delta \sinh^{-1}\left(\frac{x-\mu}{\lambda}\right) \right)^2\right].; \f]. It is often used to fit a mass difference for charm decays, and therefore the variable \f$ x \f$ is called; ""mass"" in the implementation. A mass threshold allows to set the PDF to zero to the left of the threshold. ###References:; Johnson, N. L. (1949). *Systems of Frequency Curves Generated by Methods of Translation*. Biometrika **36(1/2)**, 149–176. [doi:10.2307/2332539](https://doi.org/10.2307%2F2332539). \image html RooJohnson_plot.png. **/",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJohnson.cxx:824,variab,variable,824,roofit/roofit/src/RooJohnson.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooJohnson.cxx,2,['variab'],['variable']
Modifiability,"// Authors: Stephan Hageboeck, CERN; Andrea Sciandra, SCIPP-UCSC/Atlas; Nov 2020; /*****************************************************************************; * RooFit; * Authors: *; * WV, Wouter Verkerke, UC Santa Barbara, verkerke@slac.stanford.edu *; * DK, David Kirkby, UC Irvine, dkirkby@uci.edu *; * *; * Copyright (c) 2000-2020, Regents of the University of California *; * and Stanford University. All rights reserved. *; * *; * Redistribution and use in source and binary forms, *; * with or without modification, are permitted according to the terms *; * listed in LICENSE (http://roofit.sourceforge.net/license.txt) *; *****************************************************************************/; /**; * \class RooBinSamplingPdf; * The RooBinSamplingPdf is supposed to be used as an adapter between a continuous PDF; * and a binned distribution.; * When RooFit is used to fit binned data, and the PDF is continuous, it takes the probability density; * at the bin centre as a proxy for the probability averaged (integrated) over the entire bin. This is; * correct only if the second derivative of the function vanishes, though. This is shown in the plots; * below.; *; * For PDFs that have larger curvatures, the RooBinSamplingPdf can be used. It integrates the PDF in each; * bin using an adaptive integrator. This usually requires 21 times more function evaluations, but significantly; * reduces biases due to better sampling of the PDF. The integrator can be accessed from the outside; * using integrator(). This can be used to change the integration rules, so less/more function evaluations are; * performed. The target precision of the integrator can be set in the constructor.; *; *; * ### How to use it; * There are two ways to use this class:; * - Manually wrap a PDF:; * ```; * RooBinSamplingPdf binSampler(""<name>"", ""title"", <binned observable of PDF>, <original PDF> [, <precision for integrator>]);; * binSampler.fitTo(data);; * ```; * When a PDF is wrapped with a RooBinSam",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx:799,adapt,adapter,799,roofit/roofitcore/src/RooBinSamplingPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooBinSamplingPdf.cxx,1,['adapt'],['adapter']
Modifiability,// Automatic variable,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h:13,variab,variable,13,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,1,['variab'],['variable']
Modifiability,// Automatic variable allocated on stack,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h:13,variab,variable,13,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/XCOFF.h,1,['variab'],['variable']
Modifiability,"// Automatic variables live on the stack, and when trivial they're usually; // uninitialized because it's undefined behavior to use them without; // initializing them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/LangOptions.h:13,variab,variables,13,interpreter/llvm-project/clang/include/clang/Basic/LangOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/LangOptions.h,1,['variab'],['variables']
Modifiability,"// Avoid TObject inheritance due to clash with TObject::Draw as well; // as possible inheritance of TGLPadScene from VierualViewer3D.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLSceneBase.h:17,inherit,inheritance,17,graf3d/gl/inc/TGLSceneBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLSceneBase.h,2,['inherit'],['inheritance']
Modifiability,"// Avoid TObject inheritance due to clash with TVirtualViewer3D.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLViewerBase.h:17,inherit,inheritance,17,graf3d/gl/inc/TGLViewerBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/inc/TGLViewerBase.h,1,['inherit'],['inheritance']
Modifiability,"// Avoid cases where the extend/round has multiple uses, as duplicating; // those is typically more expensive than removing a fneg.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:25,extend,extend,25,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,1,['extend'],['extend']
Modifiability,// Avoid copying a block to the heap if the block is assigned to a local; // auto variable that is declared in the same scope as the block. This; // optimization is unsafe if the local variable is declared in an outer; // scope. For example:; //; // BlockTy b;; // {; // b = ^{...};; // }; // // It is unsafe to invoke the block here if it wasn't copied to the; // // heap.; // b();,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:82,variab,variable,82,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,2,['variab'],['variable']
Modifiability,// Avoid creating a fragment expression that covers the entire variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp:63,variab,variable,63,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,1,['variab'],['variable']
Modifiability,// Avoid extending live range of physical registers if they are; //allocatable or reserved.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCSE.cpp:9,extend,extending,9,interpreter/llvm-project/llvm/lib/CodeGen/MachineCSE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineCSE.cpp,1,['extend'],['extending']
Modifiability,"// Avoid having the cursor of an expression ""overwrite"" the annotation of the; // variable declaration that it belongs to.; // This can happen for C++ constructor expressions whose range generally; // include the variable declaration, e.g.:; // MyCXXClass foo; // Make sure we don't annotate 'foo' as a CallExpr cursor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp:82,variab,variable,82,interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,2,['variab'],['variable']
Modifiability,"// Avoid having the cursor of an expression replace the declaration cursor; // when the expression source range overlaps the declaration range.; // This can happen for C++ constructor expressions whose range generally; // include the variable declaration, e.g.:; // MyCXXClass foo; // Make sure pointing at 'foo' returns a VarDecl; // cursor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp:234,variab,variable,234,interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,1,['variab'],['variable']
Modifiability,// Avoid visiting default arguments from the definition that were already; // visited in the declaration.; // FIXME: A free function definition can have default arguments.; // Avoiding double visitaiton of default arguments should be handled by the; // visitor probably with a bit in the AST to indicate if the attached; // default argument was 'inherited' or written in source.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Index/IndexTypeSourceInfo.cpp:346,inherit,inherited,346,interpreter/llvm-project/clang/lib/Index/IndexTypeSourceInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Index/IndexTypeSourceInfo.cpp,1,['inherit'],['inherited']
Modifiability,"// B - p h y s i c s p d f w i t h t r u t h r e s o l u t i o n; // ---------------------------------------------------------------------; // Variables of decay p.d.f.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:143,Variab,Variables,143,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['Variab'],['Variables']
Modifiability,"// B i n d R O O T : : M a t h : : b e t a _ p d f C f u n c t i o n; // -----------------------------------------------------------------------; // Bind pdf ROOT::Math::Beta with three variables as RooAbsPdf function; // exclude x=0 and x=1 points from range since beta_pdf diverges at x=0 and x=1; // when a < 1 and/or b <1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:186,variab,variables,186,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['variab'],['variables']
Modifiability,// BPF Code Generator Pass Configuration Options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFTargetMachine.cpp:27,Config,Configuration,27,interpreter/llvm-project/llvm/lib/Target/BPF/BPFTargetMachine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFTargetMachine.cpp,1,['Config'],['Configuration']
Modifiability,"// BUILD_VECTOR requires all inputs to be of the same type, find the; // maximum type and extend them all.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:90,extend,extend,90,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,2,['extend'],['extend']
Modifiability,"// Back end -- Send message or check if particular logging configuration is active",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMsgService.h:59,config,configuration,59,roofit/roofitcore/inc/RooMsgService.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMsgService.h,1,['config'],['configuration']
Modifiability,// Backends without true r+i pre-indexed forms may need to pass a; // constant base with a variable offset so that constant coercion; // will work with the patterns in canonical form.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:91,variab,variable,91,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['variab'],['variable']
Modifiability,"// Backward compaitibility: until 5.32 the variable was called ProofServ.ShutdonwTimeout",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx:43,variab,variable,43,proof/proof/src/TProofServ.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofServ.cxx,1,['variab'],['variable']
Modifiability,"// Bail if merging after placement and IBB is the loop header because; // -- If merging predecessors that belong to the same loop as IBB, the; // common tail of merged predecessors may become the loop top if block; // placement is called again and the predecessors may branch to this common; // tail and require more branches. This can be relaxed if; // MachineBlockPlacement::findBestLoopTop is more flexible.; // --If merging predecessors that do not belong to the same loop as IBB, the; // loop info of IBB's loop and the other loops may be affected. Calling the; // block placement again may make big change to the layout and eliminate the; // reason to do tail merging here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BranchFolding.cpp:401,flexible,flexible,401,interpreter/llvm-project/llvm/lib/CodeGen/BranchFolding.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BranchFolding.cpp,1,['flexible'],['flexible']
Modifiability,// Bail out early. Not expect to load from scalable global variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ConstantFolding.cpp:59,variab,variable,59,interpreter/llvm-project/llvm/lib/Analysis/ConstantFolding.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ConstantFolding.cpp,1,['variab'],['variable']
Modifiability,// Bail out if:; // 1. The constant vector contains a constant expression.; // 2. The shuffle needs an element of the constant vector that can't; // be mapped to a new constant vector.; // 3. This is a widening shuffle that copies elements of V1 into the; // extended elements (extending with poison is allowed).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp:259,extend,extended,259,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,2,['extend'],"['extended', 'extending']"
Modifiability,// Base can be a vector register while B2 is used to extend GPR only,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp:53,extend,extend,53,interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86MCCodeEmitter.cpp,1,['extend'],['extend']
Modifiability,// Base class for classes that report changes to the IR.; // It presents an interface for such classes and provides calls; // on various events as the new pass manager transforms the IR.; // It also provides filtering of information based on hidden options; // specifying which functions are interesting.; // Calls are made for the following events/queries:; // 1. The initial IR processed.; // 2. To get the representation of the IR (of type \p T).; // 3. When a pass does not change the IR.; // 4. When a pass changes the IR (given both before and after representations; // of type \p T).; // 5. When an IR is invalidated.; // 6. When a pass is run on an IR that is not interesting (based on options).; // 7. When a pass is ignored (pass manager or adapter pass).; // 8. To compare two IR representations (of type \p T).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/StandardInstrumentations.h:751,adapt,adapter,751,interpreter/llvm-project/llvm/include/llvm/Passes/StandardInstrumentations.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/StandardInstrumentations.h,1,['adapt'],['adapter']
Modifiability,// Base class for traversals that rewrite an SExpr to another SExpr.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:34,rewrite,rewrite,34,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,1,['rewrite'],['rewrite']
Modifiability,"// Base class for variable transformations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h:18,variab,variable,18,tmva/tmva/inc/TMVA/VariableTransformBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/VariableTransformBase.h,1,['variab'],['variable']
Modifiability,"// Base class of the Configurations used in member wise streaming.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:21,Config,Configurations,21,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,2,['Config'],['Configurations']
Modifiability,"// Base layers on symbolic regions may not be type-correct.; // Double-check the inheritance here, and revert to a symbolic offset; // if it's invalid (e.g. due to a reinterpret_cast).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/MemRegion.cpp:8,layers,layers,8,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/MemRegion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/MemRegion.cpp,2,"['inherit', 'layers']","['inheritance', 'layers']"
Modifiability,// Basic correctness: make sure that all extenders in the range [Begin..End); // share the same root ER.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp:41,extend,extenders,41,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,1,['extend'],['extenders']
Modifiability,// Basis must dominate C in order to rewrite C with respect to Basis.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp:37,rewrite,rewrite,37,interpreter/llvm-project/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/StraightLineStrengthReduce.cpp,1,['rewrite'],['rewrite']
Modifiability,"// Because (problably) we built with cygwin, the path name like:; // LOCALS~1\\Temp; // gets extended to; // LOCALSc:\\Devel; // The most likely cause is that '~' is used with Unix semantic of the; // home directory (and it also cuts the path short after ... who knows why!); // So we need to detect this case and prevents its expansion :(.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx:93,extend,extended,93,core/winnt/src/TWinNTSystem.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/winnt/src/TWinNTSystem.cxx,1,['extend'],['extended']
Modifiability,"// Because 64-bit rotates are more flexible than inserts, we might have a; // preference regarding which one we do first (to save one instruction).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:35,flexible,flexible,35,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,1,['flexible'],['flexible']
Modifiability,"// Because a SRL must be assumed to *need* to zero-extend the high bits; // (as opposed to anyext the high bits), we can't combine the zextload; // lowering of SRL and an sextload.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:51,extend,extend,51,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['extend'],['extend']
Modifiability,"// Because of multiple inheritance, a DeclContext pointer does not produce; // the same pointer representation as a Decl pointer that references the; // same AST Node.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/JSONNodeDumper.cpp:23,inherit,inheritance,23,interpreter/llvm-project/clang/lib/AST/JSONNodeDumper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/JSONNodeDumper.cpp,1,['inherit'],['inheritance']
Modifiability,"// Because of the type rules of C, we often end up computing a; // logical value, then zero extending it to int, then wanting it; // as a logical value again. Optimize this common case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:92,extend,extending,92,interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,1,['extend'],['extending']
Modifiability,"// Because pointer arithmetic is represented by ElementRegion layers,; // the base symbol here should not contain any arithmetic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:62,layers,layers,62,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h,1,['layers'],['layers']
Modifiability,"// Because the AnalysisType may not be a subclass of pass (for; // AnalysisGroups), we use getAdjustedAnalysisPointer here to potentially; // adjust the return pointer (because the class may multiply inherit, once; // from pass, once from AnalysisType).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/PassAnalysisSupport.h:200,inherit,inherit,200,interpreter/llvm-project/llvm/include/llvm/PassAnalysisSupport.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/PassAnalysisSupport.h,3,['inherit'],['inherit']
Modifiability,"// Because the analysis revolves around variables and their types, we'll need to; // track uses of variables (aka DeclRefExprs).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp:40,variab,variables,40,interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp,2,['variab'],['variables']
Modifiability,"// Because the inner lambda (which runs in a worker thread) captures our local; // variables, we need to wait for the worker threads to terminate before we; // can leave the function scope.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTOBackend.cpp:83,variab,variables,83,interpreter/llvm-project/llvm/lib/LTO/LTOBackend.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/LTOBackend.cpp,1,['variab'],['variables']
Modifiability,"// Because the rewriter doesn't allow us to rewrite rewritten code,; // we need to suppress rewriting the sub-statements.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp:15,rewrite,rewriter,15,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,8,['rewrite'],"['rewrite', 'rewriter']"
Modifiability,"// Because typo correction is expensive, only do it if the implicit; // function declaration is going to be treated as an error.; //; // Perform the correction before issuing the main diagnostic, as some; // consumers use typo-correction callbacks to enhance the main diagnostic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:251,enhance,enhance,251,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['enhance'],['enhance']
Modifiability,"// Because we do no form of static analysis, we only support const variables.; //; // Additionally, we can't support parameters, nor can we support static; // variables (in the latter case, use-before-assign isn't UB; in the former,; // we have no clue what they'll be assigned to).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:67,variab,variables,67,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,2,['variab'],['variables']
Modifiability,"// Because we don't have an expression for the variable, we have to set the; // location explicitly here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:47,variab,variable,47,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['variab'],['variable']
Modifiability,"// Because we inherit the feature list from HasFeature, this string switch; // must be less restrictive than HasFeature's.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PPMacroExpansion.cpp:14,inherit,inherit,14,interpreter/llvm-project/clang/lib/Lex/PPMacroExpansion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/PPMacroExpansion.cpp,1,['inherit'],['inherit']
Modifiability,"// Because we only care about a total ordering, and don't rewrite expressions; // in this order, we order by rank, which will give a strict weak ordering to; // everything but constants, and then we order by pointer address.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:58,rewrite,rewrite,58,interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,1,['rewrite'],['rewrite']
Modifiability,"// Because we'll be zero-extending the output anyway if don't have a specific; // value for each input byte (via the Mask), we can 'anyext' the inputs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:25,extend,extending,25,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,1,['extend'],['extending']
Modifiability,"// Before P10, we have legal lowering for constant indices but not for; // variable ones.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:75,variab,variable,75,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['variab'],['variable']
Modifiability,"// Before adding, extend both operands to i64 to avoid; // overflow trouble.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantFold.cpp:18,extend,extend,18,interpreter/llvm-project/llvm/lib/IR/ConstantFold.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ConstantFold.cpp,1,['extend'],['extend']
Modifiability,// Before legalize we can introduce illegal bswaps which will be later; // converted to an explicit bswap sequence. This way we end up with a single; // load and byte shuffling instead of several loads and byte shuffling.; // We do not introduce illegal bswaps when zero-extending as this tends to; // introduce too many arithmetic instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:271,extend,extending,271,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['extend'],['extending']
Modifiability,"// Before passing 'returned' to the target lowering code, ensure that; // either the register MVT and the actual EVT are the same size or that; // the return value and argument are extended in the same way; in these; // cases it's safe to pass the argument register value unchanged as the; // return register value (although it's at the target's option whether; // to do so); // TODO: allow code generation to take advantage of partially preserved; // registers rather than clobbering the entire register when the; // parameter extension method is not compatible with the return; // extension method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:181,extend,extended,181,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['extend'],['extended']
Modifiability,"// Before resorting to actually inserting the truncate, use the same; // reasoning as from SimplifyIndvar::eliminateTrunc to see if we can extend; // the other side of the comparison instead. We still evaluate the limit; // in the narrower bitwidth, we just prefer a zext/sext outside the loop to; // a truncate within in.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:139,extend,extend,139,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,1,['extend'],['extend']
Modifiability,"// Before running rewriteDepthImmediates function, 'delegate' has a BB as its; // destination operand. getFakeCallerBlock() returns a fake BB that will be; // used for the operand when 'delegate' needs to rethrow to the caller. This; // will be rewritten as an immediate value that is the number of block depths; // + 1 in rewriteDepthImmediates, and this fake BB will be removed at the end; // of the pass.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyCFGStackify.cpp:18,rewrite,rewriteDepthImmediates,18,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyCFGStackify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyCFGStackify.cpp,2,['rewrite'],['rewriteDepthImmediates']
Modifiability,"// Before the OpEntryPoints' output, we need to add the entry point's; // interfaces. The interface is a list of IDs of global OpVariable instructions.; // These declare the set of global variables from a module that form; // the interface of this entry point.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVAsmPrinter.cpp:188,variab,variables,188,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVAsmPrinter.cpp,1,['variab'],['variables']
Modifiability,// Before this point all we've had was a stockpile of arbitrary layers.; // Now validate that it is shaped as one of the finite amount of expected; // patterns.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ConstructionContext.cpp:64,layers,layers,64,interpreter/llvm-project/clang/lib/Analysis/ConstructionContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ConstructionContext.cpp,1,['layers'],['layers']
Modifiability,"// Before version 1.4, the interface's storage classes are limited to; // the Input and Output storage classes. Starting with version 1.4,; // the interface's storage classes are all storage classes used in; // declaring all global variables referenced by the entry point call tree.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVAsmPrinter.cpp:232,variab,variables,232,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVAsmPrinter.cpp,1,['variab'],['variables']
Modifiability,"// Before we produce a declaration for an implicitly defined; // function, see whether there was a locally-scoped declaration of; // this name as a function or variable. If so, use that; // (non-visible) declaration, and complain about it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:160,variab,variable,160,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,"// Before we rewrite it, put the original message expression in a comment.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp:13,rewrite,rewrite,13,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,2,['rewrite'],['rewrite']
Modifiability,"// Before we start introducing relocations, we want to tweak the IR a bit to; // avoid unfortunate code generation effects. The main example is that we; // want to try to make sure the comparison feeding a branch is after any; // safepoints. Otherwise, we end up with a comparison of pre-relocation; // values feeding a branch after relocation. This is semantically correct,; // but results in extra register pressure since both the pre-relocation and; // post-relocation copies must be available in registers. For code without; // relocations this is handled elsewhere, but teaching the scheduler to; // reverse the transform we're about to do would be slightly complex.; // Note: This may extend the live range of the inputs to the icmp and thus; // increase the liveset of any statepoint we move over. This is profitable; // as long as all statepoints are in rare blocks. If we had in-register; // lowering for live values this would be a much safer transform.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp:691,extend,extend,691,interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp,1,['extend'],['extend']
Modifiability,"// Before we update MTracker, remember which values were present in each of; // the locations about to be overwritten, so that we can recover any; // potentially clobbered variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:172,variab,variables,172,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['variab'],['variables']
Modifiability,"// Before, there were calls to `pdf->dependsOn()` here, but they were very; // expensive for large computation graphs! Given that we have to traverse; // the computation graph with a call to `pdf->getParameters()` anyway, we; // can just check if the set of all variables operlaps with the observables; // or constraind parameters.; //; // We are using an optimized implementation of overlap checking. Because; // the overlap is checked by name, we can check overlap of the; // corresponding name pointers. The optimization can't be in; // RooAbsCollection itself, because it is crucial that the memory for the; // non-tmp name pointers is not reallocated for each pdf.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx:262,variab,variables,262,roofit/roofitcore/src/RooProdPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProdPdf.cxx,1,['variab'],['variables']
Modifiability,"// Begin loop scope for the observables and weight variable. If the weight; // is a scalar, the context will ignore it for the loop scope. The closing; // brackets of the loop is written at the end of the scopes lifetime.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx:51,variab,variable,51,roofit/roofitcore/src/RooNLLVarNew.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNLLVarNew.cxx,1,['variab'],['variable']
Modifiability,"// Beginning of range lies in the preamble but it also extends beyond; // it into the main file. Split the range into 2 parts, one covering; // the preamble and another covering the main file. This allows subsequent; // calls to visitPreprocessedEntitiesInRange to accept a source range that; // lies in the same FileID, allowing it to skip preprocessed entities that; // do not come from the same FileID.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp:55,extend,extends,55,interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,1,['extend'],['extends']
Modifiability,// Below here is the non-inherited interface.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/XCOFFObjectFile.h:25,inherit,inherited,25,interpreter/llvm-project/llvm/include/llvm/Object/XCOFFObjectFile.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/XCOFFObjectFile.h,1,['inherit'],['inherited']
Modifiability,"// Besides removing computation from the loop, hoisting an instruction has; // these effects:; //; // - The value defined by the instruction becomes live across the entire; // loop. This increases register pressure in the loop.; //; // - If the value is used by a PHI in the loop, a copy will be required for; // lowering the PHI after extending the live range.; //; // - When hoisting the last use of a value in the loop, that value no longer; // needs to be live in the loop. This lowers register pressure in the loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp:336,extend,extending,336,interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineLICM.cpp,1,['extend'],['extending']
Modifiability,// Bigger makes module scope variable less attractive,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:29,variab,variable,29,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variable']
Modifiability,"// Binned (RooDataHist) and unbinned datasets (RooDataSet) share; // many properties and inherit from a common abstract base class; // (RooAbsData), that provides an interface for all operations; // that can be performed regardless of the data format",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:89,inherit,inherit,89,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['inherit'],['inherit']
Modifiability,"// Binning specification with ranges parameterized by external RooAbsReal functions",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooParamBinning.h:37,parameteriz,parameterized,37,roofit/roofitcore/inc/RooParamBinning.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooParamBinning.h,1,['parameteriz'],['parameterized']
Modifiability,"// Bit count should fit in 32-bits, extract it as that and then zero; // extend to i64. Otherwise we end up extracting bits 63:32 separately.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:73,extend,extend,73,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['extend'],['extend']
Modifiability,"// Bitcast the variable, rename it, and insert it in the local decl map.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp:15,variab,variable,15,interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp,1,['variab'],['variable']
Modifiability,// Bitcasts can arise because of related-result returns. Rewrite; // the operand.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp:57,Rewrite,Rewrite,57,interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,1,['Rewrite'],['Rewrite']
Modifiability,"// Bitfields, vector elements and global register variables are not; // compatible.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmtAsm.cpp:50,variab,variables,50,interpreter/llvm-project/clang/lib/Sema/SemaStmtAsm.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmtAsm.cpp,1,['variab'],['variables']
Modifiability,"// Bitmasks for the HtmlTraceMask global variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/inc/TGHtml.h:41,variab,variable,41,gui/guihtml/inc/TGHtml.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/inc/TGHtml.h,1,['variab'],['variable']
Modifiability,// Bits 20 - 27; // Examine extended model ID if family ID is 6 or F.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp:28,extend,extended,28,interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp,1,['extend'],['extended']
Modifiability,// Bits above the extended operand are don't-care.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelDAGToDAG.cpp:18,extend,extended,18,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelDAGToDAG.cpp,1,['extend'],['extended']
Modifiability,// Block specific rewrite rules.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp:18,rewrite,rewrite,18,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,2,['rewrite'],['rewrite']
Modifiability,// Block variable layout instruction has been inlined.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:9,variab,variable,9,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['variab'],['variable']
Modifiability,"// BlockDataRegion? If so, invalidate captured variables that are passed; // by reference.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp:47,variab,variables,47,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp,1,['variab'],['variables']
Modifiability,"// Blocks are difficult because the return type may not be stored in the; // BlockDecl itself. The AST should probably be enhanced, but for now we; // just do what we can.; // If the block is declared without an explicit argument list, the; // signature-as-written just includes the return type, not the entire; // function type.; // FIXME: All blocks should have signatures-as-written, even if the return; // type is inferred. (That's signified with a dependent result type.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallEvent.cpp:122,enhance,enhanced,122,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallEvent.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/CallEvent.cpp,1,['enhance'],['enhanced']
Modifiability,// Blocks can reference an instance variable of a class.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCUnusedIVarsChecker.cpp:36,variab,variable,36,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCUnusedIVarsChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/ObjCUnusedIVarsChecker.cpp,1,['variab'],['variable']
Modifiability,// Blocks containing blocks can transitively capture more variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/AnalysisDeclContext.cpp:58,variab,variables,58,interpreter/llvm-project/clang/lib/Analysis/AnalysisDeclContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/AnalysisDeclContext.cpp,1,['variab'],['variables']
Modifiability,// Blocks rewrite rules.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp:10,rewrite,rewrite,10,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteModernObjC.cpp,2,['rewrite'],['rewrite']
Modifiability,"// Bool type is always extended to the ABI, other builtin types are not; // extended.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp:23,extend,extended,23,interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/X86.cpp,2,['extend'],['extended']
Modifiability,"// Boolean constants should be zero-extended, others are sign-extended",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/InlineAsmLowering.cpp:36,extend,extended,36,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/InlineAsmLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/InlineAsmLowering.cpp,2,['extend'],['extended']
Modifiability,"// Both compare operands can be widened for free. The LHS can use an; // extended load, and the RHS is a constant:; // vselect (ext (setcc load(X), C)), N1, N2 -->; // vselect (setcc extload(X), C'), N1, N2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:73,extend,extended,73,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['extend'],['extended']
Modifiability,// Both conversion sequences are conversions to void; // pointers. Compare the source types to determine if there's an; // inheritance relationship in their sources.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:123,inherit,inheritance,123,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,1,['inherit'],['inheritance']
Modifiability,// Both map and has_device_addr clauses information influences how a; // variable is captured. E.g. is_device_ptr does not require changing; // the default behavior.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:73,variab,variable,73,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,// Both operands must be equivalent extend nodes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:36,extend,extend,36,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['extend'],['extend']
Modifiability,// Both operands of the subtract should be extends from vXi8.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86PartialReduction.cpp:43,extend,extends,43,interpreter/llvm-project/llvm/lib/Target/X86/X86PartialReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86PartialReduction.cpp,1,['extend'],['extends']
Modifiability,"// Both ptrtoint instructions must wrap global objects:; // - Only global variables are eligible for image relative relocations.; // - The subtrahend refers to the special symbol __ImageBase, a GlobalVariable.; // We expect __ImageBase to be a global variable without a section, externally; // defined.; //; // It should look something like this: @__ImageBase = external constant i8",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp:74,variab,variables,74,interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TargetLoweringObjectFileImpl.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,// Both src and def are live in this block. Rewrite the use.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:44,Rewrite,Rewrite,44,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['Rewrite'],['Rewrite']
Modifiability,// Both the imported references and the original local variable must; // be promoted.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/FunctionImportUtils.cpp:55,variab,variable,55,interpreter/llvm-project/llvm/lib/Transforms/Utils/FunctionImportUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/FunctionImportUtils.cpp,1,['variab'],['variable']
Modifiability,// Both unextended and extended values are live out. There had better be; // a good reason for the transformation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:23,extend,extended,23,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['extend'],['extended']
Modifiability,// Both variables will be used in tablegen generated; // attribute spell list index matching code.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Attributes.cpp:8,variab,variables,8,interpreter/llvm-project/clang/lib/Basic/Attributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Attributes.cpp,1,['variab'],['variables']
Modifiability,// Both will be live out of the def MBB anyway. Don't extend live range of; // the extension result.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp:54,extend,extend,54,interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,1,['extend'],['extend']
Modifiability,"// Bounds on variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/quadp/inc/TQpDataBase.h:13,variab,variables,13,math/quadp/inc/TQpDataBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/quadp/inc/TQpDataBase.h,1,['variab'],['variables']
Modifiability,"// Braced-initialization of variable array types is not allowed, even if; // the size is greater than or equal to the number of args, so we don't; // allow them to be initialized via parenthesized aggregate initialization; // either.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:28,variab,variable,28,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['variab'],['variable']
Modifiability,// Branch regions extended and Decision Regions added for MC/DC.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/Coverage/CoverageMapping.h:18,extend,extended,18,interpreter/llvm-project/llvm/include/llvm/ProfileData/Coverage/CoverageMapping.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/Coverage/CoverageMapping.h,1,['extend'],['extended']
Modifiability,// Break only if we have multiple inheritance.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp:34,inherit,inheritance,34,interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp,1,['inherit'],['inheritance']
Modifiability,"// Break patterns with parameterized types into a series of patterns,; // where each one has a fixed type and is predicated on the conditions; // of the associated HW mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp:23,parameteriz,parameterized,23,interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp,1,['parameteriz'],['parameterized']
Modifiability,"// Breaking out of the inner loop, since we don't want to parse; // .clang-format AND _clang-format, if both exist. Then we continue the; // outer loop (parent directories) in search for the parent; // configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp:202,config,configuration,202,interpreter/llvm-project/clang/lib/Format/Format.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp,1,['config'],['configuration']
Modifiability,// Bubble up any error (e.g. undefined variables) in the recursive; // evaluation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp:39,variab,variables,39,interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,1,['variab'],['variables']
Modifiability,"// Bug location could be somewhere in the init value of; // a freshly declared variable. Even though it looks like the; // user applied attribute to a statement, it will apply to a; // variable declaration, and this is where we check for it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugSuppression.cpp:79,variab,variable,79,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugSuppression.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugSuppression.cpp,2,['variab'],['variable']
Modifiability,// Build a list of indirectbrs that we want to rewrite.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/IndirectBrExpandPass.cpp:47,rewrite,rewrite,47,interpreter/llvm-project/llvm/lib/CodeGen/IndirectBrExpandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/IndirectBrExpandPass.cpp,1,['rewrite'],['rewrite']
Modifiability,// Build a load instruction for the builtin variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVBuiltins.cpp:44,variab,variable,44,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVBuiltins.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVBuiltins.cpp,1,['variab'],['variable']
Modifiability,"// Build a set of new locations with new numbers so we can coalesce our; // IntervalMap if two vreg intervals collapse to the same physical location.; // Use MapVector instead of SetVector because MapVector::insert returns the; // position of the previously or newly inserted element. The boolean value; // tracks if the location was produced by a spill.; // FIXME: This will be problematic if we ever support direct and indirect; // frame index locations, i.e. expressing both variables in memory and; // 'int x, *px = &x'. The ""spilled"" bit must become part of the location.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp:478,variab,variables,478,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,1,['variab'],['variables']
Modifiability,// Build a sorted table of:; // - intrinsic id number; // - full name; // - polymorphic name or -1,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:76,polymorphi,polymorphic,76,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,1,['polymorphi'],['polymorphic']
Modifiability,"// Build a vector of arrays of bytes covering, for each target, a slice of the; // used region (see AccumBitVector::BytesUsed in; // llvm/Transforms/IPO/WholeProgramDevirt.h) starting at MinByte. Effectively,; // this aligns the used regions to start at MinByte.; //; // In this example, A, B and C are vtables, # is a byte already allocated for; // a virtual function pointer, AAAA... (etc.) are the used regions for the; // vtables and Offset(X) is the value computed for the Offset variable below; // for X.; //; // Offset(A); // | |; // |MinByte; // A: ################AAAAAAAA|AAAAAAAA; // B: ########BBBBBBBBBBBBBBBB|BBBB; // C: ########################|CCCCCCCCCCCCCCCC; // | Offset(B) |; //; // This code produces the slices of A, B and C that appear after the divider; // at MinByte.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp:485,variab,variable,485,interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/WholeProgramDevirt.cpp,1,['variab'],['variable']
Modifiability,// Build an Intel Expression rewrite,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp:29,rewrite,rewrite,29,interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp,1,['rewrite'],['rewrite']
Modifiability,"// Build an RHistImpl with the provided axis configuration",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/binning.cxx:45,config,configuration,45,hist/histv7/test/binning.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/test/binning.cxx,1,['config'],['configuration']
Modifiability,// Build an extend after each src inst.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp:12,extend,extend,12,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp,1,['extend'],['extend']
Modifiability,"// Build and insert \p Res = G_ANYEXT \p Op, \p Res = G_SEXT \p Op, or \p Res; // = G_ZEXT \p Op depending on how the target wants to extend boolean values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h:134,extend,extend,134,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h,1,['extend'],['extend']
Modifiability,"// Build and insert \p Res = G_SEXT_INREG \p Op, 1 or \p Res = G_AND \p Op, 1,; // or COPY depending on how the target wants to extend boolean values, using; // the original register size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h:128,extend,extend,128,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/MachineIRBuilder.h,1,['extend'],['extend']
Modifiability,"// Build auto && __range = range-init; // Divide by 2, since the variables are in the inner scope (loop body).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:65,variab,variables,65,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,1,['variab'],['variables']
Modifiability,"// Build auto __begin = begin-expr, __end = end-expr.; // Divide by 2, since the variables are in the inner scope (loop body).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:81,variab,variables,81,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,1,['variab'],['variables']
Modifiability,// Build begin-expr and end-expr and attach to __begin and __end variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:65,variab,variables,65,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,1,['variab'],['variables']
Modifiability,"// Build configuration object for RooSimWSTool",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooSimWSTool.h:9,config,configuration,9,roofit/roofitcore/inc/RooSimWSTool.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooSimWSTool.h,1,['config'],['configuration']
Modifiability,"// Build configuration object for RooSimWSTool with multiple prototype p.d.f.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooSimWSTool.h:9,config,configuration,9,roofit/roofitcore/inc/RooSimWSTool.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooSimWSTool.h,1,['config'],['configuration']
Modifiability,// Build declaration fragments and sub-heading for the instance variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ExtractAPI/ExtractAPIVisitor.h:64,variab,variable,64,interpreter/llvm-project/clang/include/clang/ExtractAPI/ExtractAPIVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ExtractAPI/ExtractAPIVisitor.h,1,['variab'],['variable']
Modifiability,// Build declaration fragments and sub-heading for the variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ExtractAPI/ExtractAPIVisitor.h:55,variab,variable,55,interpreter/llvm-project/clang/include/clang/ExtractAPI/ExtractAPIVisitor.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/ExtractAPI/ExtractAPIVisitor.h,4,['variab'],['variable']
Modifiability,// Build explicit initializers for all base classes from which the; // constructor was inherited.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:87,inherit,inherited,87,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['inherit'],['inherited']
Modifiability,// Build extended instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVBuiltins.cpp:9,extend,extended,9,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVBuiltins.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVBuiltins.cpp,2,['extend'],['extended']
Modifiability,// Build list of variable captures.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp:17,variab,variable,17,interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,1,['variab'],['variable']
Modifiability,"// Build the assignment map: candidate C -> { list of extender indexes }.; // This has to be done iteratively:; // - pick the candidate that covers the maximum number of extenders,; // - add the candidate to the map,; // - remove the extenders from the pool.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp:54,extend,extender,54,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,3,['extend'],"['extender', 'extenders']"
Modifiability,// Build the canonical type that describes the converted template; // arguments of the variable template partial specialization.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:87,variab,variable,87,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,1,['variab'],['variable']
Modifiability,"// Build the collapsed loop body code.; // Start with deriving the input loop induction variables from the collapsed; // one, using a divmod scheme. To preserve the original loops' order, the; // innermost loop use the least significant bits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp:88,variab,variables,88,interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,1,['variab'],['variables']
Modifiability,"// Build the configuration for disabling lower priority interrupts. Non EIC; // interrupts need to be masked off with zero, EIC from the Cause register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsSEFrameLowering.cpp:13,config,configuration,13,interpreter/llvm-project/llvm/lib/Target/Mips/MipsSEFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsSEFrameLowering.cpp,1,['config'],['configuration']
Modifiability,"// Build the fully-sugared type for this variable template; // specialization as the user wrote in the specialization; // itself. This means that we'll pretty-print the type retrieved; // from the specialization's declaration the way that the user; // actually wrote the specialization, rather than formatting the; // name based on the ""canonical"" representation used to store the; // template arguments in the specialization.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:41,variab,variable,41,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,1,['variab'],['variable']
Modifiability,// Build the inheritance part of the declaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ExtractAPI/DeclarationFragments.cpp:13,inherit,inheritance,13,interpreter/llvm-project/clang/lib/ExtractAPI/DeclarationFragments.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ExtractAPI/DeclarationFragments.cpp,1,['inherit'],['inheritance']
Modifiability,// Build the iteration variable and its initialization before loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:23,variab,variable,23,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,// Build the location list for this variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp:36,variab,variable,36,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp,1,['variab'],['variable']
Modifiability,"// Build the module, inheriting any modules that we've built locally.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp:21,inherit,inheriting,21,interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp,1,['inherit'],['inheriting']
Modifiability,// Build the private variable and the expression that refers to it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:21,variab,variable,21,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,// Build the variable that holds the non-decomposed object.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:13,variab,variable,13,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['variab'],['variable']
Modifiability,"// Build up the function call. There's two kinds. First, the sized; // variants. These calls are going to be one of the following (with; // N=1,2,4,8,16):; // iN __atomic_load_N(iN *ptr, int ordering); // void __atomic_store_N(iN *ptr, iN val, int ordering); // iN __atomic_{exchange|fetch_*}_N(iN *ptr, iN val, int ordering); // bool __atomic_compare_exchange_N(iN *ptr, iN *expected, iN desired,; // int success_order, int failure_order); //; // Note that these functions can be used for non-integer atomic; // operations, the values just need to be bitcast to integers on the; // way in and out.; //; // And, then, the generic variants. They look like the following:; // void __atomic_load(size_t size, void *ptr, void *ret, int ordering); // void __atomic_store(size_t size, void *ptr, void *val, int ordering); // void __atomic_exchange(size_t size, void *ptr, void *val, void *ret,; // int ordering); // bool __atomic_compare_exchange(size_t size, void *ptr, void *expected,; // void *desired, int success_order,; // int failure_order); //; // The different signatures are built up depending on the; // 'UseSizedLibcall', 'CASExpected', 'ValueOperand', and 'HasResult'; // variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AtomicExpandPass.cpp:1179,variab,variables,1179,interpreter/llvm-project/llvm/lib/CodeGen/AtomicExpandPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AtomicExpandPass.cpp,1,['variab'],['variables']
Modifiability,"// Build variables passed into runtime, necessary for worksharing directives.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:9,variab,variables,9,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variables']
Modifiability,// Builds an MCInst from this InstructionTemplate setting its operands; // to the corresponding variable values. Precondition: All VariableValues must; // be set.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/CodeTemplate.h:96,variab,variable,96,interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/CodeTemplate.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-exegesis/lib/CodeTemplate.h,2,"['Variab', 'variab']","['VariableValues', 'variable']"
Modifiability,// But some vector extending loads are legal,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp:19,extend,extending,19,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp,1,['extend'],['extending']
Modifiability,// By default sign-extend all X86 immediates based on their encoding.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp:19,extend,extend,19,interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp,1,['extend'],['extend']
Modifiability,"// By default, all the data that has a scalar type is mapped by copy; // (except for reduction variables).; // Defaultmap scalar is mutual exclusive to defaultmap pointer",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:95,variab,variables,95,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variables']
Modifiability,"// By default, capture variables by reference.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:23,variab,variables,23,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['variab'],['variables']
Modifiability,"// By handling a base class that is not empty, we're handling the; // ""first (inherited) member"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp:78,inherit,inherited,78,interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/RecordLayoutBuilder.cpp,1,['inherit'],['inherited']
Modifiability,"// C o n s t r u c t e f f i c i e n c y f u n c t i o n e ( x ); // -------------------------------------------------------------------; // Declare variables x,mean,sigma with associated name, title, initial value and allowed range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:149,variab,variables,149,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['variab'],['variables']
Modifiability,"// C o n s t r u c t e f f i c i e n c y f u n c t i o n e ( x , y ); // -----------------------------------------------------------------------; // Declare variables x,mean,sigma with associated name, title, initial value and allowed range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:157,variab,variables,157,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['variab'],['variables']
Modifiability,"// C r e a t e 1 - D k e r n e l e s t i m a t i o n p d f; // ---------------------------------------------------------------; // Create adaptive kernel estimation pdf. In this configuration the input data; // is mirrored over the boundaries to minimize edge effects in distribution; // that do not fall to zero towards the edges",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:138,adapt,adaptive,138,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,2,"['adapt', 'config']","['adaptive', 'configuration']"
Modifiability,"// C r e a t e 2 - D k e r n e l e s t i m a t i o n p d f; // ---------------------------------------------------------------; // Create 2D adaptive kernel estimation pdf with mirroring",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:141,adapt,adaptive,141,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['adapt'],['adaptive']
Modifiability,"// C r e a t e a b i n n i n g r e a l - > c a t f u n c t i o n; // ----------------------------------------------------------------------; // A RooBinningCategory is a category function that maps bins of a (named) binning definition; // in a real-valued input observable observables to state names. The state names are automatically; // constructed from the variable name, the binning name and the bin number. If no binning name; // is specified the default binning is mapped",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:360,variab,variable,360,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['variab'],['variable']
Modifiability,"// C r e a t e c o m p o n e n t p d f s i n x a n d y; // ----------------------------------------------------------------; // Create two p.d.f.s gaussx(x,meanx,sigmax) gaussy(y,meany,sigmay) and its variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:201,variab,variables,201,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['variab'],['variables']
Modifiability,"// C r e a t e i n t e r p o l a t i n g p d f; // -----------------------------------------------; // Create interpolation variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:124,variab,variable,124,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['variab'],['variable']
Modifiability,"// C r e a t e m a n a g e r; // ---------------------------; // Configure manager to perform binned extended likelihood fits (Binned(),Extended()) on data generated; // with a Poisson fluctuation on Nobs (Extended())",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:65,Config,Configure,65,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,4,"['Config', 'Extend', 'extend']","['Configure', 'Extended', 'extended']"
Modifiability,"// C r e a t e m a n a g e r; // ---------------------------; // Instantiate RooMCStudy manager on model with x as observable and given choice of fit options; //; // The Silence() option kills all messages below the PROGRESS level, leaving only a single message; // per sample executed, and any error message that occur during fitting; //; // The Extended() option has two effects:; // 1) The extended ML term is included in the likelihood and; // 2) A poisson fluctuation is introduced on the number of generated events; //; // The FitOptions() given here are passed to the fitting stage of each toy experiment.; // If Save() is specified, the fit result of each experiment is saved by the manager; //; // A Binned() option is added in this example to bin the data between generation and fitting; // to speed up the study at the expemse of some precision",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:347,Extend,Extended,347,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,2,"['Extend', 'extend']","['Extended', 'extended']"
Modifiability,// C variables are not mangled.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:5,variab,variables,5,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,2,['variab'],['variables']
Modifiability,"// C++ 5.2.7p6: Otherwise, v shall be [polymorphic].",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCast.cpp:39,polymorphi,polymorphic,39,interpreter/llvm-project/clang/lib/Sema/SemaCast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCast.cpp,1,['polymorphi'],['polymorphic']
Modifiability,"// C++ [base.class.init]p2:; // If a mem-initializer-id is ambiguous because it designates both; // a direct non-virtual base class and an inherited virtual base; // class, the mem-initializer is ill-formed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:139,inherit,inherited,139,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['inherit'],['inherited']
Modifiability,"// C++ [basic.def]p2:; // A declaration is a definition unless [...] it contains the 'extern'; // specifier or a linkage-specification and neither an initializer [...],; // it declares a non-inline static data member in a class declaration [...],; // it declares a static data member outside a class definition and the variable; // was defined within the class with the constexpr specifier [...],; // C++1y [temp.expl.spec]p15:; // An explicit specialization of a static data member or an explicit; // specialization of a static data member template is a definition if the; // declaration includes an initializer; otherwise, it is a declaration.; //; // FIXME: How do you declare (but not define) a partial specialization of; // a static data member template outside the containing class?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp:319,variab,variable,319,interpreter/llvm-project/clang/lib/AST/Decl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp,1,['variab'],['variable']
Modifiability,"// C++ [basic.link]p4:; // A name having namespace scope that has not been given internal linkage; // above and that is the name of; // [...bullets...]; // has its linkage determined as follows:; // - if the enclosing namespace has internal linkage, the name has; // internal linkage; [handled above]; // - otherwise, if the declaration of the name is attached to a named; // module and is not exported, the name has module linkage;; // - otherwise, the name has external linkage.; // LV is currently set up to handle the last two bullets.; //; // The bullets are:; // - a variable; or",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp:573,variab,variable,573,interpreter/llvm-project/clang/lib/AST/Decl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp,1,['variab'],['variable']
Modifiability,"// C++ [basic.link]p8:; // A type without linkage shall not be used as the type of a variable; // or function with external linkage unless; // -- the entity has C language linkage; // -- the entity is not odr-used or is defined in the same TU; //; // As an extension, accept this in cases where the type is externally; // visible, since the function or variable actually can be defined in; // another translation unit in that case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/Sema.cpp:85,variab,variable,85,interpreter/llvm-project/clang/lib/Sema/Sema.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/Sema.cpp,2,['variab'],['variable']
Modifiability,"// C++ [basic.scope.declarative]p4:; // Given a set of declarations in a single declarative region [...]; // exactly one declaration shall declare a class name or enumeration name; // that is not a typedef name and the other declarations shall all refer to; // the same variable, non-static data member, or enumerator, or all refer; // to functions and function templates; in this case the class name or; // enumeration name is hidden.; // C++ [basic.scope.hiding]p2:; // A class name or enumeration name can be hidden by the name of a; // variable, data member, function, or enumerator declared in the same; // scope.; // An UnresolvedUsingValueDecl always instantiates to one of these.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp:270,variab,variable,270,interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,2,['variab'],['variable']
Modifiability,"// C++ [basic.start.init]p2:; // Definitions of explicitly specialized class template static data; // members have ordered initialization. Other class template static data; // members (i.e., implicitly or explicitly instantiated specializations); // have unordered initialization.; //; // As a consequence, we can put them into their own llvm.global_ctors entry.; //; // If the global is externally visible, put the initializer into a COMDAT; // group with the global being initialized. On most platforms, this is a; // minor startup time optimization. In the MS C++ ABI, there are no guard; // variables, so this COMDAT key is required for correctness.; //; // SelectAny globals will be comdat-folded. Put the initializer into a; // COMDAT group associated with the global, so the initializers get folded; // too.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp:595,variab,variables,595,interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp,1,['variab'],['variables']
Modifiability,// C++ [basic.start.main]p3; // A program that declares a variable main at global scope is ill-formed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:58,variab,variable,58,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,// C++ [class.abstract]p4:; // A class is abstract if it contains or inherits at least one; // pure virtual function for which the final overrider is pure; // virtual.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp:69,inherit,inherits,69,interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp,1,['inherit'],['inherits']
Modifiability,// C++ [class.abstract]p4:; // A class is abstract if it contains or inherits at least one; // pure virtual function for which the final overrider is pure; // virtual.; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:69,inherit,inherits,69,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['inherit'],['inherits']
Modifiability,// C++ [class.virtual]p1:; // A class that declares or inherits a virtual function is called a; // polymorphic class.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp:55,inherit,inherits,55,interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp,4,"['inherit', 'polymorphi']","['inherits', 'polymorphic']"
Modifiability,"// C++ [class.virtual]p2:; // A virtual member function C::vf of a class object S is; // a final overrider unless the most derived class (1.8); // of which S is a base class subobject (if any) declares; // or inherits another member function that overrides vf.; //; // Treating this object like the most derived class, we; // replace any overrides from base classes with this; // overriding virtual function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/CXXInheritance.cpp:209,inherit,inherits,209,interpreter/llvm-project/clang/lib/AST/CXXInheritance.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/CXXInheritance.cpp,1,['inherit'],['inherits']
Modifiability,"// C++ [dcl.fct.default]p5; // A default argument expression is implicitly converted (clause; // 4) to the parameter type. The default argument expression has; // the same semantic constraints as the initializer expression in; // a declaration of a variable of the parameter type, using the; // copy-initialization semantics (8.5).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:249,variab,variable,249,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['variab'],['variable']
Modifiability,"// C++ [dcl.fct.default]p7:; // Local variables shall not be used in default argument; // expressions.; //; // C++17 [dcl.fct.default]p7 (by CWG 2082):; // A local variable shall not appear as a potentially-evaluated; // expression in a default argument.; //; // C++20 [dcl.fct.default]p7 (DR as part of P0588R1, see also CWG 2346):; // Note: A local variable cannot be odr-used (6.3) in a default; // argument.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:38,variab,variables,38,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,3,['variab'],"['variable', 'variables']"
Modifiability,"// C++ [dcl.link]/7:; // Two declarations [conflict] if [...] one declares a function or; // variable with C language linkage, and the other declares [...] a; // variable that belongs to the global scope.; //; // Therefore names that are reserved at global scope are also reserved as; // names of variables and functions with C language linkage.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp:93,variab,variable,93,interpreter/llvm-project/clang/lib/AST/Decl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp,3,['variab'],"['variable', 'variables']"
Modifiability,"// C++ [dcl.link]p1: All function types, function names with external linkage,; // and variable names with external linkage have a language linkage.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp:87,variab,variable,87,interpreter/llvm-project/clang/lib/AST/Decl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp,1,['variab'],['variable']
Modifiability,// C++ [expr.prim.general]p3: The result is an lvalue if the entity is a; // function or variable and a prvalue otherwise.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprClassification.cpp:89,variab,variable,89,interpreter/llvm-project/clang/lib/AST/ExprClassification.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprClassification.cpp,1,['variab'],['variable']
Modifiability,"// C++ [expr.prim.general]p6: The result is an lvalue if the entity is a; // function, variable, or data member and a prvalue otherwise.; // In C, functions are not lvalues.; // In addition, NonTypeTemplateParmDecl derives from VarDecl but isn't an; // lvalue unless it's a reference type (C++ [temp.param]p6), so we need to; // special-case this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprClassification.cpp:87,variab,variable,87,interpreter/llvm-project/clang/lib/AST/ExprClassification.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprClassification.cpp,1,['variab'],['variable']
Modifiability,"// C++ [expr.typeid]p2:; // When typeid is applied to a glvalue expression whose type is a; // polymorphic class type, the result refers to a std::type_info object; // representing the type of the most derived object (that is, the dynamic; // type) to which the glvalue refers.; // If the operand is already most derived object, no need to look up vtable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprCXX.cpp:95,polymorphi,polymorphic,95,interpreter/llvm-project/clang/lib/CodeGen/CGExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprCXX.cpp,1,['polymorphi'],['polymorphic']
Modifiability,// C++ [expr.typeid]p3:; // When typeid is applied to an expression other than an glvalue of a; // polymorphic class type [...] [the] expression is an unevaluated; // operand. [...],MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:99,polymorphi,polymorphic,99,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,1,['polymorphi'],['polymorphic']
Modifiability,// C++ [expr.typeid]p3:; // When typeid is applied to an expression other than an glvalue of a; // polymorphic class type [...] [the] expression is an unevaluated; // operand. [...]; // We add only potentially evaluated statements to the block to avoid; // CFG generation for unevaluated operands.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:99,polymorphi,polymorphic,99,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,1,['polymorphi'],['polymorphic']
Modifiability,"// C++ [over.match.funcs]p8: (proposed DR resolution); // A constructor inherited from class type C that has a first parameter; // of type ""reference to P"" (including such a constructor instantiated; // from a template) is excluded from the set of candidate functions when; // constructing an object of type cv D if the argument list has exactly; // one argument and D is reference-related to P and P is reference-related; // to C.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:72,inherit,inherited,72,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,1,['inherit'],['inherited']
Modifiability,"// C++ [stmt.while]p2:; // When the condition of a while statement is a declaration, the; // scope of the variable that is declared extends from its point; // of declaration (3.3.2) to the end of the while statement.; // [...]; // The object created in a condition is destroyed and created; // with each iteration of the loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp:106,variab,variable,106,interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp,2,"['extend', 'variab']","['extends', 'variable']"
Modifiability,"// C++ [temp.class.order]p1:; // For two class template partial specializations, the first is at least as; // specialized as the second if, given the following rewrite to two; // function templates, the first function template is at least as; // specialized as the second according to the ordering rules for function; // templates (14.6.6.2):; // - the first function template has the same template parameters as the; // first partial specialization and has a single function parameter; // whose type is a class template specialization with the template; // arguments of the first partial specialization, and; // - the second function template has the same template parameters as the; // second partial specialization and has a single function parameter; // whose type is a class template specialization with the template; // arguments of the second partial specialization.; //; // Rather than synthesize function templates, we merely perform the; // equivalent partial ordering by performing deduction directly on; // the template arguments of the class template partial; // specializations. This computation is slightly simpler than the; // general problem of function template partial ordering, because; // class template partial specializations are more constrained. We; // know that every template parameter is deducible from the class; // template partial specialization's template arguments, for; // example.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:160,rewrite,rewrite,160,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['rewrite'],['rewrite']
Modifiability,// C++ [temp.dep.constexpr]p5:; // An expression of the form & qualified-id where the qualified-id names a; // dependent member of the current instantiation is value-dependent. An; // expression of the form & cast-expression is also value-dependent if; // evaluating cast-expression as a core constant expression succeeds and; // the result of the evaluation refers to a templated entity that is an; // object with static or thread storage duration or a member function.; //; // What this amounts to is: constant-evaluate the operand and check whether it; // refers to a templated entity other than a variable with local storage.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp:601,variab,variable,601,interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ComputeDependence.cpp,1,['variab'],['variable']
Modifiability,// C++ [temp.explicit]p1:; // A [...] static data member of a class template can be explicitly; // instantiated from the member definition associated with its class; // template.; // C++1y [temp.explicit]p1:; // A [...] variable [...] template specialization can be explicitly; // instantiated from its template.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:220,variab,variable,220,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['variab'],['variable']
Modifiability,"// C++ and OpenCL (FIXME: spec reference?) allow reading const-qualified; // integer variables in constant expressions:; //; // C++ 7.1.5.1p2; // A variable of non-volatile const-qualified integral or enumeration; // type initialized by an ICE can be used in ICEs.; //; // We sometimes use CheckICE to check the C++98 rules in C++11 mode. In; // that mode, use of reference variables should not be allowed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:85,variab,variables,85,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,3,['variab'],"['variable', 'variables']"
Modifiability,// C++ temporary object that have lifetime extended to lifetime of the; // variable. Usually they represent temporary bounds to reference variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:43,extend,extended,43,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h,3,"['extend', 'variab']","['extended', 'variable', 'variables']"
Modifiability,"// C++0x 5.2.10p8: Converting a pointer to a function into a pointer to; // an object type or vice versa is conditionally-supported.; // Compilers support it in C++03 too, though, because it's necessary for; // casting the return value of dlsym() and GetProcAddress().; // FIXME: Conditionally-supported behavior should be configurable in the; // TargetInfo or similar.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCast.cpp:323,config,configurable,323,interpreter/llvm-project/clang/lib/Sema/SemaCast.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCast.cpp,1,['config'],['configurable']
Modifiability,"// C++0x [basic.lookup.unqual]p13:; // A name used in the definition of a static data member of class; // X (after the qualified-id of the static member) is looked up as; // if the name was used in a member function of X.; // C++0x [basic.lookup.unqual]p14:; // If a variable member of a namespace is defined outside of the; // scope of its namespace then any name used in the definition of; // the variable member (after the declarator-id) is looked up as; // if the definition of the variable member occurred in its; // namespace.; // Both of these imply that we should push a scope whose context; // is the semantic context of the declaration. We can't use; // PushDeclContext here because that context is not necessarily; // lexically contained in the current context. Fortunately,; // the containing scope should have the appropriate information.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:267,variab,variable,267,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,3,['variab'],['variable']
Modifiability,"// C++0x [class.copymove]p31:; // When certain criteria are met, an implementation is allowed to omit the; // copy/move construction of a class object [...]; //; // - in a throw-expression, when the operand is the name of a; // non-volatile automatic object (other than a function or catch-; // clause parameter) whose scope does not extend beyond the end of the; // innermost enclosing try-block (if there is one), the copy/move; // operation from the operand to the exception object (15.1) can be; // omitted by constructing the automatic object directly into the; // exception object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:334,extend,extend,334,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,1,['extend'],['extend']
Modifiability,// C++0x [dcl.constexpr]p1: constexpr can only be applied to declarations; // and definitions of functions and variables.; // C++2a [dcl.constexpr]p1: The consteval specifier shall be applied only to; // the declaration of a function or function template,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:111,variab,variables,111,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variables']
Modifiability,"// C++0x [dcl.init.ref]p1:; // A variable declared to be a T& or T&&, that is, ""reference to type T""; // (8.3.2), shall be initialized by an object, or function, of type T or; // by an object that can be converted into a T.; // (Therefore, multiple arguments are not permitted.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:33,variab,variable,33,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['variab'],['variable']
Modifiability,"// C++0x [expr.typeid]p3:; // When typeid is applied to an expression other than an lvalue of a; // polymorphic class type [...] The expression is an unevaluated; // operand (Clause 5).; //; // Note that we can't tell whether the expression is an lvalue of a; // polymorphic class type until after we've parsed the expression; we; // speculatively assume the subexpression is unevaluated, and fix it up; // later.; //; // We enter the unevaluated context before trying to determine whether we; // have a type-id, because the tentative parse logic will try to resolve; // names, and must treat them as unevaluated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp:100,polymorphi,polymorphic,100,interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExprCXX.cpp,2,['polymorphi'],['polymorphic']
Modifiability,"// C++0x [meta.unary.prop]p3:; // For all of the class templates X declared in this Clause, instantiating; // that template with a template argument that is a class template; // specialization may result in the implicit instantiation of the template; // argument if and only if the semantics of X require that the argument; // must be a complete type.; // We apply this rule to all the type trait expressions used to implement; // these class templates. We also try to follow any GCC documented behavior; // in these expressions to ensure portability of standard libraries.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:539,portab,portability,539,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,1,['portab'],['portability']
Modifiability,"// C++0x [stmt.iter]p1: Check if we have a for-range-declarator. If so, we; // must parse and analyze the for-range-initializer before the declaration is; // analyzed.; //; // Handle the Objective-C for-in loop variable similarly, although we; // don't need to parse the container in advance.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp:211,variab,variable,211,interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,1,['variab'],['variable']
Modifiability,"// C++0x [temp.arg.explicit]p9:; // Template argument deduction can extend the sequence of template; // arguments corresponding to a template parameter pack, even when the; // sequence contains explicitly specified template arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateVariadic.cpp:68,extend,extend,68,interpreter/llvm-project/clang/lib/Sema/SemaTemplateVariadic.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateVariadic.cpp,1,['extend'],['extend']
Modifiability,"// C++0x [temp.explicit]p2:; // If the explicit instantiation is for a member function, a member class; // or a static data member of a class template specialization, the name of; // the class template specialization in the qualified-id for the member; // name shall be a simple-template-id.; //; // C++98 has the same restriction, just worded differently.; //; // This does not apply to variable template specializations, where the; // template-id is in the unqualified-id instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:388,variab,variable,388,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['variab'],['variable']
Modifiability,"// C++0x [temp.explicit]p7:; // An explicit instantiation that names a class template; // specialization is an explicit instantion of the same kind; // (declaration or definition) of each of its members (not; // including members inherited from base classes) that has not; // been previously explicitly specialized in the translation unit; // containing the explicit instantiation, except as described; // below.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp:230,inherit,inherited,230,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiate.cpp,1,['inherit'],['inherited']
Modifiability,"// C++0x for-range statements are specified as [stmt.ranged]:; //; // {; // auto && __range = range-init;; // for ( auto __begin = begin-expr,; // __end = end-expr;; // __begin != __end;; // ++__begin ) {; // for-range-declaration = *__begin;; // statement; // }; // }; // Save local scope position before the addition of the implicit variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:335,variab,variables,335,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,1,['variab'],['variables']
Modifiability,"// C++11 6.4p4:; // The value of a condition that is an initialized declaration in a statement; // other than a switch statement is the value of the declared variable; // implicitly converted to type bool. If that conversion is ill-formed, the; // program is ill-formed.; // The value of a condition that is an expression is the value of the; // expression, implicitly converted to bool.; //; // C++23 8.5.2p2; // If the if statement is of the form if constexpr, the value of the condition; // is contextually converted to bool and the converted expression shall be; // a constant expression.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:158,variab,variable,158,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,1,['variab'],['variable']
Modifiability,"// C++11 [basic.scope.declarative]p4:; // Given a set of declarations in a single declarative region, each of; // which specifies the same unqualified name,; // -- they shall all refer to the same entity, or all refer to functions; // and function templates; or; // -- exactly one declaration shall declare a class name or enumeration; // name that is not a typedef name and the other declarations shall all; // refer to the same variable or enumerator, or all refer to functions; // and function templates; in this case the class name or enumeration; // name is hidden (3.3.10).; // C++11 [namespace.udecl]p14:; // If a function declaration in namespace scope or block scope has the; // same name and the same parameter-type-list as a function introduced; // by a using-declaration, and the declarations do not declare the same; // function, the program is ill-formed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:430,variab,variable,430,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,"// C++11 [class.static.data]p3: A static data member can be declared with; // the constexpr specifier; if so, its declaration shall specify; // a brace-or-equal-initializer.; // C++11 [dcl.constexpr]p1: The constexpr specifier shall be applied only to; // the definition of a variable [...] or the declaration of a static data; // member.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:276,variab,variable,276,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,"// C++11 [conv.prom]p3:; // A prvalue of an unscoped enumeration type whose underlying type is not; // fixed (7.2) can be converted to an rvalue a prvalue of the first of the; // following types that can represent all the values of the enumeration; // (i.e., the values in the range bmin to bmax as described in 7.2): int,; // unsigned int, long int, unsigned long int, long long int, or unsigned; // long long int. If none of the types in that list can represent all the; // values of the enumeration, an rvalue a prvalue of an unscoped enumeration; // type can be converted to an rvalue a prvalue of the extended integer type; // with lowest integer conversion rank (4.13) greater than the rank of long; // long in which all the values of the enumeration can be represented. If; // there are two such extended types, the signed one is chosen.; // C++11 [conv.prom]p4:; // A prvalue of an unscoped enumeration type whose underlying type is fixed; // can be converted to a prvalue of its underlying type. Moreover, if; // integral promotion can be applied to its underlying type, a prvalue of an; // unscoped enumeration type whose underlying type is fixed can also be; // converted to a prvalue of the promoted underlying type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:606,extend,extended,606,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,2,['extend'],['extended']
Modifiability,// C++11 [dcl.stc]p4:; // When thread_local is applied to a variable of block scope the; // storage-class-specifier static is implied if it does not appear; // explicitly.; // Core issue: 'static' is not implied if the variable is declared; // 'extern'.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:60,variab,variable,60,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,2,['variab'],['variable']
Modifiability,"// C++11 [expr.cond]p3; // if both are glvalues of the same value category and the same type except; // for cv-qualification, an attempt is made to convert each of those; // operands to the type of the other.; // FIXME:; // Resolving a defect in P0012R1: we extend this to cover all cases where; // one of the operands is reference-compatible with the other, in order; // to support conditionals between functions differing in noexcept. This; // will similarly cover difference in array bounds after P0388R4.; // FIXME: If LTy and RTy have a composite pointer type, should we convert to; // that instead?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:258,extend,extend,258,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,1,['extend'],['extend']
Modifiability,"// C++11 [expr.cond]p4; // If the second and third operands are glvalues of the same value; // category and have the same type, the result is of that type and; // value category and it is a bit-field if the second or the third; // operand is a bit-field, or if both are bit-fields.; // We only extend this to bitfields, not to the crazy other kinds of; // l-values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:294,extend,extend,294,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,1,['extend'],['extend']
Modifiability,// C++11 [expr.prim.lambda]p10:; // [...] each such lookup shall find a variable with automatic storage; // duration declared in the reaching scope of the local lambda expression.; // Note that the 'reaching scope' check happens in tryCaptureVariable().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp:72,variab,variable,72,interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,1,['variab'],['variable']
Modifiability,"// C++11 [expr.prim.lambda]p9:; // A lambda-expression whose smallest enclosing scope is a block scope is a; // local lambda expression; any other lambda expression shall not have a; // capture-default or simple-capture in its lambda-introducer.; //; // For simple-captures, this is covered by the check below that any named; // entity is a variable that can be captured.; //; // For DR1632, we also allow a capture-default in any context where we can; // odr-use 'this' (in particular, in a default initializer for a non-static; // data member).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp:341,variab,variable,341,interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,1,['variab'],['variable']
Modifiability,"// C++11 [expr.typeid]p3:; // When typeid is applied to an expression other than a glvalue of; // polymorphic class type, [...] the expression is an unevaluated operand.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprCXX.cpp:98,polymorphi,polymorphic,98,interpreter/llvm-project/clang/lib/AST/ExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprCXX.cpp,1,['polymorphi'],['polymorphic']
Modifiability,"// C++11 [meta.unary.prop]:; // is_trivially_constructible is defined as:; //; // is_constructible<T, Args...>::value is true and the variable; // definition for is_constructible, as defined below, is known to call; // no operation that is not trivial.; //; // The predicate condition for a template specialization; // is_constructible<T, Args...> shall be satisfied if and only if the; // following variable definition would be well-formed for some invented; // variable t:; //; // T t(create<Args>()...);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:134,variab,variable,134,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,3,['variab'],['variable']
Modifiability,"// C++11 [stmt.dcl]p3:; // A program that jumps from a point where a variable with automatic; // storage duration is not in scope to a point where it is in scope; // is ill-formed unless the variable has scalar type, class type with; // a trivial default constructor and a trivial destructor, a; // cv-qualified version of one of these types, or an array of one of; // the preceding types and is declared without an initializer.; // C++03 [stmt.dcl.p3:; // A program that jumps from a point where a local variable; // with automatic storage duration is not in scope to a point; // where it is in scope is ill-formed unless the variable has; // POD type and is declared without an initializer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/JumpDiagnostics.cpp:69,variab,variable,69,interpreter/llvm-project/clang/lib/Sema/JumpDiagnostics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/JumpDiagnostics.cpp,4,['variab'],['variable']
Modifiability,"// C++11 [temp.explicit]p10:; // Except for inline functions, const variables of literal types, variables; // of reference types, [...] explicit instantiation declarations; // have the effect of suppressing the implicit instantiation of the entity; // to which they refer.; //; // FIXME: That's not exactly the same as ""might be usable in constant; // expressions"", which only allows constexpr variables and const integral; // types, not arbitrary const literal types.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:68,variab,variables,68,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,3,['variab'],['variables']
Modifiability,// C++11 [temp.explicit]p12:; // The usual access controls do not apply to names used to specify; // explicit instantiations.; // We extend this to also cover explicit specializations. Note that; // we don't suppress if this turns out to be an elaborated type; // specifier.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp:133,extend,extend,133,interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseDecl.cpp,1,['extend'],['extend']
Modifiability,"// C++11 [temp.func.order]p3:; // [...] If only one of the function templates is a non-static; // member, that function template is considered to have a new; // first parameter inserted in its function parameter list. The; // new parameter is of type ""reference to cv A,"" where cv are; // the cv-qualifiers of the function template (if any) and A is; // the class of which the function template is a member.; //; // Note that we interpret this to mean ""if one of the function; // templates is a non-static member and the other is a non-member"";; // otherwise, the ordering rules for static functions against non-static; // functions don't make any sense.; //; // C++98/03 doesn't have this provision but we've extended DR532 to cover; // it as wording was broken prior to it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:710,extend,extended,710,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['extend'],['extended']
Modifiability,// C++11 inheriting constructors.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:9,inherit,inheriting,9,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['inherit'],['inheriting']
Modifiability,// C++11 trailing-type-specifier for variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/DeclSpec.h:37,variab,variable,37,interpreter/llvm-project/clang/include/clang/Sema/DeclSpec.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/DeclSpec.h,1,['variab'],['variable']
Modifiability,"// C++17 '[[using ns: foo, bar(baz, blech)]]'; // We assume nobody will name an ObjC variable 'using'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp:85,variab,variable,85,interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/TokenAnnotator.cpp,1,['variab'],['variable']
Modifiability,// C++17 [dcl.init.list]p6:; // initializing an initializer_list object from the array extends the; // lifetime of the array exactly like binding a reference to a temporary.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:87,extend,extends,87,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['extend'],['extends']
Modifiability,"// C++17 [expr.delete]p10:; // If the type has new-extended alignment, a function with a parameter; // of type std::align_val_t is preferred; otherwise a function without; // such a parameter is preferred",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:51,extend,extended,51,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,1,['extend'],['extended']
Modifiability,"// C++17 [expr.new]p13:; // If no matching function is found and the allocated object type has; // new-extended alignment, the alignment argument is removed from the; // argument list, and overload resolution is performed again.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:103,extend,extended,103,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,1,['extend'],['extended']
Modifiability,"// C++17 feature (so we can use inline variables)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/Utils.hxx:39,variab,variables,39,tree/dataframe/inc/ROOT/RDF/Utils.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDF/Utils.hxx,1,['variab'],['variables']
Modifiability,// C++17 onwards require that we evaluate the RHS first.; // Compute RHS and save it in a temporary variable so we can; // load it again later.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.cpp:100,variab,variable,100,interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.cpp,1,['variab'],['variable']
Modifiability,"// C++17 onwards require that we evaluate the RHS first.; // Compute RHS and save it in a temporary variable so we can; // load it again later.; // FIXME: Compound assignments are unsequenced in C, so we might; // have to figure out how to reject them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.cpp:100,variab,variable,100,interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.cpp,1,['variab'],['variable']
Modifiability,// C++1y [dcl.constexpr]p3 allows anything except:; // a definition of a variable of non-literal type or of static or; // thread storage duration or [before C++2a] for which no; // initialization is performed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:73,variab,variable,73,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['variab'],['variable']
Modifiability,"// C++1y [temp.explicit]p3:; // If the explicit instantiation is for a variable, the unqualified-id; // in the declaration shall be a template-id.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:71,variab,variable,71,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['variab'],['variable']
Modifiability,"// C++1y allows all of these. We don't allow them as extensions in C++11,; // because they don't make sense without variable mutation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:116,variab,variable,116,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['variab'],['variable']
Modifiability,"// C++1y allows switch-statements, and since they don't need variable; // mutation, we can reasonably allow them in C++11 as an extension.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:61,variab,variable,61,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['variab'],['variable']
Modifiability,"// C++1z [dcl.fcn.spec]p4:; // If the definition of a variable appears in a translation unit before; // its first declaration as inline, the program is ill-formed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:54,variab,variable,54,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,// C++1z [dcl.init.aggr]p1:; // An aggregate is [...] a class [...] with no inherited constructors,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp:76,inherit,inherited,76,interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/DeclCXX.cpp,1,['inherit'],['inherited']
Modifiability,// C++1z [dcl.spec.constexpr]p1:; // A static data member declared with the constexpr specifier is; // implicitly an inline variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:124,variab,variable,124,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,"// C++1z [temp.arg.template]p3:; // If the rewrite produces an invalid type, then P is not at least as; // specialized as A.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:43,rewrite,rewrite,43,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['rewrite'],['rewrite']
Modifiability,"// C++1z [temp.arg.template]p4: (DR 150); // A template template-parameter P is at least as specialized as a; // template template-argument A if, given the following rewrite to two; // function templates...; // Rather than synthesize function templates, we merely perform the; // equivalent partial ordering by performing deduction directly on; // the template parameter lists of the template template parameters.; //; // Given an invented class template X with the template parameter list of; // A (including default arguments):",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp:166,rewrite,rewrite,166,interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateDeduction.cpp,1,['rewrite'],['rewrite']
Modifiability,"// C++20 [dcl.inline]/7; // If an inline function or variable that is attached to a named module; // is declared in a definition domain, it shall be defined in that; // domain.; // So, if the current declaration does not have a definition, we must; // check at the end of the TU (or when the PMF starts) to see that we; // have a definition at that point.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:53,variab,variable,53,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,// C++20 [expr.const]p12:; // A variable [...] is needed for constant evaluation if it is [...] a; // variable whose name appears as a potentially constant evaluated; // expression that is either a contexpr variable or is of non-volatile; // const-qualified integral type or of reference type,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:32,variab,variable,32,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,3,['variab'],['variable']
Modifiability,"// C++20 [expr.const]p4: [DR2126]; // An object or reference is usable in constant expressions if it is; // - a temporary object of non-volatile const-qualified literal type; // whose lifetime is extended to that of a variable that is usable; // in constant expressions; //; // C++20 [expr.const]p5:; // an lvalue-to-rvalue conversion [is not allowed unless it applies to]; // - a non-volatile glvalue that refers to an object that is usable; // in constant expressions, or; // - a non-volatile glvalue of literal type that refers to a; // non-volatile object whose lifetime began within the evaluation; // of E;; //; // C++11 misses the 'began within the evaluation of e' check and; // instead allows all temporaries, including things like:; // int &&r = 1;; // int x = ++r;; // constexpr int k = r;; // Therefore we use the C++14-onwards rules in C++11 too.; //; // Note that temporaries whose lifetimes began while evaluating a; // variable's constructor are not usable while evaluating the; // corresponding destructor, not even if they're of const-qualified; // types.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:196,extend,extended,196,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,3,"['extend', 'variab']","['extended', 'variable']"
Modifiability,// C++20 [expr.const]p4:; // An object or reference is usable in constant expressions if it is [...]; // a temporary object of non-volatile const-qualified literal type; // whose lifetime is extended to that of a variable that is usable; // in constant expressions,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprCXX.cpp:191,extend,extended,191,interpreter/llvm-project/clang/lib/AST/ExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprCXX.cpp,2,"['extend', 'variab']","['extended', 'variable']"
Modifiability,"// C++20: dcl.decl.general p4:; // The optional requires-clause ([temp.pre]) in an init-declarator or; // member-declarator shall be present only if the declarator declares a; // templated function ([dcl.fct]).; //; // [temp.pre]/8:; // An entity is templated if it is; // - a template,; // - an entity defined ([basic.def]) or created ([class.temporary]) in a; // templated entity,; // - a member of a templated entity,; // - an enumerator for an enumeration that is a templated entity, or; // - the closure type of a lambda-expression ([expr.prim.lambda.closure]); // appearing in the declaration of a templated entity. [Note 6: A local; // class, a local or block variable, or a friend function defined in a; // templated entity is a templated entity. — end note]; //; // A templated function is a function template or a function that is; // templated. A templated class is a class template or a class that is; // templated. A templated variable is a variable template or a variable; // that is templated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:667,variab,variable,667,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,4,['variab'],['variable']
Modifiability,"// C++2a [basic.def.odr]p4:; // A variable x whose name appears as a potentially-evalauted expression; // e is odr-used by e unless; // -- x is a reference that is usable in constant expressions, or; // -- x is a variable of non-reference type that is usable in constant; // expressions and has no mutable subobjects, and e is an element of; // the set of potential results of an expression of; // non-volatile-qualified non-class type to which the lvalue-to-rvalue; // conversion is applied, or; // -- x is a variable of non-reference type, and e is an element of the; // set of potential results of a discarded-value expression to which; // the lvalue-to-rvalue conversion is not applied; //; // We check the first bullet and the ""potentially-evaluated"" condition in; // BuildDeclRefExpr. We check the type requirements in the second bullet; // in CheckLValueToRValueConversionOperand below.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:34,variab,variable,34,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,3,['variab'],['variable']
Modifiability,"// C++2a [basic.def.odr]p4:; // A variable x whose name appears as a potentially-evaluated expression e; // is odr-used by e unless [...] x is a reference that is usable in; // constant expressions.; // CUDA/HIP:; // If a reference variable referencing a host variable is captured in a; // device or host device lambda, the value of the referee must be copied; // to the capture and the reference variable must be treated as odr-use; // since the value of the referee is not known at compile time and must; // be loaded from the captured.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:34,variab,variable,34,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,4,['variab'],['variable']
Modifiability,"// C++2a [basic.def.odr]p4:; // A variable x whose name appears as a potentially-evaluated expression e; // is odr-used by e unless; // -- x is a reference that is usable in constant expressions; // -- x is a variable of non-reference type that is usable in constant; // expressions and has no mutable subobjects [FIXME], and e is an; // element of the set of potential results of an expression of; // non-volatile-qualified non-class type to which the lvalue-to-rvalue; // conversion is applied; // -- x is a variable of non-reference type, and e is an element of the set; // of potential results of a discarded-value expression to which the; // lvalue-to-rvalue conversion is not applied [FIXME]; //; // We check the first part of the second bullet here, and; // Sema::CheckLValueToRValueConversionOperand deals with the second part.; // FIXME: To get the third bullet right, we need to delay this even for; // variables that are not usable in constant expressions.; // If we already know this isn't an odr-use, there's nothing more to do.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:34,variab,variable,34,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,4,['variab'],"['variable', 'variables']"
Modifiability,// C++2a [expr.const]p3:; // A variable is usable in constant expressions after its initializing; // declaration is encountered...,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp:31,variab,variable,31,interpreter/llvm-project/clang/lib/AST/Decl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp,1,['variab'],['variable']
Modifiability,"// C++2a [over.match.oper]p4:; // A non-template function or function template F named operator== is a; // rewrite target with first operand o unless a search for the name operator!=; // in the scope S from the instantiation context of the operator expression; // finds a function or function template that would correspond; // ([basic.scope.scope]) to F if its name were operator==, where S is the; // scope of the class type of o if F is a class member, and the namespace; // scope of which F is a member otherwise. A function template specialization; // named operator== is a rewrite target if its function template is a rewrite; // target.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:107,rewrite,rewrite,107,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,3,['rewrite'],['rewrite']
Modifiability,// C++98 [expr.const]p1:; // An integral constant-expression can involve only [...] const variables; // or static data members of integral or enumeration types initialized with; // [integer] constant expressions (dcl.init),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp:90,variab,variables,90,interpreter/llvm-project/clang/lib/AST/Decl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Decl.cpp,1,['variab'],['variables']
Modifiability,"// C11 6.2.7p4:; // For an identifier with internal or external linkage declared; // in a scope in which a prior declaration of that identifier is; // visible, if the prior declaration specifies internal or; // external linkage, the type of the identifier at the later; // declaration becomes the composite type.; //; // If the variable isn't visible, we do not merge with its type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:328,variab,variable,328,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,"// C23 6.7.10p4: An entity of variable length array type shall not be; // initialized except by an empty initializer.; //; // The C extension warnings are issued from ParseBraceInitializer() and; // do not need to be issued here. However, we continue to issue an error; // in the case there are initializers or we are compiling C++. We allow; // use of VLAs in C++, but it's not clear we want to allow {} to zero; // init a VLA in C++ in all cases (such as with non-trivial constructors).; // FIXME: should we allow this construct in C++ when it makes sense to do; // so?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:30,variab,variable,30,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,2,['variab'],['variable']
Modifiability,// C99 6.7.2.1p8: A member of a structure or union may have any type other; // than a variably modified type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:86,variab,variably,86,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,2,['variab'],['variably']
Modifiability,"// C99 6.7.4p3; // An inline definition of a function with external linkage shall; // not contain a definition of a modifiable object with static or; // thread storage duration...; // We only apply this when the function is required to be defined; // elsewhere, i.e. when the function is not 'extern inline'. Note; // that a local variable with thread storage duration still has to; // be marked 'static'. Also note that it's possible to get these; // semantics in C++ using __attribute__((gnu_inline)).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:331,variab,variable,331,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,"// C99 6.7.5.3p12:; // If the function declarator is not part of a definition of that; // function, parameters may have incomplete type and may use the [*]; // notation in their sequences of declarator specifiers to specify; // variable length array types.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:228,variab,variable,228,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['variab'],['variable']
Modifiability,"// C99 6.7.7 ""Any array size expressions associated with variable length; // array declarators are evaluated each time the declaration of the typedef; // name is reached in the order of execution.""; // The checkers should know about typedef to be able to handle VLA size; // expressions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngineC.cpp:57,variab,variable,57,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngineC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/ExprEngineC.cpp,1,['variab'],['variable']
Modifiability,// C99 6.7.7p2: If a typedef name specifies a variably modified type; // then it shall have block scope.; // Note that variably modified types must be fixed before merging the decl so; // that redeclarations will match.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:46,variab,variably,46,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,2,['variab'],['variably']
Modifiability,"// CALL has both variable operands and variable results, but ISel only; // supports one or the other. Split calls into two nodes glued together, one; // for the operands and one for the results. These two nodes will be; // recombined in a custom inserter hook into a single MachineInstr.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelDAGToDAG.cpp:17,variab,variable,17,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelDAGToDAG.cpp,2,['variab'],['variable']
Modifiability,"// CEF applications have multiple sub-processes (render, plugin, GPU, etc); // that share the same executable. This function checks the command-line and,; // if this is a sub-process, executes the appropriate logic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/cefdisplay/src/cef_main.cxx:57,plugin,plugin,57,gui/cefdisplay/src/cef_main.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/cefdisplay/src/cef_main.cxx,1,['plugin'],['plugin']
Modifiability,"// CEF applications have multiple sub-processes (render, plugin, GPU, etc); // that share the same executable. This function checks the command-line and,; // if this is a sub-process, executes the appropriate logic.; /* int exit_code = CefExecuteProcess(main_args, nullptr, nullptr);; if (exit_code >= 0) {; // The sub-process has completed so return here.; return exit_code;; }; */; // Install xlib error handlers so that the application won't be terminated; // on non-fatal errors.; // XSetErrorHandler(XErrorHandlerImpl);; // XSetIOErrorHandler(XIOErrorHandlerImpl);; // Specify CEF global settings here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/cefdisplay/src/RCefWebDisplayHandle.cxx:57,plugin,plugin,57,gui/cefdisplay/src/RCefWebDisplayHandle.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/cefdisplay/src/RCefWebDisplayHandle.cxx,1,['plugin'],['plugin']
Modifiability,"// CFMlpANN prefers normalised input variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx:37,variab,variables,37,tmva/tmva/src/MethodCFMlpANN.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/MethodCFMlpANN.cxx,1,['variab'],['variables']
Modifiability,// CGF.EmitVariablyModifiedType(KmpDependInfoArrayTy);; // Properly emit variable-sized array.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:73,variab,variable-sized,73,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['variab'],['variable-sized']
Modifiability,"// CLING WORKAROUND: make sure variable is loaded",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:31,variab,variable,31,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,1,['variab'],['variable']
Modifiability,"// CLING WORKAROUND: the following causes templates to be instantiated first within the proper; // scope, making the lookup succeed and preventing spurious duplicate instantiations later. Also,; // if the variable is not yet loaded, pull it in through gInterpreter.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:205,variab,variable,205,bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx,1,['variab'],['variable']
Modifiability,"// CNT[LT]ZW always produce a 64-bit value in [0,32], and so is zero extended.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:69,extend,extended,69,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,1,['extend'],['extended']
Modifiability,"// CUDA B.2.1 ""The __device__ qualifier declares a variable that resides on; // the device. [...]""; // CUDA B.2.2 ""The __constant__ qualifier, optionally used together with; // __device__, declares a variable that: [...]; // Is accessible from all the threads within the grid and from the host; // through the runtime library (cudaGetSymbolAddress() / cudaGetSymbolSize(); // / cudaMemcpyToSymbol() / cudaMemcpyFromSymbol()).""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:51,variab,variable,51,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,2,['variab'],['variable']
Modifiability,"// CUDA B.2.5: ""__shared__ and __constant__ variables have implied static; // storage [duration].""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:44,variab,variables,44,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variables']
Modifiability,"// CUDA E.2.4.1 ""__shared__ variables cannot have an initialization; // as part of their declaration."" Sema has already checked for; // error cases, so we just need to set Init to UndefValue.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:28,variab,variables,28,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['variab'],['variables']
Modifiability,"// CUDA headers have some 'legacy' texture oprerations that duplicate; // functionality. So, we just inherit it, instead of refining a copy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_texture_intrinsics.h:101,inherit,inherit,101,interpreter/llvm-project/clang/lib/Headers/__clang_cuda_texture_intrinsics.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_texture_intrinsics.h,1,['inherit'],['inherit']
Modifiability,"// CUDA runtime uses this undocumented function to access kernel launch; // configuration. The declaration is in crt/device_functions.h but that file; // includes a lot of other stuff we don't want. Instead, we'll provide our own; // declaration for it here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h:76,config,configuration,76,interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Headers/__clang_cuda_runtime_wrapper.h,1,['config'],['configuration']
Modifiability,// CUDA's local and local static __shared__ variables should not; // have any non-empty initializers. This is ensured by Sema.; // Whatever initializer such variable may have when it gets here is; // a no-op and should not be emitted.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp:44,variab,variables,44,interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,// CUDA/HIP: Check whether a captured reference variable is referencing a; // host variable in a device or host device lambda.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:48,variab,variable,48,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,2,['variab'],['variable']
Modifiability,"// CUDA/HIP: managed variables need to be externalized since it is; // a declaration in IR, therefore cannot have internal linkage. Kernels in; // anonymous name space needs to be externalized to avoid duplicate symbols.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:21,variab,variables,21,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['variab'],['variables']
Modifiability,// CUDA: Calls to global functions must be configured,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:43,config,configured,43,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['config'],['configured']
Modifiability,"// CWG issue 1517: we're constructing a base class of the object described by; // 'This', so that object has not yet begun its period of construction and; // any polymorphic operation on it results in undefined behavior.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:162,polymorphi,polymorphic,162,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['polymorphi'],['polymorphic']
Modifiability,"// CXXCatchStmt are treated like labels, so they are the first statement in a; // block.; // Save local scope position because in case of exception variable ScopePos; // won't be restored when traversing AST.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:148,variab,variable,148,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,1,['variab'],['variable']
Modifiability,"// CXXCatchStmt is more than just a label. They have semantic meaning; // as well, as they implicitly ""initialize"" the catch variable. Add; // it to the CFG as a CFGElement so that the control-flow of these; // semantics gets captured.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:125,variab,variable,125,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,1,['variab'],['variable']
Modifiability,"// CXXMethodDecl,FieldDecl and VarDecl inherit from NamedDecl; // See: http://clang.llvm.org/doxygen/classclang_1_1DeclaratorDecl.html",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx:39,inherit,inherit,39,core/dictgen/src/rootcling_impl.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/src/rootcling_impl.cxx,1,['inherit'],['inherit']
Modifiability,"// Cache used frame indexes during statepoint re-write to re-use them in; // processing next statepoint instruction.; // Two strategies. One is to preserve the size of spill slot while another one; // extends the size of spill slots to reduce the number of them, causing; // the less total frame size. But unspill will have ""implicit"" any extend.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/FixupStatepointCallerSaved.cpp:201,extend,extends,201,interpreter/llvm-project/llvm/lib/CodeGen/FixupStatepointCallerSaved.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/FixupStatepointCallerSaved.cpp,2,['extend'],"['extend', 'extends']"
Modifiability,// Cache variable used by hasBranchTargetEnforcement().,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/LowerTypeTests.cpp:9,variab,variable,9,interpreter/llvm-project/llvm/lib/Transforms/IPO/LowerTypeTests.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/LowerTypeTests.cpp,1,['variab'],['variable']
Modifiability,// Calculate a possible zero extend mask for this constant.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:29,extend,extend,29,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['extend'],['extend']
Modifiability,"// Calculate derivatives for number of expected events, needed for extended ML fit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx:67,extend,extended,67,roofit/roofitcore/src/FitHelpers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/FitHelpers.cxx,1,['extend'],['extended']
Modifiability,"// Calculate final offset.; // - There is no need to change the offset if the frame object is one of the; // following: an outgoing argument, pointer to a dynamically allocated; // stack space or a $gp restore location,; // - If the frame object is any of the following, its offset must be adjusted; // by adding the size of the stack:; // incoming argument, callee-saved register location or local variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsSERegisterInfo.cpp:399,variab,variable,399,interpreter/llvm-project/llvm/lib/Target/Mips/MipsSERegisterInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsSERegisterInfo.cpp,1,['variab'],['variable']
Modifiability,"// Calculate final offset.; // - There is no need to change the offset if the frame object; // is one of the; // following: an outgoing argument, pointer to a dynamically allocated; // stack space or a $gp restore location,; // - If the frame object is any of the following,; // its offset must be adjusted; // by adding the size of the stack:; // incoming argument, callee-saved register location or local variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/Mips16RegisterInfo.cpp:407,variab,variable,407,interpreter/llvm-project/llvm/lib/Target/Mips/Mips16RegisterInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/Mips16RegisterInfo.cpp,1,['variab'],['variable']
Modifiability,// Calculate history for local variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DebugHandlerBase.cpp:31,variab,variables,31,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DebugHandlerBase.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DebugHandlerBase.cpp,1,['variab'],['variables']
Modifiability,// Calculate how large the flexible array member is in bytes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:27,flexible,flexible,27,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,1,['flexible'],['flexible']
Modifiability,"// Calculate how many bytes of the parent scope this entry covers.; // FIXME: In section 2.6.2 of the DWARFv5 spec it says that ""The; // address ranges defined by the bounded location descriptions of a; // location list may overlap"". So in theory a variable can have; // multiple simultaneous locations, which would make this calculation; // misleading because we will count the overlapped areas; // twice. However, clang does not currently emit DWARF like this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp:249,variab,variable,249,interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,1,['variab'],['variable']
Modifiability,"// Calculate live variable information in depth first order on the CFG of the; // function. This guarantees that we will see the definition of a virtual; // register before its uses due to dominance properties of SSA (except for PHI; // nodes, which are treated as a special case).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp:18,variab,variable,18,interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveVariables.cpp,1,['variab'],['variable']
Modifiability,"// Calculate mask and reference plot bins for non-iterating variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:60,variab,variables,60,roofit/roofitcore/src/RooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx,1,['variab'],['variables']
Modifiability,"// Calculate mask and reference plot bins for non-iterating variables,; // and get ranges for iterating variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:60,variab,variables,60,roofit/roofitcore/src/RooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx,2,['variab'],['variables']
Modifiability,// Calculate mask for extended hash bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ConcurrentHashtable.h:22,extend,extended,22,interpreter/llvm-project/llvm/include/llvm/ADT/ConcurrentHashtable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/ConcurrentHashtable.h,1,['extend'],['extended']
Modifiability,"// Calculate relative weighting factor for sim-pdfs of all extendable components",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx:59,extend,extendable,59,roofit/roofitcore/src/RooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimultaneous.cxx,1,['extend'],['extendable']
Modifiability,"// Calculate the ""top-down"" access to this base class.; // The spec actually describes this bottom-up, but top-down is; // equivalent because the definition works out as follows:; // 1. Write down the access along each step in the inheritance; // chain, followed by the access of the decl itself.; // For example, in; // class A { public: int foo; };; // class B : protected A {};; // class C : public B {};; // class D : private C {};; // we would write:; // private public protected public; // 2. If 'private' appears anywhere except far-left, access is denied.; // 3. Otherwise, overall access is determined by the most restrictive; // access in the sequence.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/CXXInheritance.cpp:231,inherit,inheritance,231,interpreter/llvm-project/clang/lib/AST/CXXInheritance.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/CXXInheritance.cpp,1,['inherit'],['inheritance']
Modifiability,// Calculate the MaxCallFrameSize and AdjustsStack variables for the; // function's frame information. Also eliminates call frame pseudo; // instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp:51,variab,variables,51,interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PrologEpilogInserter.cpp,1,['variab'],['variables']
Modifiability,"// Calculate the multiplicative inverse modulo BW.; // 2^W requires W + 1 bits, so we have to extend and then truncate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp:94,extend,extend,94,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp,1,['extend'],['extend']
Modifiability,"// Calculate the number of (extended) events for this run",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx:28,extend,extended,28,roofit/roofitcore/src/RooMCStudy.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMCStudy.cxx,2,['extend'],['extended']
Modifiability,// Calculate the overflow flag: sign extend the arithmetic result from; // the original type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp:37,extend,extend,37,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp,1,['extend'],['extend']
Modifiability,// Calculate the overflow flag: zero extend the arithmetic result from; // the original type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp:37,extend,extend,37,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp,1,['extend'],['extend']
Modifiability,// Calculate the set of read and write-locations for each alloca. This is; // analogous to finding the 'uses' and 'definitions' of each variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp:136,variab,variable,136,interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/PromoteMemoryToRegister.cpp,1,['variab'],['variable']
Modifiability,"// Call __kmpc_threadprivate_register(&loc, &var, ctor, cctor/*NULL*/, dtor); // to register constructor/destructor for variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:120,variab,variable,120,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['variab'],['variable']
Modifiability,"// CallShowMember will force a call to InheritsFrom, which indirectly; // calls TClass::GetClass. It forces the loading of new typedefs in; // case some of them were not yet loaded.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx:39,Inherit,InheritsFrom,39,core/meta/src/TClass.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TClass.cxx,1,['Inherit'],['InheritsFrom']
Modifiability,"// Calls involved in thread-local variable lookup save more registers than; // normal calls, so they need a different mask to represent this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RegisterInfo.h:34,variab,variable,34,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RegisterInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64RegisterInfo.h,2,['variab'],['variable']
Modifiability,// Calls to _Block_object_dispose along the EH path in the copy helper; // function don't throw as newly-copied __block variables always have a; // reference count of 2.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp:120,variab,variables,120,interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp,1,['variab'],['variables']
Modifiability,// Can fold only sign-/zero-extend of a word.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:28,extend,extend,28,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,1,['extend'],['extend']
Modifiability,"// Can not drop any more instructions. We're done here.; // Otherwise, this instruction can be freely erased,; // even if it is not side-effect free.; // Note that deleting EH's here is in fact okay, although it involves a bit; // of subtle reasoning. If this inst is an EH, all the predecessors of this; // block will be the unwind edges of Invoke/CatchSwitch/CleanupReturn,; // and we can therefore guarantee this block will be erased.; // If we're deleting this, we're deleting any subsequent dbg.values, so; // delete DPValue records of variable information.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp:541,variab,variable,541,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyCFG.cpp,1,['variab'],['variable']
Modifiability,// Can our users be adapted?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:20,adapt,adapted,20,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp,1,['adapt'],['adapted']
Modifiability,// Can the IV be extended outside the loop without overflow?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp:17,extend,extended,17,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp,1,['extend'],['extended']
Modifiability,"// Can the model generate any of the direct variables itself?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx:44,variab,variables,44,roofit/roofitcore/src/RooGenContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooGenContext.cxx,1,['variab'],['variables']
Modifiability,"// Can't handle unknown size alloca.; // (e.g. Variable Length Array, Scalable Vector)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp:47,Variab,Variable,47,interpreter/llvm-project/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/MemCpyOptimizer.cpp,1,['Variab'],['Variable']
Modifiability,"// Can't replace negative values with an LI as that will sign-extend; // and not clear the left bits. If we're setting the CR bit, we will use; // ANDI_rec which won't sign extend, so that's safe.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp:62,extend,extend,62,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,4,['extend'],['extend']
Modifiability,// Can't rewrite non-branch yet.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:9,rewrite,rewrite,9,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,4,['rewrite'],['rewrite']
Modifiability,"// Cannot delete IV->getBase(), since PE points to it.; // Replace the old base with the cast. This is important when doing; // embedded rewrites. For example, [newInv->_container addObject:0].",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp:137,rewrite,rewrites,137,interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/RewriteObjC.cpp,1,['rewrite'],['rewrites']
Modifiability,// Cannot promote variable LSHR.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp:18,variab,variable,18,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCasts.cpp,1,['variab'],['variable']
Modifiability,// Cannot subscript a non-bits variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/Record.cpp:31,variab,variable,31,interpreter/llvm-project/llvm/lib/TableGen/Record.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/Record.cpp,1,['variab'],['variable']
Modifiability,"// Canvas plugin...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowser.cxx:10,plugin,plugin,10,gui/gui/src/TRootBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowser.cxx,1,['plugin'],['plugin']
Modifiability,"// Capacity to store 3 debug values.; // TODO: Not all DebugValueUser instances need all 3 elements, if we; // restructure the DPValue class then we can template parameterize this array; // size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Metadata.h:162,parameteriz,parameterize,162,interpreter/llvm-project/llvm/include/llvm/IR/Metadata.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Metadata.h,1,['parameteriz'],['parameterize']
Modifiability,"// Capture all referenced variable references.; // TODO: Instead of computing NewStart/NewStop/NewStep inside the; // CapturedStmt, we could compute them before and capture the result, to be; // used jointly with the LoopVar function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:26,variab,variable,26,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,// Capture global variables if it is required to use private copy of this; // variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:18,variab,variables,18,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,// Capture potential fragments that needs to be placed after the variable name; // ```; // int nums[5];; // char (*ptr_to_array)[6];; // ```,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ExtractAPI/DeclarationFragments.cpp:65,variab,variable,65,interpreter/llvm-project/clang/lib/ExtractAPI/DeclarationFragments.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ExtractAPI/DeclarationFragments.cpp,1,['variab'],['variable']
Modifiability,// Capture the transformed variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h:27,variab,variable,27,interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,3,['variab'],['variable']
Modifiability,// Capture updatable variable for the current SCC.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp:21,variab,variable,21,interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Inliner.cpp,1,['variab'],['variable']
Modifiability,// Capture variables captured by reference in lambdas for target-based; // directives.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:11,variab,variables,11,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,2,['variab'],['variables']
Modifiability,// Captured expression will be recaptured during captured variables; // rebuilding.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h:58,variab,variables,58,interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,2,['variab'],['variables']
Modifiability,"// Case 1a; // For function call with a file-scope sampler variable as argument,; // get the integer literal.; // Do not diagnose if the file-scope variable does not have initializer; // since this has already been diagnosed when parsing the variable; // declaration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:59,variab,variable,59,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,3,['variab'],['variable']
Modifiability,"// Case 2; // Check initializer is 32 bit integer constant.; // If the initializer is taken from global variable, do not diagnose since; // this has already been done when parsing the variable declaration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:104,variab,variable,104,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,2,['variab'],['variable']
Modifiability,"// Case of a fixed length array that have one of its indices given; // by a variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx:76,variab,variable,76,tree/treeplayer/src/TTreeFormulaManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx,1,['variab'],['variable']
Modifiability,"// Case of an object data member. Here we allow for the; // variable name to be omitted. Eg, for Event.root with split; // level 1 or above Draw(""GetXaxis"") is the same as Draw(""fH.GetXaxis()"")",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:60,variab,variable,60,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,4,['variab'],['variable']
Modifiability,"// Case where the index is not specified AND the 1st dimension has a variable; // size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:69,variab,variable,69,tree/treeplayer/src/TTreeFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx,2,['variab'],['variable']
Modifiability,// Cast is either an sext or zext up to this point.; // We should not widen an indvar if arithmetics on the wider indvar are more; // expensive than those on the narrower indvar. We check only the cost of ADD; // because at least an ADD is required to increment the induction variable. We; // could compute more comprehensively the cost of all instructions on the; // induction variable when necessary.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:276,variab,variable,276,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,2,['variab'],['variable']
Modifiability,"// Cast the [b]f16 to i16, extend to i32, pad with ones to make a float; // nan, and cast to f32.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:27,extend,extend,27,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,1,['extend'],['extend']
Modifiability,// Cast the void pointer and get the address of the globalized variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:63,variab,variable,63,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['variab'],['variable']
Modifiability,"// Cast tv_tag to int to allow values not in ""enum ld_plugin_tag"", like, for; // example, LDPT_GET_SYMBOLS_V3 when building against an older plugin-api.h; // header.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/gold/gold-plugin.cpp:141,plugin,plugin-api,141,interpreter/llvm-project/llvm/tools/gold/gold-plugin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/gold/gold-plugin.cpp,1,['plugin'],['plugin-api']
Modifiability,"// Casts are necessary to get things like (*(int*)&var) = foo().; // We don't really care about the kind of cast here, except; // we don't want to look through l2r casts, because it's okay; // to get the *value* in a __block variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprAgg.cpp:225,variab,variable,225,interpreter/llvm-project/clang/lib/CodeGen/CGExprAgg.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprAgg.cpp,1,['variab'],['variable']
Modifiability,"// Catch circular reasoning in a pessimistic way for now.; // TODO: Check how the range evolves and if we stripped anything, see also; // AADereferenceable or AAAlign for similar situations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:88,evolve,evolves,88,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['evolve'],['evolves']
Modifiability,"// Categories are used to extend the class by declaring new methods.; // By the same token, they are also used to add new properties. No; // need to compare the added property to those in the class.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:26,extend,extend,26,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['extend'],['extend']
Modifiability,"// Cell above extends thru this row",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlTable.cxx:14,extend,extends,14,gui/guihtml/src/TGHtmlTable.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/src/TGHtmlTable.cxx,1,['extend'],['extends']
Modifiability,"// Certain capturing entities (lambdas, blocks etc.) are not allowed to capture; // certain types of variables (unnamed, variably modified types etc.); // so check for eligibility.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:101,variab,variables,101,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,4,['variab'],"['variables', 'variably']"
Modifiability,"// Chaining values within a given chunk (specifically the compress_in_place; // interface) are represented as words. This avoids unnecessary bytes<->words; // conversion overhead in the portable implementation. However, the hash_many; // interface handles both user input and parent node blocks, so it accepts; // bytes. For that reason, chaining values in the CV stack are represented as; // bytes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/BLAKE3/blake3.c:186,portab,portable,186,interpreter/llvm-project/llvm/lib/Support/BLAKE3/blake3.c,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/BLAKE3/blake3.c,1,['portab'],['portable']
Modifiability,"// Change characters illegal in a variable name into '_' to form a legal name.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TypeManip.cxx:34,variab,variable,34,bindings/pyroot/cppyy/CPyCppyy/src/TypeManip.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/TypeManip.cxx,1,['variab'],['variable']
Modifiability,// Change the floating point control register to use double extended; // precision when performing the addition.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:60,extend,extended,60,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['extend'],['extended']
Modifiability,"// Changed in 12.0: bfmmla, bfmlalb and bfmlalt are not polymorphic; // anymore and accept v8bf16 instead of v16i8.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:56,polymorphi,polymorphic,56,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,1,['polymorphi'],['polymorphic']
Modifiability,// Check CMP operands. One of them should be 0 or 1 and the other should be; // an SetCC or extended from it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:92,extend,extended,92,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['extend'],['extended']
Modifiability,"// Check COPY instructions that copy formal parameters into virtual; // registers. Such parameters can be sign- or zero-extended at the; // call site, and we should take advantage of this knowledge. The MRI; // keeps a list of pairs of live-in physical and virtual registers,; // which provides information about which virtual registers will hold; // the argument values. The function will still contain instructions; // defining those virtual registers, and in practice those are COPY; // instructions from a physical to a virtual register. In such cases,; // applying the argument extension to the virtual register can be seen; // as simply mirroring the extension that had already been applied to; // the physical register at the call site. If the defining instruction; // was not a COPY, it would not be clear how to mirror that extension; // on the callee's side. For that reason, only check COPY instructions; // for potential extensions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitTracker.cpp:120,extend,extended,120,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitTracker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitTracker.cpp,1,['extend'],['extended']
Modifiability,// Check GNU flexible array initializer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:13,flexible,flexible,13,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['flexible'],['flexible']
Modifiability,// Check an node is an extend or shift operand,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:23,extend,extend,23,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['extend'],['extend']
Modifiability,"// Check compatibility of axis that have labels with axis that can be extended",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1Merger.cxx:70,extend,extended,70,hist/hist/src/TH1Merger.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TH1Merger.cxx,1,['extend'],['extended']
Modifiability,// Check default data sharing attributes for referenced variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:56,variab,variables,56,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variables']
Modifiability,"// Check for ""return <variable>;"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransRetainReleaseDealloc.cpp:22,variab,variable,22,interpreter/llvm-project/clang/lib/ARCMigrate/TransRetainReleaseDealloc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransRetainReleaseDealloc.cpp,1,['variab'],['variable']
Modifiability,// Check for OpenMP threadprivate variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp:34,variab,variables,34,interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,1,['variab'],['variables']
Modifiability,// Check for a direct reference to a __block variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprAgg.cpp:45,variab,variable,45,interpreter/llvm-project/clang/lib/CodeGen/CGExprAgg.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprAgg.cpp,1,['variab'],['variable']
Modifiability,"// Check for a function that isn't materializable to prevent an infinite; // loop. When parsing a blockaddress stored in a global variable, there; // isn't a trivial way to check if a function will have a body without a; // linear search through FunctionsWithBodies, so just check it here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp:130,variab,variable,130,interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Reader/BitcodeReader.cpp,1,['variab'],['variable']
Modifiability,"// Check for a signed 16-bit value. We special case SRA because it makes it; // more simple when also looking for SRAs that aren't sign extending a; // smaller value. Without the check, we'd need to take extra care with; // checking order for some operations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:136,extend,extending,136,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['extend'],['extending']
Modifiability,"// Check for absolute and negative-absolute selections, including those; // where the comparison value is sign-extended (for LPGFR and LNGFR).; // This check supplements the one in DAGCombiner.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp:111,extend,extended,111,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,1,['extend'],['extended']
Modifiability,// Check for any configuration macros that have changed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp:17,config,configuration,17,interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp,1,['config'],['configuration']
Modifiability,"// Check for array bounds violations in cases where the check isn't triggered; // elsewhere for other Expr types (like BinaryOperators), e.g. when an; // ArraySubscriptExpr is on the RHS of a variable initialization.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp:192,variab,variable,192,interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaChecking.cpp,1,['variab'],['variable']
Modifiability,// Check for buffer overflows and misalignment.; // Only handles memory references that read/write something simple like an; // alloca instruction or a global variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/Lint.cpp:159,variab,variable,159,interpreter/llvm-project/llvm/lib/Analysis/Lint.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/Lint.cpp,1,['variab'],['variable']
Modifiability,// Check for configure-time C include directories.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp:13,config,configure-time,13,interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Darwin.cpp,10,['config'],['configure-time']
Modifiability,// Check for contradicting match rules. Contradicting match rules are; // either:; // - a top-level rule and one of its sub-rules. E.g. variable and; // variable(is_parameter).; // - a sub-rule and a sibling that's negated. E.g.; // variable(is_thread_local) and variable(unless(is_parameter)),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAttr.cpp:136,variab,variable,136,interpreter/llvm-project/clang/lib/Sema/SemaAttr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAttr.cpp,4,['variab'],['variable']
Modifiability,// Check for duplicate global variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/APINotes/APINotesYAMLCompiler.cpp:30,variab,variables,30,interpreter/llvm-project/clang/lib/APINotes/APINotesYAMLCompiler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/APINotes/APINotesYAMLCompiler.cpp,1,['variab'],['variables']
Modifiability,// Check for extern variable declared locally.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:20,variab,variable,20,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,2,['variab'],['variable']
Modifiability,// Check for i64 sext(i32 vector_extract) prior to tablegen to select SMOV; // over a normal extend.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp:93,extend,extend,93,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp,1,['extend'],['extend']
Modifiability,"// Check for jumps past the implicit initializer. C++0x; // clarifies that this applies to a ""variable with automatic; // storage duration"", not a ""local variable"".; // C++11 [stmt.dcl]p3; // A program that jumps from a point where a variable with automatic; // storage duration is not in scope to a point where it is in scope is; // ill-formed unless the variable has scalar type, class type with a; // trivial default constructor and a trivial destructor, a cv-qualified; // version of one of these types, or an array of one of the preceding; // types and is declared without an initializer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:94,variab,variable,94,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,4,['variab'],['variable']
Modifiability,// Check for local/global variables and parameters.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.cpp:26,variab,variables,26,interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.cpp,1,['variab'],['variables']
Modifiability,// Check for regex metacharacters. This list was derived from our regex; // implementation in regcomp.c and double checked against the POSIX extended; // regular expression specification.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Regex.cpp:141,extend,extended,141,interpreter/llvm-project/llvm/lib/Support/Regex.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/Regex.cpp,1,['extend'],['extended']
Modifiability,"// Check for self-references within variable initializers.; // Variables declared within a function/method body (except for references); // are handled by a dataflow analysis.; // This is undefined behavior in C++, but valid in C.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:36,variab,variable,36,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,2,"['Variab', 'variab']","['Variables', 'variable']"
Modifiability,// Check for static member variables and don't warn on them.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:27,variab,variables,27,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variables']
Modifiability,// Check for the \@ pseudo-variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp:27,variab,variable,27,interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp,1,['variab'],['variable']
Modifiability,"// Check for the case where we're going to rewrite to a new alloca of the; // exact same type as the original, and with the same access offsets. In that; // case, re-use the existing alloca, but still run through the rewriter to; // perform phi and select speculation.; // P.beginOffset() can be non-zero even with the same type in a case with; // out-of-bounds access (e.g. @PR35657 function in SROA/basictest.ll).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp:43,rewrite,rewrite,43,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,2,['rewrite'],"['rewrite', 'rewriter']"
Modifiability,// Check for the type of allocas present in the function. We only care; // about fixed size allocas so do not give false positives if only; // variable sized allocas are present.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRFrameLowering.cpp:143,variab,variable,143,interpreter/llvm-project/llvm/lib/Target/AVR/AVRFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AVR/AVRFrameLowering.cpp,1,['variab'],['variable']
Modifiability,// Check for two extended operands.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:17,extend,extended,17,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['extend'],['extended']
Modifiability,"// Check for unimplemented instructions. Immediate extenders; // are encoded as zero, so they need to be accounted for.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCCodeEmitter.cpp:51,extend,extenders,51,interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCCodeEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCCodeEmitter.cpp,1,['extend'],['extenders']
Modifiability,// Check for variable splats.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp:13,variab,variable,13,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,1,['variab'],['variable']
Modifiability,// Check for zero extended loads. Treat any-extend loads as zero extended; // loads.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp:18,extend,extended,18,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp,3,['extend'],"['extend', 'extended']"
Modifiability,"// Check if LPM contains any loop pass and if it does not, returns an adaptor; // in loop-nest mode.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h:70,adapt,adaptor,70,interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h,1,['adapt'],['adaptor']
Modifiability,// Check if ObjC container adds ivars after variable sized ivar in superclass.; // Perform the check only if OCD is the first container to declare ivars to; // avoid multiple warnings for the same ivar.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:44,variab,variable,44,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['variab'],['variable']
Modifiability,"// Check if OtherV is an IMPLICIT_DEF that extends beyond its basic block.; // This shouldn't normally happen, but ProcessImplicitDefs can leave such; // IMPLICIT_DEF instructions behind, and there is nothing wrong with it; // technically.; //; // When it happens, treat that IMPLICIT_DEF as a normal value, and don't try; // to erase the IMPLICIT_DEF instruction.; //; // Additionally we must keep an IMPLICIT_DEF if we're redefining an incoming; // value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:43,extend,extends,43,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['extend'],['extends']
Modifiability,"// Check if S is a reference to a variable. If yes, add it to the pattern.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CloneDetection.cpp:34,variab,variable,34,interpreter/llvm-project/clang/lib/Analysis/CloneDetection.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CloneDetection.cpp,1,['variab'],['variable']
Modifiability,// Check if Size needs to be truncated or extended.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:42,extend,extended,42,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['extend'],['extended']
Modifiability,"// Check if V only involves inner loop induction variable.; // Return true if V is InnerInduction, or a cast from; // InnerInduction, or a binary operator that involves; // InnerInduction and a constant.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopInterchange.cpp:49,variab,variable,49,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopInterchange.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopInterchange.cpp,1,['variab'],['variable']
Modifiability,"// Check if a given register has bits that are references to any other; // registers. This is to detect situations where the instruction that; // defines register R takes register Q as an operand, but R itself does; // not contain any bits from Q. Loads are examples of how this could; // happen:; // R = load Q; // In this case (assuming we do not have any knowledge about the loaded; // value), we must not treat R as a ""conveyance"" of the bits from Q.; // (The information in BT about R's bits would have them as constants,; // in case of zero-extending loads, or refs to R.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonGenInsert.cpp:547,extend,extending,547,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonGenInsert.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonGenInsert.cpp,1,['extend'],['extending']
Modifiability,// Check if all of the extends are ANY_EXTENDs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:23,extend,extends,23,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['extend'],['extends']
Modifiability,"// Check if any element is or uses a global variable in GVMap, and thus; // converted to another value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXGenericToNVVM.cpp:44,variab,variable,44,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXGenericToNVVM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXGenericToNVVM.cpp,1,['variab'],['variable']
Modifiability,// Check if any of the loaded plugins replaces the main AST action,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp:30,plugin,plugins,30,interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp,1,['plugin'],['plugins']
Modifiability,"// Check if any operand is or uses a global variable in GVMap, and thus; // converted to another value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXGenericToNVVM.cpp:44,variab,variable,44,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXGenericToNVVM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXGenericToNVVM.cpp,1,['variab'],['variable']
Modifiability,// Check if any plugin provides this attribute.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Attributes.cpp:16,plugin,plugin,16,interpreter/llvm-project/clang/lib/Basic/Attributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Basic/Attributes.cpp,1,['plugin'],['plugin']
Modifiability,"// Check if any previous operand of the PHI node has the same incoming basic; // block. This is a very odd case that happens when the incoming basic block; // has a switch statement. In this case use the same value as the previous; // operand(s), otherwise we will fail verification due to different values.; // The values are actually the same, but the variable names are different; // and the verifier doesn't like that.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstantHoisting.cpp:354,variab,variable,354,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstantHoisting.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstantHoisting.cpp,1,['variab'],['variable']
Modifiability,"// Check if chaine is a defined variable.; // Note that DefinedVariable can be overloaded",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx:32,variab,variable,32,hist/hist/src/TFormula_v5.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TFormula_v5.cxx,1,['variab'],['variable']
Modifiability,// Check if extending the current DesiredPeelCount lets us evaluate Pred; // or !Pred in the loop body statically.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp:12,extend,extending,12,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopPeel.cpp,1,['extend'],['extending']
Modifiability,"// Check if found variable is of type RooRealVar",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:18,variab,variable,18,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,3,['variab'],['variable']
Modifiability,"// Check if global/static variable is defined in address space; // 1~6 (__flash, __flash1, __flash2, __flash3, __flash4, __flash5); // but not constant.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/AVR.cpp:26,variab,variable,26,interpreter/llvm-project/clang/lib/CodeGen/Targets/AVR.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/AVR.cpp,1,['variab'],['variable']
Modifiability,// Check if hardware has been configured to expect color or depth exports.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILateBranchLowering.cpp:30,config,configured,30,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILateBranchLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SILateBranchLowering.cpp,1,['config'],['configured']
Modifiability,"// Check if in the creation of the datasets, the entries outside the; // variable range were successfully discarded.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testActionHelpers.cxx:73,variab,variable,73,roofit/roofitcore/test/testActionHelpers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testActionHelpers.cxx,1,['variab'],['variable']
Modifiability,// Check if initial value of threadprivate variable reference variable with; // local storage (it is not supported by runtime).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:43,variab,variable,43,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,2,['variab'],['variable']
Modifiability,// Check if input scalars were extended to match the size of other node.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:31,extend,extended,31,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['extend'],['extended']
Modifiability,// Check if it is an induction variable and always power of two.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp:31,variab,variable,31,interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,1,['variab'],['variable']
Modifiability,// Check if need to capture the variable that was already captured by; // value in the outer region.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:32,variab,variable,32,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['variab'],['variable']
Modifiability,"// Check if node is already in workspace (can only happen for variables or identical instances, unless RecycleConflictNodes is specified)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:62,variab,variables,62,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,1,['variab'],['variables']
Modifiability,"// Check if number of variables and names is consistent",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:22,variab,variables,22,roofit/roofitcore/src/RooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx,1,['variab'],['variables']
Modifiability,"// Check if physics PDF and resolution model can both directly generate the convolution variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx:88,variab,variable,88,roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsAnaConvPdf.cxx,2,['variab'],['variable']
Modifiability,"// Check if range is parameterized",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:21,parameteriz,parameterized,21,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['parameteriz'],['parameterized']
Modifiability,"// Check if range parameterization depends on other integrated observables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:18,parameteriz,parameterization,18,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['parameteriz'],['parameterization']
Modifiability,// Check if the A2_tfrsi instruction is cheap or not. If the operand has; // to be constant-extendend it is not cheap since it occupies two slots; // in a packet.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp:92,extend,extendend,92,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp,1,['extend'],['extendend']
Modifiability,"// Check if the capture-ready lambda can truly capture the variable, by; // checking whether all enclosing lambdas of the capture-ready lambda allow; // the capture - i.e. make sure it is capture-capable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp:59,variab,variable,59,interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,1,['variab'],['variable']
Modifiability,"// Check if the correct load instruction has been emitted - SelectionDAG might; // have emitted a zero-extending load, but we need a sign-extending load.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp:103,extend,extending,103,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FastISel.cpp,2,['extend'],['extending']
Modifiability,// Check if the current configuration is non-SPMD and generic state machine.; // If we already have SPMD mode or a custom state machine we do not need to; // go any further. If it is anything but a constant something is weird and; // we give up.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:24,config,configuration,24,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['config'],['configuration']
Modifiability,// Check if the dead block has a predecessor whose branch has; // a configuration value that *could* be modified to; // silence the warning.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp:68,config,configuration,68,interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,1,['config'],['configuration']
Modifiability,"// Check if the dictionaries are TClass instances and if there is inheritance; // because in this case, we can read the values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:66,inherit,inheritance,66,tree/treeplayer/src/TTreeReaderValue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx,1,['inherit'],['inheritance']
Modifiability,// Check if the extendable operand is signed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCInstrInfo.h:16,extend,extendable,16,interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCInstrInfo.h,1,['extend'],['extendable']
Modifiability,// Check if the first byte of the guard variable is zero.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp:40,variab,variable,40,interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,1,['variab'],['variable']
Modifiability,"// Check if the first operand of the SET_CC is already extended. If it is,; // split the SET_CC and re-use the extended version of the operand.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:55,extend,extended,55,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,2,['extend'],['extended']
Modifiability,// Check if the firstprivate variable is just a constant value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:29,variab,variable,29,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['variab'],['variable']
Modifiability,"// Check if the function has store-immediate instructions that access; // the stack. Since the offset field is not extendable, if the stack; // size exceeds the offset limit (6 bits, shifted), the stores will; // require a new base register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp:115,extend,extendable,115,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp,1,['extend'],['extendable']
Modifiability,// Check if the input is an extended load of the required or/shift expression.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp:28,extend,extended,28,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/SLPVectorizer.cpp,1,['extend'],['extended']
Modifiability,"// Check if the instruction has a register form that uses register in place; // of the extended operand, if so return that as the non-extended form.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp:87,extend,extended,87,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonInstrInfo.cpp,4,['extend'],['extended']
Modifiability,// Check if the last instruction is an extend,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64PreLegalizerCombiner.cpp:39,extend,extend,39,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64PreLegalizerCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64PreLegalizerCombiner.cpp,1,['extend'],['extend']
Modifiability,"// Check if the location range [StartMI, EndMI] intersects with any scope; // range for the variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DbgEntityHistoryCalculator.cpp:92,variab,variable,92,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DbgEntityHistoryCalculator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DbgEntityHistoryCalculator.cpp,1,['variab'],['variable']
Modifiability,"// Check if the offset is defined by an extend, unless we looked through a; // G_ZEXT earlier.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp:40,extend,extend,40,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp,1,['extend'],['extend']
Modifiability,// Check if the operands of the sub are (zero|sign)-extended.; // TODO: Should we use ValueTracking instead?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:52,extend,extended,52,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['extend'],['extended']
Modifiability,// Check if the operands of the sub are zero-extended from vectors of i8.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:45,extend,extended,45,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['extend'],['extended']
Modifiability,// Check if the recurrence variable `VarX` is in the right form to create; // the idiom. Returns the value coerced to a PHINode if so.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopIdiomRecognize.cpp:27,variab,variable,27,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopIdiomRecognize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopIdiomRecognize.cpp,1,['variab'],['variable']
Modifiability,"// Check if the result type doesn't match the inserted element type.; // The inserted element and extracted element may have mismatched bitwidth.; // As a result, EXTRACT_VECTOR_ELT may extend or truncate the extracted vector.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:186,extend,extend,186,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['extend'],['extend']
Modifiability,"// Check if the result's type T inherits from TNamed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDFHelpers.hxx:32,inherit,inherits,32,tree/dataframe/inc/ROOT/RDFHelpers.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/dataframe/inc/ROOT/RDFHelpers.hxx,1,['inherit'],['inherits']
Modifiability,// Check if the scope of this variable location is alive.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp:30,variab,variable,30,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ADCE.cpp,2,['variab'],['variable']
Modifiability,"// Check if the segment consists of a copied live-through value (i.e. the copy; // in the block only extended the liveness, of an undef value which we may need; // to handle).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:101,extend,extended,101,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['extend'],['extended']
Modifiability,"// Check if the server is the eXtended proofd",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx:30,eXtend,eXtended,30,proof/proof/src/TProofMgr.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofMgr.cxx,1,['eXtend'],['eXtended']
Modifiability,"// Check if the source of the type is narrow enough.; // I.e., check that trunc just drops extended bits of the same kind of; // the extension.; // #1 get the type of the operand and check the kind of the extended bits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:91,extend,extended,91,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,2,['extend'],['extended']
Modifiability,// Check if the store destination is a local variable with debug info.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp:45,variab,variable,45,interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,1,['variab'],['variable']
Modifiability,"// Check if the user defined a list of environment variables to send over:; // include them into the dedicated list",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:51,variab,variables,51,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['variab'],['variables']
Modifiability,// Check if the value is zero-extended from i1 to i8,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:30,extend,extended,30,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['extend'],['extended']
Modifiability,// Check if the variable corresponding to the symbol is passed by value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp:16,variab,variable,16,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/BugReporter.cpp,1,['variab'],['variable']
Modifiability,// Check if the variable does not exist in the map.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp:16,variab,variable,16,interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,1,['variab'],['variable']
Modifiability,// Check if the variable has explicit DSA set and stop analysis if it so.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:16,variab,variable,16,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,// Check if the variable has explicit DSA set and stop analysis if it; // so.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:16,variab,variable,16,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,// Check if the variable has the right type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:16,variab,variable,16,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['variab'],['variable']
Modifiability,"// Check if the variable is a static alloca or a byval or inalloca; // argument passed in memory. If it is not, then we will ignore this; // intrinsic and handle this during isel like dbg.value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp:16,variab,variable,16,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,1,['variab'],['variable']
Modifiability,// Check if the variable is also a firstprivate: in this case IInit is; // not generated. Initialization of this variable will happen in codegen; // for 'firstprivate' clause.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:16,variab,variable,16,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,2,['variab'],['variable']
Modifiability,// Check if the variable is marked as declare target with link clause in; // device codegen.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp:16,variab,variable,16,interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,1,['variab'],['variable']
Modifiability,// Check if the variable is privatized in the combined construct and; // those private copies must be shared in the inner parallel; // directive.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:16,variab,variable,16,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['variab'],['variable']
Modifiability,"// Check if the variable is the target-based BasePointersArray,; // PointersArray, SizesArray, or MappersArray.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:16,variab,variable,16,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['variab'],['variable']
Modifiability,// Check if the vector ABI becomes visible by an externally visible; // variable or function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/SystemZ.cpp:72,variab,variable,72,interpreter/llvm-project/clang/lib/CodeGen/Targets/SystemZ.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/Targets/SystemZ.cpp,1,['variab'],['variable']
Modifiability,"// Check if there are any 'copyprivate' clauses associated with this; // 'single' construct.; // Build a list of copyprivate variables along with helper expressions; // (<source>, <destination>, <destination>=<source> expressions)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:125,variab,variables,125,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['variab'],['variables']
Modifiability,"// Check if this Node's namespace is a default namespace that it inherited, as; // opposed to defining itself.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/WindowsManifest/WindowsManifestMerger.cpp:65,inherit,inherited,65,interpreter/llvm-project/llvm/lib/WindowsManifest/WindowsManifestMerger.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/WindowsManifest/WindowsManifestMerger.cpp,1,['inherit'],['inherited']
Modifiability,"// Check if this configuration was created becfore",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedPdf.cxx:17,config,configuration,17,roofit/roofitcore/src/RooAbsCachedPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCachedPdf.cxx,2,['config'],['configuration']
Modifiability,"// Check if this configuration was created before",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx:17,config,configuration,17,roofit/histfactory/src/ParamHistFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/ParamHistFunc.cxx,6,['config'],['configuration']
Modifiability,// Check if this has already been covered by another rewrite...,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp:53,rewrite,rewrite,53,interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp,2,['rewrite'],['rewrite']
Modifiability,// Check if this insertion will extend the node to the left.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h:32,extend,extend,32,interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,1,['extend'],['extend']
Modifiability,// Check if this is a TLS variable or global register.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:26,variab,variable,26,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,"// Check if this is a TLS variable. If TLS is not being supported, produce; // the corresponding diagnostic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:26,variab,variable,26,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,// Check if this is a global variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp:29,variab,variable,29,interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,1,['variab'],['variable']
Modifiability,// Check if this is a thread-local variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:35,variab,variable,35,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['variab'],['variable']
Modifiability,// Check if this is an extend. We'll get an extend type if it is.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp:23,extend,extend,23,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp,2,['extend'],['extend']
Modifiability,"// Check if variable is at least a range or constant else throw error",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONIOUtils.cxx:12,variab,variable,12,roofit/hs3/src/JSONIOUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/hs3/src/JSONIOUtils.cxx,1,['variab'],['variable']
Modifiability,// Check if variable is local.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:12,variab,variable,12,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,1,['variab'],['variable']
Modifiability,// Check if variable sized ivar is followed by another ivar.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:12,variab,variable,12,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['variab'],['variable']
Modifiability,// Check if variable sized ivar is in interface and visible to subclasses.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:12,variab,variable,12,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['variab'],['variable']
Modifiability,"// Check if variables are consistently real-valued",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:12,variab,variables,12,roofit/roofitcore/src/RooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx,1,['variab'],['variables']
Modifiability,// Check if we can fold a shift and an extend.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp:39,extend,extend,39,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp,1,['extend'],['extend']
Modifiability,// Check if we can fold an extend and a shift.; // FIXME: This is duplicated with the selector. (See:; // selectArithExtendedRegister),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64PostLegalizerLowering.cpp:27,extend,extend,27,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64PostLegalizerLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64PostLegalizerLowering.cpp,1,['extend'],['extend']
Modifiability,// Check if we can statically extend the operand.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:30,extend,extend,30,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['extend'],['extend']
Modifiability,// Check if we can widen the induction variables to avoid overflow checks.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp:39,variab,variables,39,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp,1,['variab'],['variables']
Modifiability,// Check if we have a variable template.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp:22,variab,variable,22,interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ItaniumMangle.cpp,2,['variab'],['variable']
Modifiability,// Check if we need to emit debug info for variable initializer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp:43,variab,variable,43,interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp,1,['variab'],['variable']
Modifiability,// Check if we were relying on zero-extending behavior of the CMOV.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp:36,extend,extending,36,interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86CmovConversion.cpp,1,['extend'],['extending']
Modifiability,// Check if zero extend needed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/AggressiveInstCombine.cpp:17,extend,extend,17,interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/AggressiveInstCombine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/AggressiveInstCombine.cpp,1,['extend'],['extend']
Modifiability,// Check implicitly captured variables in the task-based directives to; // check if they must be firstprivatized.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:29,variab,variables,29,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,2,['variab'],['variables']
Modifiability,// Check implicitly captured variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:29,variab,variables,29,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,2,['variab'],['variables']
Modifiability,// Check inherited analysis also. If P is not preserving analysis; // provided by parent manager then remove it here.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp:9,inherit,inherited,9,interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp,1,['inherit'],['inherited']
Modifiability,// Check init-expr for canonical loop form and save loop counter; // variable - #Var and its initialization value - #LB.; // OpenMP [2.6] Canonical loop form. init-expr may be one of the following:; // var = lb; // integer-type var = lb; // random-access-iterator-type var = lb; // pointer-type var = lb; //,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:69,variab,variable,69,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,// Check initializer for device/constant variable,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp:41,variab,variable,41,interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp,1,['variab'],['variable']
Modifiability,// Check initializer for shared variable,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp:32,variab,variable,32,interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp,1,['variab'],['variable']
Modifiability,// Check loop variable's type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:14,variab,variable,14,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,// Check only if the global variable is not an extern,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Verifier.cpp:28,variab,variable,28,interpreter/llvm-project/llvm/lib/IR/Verifier.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Verifier.cpp,1,['variab'],['variable']
Modifiability,// Check predetermined rules for the loop control variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:50,variab,variables,50,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variables']
Modifiability,"// Check that CmdlineName does not denote a pseudo variable is only; // composed of the parsed numeric variable. This catches cases like; // ""FOO+2"" in a ""FOO+2=10"" definition.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp:51,variab,variable,51,interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,2,['variab'],['variable']
Modifiability,"// Check that `Cast` actually extends the induction variable (we rely on this; // later). This takes care of cases where `Cast` is extending a truncation of; // the narrow induction variable, and thus can end up being narrower than the; // ""narrow"" induction variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:30,extend,extends,30,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,5,"['extend', 'variab']","['extending', 'extends', 'variable']"
Modifiability,"// Check that all internal histogram pointers; // are properly configured (ie that they're not nullptr)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Channel.cxx:63,config,configured,63,roofit/histfactory/src/Channel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Channel.cxx,1,['config'],['configured']
Modifiability,"// Check that all listed variables are actual generator model parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx:25,variab,variables,25,roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,2,['variab'],['variables']
Modifiability,// Check that all uses are either:; // - narrow def (in case of we are widening the IV increment);; // - single-input LCSSA Phis;; // - comparison of the chosen type;; // - extend of the chosen type (raison d'etre).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp:173,extend,extend,173,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp,1,['extend'],['extend']
Modifiability,"// Check that all uses of the inner loop's induction variable match the; // expected pattern, recording the uses of the outer IV.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp:53,variab,variable,53,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp,1,['variab'],['variable']
Modifiability,"// Check that all variables are AbsReals and prepare a name of the form <name>_<var1>_...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx:18,variab,variables,18,roofit/roofitcore/src/RooAbsRealLValue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx,1,['variab'],['variables']
Modifiability,// Check that any variable location records that fell off the end of a block; // when it's terminator was removed were eventually replaced. This assertion; // firing indicates that DPValues went missing during the lifetime of the; // LLVMContext.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LLVMContextImpl.cpp:18,variab,variable,18,interpreter/llvm-project/llvm/lib/IR/LLVMContextImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LLVMContextImpl.cpp,1,['variab'],['variable']
Modifiability,// Check that both variables have compatible properties.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp:19,variab,variables,19,interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp,1,['variab'],['variables']
Modifiability,"// Check that class inherits from RooAbsPdf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:20,inherit,inherits,20,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,1,['inherit'],['inherits']
Modifiability,"// Check that each user of each old PHI node is something that we can; // rewrite, so that all of the old PHI nodes can be cleaned up afterwards.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86LowerAMXType.cpp:74,rewrite,rewrite,74,interpreter/llvm-project/llvm/lib/Target/X86/X86LowerAMXType.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86LowerAMXType.cpp,2,['rewrite'],['rewrite']
Modifiability,"// Check that function dimension and number of variables match",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx:47,variab,variables,47,roofit/roofit/src/RooFunctorBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooFunctorBinding.cxx,2,['variab'],['variables']
Modifiability,"// Check that function has same dimension as number of variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:55,variab,variables,55,tree/treeplayer/src/TTreePlayer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx,1,['variab'],['variables']
Modifiability,"// Check that given variable is indeed related to given p.d.f",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:20,variab,variable,20,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['variab'],['variable']
Modifiability,// Check that indices after the variable are constants and in-range for the; // type they index. Collect the indices. This is typically for arrays of; // structs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:32,variab,variable,32,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,1,['variab'],['variable']
Modifiability,// Check that it is the same variable on both sides.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:29,variab,variable,29,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,1,['variab'],['variable']
Modifiability,"// Check that listed variable is actual generator model parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx:21,variab,variable,21,roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRandomizeParamMCSModule.cxx,2,['variab'],['variable']
Modifiability,"// Check that new latch is a deoptimizing exit and then repeat rotation if possible.; // Deoptimizing latch exit is not a generally typical case, so we just loop over.; // TODO: if it becomes a performance bottleneck extend rotation algorithm; // to handle multiple rotations in one go.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopRotationUtils.cpp:217,extend,extend,217,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopRotationUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopRotationUtils.cpp,1,['extend'],['extend']
Modifiability,// Check that no statement / expression class is polymorphic. LLVM style RTTI; // should be used instead. If absolutely needed an exception can still be added; // here by defining the appropriate macro (but please don't do this).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Stmt.cpp:49,polymorphi,polymorphic,49,interpreter/llvm-project/clang/lib/AST/Stmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Stmt.cpp,1,['polymorphi'],['polymorphic']
Modifiability,// Check that no type class is polymorphic. LLVM style RTTI should be used; // instead. If absolutely needed an exception can still be added here by; // defining the appropriate macro (but please don't do this).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp:31,polymorphi,polymorphic,31,interpreter/llvm-project/clang/lib/AST/Type.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Type.cpp,1,['polymorphi'],['polymorphic']
Modifiability,"// Check that primary variable of basis functions is our convolution variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx:22,variab,variable,22,roofit/roofitcore/src/RooAddModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAddModel.cxx,4,['variab'],['variable']
Modifiability,"// Check that specified input are indeed variables of this function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:41,variab,variables,41,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['variab'],['variables']
Modifiability,"// Check that supplied configuration of lists is identical",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAICRegistry.cxx:23,config,configuration,23,roofit/roofitcore/src/RooAICRegistry.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAICRegistry.cxx,1,['config'],['configuration']
Modifiability,"// Check that the column ranges for model-extended subfields are properly constructed by iterating over their view.; // For improper column ranges, the global field range would go until the value of kInvalidClusterIndex and result in; // an out-of-bounds error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/ntuple_modelext.cxx:42,extend,extended,42,tree/ntuple/v7/test/ntuple_modelext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/ntuple_modelext.cxx,1,['extend'],['extended']
Modifiability,"// Check that the current bundle is adding a Header + start+end of; // loop-internal blocks. If the block is indeed a header, don't make; // the NewBlocks as PrefSpill to allow the variable to be live in; // Header<->Latch.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocGreedy.cpp:181,variab,variable,181,interpreter/llvm-project/llvm/lib/CodeGen/RegAllocGreedy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegAllocGreedy.cpp,1,['variab'],['variable']
Modifiability,"// Check that the declarations appear to be equivalent.; //; // FIXME: Checking the type isn't really enough to resolve the ambiguity.; // For constants and functions, we should check the initializer or body is; // the same. For non-constant variables, we shouldn't allow it at all.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:242,variab,variables,242,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,1,['variab'],['variables']
Modifiability,"// Check that the dependents are all fundamental. Filter out any that we; // do not depend on, and make substitutions by name in our leaf list.; // Check for overlaps with the projection variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:187,variab,variables,187,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['variab'],['variables']
Modifiability,"// Check that the desired value is in the range of the variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Asimov.cxx:55,variab,variable,55,roofit/histfactory/src/Asimov.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/Asimov.cxx,1,['variab'],['variable']
Modifiability,// Check that the muls operate directly upon sign extended loads.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMParallelDSP.cpp:50,extend,extended,50,interpreter/llvm-project/llvm/lib/Target/ARM/ARMParallelDSP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMParallelDSP.cpp,1,['extend'],['extended']
Modifiability,"// Check that the plot variables are all actually RooAbsReal's and print a warning if we do not; // explicitly depend on one of them. Clone any variables that we do not contain directly and; // redirect them to use our event data.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:23,variab,variables,23,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,2,['variab'],['variables']
Modifiability,"// Check that the plot variables are all actually RooRealVars and print a warning if we do not; // explicitly depend on one of them. Fill a set (not list!) of cloned plot variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:23,variab,variables,23,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['variab'],['variables']
Modifiability,"// Check that the returned opcode is compatible with the pattern,; // i.e., same type and zero extended (U and not S)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:95,extend,extended,95,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,1,['extend'],['extended']
Modifiability,// Check that the two extend nodes are the same type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:22,extend,extend,22,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['extend'],['extend']
Modifiability,// Check that the two statements are both increments or both decrements; // on the same variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:88,variab,variable,88,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,1,['variab'],['variable']
Modifiability,// Check that the type of the VarDecl has an accessible copy constructor and; // resolve its destructor's exception specification.; // This also performs initialization of block variables when they are moved; // to the heap. It uses the same rules as applicable for implicit moves; // according to the C++ standard in effect ([class.copy.elision]p3).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/Sema.cpp:178,variab,variables,178,interpreter/llvm-project/clang/lib/Sema/Sema.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/Sema.cpp,1,['variab'],['variables']
Modifiability,// Check that the value doesn't use more bits than we have. It must; // either be a sign- or zero-extended equivalent of the original.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp:98,extend,extended,98,interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenDAGPatterns.cpp,1,['extend'],['extended']
Modifiability,"// Check that the variable is actually usable in constant expressions. For a; // const integral variable or a reference, we might have a non-constant; // initializer that we can nonetheless evaluate the initializer for. Such; // variables are not usable in constant expressions. In C++98, the; // initializer also syntactically needs to be an ICE.; //; // FIXME: We don't diagnose cases that aren't potentially usable in constant; // expressions here; doing so would regress diagnostics for things like; // reading from a volatile constexpr variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:18,variab,variable,18,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,4,['variab'],"['variable', 'variables']"
Modifiability,// Check that the w->w move is not a zero-extending w->x mov.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp:42,extend,extending,42,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64InstrInfo.cpp,1,['extend'],['extending']
Modifiability,// Check that this inheriting constructor declaration actually names a; // direct base class of the current class.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:19,inherit,inheriting,19,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['inherit'],['inheriting']
Modifiability,"// Check that variable with given name exists in workspace",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:14,variab,variable,14,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['variab'],['variable']
Modifiability,// Check that we can handle/rewrite all references of the pool.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransAutoreleasePool.cpp:28,rewrite,rewrite,28,interpreter/llvm-project/clang/lib/ARCMigrate/TransAutoreleasePool.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransAutoreleasePool.cpp,1,['rewrite'],['rewrite']
Modifiability,// Check the deduced type is valid for a variable declaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:41,variab,variable,41,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,"// Check the environment variables that vsvars32.bat sets.; // We don't do this first so we can run from other VSStudio shells properly",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp:25,variab,variables,25,interpreter/cling/lib/Utils/PlatformWin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp,1,['variab'],['variables']
Modifiability,"// Check the extend type, when the input type is i32, and the output vector; // type is v2i64.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:13,extend,extend,13,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['extend'],['extend']
Modifiability,// Check the inherited constructor is valid and find the list of base classes; // from which it was inherited.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:13,inherit,inherited,13,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,2,['inherit'],['inherited']
Modifiability,// Check the kill flag before we rewrite as that may change it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FlagsCopyLowering.cpp:33,rewrite,rewrite,33,interpreter/llvm-project/llvm/lib/Target/X86/X86FlagsCopyLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FlagsCopyLowering.cpp,1,['rewrite'],['rewrite']
Modifiability,// Check the new variable specialization against the parsed input.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:17,variab,variable,17,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['variab'],['variable']
Modifiability,"// Check the plugin the first time",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx:13,plugin,plugin,13,proof/proof/src/TDSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TDSet.cxx,1,['plugin'],['plugin']
Modifiability,"// Check the redefinition in C++20 Modules.; //; // [basic.def.odr]p14:; // For any definable item D with definitions in multiple translation units,; // - if D is a non-inline non-templated function or variable, or; // - if the definitions in different translation units do not satisfy the; // following requirements,; // the program is ill-formed; a diagnostic is required only if the definable; // item is attached to a named module and a prior definition is reachable at; // the point where a later definition occurs.; // - Each such definition shall not be attached to a named module; // ([module.unit]).; // - Each such definition shall consist of the same sequence of tokens, ...; // ...; //; // Return true if the redefinition is not allowed. Return false otherwise.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:202,variab,variable,202,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,// Check the relevant induction variable for conformance to; // the pattern.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:32,variab,variable,32,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,1,['variab'],['variable']
Modifiability,"// Check the source type is the same as the type of the result.; // If not, this concat may extend the vector, so we can not; // optimize it away.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:92,extend,extend,92,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['extend'],['extend']
Modifiability,"// Check the template parameter list of this declaration, possibly; // merging in the template parameter list from the previous variable; // template declaration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:128,variab,variable,128,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,"// Check the types of the template argument values for a class; // inheritance, multiclass invocation, or anonymous class invocation.; // If necessary, replace an argument with a cast to the required type.; // The argument count has already been checked.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/TGParser.cpp:67,inherit,inheritance,67,interpreter/llvm-project/llvm/lib/TableGen/TGParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/TGParser.cpp,1,['inherit'],['inheritance']
Modifiability,// Check the users of the variable operand of the compare looking for an add; // with the adjusted constant.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:26,variab,variable,26,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,1,['variab'],['variable']
Modifiability,"// Check the wrong-sided reference capture of lambda for CUDA/HIP.; // A lambda function may capture a stack variable by reference when it is; // defined and uses the capture by reference when the lambda is called. When; // the capture and use happen on different sides, the capture is invalid and; // should be diagnosed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp:109,variab,variable,109,interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp,1,['variab'],['variable']
Modifiability,// Check the zero extend is extending to 32-bit or more. The code generated by; // srl(ctlz) for 16-bit or less variants of the pattern would require extra; // instructions to clear the upper bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:18,extend,extend,18,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,2,['extend'],"['extend', 'extending']"
Modifiability,// Check the zero-extended iteration count > 0,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoopIdiomTransform.cpp:18,extend,extended,18,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoopIdiomTransform.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoopIdiomTransform.cpp,1,['extend'],['extended']
Modifiability,"// Check this INSERT_SUBREG comes from below zero-extend pattern.; //; // From %reg = INSERT_SUBREG %reg(tied-def 0), %subreg, subidx; // To %reg:subidx = SUBREG_TO_REG 0, %subreg, subidx; //; // We're assuming the first operand to INSERT_SUBREG is irrelevant because a; // COPY would destroy the upper part of the register anyway",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MIPeepholeOpt.cpp:50,extend,extend,50,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MIPeepholeOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MIPeepholeOpt.cpp,1,['extend'],['extend']
Modifiability,"// Check this ORR comes from below zero-extend pattern.; //; // def : Pat<(i64 (zext GPR32:$src)),; // (SUBREG_TO_REG (i32 0), (ORRWrs WZR, GPR32:$src, 0), sub_32)>;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MIPeepholeOpt.cpp:40,extend,extend,40,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MIPeepholeOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64MIPeepholeOpt.cpp,1,['extend'],['extend']
Modifiability,// Check this property against any protocols we inherit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp:48,inherit,inherit,48,interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp,1,['inherit'],['inherit']
Modifiability,"// Check to see if this is a BUILD_VECTOR of a bunch of values; // which come from any_extend or zero_extend nodes. If so, we can create; // a new BUILD_VECTOR using bit-casts which may enable other BUILD_VECTOR; // optimizations. We do not handle sign-extend because we can't fill the sign; // using shuffles.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:253,extend,extend,253,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['extend'],['extend']
Modifiability,// Check to see if we already have a fake constructor for this inherited; // constructor call.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:63,inherit,inherited,63,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['inherit'],['inherited']
Modifiability,"// Check to see if we already have a global variable for this; // declaration. This can happen when double-emitting function; // bodies, e.g. with complete and base constructors.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp:44,variab,variable,44,interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,1,['variab'],['variable']
Modifiability,// Check truncating stores and extending loads.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp:31,extend,extending,31,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp,1,['extend'],['extending']
Modifiability,// Check variable declaration is delayed:,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:9,variab,variable,9,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['variab'],['variable']
Modifiability,// Check variables in the clauses if default(none) or; // default(firstprivate) was specified.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:9,variab,variables,9,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variables']
Modifiability,// Check various environment variables to try and find a toolchain.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCPaths.h:29,variab,variables,29,interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCPaths.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/WindowsDriver/MSVCPaths.h,1,['variab'],['variables']
Modifiability,// Check virtual vs. non-virtual inheritance mismatch.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTStructuralEquivalence.cpp:33,inherit,inheritance,33,interpreter/llvm-project/clang/lib/AST/ASTStructuralEquivalence.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTStructuralEquivalence.cpp,1,['inherit'],['inheritance']
Modifiability,"// Check we've noticed that we're no longer parsing the initializer for every; // variable. If we miss cases, then at best we have a performance issue and; // at worst a rejects-valid bug.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/Sema.cpp:82,variab,variable,82,interpreter/llvm-project/clang/lib/Sema/Sema.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/Sema.cpp,1,['variab'],['variable']
Modifiability,"// Check whether C compares (shl X, 32) with 0 and whether X is; // also sign-extended. In that case it is better to test the result; // of the sign extension using LTGFR.; //; // This case is important because InstCombine transforms a comparison; // with (sext (trunc X)) into a comparison with (shl X, 32).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp:78,extend,extended,78,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,1,['extend'],['extended']
Modifiability,"// Check whether a variable has an allowed initializer for a CUDA device side; // variable with global storage. \p VD may be a host variable to be checked for; // potential promotion to device side variable.; //; // CUDA/HIP allows only empty constructors as initializers for global; // variables (see E.2.3.1, CUDA 7.5). The same restriction also applies to all; // __shared__ variables whether they are local or not (they all are implicitly; // static in CUDA). One exception is that CUDA allows constant initializers; // for __constant__ and __device__ variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp:19,variab,variable,19,interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp,7,['variab'],"['variable', 'variables']"
Modifiability,"// Check whether buildLocationList managed to merge all locations to one; // that is valid throughout the variable's scope. If so, produce single; // value location.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp:106,variab,variable,106,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp,1,['variab'],['variable']
Modifiability,// Check whether expression is always true/false by evaluating the following; // * variable x is less than the smallest literal.; // * variable x is equal to the smallest literal.; // * Variable x is between smallest and largest literal.; // * Variable x is equal to the largest literal.; // * Variable x is greater than largest literal.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:83,variab,variable,83,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,5,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,"// Check whether pointer arrives back at Global Variable via at least one GEP.; // Even if it doesn't, we can check by alignment.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/AggressiveInstCombine.cpp:48,Variab,Variable,48,interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/AggressiveInstCombine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/AggressiveInstCombine/AggressiveInstCombine.cpp,1,['Variab'],['Variable']
Modifiability,// Check whether the captured variable is or contains an object of; // non-trivial C union type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/Sema.cpp:30,variab,variable,30,interpreter/llvm-project/clang/lib/Sema/Sema.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/Sema.cpp,1,['variab'],['variable']
Modifiability,// Check whether the current function is a device or host device lambda.; // Check whether the reference variable is a capture by getDeclContext(); // since refersToEnclosingVariableOrCapture() is not ready at this point.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:105,variab,variable,105,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['variab'],['variable']
Modifiability,"// Check whether the initializer has a shorter lifetime than the initialized; // entity, and if not, either lifetime-extend or warn as appropriate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:117,extend,extend,117,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['extend'],['extend']
Modifiability,// Check whether the reference variable is referencing a host variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:31,variab,variable,31,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,2,['variab'],['variable']
Modifiability,// Check whether there's a single user that asks for an extended type,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMTargetTransformInfo.cpp:56,extend,extended,56,interpreter/llvm-project/llvm/lib/Target/ARM/ARMTargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMTargetTransformInfo.cpp,1,['extend'],['extended']
Modifiability,"// Check whether this is a byref variable that's potentially; // captured and moved by its own initializer. If so, we'll need to; // emit the initializer first, then copy into the variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp:33,variab,variable,33,interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,2,['variab'],['variable']
Modifiability,// Check whether we can declare a variable template specialization in; // the current scope.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:34,variab,variable,34,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['variab'],['variable']
Modifiability,// Check whether we have an extend and mul pattern,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:28,extend,extend,28,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['extend'],['extend']
Modifiability,"// Check whether we should continue with non-trivial conditions.; // EnableNonTrivialUnswitch: Global variable that forces non-trivial; // unswitching for testing and debugging.; // NonTrivial: Parameter that enables non-trivial unswitching for this; // invocation of the transform. But this should be allowed only; // for targets without branch divergence.; //; // FIXME: If divergence analysis becomes available to a loop; // transform, we should allow unswitching for non-trivial uniform; // branches even on targets that have divergence.; // https://bugs.llvm.org/show_bug.cgi?id=48819",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp:102,variab,variable,102,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SimpleLoopUnswitch.cpp,1,['variab'],['variable']
Modifiability,"// CheckExtVectorCast - check type constraints for extended vectors.; // Since vectors are an extension, there are no C standard reference for this.; // We allow casting between vectors and integer datatypes of the same size,; // or vectors and the element type of that vector.; // returns the cast expr",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h:51,extend,extended,51,interpreter/llvm-project/clang/include/clang/Sema/Sema.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Sema/Sema.h,1,['extend'],['extended']
Modifiability,// Checking bases. The checker will regard inherited data members as direct; // fields.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedObjectChecker.cpp:43,inherit,inherited,43,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedObjectChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/UninitializedObject/UninitializedObjectChecker.cpp,1,['inherit'],['inherited']
Modifiability,// Checks common to all variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Verifier.cpp:24,variab,variables,24,interpreter/llvm-project/llvm/lib/IR/Verifier.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Verifier.cpp,2,['variab'],['variables']
Modifiability,"// Checks if some input variable is not needed",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMLPAnalyzer.cxx:24,variab,variable,24,math/mlp/src/TMLPAnalyzer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mlp/src/TMLPAnalyzer.cxx,1,['variab'],['variable']
Modifiability,// Checks if this Node's namespace is inherited or one it defined itself.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/WindowsManifest/WindowsManifestMerger.cpp:38,inherit,inherited,38,interpreter/llvm-project/llvm/lib/WindowsManifest/WindowsManifestMerger.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/WindowsManifest/WindowsManifestMerger.cpp,1,['inherit'],['inherited']
Modifiability,// Checks whether \p S has already been rewritten. In that case returns the; // existing rewrite because we want to chain further rewrites onto the; // already rewritten value. Otherwise returns \p S.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:89,rewrite,rewrite,89,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,2,['rewrite'],"['rewrite', 'rewrites']"
Modifiability,// Choose Swift async extended frame info based on deployment target.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/CodeGenOptions.h:22,extend,extended,22,interpreter/llvm-project/clang/include/clang/Basic/CodeGenOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/CodeGenOptions.h,1,['extend'],['extended']
Modifiability,// Claim all arguments that come from a configuration file so that the driver; // does not warn on any that is unused.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:40,config,configuration,40,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['config'],['configuration']
Modifiability,// Clamp extending load results to 32-bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64LegalizerInfo.cpp:9,extend,extending,9,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64LegalizerInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64LegalizerInfo.cpp,1,['extend'],['extending']
Modifiability,"// Clang imposes an ODR on modules(!) regardless of the language:; // ""The module-id should consist of only a single identifier,; // which provides the name of the module being defined. Each; // module shall have a single definition.""; //; // This does not extend to the types inside the modules:; // ""[I]n C, this implies that if two structs are defined in; // different submodules with the same name, those two types are; // distinct types (but may be compatible types if their; // definitions match).""; //; // We treat non-C++ modules like namespaces for this reason.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp:257,extend,extend,257,interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,1,['extend'],['extend']
Modifiability,// Clang stores the sret pointer provided by the caller in a static alloca.; // Use DW_OP_deref to tell the debugger to load the pointer and treat it as; // the address of the variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp:176,variab,variable,176,interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,2,['variab'],['variable']
Modifiability,"// Class and union are not extendable, if we already; // loaded all the data member there is no need to recheck",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx:27,extend,extendable,27,core/meta/src/TListOfDataMembers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/meta/src/TListOfDataMembers.cxx,2,['extend'],['extendable']
Modifiability,// Class has 3 additional tail allocated arrays:; // 1. List of helper expressions for proper generation of assignment operation; // required for copyin clause. This list represents sources.; // 2. List of helper expressions for proper generation of assignment operation; // required for copyin clause. This list represents destinations.; // 3. List of helper expressions that represents assignment operation:; // \code; // DstExprs = SrcExprs;; // \endcode; // Required for proper codegen of propagation of master's thread values of; // threadprivate variables to local instances of that variables in other; // implicit threads.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h:552,variab,variables,552,interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/OpenMPClause.h,2,['variab'],['variables']
Modifiability,"// Class representing some configuration that can be done during GlobalISel's; // CSEInfo analysis. We define it here because TargetPassConfig can't depend on; // the GlobalISel library, and so we use this in the interface between them; // so that the derived classes in GISel can reference generic opcodes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CSEConfigBase.h:27,config,configuration,27,interpreter/llvm-project/llvm/include/llvm/CodeGen/CSEConfigBase.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/CSEConfigBase.h,1,['config'],['configuration']
Modifiability,"// Class to handle PROOF static config",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResourcesStatic.h:32,config,config,32,proof/proof/inc/TProofResourcesStatic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResourcesStatic.h,1,['config'],['config']
Modifiability,"// ClassDef controls the content of Class_Version() but not the return; // expression which is CPP expanded from what the user provided as second; // ClassDef argument. It's usually just be an integer literal but it could; // also be an enum or a variable template for all we know.; // Go through ICE to be more general.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx:247,variab,variable,247,core/clingutils/src/TClingUtils.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/clingutils/src/TClingUtils.cxx,1,['variab'],['variable']
Modifiability,// Clean non-target variable declarations possibly used only in debug info.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:20,variab,variable,20,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['variab'],['variable']
Modifiability,"// Clear any inherited file mode creation mask",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/daemon.cxx:13,inherit,inherited,13,net/rpdutils/src/daemon.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/net/rpdutils/src/daemon.cxx,1,['inherit'],['inherited']
Modifiability,"// Clear out the ""FirstInDeclGroup"" part in a declaration cursor, since we; // can't set consistently. For example, when visiting a DeclStmt we will set; // it but we don't set it on the result of clang_getCursorDefinition for; // a reference of the same declaration.; // FIXME: Setting ""FirstInDeclGroup"" in CXCursors is a hack that only works; // when visiting a DeclStmt currently, the AST should be enhanced to be able; // to provide that kind of info.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp:403,enhance,enhanced,403,interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,1,['enhance'],['enhanced']
Modifiability,// Clear out the source line cache if it's already been computed.; // FIXME: Allow this to be incrementally extended.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/ScratchBuffer.cpp:108,extend,extended,108,interpreter/llvm-project/clang/lib/Lex/ScratchBuffer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/ScratchBuffer.cpp,1,['extend'],['extended']
Modifiability,// Clear the INLCUDE variable for the external preprocessor,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-rc/llvm-rc.cpp:21,variab,variable,21,interpreter/llvm-project/llvm/tools/llvm-rc/llvm-rc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-rc/llvm-rc.cpp,1,['variab'],['variable']
Modifiability,// Clear the attributes so nested loops do not inherit them.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGLoopInfo.cpp:47,inherit,inherit,47,interpreter/llvm-project/clang/lib/CodeGen/CGLoopInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGLoopInfo.cpp,1,['inherit'],['inherit']
Modifiability,"// Clear the rewriter cache, because values that are in the rewriter's cache; // can be deleted below, causing the AssertingVH in the cache to trigger.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp:13,rewrite,rewriter,13,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCLoopInstrFormPrep.cpp,4,['rewrite'],['rewriter']
Modifiability,"// Clear the rewriter cache, because values that are in the rewriter's cache; // can be deleted in the loop below, causing the AssertingVH in the cache to; // trigger.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:13,rewrite,rewriter,13,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,2,['rewrite'],['rewriter']
Modifiability,// Clear the scope and variable information from the map which will not be; // valid after we have finished processing this routine. This also prepares; // the map for the subsequent routine.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp:23,variab,variable,23,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,1,['variab'],['variable']
Modifiability,"// Clone all configuration dat",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:13,config,configuration,13,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,2,['config'],['configuration']
Modifiability,// Clone all phis in BB into NewBB and rewrite.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp:39,rewrite,rewrite,39,interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ModuloSchedule.cpp,1,['rewrite'],['rewrite']
Modifiability,"// Clone constructor, must connect internal storage to given new external set of variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx:81,variab,variables,81,roofit/roofitcore/src/RooVectorDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooVectorDataStore.cxx,1,['variab'],['variables']
Modifiability,"// Clone derived variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:17,variab,variable,17,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,3,['variab'],['variable']
Modifiability,"// Clone from TGLUtil -- typedefs needed for portable tesselator function typedef.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLFaceSet.cxx:45,portab,portable,45,graf3d/gl/src/TGLFaceSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLFaceSet.cxx,1,['portab'],['portable']
Modifiability,// Clone inherited subregs and place duplicate entries in Orphans.; // Here the order is important - earlier subregs take precedence.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.cpp:9,inherit,inherited,9,interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.cpp,1,['inherit'],['inherited']
Modifiability,"// Clone list of variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:17,variab,variables,17,roofit/roofitcore/src/RooTreeDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx,1,['variab'],['variables']
Modifiability,"// Clone the phi nodes of the source basic block into NewBB. The resulting; // phi nodes are trivial since NewBB only has one predecessor, but SSAUpdater; // might need to rewrite the operand of the cloned phi.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp:172,rewrite,rewrite,172,interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/JumpThreading.cpp,1,['rewrite'],['rewrite']
Modifiability,"// Clone the plot variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:18,variab,variable,18,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['variab'],['variable']
Modifiability,"// Clone variable and attach to cloned tree",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:9,variab,variable,9,roofit/roofitcore/src/RooTreeDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx,3,['variab'],['variable']
Modifiability,"// Close inheritable copies of the handles you do not want to be inherited.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp:9,inherit,inheritable,9,interpreter/cling/lib/Utils/PlatformWin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp,2,['inherit'],"['inheritable', 'inherited']"
Modifiability,// Close this variable's previous location range.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:14,variab,variable,14,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,1,['variab'],['variable']
Modifiability,"// Coalescing will extend the live interval of the destination register.; // If the destination register is a vector pair, avoid introducing function; // calls into the interval, since it could result in a spilling of a pair; // instead of a single vector.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonRegisterInfo.cpp:19,extend,extend,19,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonRegisterInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonRegisterInfo.cpp,1,['extend'],['extend']
Modifiability,// Code adapted from scheduleDAG.cpp; // Does a topological sort over the SUs.; // Both TopDown and BottomUp,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp:8,adapt,adapted,8,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIMachineScheduler.cpp,1,['adapt'],['adapted']
Modifiability,"// Code size of block, in bytes.; // The following two variable length arrays appear immediately after the; // header. The structure definitions follow.; // LineNumberEntry Lines[NumLines];; // ColumnNumberEntry Columns[NumLines];",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/CodeView/DebugLinesSubsection.h:55,variab,variable,55,interpreter/llvm-project/llvm/include/llvm/DebugInfo/CodeView/DebugLinesSubsection.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/DebugInfo/CodeView/DebugLinesSubsection.h,1,['variab'],['variable']
Modifiability,"// CodeView can only express variables in register and variables in memory; // at a constant offset from a register. However, for variables passed; // indirectly by pointer, it is common for that pointer to be spilled to a; // stack location. For the special case of one offseted load followed by a; // zero offset load (a pointer spilled to the stack), we change the type of; // the local variable from a value type to a reference type. This tricks the; // debugger into doing the load for us.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp:29,variab,variables,29,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,4,['variab'],"['variable', 'variables']"
Modifiability,"// CodeView only records the vftable offset in the class that introduces; // the virtual method. This is possible because, unlike Itanium, the MS; // C++ ABI does not include all virtual methods from non-primary bases in; // the vtable for the most derived class. For example, if C inherits from; // A and B, C's primary vftable will not include B's virtual methods.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp:282,inherit,inherits,282,interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,1,['inherit'],['inherits']
Modifiability,// Coff specific configuration for copying/stripping a single file.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ObjCopy/COFF/COFFConfig.h:17,config,configuration,17,interpreter/llvm-project/llvm/include/llvm/ObjCopy/COFF/COFFConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ObjCopy/COFF/COFFConfig.h,1,['config'],['configuration']
Modifiability,// Collect all TLS variable candidates.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/TLSVariableHoist.cpp:19,variab,variable,19,interpreter/llvm-project/llvm/lib/Transforms/Scalar/TLSVariableHoist.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/TLSVariableHoist.cpp,1,['variab'],['variable']
Modifiability,// Collect all defs to be extended (Skipping undefs).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp:26,extend,extended,26,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,1,['extend'],['extended']
Modifiability,"// Collect all globals that had their storage promoted to a constant pool.; // Functions are emitted before variables, so this accumulates promoted; // globals from all functions in PromotedGlobals.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMAsmPrinter.cpp:108,variab,variables,108,interpreter/llvm-project/llvm/lib/Target/ARM/ARMAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMAsmPrinter.cpp,1,['variab'],['variables']
Modifiability,"// Collect all the incoming DbgValues for this variable, from predecessor; // live-out values.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:47,variab,variable,47,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['variab'],['variable']
Modifiability,// Collect all the input and output registers from the extended asm; // statement in order to check for conflicts with the clobber list,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmtAsm.cpp:55,extend,extended,55,interpreter/llvm-project/clang/lib/Sema/SemaStmtAsm.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmtAsm.cpp,1,['extend'],['extended']
Modifiability,// Collect any cleanups for the catch variable. The scope lasts until; // the end of the catch body.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:38,variab,variable,38,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['variab'],['variable']
Modifiability,// Collect data fields (including static variables and any initializers).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp:41,variab,variables,41,interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,1,['variab'],['variables']
Modifiability,// Collect debug locations (!dbg) and debug variable intrinsics.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Debugify.cpp:44,variab,variable,44,interpreter/llvm-project/llvm/lib/Transforms/Utils/Debugify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Debugify.cpp,2,['variab'],['variable']
Modifiability,// Collect each variable with a DBG_VALUE in this block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:16,variab,variable,16,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['variab'],['variable']
Modifiability,// Collect global types/variables except MapDef globals.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BTFDebug.cpp:24,variab,variables,24,interpreter/llvm-project/llvm/lib/Target/BPF/BTFDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BTFDebug.cpp,1,['variab'],['variables']
Modifiability,// Collect info for variables/labels that were optimized out.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp:20,variab,variables,20,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp,1,['variab'],['variables']
Modifiability,// Collect information about PHI nodes which can be transformed in; // rewriteLoopExitValues.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp:71,rewrite,rewriteLoopExitValues,71,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,1,['rewrite'],['rewriteLoopExitValues']
Modifiability,// Collect information about instance variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp:38,variab,variables,38,interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,1,['variab'],['variables']
Modifiability,// Collect inherited analysis from Module level pass manager.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopPass.cpp:11,inherit,inherited,11,interpreter/llvm-project/llvm/lib/Analysis/LoopPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopPass.cpp,3,['inherit'],['inherited']
Modifiability,// Collect lexical scope children first.; // ObjectPointer might be a local (non-argument) local variable if it's a; // block's synthetic this pointer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp:97,variab,variable,97,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,1,['variab'],['variable']
Modifiability,"// Collect loads and instruction that may write to memory. For now we only; // record loads which are simple, sign-extended and have a single user.; // TODO: Allow zero-extended loads.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMParallelDSP.cpp:115,extend,extended,115,interpreter/llvm-project/llvm/lib/Target/ARM/ARMParallelDSP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMParallelDSP.cpp,2,['extend'],['extended']
Modifiability,"// Collect original trip counts and induction variable to be accessible by; // index. Also, the structure of the original loops is not preserved during; // the construction of the tiled loops, so do it before we scavenge the BBs of; // any original CanonicalLoopInfo.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp:46,variab,variable,46,interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,1,['variab'],['variable']
Modifiability,"// Collect rewrites for LHS and its transitive operands based on the; // condition.; // For min/max expressions, also apply the guard to its operands:; // 'min(a, b) >= c' -> '(a >= c) and (b >= c)',; // 'min(a, b) > c' -> '(a > c) and (b > c)',; // 'max(a, b) <= c' -> '(a <= c) and (b <= c)',; // 'max(a, b) < c' -> '(a < c) and (b < c)'.; // We cannot express strict predicates in SCEV, so instead we replace them; // with non-strict ones against plus or minus one of RHS depending on the; // predicate.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:11,rewrite,rewrites,11,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['rewrite'],['rewrites']
Modifiability,"// Collect the global value references in the given variable's initializer,; // and emit them in a summary record.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp:52,variab,variable,52,interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,1,['variab'],['variable']
Modifiability,// Collect the inserted cmov instructions so we can rewrite their uses of the; // predicate state into SSA form.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp:52,rewrite,rewrite,52,interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86SpeculativeLoadHardening.cpp,1,['rewrite'],['rewrite']
Modifiability,// Collect the instance variables,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:24,variab,variables,24,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['variab'],['variables']
Modifiability,// Collect the list of loop induction variables with respect to which it might; // be possible to reroll the loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp:38,variab,variables,38,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp,1,['variab'],['variables']
Modifiability,// Collect the list of plugins that go before the main action (in Consumers); // or after it (in AfterConsumers),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/FrontendAction.cpp:23,plugin,plugins,23,interpreter/llvm-project/clang/lib/Frontend/FrontendAction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/FrontendAction.cpp,1,['plugin'],['plugins']
Modifiability,// Collect the register operands we should extend the live ranges of.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIFormMemoryClauses.cpp:43,extend,extend,43,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIFormMemoryClauses.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIFormMemoryClauses.cpp,1,['extend'],['extend']
Modifiability,// Collect the vector of possible reduction variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp:44,variab,variables,44,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopRerollPass.cpp,1,['variab'],['variables']
Modifiability,"// Collect tied operands of MI that need to be handled.; // Rewrite trivial cases immediately.; // Return true if any tied operands where found, including the trivial ones.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp:60,Rewrite,Rewrite,60,interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,1,['Rewrite'],['Rewrite']
Modifiability,// Collect variable information from side table maintained by MF.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp:11,variab,variable,11,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp,1,['variab'],['variable']
Modifiability,// Collect variables that are known to be positive in all uses in the; // constraint.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp:11,variab,variables,11,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,1,['variab'],['variables']
Modifiability,// Collect variables that are used by functions whose address has escaped,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:11,variab,variables,11,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability,"// Colon not found, parse only list of variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp:39,variab,variables,39,interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseOpenMP.cpp,1,['variab'],['variables']
Modifiability,"// Combine GA + Constant -> GA+Offset, but only if GA is not used elsewhere; // and the root node itself is not used more than twice. This reduces the; // amount of additional constant extenders introduced by this optimization.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp:185,extend,extenders,185,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelDAGToDAG.cpp,1,['extend'],['extenders']
Modifiability,// Combine all of the Global Variables marked as used into a SmallPtrSet for; // faster lookup inside the loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMergeStringPool.cpp:29,Variab,Variables,29,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMergeStringPool.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCMergeStringPool.cpp,1,['Variab'],['Variables']
Modifiability,"// Combine an arbitrary chain of shuffles + extract_subvectors into a single; // instruction if possible.; //; // Wrapper for combineX86ShuffleChain that extends the shuffle mask to a larger; // type size to attempt to combine:; // shuffle(extract_subvector(x,c1),extract_subvector(y,c2),m1); // -->; // extract_subvector(shuffle(x,y,m2),0)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:154,extend,extends,154,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['extend'],['extends']
Modifiability,// Combine extends of extract_subvectors into widening ops,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp:11,extend,extends,11,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp,1,['extend'],['extends']
Modifiability,// Combine load followed by zero- or sign-extend.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp:42,extend,extend,42,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,1,['extend'],['extend']
Modifiability,"// Combine load followed by zero- or sign-extend.; // ldrb r1, [r0] ldrb r1, [r0]; // uxtb r2, r1 =>; // mov r3, r2 mov r3, r1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp:42,extend,extend,42,interpreter/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp,1,['extend'],['extend']
Modifiability,"// Combine the map type inherited from user-defined mapper with that; // specified in the program. According to the OMP_MAP_TO and OMP_MAP_FROM; // bits of the \a MapType, which is the input argument of the mapper; // function, the following code will set the OMP_MAP_TO and OMP_MAP_FROM; // bits of MemberMapType.; // [OpenMP 5.0], 1.2.6. map-type decay.; // | alloc | to | from | tofrom | release | delete; // ----------------------------------------------------------; // alloc | alloc | alloc | alloc | alloc | release | delete; // to | alloc | to | alloc | to | release | delete; // from | alloc | alloc | from | from | release | delete; // tofrom | alloc | to | from | tofrom | release | delete",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:24,inherit,inherited,24,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['inherit'],['inherited']
Modifiability,"// Command (I/O redirection) plugin for the new ROOT Browser",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGCommandPlugin.h:29,plugin,plugin,29,gui/gui/inc/TGCommandPlugin.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/inc/TGCommandPlugin.h,1,['plugin'],['plugin']
Modifiability,// Command line option to force outlining in regions with live exit variables.; // The default is false:,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp:68,variab,variables,68,interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp,1,['variab'],['variables']
Modifiability,// Command line options can override the environment variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CommandLine.cpp:53,variab,variable,53,interpreter/llvm-project/llvm/lib/Support/CommandLine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/CommandLine.cpp,1,['variab'],['variable']
Modifiability,// Commonly used for O0 config.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CSEInfo.h:24,config,config,24,interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CSEInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/GlobalISel/CSEInfo.h,1,['config'],['config']
Modifiability,// Commonly used variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:17,variab,variables,17,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,2,['variab'],['variables']
Modifiability,"// Commute operands to get a smaller encoding by using VEX.R instead of; // VEX.B if one of the registers is extended, but other isn't.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86EncodingOptimization.cpp:109,extend,extended,109,interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86EncodingOptimization.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/MCTargetDesc/X86EncodingOptimization.cpp,1,['extend'],['extended']
Modifiability,// Compare against the bitmask and extend the result.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:35,extend,extend,35,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['extend'],['extend']
Modifiability,"// Compare current value of variables with saved values and send changes to server",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx:28,variab,variables,28,roofit/roofitcore/src/RooRealMPFE.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooRealMPFE.cxx,1,['variab'],['variables']
Modifiability,"// Compare the AdaptiveIntegratorMultiDim and; // TF1::IntegralMultiple performance and results; // Compares time performance; // for different dimensions; // draws a graph; //; // Author: David Gonzalez Maline; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testIntegrationMultiDim.cxx:15,Adapt,AdaptiveIntegratorMultiDim,15,math/mathcore/test/testIntegrationMultiDim.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/test/testIntegrationMultiDim.cxx,1,['Adapt'],['AdaptiveIntegratorMultiDim']
Modifiability,"// Compare the vptr against the expected vptr for the destination type at; // this offset. Note that we do not know what type ThisAddr points to in; // the case where the derived class multiply inherits from the base class; // so we can't use GetVTablePtr, so we load the vptr directly instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp:194,inherit,inherits,194,interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,1,['inherit'],['inherits']
Modifiability,"// Compare the widths of elements of the two types, and extend the narrower; // type to match the with of the wider type. For vector types, apply this; // to the element type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLoweringHVX.cpp:56,extend,extend,56,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLoweringHVX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLoweringHVX.cpp,1,['extend'],['extend']
Modifiability,"// Compares to Boxes to see if they are equal in all its; // variables. This is to be used by the std::find algorithm",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SparseData.cxx:61,variab,variables,61,math/mathcore/src/SparseData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/mathcore/src/SparseData.cxx,1,['variab'],['variables']
Modifiability,"// Comparison against value stored in global variable. Given the; // pointer does not escape, its value cannot be guessed and stored; // separately in a global variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp:45,variab,variable,45,interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InstructionSimplify.cpp,2,['variab'],['variable']
Modifiability,"// Comparisons are canonicalized so that the RHS operand is simpler than the; // LHS one, the extreme case being when RHS is an immediate. However, AArch64; // can fold some shift+extend operations on the RHS operand, so swap the; // operands if that can be done.; //; // For example:; // lsl w13, w11, #1; // cmp w13, w12; // can be turned into:; // cmp w12, w11, lsl #1",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:180,extend,extend,180,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['extend'],['extend']
Modifiability,"// Comparisons of short integers should use sign-extend, not zero-extend,; // since we can represent small negative values in the compare instructions.; // The LLVM default is to use zero-extend arbitrarily in these cases.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp:49,extend,extend,49,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp,3,['extend'],['extend']
Modifiability,// Compiler must define this variable when runtime counter relocation; // is being used. Runtime has a weak external reference that is used; // to check whether that's the case or not.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp:29,variab,variable,29,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,1,['variab'],['variable']
Modifiability,"// Compiler-generated copy ctor, copy assignment, dtor are fine; // Inherited what() from runtime_error is fine",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/GenVector_exception.h:68,Inherit,Inherited,68,math/genvector/inc/Math/GenVector/GenVector_exception.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/genvector/inc/Math/GenVector/GenVector_exception.h,1,['Inherit'],['Inherited']
Modifiability,// Complete the existing variable's definition with an appropriately; // substituted type and initializer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:25,variab,variable,25,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,1,['variab'],['variable']
Modifiability,"// CompressedOffloadBundle represents the format for the compressed offload; // bundles.; //; // The format is as follows:; // - Magic Number (4 bytes) - A constant ""CCOB"".; // - Version (2 bytes); // - Compression Method (2 bytes) - Uses the values from; // llvm::compression::Format.; // - Uncompressed Size (4 bytes).; // - Truncated MD5 Hash (8 bytes).; // - Compressed Data (variable length).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/OffloadBundler.h:380,variab,variable,380,interpreter/llvm-project/clang/include/clang/Driver/OffloadBundler.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Driver/OffloadBundler.h,1,['variab'],['variable']
Modifiability,// Compute SSA names for local variables,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp:31,variab,variables,31,interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp,1,['variab'],['variables']
Modifiability,"// Compute base offset from zero based index, excluding the last; // variable operand.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp:69,variab,variable,69,interpreter/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InterleavedLoadCombinePass.cpp,1,['variab'],['variable']
Modifiability,// Compute inherited propertied for a synthesized register class.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.cpp:11,inherit,inherited,11,interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.cpp,1,['inherit'],['inherited']
Modifiability,"// Compute summaries for all variables defined in module, and save in the; // index.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ModuleSummaryAnalysis.cpp:29,variab,variables,29,interpreter/llvm-project/llvm/lib/Analysis/ModuleSummaryAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ModuleSummaryAnalysis.cpp,1,['variab'],['variables']
Modifiability,"// Compute the address of the local variable, in case it's a byref; // or something.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp:36,variab,variable,36,interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,1,['variab'],['variable']
Modifiability,"// Compute the address of the local variable, in case it's a; // byref or something.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp:36,variab,variable,36,interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,1,['variab'],['variable']
Modifiability,"// Compute the cost of conditionally executing the memory operations with; // variable masks. This includes extracting the individual conditions, a; // branches and PHIs to combine the results.; // NOTE: Estimating the cost of conditionally executing the memory; // operations accurately is quite difficult and the current solution; // provides a very rough estimate only.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/BasicTTIImpl.h:78,variab,variable,78,interpreter/llvm-project/llvm/include/llvm/CodeGen/BasicTTIImpl.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/BasicTTIImpl.h,1,['variab'],['variable']
Modifiability,// Compute the overflow.; //; // LHSSign -> LHS < 0; // RHSSign -> RHS < 0; // SumSign -> Sum < 0; //; // Add:; // Overflow -> (LHSSign == RHSSign) && (LHSSign != SumSign); // Sub:; // Overflow -> (LHSSign != RHSSign) && (LHSSign != SumSign); //; // To get better codegen we can rewrite this by doing bitwise math on; // the integers and extract the final sign bit at the end. So the; // above becomes:; //; // Add:; // Overflow -> (~(LHS ^ RHS) & (LHS ^ Sum)) < 0; // Sub:; // Overflow -> ((LHS ^ RHS) & (LHS ^ Sum)) < 0; //; // NOTE: This is different than the expansion we do in expandSADDSUBO; // because it is more costly to determine the RHS is > 0 for SSUBO with the; // integers split.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp:279,rewrite,rewrite,279,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp,1,['rewrite'],['rewrite']
Modifiability,// Compute the type of a reference to this captured variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:52,variab,variable,52,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['variab'],['variable']
Modifiability,// Compute the type of an expression that refers to this variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:57,variab,variable,57,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['variab'],['variable']
Modifiability,// Compute the type of the field that will capture this variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:56,variab,variable,56,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['variab'],['variable']
Modifiability,"// Compute the widths for all the normal characters. Any other; // characters are given an initial width of 0. Also, this determines; // if this is a fixed or variable width font, by comparing the widths; // of all the normal characters.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFont.cxx:159,variab,variable,159,gui/gui/src/TGFont.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFont.cxx,1,['variab'],['variable']
Modifiability,// Computes the intersection of two contexts. The intersection is the; // set of variables which have the same definition in both contexts;; // variables with different definitions are discarded.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp:81,variab,variables,81,interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp,2,['variab'],['variables']
Modifiability,// Concatenate zeroes to extend back to the original type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86PartialReduction.cpp:25,extend,extend,25,interpreter/llvm-project/llvm/lib/Target/X86/X86PartialReduction.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86PartialReduction.cpp,1,['extend'],['extend']
Modifiability,"// Condition variable class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TCondition.h:13,variab,variable,13,core/thread/inc/TCondition.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TCondition.h,1,['variab'],['variable']
Modifiability,"// Condition variable implementation ABC",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TConditionImp.h:13,variab,variable,13,core/thread/inc/TConditionImp.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/thread/inc/TConditionImp.h,1,['variab'],['variable']
Modifiability,"// Condition variable must be initialized if it exists.; // FIXME: We can skip evaluating the body if there's a condition; // variable, as there can't be any case labels within it.; // (The same is true for 'for' statements.)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:13,variab,variable,13,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,2,['variab'],['variable']
Modifiability,"// Conditional stack and related state variables; // coverity[UNINIT]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgSet.cxx:39,variab,variables,39,roofit/roofitcore/src/RooArgSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooArgSet.cxx,1,['variab'],['variables']
Modifiability,"// Config file (master or submaster; for backward compatibility)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofNodeInfo.cxx:3,Config,Config,3,proof/proof/src/TProofNodeInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofNodeInfo.cxx,1,['Config'],['Config']
Modifiability,"// Config file name",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResourcesStatic.h:3,Config,Config,3,proof/proof/inc/TProofResourcesStatic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofResourcesStatic.h,1,['Config'],['Config']
Modifiability,// ConfigMacrosExh...,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:3,Config,ConfigMacrosExh,3,interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,1,['Config'],['ConfigMacrosExh']
Modifiability,// Configurable components creators.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/AnalysisManager.h:3,Config,Configurable,3,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/AnalysisManager.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/AnalysisManager.h,1,['Config'],['Configurable']
Modifiability,"// Configurable parse of RooCmdArg objects",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCmdConfig.h:3,Config,Configurable,3,roofit/roofitcore/inc/RooCmdConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCmdConfig.h,1,['Config'],['Configurable']
Modifiability,// Configuration alternative created.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h:3,Config,Configuration,3,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h,1,['Config'],['Configuration']
Modifiability,"// Configuration and customization of how numeric (partial) integrals; // are executed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:3,Config,Configuration,3,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['Config'],['Configuration']
Modifiability,"// Configuration file name [for submasters]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofNodeInfo.h:3,Config,Configuration,3,proof/proof/inc/TProofNodeInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/inc/TProofNodeInfo.h,1,['Config'],['Configuration']
Modifiability,// Configuration for copying/stripping a single file.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ObjCopy/CommonConfig.h:3,Config,Configuration,3,interpreter/llvm-project/llvm/include/llvm/ObjCopy/CommonConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ObjCopy/CommonConfig.h,1,['Config'],['Configuration']
Modifiability,"// Configuration for the overall invocation of this tool. When invoked as; // objcopy, will always contain exactly one CopyConfig. When invoked as strip,; // will contain one or more CopyConfigs.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objcopy/ObjcopyOptions.h:3,Config,Configuration,3,interpreter/llvm-project/llvm/tools/llvm-objcopy/ObjcopyOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objcopy/ObjcopyOptions.h,1,['Config'],['Configuration']
Modifiability,"// Configuration getters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:3,Config,Configuration,3,html/inc/THtml.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h,1,['Config'],['Configuration']
Modifiability,"// Configuration object for the Float16/Double32 where a factor has been specified.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:3,Config,Configuration,3,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,4,['Config'],['Configuration']
Modifiability,"// Configuration object for the PushDataCache case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:3,Config,Configuration,3,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['Config'],['Configuration']
Modifiability,"// Configuration object for the UseCache case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:3,Config,Configuration,3,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['Config'],['Configuration']
Modifiability,"// Configuration object for the generic case of member wise streaming looping.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:3,Config,Configuration,3,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['Config'],['Configuration']
Modifiability,"// Configuration object for the kSTL case",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:3,Config,Configuration,3,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['Config'],['Configuration']
Modifiability,"// Configuration of MC generators used for this pdf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsPdf.h:3,Config,Configuration,3,roofit/roofitcore/inc/RooAbsPdf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooAbsPdf.h,1,['Config'],['Configuration']
Modifiability,"// Configuration of action handling kBits.; // In this case we need to know both the location; // of the member (fBits) and the start of the object; // (its TObject part to be exact).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:3,Config,Configuration,3,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['Config'],['Configuration']
Modifiability,"// Configuration of action using the legacy code.; // Mostly to cancel out the PrintDebug.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx:3,Config,Configuration,3,io/io/src/TStreamerInfoActions.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TStreamerInfoActions.cxx,1,['Config'],['Configuration']
Modifiability,"// Configuration options for proof.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ProofConfig.h:3,Config,Configuration,3,roofit/roostats/inc/RooStats/ProofConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/ProofConfig.h,1,['Config'],['Configuration']
Modifiability,"// Configuration setters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h:3,Config,Configuration,3,html/inc/THtml.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/html/inc/THtml.h,1,['Config'],['Configuration']
Modifiability,// Configure ImpicitPCHInclude.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/PrecompiledPreamble.cpp:3,Config,Configure,3,interpreter/llvm-project/clang/lib/Frontend/PrecompiledPreamble.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/PrecompiledPreamble.cpp,1,['Config'],['Configure']
Modifiability,"// Configure SCEVExpander already now, so the correct mode is used for; // isSafeToExpand() checks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:3,Config,Configure,3,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,1,['Config'],['Configure']
Modifiability,"// Configure a workspace by doing any; // necessary post-processing and by; // creating a ModelConfig; // Make a ModelConfig and configure it",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:3,Config,Configure,3,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,2,"['Config', 'config']","['Configure', 'configure']"
Modifiability,"// Configure blinding state category",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:3,Config,Configure,3,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,1,['Config'],['Configure']
Modifiability,// Configure our handling of diagnostics.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp:3,Config,Configure,3,interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInstance.cpp,1,['Config'],['Configure']
Modifiability,"// Configure our handling of diagnostics.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp:3,Config,Configure,3,interpreter/cling/lib/Interpreter/CIFactory.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/CIFactory.cpp,1,['Config'],['Configure']
Modifiability,"// Configure output",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx:3,Config,Configure,3,roofit/roofitcore/src/RooMsgService.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooMsgService.cxx,1,['Config'],['Configure']
Modifiability,// Configure register Sets to understand register classes and tuples.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.cpp:3,Config,Configure,3,interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.cpp,1,['Config'],['Configure']
Modifiability,"// Configure that workspace",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx:3,Config,Configure,3,roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/MakeModelAndMeasurementsFast.cxx,1,['Config'],['Configure']
Modifiability,// Configure the diagnostics.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp:3,Config,Configure,3,interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/libclang/CIndex.cpp,2,['Config'],['Configure']
Modifiability,"// Configure the validate function to not fire assertions, instead print; // errors and return true if there's a problem.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Verifier.cpp:3,Config,Configure,3,interpreter/llvm-project/llvm/lib/IR/Verifier.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/Verifier.cpp,1,['Config'],['Configure']
Modifiability,// Configure the various subsystems.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/ASTUnit.cpp:3,Config,Configure,3,interpreter/llvm-project/clang/lib/Frontend/ASTUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/ASTUnit.cpp,2,['Config'],['Configure']
Modifiability,"// Configure the vistitor to also visit template instantiation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/Scanner.h:3,Config,Configure,3,core/dictgen/res/Scanner.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/Scanner.h,1,['Config'],['Configure']
Modifiability,"// Configure the workspace",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx:3,Config,Configure,3,roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/HistoToWorkspaceFactoryFast.cxx,1,['Config'],['Configure']
Modifiability,// Configure tile registers at the head of the MBB,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastPreTileConfig.cpp:3,Config,Configure,3,interpreter/llvm-project/llvm/lib/Target/X86/X86FastPreTileConfig.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastPreTileConfig.cpp,1,['Config'],['Configure']
Modifiability,"// Configured to stop before CodeGen, serialize the bitcode and return.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp:3,Config,Configured,3,interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/LTO/ThinLTOCodeGenerator.cpp,1,['Config'],['Configured']
Modifiability,// Conservative default is to not rewrite anything.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp:34,rewrite,rewrite,34,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,1,['rewrite'],['rewrite']
Modifiability,// Conservatively extend the stack slot range to the range of the original; // value. We may be able to do better with stack slot coloring by being more; // careful here.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InlineSpiller.cpp:18,extend,extend,18,interpreter/llvm-project/llvm/lib/CodeGen/InlineSpiller.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/InlineSpiller.cpp,1,['extend'],['extend']
Modifiability,// Conservatively refuse to perform a polymorphic operation if we would; // not be able to read a notional 'vptr' value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:38,polymorphi,polymorphic,38,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['polymorphi'],['polymorphic']
Modifiability,// Conservatively returns true if data variables may be referenced by code.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp:39,variab,variables,39,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,1,['variab'],['variables']
Modifiability,// Consider taskgroup reduction descriptor variable a private; // to avoid possible capture in the region.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:43,variab,variable,43,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,"// Consider the variable as NRVO candidate if the return slot is available; // for it in the current scope, or if it can be available in outer scopes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/Scope.cpp:16,variab,variable,16,interpreter/llvm-project/clang/lib/Sema/Scope.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/Scope.cpp,1,['variab'],['variable']
Modifiability,// Const getters are inherited from the base class.; /// Mutable getters.; /// @{,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/CompilerInvocation.h:21,inherit,inherited,21,interpreter/llvm-project/clang/include/clang/Frontend/CompilerInvocation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Frontend/CompilerInvocation.h,1,['inherit'],['inherited']
Modifiability,"// ConstZero means a bit we need to mask off.; // Variable is a bit comes from an input variable.; // VariableKnownToBeZero is also a bit comes from an input variable,; // but it is known to be already zero. So we do not need to mask them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp:50,Variab,Variable,50,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelDAGToDAG.cpp,4,"['Variab', 'variab']","['Variable', 'VariableKnownToBeZero', 'variable']"
Modifiability,// Constant ISD::SRA/SRL can be performed efficiently on vXi8 vectors as we; // extend to vXi16 to perform a MUL scale effectively as a MUL_LOHI.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:80,extend,extend,80,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['extend'],['extend']
Modifiability,// Constant condition variables mean the branch can only go a single way,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/SparsePropagation.h:22,variab,variables,22,interpreter/llvm-project/llvm/include/llvm/Analysis/SparsePropagation.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Analysis/SparsePropagation.h,1,['variab'],['variables']
Modifiability,// Constant condition variables mean the branch can only go a single way.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SCCPSolver.cpp:22,variab,variables,22,interpreter/llvm-project/llvm/lib/Transforms/Utils/SCCPSolver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SCCPSolver.cpp,1,['variab'],['variables']
Modifiability,// Constant variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCUDARuntime.h:12,variab,variable,12,interpreter/llvm-project/clang/lib/CodeGen/CGCUDARuntime.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCUDARuntime.h,1,['variab'],['variable']
Modifiability,"// Constants and utility variables are defined in headers with internal; // linkage; don't warn. (Unlike functions, there isn't a convenient marker; // like ""inline"".)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:25,variab,variables,25,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variables']
Modifiability,// Constants and variables should always be made the leader.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp:17,variab,variables,17,interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/NewGVN.cpp,1,['variab'],['variables']
Modifiability,"// Constants are uniqued within LLVM. A ConstantExpr referring to a LDS; // global may have uses from multiple different functions as a result.; // This pass specialises LDS variables with respect to the kernel that; // allocates them.; // This is semantically equivalent to (the unimplemented as slow):; // for (auto &F : M.functions()); // for (auto &BB : F); // for (auto &I : BB); // for (Use &Op : I.operands()); // if (constantExprUsesLDS(Op)); // replaceConstantExprInFunction(I, Op);",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:174,variab,variables,174,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability,"// Construct a FrameIndexDbgValue for FrameIndexSDNodes so we can describe; // stack slot locations.; //; // Consider ""int x = 0; int *px = &x;"". There are two kinds of interesting; // debug values here after optimization:; //; // dbg.value(i32* %px, !""int *px"", !DIExpression()), and; // dbg.value(i32* %px, !""int x"", !DIExpression(DW_OP_deref)); //; // Both describe the direct values of their associated variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:407,variab,variables,407,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['variab'],['variables']
Modifiability,"// Construct a FrameIndexDbgValue for FrameIndexSDNodes so we can; // describe stack slot locations.; //; // Consider ""int x = 0; int *px = &x;"". There are two kinds of; // interesting debug values here after optimization:; //; // dbg.value(i32* %px, !""int *px"", !DIExpression()), and; // dbg.value(i32* %px, !""int x"", !DIExpression(DW_OP_deref)); //; // Both describe the direct values of their associated variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:407,variab,variables,407,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['variab'],['variables']
Modifiability,"// Construct a TypeSourceInfo for the conversion function, and wire; // all the parameters appropriately for the FunctionProtoTypeLoc; // so that everything works during transformation/instantiation of; // generic lambdas.; // The main reason for wiring up the parameters of the conversion; // function with that of the call operator is so that constructs; // like the following work:; // auto L = [](auto b) { <-- 1; // return [](auto a) -> decltype(a) { <-- 2; // return a;; // };; // };; // int (*fp)(int) = L(5);; // Because the trailing return type can contain DeclRefExprs that refer; // to the original call operator's variables, we hijack the call; // operators ParmVarDecls below.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp:626,variab,variables,626,interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,1,['variab'],['variables']
Modifiability,"// Construct an RNTuple with a single float field ""pt"". The field has a single representation for the; // first cluster and then gets extended by another representation that is active in the second cluster.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/ntuple_serialize.cxx:134,extend,extended,134,tree/ntuple/v7/test/ntuple_serialize.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/test/ntuple_serialize.cxx,1,['extend'],['extended']
Modifiability,"// Construct parameterized ranged ""R"" in z [ 0, 0.1*y^2 ]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:13,parameteriz,parameterized,13,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['parameteriz'],['parameterized']
Modifiability,"// Construct set of variables to be included in split sets = full set - split category",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:20,variab,variables,20,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,1,['variab'],['variables']
Modifiability,"// Construct smeared convolution variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvGenContext.cxx:33,variab,variable,33,roofit/roofitcore/src/RooConvGenContext.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvGenContext.cxx,1,['variab'],['variable']
Modifiability,"// Construct the lexical block tree for a routine, pruning emptpy lexical; // scopes, and populate it with local variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.h:113,variab,variables,113,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.h,1,['variab'],['variables']
Modifiability,"// Construct the list of ranges, such that for each P in Ranges[I],; // a register Reg = ER+P can be used in place of Extender[I]. If the; // instruction allows, uses in the form of Reg+Off are considered; // (here, Off = required_value - P).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp:118,Extend,Extender,118,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,1,['Extend'],['Extender']
Modifiability,"// Construct variable that holds -log(L) fit with null hypothesis for given parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooChi2MCSModule.cxx:13,variab,variable,13,roofit/roofit/src/RooChi2MCSModule.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/src/RooChi2MCSModule.cxx,3,['variab'],['variable']
Modifiability,"// Construct variable that holds significance corresponding to delta(-log(L)) w.r.t to null hypothesis for given parameter",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx:13,variab,variable,13,roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDLLSignificanceMCSModule.cxx,1,['variab'],['variable']
Modifiability,"// Constructor from existing data set with list of variables that preserves the cache",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:51,variab,variables,51,roofit/roofitcore/src/RooTreeDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx,1,['variab'],['variables']
Modifiability,"// Constructor of convolution operator PDF; //; // convVar : convolution variable (on which both pdf and resmodel should depend); // pdf : input 'physics' pdf; // resmodel : input 'resolution' pdf; //; // output is pdf(x) (X) resmodel(x) = Int [ pdf(x') resmodel (x-x') ] dx'; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx:73,variab,variable,73,roofit/roofitcore/src/RooNumConvPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumConvPdf.cxx,1,['variab'],['variable']
Modifiability,// Constructor of profile likelihood given input likelihood nll w.r.t; // the given set of variables. The input log likelihood is minimized w.r.t; // to all other variables of the likelihood at each evaluation and the; // value of the global log likelihood minimum is always subtracted.; // Determine actual parameters and observables; /*; std::unique_ptr<RooArgSet> actualObs{nllIn.getObservables(observables)};; std::unique_ptr<RooArgSet> actualPars{nllIn.getParameters(observables)};. _obs.add(*actualObs) ;; _par.add(*actualPars) ;; */,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx:91,variab,variables,91,roofit/histfactory/src/RooBarlowBeestonLL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/src/RooBarlowBeestonLL.cxx,2,['variab'],['variables']
Modifiability,"// Constructor where func and model; //; // 'func' = func(xprime); // 'model' = model(xprime); //; // and; // 'xprime' is the RRV that should be connected to func and model; // (i.e. the variable that will be integrated over); // 'x' is RRV that represents the value at which the convolution is calculated; // (this variable should _not_ be connected to func and model); //; // this function returns RCBB[x',x] = f[x']*g[x-x'], i.e. the substiturion g[x'] --> g[x-x']; // is taken care internally; //; // The integral of this binding over its 1st arg yields the convolution (f (x) g)[x]; //; // allocate memory",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvIntegrandBinding.cxx:187,variab,variable,187,roofit/roofitcore/src/RooConvIntegrandBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooConvIntegrandBinding.cxx,2,['variab'],['variable']
Modifiability,"// Constructor.; // If map_window is true, the TEveBrowser window is mapped.; //; // Option string is first parsed for the following characters:; // V - spawn a default GL viewer.; //; // The consumed characters are removed from the options and they; // are passed to TEveBrowser for creation of additional plugins.; //; // Default options: ""FIV"" - file-browser, command-line, GL-viewer.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveManager.cxx:307,plugin,plugins,307,graf3d/eve/src/TEveManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveManager.cxx,1,['plugin'],['plugins']
Modifiability,// Constructs self-contained fix-its for each variable in `FixablesForAllVars`.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp:46,variab,variable,46,interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp,1,['variab'],['variable']
Modifiability,"// Container is a minimal interface used to store results when traversing; // SExprs of variable arity, such as Phi, Goto, and SCFG.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h:88,variab,variable,88,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTraverse.h,1,['variab'],['variable']
Modifiability,// Contains all attributes related to how this token takes part; // in a configured macro expansion.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/FormatToken.h:73,config,configured,73,interpreter/llvm-project/clang/lib/Format/FormatToken.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/FormatToken.h,1,['config'],['configured']
Modifiability,// Convenience variables to avoid some queries.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp:15,variab,variables,15,interpreter/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMFastISel.cpp,2,['variab'],['variables']
Modifiability,"// Conversion from APFloat to/from host float/double. It may eventually be; // possible to eliminate these and have everybody deal with APFloats, but that; // will take a while. This approach will not easily extend to long double.; // Current implementation requires integerPartWidth==64, which is correct at; // the moment but could be made more general.; // Denormals have exponent minExponent in APFloat, but minExponent-1 in; // the actual IEEE respresentations. We compensate for that here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp:208,extend,extend,208,interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APFloat.cpp,1,['extend'],['extend']
Modifiability,// Conversions between IEEE-quad and IBM-extended semantics are not; // permitted.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp:41,extend,extended,41,interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOverload.cpp,1,['extend'],['extended']
Modifiability,"// Convert a disguised subvector insertion into a shuffle:; // insert_vector_elt V, (bitcast X from vector type), IdxC -->; // bitcast(shuffle (bitcast V), (extended X), Mask); // Note: We do not use an insert_subvector node because that requires a; // legal subvector type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:157,extend,extended,157,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['extend'],['extended']
Modifiability,"// Convert extended input into the corresponding Command.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/KeyBinding.cpp:11,extend,extended,11,core/textinput/src/textinput/KeyBinding.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/textinput/src/textinput/KeyBinding.cpp,1,['extend'],['extended']
Modifiability,"// Convert from endpoint to center parameterization,; // see http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes; //; // Return [cx, cy, theta1, delta_theta]; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:35,parameteriz,parameterization,35,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['parameteriz'],['parameterization']
Modifiability,// Convert intrinsic calls with variable size or with constant size; // larger than the MaxAggrCopySize threshold.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXLowerAggrCopies.cpp:32,variab,variable,32,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXLowerAggrCopies.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXLowerAggrCopies.cpp,1,['variab'],['variable']
Modifiability,"// Convert to a variadic expression (if not already).; // convertToVariadicExpression() returns a const pointer, so we use; // a temporary const variable here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp:145,variab,variable,145,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAG.cpp,1,['variab'],['variable']
Modifiability,"// Converts a 32-bit register to a 64-bit, zero-extended version of; // it. This is needed because x86-64 can do many things, but jmp %r32; // ain't one of them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp:48,extend,extended,48,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,1,['extend'],['extended']
Modifiability,"// Convolution variable is by definition first server of basis function",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx:15,variab,variable,15,roofit/roofitcore/src/RooResolutionModel.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooResolutionModel.cxx,1,['variab'],['variable']
Modifiability,"// Coordinate-System of the source tree variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveTreeTools.h:40,variab,variables,40,graf3d/eve/inc/TEveTreeTools.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveTreeTools.h,2,['variab'],['variables']
Modifiability,"// Copied and adapted from GlobalDCE.cpp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:14,adapt,adapted,14,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp,1,['adapt'],['adapted']
Modifiability,"// Copied and adapted from: ASTReaderDecl.cpp",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:14,adapt,adapted,14,interpreter/cling/lib/Interpreter/DeclUnloader.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclUnloader.cpp,1,['adapt'],['adapted']
Modifiability,"// Copied from Frontend/FrontendAction.cpp.; // FIXME: Remove when we switch to a tools-based cling driver.; // If the FrontendPluginRegistry has plugins before loading any shared library; // this means we have linked our plugins. This is useful when cling runs in; // embedded mode (in a shared library). This is the only feasible way to have; // plugins if cling is in a single shared library which is dlopen-ed with; // RTLD_LOCAL. In that situation plugins can still find the cling, clang and; // llvm symbols opened with local visibility.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:146,plugin,plugins,146,interpreter/cling/lib/Interpreter/IncrementalParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/IncrementalParser.cpp,4,['plugin'],['plugins']
Modifiability,// Copy .dwo tables from the Config.InputFilename into Config.SplitDWO; // file using specified ObjcopyFunc function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objcopy/llvm-objcopy.cpp:29,Config,Config,29,interpreter/llvm-project/llvm/tools/llvm-objcopy/llvm-objcopy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-objcopy/llvm-objcopy.cpp,2,['Config'],['Config']
Modifiability,// Copy all operands except the one that has the extender.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp:49,extend,extender,49,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,1,['extend'],['extender']
Modifiability,// Copy data from byvalue operand into the temporarily variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp:55,variab,variable,55,interpreter/llvm-project/llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp,1,['variab'],['variable']
Modifiability,// Copy data from the temporarily variable into corresponding; // function argument location.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp:34,variab,variable,34,interpreter/llvm-project/llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp,1,['variab'],['variable']
Modifiability,"// Copy input variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx:14,variab,variables,14,tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DNN/Architectures/Reference/DataLoader.cxx,2,['variab'],['variables']
Modifiability,"// Copy of variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.h:11,variab,variables,11,roofit/roofitcore/src/TestStatistics/LikelihoodJob.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/LikelihoodJob.h,1,['variab'],['variables']
Modifiability,// Copy over the debug info for the variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp:36,variab,variable,36,interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,1,['variab'],['variable']
Modifiability,// Copy the Variables vector from the builder's UniqueVector.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp:12,Variab,Variables,12,interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,1,['Variab'],['Variables']
Modifiability,// Copy the variable-sized local data. We need to do this; // separately because the padding in the source and the padding in; // the destination might be different.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/TypeLoc.h:12,variab,variable-sized,12,interpreter/llvm-project/clang/include/clang/AST/TypeLoc.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/TypeLoc.h,1,['variab'],['variable-sized']
Modifiability,// Copy values of ByVal operands into local temporarily variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp:56,variab,variables,56,interpreter/llvm-project/llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp,1,['variab'],['variables']
Modifiability,"// Copy variables from merge sets",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:8,variab,variables,8,roofit/roofitcore/src/RooTreeDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx,2,['variab'],['variables']
Modifiability,"// Copying constructor for the threadprivate variable.; // Must be NULL - reserved by runtime, but currently it requires that this; // parameter is always NULL. Otherwise it fires assertion.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:45,variab,variable,45,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['variab'],['variable']
Modifiability,"// Corner case pT~0 or B~0, possible in variable mag field.; // ----------------------------------------------------------------; // helix parameters",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveTrackPropagator.h:40,variab,variable,40,graf3d/eve/inc/TEveTrackPropagator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveTrackPropagator.h,2,['variab'],['variable']
Modifiability,// Could be extended to work with DWARFv4 Split DWARF if that's important for; // someone. In that case DW_FORM_data would be used.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp:12,extend,extended,12,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,1,['extend'],['extended']
Modifiability,// Could not determine size of variable. Conservatively return false.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp:31,variab,variable,31,interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/Local.cpp,2,['variab'],['variable']
Modifiability,"// Count how many bytes are to be pushed on the stack, including the linkage; // area, parameter list area and the part of the local variable space which; // contains copies of aggregates which are passed by value.; // Assign locations to all of the outgoing arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:133,variab,variable,133,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['variab'],['variable']
Modifiability,"// Count number of variables (separated by :)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TNtuple.cxx:19,variab,variables,19,tree/tree/src/TNtuple.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TNtuple.cxx,2,['variab'],['variables']
Modifiability,"// Count parameter for 'N' modifier. This variable specifies which file should; // match for extract/delete operations when there are multiple matches. This is; // 1-indexed. A value of 0 is invalid, and implies 'N' is not used.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-ar/llvm-ar.cpp:42,variab,variable,42,interpreter/llvm-project/llvm/tools/llvm-ar/llvm-ar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-ar/llvm-ar.cpp,1,['variab'],['variable']
Modifiability,"// Count the number of variables in cut; // Exclude last node since that does not lead to a cut",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleCut.cxx:23,variab,variables,23,tmva/tmva/src/RuleCut.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/RuleCut.cxx,1,['variab'],['variables']
Modifiability,// Count variables in global scope.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp:9,variab,variables,9,interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,1,['variab'],['variables']
Modifiability,"// Counter variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:11,variab,variable,11,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,1,['variab'],['variable']
Modifiability,// Counter variable to generate new LLVM IR variable names and wrapper function,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-fuzzer/proto-to-llvm/loop_proto_to_llvm.cpp:11,variab,variable,11,interpreter/llvm-project/clang/tools/clang-fuzzer/proto-to-llvm/loop_proto_to_llvm.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-fuzzer/proto-to-llvm/loop_proto_to_llvm.cpp,2,['variab'],['variable']
Modifiability,"// Create 'T* omp_parm;T omp_in;'. All references to 'omp_in' will; // be replaced by '*omp_parm' during codegen. This required because 'omp_in'; // uses semantics of argument handles by value, but it should be passed by; // reference. C lang does not support references, so pass all parameters as; // pointers.; // Create 'T omp_in;' variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:335,variab,variable,335,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,"// Create 'T* omp_parm;T omp_orig;'. All references to 'omp_orig' will; // be replaced by '*omp_parm' during codegen. This required because 'omp_orig'; // uses semantics of argument handles by value, but it should be passed by; // reference. C lang does not support references, so pass all parameters as; // pointers.; // Create 'T omp_orig;' variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:343,variab,variable,343,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,"// Create 'T* omp_parm;T omp_out;'. All references to 'omp_out' will; // be replaced by '*omp_parm' during codegen. This required because 'omp_out'; // uses semantics of argument handles by value, but it should be passed by; // reference. C lang does not support references, so pass all parameters as; // pointers.; // Create 'T omp_out;' variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:339,variab,variable,339,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,"// Create 'T* omp_parm;T omp_priv;'. All references to 'omp_priv' will; // be replaced by '*omp_parm' during codegen. This required because 'omp_priv'; // uses semantics of argument handles by value, but it should be passed by; // reference. C lang does not support references, so pass all parameters as; // pointers.; // Create 'T omp_priv;' variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:343,variab,variable,343,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,"// Create 2D adaptive kernel estimation pdf with mirroring and double bandwidth",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:13,adapt,adaptive,13,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['adapt'],['adaptive']
Modifiability,// Create ProfileFileName variable. Don't don't this for the; // context-sensitive instrumentation lowering: This lowering is after; // LTO/ThinLTO linking. Pass PGOInstrumentationGenCreateVar should; // have already create the variable before LTO/ThinLTO linking.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp:26,variab,variable,26,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,2,['variab'],['variable']
Modifiability,"// Create RooFit variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testActionHelpers.cxx:17,variab,variable,17,roofit/roofitcore/test/testActionHelpers.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testActionHelpers.cxx,1,['variab'],['variable']
Modifiability,// Create a .rodata datasec if the global variable is an initialized; // constant with private linkage and if it won't be in .rodata.str<#>; // and .rodata.cst<#> sections.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BTFDebug.cpp:42,variab,variable,42,interpreter/llvm-project/llvm/lib/Target/BPF/BTFDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BTFDebug.cpp,1,['variab'],['variable']
Modifiability,// Create a COMDAT variable INSTR_PROF_RAW_VERSION_VAR to make the runtime; // aware this is an ir_level profile so it can set the version flag.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PGOInstrumentation.cpp:19,variab,variable,19,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PGOInstrumentation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/PGOInstrumentation.cpp,1,['variab'],['variable']
Modifiability,"// Create a ConstantArray containing the address of each Variable within the; // kernel corresponding to LDSVarsToConstantGEP, or poison if that kernel; // does not allocate it; // TODO: Drop the ptrtoint conversion",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:57,Variab,Variable,57,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['Variab'],['Variable']
Modifiability,"// Create a VQMOVNB with undef top lanes, then ZExt into the top half with; // an AND. That extend will hopefully be removed if only the bottom bits are; // demanded (though a truncating store, for example).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:92,extend,extend,92,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['extend'],['extend']
Modifiability,"// Create a VQMOVNB with undef top lanes, then signed extended into the top; // half. That extend will hopefully be removed if only the bottom bits are; // demanded (though a truncating store, for example).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:54,extend,extended,54,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,2,['extend'],"['extend', 'extended']"
Modifiability,// Create a backing variable for the contents of VTable. The VTable may; // or may not include space for a pointer to RTTI data.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp:20,variab,variable,20,interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp,1,['variab'],['variable']
Modifiability,// Create a cleanup scope for the condition variable cleanups.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp:44,variab,variable,44,interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp,1,['variab'],['variable']
Modifiability,"// Create a clone of each global variable that has the default address space.; // The clone is created with the global address space specifier, and the pair; // of original global variable and its clone is placed in the GVMap for later; // use.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXGenericToNVVM.cpp:33,variab,variable,33,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXGenericToNVVM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXGenericToNVVM.cpp,2,['variab'],['variable']
Modifiability,"// Create a copy of an existing list. New variables cannot be added; // to a copied list. The variables in the copied list are independent; // of the original variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooArgList.h:42,variab,variables,42,roofit/roofitcore/inc/RooArgList.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooArgList.h,3,['variab'],['variables']
Modifiability,// Create a debug descriptor for the variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/Chapter9/toy.cpp:37,variab,variable,37,interpreter/llvm-project/llvm/examples/Kaleidoscope/Chapter9/toy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/Chapter9/toy.cpp,1,['variab'],['variable']
Modifiability,"// Create a dummy variable representing the init-capture. This is not actually; // used as a variable, and only exists as a way to name and refer to the; // init-capture.; // FIXME: Pass in separate source locations for '&' and identifier.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp:18,variab,variable,18,interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLambda.cpp,2,['variab'],['variable']
Modifiability,"// Create a dynamic lds variable with a name associated with the passed; // function that has the maximum alignment of any dynamic lds variable; // reachable from this kernel. Dynamic LDS is allocated after the static LDS; // allocation, possibly after alignment padding. The representative variable; // created here has the maximum alignment of any other dynamic variable; // reachable by that kernel. All dynamic LDS variables are allocated at the; // same address in each kernel in order to provide the documented aliasing; // semantics. Setting the alignment here allows this IR pass to accurately; // predict the exact constant at which it will be allocated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:24,variab,variable,24,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,5,['variab'],"['variable', 'variables']"
Modifiability,// Create a field for each -analyzer-config option.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/AnalyzerOptions.h:37,config,config,37,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/AnalyzerOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/AnalyzerOptions.h,1,['config'],['config']
Modifiability,"// Create a flag indicating whether the cleanup needs to call; // objc_exception_try_exit. This is true except when; // - no catches match and we're branching through the cleanup; // just to rethrow the exception, or; // - a catch matched and we're falling out of the catch handler.; // The setjmp-safety rule here is that we should always store to this; // variable in a place that dominates the branch through the cleanup; // without passing through any setjmps.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:358,variab,variable,358,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['variab'],['variable']
Modifiability,// Create a flag that is used to indicate when the NRVO was applied; // to this variable. Set it to zero to indicate that NRVO was not; // applied.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp:80,variab,variable,80,interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,1,['variab'],['variable']
Modifiability,// Create a global variable for this lifetime-extended temporary.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:19,variab,variable,19,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,2,"['extend', 'variab']","['extended', 'variable']"
Modifiability,// Create a global variable for this string,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:19,variab,variable,19,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['variab'],['variable']
Modifiability,// Create a global variable for this.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:19,variab,variable,19,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['variab'],['variable']
Modifiability,// Create a lexical block containing the variables and collect the; // lexical block information for the children.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp:41,variab,variables,41,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,1,['variab'],['variables']
Modifiability,// Create a list of all private variables for copyprivate.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:32,variab,variables,32,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['variab'],['variables']
Modifiability,"// Create a local instantiation scope for this variable template partial; // specialization, which will contain the instantiations of the template; // parameters.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:47,variab,variable,47,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,1,['variab'],['variable']
Modifiability,"// Create a local instantiation scope for this variable template, which; // will contain the instantiations of the template parameters.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:47,variab,variable,47,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,1,['variab'],['variable']
Modifiability,// Create a local thread-private variable to host the Reduce list; // from a remote lane.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:33,variab,variable,33,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['variab'],['variable']
Modifiability,"// Create a map of ""Register -> vector of <SlotIndex, DBG_VALUE>"".; // The SlotIndex is the slot index of the next non-debug instruction or the end; // of a BB, because DBG_VALUE's don't have slot index themselves.; // Adapted from RegisterCoalescer::buildVRegToDbgValueMap.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyRegColoring.cpp:219,Adapt,Adapted,219,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyRegColoring.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyRegColoring.cpp,1,['Adapt'],['Adapted']
Modifiability,// Create a new global variable for the ConstantStruct in the Module.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:23,variab,variable,23,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['variab'],['variable']
Modifiability,// Create a new global variable with enough space for a redzone.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp:23,variab,variable,23,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp,1,['variab'],['variable']
Modifiability,"// Create a new global variable.; // Note for the future: If we would ever like to do deferred emission of; // RTTI, check if emitting vtables opportunistically need any adjustment.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp:23,variab,variable,23,interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,1,['variab'],['variable']
Modifiability,// Create a new phi with the extended inputs.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp:29,extend,extended,29,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp,1,['extend'],['extended']
Modifiability,// Create a new rewriter to generate HTML.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp:16,rewrite,rewriter,16,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/HTMLDiagnostics.cpp,1,['rewrite'],['rewriter']
Modifiability,// Create a new scalar add outside of the loop and transform it to a splat; // by which loop variable can be incremented,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVEGatherScatterLowering.cpp:93,variab,variable,93,interpreter/llvm-project/llvm/lib/Target/ARM/MVEGatherScatterLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVEGatherScatterLowering.cpp,1,['variab'],['variable']
Modifiability,"// Create a new variable with appropriate strings. The error is calculated as; // RMS/(2*Sqrt(N)) which is only valid if the variable has a Gaussian distribution.; // Create RMS value holder",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:16,variab,variable,16,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,2,['variab'],['variable']
Modifiability,"// Create a new variable with appropriate strings. The error is calculated as; // RMS/Sqrt(N) which is generally valid.; // Create holder variable for mean",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx:16,variab,variable,16,roofit/roofitcore/src/RooAbsData.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsData.cxx,2,['variab'],['variable']
Modifiability,// Create a new variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:16,variab,variable,16,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['variab'],['variable']
Modifiability,// Create a read hazard for the allocas. This inhibits dead-store; // optimizations and forces the values to memory. This hazard is; // inserted before any 'throwing' calls in the protected scope to; // reflect the possibility that the variables might be read from the; // catch block if the call throws.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:236,variab,variables,236,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['variab'],['variables']
Modifiability,"// Create a return variable, if we're not void.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/NeonEmitter.cpp:19,variab,variable,19,interpreter/llvm-project/clang/utils/TableGen/NeonEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/NeonEmitter.cpp,1,['variab'],['variable']
Modifiability,// Create a rewriter object which we'll use to transform the code with.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:12,rewrite,rewriter,12,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,1,['rewrite'],['rewriter']
Modifiability,// Create a separate cleanup scope for the loop variable and body.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp:48,variab,variable,48,interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp,1,['variab'],['variable']
Modifiability,// Create a shuffle mask to widen the extended-from vector using poison; // values. The mask selects all of the values of the original vector followed; // by as many poison values as needed to create a vector of the same length; // as the inserted-to vector.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp:38,extend,extended-from,38,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineVectorOps.cpp,1,['extend'],['extended-from']
Modifiability,// Create a struct for each kernel for the non-module-scope variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:60,variab,variables,60,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability,// Create a struct instance containing LDSVarsToTransform and map from those; // variables to ConstantExprGEP; // Variables may be introduced to meet alignment requirements. No aliasing; // metadata is useful for these as they have no uses. Erased before return.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:81,variab,variables,81,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,2,"['Variab', 'variab']","['Variables', 'variables']"
Modifiability,// Create a struct to hold the ModuleScopeVariables; // Replace all uses of those variables from non-kernel functions with the; // new struct instance Replace only the uses from kernel functions that will; // allocate this instance. That is a space optimisation - kernels that use a; // subset of the module scope struct and do not need to allocate it for; // indirect calls will only allocate the subset they use (they do so as part; // of the per-kernel lowering).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:82,variab,variables,82,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability,// Create a variable initialization function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp:12,variab,variable,12,interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDeclCXX.cpp,1,['variab'],['variable']
Modifiability,"// Create a variable range in a vector (to be passed to the histogram; // constructor",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx:12,variab,variable,12,test/stressHistoFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/test/stressHistoFit.cxx,1,['variab'],['variable']
Modifiability,// Create a variable that binds the atexit to this shared object.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp:12,variab,variable,12,interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,1,['variab'],['variable']
Modifiability,// Create a variable to decide whether the cleanup needs to be run.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCleanup.cpp:12,variab,variable,12,interpreter/llvm-project/clang/lib/CodeGen/CGCleanup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCleanup.cpp,1,['variab'],['variable']
Modifiability,"// Create a vector of unit Gaussian variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx:36,variab,variables,36,hist/hist/src/TSVDUnfold.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TSVDUnfold.cxx,1,['variab'],['variables']
Modifiability,// Create a write hazard for the allocas. This inhibits folding; // loads across the hazard. This hazard is inserted at the; // beginning of the catch path to reflect the possibility that the; // variables might have been written within the protected scope.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:196,variab,variables,196,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['variab'],['variables']
Modifiability,// Create an LLJIT instance with an ObjectLinkingLayer as the base layer.; // We attach our plugin in to the newly created ObjectLinkingLayer before; // returning it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithObjectLinkingLayerPlugin/LLJITWithObjectLinkingLayerPlugin.cpp:92,plugin,plugin,92,interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithObjectLinkingLayerPlugin/LLJITWithObjectLinkingLayerPlugin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/OrcV2Examples/LLJITWithObjectLinkingLayerPlugin/LLJITWithObjectLinkingLayerPlugin.cpp,1,['plugin'],['plugin']
Modifiability,// Create an all-constant vector. The variable element in the old; // build vector is replaced by undef in the constant vector. Save the; // variable scalar element and its index for use in the insertelement.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:38,variab,variable,38,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,2,['variab'],['variable']
Modifiability,// Create an alloca for the variable in the entry block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp:28,variab,variable,28,interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,13,['variab'],['variable']
Modifiability,// Create an alloca for this variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp:29,variab,variable,29,interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,13,['variab'],['variable']
Modifiability,// Create an analysis class that is derived from `DataflowAnalysis`. This is an; // SFINAE adapter that allows us to call two different variants of constructor; // (either with or without the optional `Environment` parameter).; // FIXME: Make all classes derived from `DataflowAnalysis` take an `Environment`; // parameter in their constructor so that we can get rid of this abomination.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h:91,adapt,adapter,91,interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/FlowSensitive/DataflowAnalysis.h,1,['adapt'],['adapter']
Modifiability,// Create an array of all -analyzer-config command line options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/AnalyzerOptions.h:36,config,config,36,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/AnalyzerOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/AnalyzerOptions.h,1,['config'],['config']
Modifiability,"// Create an empty 3D-histogram with appropriate scale and labels for this variable (x); // and the specified y,z variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx:75,variab,variable,75,roofit/roofitcore/src/RooAbsRealLValue.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsRealLValue.cxx,2,['variab'],"['variable', 'variables']"
Modifiability,// Create an inferred register class that was missing from the .td files.; // Most properties will be inherited from the closest super-class after the; // class structure has been computed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.cpp:102,inherit,inherited,102,interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/CodeGenRegisters.cpp,1,['inherit'],['inherited']
Modifiability,// Create and configure the landing pad.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp:14,config,configure,14,interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp,1,['config'],['configure']
Modifiability,// Create and initialize the variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.cpp:29,variab,variable,29,interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.cpp,1,['variab'],['variable']
Modifiability,// Create and insert the PHI node for the induction variable in the; // specified loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp:52,variab,variable,52,interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ScalarEvolutionExpander.cpp,1,['variab'],['variable']
Modifiability,"// Create and label the variables; // used to store the SWeights",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SPlot.cxx:24,variab,variables,24,roofit/roostats/src/SPlot.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/src/SPlot.cxx,1,['variab'],['variables']
Modifiability,// Create another similar map of {storage : variables} that we'll pass to; // trackAssignments.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp:44,variab,variables,44,interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,1,['variab'],['variables']
Modifiability,// Create data variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp:15,variab,variable,15,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,1,['variab'],['variable']
Modifiability,// Create declarations for thread wrappers for all thread-local variables; // with non-discardable definitions in this translation unit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp:64,variab,variables,64,interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,1,['variab'],['variables']
Modifiability,"// Create empty object version of build config",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx:40,config,config,40,roofit/roofitcore/src/RooSimWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooSimWSTool.cxx,1,['config'],['config']
Modifiability,"// Create extended PDF model",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx:10,extend,extended,10,roofit/roofitcore/test/testTestStatistics.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx,1,['extend'],['extended']
Modifiability,// Create function that emits metadata for each device global variable entry;,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp:62,variab,variable,62,interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,1,['variab'],['variable']
Modifiability,// Create global variable debug descriptor.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp:17,variab,variable,17,interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,1,['variab'],['variable']
Modifiability,// Create global variable for CB.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGHLSLRuntime.cpp:17,variab,variable,17,interpreter/llvm-project/clang/lib/CodeGen/CGHLSLRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGHLSLRuntime.cpp,1,['variab'],['variable']
Modifiability,// Create global variable registration code.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/Offloading/OffloadWrapper.cpp:17,variab,variable,17,interpreter/llvm-project/llvm/lib/Frontend/Offloading/OffloadWrapper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/Offloading/OffloadWrapper.cpp,1,['variab'],['variable']
Modifiability,"// Create initail values of induction variable from Exec, Accumulator and; // insert branch instr to newly created ComputeBlockk",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp:38,variab,variable,38,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIISelLowering.cpp,1,['variab'],['variable']
Modifiability,// Create iteration variables for the generated loops.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:20,variab,variables,20,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variables']
Modifiability,// Create local scope for init statement and possible condition variable.; // Add destructor for init statement and condition variable.; // Store scope position for continue statement.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:64,variab,variable,64,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,2,['variab'],['variable']
Modifiability,// Create local scope for possible condition variable.; // Store scope position for continue statement.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:45,variab,variable,45,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,1,['variab'],['variable']
Modifiability,// Create local scope for possible condition variable.; // Store scope position. Add implicit destructor.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:45,variab,variable,45,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,2,['variab'],['variable']
Modifiability,// Create local scope for possible exception variable.; // Store scope position. Add implicit destructor.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:45,variab,variable,45,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,1,['variab'],['variable']
Modifiability,"// Create local scopes and destructors for range, begin and end variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp:64,variab,variables,64,interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/CFG.cpp,1,['variab'],['variables']
Modifiability,// Create local variable to hold the return value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.cpp:16,variab,variable,16,interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.cpp,1,['variab'],['variable']
Modifiability,// Create managed variable registration code.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/Offloading/OffloadWrapper.cpp:18,variab,variable,18,interpreter/llvm-project/llvm/lib/Frontend/Offloading/OffloadWrapper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/Offloading/OffloadWrapper.cpp,1,['variab'],['variable']
Modifiability,"// Create new output read handle. Set the Properties to FALSE, otherwise the; // child inherits the properties and, as a result, non-closeable handles to; // the pipes are created.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp:87,inherit,inherits,87,interpreter/cling/lib/Utils/PlatformWin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Utils/PlatformWin.cpp,1,['inherit'],['inherits']
Modifiability,// Create new shuffles around the extends / truncs / other leaves.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVELaneInterleavingPass.cpp:34,extend,extends,34,interpreter/llvm-project/llvm/lib/Target/ARM/MVELaneInterleavingPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVELaneInterleavingPass.cpp,1,['extend'],['extends']
Modifiability,"// Create one branch for each variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TNtuple.cxx:30,variab,variable,30,tree/tree/src/TNtuple.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TNtuple.cxx,2,['variab'],['variable']
Modifiability,// Create ordinary variable definition,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp:19,variab,variable,19,interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafety.cpp,1,['variab'],['variable']
Modifiability,// Create our live global variable list.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/StripSymbols.cpp:26,variab,variable,26,interpreter/llvm-project/llvm/lib/Transforms/IPO/StripSymbols.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/StripSymbols.cpp,1,['variab'],['variable']
Modifiability,"// Create physical IDs for column representations that extend fields of the regular header.; // First the physical columns then the alias columns.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/src/RNTupleSerialize.cxx:55,extend,extend,55,tree/ntuple/v7/src/RNTupleSerialize.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/src/RNTupleSerialize.cxx,1,['extend'],['extend']
Modifiability,"// Create study manager with separate generation and fit model. This configuration; // is set up to generate bad fits as the fit and generator model have different means; // and the mean parameter is not floating in the fit",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:69,config,configuration,69,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['config'],['configuration']
Modifiability,// Create surface variable registration code.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/Offloading/OffloadWrapper.cpp:18,variab,variable,18,interpreter/llvm-project/llvm/lib/Frontend/Offloading/OffloadWrapper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/Offloading/OffloadWrapper.cpp,1,['variab'],['variable']
Modifiability,// Create temp loop control variables with their init values to support; // non-rectangular loops.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:28,variab,variables,28,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['variab'],['variables']
Modifiability,"// Create template PDF based on data.; // For the extended case, we use a RooExtendPdf, and for the non-extended; // case a RooRealSumPdf so we can also test the binned likelihood code path.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx:50,extend,extended,50,roofit/roofitcore/test/testTestStatistics.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testTestStatistics.cxx,2,['extend'],['extended']
Modifiability,// Create texture variable registration code.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/Offloading/OffloadWrapper.cpp:18,variab,variable,18,interpreter/llvm-project/llvm/lib/Frontend/Offloading/OffloadWrapper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/Offloading/OffloadWrapper.cpp,1,['variab'],['variable']
Modifiability,// Create the DeclStmt that holds the iteration variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:48,variab,variable,48,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['variab'],['variable']
Modifiability,"// Create the Equal Predicates P2,P3:; // It is possible that the predicates P2 and/or P3 are computable at; // compile time due to StartVal and/or Accum being constants.; // If either one is, then we can check that now and escape if either P2; // or P3 is false.; // Construct the extended SCEV: (Ext ix (Trunc iy (Expr) to ix) to iy); // for each of StartVal and Accum",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:282,extend,extended,282,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['extend'],['extended']
Modifiability,"// Create the blocks that we're going to need:; // 1. A block for checking the zero-extended length exceeds 0; // 2. A block to check that the start and end addresses of a given array; // lie on the same page.; // 3. The SVE loop preheader.; // 4. The first SVE loop block.; // 5. The SVE loop increment block.; // 6. A block we can jump to from the SVE loop when a mismatch is found.; // 7. The first block of the scalar loop itself, containing PHIs , loads; // and cmp.; // 8. A scalar loop increment block to increment the PHIs and go back; // around the loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoopIdiomTransform.cpp:84,extend,extended,84,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoopIdiomTransform.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64LoopIdiomTransform.cpp,1,['extend'],['extended']
Modifiability,// Create the data variable (if it doesn't already exist).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp:19,variab,variable,19,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,1,['variab'],['variable']
Modifiability,"// Create the descriptor for the static variable, with or without; // constant initializers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp:40,variab,variable,40,interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,1,['variab'],['variable']
Modifiability,// Create the descriptor for the variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp:33,variab,variable,33,interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,4,['variab'],['variable']
Modifiability,// Create the extender.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCInstrInfo.cpp:14,extend,extender,14,interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCInstrInfo.cpp,1,['extend'],['extender']
Modifiability,// Create the finalization action associated with a variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp:52,variab,variable,52,interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,1,['variab'],['variable']
Modifiability,"// Create the formula, triggers an error if the formula doesn't compile; // correctly because the dangerous variable names haven't been treated right.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooFormula.cxx:108,variab,variable,108,roofit/roofitcore/test/testRooFormula.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooFormula.cxx,1,['variab'],['variable']
Modifiability,"// Create the fragile hazards. Note that this will not capture any; // of the allocas required for exception processing, but will; // capture the current basic block (which extends all the way to the; // setjmp call) as ""before the @try"".",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp:173,extend,extends,173,interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCMac.cpp,1,['extend'],['extends']
Modifiability,// Create the global TLS variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp:25,variab,variables,25,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemorySanitizer.cpp,1,['variab'],['variables']
Modifiability,// Create the global variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrOrderFile.cpp:21,variab,variables,21,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrOrderFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrOrderFile.cpp,1,['variab'],['variables']
Modifiability,// Create the guard variable if we don't already have it (as we; // might if we're double-emitting this function body).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp:20,variab,variable,20,interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,1,['variab'],['variable']
Modifiability,"// Create the guard variable with a zero-initializer. Just absorb linkage,; // visibility and dll storage class from the guarded variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp:20,variab,variable,20,interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp,2,['variab'],['variable']
Modifiability,"// Create the guard variable with a zero-initializer.; // Just absorb linkage, visibility and dll storage class from the guarded; // variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp:20,variab,variable,20,interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,2,['variab'],['variable']
Modifiability,// Create the imported variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp:23,variab,variable,23,interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,1,['variab'],['variable']
Modifiability,// Create the iteration variable for the unrolled loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:24,variab,variable,24,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,// Create the iteration variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:24,variab,variable,24,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['variab'],['variable']
Modifiability,// Create the load of the global variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64PromoteConstant.cpp:33,variab,variable,33,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64PromoteConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64PromoteConstant.cpp,1,['variab'],['variable']
Modifiability,"// Create the local class that will describe the lambda.; // FIXME: DependencyKind below is wrong when substituting inside a templated; // context that isn't a DeclContext (such as a variable template), or when; // substituting an unevaluated lambda inside of a function's parameter's type; // - as parameter types are not instantiated from within a function's DC. We; // use evaluation contexts to distinguish the function parameter case.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h:183,variab,variable,183,interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/TreeTransform.h,1,['variab'],['variable']
Modifiability,// Create the new global variable and replace all uses of; // the old global variable with the new one.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ModuleUtils.cpp:25,variab,variable,25,interpreter/llvm-project/llvm/lib/Transforms/Utils/ModuleUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/ModuleUtils.cpp,2,['variab'],['variable']
Modifiability,// Create the new global variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp:25,variab,variable,25,interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp,1,['variab'],['variable']
Modifiability,"// Create the new global variable. The contents of the allocated memory is; // undefined initially, so initialize with an undef value.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp:25,variab,variable,25,interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,1,['variab'],['variable']
Modifiability,// Create the pre-increment of the iteration variable. We can determine; // whether the increment will overflow based on the value of the array; // bound.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:45,variab,variable,45,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['variab'],['variable']
Modifiability,// Create the refactoring options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-refactor/ClangRefactor.cpp:14,refactor,refactoring,14,interpreter/llvm-project/clang/tools/clang-refactor/ClangRefactor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-refactor/ClangRefactor.cpp,1,['refactor'],['refactoring']
Modifiability,"// Create the search tree from the event collection; // using ONLY the variables specified in ""theVars""",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h:71,variab,variables,71,tmva/tmva/inc/TMVA/BinarySearchTree.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/BinarySearchTree.h,1,['variab'],['variables']
Modifiability,"// Create the set of normalization variables to use in the projection integrand",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:35,variab,variables,35,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,1,['variab'],['variables']
Modifiability,// Create the variable for the profile file name.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/InstrProf.cpp:14,variab,variable,14,interpreter/llvm-project/llvm/lib/ProfileData/InstrProf.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/InstrProf.cpp,2,['variab'],['variable']
Modifiability,// Create the variable template declaration itself.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp:14,variab,variable,14,interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTImporter.cpp,1,['variab'],['variable']
Modifiability,// Create the variable template partial specialization declaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:14,variab,variable,14,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,1,['variab'],['variable']
Modifiability,// Create the variable that will hold the construction vtable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGVTables.cpp:14,variab,variable,14,interpreter/llvm-project/clang/lib/CodeGen/CGVTables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGVTables.cpp,1,['variab'],['variable']
Modifiability,"// Create the variables and set their bin numbers. The range is tweaked; // such that each integer values falls in a different bin, starting from; // zero.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testParamHistFunc.cxx:14,variab,variables,14,roofit/histfactory/test/testParamHistFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testParamHistFunc.cxx,1,['variab'],['variables']
Modifiability,"// Create variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:10,variab,variable,10,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,2,['variab'],['variable']
Modifiability,"// Create variable argument",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx:10,variab,variable,10,roofit/roofitcore/src/RooFactoryWSTool.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooFactoryWSTool.cxx,1,['variab'],['variable']
Modifiability,// Create/init special variable for lastprivate conditionals.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:23,variab,variable,23,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['variab'],['variable']
Modifiability,// Creates a copy from temporarily variable(keeping value of ByVal argument); // into the corresponding function argument location.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp:35,variab,variable,35,interpreter/llvm-project/llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp,1,['variab'],['variable']
Modifiability,// Creates a copy of contents of ByValue operand of the specified; // call instruction into the newly created temporarily variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp:122,variab,variable,122,interpreter/llvm-project/llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/TailRecursionElimination.cpp,1,['variab'],['variable']
Modifiability,// Creates a reference to the iteration variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:40,variab,variable,40,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['variab'],['variable']
Modifiability,"// Creating RooKeysPdf and RooNDKeysPdf with adaptive kernel and no; // mirroring for both weighted and unweighted datasets.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooKeysPdf.cxx:45,adapt,adaptive,45,roofit/roofit/test/testRooKeysPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/testRooKeysPdf.cxx,1,['adapt'],['adaptive']
Modifiability,"// Creating a RooDataSet from an RDataFrame should be consistent with the; // creation from a TTree. The construction from a TTree discards entries; // outside the variable definition range, so we have to do that too (see; // also RooTreeDataStore::loadValues).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsDataHelper.cxx:164,variab,variable,164,roofit/roofitcore/src/RooAbsDataHelper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsDataHelper.cxx,1,['variab'],['variable']
Modifiability,"// CumulUsedSizes[0];; // We have at least one leaf with a variable size:; // Reset the registers.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx:59,variab,variable,59,tree/treeplayer/src/TTreeFormulaManager.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx,1,['variab'],['variable']
Modifiability,// CurPtr - Cache BufferPtr in an automatic variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Lexer.cpp:44,variab,variable,44,interpreter/llvm-project/clang/lib/Lex/Lexer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Lex/Lexer.cpp,2,['variab'],['variable']
Modifiability,"// Current variable does not fit in single fragment,; // emit a fragment expression.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp:11,variab,variable,11,interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,1,['variab'],['variable']
Modifiability,"// Current variable ends before start of fragment, ignore.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp:11,variab,variable,11,interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,1,['variab'],['variable']
Modifiability,"// Current variable fits in (not greater than) the fragment,; // does not need fragment expression.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp:11,variab,variable,11,interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,1,['variab'],['variable']
Modifiability,"// Currently DS is an unused variable but we'll need it when; // non-single decls are implemented, where the pointee type name; // and the '*' are spread around the place.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp:29,variab,variable,29,interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp,1,['variab'],['variable']
Modifiability,"// Currently all users of a global variable have to be non-volatile loads; // or stores of the global type, and the global cannot be stored itself.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueLatticeUtils.cpp:35,variab,variable,35,interpreter/llvm-project/llvm/lib/Analysis/ValueLatticeUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueLatticeUtils.cpp,1,['variab'],['variable']
Modifiability,// Currently only Text and Extended Binary format are supported for CSSPGO.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/SampleProfWriter.cpp:27,Extend,Extended,27,interpreter/llvm-project/llvm/lib/ProfileData/SampleProfWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ProfileData/SampleProfWriter.cpp,1,['Extend'],['Extended']
Modifiability,"// Currently we assume the register width on the target matches the pointer; // width, we can introduce a new variable for this if/when some target wants; // it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h:110,variab,variable,110,interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/TargetInfo.h,1,['variab'],['variable']
Modifiability,"// Currently we disable the optimization for classes with virtual; // bases because (1) the addresses of parameter variables need to be; // consistent across all initializers but (2) the delegate function; // call necessarily creates a second copy of the parameter variable.; //; // The limiting example (purely theoretical AFAIK):; // struct A { A(int &c) { c++; } };; // struct B : virtual A {; // B(int count) : A(count) { printf(""%d\n"", count); }; // };; // ...although even this example could in principle be emitted as a; // delegation since the address of the parameter doesn't escape.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGClass.cpp:115,variab,variables,115,interpreter/llvm-project/clang/lib/CodeGen/CGClass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGClass.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,"// Currently we only handle (not wide) string literals. It is possible to do; // better, either by looking at references to const variables, or by doing; // real flow analysis.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp:130,variab,variables,130,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp,1,['variab'],['variables']
Modifiability,"// Currently we only handle string literals. It is possible to do better,; // either by looking at references to const variables, or by doing real; // flow analysis.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp:119,variab,variables,119,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp,1,['variab'],['variables']
Modifiability,"// Currently, if Cling sees the ""key function"" of a virtual class, it; // emits typeinfo and vtable variables in every transaction llvm::Module; // that reference them. Turn them into weak linkage to avoid duplicate; // symbol errors from the JIT linker.; // FIXME: This is a hack, we should teach the frontend to emit these; // only once, or mark all duplicates as available_externally (if that; // improves performance due to optimizations).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:100,variab,variables,100,interpreter/cling/lib/Interpreter/BackendPasses.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/BackendPasses.cpp,1,['variab'],['variables']
Modifiability,"// Currently, this mechanism hasn't been extended to work with gcroot.; // There's no reason it couldn't be, but I haven't thought about the; // implications much.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp:41,extend,extended,41,interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp,1,['extend'],['extended']
Modifiability,"// Currently, to simplify the implementation, the Loop induction variable must; // start at zero and increment with a step size of one.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp:65,variab,variable,65,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFlatten.cpp,1,['variab'],['variable']
Modifiability,"// Currently, we get G_PTR_ADD only as a result of translating; // global variables, initialized with constant expressions like GV + Const; // (see test opencl/basic/progvar_prog_scope_init.ll).; // TODO: extend the handler once we have other cases.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVInstructionSelector.cpp:74,variab,variables,74,interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVInstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SPIRV/SPIRVInstructionSelector.cpp,2,"['extend', 'variab']","['extend', 'variables']"
Modifiability,"// Custom lower MGATHER/VP_GATHER to a legalized form for RVV. It will then be; // matched to a RVV indexed load. The RVV indexed load instructions only; // support the ""unsigned unscaled"" addressing mode; indices are implicitly; // zero-extended or truncated to XLEN and are treated as byte offsets. Any; // signed or scaled indexing is extended to the XLEN value type and scaled; // accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:238,extend,extended,238,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,2,['extend'],['extended']
Modifiability,"// Custom lower MSCATTER/VP_SCATTER to a legalized form for RVV. It will then be; // matched to a RVV indexed store. The RVV indexed store instructions only; // support the ""unsigned unscaled"" addressing mode; indices are implicitly; // zero-extended or truncated to XLEN and are treated as byte offsets. Any; // signed or scaled indexing is extended to the XLEN value type and scaled; // accordingly.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:242,extend,extended,242,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,2,['extend'],['extended']
Modifiability,// Custom lower lane accesses to expand out variable indices,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp:44,variab,variable,44,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp,1,['variab'],['variable']
Modifiability,// Custom lowering for extending v4i8 vector loads.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:23,extend,extending,23,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['extend'],['extending']
Modifiability,// Custom split this so we can extend i8/i16->i32 invec. This is better; // since sign_extend_inreg i8/i16->i64 requires an extend to i32 using; // sra. Then extending from i32 to i64 using pcmpgt. By custom splitting; // we allow the sra from the extend to i32 to be shared by the split.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:31,extend,extend,31,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,4,['extend'],"['extend', 'extending']"
Modifiability,"// Custom-lower a SPLAT_VECTOR_PARTS where XLEN<SEW, as the SEW element type is; // illegal (currently only vXi64 RV32).; // FIXME: We could also catch non-constant sign-extended i32 values and lower; // them to VMV_V_X_VL.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:170,extend,extended,170,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,1,['extend'],['extended']
Modifiability,// Cutoff for large variables to prevent expensive bitvector operations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp:20,variab,variables,20,interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,1,['variab'],['variables']
Modifiability,// D could be either a kernel or a variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCUDANV.cpp:35,variab,variable,35,interpreter/llvm-project/clang/lib/CodeGen/CGCUDANV.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCUDANV.cpp,1,['variab'],['variable']
Modifiability,"// D e f i n e d n o n - r e c t a n g u l a r r e g i o n R i n ( x , y , z ); // -------------------------------------------------------------------------------------; //; // R = Z[0 - 0.1*Y^2] * Y[0.1*X - 0.9*X] * X[0 - 10]; //; // Construct range parameterized in ""R"" in y [ 0.1*x, 0.9*x ]",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h:251,parameteriz,parameterized,251,roofit/roofitcore/test/stressRooFit_tests.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/stressRooFit_tests.h,1,['parameteriz'],['parameterized']
Modifiability,// D must be variable template id.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:13,variab,variable,13,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['variab'],['variable']
Modifiability,"// DBG_VALUE loc, offset, variable, expr; // DBG_VALUE_LIST variable, expr, locs...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp:26,variab,variable,26,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,2,['variab'],['variable']
Modifiability,// DIAssignID is experimental feature to track variable location in IR..; // FIXME: translate DIAssignID to debug info DXIL supports.; // See https://github.com/llvm/llvm-project/issues/58989,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/DirectX/DXILWriter/DXILBitcodeWriter.cpp:47,variab,variable,47,interpreter/llvm-project/llvm/lib/Target/DirectX/DXILWriter/DXILBitcodeWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/DirectX/DXILWriter/DXILBitcodeWriter.cpp,1,['variab'],['variable']
Modifiability,"// DSMTEST; // problem with call of REGISTER_METHOD macro ...; // ClassifierDataLoader::DestroyInstance();; // Types::DestroyInstance();; //Tools::DestroyInstance();; //Config::DestroyInstance();",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataLoader.cxx:169,Config,Config,169,tmva/tmva/src/DataLoader.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/DataLoader.cxx,1,['Config'],['Config']
Modifiability,// DW_OP_const_type is variable-length and has 3; // operands. Thus far we only support 2.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp:23,variab,variable-length,23,interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Classic/DWARFLinker.cpp,2,['variab'],['variable-length']
Modifiability,// Darwin prefers to have references to thread local variables to go through; // the thread wrapper instead of directly referencing the backing variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp:53,variab,variables,53,interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,// Darwin's kernel doesn't support guard variables; just die if we; // try to use them.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:41,variab,variables,41,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['variab'],['variables']
Modifiability,"// Data members of a namespace are global variable which were; // considered to be 'static' in the CINT (and thus ROOT) scheme.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:42,variab,variable,42,core/metacling/src/TClingDataMemberInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx,1,['variab'],['variable']
Modifiability,// Data of the actually merged replacement. FilePath and Offset aren't changed; // as the element is only extended to the right.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Core/Replacement.cpp:106,extend,extended,106,interpreter/llvm-project/clang/lib/Tooling/Core/Replacement.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Core/Replacement.cpp,1,['extend'],['extended']
Modifiability,"// Dataset manager instance via plug-in",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx:32,plug-in,plug-in,32,proof/proof/src/TProofLite.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofLite.cxx,2,['plug-in'],['plug-in']
Modifiability,// Deal with undef uses immediately - simply rewrite the src operand.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp:45,rewrite,rewrite,45,interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,1,['rewrite'],['rewrite']
Modifiability,"// Deallocate character arrays allocated for variable-length array columns",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx:45,variab,variable-length,45,graf2d/fitsio/src/TFITS.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/fitsio/src/TFITS.cxx,1,['variab'],['variable-length']
Modifiability,// Debug configuration container,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:9,config,configuration,9,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['config'],['configuration']
Modifiability,"// Debug intrinsics in the new function need to be updated in one of two; // ways:; // 1) They need to be deleted, because they describe a value in the old; // function.; // 2) They need to point to fresh metadata, e.g. because they currently; // point to a variable in the wrong scope.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeExtractor.cpp:258,variab,variable,258,interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeExtractor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/CodeExtractor.cpp,1,['variab'],['variable']
Modifiability,// Debug variable has special operand to check it's not hoisted.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SpeculativeExecution.cpp:9,variab,variable,9,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SpeculativeExecution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SpeculativeExecution.cpp,1,['variab'],['variable']
Modifiability,"// DebugInfo variable locations -- if there's an instruction number for the; // allocation (i.e., DYN_ALLOC_*), substitute it for the instruction that; // modifies SP.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp:13,variab,variable,13,interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FrameLowering.cpp,1,['variab'],['variable']
Modifiability,// Decide the preferred extend type for a value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FunctionLoweringInfo.cpp:24,extend,extend,24,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FunctionLoweringInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/FunctionLoweringInfo.cpp,1,['extend'],['extend']
Modifiability,"// Decide what flavour of variable location debug-info will be used, before; // we change the optimisation level.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp:26,variab,variable,26,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,1,['variab'],['variable']
Modifiability,"// Decides on the best configuration of filter(s) to use in order to decode; // the instructions. A conflict of instructions may occur, in which case we; // dump the conflict set to the standard error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/DecoderEmitter.cpp:23,config,configuration,23,interpreter/llvm-project/llvm/utils/TableGen/DecoderEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/DecoderEmitter.cpp,1,['config'],['configuration']
Modifiability,"// Decl could represent:; // - a VarDecl* that represents the variable that was captured or the; // init-capture.; // - or, is a nullptr and Capture_This is set in Bits if this represents a; // capture of '*this' by value or reference.; // - or, is a nullptr and Capture_This is not set in Bits if this represents; // a capture of a VLA type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/LambdaCapture.h:62,variab,variable,62,interpreter/llvm-project/clang/include/clang/AST/LambdaCapture.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/LambdaCapture.h,1,['variab'],['variable']
Modifiability,// Declaration fragments of an array-typed variable have two parts:; // 1. the element type of the array that appears before the variable name;; // 2. array brackets `[(0-9)?]` that appear after the variable name.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ExtractAPI/DeclarationFragments.cpp:43,variab,variable,43,interpreter/llvm-project/clang/lib/ExtractAPI/DeclarationFragments.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ExtractAPI/DeclarationFragments.cpp,3,['variab'],['variable']
Modifiability,"// Declare (or get) global variables __THREW__, __threwValue, and; // getTempRet0/setTempRet0 function which are used in common for both; // exception handling and setjmp/longjmp handling",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp:27,variab,variables,27,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,1,['variab'],['variables']
Modifiability,"// Declare a bunch of static data sets that we'll select between below. These; // are specifically designed to always refer to string literals to avoid any; // lifetime or initialization issues.; //; // The *Triples variables hard code some triples so that, for example,; // --target=aarch64 (incomplete triple) can detect lib/aarch64-linux-gnu.; // They are not needed when the user has correct LLVM_DEFAULT_TARGET_TRIPLE; // and always uses the full --target (e.g. --target=aarch64-linux-gnu). The; // lists should shrink over time. Please don't add more elements to *Triples.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp:216,variab,variables,216,interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Gnu.cpp,1,['variab'],['variables']
Modifiability,// Declare an external variable that will pull in the runtime initialization.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp:23,variab,variable,23,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/InstrProfiling.cpp,1,['variab'],['variable']
Modifiability,"// Declare option and bind it to a variable",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Configurable.h:35,variab,variable,35,tmva/tmva/inc/TMVA/Configurable.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Configurable.h,1,['variab'],['variable']
Modifiability,"// Declare variables x,mean,sigma with associated name, title, initial value and allowed range",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testAddPdf.cxx:11,variab,variables,11,roofit/roofit/test/vectorisedPDFs/testAddPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofit/test/vectorisedPDFs/testAddPdf.cxx,10,['variab'],['variables']
Modifiability,"// Declaring Internal Functions for Keras layers which don't have activation as an additional attribute",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx:42,layers,layers,42,tmva/pymva/src/RModelParser_Keras.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/pymva/src/RModelParser_Keras.cxx,1,['layers'],['layers']
Modifiability,"// Decode Constructor string (or TString) and fill variable name std::vector",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Reader.h:51,variab,variable,51,tmva/tmva/inc/TMVA/Reader.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/Reader.h,1,['variab'],['variable']
Modifiability,// Decode the disp field for a hash store or hash check operation.; // The field is composed of an immediate value that is 6 bits; // and covers the range -8 to -512. The immediate is always negative and 2s; // complement which is why we sign extend a 7 bit value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/Disassembler/PPCDisassembler.cpp:243,extend,extend,243,interpreter/llvm-project/llvm/lib/Target/PowerPC/Disassembler/PPCDisassembler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/Disassembler/PPCDisassembler.cpp,1,['extend'],['extend']
Modifiability,"// DecodePALIGNRMask returns the shuffle mask of vpalign instruction.; // vpalign works according to lanes; // Where Lane is the # of lanes in a register:; // VectorWide = 128 => Lane = 1; // VectorWide = 256 => Lane = 2; // For Lane = 1 shuffle pattern is: {DiffToJump,...,DiffToJump+VF-1}.; // For Lane = 2 shuffle pattern is:; // {DiffToJump,...,VF/2-1,VF,...,DiffToJump+VF-1}.; // Imm variable sets the offset amount. The result of the; // function is stored inside ShuffleMask vector and it built as described in; // the begin of the description. AlignDirection is a boolean that indicates the; // direction of the alignment. (false - align to the ""right"" side while true -; // align to the ""left"" side)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InterleavedAccess.cpp:389,variab,variable,389,interpreter/llvm-project/llvm/lib/Target/X86/X86InterleavedAccess.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86InterleavedAccess.cpp,1,['variab'],['variable']
Modifiability,"// Decomposes \p V into a constant offset + list of pairs { Coefficient,; // Variable } where Coefficient * Variable. The sum of the constant offset and; // pairs equals \p V.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp:77,Variab,Variable,77,interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/ConstraintElimination.cpp,2,['Variab'],['Variable']
Modifiability,// Decrement loop variable by UnitSize.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp:18,variab,variable,18,interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMISelLowering.cpp,1,['variab'],['variable']
Modifiability,// Deduce any 'auto's in the loop variable as 'DependentTy'. We'll fill; // them in properly when we instantiate the loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:34,variab,variable,34,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,1,['variab'],['variable']
Modifiability,"// Deduce the type for the iterator variable now rather than leaving it to; // AddInitializerToDecl, so we can produce a more suitable diagnostic.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:36,variab,variable,36,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,1,['variab'],['variable']
Modifiability,// Default address space for global variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DataLayout.cpp:36,variab,variables,36,interpreter/llvm-project/llvm/lib/IR/DataLayout.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DataLayout.cpp,1,['variab'],['variables']
Modifiability,"// Default constructor implementation.; // type is not used - needed for consistency with other minimizer plug-ins",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearMinimizer.cxx:106,plug-in,plug-ins,106,math/minuit/src/TLinearMinimizer.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/math/minuit/src/TLinearMinimizer.cxx,1,['plug-in'],['plug-ins']
Modifiability,"// Default values for configuration options",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/inc/TGHtml.h:22,config,configuration,22,gui/guihtml/inc/TGHtml.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/guihtml/inc/TGHtml.h,1,['config'],['configuration']
Modifiability,"// Default weight value. Used when we don't have information about the edge.; // TODO: DEFAULT_WEIGHT makes sense during static predication, when none of; // the successors have a weight yet. But it doesn't make sense when providing; // weight to an edge that may have siblings with non-zero weights. This can; // be handled various ways, but it's probably fine for an edge with unknown; // weight to just ""inherit"" the non-zero weight of an adjacent successor.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBranchProbabilityInfo.h:407,inherit,inherit,407,interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBranchProbabilityInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/MachineBranchProbabilityInfo.h,1,['inherit'],['inherit']
Modifiability,// Default-initialize a variable that is a non-trivial struct or an array of; // such structure.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGNonTrivialStruct.cpp:24,variab,variable,24,interpreter/llvm-project/clang/lib/CodeGen/CGNonTrivialStruct.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGNonTrivialStruct.cpp,1,['variab'],['variable']
Modifiability,"// Default-initialize the implicit variable. This initialization will be; // trivial in almost all cases, except if a union member has an in-class; // initializer:; // union { int n = 0; };",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:35,variab,variable,35,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,// Define Objective-C instance variable records.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/Record.h:31,variab,variable,31,interpreter/llvm-project/llvm/include/llvm/TextAPI/Record.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/Record.h,1,['variab'],['variable']
Modifiability,"// Define a partial specialization to handle things we cannot inherit from. In; // this case, we store an instance through containment, and overload operators; // to get at the value.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h:62,inherit,inherit,62,interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,1,['inherit'],['inherit']
Modifiability,"// Define alternate numeric integrator configuration for bin integration; // We expect bin contents to very only very slowly so a non-adaptive; // Gauss-Kronrod integrator is expected to perform well (if RooFitMore is available)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx:39,config,configuration,39,roofit/roofitcore/src/RooXYChi2Var.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooXYChi2Var.cxx,2,"['adapt', 'config']","['adaptive', 'configuration']"
Modifiability,"// Define configuration for this method",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:10,config,configuration,10,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,14,['config'],['configuration']
Modifiability,"// Define how to hold a class type object, such as a string. Since we can; // inherit from a class, we do so. This makes us exactly compatible with the; // object in all cases that it is used.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h:78,inherit,inherit,78,interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,1,['inherit'],['inherit']
Modifiability,"// Define how to hold a class type object, such as a string.; // Originally this code inherited from std::vector. In transitioning to a new; // API for command line options we should change this. The new implementation; // of this list_storage specialization implements the minimum subset of the; // std::vector API required for all the current clients.; //; // FIXME: Reduce this API to a more narrow subset of std::vector; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h:86,inherit,inherited,86,interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,1,['inherit'],['inherited']
Modifiability,"// Define how to hold bits. Since we can inherit from a class, we do so.; // This makes us exactly compatible with the bits in all cases that it is used.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h:41,inherit,inherit,41,interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/CommandLine.h,1,['inherit'],['inherit']
Modifiability,// Define non-member operator<< so that Output can stream out a polymorphic; // type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/YAMLTraits.h:64,polymorphi,polymorphic,64,interpreter/llvm-project/llvm/include/llvm/Support/YAMLTraits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/YAMLTraits.h,1,['polymorphi'],['polymorphic']
Modifiability,// Define non-member operator>> so that Input can stream in a polymorphic type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/YAMLTraits.h:62,polymorphi,polymorphic,62,interpreter/llvm-project/llvm/include/llvm/Support/YAMLTraits.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/YAMLTraits.h,1,['polymorphi'],['polymorphic']
Modifiability,"// Define the type id and initialize with a non-zero value.; // Initializing with a zero value means the variable can end up in either the; // .data or the .bss section. This can lead to multiple definition linker errors; // when some object files are compiled with a compiler that puts the variable; // into .data but they are linked to object files from a different compiler that; // put the variable into .bss. To prevent this issue from happening, initialize; // the variable with a non-zero value, which forces it to land in .data (because; // .bss is zero-initialized).; // See also https://github.com/llvm/llvm-project/issues/62270",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Any.h:105,variab,variable,105,interpreter/llvm-project/llvm/include/llvm/ADT/Any.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Any.h,4,['variab'],['variable']
Modifiability,// Defined static variables that are members of an exported base; // class must be marked export too.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:18,variab,variables,18,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['variab'],['variables']
Modifiability,"// Defines Objective-C record types that have assigned methods, properties,; // instance variable (ivars) and protocols.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/Record.h:89,variab,variable,89,interpreter/llvm-project/llvm/include/llvm/TextAPI/Record.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/Record.h,1,['variab'],['variable']
Modifiability,"// Defines broadly non-objc records, categorized as variables or functions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/Record.h:52,variab,variables,52,interpreter/llvm-project/llvm/include/llvm/TextAPI/Record.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/TextAPI/Record.h,1,['variab'],['variables']
Modifiability,// Defines the default appearance (Needed for variable Text),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js:46,variab,variable,46,js/build/jsroot.js,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/js/build/jsroot.js,2,['variab'],['variable']
Modifiability,// Delay instantiation of the initializer for variable template; // specializations or inline static data members until a definition of the; // variable is needed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:46,variab,variable,46,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,2,['variab'],['variable']
Modifiability,"// Delayed globalization for variable length declarations. This ensures that; // the expression representing the length has been emitted and can be used; // by the definition of the VLA. Since this is an escaped declaration, in; // OpenMP we have to use a call to __kmpc_alloc_shared(). The matching; // deallocation call to __kmpc_free_shared() is emitted later.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp:29,variab,variable,29,interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,1,['variab'],['variable']
Modifiability,// Delegates to an inferior filter chooser for further processing on this; // group of instructions whose segment values are variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/DecoderEmitter.cpp:125,variab,variable,125,interpreter/llvm-project/llvm/utils/TableGen/DecoderEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/DecoderEmitter.cpp,1,['variab'],['variable']
Modifiability,// Delete Declare because the variable location is now tracked using; // assignment tracking.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp:30,variab,variable,30,interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,1,['variab'],['variable']
Modifiability,"// Delete all configuration data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:14,config,configuration,14,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,2,['config'],['configuration']
Modifiability,"// Delete all objects in the sandbox",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:29,sandbox,sandbox,29,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,1,['sandbox'],['sandbox']
Modifiability,"// Delete all variables in our list if we own them",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx:14,variab,variables,14,roofit/roofitcore/src/RooAbsCollection.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsCollection.cxx,1,['variab'],['variables']
Modifiability,// Delete dbg.declares for variables now tracked with assignment tracking.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp:27,variab,variables,27,interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,1,['variab'],['variables']
Modifiability,"// Delete old integrator-specific configuration data",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx:34,config,configuration,34,roofit/roofitcore/src/RooNumGenConfig.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooNumGenConfig.cxx,2,['config'],['configuration']
Modifiability,// Delete unused global variables and functions,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp:24,variab,variables,24,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,1,['variab'],['variables']
Modifiability,"// DeleteGlobalInitializer - ""Remove"" the global variable by deleting its; // initializer, making it external.; //",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/BugDriver.h:49,variab,variable,49,interpreter/llvm-project/llvm/tools/bugpoint/BugDriver.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/bugpoint/BugDriver.h,1,['variab'],['variable']
Modifiability,// Deleted functions do not require rewrites.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp:36,rewrite,rewrites,36,interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/Attributor.cpp,1,['rewrite'],['rewrites']
Modifiability,"// Demangle in a portable way the name.; // IMPORTANT: The caller is responsible for freeing the returned const char*",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TClassEdit.h:17,portab,portable,17,core/foundation/inc/TClassEdit.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/foundation/inc/TClassEdit.h,1,['portab'],['portable']
Modifiability,"// Depending on the configuration we expect:; // TreePlayer Gpad Graf Graf3d Hist [Imt] [MathCore] MultiProc Net Tree [tbb]..; // FIXME: We should add a generic gtest regex matcher and use a regex here.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx:20,config,configuration,20,core/metacling/test/TClingTests.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/test/TClingTests.cxx,1,['config'],['configuration']
Modifiability,// Depth threshold above which we can efficiently use variable mask shuffles.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:54,variab,variable,54,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['variab'],['variable']
Modifiability,"// Derive the intrinsic's polymorphic name, by removing components from the; // full name as specified by its 'pnt' member ('polymorphic name type'),; // which indicates how many type suffixes to remove, and any other piece of; // the name that should be removed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:26,polymorphi,polymorphic,26,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,2,['polymorphi'],['polymorphic']
Modifiability,"// Derived: public Mid; Mid : protected Base: Derived inherits protected Base?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:54,inherit,inherits,54,core/metacling/src/TClingBaseClassInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx,1,['inherit'],['inherits']
Modifiability,"// Description of a source-code edit, expressed in terms of an AST node.; // Includes: an ID for the (bound) node, a selector for source related to the; // node, a replacement and, optionally, an explanation for the edit.; //; // * Target: the source code impacted by the rule. This identifies an AST node,; // or part thereof (\c Part), whose source range indicates the extent of the; // replacement applied by the replacement term. By default, the extent is the; // node matched by the pattern term (\c NodePart::Node). Target's are typed; // (\c Kind), which guides the determination of the node extent.; //; // * Replacement: a function that produces a replacement string for the target,; // based on the match result.; //; // * Note: (optional) a note specifically for this edit, potentially referencing; // elements of the match. This will be displayed to the user, where possible;; // for example, in clang-tidy diagnostics. Use of notes should be rare --; // explanations of the entire rewrite should be set in the rule; // (`RewriteRule::Explanation`) instead. Notes serve the rare cases wherein; // edit-specific diagnostics are required.; //; // `ASTEdit` should be built using the `change` convenience functions. For; // example,; // \code; // changeTo(name(fun), cat(""Frodo"")); // \endcode; // Or, if we use Stencil for the TextGenerator:; // \code; // using stencil::cat;; // changeTo(statement(thenNode), cat(""{"", thenNode, ""}"")); // changeTo(callArgs(call), cat(x, "","", y)); // \endcode; // Or, if you are changing the node corresponding to the rule's matcher, you can; // use the single-argument override of \c change:; // \code; // changeTo(cat(""different_expr"")); // \endcode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/RewriteRule.h:994,rewrite,rewrite,994,interpreter/llvm-project/clang/include/clang/Tooling/Transformer/RewriteRule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/RewriteRule.h,2,"['Rewrite', 'rewrite']","['RewriteRule', 'rewrite']"
Modifiability,"// Descriptor; create and return a new, possibly bound, method proxy. This method; // has evolved with versions of python as follows:; //; // Python version | Action; // <- py2.7 | bound methods need to be first-class objects, so create a new; // | method object if self is not nullptr or Py_None; // py3.0-py3.7 | bound methods are no longer a language requirement, but; // | still supported: for convenience, retain old behavior; // py3.8 <= | vector calls no longer call the descriptor, so when it is; // | called, the method is likely stored, so should be new object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:90,evolve,evolved,90,bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx,1,['evolve'],['evolved']
Modifiability,"// Deserialize N events from an input buffer. Since chars are stored unchanged, there; // is nothing to do here but return true if we don't have variable-length arrays.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TLeafB.h:145,variab,variable-length,145,tree/tree/inc/TLeafB.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/inc/TLeafB.h,2,['variab'],['variable-length']
Modifiability,// Destroy the element variable now.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp:23,variab,variable,23,interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,1,['variab'],['variable']
Modifiability,"// Detect cases where Hi is (SRA Lo, 31) which means Hi is Lo sign extended.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:67,extend,extended,67,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,1,['extend'],['extended']
Modifiability,// Detect collisions between string and numeric variables when the former; // is created later than the latter.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp:48,variab,variables,48,interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,1,['variab'],['variables']
Modifiability,// Detect collisions between string and numeric variables when the latter; // is created later than the former.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp:48,variab,variables,48,interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,1,['variab'],['variables']
Modifiability,// Detect collisions between string and numeric variables when the; // former is created later than the latter.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp:48,variab,variables,48,interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,1,['variab'],['variables']
Modifiability,"// Detect whether RD is a bitfield extract (sign- or zero-extended) of; // some register from the AVs set. Create a new corresponding instruction; // at the location of MI. The intent is to recognize situations where; // a sequence of instructions performs an operation that is equivalent to; // an extract operation, such as a shift left followed by a shift right.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp:58,extend,extended,58,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitSimplify.cpp,1,['extend'],['extended']
Modifiability,// Detects if a memory operation has an erroneous base register modification.; // Memory operations are detected by matching the types of operands.; //; // TODO: This test is focussed on one specific instance (ld/st).; // Extend it to handle more cases or be more robust.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Lanai/AsmParser/LanaiAsmParser.cpp:222,Extend,Extend,222,interpreter/llvm-project/llvm/lib/Target/Lanai/AsmParser/LanaiAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Lanai/AsmParser/LanaiAsmParser.cpp,1,['Extend'],['Extend']
Modifiability,"// Determine Y variable (default is weight, if present)",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:15,variab,variable,15,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,1,['variab'],['variable']
Modifiability,"// Determine an insertion point for the loop induction variable increment. It; // must dominate all the post-inc comparisons we just set up, and it must; // dominate the loop latch edge.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:55,variab,variable,55,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,1,['variab'],['variable']
Modifiability,// Determine if all users of the induction variable are scalar after; // vectorization.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:43,variab,variable,43,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['variab'],['variable']
Modifiability,// Determine if all users of the induction variable are uniform after; // vectorization.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:43,variab,variable,43,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['variab'],['variable']
Modifiability,// Determine if all users of the induction variable update instruction are; // scalar after vectorization.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:43,variab,variable,43,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['variab'],['variable']
Modifiability,// Determine if all users of the induction variable update instruction are; // uniform after vectorization.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:43,variab,variable,43,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['variab'],['variable']
Modifiability,// Determine if references to thread_local global variables can be made; // directly or require access through a thread wrapper function.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCXXABI.h:50,variab,variables,50,interpreter/llvm-project/clang/lib/CodeGen/CGCXXABI.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCXXABI.h,1,['variab'],['variables']
Modifiability,"// Determine if the operation has a widening variant. We consider both the; // ""long"" (e.g., usubl) and ""wide"" (e.g., usubw) versions of the; // instructions.; //; // TODO: Add additional widening operations (e.g., shl, etc.) once we; // verify that their extending operands are eliminated during code; // generation.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp:256,extend,extending,256,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp,1,['extend'],['extending']
Modifiability,"// Determine if there are any slice variables in the projection set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx:36,variab,variables,36,roofit/roofitcore/src/RooAbsReal.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsReal.cxx,2,['variab'],['variables']
Modifiability,"// Determine if we can track any of the module's global variables. If so, add; // the global variables we can track to the solver's set of tracked global; // variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SCCP.cpp:56,variab,variables,56,interpreter/llvm-project/llvm/lib/Transforms/IPO/SCCP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/SCCP.cpp,3,['variab'],['variables']
Modifiability,"// Determine the ID of an instruction, consuming the ModR/M byte as appropriate; // for extended and escape opcodes, and using a supplied attribute mask.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp:88,extend,extended,88,interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp,1,['extend'],['extended']
Modifiability,"// Determine the ID of an instruction, consuming the ModR/M byte as appropriate; // for extended and escape opcodes. Determines the attributes and context for; // the instruction before doing so.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp:88,extend,extended,88,interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp,1,['extend'],['extended']
Modifiability,"// Determine whether instructions in a basic block are one of:; // - the inner loop guard comparison; // - the outer loop latch comparison; // - the outer loop induction variable increment; // - a phi node, a cast or a branch",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopNestAnalysis.cpp:170,variab,variable,170,interpreter/llvm-project/llvm/lib/Analysis/LoopNestAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/LoopNestAnalysis.cpp,1,['variab'],['variable']
Modifiability,// Determine whether or not to compress the symbol list when; // writing it into profile. The variable is unused when the symbol; // list is read from an existing profile.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProf.h:94,variab,variable,94,interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProf.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ProfileData/SampleProf.h,1,['variab'],['variable']
Modifiability,// Determine whether statistics should be enabled. We must do it here rather; // than in CMake because multi-config generators cannot determine this at; // configure time.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Statistic.h:109,config,config,109,interpreter/llvm-project/llvm/include/llvm/ADT/Statistic.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/Statistic.h,2,['config'],"['config', 'configure']"
Modifiability,"// Determine whether the base type is a parameterized class, in; // which case we want to warn about typos such as; // ""NSArray<NSObject>"" (that should be NSArray<NSObject *>).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:40,parameteriz,parameterized,40,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['parameteriz'],['parameterized']
Modifiability,"// Determine whether this is an instruction prefix.; // FIXME:; // Enhance prefixes integrity robustness. for example, following forms; // are currently tolerated:; // repz repnz <insn> ; GAS errors for the use of two similar prefixes; // lock addq %rax, %rbx ; Destination operand must be of memory type; // xacquire <insn> ; xacquire must be accompanied by 'lock'",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp:67,Enhance,Enhance,67,interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp,1,['Enhance'],['Enhance']
Modifiability,// Determine whether this type is an Interface Like type for; // __interface inheritance purposes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h:77,inherit,inheritance,77,interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/AST/DeclCXX.h,1,['inherit'],['inheritance']
Modifiability,// Determine whether we can capture this variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:41,variab,variable,41,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['variab'],['variable']
Modifiability,"// Determine whether we require a function definition to exist, per; // C++11 [temp.inst]p3:; // Unless a function template specialization has been explicitly; // instantiated or explicitly specialized, the function template; // specialization is implicitly instantiated when the specialization is; // referenced in a context that requires a function definition to exist.; // C++20 [temp.inst]p7:; // The existence of a definition of a [...] function is considered to; // affect the semantics of the program if the [...] function is needed for; // constant evaluation by an expression; // C++20 [basic.def.odr]p10:; // Every program shall contain exactly one definition of every non-inline; // function or variable that is odr-used in that program outside of a; // discarded statement; // C++20 [special]p1:; // The implementation will implicitly define [defaulted special members]; // if they are odr-used or needed for constant evaluation.; //; // Note that we skip the implicit instantiation of templates that are only; // used in unused default arguments or by recursive calls to themselves.; // This is formally non-conforming, but seems reasonable in practice.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:706,variab,variable,706,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['variab'],['variable']
Modifiability,// Determines interpretation of variable part of descriptor,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/ELFTypes.h:32,variab,variable,32,interpreter/llvm-project/llvm/include/llvm/Object/ELFTypes.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Object/ELFTypes.h,1,['variab'],['variable']
Modifiability,"// Dev note: do not call zmqSvc()::close_context from here! The Messenger; // is (a member of) a static variable (JobManager) and ZeroMQSvc is static; // as well (the singleton returned by zmqSvc()). Because of the ""static; // destruction order fiasco"", it is not guaranteed that ZeroMQSvc singleton; // state is still available at time of destruction of the Messenger. Instead; // of a compile time error, this will lead to segfaults at runtime when; // exiting the program (on some platforms), because even though the ZeroMQSvc; // singleton pointer may be overwritten with random data, it will usually; // not randomly become nullptr, which means the nullptr check in the getter; // will still pass and the randomized pointer will be dereferenced.; // Instead, we close context in any new ProcessManager that may be created,; // which means the Messenger will get a fresh context anyway.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx:104,variab,variable,104,roofit/multiprocess/src/Messenger.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/multiprocess/src/Messenger.cxx,1,['variab'],['variable']
Modifiability,// Diagnose ODR-use of host global variables in device functions.; // Reference of device global variables in host functions is allowed; // through shadow variables therefore it is not diagnosed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:35,variab,variables,35,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,3,['variab'],['variables']
Modifiability,// Diagnose attempt to use a variable as a label.; //; // FIXME: Diagnostics. Note the location of the definition as a label.; // FIXME: This doesn't diagnose assignment to a symbol which has been; // implicitly marked as external.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp:29,variab,variable,29,interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCParser/AsmParser.cpp,2,['variab'],['variable']
Modifiability,// Diagnose classes that inherit from deprecated classes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:25,inherit,inherit,25,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['inherit'],['inherit']
Modifiability,// Diagnose if we saw a non-variable declaration but no variable; // declarations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:28,variab,variable,28,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,2,['variab'],['variable']
Modifiability,"// Diagnose redeclarations of type parameters.; // We do this now because Objective-C type parameters aren't pushed into; // scope until later (after the instance variable block), but we want the; // diagnostics to occur right after we parse the type parameter list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp:163,variab,variable,163,interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclObjC.cpp,1,['variab'],['variable']
Modifiability,// Diagnose shadowed variables iff this isn't a redeclaration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:21,variab,variables,21,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variables']
Modifiability,"// Diagnose unused local variables with dependent types, where the diagnostic; // will have been deferred.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:25,variab,variables,25,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,1,['variab'],['variables']
Modifiability,// Diagnose unused variables in this scope.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:19,variab,variables,19,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variables']
Modifiability,// Did not simplify.; // In this pattern ShAmtsDiff correlates with the number of high bits that; // shall be unset in the root value (OuterShift).; // An extend of an undef value becomes zero because the high bits are never; // completely unknown. Replace the `undef` shift amounts with negated; // bitwidth of innermost shift to ensure that the value remains undef when; // creating the subsequent shift op.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp:155,extend,extend,155,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,1,['extend'],['extend']
Modifiability,// Did not simplify.; // In this pattern SumOfShAmts correlates with the number of low bits; // that shall remain in the root value (OuterShift).; // An extend of an undef value becomes zero because the high bits are never; // completely unknown. Replace the `undef` shift amounts with final; // shift bitwidth to ensure that the value remains undef when creating the; // subsequent shift op.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp:153,extend,extend,153,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineShifts.cpp,1,['extend'],['extend']
Modifiability,"// Did the config file contain appropriate master information?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx:11,config,config,11,proof/proof/src/TProofResourcesStatic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProofResourcesStatic.cxx,1,['config'],['config']
Modifiability,"// Didn't find a template name, and the lookup wasn't dependent.; // Do the lookup again to determine if this is a ""nothing found"" case or; // a ""not a template"" case. FIXME: Refactor isTemplateName so we don't; // need to do this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:175,Refactor,Refactor,175,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['Refactor'],['Refactor']
Modifiability,// Didn't get a shift. Try just folding an extend.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp:43,extend,extend,43,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp,1,['extend'],['extend']
Modifiability,"// Different parts of legalization seem to interpret which type of; // sign_extend_inreg is the one to check for custom lowering. The extended; // from type is what really matters, but some places check for custom; // lowering of the result type. This results in trying to use; // ReplaceNodeResults to sext_in_reg to an illegal type, so we'll just do; // nothing here and let the illegal result integer be handled normally.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp:134,extend,extended,134,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp,1,['extend'],['extended']
Modifiability,// Dig out the expression which constructs the extended temporary.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:47,extend,extended,47,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['extend'],['extended']
Modifiability,"// Dig out the initializer, and use the declaration which it's attached to.; // FIXME: We should eventually check whether the variable has a reachable; // initializing declaration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:126,variab,variable,126,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['variab'],['variable']
Modifiability,// Direct access to thread_local variables from a different DLL isn't; // possible with Windows Native TLS.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Parallel.h:33,variab,variables,33,interpreter/llvm-project/llvm/include/llvm/Support/Parallel.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Parallel.h,1,['variab'],['variables']
Modifiability,// Direct implementation of collecting all variables reachable from each; // function,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:43,variab,variables,43,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variables']
Modifiability,// Direct/Extend accessors,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CodeGen/CGFunctionInfo.h:10,Extend,Extend,10,interpreter/llvm-project/clang/include/clang/CodeGen/CGFunctionInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/CodeGen/CGFunctionInfo.h,1,['Extend'],['Extend']
Modifiability,// Directly extend to the appropriate transform-to type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp:12,extend,extend,12,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp,1,['extend'],['extend']
Modifiability,// Disable default config if CLANG_NO_DEFAULT_CONFIG is set to a non-empty; // value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp:19,config,config,19,interpreter/llvm-project/clang/lib/Driver/Driver.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/Driver.cpp,1,['config'],['config']
Modifiability,"// Disable extending masked loads for fixed-width for now, since the code; // quality doesn't look great.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:11,extend,extending,11,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['extend'],['extending']
Modifiability,"// Disable partial analytical integrals if interpolation is used, and we; // integrate over sub-ranges, but leave them enabled when we integrate over; // the full range of one or several variables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx:187,variab,variables,187,roofit/roofitcore/src/RooHistPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooHistPdf.cxx,1,['variab'],['variables']
Modifiability,// Disable the cleanups for lifetime-extended temporaries.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:37,extend,extended,37,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['extend'],['extended']
Modifiability,// Disallow flexible array init on anything which is not a variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:12,flexible,flexible,12,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,2,"['flexible', 'variab']","['flexible', 'variable']"
Modifiability,// Disallow flexible array init on local variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:12,flexible,flexible,12,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,2,"['flexible', 'variab']","['flexible', 'variables']"
Modifiability,// Disallow flexible array init on non-top-level object,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:12,flexible,flexible,12,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['flexible'],['flexible']
Modifiability,"// Disallow inlining a blockaddress with uses other than strictly callbr.; // A blockaddress only has defined behavior for an indirect branch in the; // same function, and we do not currently support inlining indirect; // branches. But, the inliner may not see an indirect branch that ends up; // being dead code at a particular call site. If the blockaddress escapes; // the function, e.g., via a global variable, inlining may lead to an; // invalid cross-function reference.; // FIXME: pr/39560: continue relaxing this overt restriction.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp:405,variab,variable,405,interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/InlineCost.cpp,1,['variab'],['variable']
Modifiability,// Disallow jumps out of scopes containing temporaries lifetime-extended to; // automatic storage duration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/JumpDiagnostics.cpp:64,extend,extended,64,interpreter/llvm-project/clang/lib/Sema/JumpDiagnostics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/JumpDiagnostics.cpp,1,['extend'],['extended']
Modifiability,// Disallow polymorphic deletion.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Format.h:12,polymorphi,polymorphic,12,interpreter/llvm-project/llvm/include/llvm/Support/Format.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/Format.h,1,['polymorphi'],['polymorphic']
Modifiability,// Discard stores to bits outside this variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp:39,variab,variable,39,interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,1,['variab'],['variable']
Modifiability,// Discard the pointer info except the address space because the memory; // operand can't represent this new access since the offset is variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp:136,variab,variable,136,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp,2,['variab'],['variable']
Modifiability,"// Discrete valued variable type",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCategory.h:19,variab,variable,19,roofit/roofitcore/inc/RooCategory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooCategory.h,1,['variab'],['variable']
Modifiability,// Disp includes the address of a variable; make sure this is recorded; // for later handling.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp:34,variab,variable,34,interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp,1,['variab'],['variable']
Modifiability,"// Ditch the duplicate, since we're done with it, and rewrite all remaining; // users (function pointers, etc.) back to the original function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp:54,rewrite,rewrite,54,interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp,1,['rewrite'],['rewrite']
Modifiability,"// Divisor must be a power of two.; // If OrZero is false, cannot guarantee induction variable is non-zero after; // division, same for Shr, unless it is exact division.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp:86,variab,variable,86,interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,1,['variab'],['variable']
Modifiability,"// Do a ""move"" by copying the value and then zeroing out the old; // variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp:69,variab,variable,69,interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp,1,['variab'],['variable']
Modifiability,// Do a non-extending load followed by FP_EXTEND.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeFloatTypes.cpp:12,extend,extending,12,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeFloatTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeFloatTypes.cpp,1,['extend'],['extending']
Modifiability,"// Do a quick check for whether that sort alone has given us a perfect; // layout with no interior padding. This is very common: if the; // fixed-layout fields have no interior padding, and they end at a; // sufficiently-aligned offset for all the flexible-layout fields,; // and the flexible-layout fields all have sizes that are multiples; // of their alignment, then this will reliably trigger.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp:248,flexible,flexible-layout,248,interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/OptimizedStructLayout.cpp,2,['flexible'],['flexible-layout']
Modifiability,// Do all the fixups of the original live variables to their relocated selves,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp:42,variab,variables,42,interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/RewriteStatepointsForGC.cpp,1,['variab'],['variables']
Modifiability,// Do an any-extend to 32-bits if this is a half-word input.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:13,extend,extend,13,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['extend'],['extend']
Modifiability,// Do depth first; we want to rewrite the subexpressions first so that if; // we have to move expressions we will move them already rewritten.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/ObjCMT.cpp:30,rewrite,rewrite,30,interpreter/llvm-project/clang/lib/ARCMigrate/ObjCMT.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/ObjCMT.cpp,1,['rewrite'],['rewrite']
Modifiability,"// Do extra work to ensure that we remove semantically unimportant undefs.; //; // This is to work around the fact that SelectionDAG will hoist dbg.values; // using argument values to the top of the entry block. That can move arg; // dbg.values before undef and constant dbg.values which they previously; // followed. The easiest thing to do is to just try to feed SelectionDAG; // input it's happy with.; //; // Map of {Variable x: Fragments y} where the fragments y of variable x have; // have at least one non-undef location defined already. Don't use directly,; // instead call DefineBits and HasDefinedBits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp:421,Variab,Variable,421,interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,2,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,"// Do fits in different configurations",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooSimultaneous.cxx:24,config,configurations,24,roofit/roofitcore/test/testRooSimultaneous.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/test/testRooSimultaneous.cxx,1,['config'],['configurations']
Modifiability,"// Do not add any results, signifying that N should not be custom lowered; // after all. This happens because simd128 turns on custom lowering for; // SIGN_EXTEND_INREG, but for non-vector sign extends the result might be an; // illegal type.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp:194,extend,extends,194,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyISelLowering.cpp,1,['extend'],['extends']
Modifiability,// Do not allow other address spaces on automatic variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:50,variab,variable,50,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,"// Do not allow redeclaration to change the variable between requiring; // static and dynamic initialization.; // FIXME: GCC allows this, but uses the TLS keyword on the first; // declaration to determine the kind. Do we need to be compatible here?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:44,variab,variable,44,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,// Do not analyze internal variables and do not enclose them into; // implicit clauses.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:27,variab,variables,27,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variables']
Modifiability,// Do not attempt to type-check the default initializer for a; // variable with dependent type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:66,variab,variable,66,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,// Do not capture constexpr variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:28,variab,variables,28,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variables']
Modifiability,// Do not check dependent variables since the ctor/dtor/initializer are not; // determined. Do it after instantiation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp:26,variab,variables,26,interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp,1,['variab'],['variables']
Modifiability,"// Do not check for max stack object alignment here, because the stack; // may not be complete yet. Assume that we will need PS_aligna if there; // are variable-sized objects.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp:152,variab,variable-sized,152,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonFrameLowering.cpp,1,['variab'],['variable-sized']
Modifiability,// Do not clear the first region as it's the one before the first; // CHECK-LABEL and it would clear variables defined on the command-line; // before they get used.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp:101,variab,variables,101,interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/FileCheck/FileCheck.cpp,1,['variab'],['variables']
Modifiability,"// Do not create a ""ref-variable"" if the original is not also available; // on the host.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp:24,variab,variable,24,interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,1,['variab'],['variable']
Modifiability,// Do not defer instantiations of variables that could be used in a; // constant expression.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:34,variab,variables,34,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['variab'],['variables']
Modifiability,"// Do not delete the directory if it is part of the output; // and we are in incremental mode (because it will be reused; // and has not been written to disk (for performance reason).; // coverity[var_deref_model] the IsA()->InheritsFrom guarantees that the dynamic_cast will succeed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileMerger.cxx:225,Inherit,InheritsFrom,225,io/io/src/TFileMerger.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/io/src/TFileMerger.cxx,1,['Inherit'],['InheritsFrom']
Modifiability,// Do not dynamically initialize dllimport variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp:43,variab,variables,43,interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplateInstantiateDecl.cpp,1,['variab'],['variables']
Modifiability,"// Do not emit copy for firstprivate constant variables in target regions,; // captured by reference.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:46,variab,variables,46,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['variab'],['variables']
Modifiability,// Do not extend beyond the end of the segment being removed.; // The segment may have been pruned in preparation for joining; // live ranges.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:10,extend,extend,10,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['extend'],['extend']
Modifiability,"// Do not extend the live-ranges of physical registers as they add; // constraints to the register allocator. Moreover, if we want to extend; // the live-range of a physical register, unlike SSA virtual register,; // we will have to check that they aren't redefine before the related use.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp:10,extend,extend,10,interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,2,['extend'],['extend']
Modifiability,// Do not extract regions that have live exit variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp:46,variab,variables,46,interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/PartialInlining.cpp,1,['variab'],['variables']
Modifiability,// Do not forget to extend StorageTypeForKinds if number of traits exceed; // the number of bits StorageTypeForKinds can store.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h:20,extend,extend,20,interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/StaticAnalyzer/Core/PathSensitive/MemRegion.h,1,['extend'],['extend']
Modifiability,// Do not globalize declare target variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:35,variab,variables,35,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['variab'],['variables']
Modifiability,// Do not globalize variables with reference type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp:20,variab,variables,20,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntimeGPU.cpp,1,['variab'],['variables']
Modifiability,// Do not handle extending vector loads.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp:17,extend,extending,17,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULegalizerInfo.cpp,1,['extend'],['extending']
Modifiability,// Do not inherit excluded attributes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp:10,inherit,inherit,10,interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/LoopUtils.cpp,1,['inherit'],['inherit']
Modifiability,// Do not instrument accesses to LLVM internal variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemProfiler.cpp:47,variab,variables,47,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemProfiler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/MemProfiler.cpp,1,['variab'],['variables']
Modifiability,// Do not map by default allocator traits if it is a standalone; // variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:68,variab,variable,68,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,"// Do not need plugin manager for this!",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx:15,plugin,plugin,15,graf2d/gpad/src/TCanvas.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TCanvas.cxx,1,['plugin'],['plugin']
Modifiability,"// Do not optimize out type conversion of f128 type yet.; // For some targets like x86_64, configuration is changed to keep one f128; // value in one SSE register, but instruction selection cannot handle; // FCOPYSIGN on SSE registers yet.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:91,config,configuration,91,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['config'],['configuration']
Modifiability,// Do not preserve stack space within prologue for outgoing variables if the; // function contains variable size objects.; // Let eliminateCallFramePseudoInstr preserve stack space for it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchFrameLowering.cpp:60,variab,variables,60,interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchFrameLowering.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,// Do not promote dependent variables since the cotr/dtor/initializer are; // not determined. Do it after instantiation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp:28,variab,variables,28,interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaCUDA.cpp,1,['variab'],['variables']
Modifiability,"// Do not put variable into the ""TypeTable"" and ""PlainDwarf"" at the same; // time.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DependencyTracker.cpp:14,variab,variable,14,interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DependencyTracker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DWARFLinker/Parallel/DependencyTracker.cpp,1,['variab'],['variable']
Modifiability,"// Do not recurse into the resolved initializer, as that would change; // the behavior of the resolver we're delegating, but do check to see; // if there are unresolved variables remaining.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/Record.cpp:169,variab,variables,169,interpreter/llvm-project/llvm/lib/TableGen/Record.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/Record.cpp,1,['variab'],['variables']
Modifiability,// Do not rewrite physical definitions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp:10,rewrite,rewrite,10,interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,1,['rewrite'],['rewrite']
Modifiability,// Do not save PDT to local variable as it is only used in asserts and thus; // will trigger an unused variable warning if building without asserts.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp:28,variab,variable,28,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopFuse.cpp,2,['variab'],['variable']
Modifiability,// Do not serialize variable-length loads of constant memory with; // anything.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:20,variab,variable-length,20,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['variab'],['variable-length']
Modifiability,// Do not show local variables belonging to a function other than; // where the error is reported.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp:21,variab,variables,21,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/MallocChecker.cpp,2,['variab'],['variables']
Modifiability,// Do not to emit variable if it is not marked as declare target.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:18,variab,variable,18,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['variab'],['variable']
Modifiability,"// Do not track this variable any more, since it has location; // coverage.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp:21,variab,variable,21,interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-dwarfdump/Statistics.cpp,1,['variab'],['variable']
Modifiability,// Do not treat C 'false' and 'true' macros as configuration values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp:47,config,configuration,47,interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ReachableCode.cpp,1,['config'],['configuration']
Modifiability,// Do not try to extend the removal if we're at the end of the buffer already.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/EditedSource.cpp:17,extend,extend,17,interpreter/llvm-project/clang/lib/Edit/EditedSource.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Edit/EditedSource.cpp,1,['extend'],['extend']
Modifiability,// Do not try to map the variable if it or its sub-component was mapped; // already.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:25,variab,variable,25,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,1,['variab'],['variable']
Modifiability,// Do not use virtual base registers when ROP protection is turned on.; // Virtual base registers break the layout of the local variable space and may; // push the ROP Hash location past the 512 byte range of the ROP store; // instruction.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCRegisterInfo.cpp:128,variab,variable,128,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCRegisterInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCRegisterInfo.cpp,1,['variab'],['variable']
Modifiability,"// Do nothing. We want the LOOP setup instruction to stay in the *old*; // preheader, so we can use BDZ in the prologs to adapt the loop trip count.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp:122,adapt,adapt,122,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCInstrInfo.cpp,1,['adapt'],['adapt']
Modifiability,"// Do some things in one go:; // * assign random integer values to each variable in each iteration; // * fill the dataset used for batched evaluation; // * compute the reference result manually; // * compute the result with the ParamHistFunc without BatchMode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testParamHistFunc.cxx:72,variab,variable,72,roofit/histfactory/test/testParamHistFunc.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/histfactory/test/testParamHistFunc.cxx,1,['variab'],['variable']
Modifiability,"// Do the access attribute and DSOLocal propagation in combined index.; // The goal of attribute propagation is internalization of readonly (RO); // or writeonly (WO) variables. To determine which variables are RO or WO; // and which are not we take following steps:; // - During analysis we speculatively assign readonly and writeonly; // attribute to all variables which can be internalized. When computing; // function summary we also assign readonly or writeonly attribute to a; // reference if function doesn't modify referenced variable (readonly); // or doesn't read it (writeonly).; //; // - After computing dead symbols in combined index we do the attribute; // and DSOLocal propagation. During this step we:; // a. clear RO and WO attributes from variables which are preserved or; // can't be imported; // b. clear RO and WO attributes from variables referenced by any global; // variable initializer; // c. clear RO attribute from variable referenced by a function when; // reference is not readonly; // d. clear WO attribute from variable referenced by a function when; // reference is not writeonly; // e. clear IsDSOLocal flag in every summary if any of them is false.; //; // Because of (c, d) we don't internalize variables read by function A; // and modified by function B.; //; // Internalization itself happens in the backend after import is finished; // See internalizeGVsAfterImport.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ModuleSummaryIndex.cpp:167,variab,variables,167,interpreter/llvm-project/llvm/lib/IR/ModuleSummaryIndex.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/ModuleSummaryIndex.cpp,10,['variab'],"['variable', 'variables']"
Modifiability,"// Do we assign/compare against zero? If yes, check the variable we are; // assigning to.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IvarInvalidationChecker.cpp:56,variab,variable,56,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IvarInvalidationChecker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/IvarInvalidationChecker.cpp,1,['variab'],['variable']
Modifiability,// Do we have an Indirect jump with a jumptable that we can rewrite?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp:60,rewrite,rewrite,60,interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineBasicBlock.cpp,1,['rewrite'],['rewrite']
Modifiability,"// Do we have any terms which do not depend on the; // on the variables we integrate over?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx:62,variab,variables,62,roofit/roofitcore/src/RooProduct.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooProduct.cxx,1,['variab'],['variables']
Modifiability,"// DocumentListTraits<vector<FormatStyle>> uses the context to get default; // values for the fields, keys for which are missing from the configuration.; // Mapping also uses the context to get the language to find the correct; // base style.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp:138,config,configuration,138,interpreter/llvm-project/clang/lib/Format/Format.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp,1,['config'],['configuration']
Modifiability,"// Does Src still contain the value num we expect? If not, it's been; // clobbered in the meantime, and our variable locations are stale.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:108,variab,variable,108,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['variab'],['variable']
Modifiability,// Does at least one of the variables have a floating point type?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp:28,variab,variables,28,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp,1,['variab'],['variables']
Modifiability,// Does either variable appear in increment?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp:15,variab,variable,15,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp,1,['variab'],['variable']
Modifiability,// Does the packet have an extender for the instruction at Index,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCInstrInfo.h:27,extend,extender,27,interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCInstrInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCInstrInfo.h,1,['extend'],['extender']
Modifiability,// Does this instruction use apx extended register?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp:33,extend,extended,33,interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/AsmParser/X86AsmParser.cpp,1,['extend'],['extended']
Modifiability,"// Don't accept candidates that cannot be member functions, constants,; // variables, or templates.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprMember.cpp:75,variab,variables,75,interpreter/llvm-project/clang/lib/Sema/SemaExprMember.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprMember.cpp,1,['variab'],['variables']
Modifiability,// Don't actually mark a global constant if it's atomic because atomic loads; // are implemented by a trivial cmpxchg in some edge-cases and that usually; // requires write access to the variable even if it's not actually changed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp:187,variab,variable,187,interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/GlobalOpt.cpp,1,['variab'],['variable']
Modifiability,// Don't add FixItHints to remove the specifiers; we do still respect; // them when building the underlying variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:108,variab,variable,108,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['variab'],['variable']
Modifiability,// Don't add any new variables to the subprogram.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineOutliner.cpp:21,variab,variables,21,interpreter/llvm-project/llvm/lib/CodeGen/MachineOutliner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/MachineOutliner.cpp,2,['variab'],['variables']
Modifiability,// Don't allow variably-modified types in constexpr functions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:15,variab,variably-modified,15,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['variab'],['variably-modified']
Modifiability,// Don't attempt to shrink the index for fixed vectors of 64 bit data since it; // will later be re-extended to 64 bits in legalization,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:100,extend,extended,100,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['extend'],['extended']
Modifiability,// Don't bother adding DIGlobalVariableExpressions listed in the CU if we; // already know about the variable and it isn't adding a constant; // expression.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp:101,variab,variable,101,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp,1,['variab'],['variable']
Modifiability,// Don't bother checking if this is an AllocaInst. We know this; // instruction has no tag which means there are no variables associated; // with it.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp:116,variab,variables,116,interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,1,['variab'],['variables']
Modifiability,// Don't bother doing anything for this variables if we know it's fully; // promoted. We're only interested in variables that (sometimes) live on; // the stack here.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp:40,variab,variables,40,interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,2,['variab'],['variables']
Modifiability,"// Don't codegen statics coming in from a module; they are already part of; // the library.; // We do need to expose static variables from template instantiations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp:124,variab,variables,124,interpreter/cling/lib/Interpreter/DeclCollector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/DeclCollector.cpp,1,['variab'],['variables']
Modifiability,// Don't count the induction variable as interleaved.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:29,variab,variable,29,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['variab'],['variable']
Modifiability,// Don't declare this variable in the second operand of the for-statement;; // GCC miscompiles that by ending its lifetime before evaluating the; // third operand. See gcc.gnu.org/PR86769.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:22,variab,variable,22,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,2,['variab'],['variable']
Modifiability,"// Don't decrement RefsMinusAssignments if volatile variable with compound; // assignment (+=, ...) or increment/decrement unary operator to avoid; // potential unused-but-set-variable warning.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp:52,variab,variable,52,interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExprCXX.cpp,2,['variab'],['variable']
Modifiability,"// Don't diagnose problems with invalid record decl, the secondary no_member; // diagnostic during template instantiation is likely bogus, e.g. if a class; // is invalid because it's derived from an invalid base class, then missing; // members were likely supposed to be inherited.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp:271,inherit,inherited,271,interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaExpr.cpp,1,['inherit'],['inherited']
Modifiability,"// Don't do PRE on GEPs. The inserted PHI would prevent CodeGenPrepare from; // sinking the addressing mode computation back to its uses. Extending the; // GEP's live range increases the register pressure, and therefore it can; // introduce unnecessary spills.; //; // This doesn't prevent Load PRE. PHI translation will make the GEP available; // to the load by moving it to the predecessor block if necessary.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp:138,Extend,Extending,138,interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/GVN.cpp,1,['Extend'],['Extending']
Modifiability,"// Don't do dynamic alloca or stack malloc if:; // 1) There is inline asm: too often it makes assumptions on which registers; // are available.; // 2) There is a returns_twice call (typically setjmp), which is; // optimization-hostile, and doesn't play well with introduced indirect; // register-relative calculation of local variable addresses.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp:326,variab,variable,326,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/AddressSanitizer.cpp,1,['variab'],['variable']
Modifiability,// Don't emit Swift async extended frame info.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/CodeGenOptions.h:26,extend,extended,26,interpreter/llvm-project/clang/include/clang/Basic/CodeGenOptions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Basic/CodeGenOptions.h,1,['extend'],['extended']
Modifiability,// Don't emit a spurious reference if it might be to a variable that only; // exists on a different device / target.; // FIXME: This is unnecessarily broad. Check whether this would actually be a; // cross-target reference.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp:55,variab,variable,55,interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,1,['variab'],['variable']
Modifiability,// Don't emit an llvm.dbg.declare for the composite storage as it doesn't; // correspond to a user variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp:99,variab,variable,99,interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,1,['variab'],['variable']
Modifiability,"// Don't emit any vtable shape or vptr info if this class doesn't have an; // extendable vfptr. This can happen if the class doesn't have virtual; // methods, or in the MS ABI if those virtual methods only come from virtually; // inherited bases.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp:78,extend,extendable,78,interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDebugInfo.cpp,2,"['extend', 'inherit']","['extendable', 'inherited']"
Modifiability,// Don't extend into the upper 32 bits of a 64 bit mask.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp:9,extend,extend,9,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,1,['extend'],['extend']
Modifiability,"// Don't fold a GEP into itself through a PHI node. This can only happen; // through the back-edge of a loop. Folding a GEP into itself means that; // the value of the previous iteration needs to be stored in the meantime,; // thus requiring an additional register variable to be live, but not; // actually achieving anything (the GEP still needs to be executed once per; // loop iteration).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp:265,variab,variable,265,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstructionCombining.cpp,1,['variab'],['variable']
Modifiability,"// Don't generally constrain external configuration; // However exceeding the vRotate limits or silly FOV values will; // cause very weird behaviour or projections so fix these",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPerspectiveCamera.cxx:38,config,configuration,38,graf3d/gl/src/TGLPerspectiveCamera.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLPerspectiveCamera.cxx,1,['config'],['configuration']
Modifiability,// Don't give variables common linkage if -fno-common was specified unless it; // was overridden by a NoCommon attribute.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:14,variab,variables,14,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['variab'],['variables']
Modifiability,// Don't hack volatile/ordered stores.; // FIXME: Some bits are legal for ordered atomic stores; needs refactoring.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp:103,refactor,refactoring,103,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineLoadStoreAlloca.cpp,1,['refactor'],['refactoring']
Modifiability,// Don't handle volatile or variable length memcpys.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:28,variab,variable,28,interpreter/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp,1,['variab'],['variable']
Modifiability,// Don't have an explicit extend. Try to handle a G_AND with a constant mask; // on the RHS.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp:26,extend,extend,26,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp,1,['extend'],['extend']
Modifiability,// Don't have to print a directive for switching to section for commons and; // zero-initialized TLS data. The '.comm' and '.lcomm' directives of the; // variable will create the needed csect.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCSectionXCOFF.cpp:154,variab,variable,154,interpreter/llvm-project/llvm/lib/MC/MCSectionXCOFF.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCSectionXCOFF.cpp,1,['variab'],['variable']
Modifiability,// Don't inherit dll attribute until the template is instantiated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp:9,inherit,inherit,9,interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclCXX.cpp,1,['inherit'],['inherit']
Modifiability,// Don't instrument MSVC CRT configuration helpers. They may run before normal; // initialization.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/SanitizerCoverage.cpp:29,config,configuration,29,interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/SanitizerCoverage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Instrumentation/SanitizerCoverage.cpp,1,['config'],['configuration']
Modifiability,// Don't issue warning on property with no life time in class; // extension as it is inherited from property in primary class.; // Skip this warning in gc-only mode.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp:85,inherit,inherited,85,interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaObjCProperty.cpp,1,['inherit'],['inherited']
Modifiability,// Don't lazy extend these expression variants,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/AsmParser/HexagonAsmParser.cpp:14,extend,extend,14,interpreter/llvm-project/llvm/lib/Target/Hexagon/AsmParser/HexagonAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/AsmParser/HexagonAsmParser.cpp,1,['extend'],['extend']
Modifiability,// Don't mark variables we won't be able to internalize as read/write-only.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ModuleSummaryAnalysis.cpp:14,variab,variables,14,interpreter/llvm-project/llvm/lib/Analysis/ModuleSummaryAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ModuleSummaryAnalysis.cpp,1,['variab'],['variables']
Modifiability,"// Don't merge two GEPs when two operands differ (introducing phi nodes); // if one of the PHIs has a constant for the index. The index may be; // substantially cheaper to compute for the constants, so making it a; // variable index could pessimize the path. This also handles the case; // for struct indices, which must always be constant.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp:218,variab,variable,218,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombinePHI.cpp,1,['variab'],['variable']
Modifiability,// Don't recursively rewrite imports. We handle them all at the top level.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/FrontendActions.cpp:21,rewrite,rewrite,21,interpreter/llvm-project/clang/lib/Frontend/Rewrite/FrontendActions.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/Rewrite/FrontendActions.cpp,1,['rewrite'],['rewrite']
Modifiability,// Don't rewrite calls with a weird number of arguments.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86WinEHState.cpp:9,rewrite,rewrite,9,interpreter/llvm-project/llvm/lib/Target/X86/X86WinEHState.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86WinEHState.cpp,1,['rewrite'],['rewrite']
Modifiability,"// Don't rewrite edges that carry physregs, because that requires additional; // support infrastructure.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp:9,rewrite,rewrite,9,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/ScheduleDAGRRList.cpp,1,['rewrite'],['rewrite']
Modifiability,// Don't rewrite fputs to fwrite when optimising for size because fwrite; // requires more arguments and thus extra MOVs are required.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp:9,rewrite,rewrite,9,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyLibCalls.cpp,1,['rewrite'],['rewrite']
Modifiability,// Don't rewrite the state machine if we are not in a valid state.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:9,rewrite,rewrite,9,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['rewrite'],['rewrite']
Modifiability,// Don't rewrite the use in the newly inserted intrinsic.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CallBrPrepare.cpp:9,rewrite,rewrite,9,interpreter/llvm-project/llvm/lib/CodeGen/CallBrPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CallBrPrepare.cpp,1,['rewrite'],['rewrite']
Modifiability,"// Don't rewrite to a landing pad fallthough. That could lead to the case; // where a BB jumps to more than one landing pad.; // TODO: Is it ever worth rewriting predecessors which don't already; // jump to a landing pad, and so can safely jump to the fallthrough?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BranchFolding.cpp:9,rewrite,rewrite,9,interpreter/llvm-project/llvm/lib/CodeGen/BranchFolding.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/BranchFolding.cpp,1,['rewrite'],['rewrite']
Modifiability,"// Don't round in expectedData or extended mode",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx:34,extend,extended,34,roofit/roofitcore/src/RooAbsPdf.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsPdf.cxx,1,['extend'],['extended']
Modifiability,"// Don't sink alloca: we never want to sink static alloca's out of the; // entry block, and correctly sinking dynamic alloca's requires; // checks for stacksave/stackrestore intrinsics.; // FIXME: Refactor this check somehow?",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:197,Refactor,Refactor,197,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,1,['Refactor'],['Refactor']
Modifiability,"// Don't sink/hoist volatile or ordered atomic store!; // We can only hoist a store that we can prove writes a value which is not; // read or overwritten within the loop. For those cases, we fallback to; // load store promotion instead. TODO: We can extend this to cases where; // there is exactly one write to the location and that write dominates an; // arbitrary number of reads in the loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LICM.cpp:250,extend,extend,250,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LICM.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LICM.cpp,1,['extend'],['extend']
Modifiability,// Don't sort past a non-configured qualifier token.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/QualifierAlignmentFixer.cpp:25,config,configured,25,interpreter/llvm-project/clang/lib/Format/QualifierAlignmentFixer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/QualifierAlignmentFixer.cpp,1,['config'],['configured']
Modifiability,"// Don't specialize on (anything derived from) the address of a non-constant; // global variable, unless explicitly enabled.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionSpecialization.cpp:88,variab,variable,88,interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionSpecialization.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionSpecialization.cpp,1,['variab'],['variable']
Modifiability,"// Don't spill static allocas, they dominate all cleanups. These are created; // by binding a reference to a local variable or temporary.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCleanup.cpp:115,variab,variable,115,interpreter/llvm-project/clang/lib/CodeGen/CGCleanup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCleanup.cpp,1,['variab'],['variable']
Modifiability,// Don't touch thread-local variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ConstantMerge.cpp:28,variab,variables,28,interpreter/llvm-project/llvm/lib/Transforms/IPO/ConstantMerge.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ConstantMerge.cpp,1,['variab'],['variables']
Modifiability,// Don't traverse under the loop variable,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ASTMatchers/ASTMatchFinder.cpp:33,variab,variable,33,interpreter/llvm-project/clang/lib/ASTMatchers/ASTMatchFinder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ASTMatchers/ASTMatchFinder.cpp,1,['variab'],['variable']
Modifiability,// Don't try and extend through copies in instruction referencing mode.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp:17,extend,extend,17,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGISel.cpp,1,['extend'],['extend']
Modifiability,"// Don't try to propagate if there are too many places to create new; // extends, chances are it'll increase code size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp:73,extend,extends,73,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/CombinerHelper.cpp,1,['extend'],['extends']
Modifiability,"// Don't use TFile::Open(); we don't need plugins.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/io/rootpcm/src/rootclingIO.cxx:42,plugin,plugins,42,io/rootpcm/src/rootclingIO.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/io/rootpcm/src/rootclingIO.cxx,1,['plugin'],['plugins']
Modifiability,"// Don't use [[noreturn]], _Noreturn or [[no_builtin]] for a call to a; // virtual function. These attributes are not inherited by overloads.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp:118,inherit,inherited,118,interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCall.cpp,1,['inherit'],['inherited']
Modifiability,"// Don't use it if this actually came from the source module. They're in; // the same LLVMContext after all. Also don't use it unless the type is; // actually used in the destination module. This can happen in situations; // like this:; //; // Module A Module B; // -------- --------; // %Z = type { %A } %B = type { %C.1 }; // %A = type { %B.1, [7 x i8] } %C.1 = type { i8* }; // %B.1 = type { %C } %A.2 = type { %B.3, [5 x i8] }; // %C = type { i8* } %B.3 = type { %C.1 }; //; // When we link Module B with Module A, the '%B' in Module B is; // used. However, that would then use '%C.1'. But when we process '%C.1',; // we prefer to take the '%C' version. So we are then left with both; // '%C.1' and '%C' being used for the same types. This leads to some; // variables using one type and some using the other.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp:762,variab,variables,762,interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Linker/IRMover.cpp,1,['variab'],['variables']
Modifiability,// Don't want to extend other live ranges and update kills.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp:17,extend,extend,17,interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/TwoAddressInstructionPass.cpp,2,['extend'],['extend']
Modifiability,"// Don't warn about ""clang -c -DPIC -fPIC test.i"" because libtool.m4 assumes; // that ""The compiler can only warn and ignore the option if not recognized"".; // When building with ccache, it will pass -D options to clang even on; // preprocessed inputs and configure concludes that -fPIC is not supported.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:256,config,configure,256,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['config'],['configure']
Modifiability,"// Don't warn about Objective-C pointer variables with precise lifetime; // semantics; they can be used to ensure ARC releases the object at a known; // time, which may mean assignment but no other references.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:40,variab,variables,40,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variables']
Modifiability,"// Don't warn about __block Objective-C pointer variables, as they might; // be assigned in the block but not used elsewhere for the purpose of lifetime; // extension.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:48,variab,variables,48,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variables']
Modifiability,"// Don't warn about applying selectany to implicitly inline variables.; // Older compilers and language modes would require the use of selectany; // to make such variables inline, and it would have no effect if we; // honored it.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:60,variab,variables,60,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,2,['variab'],['variables']
Modifiability,"// Don't warn on volatile, static, or global variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp:45,variab,variables,45,interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaStmt.cpp,1,['variab'],['variables']
Modifiability,"// Double_t xmn=Variables()[idx].GetMin();; // Double_t xmx=Variables()[idx].GetMax();",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableGaussTransform.cxx:16,Variab,Variables,16,tmva/tmva/src/VariableGaussTransform.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/src/VariableGaussTransform.cxx,2,['Variab'],['Variables']
Modifiability,"// Draw second inheritance classes for this class",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx:15,inherit,inheritance,15,graf2d/gpad/src/TPad.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpad/src/TPad.cxx,1,['inherit'],['inheritance']
Modifiability,"// Drill down the array types: if global variable of a fixed type is; // not sanitized, we also don't instrument arrays of them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:41,variab,variable,41,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['variab'],['variable']
Modifiability,// Drill into block byref variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp:26,variab,variables,26,interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,1,['variab'],['variables']
Modifiability,// Drop all dbg attachments from global variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp:40,variab,variables,40,interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,1,['variab'],['variables']
Modifiability,// Drop information about predicated SCEV rewrites for this loop.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:42,rewrite,rewrites,42,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['rewrite'],['rewrites']
Modifiability,// Drop initializers of available externally global variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ElimAvailExtern.cpp:52,variab,variables,52,interpreter/llvm-project/llvm/lib/Transforms/IPO/ElimAvailExtern.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/ElimAvailExtern.cpp,1,['variab'],['variables']
Modifiability,// Dump the configuration.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format/ClangFormat.cpp:12,config,configuration,12,interpreter/llvm-project/clang/tools/clang-format/ClangFormat.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/tools/clang-format/ClangFormat.cpp,1,['config'],['configuration']
Modifiability,"// Dump the factory content as configuration file; /// Get the combined signal plus background pdf",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HLFactory.h:31,config,configuration,31,roofit/roostats/inc/RooStats/HLFactory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HLFactory.h,1,['config'],['configuration']
Modifiability,"// During deserialization, we might compare variables before we load; // their types. Assume the types will end up being the same.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:44,variab,variables,44,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['variab'],['variables']
Modifiability,"// During selection extend picking region for large line-widths.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveStraightLineSetGL.cxx:20,extend,extend,20,graf3d/eve/src/TEveStraightLineSetGL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/src/TEveStraightLineSetGL.cxx,2,['extend'],['extend']
Modifiability,"// During selection extend picking region for large point-sizes.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:20,extend,extend,20,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,1,['extend'],['extend']
Modifiability,// During the symbol traversal more information is available to; // determine if the symbol is a parameter or a variable. At this; // stage mark it as variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp:112,variab,variable,112,interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/DebugInfo/LogicalView/Readers/LVCodeViewVisitor.cpp,2,['variab'],['variable']
Modifiability,"// Dynamic TLS initialization works by checking the state of a; // guard variable (__tls_guard) to see whether TLS initialization; // for a thread has happend yet.; // If not, the initialization is triggered on-demand; // by calling __dyn_tls_on_demand_init.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp:73,variab,variable,73,interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp,1,['variab'],['variable']
Modifiability,// ELF specific configuration for copying/stripping a single file.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ObjCopy/ELF/ELFConfig.h:16,config,configuration,16,interpreter/llvm-project/llvm/include/llvm/ObjCopy/ELF/ELFConfig.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ObjCopy/ELF/ELFConfig.h,1,['config'],['configuration']
Modifiability,// END: SubclassID for recipes that inherit VPHeaderPHIRecipe; // END: Phi-like recipes,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanValue.h:36,inherit,inherit,36,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanValue.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanValue.h,1,['inherit'],['inherit']
Modifiability,"// ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendedBinding.cxx:32,VARIAB,VARIABLE,32,roofit/roofitcore/src/RooExtendedBinding.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooExtendedBinding.cxx,2,['VARIAB'],['VARIABLE']
Modifiability,"// ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE; // chi^2(0,k) gives inf and causes various problems; // truncate",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooNonCentralChiSquare.cxx:32,VARIAB,VARIABLE,32,roofit/roofitmore/src/RooNonCentralChiSquare.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitmore/src/RooNonCentralChiSquare.cxx,1,['VARIAB'],['VARIABLE']
Modifiability,// EVEX_X can extend the register id to 32 for a non-GPR register that is; // encoded in RM.; // mode : MODE_64_BIT; // Only 8 vector registers are available in 32 bit mode; // mod : 3; // RM encodes a register,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp:14,extend,extend,14,interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/Disassembler/X86Disassembler.cpp,1,['extend'],['extend']
Modifiability,"// Each ExpressionEvaluationContextRecord also keeps track of whether the; // context is nested in an immediate function context, so smaller contexts; // that appear inside immediate functions (like variable initializers) are; // considered to be inside an immediate function context even though by; // themselves they are not immediate function contexts. But when a new; // function is entered, we need to reset this tracking, since the entered; // function might be not an immediate function.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:199,variab,variable,199,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,"// Each GlobalValue is mapped to an identifier. The Config ensures when RAUW; // occurs, the mapping does not change. Tracking changes is unnecessary, and; // also problematic for weak symbols (which may be overwritten).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/FunctionComparator.h:52,Config,Config,52,interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/FunctionComparator.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Transforms/Utils/FunctionComparator.h,1,['Config'],['Config']
Modifiability,"// Each Result will be assigned a variable name in the output code, but not; // all those variable names will actually be used (e.g. the return value of; // Builder.CreateStore has void type, so nobody will want to refer to it). To; // prevent annoying compiler warnings, we track whether each Result's; // variable name was ever actually mentioned in subsequent statements, so; // that it can be left out of the final generated code.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp:34,variab,variable,34,interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/MveEmitter.cpp,3,['variab'],['variable']
Modifiability,"// Each VI in VariableOffsets has a set of potential constant values. Every; // combination of elements, picked one each from these sets, is separately; // added to the original set of offsets, thus resulting in more offsets.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp:14,Variab,VariableOffsets,14,interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/AttributorAttributes.cpp,1,['Variab'],['VariableOffsets']
Modifiability,// Each iteration of this loop assigns exactly one global variable to; // exactly one of the implementation strategies.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp:58,variab,variable,58,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPULowerModuleLDSPass.cpp,1,['variab'],['variable']
Modifiability,// Each iteration of this loop reads one objc-instance-variable-decl.; // Check for extraneous top-level semicolon.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp:55,variab,variable-decl,55,interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseObjc.cpp,1,['variab'],['variable-decl']
Modifiability,"// Each iteration, try extending the elements half as much, but into twice as; // many elements.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:23,extend,extending,23,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['extend'],['extending']
Modifiability,// Each of the extended elements need to be zeroable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:15,extend,extended,15,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['extend'],['extended']
Modifiability,"// Each rule in Rules must be a strict subset of the attribute's; // SubjectMatch rules. I.e. we're allowed to use; // `apply_to=variables(is_global)` on an attrubute with SubjectList<[Var]>,; // but should not allow `apply_to=variables` on an attribute which has; // `SubjectList<[GlobalVar]>`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAttr.cpp:129,variab,variables,129,interpreter/llvm-project/clang/lib/Sema/SemaAttr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaAttr.cpp,2,['variab'],['variables']
Modifiability,// Early-exit if there are no interesting variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp:42,variab,variables,42,interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/DebugInfo.cpp,1,['variab'],['variables']
Modifiability,"// Easy, just extend SibLeaf and we're done.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h:14,extend,extend,14,interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/ADT/IntervalMap.h,1,['extend'],['extend']
Modifiability,// Eat the identifier.; // A multiclass body introduces a new scope for local variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/TGParser.cpp:78,variab,variables,78,interpreter/llvm-project/llvm/lib/TableGen/TGParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/TGParser.cpp,1,['variab'],['variables']
Modifiability,"// Editor plugin...",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowser.cxx:10,plugin,plugin,10,gui/gui/src/TRootBrowser.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TRootBrowser.cxx,1,['plugin'],['plugin']
Modifiability,// Either '[init op ]... op pack' or 'pack op ...[ op init]'; // Refactored to '[(init|pack) op ]...[ op (pack|init)]'; // Fold expr operands are cast-expressions,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h:65,Refactor,Refactored,65,interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Demangle/ItaniumDemangle.h,1,['Refactor'],['Refactored']
Modifiability,"// Either the record variable or the field has an initializer that we can; // trust. We trust initializers of constants and, additionally, respect; // initializers of globals when analyzing main().",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp:21,variab,variable,21,interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Core/RegionStore.cpp,1,['variab'],['variable']
Modifiability,"// Elide the base class name when creating the sub-branches.; // Note: The branch names for sub-branches of a base class branch; // do not represent the full class hierarchy because we do; // this, however it does keep the branch names for the; // inherited data members simple.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx:248,inherit,inherited,248,tree/tree/src/TBranchElement.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TBranchElement.cxx,1,['inherit'],['inherited']
Modifiability,"// Eliminate MOV_32_64 if possible.; // MOV_32_64 rA, wB; //; // If wB has been zero extended, replace it with a SUBREG_TO_REG.; // This is to workaround BPF programs where pkt->{data, data_end}; // is encoded as u32, but actually the verifier populates them; // as 64bit pointer. The MOV_32_64 will zero out the top 32 bits.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFMIPeephole.cpp:85,extend,extended,85,interpreter/llvm-project/llvm/lib/Target/BPF/BPFMIPeephole.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/BPF/BPFMIPeephole.cpp,1,['extend'],['extended']
Modifiability,// Eliminate redundant IV users.; //; // Simplification works best when run before other consumers of SCEV. We; // attempt to avoid evaluating SCEVs for sign/zero extend operations until; // other expressions involving loop IVs have been evaluated. This helps SCEV; // set no-wrap flags before normalizing sign/zero extension.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:163,extend,extend,163,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,1,['extend'],['extend']
Modifiability,"// Eliminate redundant variables, e.g. x = y, or x = 5,; // but keep anything more complicated.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafetyTIL.cpp:23,variab,variables,23,interpreter/llvm-project/clang/lib/Analysis/ThreadSafetyTIL.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/ThreadSafetyTIL.cpp,1,['variab'],['variables']
Modifiability,// Eliminate this sign extend by doing a decrement in the destination type:; // sext i32 ((zext i8 X to i32) + (-1)) to i64 --> (zext i8 X to i64) + (-1),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:23,extend,extend,23,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['extend'],['extend']
Modifiability,// Eliminate this sign extend by doing a negation in the destination type:; // sext i32 (0 - (zext i8 X to i32)) to i64 --> 0 - (zext i8 X to i64),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:23,extend,extend,23,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['extend'],['extend']
Modifiability,"// Else we have to search through the non-runtime protocol's inheritancy; // hierarchy DAG stopping whenever a branch either finds a runtime protocol or; // a non-runtime protocol without any parents. These are the ""first-implied""; // protocols from a non-runtime protocol.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp:61,inherit,inheritancy,61,interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjC.cpp,1,['inherit'],['inheritancy']
Modifiability,"// Else, extend the promoted float value to the desired VT.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeFloatTypes.cpp:9,extend,extend,9,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeFloatTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeFloatTypes.cpp,2,['extend'],['extend']
Modifiability,// Emit CUDA/HIP static device variables referenced by host code only.; // Note we should not clear CUDADeviceVarODRUsedByHost since it is still; // needed for further handling.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:31,variab,variables,31,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['variab'],['variables']
Modifiability,"// Emit Stack maps before any debug info. Mach-O requires that no data or; // text sections come after debug info has been emitted. This matters for; // stack maps as they are arbitrary data, and may even have a custom format; // through user plugins.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:243,plugin,plugins,243,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,1,['plugin'],['plugins']
Modifiability,// Emit UDT records for any types used by global variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp:49,variab,variables,49,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,1,['variab'],['variables']
Modifiability,// Emit VarDecl with copy init for arrays.; // Get the address of the original variable captured in current; // captured region.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:79,variab,variable,79,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,2,['variab'],['variable']
Modifiability,"// Emit a compare of the stack pointer against the stack floor, and a call to; // the LE stack extender if needed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZFrameLowering.cpp:95,extend,extender,95,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZFrameLowering.cpp,1,['extend'],['extender']
Modifiability,// Emit a global array containing all external kernels or device variables; // used by host functions and mark it as used for CUDA/HIP. This is necessary; // to get kernels or device variables in archives linked in even if these; // kernels or device variables are only used in host functions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:65,variab,variables,65,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,3,['variab'],['variables']
Modifiability,// Emit a global variable in shared memory to store the broadcasted; // value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp:17,variab,variable,17,interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/OpenMPOpt.cpp,1,['variab'],['variable']
Modifiability,"// Emit a legalized extension from <2 x s16> to 2 32-bit components, avoiding; // any illegal vector extend or unmerge operations.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp:101,extend,extend,101,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp,1,['extend'],['extend']
Modifiability,"// Emit a package option.; //; // CHECKER_OPTION(OPTIONTYPE, CHECKERNAME, OPTIONNAME, DESCRIPTION, DEFAULT); // - OPTIONTYPE: Type of the option, whether it's integer or boolean etc.; // This is important for validating user input. Note that; // it's a string, rather than an actual type: since we can; // load checkers runtime, we can't use template hackery for; // sorting this out compile-time.; // - CHECKERNAME: Name of the package.; // - OPTIONNAME: Name of the option.; // - DESCRIPTION; // - DEFAULT: The default value for this option.; //; // The full option can be specified in the command like this:; // -analyzer-config CHECKERNAME:OPTIONNAME=VALUE",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangSACheckersEmitter.cpp:625,config,config,625,interpreter/llvm-project/clang/utils/TableGen/ClangSACheckersEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangSACheckersEmitter.cpp,1,['config'],['config']
Modifiability,"// Emit a package option.; //; // PACKAGE_OPTION(OPTIONTYPE, PACKAGENAME, OPTIONNAME, DESCRIPTION, DEFAULT); // - OPTIONTYPE: Type of the option, whether it's integer or boolean etc.; // This is important for validating user input. Note that; // it's a string, rather than an actual type: since we can; // load checkers runtime, we can't use template hackery for; // sorting this out compile-time.; // - PACKAGENAME: Name of the package.; // - OPTIONNAME: Name of the option.; // - DESCRIPTION; // - DEFAULT: The default value for this option.; //; // The full option can be specified in the command like this:; // -analyzer-config PACKAGENAME:OPTIONNAME=VALUE",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangSACheckersEmitter.cpp:625,config,config,625,interpreter/llvm-project/clang/utils/TableGen/ClangSACheckersEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/ClangSACheckersEmitter.cpp,1,['config'],['config']
Modifiability,// Emit a special ABSW node that will be expanded to NEGW+MAX at isel.; // This allows us to remember that the result is sign extended. Expanding; // to NEGW+MAX here requires a Freeze which breaks ComputeNumSignBits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:126,extend,extended,126,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,1,['extend'],['extended']
Modifiability,// Emit a variable location using an entry value expression.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:10,variab,variable,10,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['variab'],['variable']
Modifiability,"// Emit a variable-length allocation probing loop.; // TODO: As an optimisation, the loop can be ""unrolled"" into a few parts,; // each of them guaranteed to adjust the stack by less than the probe size.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp:10,variab,variable-length,10,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64FrameLowering.cpp,1,['variab'],['variable-length']
Modifiability,// Emit a weak global function referring to the initialization function.; // This function will not exist if the TU defining the thread_local; // variable in question does not need any dynamic initialization for; // its thread_local variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp:146,variab,variable,146,interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,"// Emit a zero-extending move from 32-bit GPR SrcReg to 32-bit GPR; // DestReg before MBBI in MBB. Use LowLowOpcode when both DestReg and SrcReg; // are low registers, otherwise use RISB[LH]G. Size is the number of bits; // taken from the low end of SrcReg (8 for LLCR, 16 for LLHR and 32 for LR).; // KillSrc is true if this move is the last use of SrcReg.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp:15,extend,extending,15,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZInstrInfo.cpp,1,['extend'],['extending']
Modifiability,// Emit alias label and element value for global variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp:49,variab,variable,49,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp,1,['variab'],['variable']
Modifiability,// Emit all fragments that belong to the same variable and range.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp:46,variab,variable,46,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfDebug.cpp,1,['variab'],['variable']
Modifiability,// Emit an array of FileChecksum entries. We index into this table using the; // user-provided file number. Each entry may be a variable number of bytes; // determined by the checksum kind and size.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCCodeView.cpp:128,variab,variable,128,interpreter/llvm-project/llvm/lib/MC/MCCodeView.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCCodeView.cpp,1,['variab'],['variable']
Modifiability,"// Emit an error if an address space was applied to decl with local storage.; // This includes arrays of objects with address space qualifiers, but not; // automatic variables that point to other address spaces.; // ISO/IEC TR 18037 S5.1.2",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:166,variab,variables,166,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variables']
Modifiability,// Emit atomic reduction for array subscript or single variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:55,variab,variable,55,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['variab'],['variable']
Modifiability,// Emit buffers for each reduction variables.; // ReductionCodeGen is required to emit correctly the code for array; // reductions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:35,variab,variables,35,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['variab'],['variables']
Modifiability,// Emit constant global variables in a global symbol section.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp:24,variab,variables,24,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,1,['variab'],['variables']
Modifiability,// Emit copying of the whole variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:29,variab,variable,29,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['variab'],['variable']
Modifiability,// Emit declaration of the must-be-emitted declare target variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:58,variab,variable,58,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['variab'],['variable']
Modifiability,// Emit destructor calls for local variables of record; // type with a destructor.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.h:35,variab,variables,35,interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/ByteCodeExprGen.h,1,['variab'],['variables']
Modifiability,// Emit each global variable in the specified array.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp:20,variab,variable,20,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,1,['variab'],['variable']
Modifiability,// Emit final copy of the lastprivate variables at the end of loops.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:38,variab,variables,38,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['variab'],['variables']
Modifiability,// Emit final copy of the lastprivate variables if IsLastIter != 0.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:38,variab,variables,38,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,4,['variab'],['variables']
Modifiability,// Emit global variable debug descriptor for static vars.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp:15,variab,variable,15,interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGDecl.cpp,1,['variab'],['variable']
Modifiability,// Emit global variable debug information.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:15,variab,variable,15,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,3,['variab'],['variable']
Modifiability,// Emit global variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:15,variab,variables,15,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,1,['variab'],['variables']
Modifiability,// Emit implicit barrier to synchronize threads and avoid data races on; // initialization of firstprivate variables and post-update of lastprivate; // variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:107,variab,variables,107,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,2,['variab'],['variables']
Modifiability,// Emit implicit barrier to synchronize threads and avoid data races on; // initialization of firstprivate variables and post-update of; // lastprivate variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:107,variab,variables,107,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,2,['variab'],['variables']
Modifiability,// Emit implicit barrier to synchronize threads and avoid data races on; // initialization of firstprivate variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:107,variab,variables,107,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['variab'],['variables']
Modifiability,// Emit implicit barrier to synchronize threads and avoid data races on; // propagation master's thread values of threadprivate variables to local; // instances of that variables of all other implicit threads.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:128,variab,variables,128,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,2,['variab'],['variables']
Modifiability,// Emit implicit barrier to synchronize threads and avoid data races; // on initialization of firstprivate variables and post-update of; // lastprivate variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:107,variab,variables,107,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,2,['variab'],['variables']
Modifiability,// Emit init statements. The Distance/LoopVar funcs may reference variable; // declarations they contain.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:66,variab,variable,66,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['variab'],['variable']
Modifiability,"// Emit init, __range and __end variables for C++ range loops.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:32,variab,variables,32,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['variab'],['variables']
Modifiability,// Emit inits for the linear variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:29,variab,variables,29,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['variab'],['variables']
Modifiability,// Emit linkage for the global variable and its aliases.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp:31,variab,variable,31,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCAsmPrinter.cpp,1,['variab'],['variable']
Modifiability,// Emit local variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp:14,variab,variables,14,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DwarfCompileUnit.cpp,1,['variab'],['variables']
Modifiability,// Emit loop variables for C++ range loops.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:13,variab,variables,13,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['variab'],['variables']
Modifiability,// Emit post-update of the reduction variables if IsLastIter != 0.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:37,variab,variables,37,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,3,['variab'],['variables']
Modifiability,// Emit private VarDecl with copy init.; // Remap temp VDInit variable to the address of the original; // variable (for proper handling of captured global variables).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:62,variab,variable,62,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,3,['variab'],"['variable', 'variables']"
Modifiability,// Emit reduction for array subscript or single variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:48,variab,variable,48,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,2,['variab'],['variable']
Modifiability,// Emit reference to the private copy of the variable if it is an OpenMP; // threadprivate variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp:45,variab,variable,45,interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,2,['variab'],['variable']
Modifiability,// Emit return variable declaration first as to not trigger; // -Wdeclaration-after-statement.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/NeonEmitter.cpp:15,variab,variable,15,interpreter/llvm-project/clang/utils/TableGen/NeonEmitter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/utils/TableGen/NeonEmitter.cpp,2,['variab'],['variable']
Modifiability,// Emit section information for extern variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:39,variab,variables,39,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['variab'],['variables']
Modifiability,"// Emit special code for a flexible array member with the ""counted_by""; // attribute.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:27,flexible,flexible,27,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,1,['flexible'],['flexible']
Modifiability,// Emit stack extend instructions,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp:14,extend,extend,14,interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.cpp,1,['extend'],['extend']
Modifiability,// Emit the @__kmpc_omp_task_alloc runtime call; // The runtime call returns a pointer to an area where the task captured; // variables must be copied before the task is run (TaskData),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp:126,variab,variables,126,interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Frontend/OpenMP/OMPIRBuilder.cpp,1,['variab'],['variables']
Modifiability,"// Emit the ID's for all the instructions that are matched by this rule.; // TODO: Limit this to matched instructions that mayLoad/mayStore or have; // some other means of having a memoperand. Also limit this to; // emitted instructions that expect to have a memoperand too. For; // example, (G_SEXT (G_LOAD x)) that results in separate load and; // sign-extend instructions shouldn't put the memoperand on the; // sign-extend since it has no effect there.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelMatchTable.cpp:355,extend,extend,355,interpreter/llvm-project/llvm/utils/TableGen/GlobalISelMatchTable.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/utils/TableGen/GlobalISelMatchTable.cpp,2,['extend'],['extend']
Modifiability,"// Emit the RHS first. __block variables need to have the rhs evaluated; // first, plus this should improve codegen a little.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:31,variab,variables,31,interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,1,['variab'],['variables']
Modifiability,// Emit the RHS. __block variables need the RHS evaluated first.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprComplex.cpp:25,variab,variables,25,interpreter/llvm-project/clang/lib/CodeGen/CGExprComplex.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprComplex.cpp,1,['variab'],['variables']
Modifiability,// Emit the alignment and storage for the variable to the section.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCXCOFFStreamer.cpp:42,variab,variable,42,interpreter/llvm-project/llvm/lib/MC/MCXCOFFStreamer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCXCOFFStreamer.cpp,1,['variab'],['variable']
Modifiability,// Emit the condition variable if needed inside the entire cleanup scope; // used by this special case for constant folded switches.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp:22,variab,variable,22,interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmt.cpp,1,['variab'],['variable']
Modifiability,// Emit the configuration macros.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp:12,config,configuration,12,interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp,1,['config'],['configuration']
Modifiability,// Emit the error. First figure out which DeclRefExpr in the condition; // referenced the compared variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp:99,variab,variable,99,interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/StaticAnalyzer/Checkers/CheckSecuritySyntaxOnly.cpp,1,['variab'],['variable']
Modifiability,// Emit the final values of the linear variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:39,variab,variables,39,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['variab'],['variables']
Modifiability,// Emit the global variable information.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp:19,variab,variable,19,interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,3,['variab'],['variable']
Modifiability,"// Emit the initializer before adding the variable to scope, this prevents; // the initializer from referencing the variable itself, and permits stuff; // like this:; // var a = 1 in; // var a = a in ... # refers to outer 'a'.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp:42,variab,variable,42,interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,26,['variab'],['variable']
Modifiability,"// Emit the iterations count variable.; // If it is not a variable, Sema decided to calculate iterations count on each; // iteration (e.g., it is foldable into a constant).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:29,variab,variable,29,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,4,['variab'],['variable']
Modifiability,"// Emit the iterations count variable.; // If it is not a variable, Sema decided to calculate iterations count on; // each iteration (e.g., it is foldable into a constant).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:29,variab,variable,29,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,4,['variab'],['variable']
Modifiability,// Emit the loop body: Convert the logical iteration number to the loop; // variable and emit the body.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:76,variab,variable,76,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['variab'],['variable']
Modifiability,// Emit the loop iteration variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:27,variab,variable,27,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,5,['variab'],['variable']
Modifiability,"// Emit the start code first, without 'variable' in scope.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp:39,variab,variable,39,interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/examples/Kaleidoscope/BuildingAJIT/Chapter1/toy.cpp,15,['variab'],['variable']
Modifiability,// Emit the subreg copies and immediately select them.; // FIXME: We should refactor our copy code into an emitCopy helper and; // clean up uses of this pattern elsewhere in the selector.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp:76,refactor,refactor,76,interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/GISel/AArch64InstructionSelector.cpp,1,['refactor'],['refactor']
Modifiability,// Emit the variable and initialize it with what we think the correct value; // is. This allows code compiled with non-fragile ivars to work correctly; // when linked against code which isn't (most of the time).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp:12,variab,variable,12,interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGObjCGNU.cpp,1,['variab'],['variable']
Modifiability,// Emit the variable just like any regular global variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp:12,variab,variable,12,interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp,2,['variab'],['variable']
Modifiability,// Emit the variable struct for the runtime.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:12,variab,variable,12,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,1,['variab'],['variable']
Modifiability,// Emit this global variable in a single global symbol section.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp:20,variab,variable,20,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,1,['variab'],['variable']
Modifiability,// Emit this global variable into a COMDAT section.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp:20,variab,variable,20,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,1,['variab'],['variable']
Modifiability,// Emit threadprivate global variable if the type is non-constant; // (Sizes.second = nullptr).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp:29,variab,variable,29,interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGOpenMPRuntime.cpp,1,['variab'],['variable']
Modifiability,"// Emit top-level description of module, including target triple, inline asm,; // descriptors for global variables, and function prototype info.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp:105,variab,variables,105,interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/BitcodeWriter.cpp,2,['variab'],['variables']
Modifiability,"// Emit type metadata on vtables with LTO or IR instrumentation.; // In IR instrumentation, the type metadata could be used to find out vtable; // definitions (for type profiling) among all global variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp:197,variab,variables,197,interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/MicrosoftCXXABI.cpp,1,['variab'],['variables']
Modifiability,"// Emit type metadata on vtables with LTO or IR instrumentation.; // In IR instrumentation, the type metadata is used to find out vtable; // definitions (for type profiling) among all global variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGVTables.cpp:191,variab,variables,191,interpreter/llvm-project/clang/lib/CodeGen/CGVTables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGVTables.cpp,1,['variab'],['variables']
Modifiability,// Emit variables local to this lexical block.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp:8,variab,variables,8,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/CodeViewDebug.cpp,1,['variab'],['variables']
Modifiability,"// Emit variably modified arrays, used for arrays/array sections; // reductions.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp:8,variab,variably,8,interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGStmtOpenMP.cpp,1,['variab'],['variably']
Modifiability,// EmitCommonSymbol and EmitLocalCommonSymbol are extended versions of the; // functions found in MCELFStreamer.cpp taking AccessSize as an additional; // parameter.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCELFStreamer.cpp:50,extend,extended,50,interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCELFStreamer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/MCTargetDesc/HexagonMCELFStreamer.cpp,1,['extend'],['extended']
Modifiability,"// EmitGlobalVariable - This method emits the specified global variable to the; // address specified in GlobalAddresses, or allocates new memory if it's not; // already in the map.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/ExecutionEngine.cpp:63,variab,variable,63,interpreter/llvm-project/llvm/lib/ExecutionEngine/ExecutionEngine.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/ExecutionEngine.cpp,1,['variab'],['variable']
Modifiability,// Emits code for extending SP in function prologue/epilogue.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.h:18,extend,extending,18,interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/VE/VEFrameLowering.h,1,['extend'],['extending']
Modifiability,// Empty flexible array init always allowed as an extension,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:9,flexible,flexible,9,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,1,['flexible'],['flexible']
Modifiability,"// Empty initialization requires a constructor call, so; // extend the initializer list to include the constructor; // call and make a note that we'll need to take another pass; // through the initializer list.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp:60,extend,extend,60,interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaInit.cpp,2,['extend'],['extend']
Modifiability,"// Empty types can be inherited from, and non-empty types can potentially; // have tail padding, so just make sure there isn't an error.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:22,inherit,inherited,22,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['inherit'],['inherited']
Modifiability,"// Enable compatilibily mode to avoid analyzer-config related errors.; // Since we can't access frontend flags through hasArg, let's manually iterate; // through them.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:47,config,config,47,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['config'],['config']
Modifiability,// Enable rewrite includes if the user's asked for it or if we're generating; // diagnostics.; // TODO: Once -module-dependency-dir works with -frewrite-includes it'd be; // nice to enable this when doing a crashdump for modules as well.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:10,rewrite,rewrite,10,interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp,1,['rewrite'],['rewrite']
Modifiability,"// EnableImplicitMT() only enables thread safety if IMT was configured;; // enable thread safety even with IMT off:",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx:60,config,configured,60,core/base/src/TApplication.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/base/src/TApplication.cxx,1,['config'],['configured']
Modifiability,"// End instr loop.; // Make sure locations for all variables are valid only until the end of; // the basic block (unless it's the last basic block, in which case let; // their liveness run off to the end of the function).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DbgEntityHistoryCalculator.cpp:51,variab,variables,51,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DbgEntityHistoryCalculator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DbgEntityHistoryCalculator.cpp,1,['variab'],['variables']
Modifiability,// End is computed with extended type but will be truncated to a narrow one; // type of range check. Therefore we need a check that the result will not; // overflow in terms of narrow type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InductiveRangeCheckElimination.cpp:24,extend,extended,24,interpreter/llvm-project/llvm/lib/Transforms/Scalar/InductiveRangeCheckElimination.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/InductiveRangeCheckElimination.cpp,1,['extend'],['extended']
Modifiability,"// Enforce ""same axis configuration"" policy.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx:22,config,configuration,22,hist/histv7/inc/ROOT/RHist.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/histv7/inc/ROOT/RHist.hxx,1,['config'],['configuration']
Modifiability,// Enhance/cleanup vector code.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp:3,Enhance,Enhance,3,interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Passes/PassBuilderPipelines.cpp,1,['Enhance'],['Enhance']
Modifiability,// Enhanced VA Scheme,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MipsABIFlags.h:3,Enhance,Enhanced,3,interpreter/llvm-project/llvm/include/llvm/Support/MipsABIFlags.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/MipsABIFlags.h,1,['Enhance'],['Enhanced']
Modifiability,// Enhanced instruction set SPARC,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h:3,Enhance,Enhanced,3,interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/BinaryFormat/ELF.h,1,['Enhance'],['Enhanced']
Modifiability,// Ensure a node's inherited namespace is actually defined in the tree it; // resides in.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/WindowsManifest/WindowsManifestMerger.cpp:19,inherit,inherited,19,interpreter/llvm-project/llvm/lib/WindowsManifest/WindowsManifestMerger.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/WindowsManifest/WindowsManifestMerger.cpp,1,['inherit'],['inherited']
Modifiability,// Ensure both extends are of the same type,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp:15,extend,extends,15,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp,1,['extend'],['extends']
Modifiability,// Ensure every user of the phi node (recursively) is dominated by the; // previous value. The dominance requirement ensures the loop vectorizer will; // not need to vectorize the initial value prior to the first iteration of the; // loop.; // TODO: Consider extending this sinking to handle memory instructions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp:259,extend,extending,259,interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp,1,['extend'],['extending']
Modifiability,// Ensure global variables are fully initialized.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/Context.cpp:17,variab,variables,17,interpreter/llvm-project/clang/lib/AST/Interp/Context.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/Interp/Context.cpp,1,['variab'],['variables']
Modifiability,// Ensure miminum alignment for global variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp:39,variab,variables,39,interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ASTContext.cpp,1,['variab'],['variables']
Modifiability,"// Ensure that all columns in the header extension have their associated `R(Column|Page)Range`; // Extended columns can be attached both to fields of the regular header and to fields of the extension header",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/src/RNTupleDescriptor.cxx:99,Extend,Extended,99,tree/ntuple/v7/src/RNTupleDescriptor.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/ntuple/v7/src/RNTupleDescriptor.cxx,1,['Extend'],['Extended']
Modifiability,// Ensure that each language is configured at most once.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp:32,config,configured,32,interpreter/llvm-project/clang/lib/Format/Format.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp,1,['config'],['configured']
Modifiability,"// Ensure that the bbox lies within the text layout. This forces all; // chars that extend off the right edge of the text layout to have; // truncated widths, and all chars that are completely off the right; // edge of the text layout to peg to the edge and have 0 width.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFont.cxx:84,extend,extend,84,gui/gui/src/TGFont.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/gui/gui/src/TGFont.cxx,1,['extend'],['extend']
Modifiability,"// Ensure that the edge was in fact deleted from the CFG before informing; // the DomTree about it.; // The check is O(N), so run it only in debug configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h:147,config,configuration,147,interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/GenericDomTreeConstruction.h,1,['config'],['configuration']
Modifiability,// Ensure that the load from the narrow width is being zero extended to i128.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:60,extend,extended,60,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['extend'],['extended']
Modifiability,// Ensure the extend is from vXi8.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:14,extend,extend,14,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['extend'],['extend']
Modifiability,// Ensure the inherited getTrailingObjectsImpl is not hidden.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TrailingObjects.h:14,inherit,inherited,14,interpreter/llvm-project/llvm/include/llvm/Support/TrailingObjects.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Support/TrailingObjects.h,1,['inherit'],['inherited']
Modifiability,// Ensures that only the first configuration can skip the Language option.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp:31,config,configuration,31,interpreter/llvm-project/clang/lib/Format/Format.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Format/Format.cpp,1,['config'],['configuration']
Modifiability,"// Enter a cleanup scope, including the catch variable and the; // end-catch.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp:46,variab,variable,46,interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGException.cpp,1,['variab'],['variable']
Modifiability,"// Enter a scope to hold everything within the block. This includes the; // argument decls, decls within the compound expression, etc. This also; // allows determining whether a variable reference inside the block is; // within or outside of the block.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExpr.cpp:178,variab,variable,178,interpreter/llvm-project/clang/lib/Parse/ParseExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Parse/ParseExpr.cpp,1,['variab'],['variable']
Modifiability,// Entry reference count for each variable. Clobbers left with no references; // will be removed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DbgEntityHistoryCalculator.cpp:34,variab,variable,34,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DbgEntityHistoryCalculator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/DbgEntityHistoryCalculator.cpp,1,['variab'],['variable']
Modifiability,"// Enum selection rules are the same as Variable selection rules",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/VariableSelectionRule.h:40,Variab,Variable,40,core/dictgen/res/VariableSelectionRule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/dictgen/res/VariableSelectionRule.h,1,['Variab'],['Variable']
Modifiability,// Enumerate the global variable initializers and attributes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/ValueEnumerator.cpp:24,variab,variable,24,interpreter/llvm-project/llvm/lib/Bitcode/Writer/ValueEnumerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/ValueEnumerator.cpp,2,['variab'],['variable']
Modifiability,// Enumerate the global variables.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/ValueEnumerator.cpp:24,variab,variables,24,interpreter/llvm-project/llvm/lib/Bitcode/Writer/ValueEnumerator.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Bitcode/Writer/ValueEnumerator.cpp,2,['variab'],['variables']
Modifiability,"// Equality (== and !=) ICmps are special. We can rewrite (i == N) as; // (N - i == 0), and this allows (N - i) to be the expression that we work; // with rather than just N or i, so we can consider the register; // requirements for both N and i at the same time. Limiting this code to; // equality icmps is not a problem because all interesting loops use; // equality icmps, thanks to IndVarSimplify.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp:50,rewrite,rewrite,50,interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/LoopStrengthReduce.cpp,1,['rewrite'],['rewrite']
Modifiability,// Erase the variable/fragment that ends here.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp:13,variab,variable,13,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/VarLocBasedImpl.cpp,1,['variab'],['variable']
Modifiability,"// Erases variables in `FixItsForVariable`, if such a variable has an unfixable; // group mate. A variable `v` is unfixable iff `FixItsForVariable` does not; // contain `v`.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp:10,variab,variables,10,interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Analysis/UnsafeBufferUsage.cpp,3,['variab'],"['variable', 'variables']"
Modifiability,"// Error really unexpected here, because construction / iteration guarantees; //inheritance;",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx:80,inherit,inheritance,80,core/metacling/src/TClingBaseClassInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingBaseClassInfo.cxx,1,['inherit'],['inheritance']
Modifiability,"// Error, was not a data member, variable, or enumerator.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx:33,variab,variable,33,core/metacling/src/TClingDataMemberInfo.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/core/metacling/src/TClingDataMemberInfo.cxx,3,['variab'],['variable']
Modifiability,// Essentially ends in a flexible array member:; // llvm::Value *FilterTypes[0];,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCleanup.h:25,flexible,flexible,25,interpreter/llvm-project/clang/lib/CodeGen/CGCleanup.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGCleanup.h,1,['flexible'],['flexible']
Modifiability,"// Evaluate as many IV expressions as possible before widening any IVs. This; // forces SCEV to set no-wrap flags before evaluating sign/zero; // extension. The first time SCEV attempts to normalize sign/zero extension,; // the result becomes final. So for the most predictable results, we delay; // evaluation of sign/zero extend evaluation until needed, and avoid running; // other SCEV based analysis prior to simplifyAndExtend.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp:324,extend,extend,324,interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/IndVarSimplify.cpp,1,['extend'],['extend']
Modifiability,// Evaluate recursively if this is a variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCExpr.cpp:37,variab,variable,37,interpreter/llvm-project/llvm/lib/MC/MCExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/MC/MCExpr.cpp,1,['variab'],['variable']
Modifiability,// Evaluate the C++17 init stmt and condition variable; // before entering the scope of the switch statement.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/JumpDiagnostics.cpp:46,variab,variable,46,interpreter/llvm-project/clang/lib/Sema/JumpDiagnostics.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/JumpDiagnostics.cpp,1,['variab'],['variable']
Modifiability,"// Evaluate the cached variables and store the results",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx:23,variab,variables,23,roofit/roofitcore/src/RooTreeDataStore.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooTreeDataStore.cxx,1,['variab'],['variables']
Modifiability,"// Evaluate the factor (polynomial) in the j-th variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx:48,variab,variable,48,hist/hist/src/TMultiDimFit.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/hist/hist/src/TMultiDimFit.cxx,2,['variab'],['variable']
Modifiability,"// Evaluate the gradients of the last layers in each deep net",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h:38,layers,layers,38,tmva/tmva/inc/TMVA/DNN/DeepNet.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tmva/tmva/inc/TMVA/DNN/DeepNet.h,3,['layers'],['layers']
Modifiability,"// Evaluates RHS for all elements of MHS, using LHS as a temp variable.; // Creates a new list with the elements that evaluated to true.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/Record.cpp:62,variab,variable,62,interpreter/llvm-project/llvm/lib/TableGen/Record.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TableGen/Record.cpp,1,['variab'],['variable']
Modifiability,"// Evaluates an XRay record and performs accounting on it.; //; // If the record is an ENTER record it pushes the FuncID and TSC onto a; // structure representing the call stack for that function.; // If the record is an EXIT record it checks computes computes the ammount of; // time the function took to complete and then stores that information in an; // edge of the graph. If there is no matching ENTER record the function tries; // to recover by assuming that there were EXIT records which were missed, for; // example caused by tail call elimination and if the option is enabled then; // then tries to recover from this.; //; // This function will also error if the records are out of order, as the trace; // is expected to be sorted.; //; // The graph generated has an immaginary root for functions called by no-one at; // FuncId 0.; //; // FIXME: Refactor this and account subcommand to reduce code duplication.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-xray/xray-graph.cpp:855,Refactor,Refactor,855,interpreter/llvm-project/llvm/tools/llvm-xray/xray-graph.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/tools/llvm-xray/xray-graph.cpp,1,['Refactor'],['Refactor']
Modifiability,"// Evaluation of WideAddRec ensured that the narrow expression could be; // extended outside the loop without overflow. This suggests that the wide use; // evaluates to the same expression as the extended narrow use, but doesn't; // absolutely guarantee it. Hence the following failsafe check. In rare cases; // where it fails, we simply throw away the newly created wide use.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp:76,extend,extended,76,interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Utils/SimplifyIndVar.cpp,2,['extend'],['extended']
Modifiability,"// Eve element to store generic configuration information.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveParamList.h:32,config,configuration,32,graf3d/eve/inc/TEveParamList.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveParamList.h,1,['config'],['configuration']
Modifiability,"// Even if no weight variable is specified, we want to have one if we are; // importing weighted datasets",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx:21,variab,variable,21,roofit/roofitcore/src/RooDataSet.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataSet.cxx,1,['variab'],['variable']
Modifiability,// Even if one reference is not handled we will not do anything about that; // pool variable.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransAutoreleasePool.cpp:84,variab,variable,84,interpreter/llvm-project/clang/lib/ARCMigrate/TransAutoreleasePool.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/ARCMigrate/TransAutoreleasePool.cpp,1,['variab'],['variable']
Modifiability,"// Even if we can't convert to sext_inreg, we might be able to; // remove this shift pair if the input is already sign extended.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp:119,extend,extended,119,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/TargetLowering.cpp,1,['extend'],['extended']
Modifiability,"// Even non-volatile automatic variables can't be evaluated unconditionally.; // Referencing a thread_local may cause non-trivial initialization work to; // occur. If we're inside a lambda and one of the variables is from the scope; // outside the lambda, that function may have returned already. Reading its; // locals is a bad idea. Also, these reads may introduce races there didn't; // exist in the source-level program.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:31,variab,variables,31,interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,2,['variab'],['variables']
Modifiability,"// Even pre-legalization, we can't easily rotate/funnel-shift by a variable; // shift.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:67,variab,variable,67,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['variab'],['variable']
Modifiability,"// Even though DPV defines a variable location, VarLocsBeforeInst can; // still be empty if that VarLoc was redundant.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp:29,variab,variable,29,interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AssignmentTrackingAnalysis.cpp,1,['variab'],['variable']
Modifiability,"// Even though we accept this undocumented extension for compatibility; // reasons, the additional integer argument does not actually change; // the behaviour of the '.ent' directive, so we would like to discourage; // its use. We do this by not referring to the extended version in; // error messages which are not directly related to its use.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp:263,extend,extended,263,interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,1,['extend'],['extended']
Modifiability,"// Even with predefines off, some macros are still predefined.; // These should all be defined in the preprocessor according to the; // current language configuration.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/InitPreprocessor.cpp:153,config,configuration,153,interpreter/llvm-project/clang/lib/Frontend/InitPreprocessor.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/InitPreprocessor.cpp,1,['config'],['configuration']
Modifiability,"// Every active variable mapping for NewLoc will be cleared, no; // need to track individual variables.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:16,variab,variable,16,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,"// Every call to saveSetjmp can change setjmpTable and setjmpTableSize; // (when buffer reallocation occurs); // entry:; // setjmpTableSize = 4;; // setjmpTable = (int *) malloc(40);; // setjmpTable[0] = 0;; // ...; // somebb:; // setjmpTable = saveSetjmp(env, label, setjmpTable, setjmpTableSize);; // setjmpTableSize = getTempRet0();; // So we need to make sure the SSA for these variables is valid so that every; // saveSetjmp and testSetjmp calls have the correct arguments.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp:382,variab,variables,382,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyLowerEmscriptenEHSjLj.cpp,1,['variab'],['variables']
Modifiability,"// Every class that derives from PMDataManager also derives from Pass; // (sometimes indirectly), but there's no inheritance relationship; // between PMDataManager and Pass, so we have to getAsPass to get; // from a PMDataManager* to a Pass*.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp:113,inherit,inheritance,113,interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/LegacyPassManager.cpp,1,['inherit'],['inheritance']
Modifiability,// Every instruction which can end up as a user must have a rewrite rule.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp:60,rewrite,rewrite,60,interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Scalar/SROA.cpp,1,['rewrite'],['rewrite']
Modifiability,// Every other GV is local on COFF.; // Make an exception for windows OS in the triple: Some firmware builds use; // *-win32-macho triples. This (accidentally?) produced windows relocations; // without GOT tables in older clang versions; Keep this behaviour.; // FIXME: even thread local variables?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp:288,variab,variables,288,interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CodeGenModule.cpp,1,['variab'],['variables']
Modifiability,// Every rewrite rule is triggered by a match against some AST node.; // Transformer guarantees that this ID is bound to the triggering node whenever; // a rewrite rule is applied.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/RewriteRule.h:9,rewrite,rewrite,9,interpreter/llvm-project/clang/include/clang/Tooling/Transformer/RewriteRule.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Transformer/RewriteRule.h,2,['rewrite'],['rewrite']
Modifiability,// Everything else has a flexible offset.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp:25,flexible,flexible,25,interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Coroutines/CoroFrame.cpp,1,['flexible'],['flexible']
Modifiability,// Everything else is single inheritance.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp:29,inherit,inheritance,29,interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/ItaniumCXXABI.cpp,1,['inherit'],['inheritance']
Modifiability,// Examine PHI nodes that are reduction variables. Update the type to; // account for the recurrence type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp:40,variab,variables,40,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/LoopVectorize.cpp,1,['variab'],['variables']
Modifiability,// Examine all the variables based on this location.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:19,variab,variables,19,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['variab'],['variables']
Modifiability,// Examine extended family ID if family ID is F.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp:11,extend,extended,11,interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/TargetParser/Host.cpp,1,['extend'],['extended']
Modifiability,"// Examine the remaining variable locations: if we can find the same value; // again, we can recover the location.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp:25,variab,variable,25,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/InstrRefBasedImpl.cpp,1,['variab'],['variable']
Modifiability,"// Examines the loop nesting of the Src and Dst; // instructions and establishes their shared loops. Sets the variables; // CommonLevels, SrcLevels, and MaxLevels.; // The source and destination instructions needn't be contained in the same; // loop. The routine establishNestingLevels finds the level of most deeply; // nested loop that contains them both, CommonLevels. An instruction that's; // not contained in a loop is at level = 0. MaxLevels is equal to the level; // of the source plus the level of the destination, minus CommonLevels.; // This lets us allocate vectors MaxLevels in length, with room for every; // distinct loop referenced in both the source and destination subscripts.; // The variable SrcLevels is the nesting depth of the source instruction.; // It's used to help calculate distinct loops referenced by the destination.; // Here's the map from loops to levels:; // 0 - unused; // 1 - outermost common loop; // ... - other common loops; // CommonLevels - innermost common loop; // ... - loops containing Src but not Dst; // SrcLevels - innermost loop containing Src but not Dst; // ... - loops containing Dst but not Src; // MaxLevels - innermost loops containing Dst but not Src; // Consider the follow code fragment:; // for (a = ...) {; // for (b = ...) {; // for (c = ...) {; // for (d = ...) {; // A[] = ...;; // }; // }; // for (e = ...) {; // for (f = ...) {; // for (g = ...) {; // ... = A[];; // }; // }; // }; // }; // }; // If we're looking at the possibility of a dependence between the store; // to A (the Src) and the load from A (the Dst), we'll note that they; // have 2 loops in common, so CommonLevels will equal 2 and the direction; // vector for Result will have 2 entries. SrcLevels = 4 and MaxLevels = 7.; // A map from loop names to loop numbers would look like; // a - 1; // b - 2 = CommonLevels; // c - 3; // d - 4 = SrcLevels; // e - 5; // f - 6; // g - 7 = MaxLevels",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp:110,variab,variables,110,interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/DependenceAnalysis.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,"// Except for Mul, the induction variable must be on the left side of the; // increment expression, otherwise its value can be arbitrary.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp:33,variab,variable,33,interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ValueTracking.cpp,1,['variab'],['variable']
Modifiability,"// Exception-safe wrapper for temporary setting of gGeoManager variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveUtil.h:63,variab,variable,63,graf3d/eve/inc/TEveUtil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveUtil.h,1,['variab'],['variable']
Modifiability,"// Exception-safe wrapper for temporary setting of gPad variable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveUtil.h:56,variab,variable,56,graf3d/eve/inc/TEveUtil.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/eve/inc/TEveUtil.h,1,['variab'],['variable']
Modifiability,"// Exclude somes case where LD_SPLAT is worse than scalar_to_vector:; // Below cases should also happen for ""lfiwzx/lfiwax + LE target + index; // 1"" and ""lxvrhx + BE target + index 7"" and ""lxvrbx + BE target + index; // 15"", but function IsValidSplatLoad() now will only return true when; // the data at index 0 is not nullptr. So we will not get into trouble for; // these cases.; //; // case 1 - lfiwzx/lfiwax; // 1.1: load result is i32 and is sign/zero extend to i64;; // 1.2: build a v2i64 vector type with above loaded value;; // 1.3: the vector has only one value at index 0, others are all undef;; // 1.4: on BE target, so that lfiwzx/lfiwax does not need any permute.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp:458,extend,extend,458,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCISelLowering.cpp,1,['extend'],['extend']
Modifiability,"// Exclude the data variables from the parameters which are not global observables",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEvaluatorWrapper.cxx:20,variab,variables,20,roofit/roofitcore/src/RooEvaluatorWrapper.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooEvaluatorWrapper.cxx,1,['variab'],['variables']
Modifiability,// Exclusive disjunction reduction over the vector with; // (potentially-extended) i1 element type is actually a; // (potentially-extended) arithmetic `add` reduction over the original; // non-extended value:; // vector_reduce_xor(?ext(<n x i1>)); // -->; // ?ext(vector_reduce_add(<n x i1>)),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp:73,extend,extended,73,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCalls.cpp,3,['extend'],['extended']
Modifiability,"// Execute the plug-in",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx:15,plug-in,plug-in,15,proof/proof/src/TProof.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/proof/proof/src/TProof.cxx,1,['plug-in'],['plug-in']
Modifiability,"// Existing specialisation. Add the call to the list to rewrite, unless; // it's a recursive call. A specialisation, generated because of a; // recursive call may end up as not the best specialisation for all; // the cloned instances of this call, which result from specialising; // functions. Hence we don't rewrite the call directly, but match it with; // the best specialisation once all specialisations are known.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionSpecialization.cpp:56,rewrite,rewrite,56,interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionSpecialization.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionSpecialization.cpp,2,['rewrite'],['rewrite']
Modifiability,"// Exit early if DstTy is not a vector type whose elements are one of [i16,; // i32, i64]. SVE doesn't generally have the same set of instructions to; // perform an extend with the add/sub/mul. There are SMULLB style; // instructions, but they operate on top/bottom, requiring some sort of lane; // interleaving to be used with zext/sext.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp:165,extend,extend,165,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp,1,['extend'],['extend']
Modifiability,"// ExitInstruction is the single value which is used outside the loop.; // We only allow for a single reduction value to be used outside the loop.; // This includes users of the reduction, variables (which form a cycle; // which ends in the phi node).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp:189,variab,variables,189,interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/IVDescriptors.cpp,1,['variab'],['variables']
Modifiability,// Expand all extending loads and truncating stores:,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp:14,extend,extending,14,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonISelLowering.cpp,1,['extend'],['extending']
Modifiability,"// Expand all extending loads to types larger than this, and truncating; // stores from types larger than this.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:14,extend,extending,14,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,1,['extend'],['extending']
Modifiability,// Expand all truncating stores and extending loads.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp:36,extend,extending,36,interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp,2,['extend'],['extending']
Modifiability,"// Expand list of observables with any observables used in parameterized ranges",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx:59,parameteriz,parameterized,59,roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/TestStatistics/RooAbsL.cxx,1,['parameteriz'],['parameterized']
Modifiability,"// Expand list of observables with any observables used in parameterized ranges.; // This NEEDS to be a counting loop since we are inserting during the loop.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsOptTestStatistic.cxx:59,parameteriz,parameterized,59,roofit/roofitcore/src/RooAbsOptTestStatistic.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooAbsOptTestStatistic.cxx,1,['parameteriz'],['parameterized']
Modifiability,// Expand to an ORi instead of a LUi to avoid sign-extending into the; // upper 32 bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp:51,extend,extending,51,interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/AsmParser/MipsAsmParser.cpp,2,['extend'],['extending']
Modifiability,"// Expands the partition to ensure the following rules hold:; // (1) If any alias is in the partition, its aliasee is also in the partition.; // (2) If any aliasee is in the partition, its aliases are also in the; // partiton.; // (3) If any global variable is in the partition then all global variables; // are in the partition.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/CompileOnDemandLayer.cpp:249,variab,variable,249,interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/CompileOnDemandLayer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/ExecutionEngine/Orc/CompileOnDemandLayer.cpp,2,['variab'],"['variable', 'variables']"
Modifiability,// Expected<T> evaluate(RefactoringRuleContext &Context) const;,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringActionRuleRequirements.h:24,Refactor,RefactoringRuleContext,24,interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringActionRuleRequirements.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Tooling/Refactoring/RefactoringActionRuleRequirements.h,1,['Refactor'],['RefactoringRuleContext']
Modifiability,"// Experimental option to eagerly invalidate more analyses. This has the; // potential to decrease max memory usage in exchange for more compile time.; // This may affect codegen due to either passes using analyses only when; // cached, or invalidating and recalculating an analysis that was; // stale/imprecise but still valid. Currently this invalidates all function; // analyses after various module->function or cgscc->function adaptors in the; // default pipelines.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h:432,adapt,adaptors,432,interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/Passes/PassBuilder.h,1,['adapt'],['adaptors']
Modifiability,"// Experimental: RooAbsMinimizerFcn config that can only be set in constructor; // argument is ignored when parallelize is 0",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMinimizer.h:36,config,config,36,roofit/roofitcore/inc/RooMinimizer.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/inc/RooMinimizer.h,2,['config'],['config']
Modifiability,// Explicit or partial specializations do not inherit; // the code_seg attribute from the primary template.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp:46,inherit,inherit,46,interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,1,['inherit'],['inherit']
Modifiability,// Explicit or partial specializations do not inherit; // the section attribute from the primary template.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp:46,inherit,inherit,46,interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDeclAttr.cpp,1,['inherit'],['inherit']
Modifiability,// Explicit specializations of a member template do not inherit deleted; // status from the parent member template that they are specializing.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:56,inherit,inherit,56,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['inherit'],['inherit']
Modifiability,// Explicit specializations of member functions of class templates do not; // inherit '=delete' from the member function they are specializing.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:78,inherit,inherit,78,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,1,['inherit'],['inherit']
Modifiability,// Explicitly instantiate a variable template.; // C++1y [dcl.spec.auto]p6:; // ... A program that uses auto or decltype(auto) in a context not; // explicitly allowed in this section is ill-formed.; //; // This includes auto-typed variable template instantiations.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp:28,variab,variable,28,interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaTemplate.cpp,2,['variab'],['variable']
Modifiability,// Explicitly placing any variable in the small data section overrides; // the global -G value.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsTargetObjectFile.cpp:26,variab,variable,26,interpreter/llvm-project/llvm/lib/Target/Mips/MipsTargetObjectFile.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Mips/MipsTargetObjectFile.cpp,2,['variab'],['variable']
Modifiability,"// Explicitly rewrite include of own declaration file to string; // any directory prefixes, copy all other lines verbatim in stl string",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:14,rewrite,rewrite,14,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,1,['rewrite'],['rewrite']
Modifiability,// Explicitly specified attributes and local variables with predetermined; // attributes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp:45,variab,variables,45,interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaOpenMP.cpp,2,['variab'],['variables']
Modifiability,// Explicitly zero-extend the input to 32-bit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp:19,extend,extend,19,interpreter/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86FastISel.cpp,1,['extend'],['extend']
Modifiability,"// Export referenced functions and variables. We don't export/promote; // objects referenced by writeonly variable initializer, because; // we convert such variables initializers to ""zeroinitializer"".; // See processGlobalForThinLTO.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp:35,variab,variables,35,interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionImport.cpp,3,['variab'],"['variable', 'variables']"
Modifiability,// Export this function to enforce exporting this static variable even; // if it is not used in this compilation unit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:57,variab,variable,57,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,// Expose a base class for LiveDebugValues interfaces to inherit from. This; // allows the generic LiveDebugValues pass handles to call into the; // implementation.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/LiveDebugValues.h:57,inherit,inherit,57,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/LiveDebugValues.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugValues/LiveDebugValues.h,1,['inherit'],['inherit']
Modifiability,"// Expose the internal Workspace; /// Process a configuration file",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HLFactory.h:48,config,configuration,48,roofit/roostats/inc/RooStats/HLFactory.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roostats/inc/RooStats/HLFactory.h,1,['config'],['configuration']
Modifiability,// Expose the switch type we're parameterized with to the iterator.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h:32,parameteriz,parameterized,32,interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Instructions.h,1,['parameteriz'],['parameterized']
Modifiability,// Expression is trivial if it does not modify the extender.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp:51,extend,extender,51,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonConstExtenders.cpp,1,['extend'],['extender']
Modifiability,// Expressions default to 'id' when we're in a debugger; // and we are assigning it to a variable of Objective-C pointer type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp:89,variab,variable,89,interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaDecl.cpp,1,['variab'],['variable']
Modifiability,"// Ext is short, need to extend it with 0s or sign bit.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitTracker.cpp:25,extend,extend,25,interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitTracker.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/Hexagon/HexagonBitTracker.cpp,1,['extend'],['extend']
Modifiability,// Extend 32 bit write value to 64 bit to pass to write.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:3,Extend,Extend,3,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,1,['Extend'],['Extend']
Modifiability,// Extend BValNo by merging in IntA live segments of AValNo. Val# definition; // is updated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['Extend'],['Extend']
Modifiability,// Extend GPR scalars Op0 and Op1 to doublewords and return a v2i64; // vector for them.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,1,['Extend'],['Extend']
Modifiability,// Extend IntB to the EndPoints of its original live interval.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/RegisterCoalescer.cpp,1,['Extend'],['Extend']
Modifiability,// Extend OldIdxIn.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,1,['Extend'],['Extend']
Modifiability,// Extend SetCC uses if necessary.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/DAGCombiner.cpp,1,['Extend'],['Extend']
Modifiability,// Extend ToReg's liveness.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyMemIntrinsicResults.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyMemIntrinsicResults.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/WebAssemblyMemIntrinsicResults.cpp,1,['Extend'],['Extend']
Modifiability,// Extend VT if BWI is not supported.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['Extend'],['Extend']
Modifiability,// Extend VT if the scalar type is i8/i16 and BWI is not supported.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['Extend'],['Extend']
Modifiability,"// Extend all defs, and possibly add new ones along the way.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveDebugVariables.cpp,1,['Extend'],['Extend']
Modifiability,// Extend all ops to max type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Analysis/ScalarEvolution.cpp,1,['Extend'],['Extend']
Modifiability,// Extend back to 64-bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUISelLowering.cpp,2,['Extend'],['Extend']
Modifiability,// Extend by adding rubbish bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:3,Extend,Extend,3,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,1,['Extend'],['Extend']
Modifiability,// Extend by adding zero bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:3,Extend,Extend,3,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,1,['Extend'],['Extend']
Modifiability,// Extend by copying the sign bit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h:3,Extend,Extend,3,interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/CodeGen/TargetLowering.h,1,['Extend'],['Extend']
Modifiability,// Extend constant shift amount to vXi16 (it doesn't matter if the type; // isn't legal).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['Extend'],['Extend']
Modifiability,"// Extend coordinates and weights with one extra point before the first bin; // and one extra point after the last bin. This means the original histogram; // bins span elements 1 to nBins in coordsExt and weightsExt",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx:3,Extend,Extend,3,roofit/roofitcore/src/RooDataHist.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooDataHist.cxx,2,['Extend'],['Extend']
Modifiability,// Extend each of the leaves.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/SuffixTree.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Support/SuffixTree.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/SuffixTree.cpp,1,['Extend'],['Extend']
Modifiability,// Extend each operand to the encompassing type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:3,Extend,Extend,3,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,1,['Extend'],['Extend']
Modifiability,// Extend everything to 80 bits to force it to be done on x87.; // TODO: Are there any fast-math-flags to propagate here?,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['Extend'],['Extend']
Modifiability,// Extend from nxvmf16 to nxvmf32.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp,1,['Extend'],['Extend']
Modifiability,// Extend from nxvmf16 to nxvmf64.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp,1,['Extend'],['Extend']
Modifiability,// Extend from nxvmf32 to nxvmf64.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64TargetTransformInfo.cpp,1,['Extend'],['Extend']
Modifiability,// Extend in register from the number of bits this divide really is.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUCodeGenPrepare.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUCodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUCodeGenPrepare.cpp,1,['Extend'],['Extend']
Modifiability,// Extend in the low bits and propagate the sign bit to the high half.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp,1,['Extend'],['Extend']
Modifiability,"// Extend init to result vector length, and then shuffle its contribution; // to the vector initializer into V.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp:3,Extend,Extend,3,interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExprScalar.cpp,1,['Extend'],['Extend']
Modifiability,"// Extend inputs to XLen, and shift by 32. This will add 64 trailing zeros; // to the full 128-bit clmul result of multiplying two xlen values.; // Perform clmulr or clmulh on the shifted values. Finally, extract the; // upper 32 bits.; //; // The alternative is to mask the inputs to 32 bits and use clmul, but; // that requires two shifts to mask each input without zext.w.; // FIXME: If the inputs are known zero extended or could be freely; // zero extended, the mask form would be better.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/RISCV/RISCVISelLowering.cpp,3,"['Extend', 'extend']","['Extend', 'extended']"
Modifiability,// Extend instructions,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMBaseInfo.h:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMBaseInfo.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MCTargetDesc/ARMBaseInfo.h,1,['Extend'],['Extend']
Modifiability,// Extend intervals to reach all uses in WorkList.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,1,['Extend'],['Extend']
Modifiability,"// Extend into the condition before we propagate through it below - this is; // needed to handle macros that generate the ""if"" but not the condition.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.cpp:3,Extend,Extend,3,interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CoverageMappingGen.cpp,1,['Extend'],['Extend']
Modifiability,// Extend leafs,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVELaneInterleavingPass.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/ARM/MVELaneInterleavingPass.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/MVELaneInterleavingPass.cpp,1,['Extend'],['Extend']
Modifiability,"// Extend lifetimes of objects returned by function calls and message; // sends.; // FIXME: We should do this in other cases in which temporaries are; // created including arguments of non-ARC types (e.g., C++; // temporaries).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp:3,Extend,Extend,3,interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBuiltin.cpp,1,['Extend'],['Extend']
Modifiability,"// Extend live ranges to be live-out for successor PHI values.; // Visit each PHI def slot in the parent live interval. If the def is dead,; // remove it. Otherwise, extend the live interval to reach the end indexes; // of all predecessor blocks.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.cpp,2,"['Extend', 'extend']","['Extend', 'extend']"
Modifiability,// Extend liveness to Idx if the instruction reads reg.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SplitKit.cpp,1,['Extend'],['Extend']
Modifiability,// Extend loaded pointer if necessary (i.e. if ILP32) to DAG pointer.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['Extend'],['Extend']
Modifiability,// Extend mask to match new destination vector size with; // undef values.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp,1,['Extend'],['Extend']
Modifiability,// Extend masks if we truncated above.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelDAGToDAG.cpp,1,['Extend'],['Extend']
Modifiability,// Extend name with /,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/AsmParser/WebAssemblyAsmParser.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/WebAssembly/AsmParser/WebAssemblyAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/WebAssembly/AsmParser/WebAssemblyAsmParser.cpp,1,['Extend'],['Extend']
Modifiability,"// Extend named set",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx:3,Extend,Extend,3,roofit/roofitcore/src/RooWorkspace.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/roofit/roofitcore/src/RooWorkspace.cxx,1,['Extend'],['Extend']
Modifiability,"// Extend number of dimensions which can be stored in the object",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RFrame.hxx:3,Extend,Extend,3,graf2d/gpadv7/inc/ROOT/RFrame.hxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf2d/gpadv7/inc/ROOT/RFrame.hxx,1,['Extend'],['Extend']
Modifiability,// Extend or truncate the argument to be an i32 value for the call.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMSelectionDAGInfo.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/ARM/ARMSelectionDAGInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/ARMSelectionDAGInfo.cpp,1,['Extend'],['Extend']
Modifiability,// Extend or truncate the index type to 32 or 64-bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp:3,Extend,Extend,3,interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGExpr.cpp,1,['Extend'],['Extend']
Modifiability,// Extend or truncate to MVT::i8 first.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['Extend'],['Extend']
Modifiability,"// Extend pick region for large point-sizes or line-widths.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx:3,Extend,Extend,3,graf3d/gl/src/TGLUtil.cxx,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/graf3d/gl/src/TGLUtil.cxx,1,['Extend'],['Extend']
Modifiability,// Extend precision of numeric type,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h:3,Extend,Extend,3,interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/include/clang/Analysis/Analyses/ThreadSafetyTIL.h,1,['Extend'],['Extend']
Modifiability,// Extend range state machines to cover this element in case there is an; // undef in the middle of the range.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,1,['Extend'],['Extend']
Modifiability,// Extend result to original width.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanTransforms.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanTransforms.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/Vectorize/VPlanTransforms.cpp,1,['Extend'],['Extend']
Modifiability,// Extend shift amounts.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['Extend'],['Extend']
Modifiability,// Extend sign.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600ISelLowering.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/R600ISelLowering.cpp,1,['Extend'],['Extend']
Modifiability,// Extend tbaa Metadata node to apply to a series of bytes of length len.; // A size of -1 denotes an unknown size.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Metadata.h:3,Extend,Extend,3,interpreter/llvm-project/llvm/include/llvm/IR/Metadata.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/include/llvm/IR/Metadata.h,1,['Extend'],['Extend']
Modifiability,// Extend the LValue path with the member pointer's path.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp:3,Extend,Extend,3,interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/AST/ExprConstant.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the amount to i32.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/IntrinsicLowering.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/IntrinsicLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/IntrinsicLowering.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the analysis by looking upwards.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionAttrs.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionAttrs.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/IPO/FunctionAttrs.cpp,2,['Extend'],['Extend']
Modifiability,"// Extend the byte value to the larger type, and then multiply by a magic; // value 0x010101... in order to replicate it across every byte.; // Unless it's zero, in which case just emit a larger G_CONSTANT 0.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the current clause.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertHardClauses.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertHardClauses.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/SIInsertHardClauses.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the current implicit IT block to have one more slot with the given; // condition code.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/ARM/AsmParser/ARMAsmParser.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the current span.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Syntax/ComputeReplacements.cpp:3,Extend,Extend,3,interpreter/llvm-project/clang/lib/Tooling/Syntax/ComputeReplacements.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Tooling/Syntax/ComputeReplacements.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the element if necessary (e.g. an i8 is loaded; // into an i16 register),MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/NVPTX/NVPTXISelLowering.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the element to take zero padding into account.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/AsmPrinter.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the element type to match if needed.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the even f32 elements of vector operand 0 to produce a vector; // of f64 elements.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.h:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.h,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.h,1,['Extend'],['Extend']
Modifiability,// Extend the extraction length looking to match both the insertion of; // the second source and the remaining elements of the first.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the incoming operand of the SRL to 64-bit.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the incoming operand of the shift to 64-bits.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelDAGToDAG.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the input if necessary.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCFastISel.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the latency if needed. Equivalent to; // removePred(PredDep) + addPred(D).,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAG.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAG.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/ScheduleDAG.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the lifetime of the callback. We delayed this until here; // to avoid allocations in the hot path (which is where no typo correction; // occurs). Note that CorrectionCandidateCallback is polymorphic and; // initially stack-allocated.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp:3,Extend,Extend,3,interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Sema/SemaLookup.cpp,2,"['Extend', 'polymorphi']","['Extend', 'polymorphic']"
Modifiability,"// Extend the lifetime of the capture to the end of the scope enclosing the; // block expression except when the block decl is in the list of RetExpr's; // cleanup objects, in which case its lifetime ends after the full; // expression.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp:3,Extend,Extend,3,interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/CodeGen/CGBlocks.cpp,1,['Extend'],['Extend']
Modifiability,"// Extend the live interval of the addend source (it might end at the; // copy to be removed, or somewhere in between there and here). This; // is necessary only if it is a physical register.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCVSXFMAMutate.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCVSXFMAMutate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCVSXFMAMutate.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the live intervals of the killed product operand to hold the; // fma result.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCVSXFMAMutate.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCVSXFMAMutate.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/PowerPC/PPCVSXFMAMutate.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the live range for VNI to be live at Idx.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the liveness of the extension result.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/PeepholeOptimizer.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the narrower operand to the type of the wider operand.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineCompares.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the range of the previous entry.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/EHStreamer.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/EHStreamer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/AsmPrinter/EHStreamer.cpp,1,['Extend'],['Extend']
Modifiability,"// Extend the rotate APInt, so that the urem doesn't divide by 0.; // e.g. APInt(1, 32) would give APInt(1, 0).",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APInt.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Support/APInt.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Support/APInt.cpp,1,['Extend'],['Extend']
Modifiability,"// Extend the scope of the temporary cleaner if applicable.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp:3,Extend,Extend,3,interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/cling/lib/Interpreter/ValueExtractionSynthesizer.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the second operand into a vector the size of the destination.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/IR/AutoUpgrade.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the segment before NewIdx if necessary.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/LiveIntervals.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the shuffle mask with undef elements.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/X86/X86ISelLowering.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the signature with preprocessor options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp:3,Extend,Extend,3,interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the signature with the Swift version for API notes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp:3,Extend,Extend,3,interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the signature with the affecting debug options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp:3,Extend,Extend,3,interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,1,['Extend'],['Extend']
Modifiability,"// Extend the signature with the enabled sanitizers, if at least one is; // enabled. Sanitizers which cannot affect AST generation aren't hashed.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp:3,Extend,Extend,3,interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the signature with the language options,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp:3,Extend,Extend,3,interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the signature with the module file extensions.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp:3,Extend,Extend,3,interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the signature with the sysroot and other header search options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp:3,Extend,Extend,3,interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the signature with the target options.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp:3,Extend,Extend,3,interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the signature with the user build path.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp:3,Extend,Extend,3,interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/clang/lib/Frontend/CompilerInvocation.cpp,1,['Extend'],['Extend']
Modifiability,"// Extend the source operand to 32 bits and prepare it for the inner loop.; // ATOMIC_SWAPW uses RISBG to rotate the field left, but all other; // operations require the source to be shifted in advance. (This shift; // can be folded if the source is constant.) For AND and NAND, the lower; // bits must be set, while for other opcodes they should be left clear.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/SystemZ/SystemZISelLowering.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the source to a wider type.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/GlobalISel/LegalizerHelper.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the source vector by one step.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,2,['Extend'],['Extend']
Modifiability,"// Extend the switch condition and case constants using the target preferred; // extend unless the switch condition is a function argument with an extend; // attribute. In that case, we can avoid an unnecessary mask/extension by; // matching the argument extension instead.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/CodeGenPrepare.cpp,3,"['Extend', 'extend']","['Extend', 'extend']"
Modifiability,// Extend the trip count to at least the result VT.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/SelectionDAGBuilder.cpp,1,['Extend'],['Extend']
Modifiability,// Extend the unpacked offset vector to 64-bit lanes.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AArch64/AArch64ISelLowering.cpp,1,['Extend'],['Extend']
Modifiability,"// Extend the value, that is being shifted, to the entire stack slot's width.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeIntegerTypes.cpp,1,['Extend'],['Extend']
Modifiability,// Extend those vector halves the rest of the way.,MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/CodeGen/SelectionDAG/LegalizeVectorTypes.cpp,2,['Extend'],['Extend']
Modifiability,"// Extend to 32-bit, and then extend the low half.",MatchSource.CODE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp:3,Extend,Extend,3,interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/interpreter/llvm-project/llvm/lib/Target/AMDGPU/AMDGPURegisterBankInfo.cpp,2,"['Extend', 'extend']","['Extend', 'extend']"
